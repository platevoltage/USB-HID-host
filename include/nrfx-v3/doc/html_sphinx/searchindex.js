Search.setIndex({"docnames": ["api_reference", "changelog", "drivers/aar/hal", "drivers/aar/index", "drivers/acl/hal", "drivers/acl/index", "drivers/adc/driver", "drivers/adc/hal", "drivers/adc/index", "drivers/auxpll/hal", "drivers/bellboard/driver", "drivers/bellboard/hal", "drivers/bellboard/haly", "drivers/bellboard/index", "drivers/bprot/hal", "drivers/bprot/index", "drivers/cache/hal", "drivers/cache/index", "drivers/ccm/hal", "drivers/ccm/index", "drivers/clock/driver", "drivers/clock/hal", "drivers/clock/index", "drivers/comp/driver", "drivers/comp/hal", "drivers/comp/haly", "drivers/comp/index", "drivers/cracen/hal", "drivers/cracen/index", "drivers/ctrlap/hal", "drivers/ctrlap/index", "drivers/dcnf/hal", "drivers/dcnf/index", "drivers/dppi/driver", "drivers/dppi/hal", "drivers/dppi/haly", "drivers/dppi/index", "drivers/ecb/hal", "drivers/ecb/index", "drivers/egu/driver", "drivers/egu/hal", "drivers/egu/index", "drivers/exmif/hal", "drivers/exmif/index", "drivers/ficr/hal", "drivers/fpu/hal", "drivers/fpu/index", "drivers/glitchdet/hal", "drivers/gpio/hal", "drivers/gpio/haly", "drivers/gpio/index", "drivers/gpiote/driver", "drivers/gpiote/hal", "drivers/gpiote/haly", "drivers/gpiote/index", "drivers/grtc/driver", "drivers/grtc/hal", "drivers/grtc/haly", "drivers/grtc/index", "drivers/hsfll/hal", "drivers/i2s/driver", "drivers/i2s/hal", "drivers/i2s/haly", "drivers/i2s/index", "drivers/icr/index", "drivers/index", "drivers/ipc/driver", "drivers/ipc/hal", "drivers/ipc/index", "drivers/ipct/hal", "drivers/ipct/index", "drivers/kmu/hal", "drivers/kmu/index", "drivers/lpcomp/driver", "drivers/lpcomp/hal", "drivers/lpcomp/haly", "drivers/lpcomp/index", "drivers/lrc/hal", "drivers/lrc/index", "drivers/memconf/hal", "drivers/memconf/index", "drivers/mpc/hal", "drivers/mpc/index", "drivers/mpu/hal", "drivers/mpu/index", "drivers/mutex/hal", "drivers/mutex/index", "drivers/mvdma/hal", "drivers/mvdma/haly", "drivers/mvdma/index", "drivers/mwu/hal", "drivers/mwu/index", "drivers/nfct/driver", "drivers/nfct/hal", "drivers/nfct/index", "drivers/nvmc/driver", "drivers/nvmc/hal", "drivers/nvmc/index", "drivers/oscillators/hal", "drivers/pdm/driver", "drivers/pdm/hal", "drivers/pdm/haly", "drivers/pdm/index", "drivers/power/driver", "drivers/power/hal", "drivers/power/index", "drivers/ppi/driver", "drivers/ppi/hal", "drivers/ppi/index", "drivers/ppib/hal", "drivers/ppib/index", "drivers/pwm/driver", "drivers/pwm/hal", "drivers/pwm/haly", "drivers/pwm/index", "drivers/qdec/driver", "drivers/qdec/hal", "drivers/qdec/haly", "drivers/qdec/index", "drivers/qspi/driver", "drivers/qspi/hal", "drivers/qspi/index", "drivers/radio/hal", "drivers/radio/index", "drivers/ramc/hal", "drivers/ramc/index", "drivers/regulators/hal", "drivers/reset/hal", "drivers/resetinfo/hal", "drivers/resetinfo/index", "drivers/rng/driver", "drivers/rng/hal", "drivers/rng/index", "drivers/rramc/driver", "drivers/rramc/hal", "drivers/rramc/haly", "drivers/rramc/index", "drivers/rtc/driver", "drivers/rtc/hal", "drivers/rtc/haly", "drivers/rtc/index", "drivers/saadc/driver", "drivers/saadc/hal", "drivers/saadc/haly", "drivers/saadc/index", "drivers/spi/driver", "drivers/spi/hal", "drivers/spi/index", "drivers/spim/driver", "drivers/spim/hal", "drivers/spim/haly", "drivers/spim/index", "drivers/spis/driver", "drivers/spis/hal", "drivers/spis/index", "drivers/spu/hal", "drivers/spu/index", "drivers/stm/hal", "drivers/stm/index", "drivers/systick/driver", "drivers/systick/hal", "drivers/systick/index", "drivers/tampc/hal", "drivers/tampc/index", "drivers/tbm/driver", "drivers/tbm/hal", "drivers/tbm/haly", "drivers/tbm/index", "drivers/tdm/hal", "drivers/tdm/index", "drivers/temp/driver", "drivers/temp/hal", "drivers/temp/haly", "drivers/temp/index", "drivers/timer/driver", "drivers/timer/hal", "drivers/timer/haly", "drivers/timer/index", "drivers/twi/driver", "drivers/twi/hal", "drivers/twi/index", "drivers/twim/driver", "drivers/twim/hal", "drivers/twim/haly", "drivers/twim/index", "drivers/twis/driver", "drivers/twis/hal", "drivers/twis/index", "drivers/uart/driver", "drivers/uart/hal", "drivers/uart/index", "drivers/uarte/driver", "drivers/uarte/hal", "drivers/uarte/haly", "drivers/uarte/index", "drivers/uicr/hal", "drivers/usbd/driver", "drivers/usbd/hal", "drivers/usbd/index", "drivers/usbhs/hal", "drivers/usbhs/index", "drivers/usbreg/driver", "drivers/usbreg/hal", "drivers/vmc/hal", "drivers/vmc/index", "drivers/vpr/clic/hal", "drivers/vpr/csr/hal", "drivers/vpr/csr/vevif/hal", "drivers/vpr/csr/vio/hal", "drivers/vpr/csr/vtim/hal", "drivers/vpr/hal", "drivers/vpr/haly", "drivers/vpr/index", "drivers/vpr/vevif/driver", "drivers/vreqctrl/hal", "drivers/wdt/driver", "drivers/wdt/hal", "drivers/wdt/haly", "drivers/wdt/index", "drv_supp_matrix", "index", "nrf51_series", "nrf52805", "nrf52810", "nrf52820", "nrf52832", "nrf52833", "nrf52840", "nrf5340", "nrf54h20", "nrf54l15_enga", "nrf91_series", "nrfx_api/atomic", "nrfx_api/bitmask", "nrfx_api/common", "nrfx_api/common_configuration", "nrfx_api/common_nrfy", "nrfx_api/coredep", "nrfx_api/error_codes", "nrfx_api/flag32_allocator", "nrfx_api/glue", "nrfx_api/gppi", "nrfx_api/index", "nrfx_api/interconnect_apb", "nrfx_api/interconnect_ipct", "nrfx_api/log", "nrfx_api/prs", "nrfx_api/ram_ctrl", "nrfx_api/reset_reason", "nrfx_api/vdma"], "filenames": ["api_reference.rst", "changelog.rst", "drivers/aar/hal.rst", "drivers/aar/index.rst", "drivers/acl/hal.rst", "drivers/acl/index.rst", "drivers/adc/driver.rst", "drivers/adc/hal.rst", "drivers/adc/index.rst", "drivers/auxpll/hal.rst", "drivers/bellboard/driver.rst", "drivers/bellboard/hal.rst", "drivers/bellboard/haly.rst", "drivers/bellboard/index.rst", "drivers/bprot/hal.rst", "drivers/bprot/index.rst", "drivers/cache/hal.rst", "drivers/cache/index.rst", "drivers/ccm/hal.rst", "drivers/ccm/index.rst", "drivers/clock/driver.rst", "drivers/clock/hal.rst", "drivers/clock/index.rst", "drivers/comp/driver.rst", "drivers/comp/hal.rst", "drivers/comp/haly.rst", "drivers/comp/index.rst", "drivers/cracen/hal.rst", "drivers/cracen/index.rst", "drivers/ctrlap/hal.rst", "drivers/ctrlap/index.rst", "drivers/dcnf/hal.rst", "drivers/dcnf/index.rst", "drivers/dppi/driver.rst", "drivers/dppi/hal.rst", "drivers/dppi/haly.rst", "drivers/dppi/index.rst", "drivers/ecb/hal.rst", "drivers/ecb/index.rst", "drivers/egu/driver.rst", "drivers/egu/hal.rst", "drivers/egu/index.rst", "drivers/exmif/hal.rst", "drivers/exmif/index.rst", "drivers/ficr/hal.rst", "drivers/fpu/hal.rst", "drivers/fpu/index.rst", "drivers/glitchdet/hal.rst", "drivers/gpio/hal.rst", "drivers/gpio/haly.rst", "drivers/gpio/index.rst", "drivers/gpiote/driver.rst", "drivers/gpiote/hal.rst", "drivers/gpiote/haly.rst", "drivers/gpiote/index.rst", "drivers/grtc/driver.rst", "drivers/grtc/hal.rst", "drivers/grtc/haly.rst", "drivers/grtc/index.rst", "drivers/hsfll/hal.rst", "drivers/i2s/driver.rst", "drivers/i2s/hal.rst", "drivers/i2s/haly.rst", "drivers/i2s/index.rst", "drivers/icr/index.rst", "drivers/index.rst", "drivers/ipc/driver.rst", "drivers/ipc/hal.rst", "drivers/ipc/index.rst", "drivers/ipct/hal.rst", "drivers/ipct/index.rst", "drivers/kmu/hal.rst", "drivers/kmu/index.rst", "drivers/lpcomp/driver.rst", "drivers/lpcomp/hal.rst", "drivers/lpcomp/haly.rst", "drivers/lpcomp/index.rst", "drivers/lrc/hal.rst", "drivers/lrc/index.rst", "drivers/memconf/hal.rst", "drivers/memconf/index.rst", "drivers/mpc/hal.rst", "drivers/mpc/index.rst", "drivers/mpu/hal.rst", "drivers/mpu/index.rst", "drivers/mutex/hal.rst", "drivers/mutex/index.rst", "drivers/mvdma/hal.rst", "drivers/mvdma/haly.rst", "drivers/mvdma/index.rst", "drivers/mwu/hal.rst", "drivers/mwu/index.rst", "drivers/nfct/driver.rst", "drivers/nfct/hal.rst", "drivers/nfct/index.rst", "drivers/nvmc/driver.rst", "drivers/nvmc/hal.rst", "drivers/nvmc/index.rst", "drivers/oscillators/hal.rst", "drivers/pdm/driver.rst", "drivers/pdm/hal.rst", "drivers/pdm/haly.rst", "drivers/pdm/index.rst", "drivers/power/driver.rst", "drivers/power/hal.rst", "drivers/power/index.rst", "drivers/ppi/driver.rst", "drivers/ppi/hal.rst", "drivers/ppi/index.rst", "drivers/ppib/hal.rst", "drivers/ppib/index.rst", "drivers/pwm/driver.rst", "drivers/pwm/hal.rst", "drivers/pwm/haly.rst", "drivers/pwm/index.rst", "drivers/qdec/driver.rst", "drivers/qdec/hal.rst", "drivers/qdec/haly.rst", "drivers/qdec/index.rst", "drivers/qspi/driver.rst", "drivers/qspi/hal.rst", "drivers/qspi/index.rst", "drivers/radio/hal.rst", "drivers/radio/index.rst", "drivers/ramc/hal.rst", "drivers/ramc/index.rst", "drivers/regulators/hal.rst", "drivers/reset/hal.rst", "drivers/resetinfo/hal.rst", "drivers/resetinfo/index.rst", "drivers/rng/driver.rst", "drivers/rng/hal.rst", "drivers/rng/index.rst", "drivers/rramc/driver.rst", "drivers/rramc/hal.rst", "drivers/rramc/haly.rst", "drivers/rramc/index.rst", "drivers/rtc/driver.rst", "drivers/rtc/hal.rst", "drivers/rtc/haly.rst", "drivers/rtc/index.rst", "drivers/saadc/driver.rst", "drivers/saadc/hal.rst", "drivers/saadc/haly.rst", "drivers/saadc/index.rst", "drivers/spi/driver.rst", "drivers/spi/hal.rst", "drivers/spi/index.rst", "drivers/spim/driver.rst", "drivers/spim/hal.rst", "drivers/spim/haly.rst", "drivers/spim/index.rst", "drivers/spis/driver.rst", "drivers/spis/hal.rst", "drivers/spis/index.rst", "drivers/spu/hal.rst", "drivers/spu/index.rst", "drivers/stm/hal.rst", "drivers/stm/index.rst", "drivers/systick/driver.rst", "drivers/systick/hal.rst", "drivers/systick/index.rst", "drivers/tampc/hal.rst", "drivers/tampc/index.rst", "drivers/tbm/driver.rst", "drivers/tbm/hal.rst", "drivers/tbm/haly.rst", "drivers/tbm/index.rst", "drivers/tdm/hal.rst", "drivers/tdm/index.rst", "drivers/temp/driver.rst", "drivers/temp/hal.rst", "drivers/temp/haly.rst", "drivers/temp/index.rst", "drivers/timer/driver.rst", "drivers/timer/hal.rst", "drivers/timer/haly.rst", "drivers/timer/index.rst", "drivers/twi/driver.rst", "drivers/twi/hal.rst", "drivers/twi/index.rst", "drivers/twim/driver.rst", "drivers/twim/hal.rst", "drivers/twim/haly.rst", "drivers/twim/index.rst", "drivers/twis/driver.rst", "drivers/twis/hal.rst", "drivers/twis/index.rst", "drivers/uart/driver.rst", "drivers/uart/hal.rst", "drivers/uart/index.rst", "drivers/uarte/driver.rst", "drivers/uarte/hal.rst", "drivers/uarte/haly.rst", "drivers/uarte/index.rst", "drivers/uicr/hal.rst", "drivers/usbd/driver.rst", "drivers/usbd/hal.rst", "drivers/usbd/index.rst", "drivers/usbhs/hal.rst", "drivers/usbhs/index.rst", "drivers/usbreg/driver.rst", "drivers/usbreg/hal.rst", "drivers/vmc/hal.rst", "drivers/vmc/index.rst", "drivers/vpr/clic/hal.rst", "drivers/vpr/csr/hal.rst", "drivers/vpr/csr/vevif/hal.rst", "drivers/vpr/csr/vio/hal.rst", "drivers/vpr/csr/vtim/hal.rst", "drivers/vpr/hal.rst", "drivers/vpr/haly.rst", "drivers/vpr/index.rst", "drivers/vpr/vevif/driver.rst", "drivers/vreqctrl/hal.rst", "drivers/wdt/driver.rst", "drivers/wdt/hal.rst", "drivers/wdt/haly.rst", "drivers/wdt/index.rst", "drv_supp_matrix.rst", "index.rst", "nrf51_series.rst", "nrf52805.rst", "nrf52810.rst", "nrf52820.rst", "nrf52832.rst", "nrf52833.rst", "nrf52840.rst", "nrf5340.rst", "nrf54h20.rst", "nrf54l15_enga.rst", "nrf91_series.rst", "nrfx_api/atomic.rst", "nrfx_api/bitmask.rst", "nrfx_api/common.rst", "nrfx_api/common_configuration.rst", "nrfx_api/common_nrfy.rst", "nrfx_api/coredep.rst", "nrfx_api/error_codes.rst", "nrfx_api/flag32_allocator.rst", "nrfx_api/glue.rst", "nrfx_api/gppi.rst", "nrfx_api/index.rst", "nrfx_api/interconnect_apb.rst", "nrfx_api/interconnect_ipct.rst", "nrfx_api/log.rst", "nrfx_api/prs.rst", "nrfx_api/ram_ctrl.rst", "nrfx_api/reset_reason.rst", "nrfx_api/vdma.rst"], "titles": ["API Reference", "Changelog", "AAR HAL", "AAR", "ACL HAL", "ACL", "ADC driver", "ADC HAL", "ADC", "AUXPLL HAL", "BELLBOARD driver", "BELLBOARD HAL", "BELLBOARD HALY", "BELLBOARD", "BPROT HAL", "BPROT", "CACHE HAL", "CACHE", "CCM HAL", "CCM", "CLOCK driver", "CLOCK HAL", "CLOCK", "COMP driver", "COMP HAL", "COMP HALY", "COMP", "CRACEN HAL", "CRACEN", "CTRL-AP HAL", "CTRL-AP", "DCNF HAL", "DCNF", "DPPI driver", "DPPI HAL", "DPPI HALY", "DPPI", "ECB HAL", "ECB", "EGU driver", "EGU HAL", "EGU", "EXMIF HAL", "EXMIF", "FICR HAL", "FPU HAL", "FPU", "GLITCHDET HAL", "GPIO HAL", "GPIO HALY", "GPIO", "GPIOTE driver", "GPIOTE HAL", "GPIOTE HALY", "GPIOTE", "GRTC driver", "GRTC HAL", "GRTC HALY", "GRTC", "HSFLL HAL", "I2S driver", "I2S HAL", "I2S HALY", "I2S", "ICR", "Drivers", "IPC driver", "IPC HAL", "IPC", "IPCT HAL", "IPCT", "KMU HAL", "KMU", "LPCOMP driver", "LPCOMP HAL", "LPCOMP HALY", "LPCOMP", "LRCCONF HAL", "LRC", "MEMCONF HAL", "MEMCONF", "MPC HAL", "MPC", "MPU HAL", "MPU", "MUTEX HAL", "MUTEX", "MVDMA HAL", "MVDMA HALY", "MVDMA", "MWU HAL", "MWU", "NFCT driver", "NFCT HAL", "NFCT", "NVMC driver", "NVMC HAL", "NVMC", "OSCILLATORS HAL", "PDM driver", "PDM HAL", "PDM HALY", "PDM", "POWER driver", "POWER HAL", "POWER", "PPI driver", "PPI HAL", "PPI", "PPIB HAL", "PPIB", "PWM driver", "PWM HAL", "PWM HALY", "PWM", "QDEC driver", "QDEC HAL", "QDEC HALY", "QDEC", "QSPI driver", "QSPI HAL", "QSPI", "RADIO HAL", "RADIO", "RAMC HAL", "RAMC", "REGULATORS HAL", "RESET HAL", "RESETINFO HAL", "RESETINFO", "RNG driver", "RNG HAL", "RNG", "RRAMC driver", "RRAMC HAL", "RRAMC HALY", "RRAMC", "RTC driver", "RTC HAL", "RTC HALY", "RTC", "SAADC driver", "SAADC HAL", "SAADC HALY", "SAADC", "SPI driver", "SPI HAL", "SPI", "SPIM driver", "SPIM HAL", "SPIM HALY", "SPIM", "SPIS driver", "SPIS HAL", "SPIS", "SPU HAL", "SPU", "STM HAL", "STM", "SYSTICK driver", "SYSTICK HAL", "SYSTICK", "TAMPC HAL", "TAMPC", "TBM driver", "TBM HAL", "TBM HALY", "TBM", "TDM HAL", "TDM", "TEMP driver", "TEMP HAL", "TEMP HALY", "TEMP", "TIMER driver", "TIMER HAL", "TIMER HALY", "TIMER", "TWI driver", "TWI HAL", "TWI", "TWIM driver", "TWIM HAL", "TWIM HALY", "TWIM", "TWIS driver", "TWIS HAL", "TWIS", "UART driver", "UART HAL", "UART", "UARTE driver", "UARTE HAL", "UARTE HALY", "UARTE", "UICR HAL", "USBD driver", "USBD HAL", "USBD", "USBHS HAL", "USBHS", "USBREG driver", "USBREG HAL", "VMC HAL", "VMC", "VPR CLIC HAL", "VPR CSR HAL", "VPR CSR VEVIF HAL", "VPR CSR VIO HAL", "VPR CSR VTIM HAL", "VPR HAL", "VPR HALY", "VPR", "VEVIF driver", "VREQCTRL HAL", "WDT driver", "WDT HAL", "WDT HALY", "WDT", "Driver support overview", "Introduction and configuration", "nRF51 Series Drivers", "nRF52805 Drivers", "nRF52810/nRF52811 Drivers", "nRF52820 Drivers", "nRF52832 Drivers", "nRF52833 Drivers", "nRF52840 Drivers", "nRF5340 drivers", "nRF54H20 drivers", "nRF54L15 EngA drivers", "nRF91 Series drivers", "Atomic operations API", "Bitmask module", "Common module", "Common configuration", "Common nrfy module", "Core-dependent functionality", "Global Error Codes", "Generic flag allocator", "nrfx_glue.h", "Generic PPI Layer", "nrfx API", "APB bus support", "IPCT support", "nrfx_log.h", "Peripheral Resource Sharing (PRS)", "Generic RAM control layer", "Generic Reset Reason layer", "Generic Vector DMA layer"], "terms": {"driver": [0, 1, 8, 13, 22, 26, 36, 41, 54, 58, 62, 63, 68, 76, 94, 97, 101, 102, 105, 108, 113, 114, 117, 118, 121, 132, 136, 140, 144, 147, 150, 151, 154, 161, 167, 173, 177, 180, 183, 184, 187, 190, 193, 194, 198, 212, 218, 220, 234, 238, 241, 246], "aar": [0, 1, 65, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230], "hal": [0, 1, 3, 5, 8, 13, 15, 17, 19, 22, 26, 28, 30, 32, 36, 38, 41, 43, 46, 50, 51, 54, 58, 63, 64, 65, 68, 70, 72, 76, 78, 80, 82, 84, 86, 89, 91, 94, 97, 102, 105, 108, 110, 114, 118, 121, 123, 125, 129, 132, 136, 140, 144, 147, 151, 154, 156, 158, 161, 163, 167, 169, 173, 177, 180, 184, 187, 190, 194, 198, 200, 204, 212, 218, 234, 240], "acl": [0, 1, 65, 219, 224, 226, 227, 228], "adc": [0, 1, 65, 142, 219, 221], "bellboard": [0, 1, 65, 219, 229], "hali": [0, 1, 13, 26, 36, 50, 54, 58, 63, 65, 76, 89, 102, 114, 118, 136, 140, 144, 151, 167, 173, 177, 184, 194, 212, 218], "bprot": [0, 1, 65, 219, 222, 223, 225], "cach": [0, 1, 12, 25, 35, 49, 53, 57, 62, 65, 75, 88, 95, 96, 101, 113, 117, 135, 139, 143, 150, 166, 172, 176, 183, 191, 193, 211, 217, 219, 228, 229, 230, 240], "ccm": [0, 1, 65, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230], "clock": [0, 1, 9, 42, 48, 55, 56, 57, 59, 60, 61, 65, 77, 93, 98, 99, 100, 101, 111, 112, 113, 119, 120, 127, 133, 134, 145, 146, 148, 149, 150, 152, 153, 157, 160, 168, 175, 178, 179, 181, 182, 183, 186, 196, 197, 206, 219, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231], "auxpll": [0, 1, 22, 65, 219, 229], "hsfll": [0, 1, 22, 65], "oscil": [0, 1, 9, 21, 22, 56, 65, 196], "comp": [0, 1, 65, 73, 219, 223, 224, 225, 226, 227, 228, 229, 230], "cracen": [0, 1, 65, 162, 219, 230], "ctrl": [0, 48, 65, 128, 162, 219, 229, 248], "ap": [0, 65, 128, 162, 219, 229, 248], "dcnf": [0, 1, 65, 219, 228], "dppi": [0, 1, 51, 65, 67, 69, 109, 119, 141, 155, 195, 219, 228, 229, 230, 231, 240, 241, 243], "gener": [0, 1, 2, 6, 7, 9, 11, 12, 16, 18, 20, 21, 23, 24, 25, 27, 29, 36, 37, 39, 40, 45, 52, 53, 55, 56, 57, 59, 60, 61, 62, 65, 66, 67, 69, 71, 74, 75, 77, 81, 87, 88, 89, 90, 92, 93, 100, 101, 103, 104, 105, 108, 111, 112, 113, 116, 117, 119, 120, 122, 124, 127, 130, 131, 134, 135, 138, 139, 141, 142, 143, 146, 149, 150, 153, 155, 159, 162, 165, 166, 168, 170, 171, 172, 174, 175, 176, 178, 179, 181, 182, 183, 186, 188, 189, 191, 192, 193, 196, 197, 199, 202, 206, 210, 211, 216, 217, 234, 240, 242], "ppi": [0, 1, 6, 21, 36, 51, 65, 109, 111, 119, 122, 131, 137, 141, 142, 143, 148, 174, 181, 191, 219, 221, 222, 223, 224, 225, 226, 227, 240, 242], "layer": [0, 1, 2, 4, 7, 9, 11, 12, 14, 16, 18, 21, 24, 25, 27, 29, 31, 34, 35, 36, 37, 40, 42, 44, 45, 47, 48, 49, 52, 53, 56, 57, 59, 61, 62, 65, 67, 69, 71, 74, 75, 77, 79, 81, 83, 85, 87, 88, 89, 90, 92, 93, 96, 98, 100, 101, 104, 105, 107, 108, 109, 112, 113, 116, 117, 119, 120, 122, 124, 126, 127, 128, 131, 134, 135, 138, 139, 142, 143, 146, 149, 150, 153, 155, 157, 160, 162, 165, 166, 168, 171, 172, 175, 176, 179, 182, 183, 186, 189, 192, 193, 195, 197, 199, 202, 203, 205, 206, 207, 208, 209, 210, 211, 214, 216, 217, 220, 242], "ecb": [0, 1, 65, 219, 221, 222, 223, 224, 225, 226, 227, 228], "egu": [0, 1, 65, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 240], "exmif": [0, 1, 65, 219, 229], "fpu": [0, 1, 65, 219, 228], "gpio": [0, 1, 51, 60, 61, 62, 65, 93, 99, 101, 111, 113, 115, 117, 119, 122, 128, 145, 148, 150, 152, 155, 178, 181, 183, 185, 188, 191, 193, 195, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 248], "gpiot": [0, 1, 65, 152, 155, 195, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 240], "grtc": [0, 1, 48, 65, 127, 128, 155, 195, 219, 229, 230, 248], "i2": [0, 1, 65, 219, 225, 226, 227, 228, 230, 231], "icr": [0, 65, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "ficr": [0, 1, 64, 65, 92, 133], "uicr": [0, 1, 64, 65, 95, 96, 133, 134, 135], "ipc": [0, 1, 65, 219, 228, 231], "ipct": [0, 1, 65, 155, 195, 219, 229, 242], "kmu": [0, 1, 65, 219, 228, 230, 231], "lpcomp": [0, 1, 23, 65, 104, 127, 128, 219, 221, 225, 226, 227, 229, 230, 248], "lrc": [0, 65, 219, 229], "lrcconf": [0, 1, 65, 78], "memconf": [0, 1, 65, 219, 229, 230], "mpc": [0, 1, 65, 219, 229, 230], "mpu": [0, 1, 65, 219, 221], "mutex": [0, 1, 65, 219, 228, 229], "mvdma": [0, 1, 65, 219, 229], "vector": [0, 18, 65, 87, 89, 195, 205, 206, 220, 242], "dma": [0, 1, 2, 65, 87, 89, 100, 112, 119, 120, 142, 149, 153, 155, 157, 182, 186, 191, 192, 195, 196, 242], "mwu": [0, 1, 65, 219, 225, 226, 227], "nfct": [0, 1, 65, 219, 225, 226, 227, 228, 229, 230], "nvmc": [0, 1, 65, 219, 221, 222, 223, 224, 225, 226, 227, 228, 231], "pdm": [0, 1, 65, 219, 223, 225, 226, 227, 228, 229, 231], "power": [0, 1, 7, 20, 21, 23, 24, 25, 42, 52, 59, 65, 73, 74, 75, 77, 79, 92, 95, 119, 120, 122, 126, 127, 128, 133, 134, 135, 137, 148, 155, 175, 181, 191, 196, 197, 201, 203, 206, 214, 219, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 234, 247, 248], "reset": [0, 1, 14, 16, 42, 48, 49, 52, 53, 57, 65, 71, 81, 83, 87, 88, 104, 105, 116, 119, 120, 128, 155, 162, 175, 185, 196, 197, 199, 206, 210, 211, 215, 242], "reason": [0, 1, 65, 92, 104, 105, 127, 128, 159, 215, 242], "glitchdet": [0, 1, 65, 105, 219, 230], "usbreg": [0, 1, 65, 104, 105, 198], "regul": [0, 1, 59, 65, 103, 104, 105, 196, 201, 202], "vreqctrl": [0, 1, 65, 105], "ppib": [0, 1, 65, 219, 229, 230, 243], "pwm": [0, 1, 56, 57, 65, 219, 223, 225, 226, 227, 228, 229, 230, 231], "qdec": [0, 1, 65, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230], "qspi": [0, 1, 65, 219, 227, 228], "radio": [0, 1, 18, 48, 65, 126, 214, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230], "ramc": [0, 1, 65, 219, 229], "resetinfo": [0, 1, 65, 219, 229], "rng": [0, 1, 27, 65, 219, 221, 222, 223, 224, 225, 226, 227, 228], "rramc": [0, 1, 65, 195, 219, 230], "rtc": [0, 1, 65, 219, 221, 222, 223, 224, 225, 226, 227, 228, 231, 234], "saadc": [0, 1, 65, 219, 222, 223, 225, 226, 227, 228, 229, 230, 231], "spi": [0, 1, 65, 120, 148, 149, 150, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "spim": [0, 1, 65, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234], "spu": [0, 1, 65, 219, 228, 229, 230, 231], "stm": [0, 1, 65, 219, 229], "systick": [0, 1, 65, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "tampc": [0, 1, 65, 219, 229, 230], "tbm": [0, 1, 65, 219, 229], "tdm": [0, 1, 65, 219, 229], "temp": [0, 1, 65, 219, 221, 222, 223, 224, 225, 226, 227, 228, 230], "timer": [0, 1, 6, 20, 21, 55, 56, 57, 65, 92, 93, 128, 137, 141, 142, 143, 159, 160, 209, 215, 216, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 240, 248], "twi": [0, 1, 65, 182, 183, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 238], "twim": [0, 1, 65, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "uart": [0, 1, 65, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "usbd": [0, 1, 65, 219, 224, 226, 227, 228], "usbh": [0, 65, 219, 229], "vmc": [0, 1, 65, 219, 228, 231], "vpr": [0, 1, 48, 65, 213, 219, 229, 230], "vevif": [0, 1, 65, 212], "clic": [0, 65, 206, 212], "csr": [0, 65, 160, 210, 212], "vio": [0, 65, 209, 212], "vtim": [0, 1, 65, 212], "wdt": [0, 1, 65, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "nrfx": [0, 1, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234, 235, 240, 245], "atom": [0, 1, 240, 242], "oper": [0, 1, 16, 18, 23, 24, 25, 29, 45, 55, 56, 57, 59, 60, 61, 62, 71, 87, 88, 92, 93, 95, 96, 98, 99, 100, 101, 104, 111, 112, 113, 119, 120, 122, 133, 134, 135, 141, 142, 143, 149, 150, 152, 153, 155, 162, 168, 174, 175, 176, 178, 181, 182, 183, 185, 191, 196, 197, 233, 238, 240, 242], "bitmask": [0, 1, 11, 12, 14, 18, 29, 52, 56, 57, 66, 67, 69, 71, 79, 83, 87, 88, 104, 122, 127, 134, 138, 141, 142, 155, 162, 165, 175, 195, 203, 210, 215, 217, 236, 240, 242, 248], "modul": [0, 9, 20, 21, 23, 27, 31, 51, 66, 73, 81, 93, 99, 100, 103, 106, 111, 112, 115, 122, 130, 131, 137, 145, 148, 152, 178, 181, 185, 188, 191, 210, 215, 232, 237, 242, 246], "common": [0, 1, 60, 111, 220, 241, 242, 249], "configur": [0, 1, 2, 4, 6, 7, 9, 16, 18, 20, 21, 23, 24, 25, 31, 33, 34, 35, 37, 40, 42, 44, 45, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 66, 67, 69, 73, 74, 75, 77, 79, 81, 83, 87, 88, 90, 92, 93, 95, 96, 98, 99, 100, 101, 103, 104, 106, 109, 111, 112, 113, 115, 116, 117, 119, 120, 122, 126, 130, 131, 133, 134, 135, 137, 138, 139, 141, 142, 143, 145, 146, 148, 149, 150, 152, 153, 155, 157, 159, 160, 162, 164, 165, 166, 168, 170, 171, 172, 174, 175, 176, 178, 179, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 195, 196, 197, 201, 203, 205, 207, 208, 215, 216, 217, 234, 241, 242, 243, 244], "nrfy": [0, 242], "core": [0, 1, 9, 31, 48, 59, 127, 206, 210, 211, 232, 242, 248], "depend": [0, 1, 6, 24, 25, 60, 87, 88, 92, 95, 98, 100, 111, 119, 124, 133, 135, 142, 143, 181, 191, 196, 197, 241, 242], "function": [0, 1, 2, 4, 6, 7, 9, 10, 11, 12, 14, 16, 18, 20, 21, 23, 24, 25, 27, 29, 31, 33, 34, 35, 37, 39, 40, 42, 44, 45, 47, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 66, 67, 69, 71, 73, 74, 75, 77, 79, 81, 83, 85, 87, 88, 90, 92, 93, 95, 96, 98, 99, 100, 101, 103, 104, 106, 107, 109, 111, 112, 113, 115, 116, 117, 119, 120, 122, 124, 126, 127, 128, 130, 131, 133, 134, 135, 137, 138, 139, 141, 142, 143, 145, 146, 148, 149, 150, 152, 153, 155, 157, 159, 160, 162, 164, 165, 166, 168, 170, 171, 172, 174, 175, 176, 178, 179, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 195, 196, 197, 199, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 220, 232, 233, 234, 239, 241, 242, 243, 244, 246, 247, 248, 249], "global": [0, 51, 55, 56, 81, 128, 157, 185, 195, 240, 242, 243, 244], "error": [0, 1, 2, 18, 37, 51, 59, 60, 71, 81, 87, 88, 92, 93, 99, 122, 124, 128, 130, 131, 134, 135, 137, 148, 149, 152, 153, 155, 157, 162, 178, 179, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 196, 197, 240, 242, 245], "code": [0, 1, 21, 44, 60, 92, 95, 96, 119, 120, 122, 133, 135, 137, 148, 152, 155, 181, 185, 191, 196, 197, 206, 220, 234, 240, 241, 242, 245], "flag": [0, 1, 56, 60, 90, 93, 99, 104, 111, 127, 128, 130, 137, 138, 139, 141, 145, 148, 160, 178, 179, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 196, 197, 199, 215, 217, 232, 234, 242, 248], "alloc": [0, 1, 33, 51, 55, 100, 106, 111, 112, 141, 152, 188, 191, 215, 241, 242], "nrfx_glue": [0, 220, 239, 242], "h": [0, 1, 6, 7, 9, 10, 18, 23, 24, 25, 29, 39, 42, 51, 55, 59, 60, 61, 62, 66, 73, 74, 75, 81, 88, 92, 93, 99, 101, 103, 104, 111, 112, 113, 115, 117, 119, 120, 122, 126, 130, 133, 134, 135, 137, 139, 141, 142, 143, 145, 148, 150, 152, 159, 164, 168, 170, 174, 176, 178, 181, 183, 185, 188, 189, 191, 192, 193, 195, 196, 201, 205, 208, 215, 217, 220, 232, 234, 239, 242, 243, 244, 249], "apb": [0, 42, 56, 57, 71, 242, 244], "bu": [0, 1, 2, 87, 88, 149, 153, 155, 157, 178, 181, 182, 185, 196, 197, 199, 206, 242, 244], "support": [0, 1, 9, 12, 16, 18, 20, 25, 35, 49, 53, 55, 57, 60, 62, 75, 77, 88, 95, 99, 101, 103, 104, 106, 113, 117, 119, 120, 135, 139, 141, 143, 145, 148, 149, 150, 155, 157, 159, 166, 172, 174, 175, 176, 178, 181, 183, 185, 186, 189, 191, 192, 193, 196, 205, 211, 215, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 238, 242], "nrfx_log": [0, 220, 242], "peripher": [0, 1, 2, 4, 6, 7, 9, 10, 11, 12, 14, 16, 18, 20, 21, 23, 24, 25, 27, 29, 31, 33, 34, 35, 37, 39, 40, 42, 44, 45, 47, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 66, 67, 69, 71, 73, 74, 75, 77, 79, 81, 83, 85, 87, 88, 90, 92, 93, 95, 96, 98, 99, 100, 101, 103, 104, 106, 107, 109, 111, 112, 113, 115, 116, 117, 119, 120, 122, 124, 126, 127, 128, 130, 131, 133, 134, 135, 137, 138, 139, 141, 142, 143, 145, 146, 148, 149, 150, 152, 153, 155, 157, 160, 162, 165, 166, 168, 170, 171, 172, 174, 175, 176, 178, 179, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 195, 196, 197, 199, 201, 202, 203, 205, 206, 210, 211, 214, 215, 216, 217, 220, 234, 241, 242, 243, 244, 249], "resourc": [0, 1, 23, 55, 73, 77, 83, 145, 148, 152, 178, 181, 188, 191, 239, 242], "share": [0, 23, 51, 73, 145, 148, 152, 178, 181, 188, 191, 196, 242], "pr": [0, 1, 23, 73, 145, 148, 152, 178, 181, 188, 191, 234, 242], "ram": [0, 1, 2, 16, 27, 37, 60, 79, 83, 93, 100, 104, 111, 112, 113, 119, 120, 122, 124, 128, 141, 142, 148, 149, 150, 152, 155, 181, 185, 191, 192, 196, 197, 203, 234, 242], "control": [0, 1, 4, 9, 29, 34, 42, 48, 59, 77, 79, 81, 93, 95, 96, 104, 119, 122, 124, 133, 134, 142, 145, 148, 149, 150, 157, 162, 188, 189, 191, 192, 193, 196, 197, 203, 205, 206, 207, 208, 209, 210, 211, 234, 242], "all": [1, 6, 9, 16, 33, 34, 35, 48, 51, 52, 55, 56, 57, 59, 60, 69, 74, 75, 79, 83, 87, 93, 95, 96, 103, 104, 106, 107, 111, 112, 113, 120, 122, 133, 134, 137, 138, 141, 142, 145, 146, 148, 149, 150, 153, 162, 175, 179, 182, 183, 185, 196, 197, 201, 203, 205, 206, 210, 215, 220, 234, 241, 249], "notabl": 1, "thi": [1, 2, 6, 7, 16, 20, 21, 23, 29, 33, 34, 35, 37, 48, 49, 51, 52, 53, 55, 56, 57, 60, 61, 62, 66, 67, 73, 74, 75, 81, 83, 90, 92, 93, 95, 96, 98, 99, 103, 104, 106, 107, 111, 112, 113, 115, 116, 119, 120, 122, 126, 127, 130, 131, 133, 135, 137, 141, 142, 143, 145, 146, 148, 149, 150, 152, 153, 155, 157, 159, 160, 168, 170, 174, 176, 178, 181, 182, 185, 186, 188, 191, 196, 197, 201, 203, 209, 210, 211, 215, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 237, 238, 239, 240, 241, 244, 245, 246, 248, 249], "project": 1, "ar": [1, 2, 6, 7, 9, 11, 12, 14, 16, 18, 20, 21, 23, 24, 25, 27, 29, 33, 34, 35, 37, 39, 44, 45, 48, 49, 51, 52, 53, 55, 56, 57, 60, 61, 62, 67, 69, 71, 73, 74, 75, 79, 81, 83, 85, 87, 88, 90, 92, 93, 95, 96, 98, 99, 100, 101, 103, 104, 106, 107, 111, 112, 113, 115, 116, 117, 119, 120, 122, 124, 126, 128, 131, 133, 134, 135, 138, 139, 141, 142, 143, 145, 146, 148, 149, 150, 152, 153, 155, 157, 159, 162, 165, 166, 168, 171, 172, 175, 176, 178, 179, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 195, 196, 197, 199, 202, 205, 206, 207, 210, 211, 216, 217, 219, 220, 232, 234, 239, 240, 241, 246, 247, 248, 249], "document": [1, 95, 119], "file": [1, 220, 234, 240, 245], "free": [1, 33, 51, 55, 103, 106, 153, 159, 185, 239, 241], "channel": [1, 2, 6, 18, 21, 33, 34, 35, 37, 40, 51, 52, 53, 55, 56, 57, 60, 61, 62, 66, 67, 69, 74, 81, 87, 88, 99, 100, 101, 104, 106, 107, 109, 111, 112, 113, 115, 122, 131, 134, 135, 137, 138, 139, 141, 142, 143, 149, 150, 152, 153, 155, 162, 168, 171, 172, 174, 175, 176, 182, 183, 186, 192, 193, 195, 196, 197, 210, 215, 216, 217, 240, 241, 243, 244], "nrf54h20": [1, 219], "nrf54l15": [1, 219], "updat": [1, 9, 16, 29, 48, 49, 104, 111, 112, 133, 168, 182, 183, 220, 240], "mdk": [1, 219, 220], "version": [1, 87, 88, 205, 220, 234, 235], "64": [1, 23, 56, 61, 98, 100, 112, 120, 148, 149, 150, 155, 175, 192, 206, 210, 211], "default": [1, 6, 14, 16, 18, 23, 44, 48, 49, 51, 52, 53, 55, 56, 57, 60, 73, 83, 87, 92, 93, 99, 100, 111, 115, 119, 120, 122, 130, 133, 135, 137, 141, 145, 148, 149, 152, 153, 164, 170, 174, 178, 181, 185, 188, 191, 196, 197, 215, 220, 240], "implement": [1, 92, 155, 157, 160, 210, 220, 232, 234, 237, 239, 240, 245, 246], "delai": [1, 55, 81, 92, 93, 116, 117, 119, 120, 148, 149, 150, 159, 160, 168, 191, 234, 237, 240], "loop": [1, 9, 59, 77, 111, 112, 135, 237], "now": [1, 60, 111, 134, 135, 185, 196], "i": [1, 2, 6, 7, 9, 10, 11, 12, 14, 16, 18, 20, 21, 23, 24, 25, 27, 29, 33, 34, 35, 39, 42, 44, 47, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 66, 67, 69, 71, 73, 74, 75, 77, 79, 81, 83, 85, 87, 88, 92, 93, 95, 96, 98, 99, 100, 101, 103, 104, 106, 107, 109, 111, 112, 113, 115, 116, 117, 119, 120, 122, 124, 126, 127, 128, 130, 131, 133, 134, 135, 137, 139, 141, 142, 143, 145, 146, 148, 149, 150, 152, 153, 155, 157, 159, 160, 162, 164, 165, 168, 170, 171, 172, 174, 175, 176, 178, 179, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 195, 196, 197, 199, 201, 203, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 220, 233, 234, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249], "util": [1, 55, 119, 234, 246], "instead": [1, 6, 20, 21, 23, 39, 51, 55, 60, 61, 62, 73, 74, 75, 92, 93, 96, 99, 111, 112, 113, 115, 119, 120, 137, 141, 145, 146, 148, 149, 150, 152, 153, 168, 174, 178, 181, 185, 188, 191, 196, 213, 215, 238, 246], "cpu": [1, 29, 31, 55, 56, 57, 95, 103, 104, 126, 128, 133, 135, 153, 159, 160, 181, 193, 205, 206, 207, 208, 209, 210, 211, 215, 216, 217, 237, 248], "spin": 1, "mhz": [1, 20, 21, 55, 56, 57, 60, 61, 93, 98, 99, 100, 111, 112, 119, 120, 122, 142, 143, 145, 148, 149, 150, 175, 181, 192, 234, 237], "frequenc": [1, 6, 9, 20, 21, 55, 56, 57, 59, 60, 98, 99, 100, 101, 111, 112, 113, 119, 120, 122, 137, 138, 145, 146, 148, 149, 150, 157, 174, 175, 178, 179, 181, 182, 183, 192, 234, 237], "set": [1, 2, 4, 6, 9, 11, 12, 14, 16, 18, 20, 21, 23, 24, 25, 27, 29, 34, 35, 37, 39, 40, 47, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 66, 67, 69, 71, 73, 74, 75, 77, 79, 81, 83, 87, 88, 90, 92, 93, 95, 96, 98, 99, 100, 101, 103, 104, 107, 109, 111, 112, 113, 115, 116, 117, 119, 120, 122, 124, 126, 127, 128, 130, 131, 133, 134, 135, 137, 138, 139, 141, 142, 143, 145, 146, 148, 149, 150, 152, 153, 155, 157, 159, 160, 162, 165, 168, 171, 172, 174, 175, 176, 178, 179, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 195, 196, 197, 199, 201, 203, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 220, 232, 233, 234, 239, 240, 241, 246, 247, 249], "pin": [1, 23, 24, 48, 49, 51, 52, 53, 56, 57, 60, 61, 62, 73, 74, 92, 93, 99, 100, 101, 103, 111, 112, 113, 115, 116, 117, 119, 120, 122, 126, 128, 141, 142, 143, 145, 146, 148, 149, 150, 152, 153, 155, 168, 178, 179, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 195, 196, 208, 248], "check": [1, 2, 6, 7, 9, 10, 11, 12, 16, 18, 20, 21, 23, 24, 25, 27, 29, 34, 35, 37, 39, 40, 45, 47, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 66, 67, 69, 71, 73, 74, 75, 77, 79, 81, 87, 88, 90, 92, 93, 95, 96, 99, 100, 101, 103, 104, 107, 109, 111, 112, 113, 115, 116, 117, 119, 120, 122, 124, 126, 130, 131, 133, 134, 135, 137, 138, 139, 141, 142, 143, 145, 146, 148, 149, 150, 152, 153, 155, 157, 159, 162, 164, 165, 166, 168, 170, 171, 172, 174, 175, 176, 178, 179, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 196, 197, 199, 201, 202, 205, 206, 207, 210, 211, 213, 214, 215, 216, 217, 220, 233, 234, 239, 240, 241, 248], "onli": [1, 6, 10, 14, 16, 21, 23, 33, 34, 35, 39, 48, 49, 51, 52, 53, 55, 56, 60, 61, 62, 73, 74, 81, 83, 92, 93, 95, 96, 103, 104, 107, 111, 112, 113, 115, 119, 120, 126, 133, 134, 135, 137, 141, 142, 143, 145, 148, 152, 155, 157, 159, 168, 174, 178, 181, 185, 188, 191, 195, 196, 197, 205, 215, 220, 232, 234, 240, 241, 246, 249], "psel": [1, 23], "specifi": [1, 2, 7, 9, 11, 12, 14, 16, 18, 20, 21, 24, 25, 27, 29, 33, 34, 35, 37, 39, 40, 42, 44, 45, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 67, 69, 71, 74, 75, 77, 79, 81, 83, 85, 87, 88, 90, 92, 93, 95, 96, 98, 99, 100, 101, 104, 107, 109, 111, 112, 113, 115, 116, 117, 119, 120, 122, 124, 126, 131, 133, 134, 135, 137, 138, 139, 141, 142, 143, 145, 146, 148, 149, 150, 152, 153, 155, 159, 162, 165, 166, 168, 170, 171, 172, 174, 175, 176, 178, 179, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 195, 197, 199, 202, 205, 207, 210, 211, 213, 216, 217, 220, 233, 234, 235, 236, 237, 239, 240, 241, 243, 244, 246, 247, 249], "overridden": [1, 48, 49, 141], "write": [1, 4, 7, 14, 16, 29, 34, 35, 48, 49, 51, 56, 57, 79, 81, 83, 87, 90, 95, 96, 104, 119, 120, 124, 133, 134, 135, 146, 155, 157, 160, 162, 175, 176, 178, 179, 181, 185, 186, 195, 196, 206, 209, 240, 241, 249], "mode": [1, 6, 9, 16, 18, 20, 23, 24, 25, 29, 37, 47, 48, 51, 52, 53, 55, 56, 57, 59, 60, 61, 77, 87, 88, 92, 93, 96, 99, 100, 101, 103, 104, 111, 112, 113, 119, 120, 122, 126, 128, 133, 134, 135, 137, 141, 142, 143, 145, 146, 148, 149, 150, 152, 153, 157, 162, 164, 168, 170, 174, 175, 176, 178, 181, 185, 186, 188, 189, 191, 192, 196, 197, 203, 205, 206, 208, 209, 210, 211, 215, 216, 248], "preserv": 1, "befor": [1, 2, 6, 7, 18, 20, 23, 51, 55, 56, 57, 60, 62, 73, 74, 75, 81, 92, 93, 96, 99, 100, 101, 111, 112, 113, 115, 116, 117, 119, 120, 122, 137, 139, 141, 142, 143, 145, 148, 150, 152, 168, 178, 179, 181, 182, 183, 185, 188, 191, 193, 196, 197, 206, 209, 215, 220, 234, 239], "restor": [1, 16, 51, 56, 57, 128], "afterward": 1, "sub": [1, 103, 157, 232, 240], "sleep": [1, 55, 56, 57, 59, 92, 93, 103, 104, 160, 181, 206, 208, 215, 216, 217], "workaround": [1, 152], "anomali": [1, 95, 119, 152], "159": [1, 119], "nrf5340": [1, 98, 119, 148, 181, 219], "soc": [1, 21, 98, 104, 155, 191, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234, 237, 240, 241], "63": [1, 61, 122, 168], "extend": [1, 18, 56, 57, 60, 119, 120, 149, 150, 162, 174, 195, 241, 249], "appli": [1, 9, 18, 51, 81, 99, 104, 111, 112, 113, 134, 145, 148, 195, 209], "correctli": [1, 96], "when": [1, 2, 6, 9, 16, 18, 21, 23, 29, 48, 49, 51, 55, 56, 57, 59, 60, 62, 66, 71, 81, 83, 87, 88, 92, 93, 96, 98, 99, 101, 103, 104, 111, 112, 113, 115, 116, 117, 119, 120, 122, 124, 126, 134, 137, 141, 142, 143, 145, 148, 150, 152, 155, 157, 159, 160, 174, 178, 181, 183, 185, 188, 191, 193, 195, 196, 197, 203, 206, 209, 215, 216, 217, 234, 237, 240, 241, 248, 249], "subset": 1, "featur": [1, 16, 21, 55, 92, 119, 120, 142, 143, 149, 150, 153, 155, 157, 160, 162, 182, 183, 186, 188, 191, 195, 220, 234], "avail": [1, 2, 11, 16, 18, 29, 33, 34, 35, 37, 40, 51, 52, 53, 55, 56, 57, 60, 61, 71, 79, 87, 95, 96, 100, 104, 106, 112, 116, 120, 133, 135, 138, 145, 148, 149, 150, 155, 162, 175, 181, 182, 188, 191, 196, 203, 205, 210, 215, 220, 237, 239, 241, 243, 244], "eng": 1, "A": [1, 2, 60, 92, 104, 112, 113, 115, 116, 117, 122, 127, 142, 155, 178, 179, 181, 182, 191, 197, 234, 240], "ctrlap": [1, 29, 104, 127], "nrfx_id": 1, "helper": [1, 112, 119, 196, 241, 247, 248, 249], "facilit": 1, "develop": [1, 220], "perform": [1, 6, 16, 48, 49, 55, 57, 60, 95, 96, 111, 112, 113, 119, 122, 133, 135, 141, 145, 148, 178, 181, 188, 191, 233, 234, 238, 249], "inter": [1, 60, 61, 69, 122], "domain": [1, 20, 21, 29, 31, 48, 55, 56, 57, 77, 81, 104, 128, 155, 162, 195, 243, 244], "signal": [1, 21, 48, 49, 59, 60, 61, 62, 66, 93, 104, 112, 116, 117, 119, 120, 122, 127, 128, 145, 146, 148, 149, 150, 152, 153, 157, 162, 168, 196, 197, 199, 210, 211, 248], "possibl": [1, 23, 73, 81, 92, 93, 96, 103, 104, 122, 133, 145, 148, 152, 155, 159, 174, 178, 181, 185, 186, 188, 191, 196, 220, 234, 241], "us": [1, 2, 6, 7, 9, 10, 11, 12, 16, 18, 20, 21, 23, 24, 25, 27, 29, 31, 33, 34, 35, 37, 39, 40, 42, 45, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 67, 69, 71, 73, 74, 75, 81, 83, 87, 88, 90, 92, 93, 95, 96, 98, 99, 100, 101, 103, 104, 106, 111, 112, 113, 115, 116, 117, 119, 120, 122, 126, 131, 133, 134, 135, 137, 138, 139, 141, 142, 143, 145, 146, 148, 149, 150, 152, 153, 155, 157, 159, 160, 162, 165, 166, 168, 170, 171, 172, 174, 175, 176, 178, 179, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 195, 196, 197, 199, 201, 202, 203, 206, 209, 210, 211, 213, 215, 216, 217, 219, 220, 234, 235, 238, 239, 240, 241, 246, 249], "tx": [1, 60, 61, 62, 92, 93, 122, 145, 146, 148, 149, 150, 152, 153, 168, 178, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 196], "link": [1, 191, 195, 249], "without": [1, 51, 95, 119, 120, 122, 133, 135, 141, 148, 159, 162, 168, 178, 181, 188, 191, 196, 220], "d": [1, 148, 150, 191, 197, 241], "connect": [1, 48, 49, 51, 52, 53, 56, 57, 61, 66, 67, 77, 81, 92, 93, 112, 116, 119, 120, 126, 145, 146, 149, 153, 155, 168, 185, 191, 196, 197, 241, 243], "get": [1, 2, 4, 6, 7, 9, 11, 12, 16, 18, 20, 23, 24, 25, 27, 29, 31, 34, 35, 37, 39, 40, 42, 44, 47, 48, 51, 52, 53, 55, 56, 57, 59, 61, 62, 66, 67, 69, 71, 74, 75, 77, 79, 81, 83, 87, 88, 90, 92, 93, 95, 96, 98, 99, 100, 101, 103, 104, 106, 107, 109, 111, 112, 113, 116, 117, 119, 120, 122, 124, 126, 127, 128, 131, 133, 134, 135, 137, 138, 139, 141, 142, 143, 146, 148, 149, 150, 153, 155, 157, 159, 160, 162, 164, 165, 166, 168, 170, 171, 172, 174, 175, 176, 178, 179, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 195, 196, 197, 199, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 216, 233, 234, 243, 244, 245, 248, 249], "callback": [1, 10, 51, 92, 103, 152, 185, 196, 213], "call": [1, 6, 10, 20, 21, 23, 51, 52, 53, 55, 56, 60, 61, 62, 73, 74, 75, 95, 96, 99, 103, 111, 112, 116, 119, 122, 141, 145, 148, 152, 168, 170, 174, 178, 181, 185, 188, 191, 196, 197, 206, 213, 215, 220, 234, 243], "each": [1, 2, 14, 16, 48, 51, 83, 95, 100, 111, 112, 122, 141, 148, 178, 179, 181, 182, 183, 191, 203, 234, 239, 249], "byte": [1, 2, 4, 18, 37, 44, 83, 92, 93, 95, 96, 119, 120, 122, 133, 135, 141, 145, 146, 148, 149, 150, 152, 153, 155, 157, 168, 178, 179, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 195, 196, 197, 206, 233, 234, 245, 247, 249], "receiv": [1, 60, 61, 62, 67, 69, 87, 92, 93, 99, 100, 109, 119, 122, 137, 146, 149, 150, 152, 153, 168, 178, 179, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 196, 197], "60": 1, "api": [1, 55, 103, 234, 235], "how": [1, 112, 115, 116, 117, 196], "buffer": [1, 6, 9, 37, 48, 49, 51, 60, 61, 62, 92, 93, 96, 99, 100, 101, 119, 120, 122, 133, 134, 135, 141, 142, 143, 145, 148, 149, 150, 152, 153, 157, 164, 165, 166, 168, 181, 182, 183, 185, 186, 188, 191, 192, 193, 196, 197, 207, 208, 234, 240, 249], "provid": [1, 2, 6, 20, 23, 39, 48, 49, 51, 55, 60, 61, 66, 73, 92, 98, 99, 111, 112, 115, 116, 119, 130, 133, 137, 141, 145, 148, 152, 164, 168, 170, 174, 178, 181, 185, 188, 191, 196, 215, 219, 220, 234, 239, 241, 243, 247, 248, 249], "size": [1, 2, 4, 6, 14, 16, 18, 42, 44, 60, 61, 62, 77, 83, 92, 93, 95, 99, 104, 119, 120, 122, 124, 133, 134, 135, 141, 142, 143, 155, 157, 164, 165, 166, 168, 185, 186, 191, 195, 196, 197, 208, 234, 240, 243, 247, 249], "must": [1, 2, 4, 6, 7, 16, 20, 21, 23, 48, 49, 51, 56, 60, 66, 67, 73, 74, 75, 81, 83, 92, 93, 95, 96, 100, 101, 104, 111, 112, 115, 119, 120, 122, 130, 133, 135, 137, 141, 142, 143, 145, 148, 149, 150, 152, 155, 168, 181, 185, 188, 191, 196, 197, 201, 210, 211, 213, 215, 220, 234, 239, 246], "pass": [1, 10, 18, 39, 47, 51, 60, 61, 62, 66, 92, 93, 111, 112, 113, 115, 119, 120, 130, 145, 146, 148, 149, 150, 152, 153, 168, 170, 174, 178, 181, 188, 191, 196, 213, 215, 220, 234], "alongsid": 1, "pointer": [1, 2, 4, 6, 7, 9, 10, 11, 12, 14, 16, 18, 20, 21, 23, 24, 25, 27, 29, 31, 33, 34, 35, 37, 39, 40, 42, 44, 45, 47, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 66, 67, 69, 71, 73, 74, 75, 77, 79, 81, 83, 85, 87, 88, 90, 92, 93, 95, 96, 98, 99, 100, 101, 103, 104, 106, 107, 109, 111, 112, 113, 115, 116, 117, 119, 120, 122, 124, 126, 127, 128, 130, 131, 133, 134, 135, 137, 138, 139, 141, 142, 143, 145, 146, 148, 149, 150, 152, 153, 155, 157, 159, 162, 164, 165, 166, 168, 170, 171, 172, 174, 175, 176, 178, 179, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 195, 196, 197, 199, 202, 203, 205, 208, 210, 211, 214, 215, 216, 217, 232, 233, 234, 238, 240, 241, 243, 244, 245, 246, 247, 249], "next": [1, 6, 60, 71, 81, 87, 95, 96, 112, 133, 134, 135, 141, 148, 149, 150, 155, 181, 191, 196], "improv": [1, 196], "manag": [1, 2, 4, 7, 9, 11, 12, 14, 16, 18, 21, 24, 25, 27, 29, 31, 34, 35, 37, 40, 42, 45, 47, 48, 49, 52, 53, 55, 56, 57, 59, 61, 62, 67, 69, 71, 74, 75, 77, 79, 81, 83, 85, 87, 88, 90, 96, 98, 100, 101, 104, 107, 109, 112, 113, 116, 117, 120, 122, 124, 126, 127, 128, 131, 134, 135, 138, 139, 142, 143, 146, 148, 149, 150, 153, 155, 157, 160, 162, 165, 166, 168, 171, 172, 175, 176, 179, 182, 183, 186, 189, 192, 193, 195, 197, 199, 202, 203, 205, 206, 207, 208, 209, 210, 211, 214, 216, 217, 220, 233], "enabl": [1, 2, 6, 7, 9, 10, 11, 12, 14, 16, 18, 20, 21, 23, 24, 25, 27, 29, 33, 34, 35, 37, 39, 40, 42, 45, 47, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 66, 67, 69, 71, 73, 74, 75, 77, 79, 81, 83, 87, 88, 90, 92, 93, 95, 96, 98, 99, 100, 101, 103, 104, 106, 107, 111, 112, 113, 115, 116, 117, 120, 122, 124, 126, 128, 130, 131, 133, 134, 135, 137, 138, 139, 141, 142, 143, 145, 146, 148, 149, 150, 152, 153, 155, 157, 160, 162, 165, 166, 168, 171, 172, 174, 175, 176, 178, 179, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 196, 197, 199, 201, 202, 205, 206, 207, 208, 210, 211, 213, 214, 215, 216, 217, 220, 234, 240, 241, 247], "dure": [1, 2, 14, 56, 57, 60, 71, 83, 92, 93, 95, 111, 112, 119, 120, 122, 133, 135, 145, 148, 149, 152, 153, 170, 174, 178, 181, 182, 185, 188, 191, 196, 206, 220], "playback": [1, 111, 112, 113], "nrf52840": [1, 219], "215": 1, "custom": [1, 119, 120, 220, 240], "instruct": [1, 16, 95, 96, 111, 119, 120, 160, 206, 232], "do": [1, 93, 104, 112, 120, 122, 148, 185, 196, 197, 220, 234], "risk": [1, 137], "trigger": [1, 6, 11, 12, 16, 18, 21, 27, 39, 40, 45, 51, 55, 59, 66, 67, 69, 77, 81, 100, 101, 111, 112, 116, 117, 119, 122, 128, 131, 133, 134, 138, 141, 142, 143, 148, 149, 153, 157, 176, 181, 182, 191, 205, 207, 209, 210, 211, 248], "miss": [1, 16], "nrf91": [1, 219], "incorrect": [1, 119, 122, 152], "assert": [1, 6, 115, 148, 149, 160, 174, 175, 191, 220, 240], "statu": [1, 2, 9, 16, 18, 21, 29, 48, 49, 59, 60, 69, 71, 77, 79, 81, 87, 88, 92, 93, 98, 103, 104, 111, 119, 120, 122, 126, 128, 133, 134, 135, 149, 150, 153, 155, 157, 160, 162, 196, 197, 201, 205, 206, 207, 208, 209, 215, 216, 217, 240], "can": [1, 2, 6, 9, 14, 16, 21, 31, 33, 34, 35, 42, 48, 49, 51, 52, 53, 55, 56, 60, 61, 62, 66, 83, 88, 92, 93, 95, 96, 99, 101, 103, 104, 111, 112, 113, 115, 116, 117, 119, 120, 122, 126, 131, 133, 135, 137, 141, 142, 143, 145, 146, 148, 149, 150, 152, 153, 155, 159, 168, 170, 174, 175, 178, 181, 183, 185, 186, 188, 191, 193, 196, 197, 215, 220, 234, 237, 239, 241, 246, 249], "idl": [1, 29, 77, 87, 88, 92, 93, 111, 122, 137, 141, 149, 162, 185, 197], "nrf52": [1, 119, 152], "55": 1, "multi": [1, 31, 87, 88, 233], "instanc": [1, 6, 10, 34, 35, 39, 40, 51, 52, 55, 60, 66, 92, 104, 111, 112, 115, 119, 133, 137, 138, 145, 146, 148, 149, 152, 153, 174, 175, 178, 179, 181, 182, 185, 186, 188, 191, 192, 195, 196, 215, 216, 234, 240, 244], "nrfx_ram_ctrl": [1, 247], "retent": [1, 48, 49, 59, 77, 79, 104, 126, 203, 247], "block": [1, 6, 14, 16, 20, 37, 62, 71, 79, 83, 88, 95, 101, 104, 113, 119, 120, 134, 135, 141, 143, 145, 148, 150, 155, 159, 164, 168, 170, 178, 181, 183, 185, 188, 191, 193, 195, 203, 234, 247], "introduc": [1, 126], "nrfx_timer_base_frequency_get": [1, 174], "nrfx_spim_base_frequency_get": [1, 148], "macro": [1, 10, 23, 34, 39, 40, 48, 51, 52, 56, 60, 83, 87, 98, 104, 111, 112, 115, 119, 120, 137, 138, 141, 145, 146, 148, 149, 150, 152, 153, 174, 175, 178, 179, 181, 182, 185, 186, 188, 191, 192, 196, 197, 205, 210, 215, 216, 220, 233, 234, 236, 239, 240, 245, 249], "base": [1, 9, 42, 83, 103, 111, 112, 113, 119, 120, 122, 124, 133, 135, 148, 149, 174, 175, 192, 196, 206, 220, 234, 238, 240, 246], "hz": [1, 20, 21, 56, 148, 149, 174, 175, 192, 234], "whether": [1, 7, 16, 21, 24, 25, 44, 47, 48, 52, 55, 56, 57, 59, 61, 71, 74, 77, 79, 81, 87, 88, 92, 93, 95, 96, 98, 100, 103, 104, 107, 112, 119, 120, 122, 126, 127, 128, 134, 135, 142, 143, 148, 149, 150, 153, 155, 162, 171, 172, 174, 175, 176, 182, 183, 186, 189, 192, 195, 197, 206, 215, 234, 248], "voltag": [1, 6, 23, 24, 25, 47, 59, 73, 74, 75, 93, 104, 126, 141, 202, 214], "an": [1, 2, 6, 7, 16, 21, 23, 37, 39, 42, 45, 51, 52, 53, 55, 56, 57, 60, 71, 74, 75, 77, 81, 92, 93, 96, 99, 104, 106, 112, 115, 116, 119, 124, 126, 131, 133, 137, 138, 139, 141, 145, 148, 149, 150, 152, 153, 157, 162, 170, 178, 181, 182, 185, 188, 189, 191, 192, 193, 196, 197, 206, 209, 210, 215, 220, 232, 234, 240, 241, 249], "inductor": [1, 126], "dcc": [1, 126], "detect": [1, 48, 51, 52, 53, 71, 73, 74, 75, 81, 90, 92, 93, 103, 104, 116, 122, 124, 126, 128, 137, 141, 148, 149, 152, 153, 155, 157, 159, 162, 178, 181, 182, 185, 186, 189, 191, 192, 196, 197, 199, 201, 202, 248], "below": [1, 23, 25, 75, 104, 126, 142], "abov": [1, 23, 25, 75, 104, 122, 124, 126, 142, 220, 234], "threshold": [1, 23, 24, 25, 74, 75, 103, 104, 122, 126, 206], "vpof": [1, 126], "pof": [1, 126], "compar": [1, 23, 24, 25, 55, 56, 57, 73, 74, 75, 103, 104, 112, 122, 126, 137, 138, 139, 141, 142, 143, 155, 174, 175, 176, 195, 219, 232, 240], "": [1, 7, 20, 21, 48, 49, 56, 57, 98, 116, 122, 126, 137, 157, 170, 171, 172, 220], "entri": [1, 16, 122, 195, 234, 243, 244], "enumer": [1, 2, 4, 6, 7, 9, 11, 16, 18, 20, 21, 23, 24, 27, 29, 34, 37, 40, 42, 45, 47, 48, 51, 52, 55, 56, 59, 61, 67, 69, 71, 74, 77, 81, 87, 90, 92, 93, 96, 98, 99, 100, 103, 104, 107, 109, 111, 112, 116, 119, 120, 122, 124, 126, 127, 128, 131, 134, 137, 138, 141, 142, 145, 146, 148, 149, 152, 153, 155, 157, 160, 162, 165, 168, 171, 175, 178, 179, 181, 182, 185, 186, 188, 189, 191, 192, 195, 196, 197, 199, 201, 202, 203, 205, 206, 208, 209, 210, 216, 234, 238, 241, 248, 249], "section": [1, 21, 93, 95, 104, 137, 203, 220, 234, 240, 247], "new": [1, 20, 21, 29, 48, 49, 59, 71, 87, 88, 92, 93, 98, 104, 111, 116, 119, 130, 131, 134, 135, 142, 143, 145, 148, 152, 178, 179, 181, 182, 186, 191, 196, 197, 232, 240, 241], "nrfx_wdt_stop": [1, 215], "stop": [1, 2, 6, 7, 9, 18, 20, 21, 23, 24, 37, 42, 55, 56, 57, 59, 60, 61, 74, 75, 77, 90, 93, 99, 100, 111, 112, 116, 122, 130, 131, 138, 139, 141, 142, 143, 149, 160, 164, 165, 168, 171, 174, 175, 178, 179, 181, 182, 186, 188, 189, 191, 192, 193, 196, 197, 209, 210, 211, 215, 216, 217, 249], "watchdog": [1, 128, 215, 216, 217, 248], "nrfx_wdt_uninit": [1, 215], "uniniti": [1, 6, 10, 12, 20, 23, 25, 39, 51, 55, 57, 60, 62, 66, 73, 75, 88, 92, 99, 101, 103, 106, 111, 113, 115, 117, 119, 130, 133, 135, 137, 139, 141, 143, 145, 148, 150, 152, 164, 166, 170, 172, 174, 176, 178, 181, 183, 185, 188, 191, 193, 213, 215, 217, 234], "nrfy_wdt_task_stop_enable_set": [1, 217], "disabl": [1, 2, 6, 7, 9, 10, 11, 12, 14, 16, 18, 20, 21, 23, 24, 25, 27, 29, 33, 34, 35, 37, 39, 40, 42, 45, 47, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 66, 67, 69, 71, 73, 74, 75, 77, 79, 81, 83, 87, 88, 90, 92, 93, 95, 98, 99, 100, 101, 103, 104, 106, 107, 111, 112, 113, 115, 116, 117, 119, 120, 122, 124, 126, 130, 131, 133, 134, 135, 137, 138, 139, 141, 142, 143, 145, 146, 148, 149, 150, 152, 153, 155, 157, 160, 162, 165, 166, 168, 171, 172, 174, 175, 176, 178, 179, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 196, 197, 199, 201, 202, 205, 206, 207, 210, 211, 213, 216, 217, 220, 234, 240, 241], "retriev": [1, 2, 6, 7, 9, 11, 12, 18, 21, 24, 25, 29, 37, 40, 45, 51, 52, 53, 55, 56, 57, 59, 61, 62, 67, 69, 71, 74, 75, 77, 81, 87, 88, 90, 93, 100, 101, 104, 109, 112, 113, 116, 117, 120, 122, 124, 131, 134, 135, 137, 138, 139, 142, 143, 146, 149, 150, 153, 155, 157, 162, 165, 166, 168, 175, 176, 179, 182, 183, 186, 189, 192, 193, 197, 199, 202, 207, 208, 210, 211, 216, 217], "transmit": [1, 60, 61, 62, 92, 93, 119, 122, 148, 149, 150, 152, 153, 168, 179, 182, 183, 185, 186, 188, 191, 192, 193, 196], "given": [1, 2, 4, 10, 18, 21, 23, 34, 35, 37, 39, 40, 48, 49, 51, 52, 53, 56, 57, 60, 61, 62, 67, 69, 74, 79, 87, 88, 93, 96, 100, 101, 104, 107, 109, 111, 112, 113, 120, 122, 131, 133, 134, 135, 138, 139, 141, 142, 143, 145, 146, 148, 149, 150, 153, 155, 159, 162, 168, 171, 172, 174, 175, 176, 182, 183, 185, 186, 192, 193, 196, 197, 216, 217, 220, 233, 234, 237, 239, 241, 243, 244, 245, 246, 247, 249], "initi": [1, 6, 7, 10, 12, 18, 20, 23, 25, 39, 48, 49, 51, 52, 53, 55, 57, 59, 60, 62, 66, 73, 75, 88, 92, 93, 95, 99, 101, 103, 111, 113, 115, 117, 119, 122, 130, 133, 135, 137, 139, 141, 142, 143, 145, 148, 150, 152, 155, 164, 166, 170, 172, 174, 176, 178, 181, 183, 185, 188, 191, 193, 195, 196, 201, 210, 211, 213, 215, 216, 217, 220, 234, 239, 249], "individu": [1, 9, 56, 111, 112, 113, 149, 153, 182, 215, 246], "refer": [1, 6, 7, 23, 24, 25, 55, 56, 57, 59, 73, 74, 75, 93, 95, 103, 119, 122, 133, 134, 135, 141, 142, 160, 168, 220], "select": [1, 6, 7, 9, 18, 21, 23, 24, 25, 48, 49, 55, 56, 57, 60, 61, 62, 71, 73, 74, 75, 92, 93, 99, 100, 101, 104, 111, 112, 113, 115, 116, 117, 119, 120, 122, 127, 134, 141, 142, 145, 146, 148, 149, 150, 152, 153, 160, 168, 178, 179, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 195, 196, 197, 199, 205, 220, 248], "extern": [1, 6, 7, 9, 16, 20, 21, 23, 24, 25, 42, 55, 60, 62, 73, 74, 75, 92, 93, 98, 99, 101, 111, 113, 115, 117, 119, 120, 141, 142, 145, 148, 150, 152, 155, 162, 178, 181, 183, 185, 188, 191, 193, 196, 234, 237], "type": [1, 6, 7, 18, 20, 21, 23, 55, 56, 60, 66, 73, 74, 75, 90, 92, 93, 98, 99, 100, 103, 111, 112, 115, 119, 122, 130, 131, 133, 137, 141, 142, 143, 145, 148, 152, 157, 159, 162, 164, 170, 174, 175, 178, 181, 185, 186, 188, 189, 191, 192, 196, 197, 201, 205, 215, 232, 234, 237, 238, 240, 249], "hysteresi": [1, 23, 24, 25, 73, 74, 75], "thei": [1, 6, 60, 62, 93, 96, 99, 101, 104, 111, 113, 115, 117, 119, 141, 145, 148, 150, 152, 178, 181, 183, 185, 188, 191, 193, 220, 234], "suppos": [1, 60, 62, 99, 101, 111, 113, 115, 117, 119, 145, 148, 150, 152, 178, 181, 183, 185, 188, 191, 193], "nrf_lpcomp_configur": [1, 74, 75], "The": [1, 2, 6, 7, 9, 11, 12, 14, 16, 18, 20, 21, 23, 24, 25, 27, 29, 33, 34, 35, 37, 39, 40, 42, 44, 45, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 67, 69, 71, 73, 74, 75, 77, 81, 83, 87, 88, 90, 92, 93, 95, 96, 98, 99, 100, 101, 103, 104, 106, 107, 109, 111, 112, 113, 115, 116, 117, 119, 120, 122, 124, 126, 127, 131, 133, 134, 135, 137, 138, 139, 141, 142, 143, 145, 146, 148, 149, 150, 152, 153, 155, 157, 159, 160, 162, 165, 166, 168, 170, 171, 172, 174, 175, 176, 178, 179, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 196, 197, 199, 201, 202, 210, 211, 213, 214, 215, 216, 217, 219, 220, 234, 237, 241, 243, 246], "user": [1, 6, 10, 20, 23, 39, 51, 55, 56, 57, 60, 66, 73, 90, 95, 96, 99, 106, 111, 115, 119, 130, 133, 137, 141, 145, 148, 164, 170, 174, 178, 181, 185, 188, 191, 195, 196, 215, 220, 234, 241], "handler": [1, 6, 10, 20, 23, 39, 51, 55, 60, 66, 73, 85, 99, 103, 111, 115, 119, 130, 133, 137, 141, 145, 148, 152, 164, 170, 174, 178, 181, 185, 188, 191, 196, 201, 206, 213, 215, 234, 246], "null": [1, 6, 20, 21, 23, 39, 48, 49, 51, 55, 60, 61, 62, 66, 73, 88, 99, 101, 103, 104, 111, 115, 119, 130, 137, 141, 143, 145, 148, 150, 152, 174, 178, 181, 183, 185, 191, 193, 196, 201, 213, 215, 238, 243], "member": [1, 6, 7, 9, 10, 18, 23, 24, 25, 29, 39, 42, 51, 55, 59, 60, 61, 62, 66, 73, 74, 75, 81, 88, 92, 93, 99, 101, 103, 104, 111, 112, 113, 115, 117, 119, 120, 122, 126, 130, 133, 134, 135, 137, 139, 141, 142, 143, 145, 148, 150, 152, 159, 164, 168, 170, 174, 176, 178, 181, 183, 185, 188, 189, 191, 192, 193, 195, 196, 201, 205, 208, 215, 217, 220, 234, 243, 244, 249], "structur": [1, 2, 4, 6, 7, 9, 10, 11, 12, 14, 16, 18, 20, 21, 23, 24, 25, 27, 29, 31, 34, 35, 37, 39, 40, 42, 44, 45, 47, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 66, 67, 69, 71, 73, 74, 75, 77, 79, 81, 83, 85, 87, 88, 90, 92, 93, 96, 98, 99, 100, 101, 103, 104, 107, 109, 111, 112, 113, 115, 116, 117, 119, 120, 122, 124, 126, 127, 128, 130, 131, 133, 134, 135, 137, 138, 139, 141, 142, 143, 145, 146, 148, 149, 150, 152, 153, 155, 157, 162, 164, 165, 166, 168, 170, 171, 172, 174, 175, 176, 178, 179, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 195, 196, 197, 199, 201, 202, 203, 205, 208, 210, 211, 214, 215, 216, 217, 220, 234, 243, 244, 249], "determin": [1, 57, 95, 112, 120, 133, 191, 203, 208, 215, 234], "time": [1, 2, 9, 18, 20, 21, 48, 55, 56, 57, 60, 81, 92, 93, 95, 96, 103, 104, 111, 112, 113, 115, 116, 117, 119, 120, 122, 137, 138, 141, 142, 148, 149, 157, 159, 168, 174, 175, 181, 191, 196, 206, 216, 220, 238, 240, 246], "millisecond": [1, 95, 96, 119, 159, 174, 175, 215], "timeout": [1, 20, 55, 56, 57, 93, 119, 133, 134, 135, 159, 185, 189, 192, 206, 215], "occur": [1, 2, 18, 45, 55, 56, 57, 60, 92, 111, 112, 119, 122, 148, 149, 153, 170, 178, 181, 182, 193, 196, 197], "nrfx_qspi_timeout_sign": [1, 119], "prematur": [1, 119], "58": 1, "overhaul": 1, "variou": [1, 112, 220], "includ": [1, 2, 6, 7, 9, 10, 18, 23, 24, 25, 29, 33, 34, 35, 37, 39, 42, 51, 55, 59, 60, 61, 62, 66, 73, 74, 75, 81, 88, 90, 92, 93, 96, 99, 101, 103, 104, 106, 107, 111, 112, 113, 115, 117, 119, 120, 122, 126, 130, 133, 134, 135, 137, 139, 141, 142, 143, 145, 148, 150, 152, 159, 164, 168, 170, 174, 176, 178, 181, 182, 183, 185, 188, 189, 191, 192, 193, 195, 196, 197, 201, 205, 208, 215, 217, 220, 241, 243, 244, 249], "mix": 1, "non": [1, 6, 14, 62, 83, 88, 90, 92, 95, 96, 101, 124, 128, 141, 143, 150, 155, 157, 162, 170, 178, 181, 183, 188, 191, 193, 195, 206, 216, 234, 240, 246], "transfer": [1, 60, 61, 62, 87, 92, 93, 100, 119, 120, 122, 142, 145, 148, 149, 150, 152, 153, 155, 157, 168, 178, 179, 181, 182, 183, 185, 188, 191, 192, 193, 195, 196, 197, 234, 249], "continu": [1, 16, 60, 61, 87, 100, 120, 141, 142, 143, 145, 148, 149, 150, 153, 168, 182, 188, 191, 208, 209], "recept": [1, 60, 61, 62, 92, 93, 101, 122, 168, 182, 183, 188, 189, 191, 192, 193, 196], "low": [1, 9, 20, 21, 24, 48, 49, 51, 52, 53, 55, 56, 57, 73, 74, 77, 93, 98, 103, 104, 116, 119, 122, 134, 141, 142, 143, 145, 146, 148, 149, 153, 157, 175, 178, 181, 191, 196, 197, 208], "paramet": [1, 2, 4, 6, 7, 9, 10, 11, 12, 14, 16, 18, 20, 21, 23, 24, 25, 27, 29, 31, 33, 34, 35, 37, 39, 40, 42, 44, 45, 47, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 66, 67, 69, 71, 73, 74, 75, 77, 79, 81, 83, 85, 87, 88, 90, 92, 93, 95, 96, 98, 99, 100, 101, 103, 104, 106, 107, 109, 111, 112, 113, 115, 116, 117, 119, 120, 122, 124, 126, 127, 128, 130, 131, 133, 134, 135, 137, 138, 139, 141, 142, 143, 145, 146, 148, 149, 150, 152, 153, 155, 157, 159, 160, 162, 164, 165, 166, 168, 170, 171, 172, 174, 175, 176, 178, 179, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 195, 196, 197, 199, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 220, 232, 233, 234, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249], "nrfx_gpiote_t": [1, 51], "wa": [1, 2, 6, 18, 23, 33, 39, 51, 55, 60, 66, 71, 73, 81, 85, 88, 90, 92, 93, 95, 99, 103, 104, 106, 111, 115, 119, 122, 127, 130, 133, 137, 141, 145, 148, 152, 164, 170, 174, 178, 179, 181, 182, 185, 186, 188, 191, 196, 197, 199, 206, 215, 220, 232, 239, 240, 241, 248], "first": [1, 6, 16, 18, 33, 48, 49, 51, 60, 67, 74, 75, 93, 95, 96, 106, 111, 112, 119, 122, 133, 134, 135, 141, 145, 146, 148, 149, 152, 153, 155, 191, 196, 197, 233, 234, 239, 241, 249], "argument": [1, 74, 75, 98, 119, 120, 234, 245], "deprec": [1, 6, 20, 21, 23, 39, 51, 55, 60, 73, 74, 75, 92, 99, 111, 115, 119, 137, 141, 145, 148, 152, 174, 178, 181, 185, 188, 191, 196, 213, 215, 220, 238, 248], "read": [1, 2, 4, 16, 18, 25, 29, 37, 48, 49, 55, 57, 71, 75, 79, 81, 87, 90, 93, 95, 96, 98, 109, 111, 112, 115, 116, 117, 119, 120, 122, 124, 133, 134, 135, 146, 148, 149, 150, 152, 153, 155, 157, 160, 170, 174, 178, 179, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 195, 196, 197, 240], "gpregret": [1, 104], "regist": [1, 2, 4, 7, 9, 11, 12, 14, 16, 18, 21, 23, 24, 25, 27, 29, 31, 33, 34, 35, 37, 39, 40, 42, 44, 45, 47, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 66, 67, 69, 71, 74, 75, 77, 79, 81, 83, 85, 87, 88, 90, 92, 93, 95, 96, 98, 99, 100, 101, 104, 106, 107, 109, 111, 112, 113, 115, 116, 117, 119, 120, 122, 124, 126, 127, 128, 131, 134, 135, 137, 138, 139, 142, 143, 145, 146, 148, 149, 150, 152, 153, 155, 157, 159, 160, 162, 165, 166, 168, 171, 172, 174, 175, 176, 178, 179, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 195, 196, 197, 199, 202, 203, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 220, 234, 240, 241, 246, 248], "two": [1, 56, 57, 60, 100, 111, 112, 113, 178, 181, 185, 186, 189, 192, 206, 220, 233, 234, 249], "nrf_power_gpregret_set": [1, 104], "nrf_power_gpregret_get": [1, 104], "reg_num": [1, 104], "both": [1, 2, 60, 61, 62, 73, 74, 81, 99, 101, 111, 113, 115, 117, 119, 141, 145, 148, 150, 152, 157, 178, 181, 183, 185, 186, 188, 191, 193, 197, 220], "them": [1, 48, 112, 196, 220, 246], "replac": [1, 16, 178, 181, 232, 241], "nrf_regulators_dcdcen_set": 1, "nrf_regulators_dcdcen_vddh_set": 1, "nrf_regulators_vreg_enable_set": [1, 126], "nrf_regulators_pofcon_set": 1, "nrf_regulators_pofcon_vddh_set": 1, "nrf_regulators_config_set": 1, "nrf_regulators_pofcon_get": 1, "nrf_regulators_pof_config_get": [1, 126], "renam": [1, 220], "nrf_regulators_mainregstatus_get": 1, "nrf_regulators_main_status_get": [1, 126], "nrf_regulators_pothr_v": 1, "xy": 1, "nrf_regulators_pof": 1, "thr": [1, 101, 103, 104, 126], "x": [1, 205, 234, 240], "v": [1, 6, 7, 23, 24, 104, 126, 205, 206, 207, 208, 209, 210], "y": 1, "nrf_regulators_porthrvddh_v": 1, "nrf_regulators_pof_thr": 1, "vddh": [1, 103, 104, 126], "nrf_regulators_pof_thrvddh_t": 1, "nrf_regulators_pof_thr_vddh_t": [1, 126], "indic": [1, 9, 16, 20, 21, 24, 25, 44, 48, 52, 56, 57, 59, 61, 69, 71, 74, 77, 79, 81, 87, 88, 92, 93, 96, 98, 100, 103, 104, 112, 119, 120, 122, 126, 127, 128, 141, 142, 148, 149, 150, 153, 155, 157, 162, 171, 172, 175, 176, 178, 181, 182, 183, 186, 189, 191, 192, 195, 197, 215, 239, 248], "presenc": [1, 2, 16, 18, 37, 48, 52, 53, 69, 93, 116, 127, 128, 155, 216, 217], "valu": [1, 2, 4, 6, 7, 9, 10, 11, 12, 16, 18, 20, 21, 23, 24, 25, 27, 29, 31, 33, 34, 35, 37, 39, 40, 42, 44, 45, 47, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 66, 67, 69, 71, 73, 74, 75, 77, 79, 81, 85, 87, 88, 90, 92, 93, 95, 96, 98, 99, 100, 101, 103, 104, 106, 107, 109, 111, 112, 113, 115, 116, 117, 119, 120, 122, 124, 126, 127, 128, 130, 131, 133, 134, 135, 137, 138, 139, 141, 142, 143, 145, 146, 148, 149, 150, 152, 153, 155, 157, 159, 160, 162, 164, 165, 166, 168, 170, 171, 172, 174, 175, 176, 178, 179, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 195, 196, 197, 199, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 220, 232, 233, 234, 237, 238, 239, 240, 241, 246, 248, 249], "sourc": [1, 20, 21, 23, 24, 25, 55, 56, 57, 61, 71, 74, 75, 77, 81, 87, 88, 93, 95, 98, 100, 104, 119, 127, 128, 133, 135, 157, 160, 168, 179, 182, 183, 185, 186, 188, 189, 191, 192, 193, 195, 197, 248, 249], "from": [1, 2, 16, 18, 20, 21, 23, 24, 25, 29, 33, 34, 35, 37, 42, 44, 48, 49, 51, 52, 55, 56, 57, 59, 60, 66, 67, 74, 75, 81, 90, 92, 93, 95, 96, 98, 103, 104, 106, 107, 111, 112, 113, 115, 119, 120, 122, 124, 127, 128, 133, 134, 135, 137, 138, 141, 142, 143, 145, 146, 148, 149, 150, 152, 155, 160, 162, 170, 174, 175, 176, 179, 185, 186, 188, 189, 191, 192, 196, 197, 201, 202, 206, 209, 215, 216, 217, 220, 234, 239, 240, 241, 248], "8v": 1, "2v": 1, "prototyp": [1, 6, 51, 178, 181], "event": [1, 2, 6, 7, 9, 10, 11, 12, 18, 20, 21, 23, 24, 25, 27, 29, 34, 35, 37, 39, 40, 45, 51, 52, 53, 55, 56, 57, 59, 61, 62, 66, 67, 69, 71, 73, 74, 75, 77, 81, 87, 88, 90, 92, 93, 99, 100, 101, 103, 104, 106, 107, 109, 111, 112, 113, 115, 116, 117, 119, 120, 122, 124, 126, 130, 131, 133, 134, 135, 137, 138, 139, 141, 142, 143, 145, 146, 148, 149, 150, 152, 153, 155, 157, 160, 162, 164, 165, 166, 168, 170, 171, 172, 174, 175, 176, 178, 179, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 196, 197, 199, 201, 202, 207, 208, 209, 210, 211, 213, 215, 216, 217, 234, 236, 240, 241], "accept": [1, 92, 96, 104, 134, 135, 157, 197], "request": [1, 2, 6, 9, 18, 20, 21, 29, 34, 35, 37, 52, 53, 55, 56, 57, 59, 60, 71, 77, 79, 88, 90, 99, 103, 107, 111, 112, 122, 128, 134, 135, 137, 138, 139, 141, 148, 157, 159, 160, 171, 172, 181, 185, 188, 191, 192, 193, 195, 196, 197, 206, 214, 215, 216, 217, 233, 234, 241, 246], "context": [1, 10, 39, 51, 55, 66, 111, 115, 119, 141, 145, 148, 152, 174, 178, 181, 188, 191, 196, 206, 213, 215, 220, 239], "previou": [1, 24, 25, 48, 49, 60, 92, 99, 111, 141, 142, 143, 179, 182, 188, 232, 240, 241], "nrfx_wdt_init": [1, 215], "nrf_wdt_task_stop_en": 1, "nrf_wdt_task_stop_enable_set": [1, 216, 217], "take": [1, 56, 57, 95, 111, 122, 126, 142, 143, 196, 197, 220, 234, 241], "boolean": [1, 104, 234], "nrfx_error_already_initi": [1, 238], "nrfx_error_alreadi": [1, 6, 10, 20, 23, 39, 51, 55, 60, 66, 73, 92, 99, 103, 111, 115, 119, 130, 133, 137, 141, 145, 148, 152, 164, 170, 174, 178, 181, 185, 188, 191, 196, 213, 215, 238], "one": [1, 6, 14, 40, 48, 49, 60, 67, 83, 87, 100, 104, 107, 112, 119, 122, 124, 141, 142, 143, 145, 148, 149, 152, 153, 155, 168, 175, 176, 178, 182, 188, 191, 196, 215, 220, 232, 234, 237, 241, 246, 249], "organ": [1, 103, 201], "definit": [1, 21, 48, 56, 107, 111, 112, 113, 185, 220, 238, 240], "nrf_saadc_value_t": [1, 141, 142, 143], "hold": [1, 18, 23, 25, 103, 119, 127, 159, 178, 181, 185, 186, 196, 201, 234], "convers": [1, 6, 7, 141, 142, 143], "result": [1, 6, 7, 12, 14, 18, 23, 24, 25, 48, 51, 53, 55, 57, 62, 74, 75, 83, 87, 88, 95, 101, 103, 111, 113, 117, 119, 122, 135, 139, 141, 142, 143, 150, 166, 170, 171, 172, 176, 181, 183, 191, 193, 217, 234, 240, 245], "void": [1, 2, 4, 6, 7, 9, 10, 11, 12, 14, 16, 18, 20, 21, 23, 24, 25, 27, 29, 33, 34, 35, 37, 39, 40, 42, 45, 47, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 66, 67, 69, 71, 73, 74, 75, 77, 79, 81, 83, 85, 87, 88, 90, 92, 93, 95, 96, 98, 99, 100, 101, 103, 104, 106, 107, 109, 111, 112, 113, 115, 116, 117, 119, 120, 122, 124, 126, 127, 128, 130, 131, 133, 134, 135, 137, 138, 139, 141, 142, 143, 145, 146, 148, 149, 150, 152, 153, 155, 157, 159, 160, 162, 164, 165, 166, 168, 170, 171, 172, 174, 175, 176, 178, 179, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 195, 196, 197, 199, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 233, 234, 237, 239, 241, 243, 244, 246, 247, 248, 249], "int16_t": [1, 99, 101, 122, 141, 142, 143], "return": [1, 2, 4, 6, 7, 9, 10, 11, 12, 16, 18, 20, 21, 23, 24, 25, 27, 29, 31, 33, 34, 35, 37, 39, 40, 42, 44, 45, 47, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 66, 67, 69, 71, 73, 74, 75, 77, 79, 81, 83, 85, 87, 88, 90, 92, 93, 95, 96, 98, 99, 100, 101, 103, 104, 106, 107, 109, 111, 112, 113, 115, 116, 117, 119, 120, 122, 124, 126, 127, 128, 130, 131, 133, 134, 135, 137, 138, 139, 141, 142, 143, 145, 146, 148, 149, 150, 152, 153, 155, 157, 159, 160, 162, 164, 165, 166, 168, 170, 171, 172, 174, 175, 176, 178, 179, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 195, 196, 197, 199, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 232, 233, 234, 236, 239, 240, 241, 243, 244, 245, 246, 248, 249], "case": [1, 39, 48, 49, 51, 56, 57, 60, 119, 120, 133, 134, 137, 141, 148, 149, 150, 152, 153, 178, 181, 182, 183, 186, 188, 191, 196, 197, 220, 234], "have": [1, 2, 6, 18, 44, 48, 60, 81, 93, 112, 120, 152, 155, 191, 196, 197, 206, 215, 234, 246], "alreadi": [1, 6, 10, 16, 20, 23, 39, 51, 55, 60, 66, 73, 85, 92, 99, 103, 111, 115, 119, 130, 133, 137, 141, 145, 148, 152, 164, 170, 174, 178, 181, 185, 186, 188, 191, 196, 201, 213, 215, 238, 246], "been": [1, 6, 7, 9, 11, 12, 18, 20, 21, 24, 25, 27, 29, 33, 37, 40, 45, 51, 55, 56, 57, 59, 60, 61, 62, 67, 69, 71, 74, 75, 77, 81, 87, 88, 90, 93, 95, 100, 101, 104, 106, 111, 112, 113, 119, 120, 122, 124, 126, 133, 134, 135, 138, 139, 142, 143, 146, 148, 149, 150, 152, 153, 155, 162, 165, 166, 168, 171, 172, 175, 176, 179, 182, 183, 186, 188, 189, 191, 192, 193, 196, 197, 199, 202, 210, 211, 215, 216, 217, 241], "execut": [1, 6, 56, 57, 81, 88, 95, 119, 120, 133, 134, 135, 137, 148, 155, 159, 160, 181, 195, 197, 206, 234, 237, 240, 249], "nrfx_error_invalid_st": [1, 6, 20, 23, 39, 51, 55, 60, 73, 92, 99, 106, 111, 115, 119, 133, 137, 141, 145, 148, 152, 174, 178, 181, 185, 188, 191, 196, 213, 215, 238], "wai": [1, 16, 103, 111, 112, 197, 201, 220, 240, 247, 248], "activ": [1, 2, 7, 9, 18, 21, 24, 25, 34, 35, 37, 42, 52, 53, 55, 56, 57, 59, 61, 62, 71, 74, 75, 81, 87, 88, 92, 93, 96, 104, 111, 112, 113, 115, 116, 117, 119, 120, 122, 133, 134, 135, 141, 145, 146, 148, 149, 150, 152, 153, 162, 165, 166, 168, 171, 172, 175, 176, 179, 181, 182, 183, 186, 189, 191, 192, 196, 197, 199, 210, 215, 241], "nrfx_qspi_activ": [1, 119], "devic": [1, 14, 29, 42, 44, 83, 104, 119, 120, 122, 152, 155, 181, 186, 196, 197, 219, 234, 240, 248], "fail": [1, 6, 18, 60, 126, 148, 152, 178, 181, 185, 191], "reconnect": 1, "host": [1, 196, 197, 220, 240, 245], "after": [1, 6, 7, 9, 20, 23, 34, 35, 52, 53, 55, 56, 57, 60, 73, 74, 75, 83, 92, 95, 99, 100, 103, 109, 111, 112, 115, 119, 120, 122, 137, 141, 148, 149, 152, 153, 168, 170, 174, 178, 179, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 196, 197, 210, 211, 215, 220, 239, 240, 241, 248], "usb": [1, 103, 104, 196, 197, 199, 201, 202], "cabl": 1, "being": [1, 16, 56, 57, 60, 71, 77, 87, 88, 90, 92, 95, 99, 112, 119, 133, 135, 141, 191, 239, 248], "nrfx_comp_init": [1, 23], "nrfx_comp_reconfigur": [1, 23], "differenti": [1, 24, 141, 142, 197], "p0": 1, "nrf52820": [1, 219], "forward": [1, 6, 92], "despit": 1, "interrupt": [1, 2, 6, 7, 9, 10, 11, 12, 18, 20, 21, 23, 24, 25, 27, 29, 37, 39, 40, 45, 51, 52, 53, 55, 56, 57, 60, 61, 62, 66, 67, 69, 71, 73, 74, 75, 81, 87, 88, 90, 92, 93, 99, 100, 101, 103, 104, 111, 112, 113, 115, 116, 117, 119, 120, 122, 128, 130, 131, 133, 134, 135, 137, 138, 139, 141, 142, 143, 145, 146, 148, 149, 150, 152, 153, 155, 159, 162, 164, 165, 166, 168, 170, 171, 172, 174, 175, 176, 178, 179, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 195, 196, 197, 199, 201, 202, 205, 206, 207, 210, 211, 213, 215, 216, 217, 220, 234, 236, 246], "extens": [1, 122, 185, 209], "aggreg": 1, "basic": [1, 130], "hardwar": [1, 2, 4, 7, 9, 11, 12, 14, 16, 18, 21, 24, 25, 27, 29, 31, 34, 35, 37, 40, 42, 44, 45, 47, 48, 49, 52, 53, 56, 57, 59, 61, 62, 67, 69, 71, 74, 75, 77, 79, 81, 83, 85, 87, 88, 90, 92, 93, 96, 98, 100, 101, 103, 104, 107, 109, 112, 113, 116, 117, 120, 122, 124, 126, 127, 128, 131, 134, 135, 137, 138, 139, 141, 142, 143, 146, 148, 149, 150, 153, 155, 157, 160, 162, 165, 166, 168, 171, 172, 175, 176, 179, 182, 183, 186, 188, 189, 191, 192, 193, 195, 196, 197, 199, 202, 203, 205, 206, 207, 208, 209, 210, 211, 214, 216, 217], "within": [1, 51, 59, 60, 61, 66, 79, 92, 124, 141, 168, 188, 191, 210, 220, 234, 247], "singl": [1, 6, 23, 24, 48, 49, 62, 88, 92, 93, 95, 96, 103, 106, 111, 112, 113, 119, 120, 122, 133, 135, 141, 142, 143, 145, 148, 150, 152, 186, 191, 196, 201, 234], "nrfx_in_rang": [1, 234], "rang": [1, 9, 20, 21, 48, 49, 59, 90, 92, 98, 122, 128, 142, 143, 159, 234, 248], "word": [1, 4, 16, 27, 60, 61, 62, 83, 95, 96, 99, 100, 112, 119, 120, 122, 133, 134, 135, 141, 164, 165, 166, 168, 234, 240, 249], "flash": [1, 16, 95, 96, 119, 120, 133, 155, 196], "halfword": [1, 95, 96], "modifi": [1, 33, 34, 35, 56, 57, 60, 62, 81, 99, 101, 111, 112, 113, 115, 117, 119, 145, 148, 150, 152, 155, 162, 178, 181, 183, 185, 188, 191, 193, 232, 249], "nrfx_spim_abort": [1, 148], "onc": [1, 95, 99, 103, 111, 112, 113, 137, 141, 191], "expect": [1, 42, 93, 138, 148, 185, 191, 196, 240], "transact": [1, 62, 81, 87, 88, 101, 119, 122, 148, 149, 150, 152, 153, 155, 157, 168, 178, 179, 181, 182, 183, 185, 186, 192, 193, 197], "nrfx_spim_flag_no_xfer_evt_handl": [1, 148], "nrfx_spim_flag_hold_xf": [1, 148], "nrfx_spim_flag_repeated_xf": [1, 148], "option": [1, 6, 18, 23, 51, 55, 57, 60, 61, 62, 73, 93, 96, 99, 111, 112, 113, 115, 119, 120, 130, 133, 137, 139, 141, 145, 148, 152, 168, 174, 178, 181, 185, 188, 191, 196, 215, 220, 245], "final": [1, 56, 57, 111, 119, 120, 178, 181], "109": [1, 152], "famili": 1, "nrfx_timer_frequency_static_check": [1, 174], "nrfx_spim_frequency_static_check": [1, 148], "nrfx_wdt_reconfigur": [1, 215], "ha": [1, 6, 7, 9, 11, 12, 16, 18, 20, 21, 24, 25, 27, 29, 33, 37, 40, 45, 51, 55, 56, 57, 59, 60, 61, 62, 67, 69, 71, 74, 75, 77, 81, 87, 88, 90, 93, 95, 96, 98, 100, 101, 103, 104, 106, 109, 111, 112, 113, 119, 120, 122, 124, 126, 133, 134, 135, 138, 139, 141, 142, 143, 146, 148, 149, 150, 152, 153, 155, 162, 165, 166, 168, 171, 172, 175, 176, 179, 182, 183, 185, 186, 188, 189, 191, 192, 193, 196, 197, 199, 201, 202, 206, 210, 211, 215, 216, 217, 234, 241], "nrfx_pwm_stopped_check": [1, 111], "follow": [1, 6, 20, 21, 23, 42, 51, 55, 56, 57, 60, 73, 98, 99, 111, 115, 119, 120, 122, 130, 133, 137, 141, 145, 148, 152, 174, 178, 181, 185, 188, 191, 215, 219, 220, 234, 245], "correspond": [1, 2, 20, 21, 34, 35, 40, 55, 56, 57, 61, 62, 67, 112, 120, 122, 134, 135, 137, 139, 141, 149, 153, 182, 219, 234, 241], "reconfigur": [1, 23, 48, 49, 51, 99, 111, 115, 119, 133, 145, 148, 152, 174, 178, 181, 185, 188, 191, 215], "outsid": [1, 59, 148, 240], "process": [1, 6, 9, 12, 20, 25, 53, 56, 57, 60, 62, 75, 87, 88, 93, 95, 99, 101, 103, 113, 117, 119, 120, 135, 139, 143, 150, 166, 176, 183, 185, 191, 193, 196, 201, 217, 220, 234, 249], "need": [1, 6, 20, 21, 23, 25, 51, 55, 56, 57, 60, 61, 62, 93, 95, 96, 103, 104, 111, 112, 113, 119, 120, 128, 134, 135, 141, 142, 143, 145, 146, 148, 149, 150, 152, 153, 168, 178, 181, 185, 196, 203, 215, 233, 234, 239, 240, 241, 245, 246], "relev": 1, "reportper_inten": [1, 115], "It": [1, 34, 35, 42, 51, 55, 60, 93, 95, 96, 133, 135, 137, 152, 159, 185, 188, 191, 196, 197, 220, 234], "allow": [1, 4, 48, 49, 55, 60, 92, 104, 119, 126, 134, 141, 155, 160, 174, 178, 188, 191, 195, 196, 197, 215, 216, 220, 241, 249], "explicitli": [1, 120, 188], "associ": [1, 16, 33, 34, 35, 51, 52, 53, 56, 57, 62, 88, 101, 107, 112, 113, 119, 122, 135, 138, 139, 141, 143, 150, 155, 183, 193, 195, 234, 236, 240, 241, 246, 249], "reportrdi": [1, 116], "nrfx_error_forbidden": [1, 55, 92, 119, 141, 148, 188, 191, 215, 238], "nrfx_spim_init": [1, 148], "attempt": [1, 14, 83, 141, 162, 191, 234], "softwar": [1, 59, 81, 134, 148, 195, 197], "chip": [1, 95, 104, 119, 120, 127, 133, 134, 135, 148, 149, 150, 248], "simultan": [1, 60], "static": [1, 9, 122, 191, 220, 234], "achiev": [1, 120, 141, 148, 149, 191], "nrfx_twim_xfer_desc": [1, 181], "creation": 1, "ani": [1, 9, 14, 23, 24, 48, 49, 55, 56, 57, 60, 73, 74, 83, 93, 95, 99, 111, 115, 119, 120, 124, 133, 134, 135, 137, 141, 142, 145, 148, 149, 150, 152, 160, 178, 181, 185, 188, 191, 196, 197, 220, 234, 243], "auxiliari": [1, 9, 55, 88, 141, 196], "nrfx_khz_to_hz": [1, 234], "nrfx_mhz_to_hz": [1, 234], "convert": [1, 6, 7, 23, 104, 116, 117, 126, 137, 138, 141, 142, 143, 170, 174, 205, 234, 236], "hertz": 1, "sophist": 1, "handl": [1, 6, 9, 60, 93, 95, 103, 111, 119, 130, 137, 141, 182, 188, 191, 196, 201, 246], "preprocessor": [1, 220, 234], "symbol": [1, 11, 16, 21, 24, 25, 44, 48, 52, 56, 57, 59, 61, 69, 71, 74, 77, 79, 81, 87, 88, 93, 96, 98, 100, 103, 104, 112, 120, 122, 126, 127, 128, 138, 141, 142, 149, 150, 153, 155, 162, 171, 172, 175, 176, 182, 183, 186, 189, 192, 195, 203, 210, 215, 219, 234, 235, 248], "nrfx_util": 1, "number": [1, 2, 6, 11, 16, 18, 24, 27, 29, 33, 34, 35, 37, 40, 42, 44, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 69, 74, 77, 79, 81, 87, 88, 90, 92, 93, 95, 96, 99, 100, 101, 103, 104, 106, 109, 111, 112, 113, 115, 116, 117, 119, 120, 122, 124, 130, 131, 133, 134, 135, 137, 138, 141, 142, 143, 145, 146, 148, 149, 150, 152, 153, 155, 157, 159, 168, 174, 175, 176, 178, 179, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 195, 196, 197, 203, 205, 206, 207, 210, 216, 233, 234, 237, 238, 240, 243, 244, 249], "group": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249], "dppic": [1, 34, 35, 243], "seqstart": [1, 112, 113], "task": [1, 2, 6, 7, 9, 11, 12, 16, 18, 20, 21, 23, 24, 25, 33, 34, 35, 37, 39, 40, 42, 51, 52, 53, 55, 56, 57, 59, 61, 62, 66, 67, 69, 71, 74, 75, 77, 87, 88, 93, 99, 100, 101, 104, 106, 107, 109, 111, 112, 113, 115, 116, 117, 120, 122, 131, 134, 135, 137, 138, 139, 141, 142, 143, 148, 149, 150, 153, 160, 165, 166, 168, 171, 172, 174, 175, 176, 179, 181, 182, 183, 186, 188, 189, 191, 192, 193, 197, 199, 207, 210, 211, 215, 216, 217, 241], "seqend": [1, 112, 113], "sequenc": [1, 111, 112, 113, 148, 149, 153, 179, 182, 186], "index": [1, 2, 4, 10, 11, 12, 16, 27, 34, 35, 39, 40, 44, 48, 49, 51, 52, 53, 56, 60, 66, 67, 69, 77, 79, 81, 85, 87, 88, 104, 107, 109, 111, 112, 113, 115, 122, 133, 135, 137, 138, 139, 141, 142, 145, 146, 148, 149, 152, 153, 155, 174, 175, 178, 179, 181, 182, 185, 186, 188, 191, 192, 195, 209, 210, 211, 213, 215, 216, 233, 234, 239, 241, 243, 244, 247], "nrf_rtc_capture_task_get": [1, 138, 139], "captur": [1, 55, 56, 57, 119, 137, 138, 139, 141, 142, 143, 157, 174, 175, 176, 197], "cc": [1, 55, 56, 142, 143], "maskabl": [1, 90, 216], "address": [1, 2, 4, 6, 7, 9, 11, 12, 16, 18, 20, 21, 23, 24, 25, 27, 29, 34, 35, 37, 39, 40, 42, 51, 52, 53, 55, 56, 57, 59, 61, 62, 67, 69, 71, 74, 75, 77, 79, 81, 83, 87, 88, 90, 93, 95, 96, 99, 100, 101, 104, 106, 107, 111, 112, 113, 115, 116, 117, 119, 120, 122, 124, 128, 131, 133, 134, 135, 137, 138, 139, 142, 143, 146, 148, 149, 150, 153, 155, 162, 168, 171, 172, 174, 175, 176, 178, 179, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 195, 197, 199, 206, 210, 211, 215, 216, 217, 234, 238, 241, 243, 249], "status": 1, "clear": [1, 2, 7, 9, 11, 12, 16, 18, 21, 24, 25, 27, 29, 33, 34, 35, 37, 40, 45, 48, 49, 51, 52, 53, 55, 56, 57, 59, 61, 62, 67, 69, 71, 74, 75, 77, 81, 87, 88, 90, 93, 100, 101, 103, 104, 106, 109, 112, 113, 115, 116, 117, 120, 122, 124, 127, 131, 134, 135, 137, 138, 139, 142, 143, 146, 149, 150, 153, 155, 160, 162, 165, 166, 168, 171, 172, 174, 175, 176, 179, 182, 183, 185, 186, 188, 189, 191, 192, 193, 196, 197, 199, 202, 203, 205, 207, 210, 211, 216, 217, 232, 233, 239, 240, 241, 248], "endpoint": [1, 106, 107, 196, 197, 241], "gppi": 1, "nrfx_voltage_threshold_to_int": 1, "nrfx_comp_voltage_threshold_to_int": [1, 23], "scheme": 1, "hal_config": 1, "contain": [1, 2, 14, 16, 18, 21, 37, 51, 60, 62, 83, 87, 90, 93, 101, 111, 122, 126, 133, 135, 141, 143, 150, 153, 155, 183, 188, 191, 193, 196, 220, 237, 239, 240, 243, 245, 247, 249], "level": [1, 24, 48, 49, 51, 59, 93, 116, 117, 119, 120, 122, 157, 205, 206, 245], "config": [1, 6, 7, 62, 75, 93, 130, 135, 142, 143, 148, 191, 193, 197], "nrfx_pwm_is_stop": 1, "nrf_qdec_led_not_connect": 1, "nrf_qdec_pin_not_connect": [1, 116], "consist": [1, 2, 93, 104, 122, 196], "other": [1, 21, 75, 98, 112, 119, 145, 148, 152, 178, 181, 185, 188, 191, 196, 220, 234, 246, 249], "similar": 1, "dedic": [1, 16, 48, 74, 75, 100, 112, 119, 142, 148, 149, 153, 181, 182, 186, 192, 197], "shall": [1, 18, 37, 55, 56, 57, 61, 112, 116, 146, 149, 153, 168], "defin": [1, 2, 6, 10, 11, 16, 18, 21, 23, 24, 25, 27, 34, 37, 39, 40, 42, 44, 48, 51, 52, 53, 55, 56, 57, 59, 60, 61, 69, 71, 73, 74, 77, 79, 81, 83, 87, 88, 90, 92, 93, 96, 98, 99, 100, 103, 104, 106, 109, 111, 112, 113, 115, 116, 119, 120, 122, 126, 127, 128, 130, 133, 134, 135, 137, 138, 141, 142, 145, 146, 148, 149, 150, 152, 153, 155, 160, 162, 164, 168, 170, 171, 172, 174, 175, 176, 178, 179, 181, 182, 183, 185, 186, 188, 189, 191, 192, 195, 196, 197, 205, 206, 207, 210, 215, 216, 217, 220, 233, 234, 235, 236, 237, 238, 240, 245, 248, 249], "form": [1, 234], "numer": [1, 103, 196, 201, 234], "nrfx_config_api_ver_major": [1, 234, 235], "nrfx_config_api_ver_minor": [1, 234, 235], "nrfx_config_api_ver_micro": [1, 234, 235], "sever": [1, 95, 104, 141, 155, 234, 245], "some": [1, 95, 133, 135, 145, 148, 152, 178, 181, 185, 188, 191, 220, 234, 241, 243], "addit": [1, 56, 57, 60, 95, 111, 112, 145, 148, 174, 178, 181, 188, 240, 241, 243, 249], "uint8_t": [1, 2, 6, 9, 10, 11, 12, 14, 16, 18, 20, 21, 23, 24, 25, 27, 33, 34, 35, 37, 39, 40, 42, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 66, 67, 69, 71, 73, 74, 75, 77, 79, 81, 83, 85, 87, 88, 90, 92, 93, 95, 96, 99, 100, 101, 104, 107, 109, 111, 112, 113, 115, 117, 119, 120, 122, 124, 128, 130, 131, 133, 134, 135, 137, 138, 139, 141, 142, 143, 145, 146, 148, 149, 150, 152, 153, 155, 157, 164, 166, 168, 170, 171, 172, 174, 175, 176, 178, 179, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 195, 196, 197, 201, 203, 205, 209, 210, 211, 213, 215, 216, 217, 239, 241, 243, 244, 247, 249], "uint32_t": [1, 2, 4, 6, 7, 9, 10, 11, 12, 14, 16, 18, 20, 21, 23, 24, 25, 27, 29, 31, 34, 35, 37, 39, 40, 42, 44, 45, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 66, 67, 69, 71, 74, 75, 77, 79, 81, 83, 87, 88, 90, 92, 93, 95, 96, 98, 99, 100, 101, 104, 106, 107, 109, 111, 112, 113, 115, 116, 117, 119, 120, 122, 124, 126, 127, 128, 131, 133, 134, 135, 137, 138, 139, 141, 142, 143, 145, 146, 148, 149, 150, 152, 153, 155, 157, 159, 160, 162, 164, 165, 166, 168, 171, 172, 174, 175, 176, 178, 179, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 195, 196, 197, 199, 202, 203, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 232, 233, 234, 237, 239, 241, 243, 244, 247, 248, 249], "nrf_i2s_pins_set": [1, 61, 62], "nrf_i2s_configur": [1, 61, 62], "gain": [1, 99, 100, 101, 122, 141, 142, 196], "unsign": [1, 232, 234, 240], "integ": [1, 23, 81, 98, 170, 205, 234], "nrfx_timer_default_config": [1, 174], "desir": [1, 6, 56, 57, 87, 88, 93, 95, 96, 133, 135, 141, 148, 149, 174, 175, 189, 220, 232], "which": [1, 2, 6, 18, 20, 21, 33, 34, 35, 37, 40, 48, 49, 51, 52, 53, 55, 56, 57, 60, 61, 62, 66, 67, 69, 74, 87, 88, 92, 93, 95, 100, 101, 104, 106, 107, 109, 111, 112, 113, 119, 122, 124, 131, 133, 134, 135, 137, 138, 139, 141, 142, 143, 145, 148, 149, 150, 153, 162, 168, 171, 172, 175, 176, 181, 182, 183, 185, 186, 191, 192, 193, 215, 216, 217, 219, 220, 234, 240, 241, 243, 244, 245, 249], "reload": [1, 160, 215, 216, 217], "caus": [1, 16, 119, 148, 149, 150, 155, 197, 206, 220], "access": [1, 2, 4, 7, 9, 11, 12, 14, 16, 18, 21, 24, 25, 27, 29, 31, 34, 35, 37, 40, 42, 44, 45, 47, 48, 49, 52, 53, 56, 57, 59, 60, 61, 62, 67, 69, 71, 74, 75, 77, 79, 81, 83, 85, 87, 88, 90, 92, 93, 95, 96, 98, 100, 101, 104, 107, 109, 112, 113, 116, 117, 120, 122, 124, 126, 127, 128, 131, 133, 134, 135, 138, 139, 142, 143, 146, 149, 150, 153, 155, 157, 160, 162, 165, 166, 168, 171, 172, 175, 176, 179, 182, 183, 186, 189, 192, 193, 195, 196, 197, 199, 202, 203, 205, 206, 207, 208, 209, 210, 211, 214, 216, 217, 220], "nrf_gpio_pin_mcu_select": 1, "nrf_gpio_pin_mcusel_t": 1, "nrf_gpio_pin_control_select": [1, 48], "nrf_gpio_pin_sel_t": [1, 48], "spuriou": [1, 181], "nrf_qdec_reportper_dis": 1, "nrf_qdec_pio_assign": 1, "nrf_qdec_pins_set": [1, 116], "nrf_timer_frequency_set": 1, "nrf_timer_frequency_get": 1, "nrf_timer_prescaler_set": [1, 175, 176], "nrf_timer_prescaler_get": [1, 175, 176], "mark": [1, 55, 148, 149, 150, 157, 196], "unus": [1, 33, 51, 55, 93, 106], "variant": 1, "should": [1, 6, 48, 52, 53, 56, 95, 98, 112, 113, 119, 122, 130, 137, 148, 155, 168, 170, 185, 186, 191, 193, 196, 203, 206, 209, 220, 234, 240, 245], "redund": 1, "nrfx_pwm_sequence_values_upd": 1, "nrfx_pwm_sequence_length_upd": 1, "nrfx_pwm_sequence_repeats_upd": 1, "nrfx_pwm_sequence_end_delay_upd": 1, "nrfx_pwm_sequence_upd": [1, 111], "move": [1, 92], "inlin": [1, 122], "header": [1, 18, 44, 122, 220, 234], "refactor": 1, "method": 1, "invert": [1, 111], "polar": [1, 51, 52, 53, 111, 112, 115, 116, 117, 120, 148, 149, 150, 168, 205], "arrai": [1, 44, 48, 49, 77, 104, 111, 112, 113, 119, 122, 141, 149, 150, 182, 183, 210, 234, 243, 244, 249], "insid": [1, 122, 185, 188, 191, 196, 197, 240], "mask": [1, 2, 7, 9, 10, 11, 12, 18, 21, 23, 24, 25, 27, 29, 34, 35, 37, 39, 40, 45, 48, 49, 52, 53, 56, 57, 61, 62, 67, 69, 71, 74, 75, 77, 79, 81, 83, 87, 88, 90, 92, 93, 100, 101, 104, 106, 107, 109, 112, 113, 116, 117, 120, 122, 126, 127, 128, 131, 134, 135, 137, 138, 139, 142, 143, 146, 149, 150, 153, 155, 160, 162, 165, 166, 168, 171, 172, 175, 176, 179, 182, 183, 186, 188, 189, 191, 192, 193, 195, 197, 199, 202, 207, 208, 210, 211, 213, 216, 217, 233, 234, 239, 241, 243, 244, 247, 248, 249], "As": [1, 92, 103, 119, 159], "consequ": [1, 85, 111, 241], "nrfx_pwm_pin_invert": 1, "nrf_wdt_start": 1, "nrf_wdt_request_statu": 1, "name": [1, 52, 155, 196, 219, 220, 234], "nrf_wdt_started_check": [1, 216, 217], "nrf_wdt_request_status_check": [1, 216, 217], "respect": [1, 112, 119, 219], "mislead": 1, "descript": [1, 2, 37, 55, 88, 143, 145, 148, 191, 196], "nrf_rtc_event_dis": [1, 138, 139], "nrf9161": [1, 219], "nrf9131": [1, 219], "sip": [1, 219], "nrf9120_xxaa": [1, 219], "compil": [1, 148, 149, 174, 175, 220, 240], "161": 1, "53": 1, "abort": [1, 2, 20, 37, 62, 88, 101, 113, 122, 133, 134, 141, 143, 145, 148, 150, 168, 183, 188, 191, 193, 196], "suspend": [1, 149, 178, 179, 181, 182, 186, 189, 196, 197], "nrfx_config_api_ver_2_9": 1, "nrfx_config_api_ver_2_10": 1, "guard": [1, 122], "break": [1, 189, 192], "signatur": 1, "nrfx_ipc_gpmem_get": [1, 66], "data": [1, 2, 6, 7, 16, 18, 29, 37, 44, 51, 55, 60, 62, 66, 67, 87, 88, 92, 93, 95, 96, 99, 100, 101, 103, 111, 112, 113, 115, 119, 120, 122, 124, 130, 133, 134, 135, 141, 142, 145, 146, 148, 149, 150, 152, 153, 157, 164, 168, 170, 171, 174, 178, 179, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 195, 196, 197, 201, 215, 234, 237, 238, 240, 249], "gpmem": 1, "nrfx_ipc_mem_get": 1, "sampl": [1, 6, 7, 24, 60, 61, 74, 99, 100, 101, 115, 116, 117, 120, 122, 141, 142, 143, 145, 146, 148, 149, 150, 152, 153, 168, 208], "part": [1, 2, 29, 56, 60, 95, 141, 196, 197, 220], "zephyrproject": 1, "rto": 1, "hal_nord": 1, "repositori": [1, 220], "nrfx_": [1, 220, 234], "periph": [1, 155], "_inst_handler_get": 1, "_inst_get": 1, "nrf_timer_prescaler_calcul": [1, 175], "comput": [1, 106, 149, 175, 234, 249], "prescal": [1, 9, 74, 137, 138, 139, 149, 150, 157, 175, 176], "nrf_timer_base_frequency_get": [1, 175], "nrfx_reset_reason_ctrlap_mask": [1, 248], "nrfx_reset_reason_mask_t": [1, 248], "nrf9160": [1, 95, 219], "nrfx_reset_reason_sreq_mask": [1, 248], "51": 1, "magic": 1, "nrf_twim_event_t": [1, 182, 183], "nrfx_rounded_div": [1, 234], "neg": [1, 122, 141, 142, 143, 157, 178], "bound": [1, 141, 152, 220, 234], "warn": [1, 103, 104, 234, 245], "nrf_clock_is_run": [1, 21], "fals": [1, 2, 6, 7, 9, 10, 11, 12, 14, 16, 18, 20, 21, 23, 24, 25, 27, 29, 34, 35, 37, 39, 40, 42, 45, 47, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 66, 67, 69, 71, 73, 74, 75, 77, 79, 81, 83, 85, 87, 88, 90, 92, 93, 95, 96, 98, 99, 100, 101, 103, 104, 109, 111, 112, 113, 115, 117, 119, 120, 122, 124, 126, 127, 128, 130, 131, 133, 134, 135, 137, 138, 139, 141, 142, 143, 145, 146, 148, 149, 150, 152, 153, 155, 157, 159, 162, 164, 165, 166, 168, 170, 171, 172, 174, 175, 176, 178, 179, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 195, 196, 197, 199, 201, 202, 205, 206, 207, 209, 210, 211, 213, 214, 215, 216, 217, 232, 233, 234, 239, 240, 241, 247], "posit": [1, 11, 12, 21, 29, 48, 49, 56, 57, 67, 69, 71, 87, 88, 104, 122, 133, 134, 135, 141, 142, 143, 162, 165, 205, 206, 234, 236, 239, 240], "gcc": 1, "nrfx_nfct_param_id_fdt_min": [1, 92], "sett": 1, "framedelaymin": [1, 93], "nrf_timer_cc_count_max": [1, 175], "maximum": [1, 2, 6, 9, 11, 18, 40, 42, 56, 57, 59, 79, 93, 99, 100, 104, 122, 128, 134, 137, 138, 142, 143, 148, 149, 150, 153, 159, 175, 182, 185, 186, 191, 192, 193, 196, 205, 210, 234, 237, 249], "nrf_timer_all_channels_int_mask": [1, 175], "creat": [1, 10, 12, 25, 39, 48, 51, 53, 56, 57, 60, 62, 67, 75, 81, 88, 101, 104, 111, 113, 115, 117, 126, 134, 135, 137, 138, 139, 143, 145, 148, 150, 152, 166, 174, 175, 176, 178, 181, 183, 185, 188, 191, 193, 195, 196, 210, 215, 216, 217, 234, 241], "factor": [1, 7, 142, 175, 176], "nrfx_max": [1, 234], "nrfx_min": [1, 234], "nrfx_ab": [1, 234], "47": 1, "log": [1, 220, 245], "nrfx_uart_init": [1, 188], "nrfx_uarte_init": [1, 191], "reduc": [1, 95, 96, 191, 249], "info": [1, 16, 29, 44, 245], "io3": [1, 119, 120], "nrfx_qspi_mem_busy_check": [1, 119], "line": [1, 16, 103, 119, 120, 135, 148, 149, 178, 181, 189, 196, 197, 199, 201, 220, 240], "kept": [1, 55, 56, 57, 112, 119, 191, 196], "high": [1, 9, 20, 21, 23, 24, 47, 48, 49, 51, 52, 59, 93, 104, 115, 116, 119, 126, 137, 141, 142, 143, 145, 146, 148, 149, 152, 153, 157, 197, 199, 208, 214], "prevent": [1, 16, 55, 71, 128, 153, 185, 186, 191], "memori": [1, 14, 16, 42, 44, 60, 66, 67, 79, 81, 83, 87, 90, 92, 95, 96, 100, 119, 120, 122, 124, 133, 134, 135, 149, 152, 153, 155, 182, 188, 191, 195, 203, 232, 234, 238, 240, 245, 249], "incorrectli": 1, "current": [1, 6, 9, 20, 23, 24, 25, 48, 49, 51, 56, 57, 59, 60, 67, 75, 87, 88, 93, 95, 96, 98, 99, 100, 101, 103, 104, 111, 112, 119, 120, 122, 126, 133, 134, 135, 137, 141, 145, 149, 150, 153, 155, 157, 159, 160, 164, 165, 166, 168, 178, 181, 182, 183, 186, 188, 191, 195, 196, 197, 201, 203, 206, 220, 234], "rxframestart": [1, 93], "nfc": [1, 44, 92, 93, 104, 127, 248], "frame": [1, 60, 61, 92, 93, 99, 119, 122, 168, 189, 192, 196, 197], "bit": [1, 2, 6, 7, 9, 11, 12, 14, 16, 18, 21, 24, 25, 27, 29, 34, 35, 37, 40, 45, 48, 49, 52, 53, 56, 57, 59, 60, 61, 62, 67, 69, 71, 74, 75, 81, 83, 87, 88, 90, 92, 93, 95, 96, 99, 100, 101, 103, 104, 112, 113, 116, 117, 119, 120, 122, 124, 127, 131, 133, 134, 135, 137, 138, 139, 142, 143, 145, 146, 148, 149, 150, 152, 153, 155, 157, 159, 160, 162, 164, 165, 166, 168, 171, 172, 174, 175, 176, 179, 182, 183, 186, 188, 189, 191, 192, 193, 195, 197, 199, 202, 203, 206, 208, 209, 210, 211, 215, 216, 217, 232, 233, 234, 236, 239, 240, 241, 248], "sel_r": [1, 92, 93], "auto": [1, 93, 111, 142, 157], "respons": [1, 51, 56, 57, 85, 92, 104, 111, 112, 137, 185, 191, 197, 220], "calibr": [1, 20, 21, 141, 142, 143, 160, 171, 172], "procedur": [1, 2, 20, 55, 56, 93, 104, 122, 137, 145, 148, 178, 181, 196], "so": [1, 34, 35, 48, 49, 52, 53, 74, 75, 141, 148, 152, 181, 185, 188, 191, 196, 215, 220, 234], "retain": [1, 16, 29, 48, 49, 59, 77, 126, 247], "previous": [1, 34, 35, 51, 60, 107, 122, 131, 215, 240, 246], "compat": [1, 122, 196], "run": [1, 9, 18, 20, 21, 23, 55, 77, 92, 96, 119, 133, 145, 148, 159, 210, 211, 215, 216, 217, 220, 232, 240], "start": [1, 2, 4, 6, 7, 9, 16, 18, 20, 21, 23, 24, 37, 42, 48, 49, 55, 56, 57, 59, 60, 61, 62, 71, 73, 74, 77, 81, 87, 88, 92, 93, 95, 96, 98, 99, 100, 101, 111, 112, 113, 116, 117, 119, 120, 122, 128, 130, 131, 134, 135, 138, 139, 141, 142, 143, 145, 148, 149, 150, 153, 159, 164, 165, 168, 170, 171, 175, 178, 179, 181, 182, 183, 186, 188, 189, 191, 192, 193, 195, 196, 197, 199, 209, 215, 216, 217, 220, 240, 249], "end": [1, 2, 7, 18, 23, 24, 37, 48, 49, 56, 81, 87, 90, 92, 93, 111, 112, 122, 141, 142, 143, 148, 149, 153, 168, 178, 181, 182, 183, 220], "order": [1, 6, 18, 37, 93, 145, 146, 148, 149, 150, 152, 153, 206], "might": [1, 99, 111], "fill": [1, 6, 9, 29, 55, 59, 60, 88, 92, 93, 101, 120, 126, 134, 135, 137, 141, 142, 150, 159, 183, 185, 188, 191, 192, 195, 196, 205, 208, 220, 249], "doubl": [1, 61, 92, 93, 115, 116, 117, 119, 141, 168, 188, 191], "through": [1, 2, 18, 21, 34, 35, 37, 40, 52, 53, 56, 57, 60, 61, 62, 67, 69, 74, 87, 88, 100, 101, 104, 109, 112, 113, 122, 131, 134, 135, 138, 139, 142, 143, 149, 150, 153, 168, 171, 172, 175, 176, 182, 183, 186, 191, 192, 193, 195, 216, 217, 220, 234], "limit": [1, 59, 122, 141, 142, 143, 152, 159, 160, 196, 232, 234, 237], "could": [1, 119, 220, 240], "spurious": 1, "field": [1, 2, 16, 29, 48, 49, 52, 53, 60, 62, 75, 92, 93, 99, 101, 104, 111, 112, 113, 115, 117, 119, 122, 127, 128, 141, 145, 148, 150, 152, 178, 181, 183, 185, 188, 191, 193, 233, 248], "skip": [1, 51, 60, 62, 99, 101, 111, 113, 115, 117, 119, 145, 148, 150, 152, 155, 178, 181, 183, 185, 188, 191, 193, 195, 215], "affect": [1, 241], "44": 1, "inabl": 1, "subsequ": [1, 122], "simpl": [1, 48, 49, 119, 141, 160, 186, 196], "legaci": 1, "nrfx_flag32_alloc": [1, 33, 51, 55, 106, 239], "unifi": 1, "mechan": [1, 14, 48, 49, 51, 55, 56, 57, 71, 90, 93, 111, 119, 155, 157, 213, 239], "across": 1, "shortcut": [1, 18, 23, 24, 25, 56, 57, 69, 74, 75, 93, 111, 112, 113, 116, 117, 122, 131, 149, 150, 153, 174, 175, 176, 179, 182, 183, 186, 191, 192, 193, 197], "dealloc": [1, 215], "nrfx_gppi": [1, 241], "nrf_gpio_reconfigur": [1, 48, 49], "nrfx_clock_config_ct_en": 1, "nrfx_ctz": [1, 240], "nrfx_clz": [1, 240], "By": [1, 16, 55, 92], "__rbit": 1, "__clz": 1, "cmsi": [1, 220], "nrfx_atomic_ca": [1, 239, 240], "swap": [1, 240, 249], "nrfx_qspi_lfm_start": [1, 119], "nrfx_qspi_lfm_xfer": [1, 119], "manual": [1, 6, 51, 119, 142, 143], "fetch": [1, 16], "reportp": [1, 115, 116, 117], "race": 1, "condit": [1, 55, 60, 148, 152, 178, 181, 185, 191, 196, 197, 199, 232, 234], "critic": [1, 137, 220, 240], "rst": 1, "format": [1, 18, 60, 61, 168, 171, 172, 245], "sphinx": 1, "tool": [1, 234], "drive": [1, 9, 48, 49, 51, 152], "report": [1, 93, 115, 116, 117, 122, 137, 188, 191, 196, 197], "period": [1, 9, 56, 57, 111, 112, 115, 116, 117, 120, 122, 137], "nrf53": [1, 119], "seri": [1, 119, 219, 220], "121": 1, "40": [1, 20, 21, 24, 116, 122, 142], "implicit": 1, "restrict": [1, 124], "specif": [1, 2, 4, 18, 21, 31, 34, 35, 37, 51, 56, 57, 60, 71, 83, 90, 92, 93, 95, 104, 112, 119, 120, 122, 133, 134, 135, 142, 143, 148, 155, 157, 171, 172, 181, 191, 192, 193, 196, 206, 216, 217, 219, 220, 234, 240, 241], "align": [1, 4, 60, 61, 83, 95, 96, 112, 119, 133, 135, 141, 157, 168, 206, 210, 211, 234], "irq": [1, 206, 234, 240, 246], "corrupt": [1, 60], "freed": [1, 33, 51, 55, 106, 241], "dcx": [1, 148, 149, 150], "everi": [1, 56, 57, 99, 112, 116, 134, 135, 149, 152, 168, 175, 220], "were": [1, 6, 12, 25, 53, 57, 60, 62, 75, 88, 90, 99, 101, 113, 117, 135, 139, 141, 143, 150, 166, 176, 183, 191, 192, 193, 217, 246], "overwrit": [1, 241], "mcusel": 1, "nrf_gpio_cfg": [1, 48, 49], "behavior": [1, 93, 95, 196, 215, 216, 241], "zero": [1, 45, 122, 124, 152, 155, 157, 160, 185, 196, 197, 234, 240, 246, 249], "length": [1, 18, 48, 49, 60, 92, 93, 99, 101, 111, 112, 119, 120, 122, 137, 141, 143, 145, 148, 149, 150, 152, 153, 168, 178, 181, 182, 183, 186, 188, 191, 192, 193, 196, 197, 233, 234, 238, 245, 247, 249], "intern": [1, 6, 10, 16, 20, 21, 23, 24, 39, 51, 55, 56, 57, 59, 60, 61, 92, 93, 98, 104, 111, 112, 115, 119, 120, 126, 134, 135, 137, 141, 142, 143, 145, 148, 152, 162, 168, 170, 174, 178, 181, 185, 188, 191, 196, 197, 215, 234, 237, 238], "state": [1, 2, 6, 7, 9, 11, 12, 16, 18, 20, 21, 23, 24, 25, 27, 29, 34, 35, 37, 40, 42, 45, 48, 49, 51, 52, 53, 55, 56, 57, 59, 61, 62, 67, 69, 71, 74, 75, 77, 81, 85, 87, 88, 90, 92, 93, 99, 100, 101, 103, 104, 109, 111, 112, 113, 115, 116, 117, 119, 120, 122, 124, 128, 131, 134, 135, 137, 138, 139, 142, 143, 146, 148, 149, 150, 152, 153, 155, 157, 159, 162, 165, 166, 168, 171, 172, 174, 175, 176, 178, 179, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 196, 197, 199, 201, 202, 206, 208, 210, 211, 216, 217, 220, 234, 238, 239], "finish": [1, 16, 60, 95, 99, 100, 111, 119, 141, 145, 170, 178, 182, 185, 188, 191, 196], "correct": [1, 98, 122, 130, 131, 175], "mp": 1, "requir": [1, 60, 61, 62, 92, 98, 103, 111, 148, 152, 159, 178, 181, 185, 191, 196, 197, 234], "describ": [1, 60, 62, 88, 92, 101, 104, 143, 150, 183, 193, 196, 249], "payload": [1, 122], "full": [1, 6, 7, 21, 87, 93, 99, 157, 165, 188, 191, 197], "speed": [1, 23, 24, 25, 59, 199], "isochron": [1, 196, 197], "direct": [1, 24, 48, 49, 60, 61, 62, 74, 88, 122, 168, 178, 196, 197, 208, 234, 239], "find": [1, 122, 197], "subscrib": [1, 2, 18, 21, 33, 34, 35, 37, 40, 52, 53, 56, 57, 61, 62, 67, 69, 74, 87, 88, 100, 101, 104, 109, 112, 113, 122, 131, 134, 135, 138, 139, 142, 143, 149, 150, 153, 168, 171, 172, 175, 176, 182, 183, 186, 192, 193, 207, 216, 217, 241, 243, 244], "publish": [1, 2, 18, 21, 33, 34, 37, 40, 52, 53, 56, 57, 61, 62, 67, 69, 74, 87, 88, 100, 101, 104, 109, 112, 113, 122, 131, 134, 135, 138, 139, 142, 143, 149, 150, 153, 155, 168, 171, 172, 175, 176, 182, 183, 186, 192, 193, 207, 216, 217, 241, 243, 244], "latenc": [1, 6, 51, 52, 53, 77, 103, 104, 137, 191], "present": [1, 16, 21, 24, 44, 48, 49, 52, 59, 74, 77, 79, 81, 87, 88, 92, 93, 95, 96, 98, 100, 104, 112, 120, 122, 126, 127, 128, 133, 135, 142, 149, 150, 153, 155, 162, 171, 172, 182, 183, 186, 191, 192, 195, 219, 220, 234, 240, 248], "37": 1, "resolv": [1, 2, 234], "minor": [1, 220, 234, 235], "c": [1, 170, 171, 172], "197": 1, "nrf_clock_alwaysrun_set": [1, 21], "nrf52805": [1, 219], "211": 1, "223": 1, "port": [1, 29, 48, 49, 51, 52, 61, 81, 155, 157, 162, 195, 196], "stage": [1, 87, 196, 197, 220], "lfxo": [1, 56, 98], "35": 1, "divid": [1, 9, 20, 21, 23, 45, 47, 81, 104, 120, 148, 149, 150, 168, 197, 234, 237], "network": [1, 48, 127, 248], "applic": [1, 6, 48, 51, 60, 106, 112, 127, 137, 152, 155, 170, 195, 220, 241, 248], "program": [1, 196, 206, 210, 211], "secur": [1, 29, 71, 81, 92, 96, 124, 128, 134, 155, 157, 162, 195], "usag": [1, 61, 62, 98, 112, 113, 130, 155, 157, 160, 168], "nrf_uicr": [1, 195], "target": [1, 81, 234], "valid": [1, 6, 16, 24, 48, 49, 55, 56, 59, 74, 92, 104, 122, 128, 141, 142, 143, 152, 157, 175, 197, 215, 234, 239, 248], "messag": [1, 245], "success": [1, 6, 20, 23, 39, 51, 55, 60, 66, 73, 92, 96, 99, 100, 111, 115, 119, 133, 137, 141, 145, 148, 152, 174, 178, 181, 185, 188, 191, 196, 215, 239, 241], "nrf52833": [1, 219], "dk": 1, "led": [1, 51, 115, 116, 117], "button": 1, "actual": [1, 9, 56, 60, 95, 122, 150, 170, 185, 232, 240, 241], "special": [1, 55, 191, 197], "nrfx_reset_reason": [1, 248], "resetrea": [1, 104, 127, 128, 248], "170": 1, "196": 1, "cast": [1, 234], "long": [1, 81, 115, 116, 117, 119, 120, 122, 141, 188, 191, 196, 197], "translat": 1, "otp": [1, 95, 133, 135], "region": [1, 2, 4, 16, 37, 60, 81, 83, 90, 92, 95, 119, 133, 134, 135, 141, 148, 152, 155, 181, 185, 191, 195, 234, 245], "32": [1, 14, 16, 21, 55, 56, 57, 59, 60, 61, 62, 83, 95, 96, 100, 112, 119, 120, 122, 133, 135, 137, 148, 149, 155, 157, 164, 165, 166, 168, 175, 209, 232, 234, 240], "regard": [1, 95, 122, 220], "polici": [1, 16], "cleanup": 1, "revis": [1, 29, 157], "engin": [1, 27, 197], "while": [1, 14, 23, 59, 81, 122, 185, 196, 208, 209, 241], "nrfx_wait_for": [1, 234], "robust": 1, "properli": [1, 56, 57, 185, 196, 220, 239], "ramp": [1, 93, 122], "up": [1, 6, 23, 24, 48, 55, 56, 57, 60, 61, 62, 73, 74, 92, 93, 99, 100, 101, 103, 104, 107, 111, 112, 113, 115, 117, 119, 122, 130, 133, 134, 137, 141, 142, 145, 148, 150, 152, 155, 168, 174, 178, 181, 183, 185, 188, 191, 192, 193, 196, 197, 201, 206, 215, 234, 241], "prioriti": [1, 6, 10, 12, 23, 25, 39, 51, 53, 55, 57, 60, 62, 66, 73, 75, 88, 92, 99, 101, 111, 113, 115, 117, 119, 130, 133, 135, 137, 139, 141, 143, 145, 148, 150, 152, 157, 164, 166, 170, 172, 174, 176, 178, 181, 183, 185, 188, 191, 193, 201, 205, 213, 215, 217, 236, 240], "noncontigu": 1, "invoc": 1, "reiniti": 1, "nrf_clock_lfclk_synth": [1, 21], "make": [1, 119, 137, 155, 178, 181, 185, 186, 197, 220, 234], "also": [1, 21, 33, 55, 61, 92, 93, 95, 104, 106, 148, 150, 168, 178, 181, 185, 188, 191, 196, 197], "build": [1, 219], "nrfx_i2s_status_transfer_stop": [1, 60], "nrfx_power_compat": 1, "nrfx_power": [1, 103], "encrypt": [1, 18, 37, 119, 120], "expand": [1, 234], "cover": [1, 16, 52, 197], "system": [1, 20, 21, 29, 56, 77, 103, 104, 126, 128, 155, 157, 162, 201, 203, 248], "audio": [1, 21, 61, 100, 168], "23": [1, 11, 48, 61, 107, 109, 157, 168, 195], "nrfx_twim_no_spurious_stop_check": 1, "reorgan": 1, "templat": [1, 220], "nrfx_config": [1, 220], "differ": [1, 60, 92, 141, 155, 178, 181, 188, 191, 197, 220, 241, 243], "accord": [1, 93, 104, 220, 240, 245], "consum": [1, 196, 197, 237], "less": [1, 111, 137], "latch": [1, 48, 56, 57, 143, 176], "reflect": 1, "old": [1, 87, 88, 104, 232, 240], "still": [1, 9, 95, 142, 143, 188, 196], "advanc": [1, 37, 111, 112, 113, 141], "issu": [1, 93, 119, 234], "would": [1, 160, 185, 196, 197], "stuck": [1, 178, 181], "slave": [1, 60, 61, 81, 145, 148, 152, 153, 155, 157, 168, 178, 181, 185, 186], "situat": [1, 157, 196, 197], "veri": 1, "circumst": [1, 119], "output": [1, 2, 9, 18, 24, 37, 48, 49, 51, 52, 56, 57, 74, 93, 99, 100, 104, 111, 112, 113, 115, 116, 117, 157, 185, 208, 214, 233], "immedi": [1, 48, 56, 57, 60, 111, 145, 170, 188, 191, 196], "restart": [1, 111, 197, 206, 209], "pariti": [1, 93, 188, 189, 191, 192], "mcu": [1, 48, 49, 104, 196], "oneshot": 1, "list": [1, 2, 4, 6, 18, 37, 87, 88, 149, 150, 153, 182, 183, 186, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234, 249], "choos": 1, "enhanc": 1, "p_context": [1, 10, 39, 51, 55, 66, 111, 115, 119, 145, 148, 152, 174, 178, 181, 188, 191, 196, 213, 215], "getter": 1, "__static_inlin": [1, 233, 234, 239, 247, 248, 249], "nrf_static_inlin": [1, 2, 4, 7, 9, 11, 14, 16, 18, 21, 24, 27, 29, 31, 34, 37, 40, 42, 44, 45, 47, 48, 52, 56, 59, 61, 67, 69, 71, 74, 77, 79, 81, 83, 85, 87, 90, 93, 96, 98, 100, 104, 107, 109, 112, 116, 120, 122, 124, 126, 127, 128, 131, 134, 138, 142, 146, 149, 153, 155, 157, 160, 162, 165, 168, 171, 175, 179, 182, 186, 189, 192, 195, 197, 199, 202, 203, 205, 206, 207, 208, 209, 210, 214, 216, 237], "nrfx_static_inlin": [1, 6, 20, 23, 39, 51, 55, 66, 95, 99, 103, 106, 111, 115, 133, 137, 148, 170, 174, 178, 181, 185, 188, 191, 201, 215], "multipl": [1, 20, 34, 35, 48, 49, 56, 57, 92, 103, 106, 107, 122, 124, 128, 141, 148, 178, 181, 241], "nrfx_gpiote_init": [1, 51], "its": [1, 23, 48, 49, 56, 57, 61, 62, 67, 69, 73, 77, 85, 87, 88, 93, 112, 113, 116, 117, 119, 120, 127, 134, 135, 146, 149, 150, 153, 168, 196, 197, 214, 220, 232, 234, 240], "nrf_usbd_ep_all_dis": [1, 197], "realli": 1, "nrf_usbd_ep_default_config": [1, 197], "nrfx_gpiote_out_init": 1, "nrfx_gpiote_in_init": 1, "nrfx_error_busi": [1, 6, 20, 23, 73, 92, 99, 103, 111, 115, 119, 141, 145, 148, 152, 174, 178, 181, 185, 188, 191, 196, 215, 238, 246], "swi": 1, "These": [1, 92, 103, 220], "adher": 1, "standard": [1, 37, 48, 99, 122, 152, 181, 220, 249], "nrfx_xxx_default_config_irq_prior": 1, "miso": [1, 120, 145, 146, 148, 149, 150, 152, 153], "pull": [1, 48, 49, 51, 142, 145, 148, 152, 178, 181, 185, 196], "separ": [1, 16, 234], "see": [1, 7, 16, 27, 37, 60, 83, 92, 95, 104, 111, 112, 119, 120, 148, 181, 188, 191, 196, 197, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234, 239], "migrat": 1, "guid": 1, "detail": [1, 48, 49, 60, 88, 92, 93, 95, 111, 145, 148, 178, 181, 188, 191, 220], "barier": 1, "nrfx_usbd": [1, 196], "map": [1, 42, 48, 60, 81, 104, 155, 157, 195, 234], "gpiotex_irqn": 1, "longer": [1, 60, 87, 92, 95, 96, 112, 220], "recoveri": [1, 178, 181], "interfac": [1, 42, 99, 101, 104, 119, 120, 128, 145, 148, 149, 150, 152, 160, 168, 178, 181, 185, 186, 207, 213, 234, 241, 246, 248], "bug": 1, "sens_r": [1, 93], "violat": [1, 71, 155], "put": [1, 126, 148, 178, 181, 233], "slp_req": 1, "command": [1, 120, 148, 149, 150, 186, 196, 197], "combin": [1, 60, 111, 149, 175, 178, 181, 208, 209, 249], "termin": [1, 88, 142, 149, 153, 182, 249], "deiniti": [1, 51, 196], "nrfx_offsetof": [1, 234], "duplic": 1, "built": [1, 23, 104, 196, 241], "offsetof": 1, "constant": [1, 9, 77, 103, 104, 196], "express": [1, 122, 133, 134, 141, 150, 175, 176, 240], "altern": [1, 61, 111, 239], "ctstart": [1, 21], "ctstop": [1, 21], "fulfil": 1, "paragraph": 1, "declar": [1, 6, 196, 234], "tx_buffer_length": [1, 119, 152], "volatil": [1, 14, 18, 83, 95, 96, 203, 232], "optim": 1, "lfclk": [1, 20, 21, 55, 56], "nrf52811": [1, 219], "page": [1, 4, 44, 95, 96, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "count": [1, 51, 59, 93, 95, 111, 112, 113, 122, 142, 143, 148, 149, 150, 159, 160, 165, 166, 178, 181, 197, 205, 209, 220, 234, 239, 240, 249], "total": [1, 34, 35, 92, 95, 112, 122, 133, 196, 197], "short": [1, 18, 57, 74, 75, 112, 119, 137, 142, 159, 175, 186, 191, 197, 249], "unalign": [1, 95, 133, 135], "nrfx_nvmc_bytes_writ": [1, 95], "rework": 1, "more": [1, 6, 40, 48, 56, 57, 83, 95, 99, 103, 112, 119, 122, 133, 134, 135, 141, 148, 191, 196, 220, 241], "precis": [1, 240], "newer": [1, 104], "doxygen": 1, "transmiss": [1, 60, 61, 62, 92, 93, 120, 122, 145, 148, 149, 168, 182, 185, 188, 189, 191, 192, 193, 196], "transmitt": [1, 122, 146, 191, 192, 193], "turn": [1, 9, 104, 174, 185, 206], "off": [1, 9, 20, 77, 104, 126, 127, 128, 137, 162, 174, 175, 185, 203, 206, 234, 247, 248], "stoptx": [1, 93, 191, 192], "size_t": [1, 4, 88, 119, 122, 143, 145, 149, 150, 152, 153, 178, 181, 182, 183, 185, 186, 188, 191, 192, 193, 196, 197, 233, 243, 244, 247, 249], "amount": [1, 2, 18, 37, 93, 95, 100, 111, 116, 117, 122, 137, 149, 150, 159, 182, 183, 185, 186, 191, 192, 193, 197], "IN": [1, 2, 18, 37, 48, 49, 51, 52, 53, 196, 197], "out": [1, 2, 6, 9, 18, 20, 21, 29, 33, 37, 51, 52, 53, 55, 59, 88, 92, 93, 100, 101, 104, 106, 115, 119, 120, 122, 126, 127, 133, 134, 135, 145, 146, 148, 149, 150, 152, 153, 159, 183, 186, 191, 196, 197, 205, 206, 208, 215, 216, 233, 234, 238, 239, 241, 248, 249], "higher": [1, 56, 103, 159, 191, 196, 201, 208, 209], "nrfx_coredep_delay_us_loop_cycl": [1, 237], "cycl": [1, 55, 56, 57, 59, 111, 112, 113, 120, 122, 133, 134, 148, 149, 150, 206, 237], "iter": [1, 112, 122, 135, 237], "nrfx_coredep_delay_u": [1, 237, 240], "loss": 1, "nrf52832": [1, 219, 246], "nrfx_nfct_evt_field_lost": [1, 92], "nrf52810": [1, 219], "sampler": 1, "nrf_saadc": [1, 142, 144], "nrfx_saadc_init": [1, 141], "deadlock": 1, "input": [1, 6, 7, 18, 23, 24, 25, 37, 45, 48, 49, 51, 59, 61, 73, 74, 75, 99, 104, 115, 117, 119, 120, 138, 141, 142, 143, 148, 149, 150, 157, 168, 185, 191, 208, 234], "nrfx_saadc_abort": [1, 141], "wait": [1, 6, 55, 57, 88, 111, 113, 119, 120, 134, 135, 143, 170, 185, 193, 196, 209, 234, 237, 240], "pend": [1, 9, 11, 12, 29, 55, 56, 57, 67, 69, 71, 87, 88, 134, 137, 153, 162, 165, 185, 191, 196, 205, 207, 240], "nvic": 1, "nrfx_usbd_stop": [1, 196], "nrfx_uarte_tx_in_progress": [1, 191], "variabl": [1, 6, 20, 21, 23, 55, 73, 104, 112, 159, 186, 191, 196, 234], "subscript": [1, 33, 34, 35, 207], "relat": [1, 16, 87, 92, 103, 104, 120, 155, 159, 201], "nrfx_i2s_config_ratio": 1, "nrfx_is_word_align": [1, 234], "re": [1, 188], "complet": [1, 2, 6, 16, 18, 21, 29, 37, 59, 60, 87, 88, 92, 93, 95, 96, 120, 122, 133, 134, 135, 141, 142, 148, 152, 153, 168, 171, 178, 181, 188, 191, 196, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "nrfx_uarte_rx": [1, 191], "nrfx_uarte_xfer_evt_t": 1, "typo": 1, "bmrequest": [1, 197], "nrfx_usbd_setup_t": [1, 196], "brequest": [1, 196, 197], "nrfx_ppi_channel_fork_assign": [1, 106], "pre": 1, "tick": [1, 93, 111, 119, 137, 138, 159, 174, 175], "nrfx_usbd_ep_status_get": [1, 196], "undefin": [1, 95, 196, 234, 240], "burst": [1, 87, 141, 142, 143, 249], "nrfx_array_s": [1, 234], "nrfx_power_clock_irq_handl": 1, "nrfx_power_clock": 1, "array_s": 1, "ones": [1, 234, 241], "isosplit": [1, 197], "rx": [1, 29, 60, 61, 62, 92, 93, 122, 145, 146, 148, 149, 150, 152, 153, 168, 178, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 196], "txrx": [1, 148, 178, 181], "194": 1, "195": 1, "17": [1, 11, 48, 98, 107, 109, 195, 210], "nrf_spim3": 1, "txdrdy": [1, 192], "glue": 1, "192": [1, 21, 61, 149], "201": 1, "122": 1, "198": 1, "bia": [1, 93], "usabl": [1, 160], "debug": [1, 14, 48, 83, 128, 157, 162, 210, 211, 245, 248], "slightli": 1, "xip": [1, 16, 119, 120], "errata": [1, 95, 119], "132": 1, "segger": 1, "embed": 1, "studio": 1, "startup": [1, 220], "easydma": [1, 60, 92, 93, 100, 119, 120, 141, 148, 149, 150, 152, 181, 182, 183, 185, 186, 191, 197, 234], "uart1": 1, "box": 1, "md": 1, "readm": 1, "explan": 1, "arm": [1, 155, 159, 160, 220], "r": [1, 159], "14": [1, 11, 18, 40, 48, 67, 69, 81, 107, 109, 112, 120, 142, 195, 210], "offlin": 1, "integr": [1, 157, 196, 240, 245], "nrf_aar_hal": 2, "acceler": [2, 27], "nrf_aar_has_error": 2, "errorstatu": [2, 18, 93], "nrf_aar_has_out_amount": 2, "nrf_aar_has_nirk": 2, "nirk": 2, "nrf_aar_has_irkptr": 2, "irkptr": 2, "nrf_aar_has_in_ptr": 2, "ptr": [2, 18, 37, 61, 168, 197], "nrf_aar_has_out_ptr": 2, "nrf_aar_has_addrptr": 2, "addrptr": 2, "nrf_aar_has_scratchptr": 2, "scratchptr": [2, 18], "nrf_aar_has_statu": 2, "nrf_aar_has_maxresolv": 2, "maxresolv": 2, "enum": [2, 4, 6, 7, 9, 11, 16, 18, 20, 21, 23, 24, 27, 29, 34, 37, 40, 42, 45, 47, 48, 51, 52, 55, 56, 59, 61, 67, 69, 71, 74, 77, 81, 87, 90, 92, 93, 96, 98, 99, 100, 103, 104, 107, 109, 111, 112, 116, 119, 120, 122, 124, 126, 127, 128, 131, 134, 137, 138, 141, 142, 145, 146, 148, 149, 152, 153, 155, 157, 160, 162, 165, 168, 171, 175, 178, 179, 181, 182, 185, 186, 188, 189, 191, 192, 195, 196, 197, 199, 201, 202, 203, 205, 206, 208, 209, 210, 216, 234, 238, 241, 248, 249], "nrf_aar_event_t": 2, "nrf_aar_event_end": 2, "resolut": [2, 6, 7, 21, 92, 93, 137, 141, 142, 143, 175], "nrf_aar_event_resolv": 2, "nrf_aar_event_notresolv": 2, "nrf_aar_event_error": 2, "due": [2, 37, 103, 119, 128, 145, 148, 150, 165, 191, 196, 248], "nrf_aar_int_mask_t": 2, "nrf_aar_int_end_mask": 2, "nrf_aar_int_resolved_mask": 2, "nrf_aar_int_notresolved_mask": 2, "notresolv": 2, "nrf_aar_int_error_mask": 2, "nrf_aar_error_t": 2, "nrf_aar_error_no_error": 2, "No": [2, 7, 18, 29, 51, 55, 71, 87, 92, 99, 103, 119, 122, 134, 135, 142, 148, 162, 168, 178, 181, 191, 196, 197, 201, 216, 217, 238, 239], "nrf_aar_error_premature_inptr_end": 2, "inptr": [2, 18], "job": [2, 18, 37, 87, 88, 249], "nrf_aar_error_premature_outptr_end": 2, "outptr": [2, 18], "nrf_aar_error_dma_error": 2, "nrf_aar_task_t": 2, "nrf_aar_task_start": 2, "nrf_aar_task_stop": 2, "bool": [2, 6, 7, 9, 10, 11, 12, 14, 16, 18, 20, 21, 23, 24, 25, 27, 29, 34, 35, 37, 39, 40, 42, 45, 47, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 66, 67, 69, 71, 73, 74, 75, 77, 79, 81, 83, 85, 87, 88, 90, 92, 93, 95, 96, 98, 99, 100, 101, 103, 104, 109, 111, 112, 113, 115, 116, 117, 119, 120, 122, 124, 126, 127, 128, 130, 131, 133, 134, 135, 137, 138, 139, 141, 142, 143, 145, 146, 148, 149, 150, 152, 153, 155, 157, 159, 162, 164, 165, 166, 168, 170, 171, 172, 174, 175, 176, 178, 179, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 195, 196, 197, 199, 201, 202, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 232, 233, 234, 239, 241, 247], "nrf_aar_event_check": 2, "nrf_aar_typ": 2, "const": [2, 4, 6, 7, 9, 10, 11, 12, 16, 18, 21, 23, 24, 25, 27, 29, 31, 34, 35, 37, 39, 40, 42, 44, 45, 47, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 66, 67, 69, 71, 73, 74, 75, 77, 79, 81, 83, 87, 88, 90, 92, 93, 95, 96, 99, 100, 101, 103, 104, 107, 109, 111, 112, 113, 115, 116, 117, 119, 120, 122, 124, 126, 127, 128, 130, 131, 133, 134, 135, 137, 138, 139, 141, 142, 143, 145, 146, 148, 149, 150, 152, 153, 155, 157, 159, 162, 164, 165, 166, 168, 170, 171, 172, 174, 175, 176, 178, 179, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 195, 196, 197, 199, 201, 202, 203, 205, 208, 210, 211, 214, 215, 216, 217, 233, 234, 243, 244, 246, 247, 249], "p_reg": [2, 4, 7, 9, 11, 12, 14, 16, 18, 21, 24, 25, 27, 29, 31, 34, 35, 37, 39, 40, 42, 44, 45, 47, 48, 49, 51, 52, 53, 56, 57, 59, 60, 61, 62, 67, 69, 71, 74, 75, 77, 79, 81, 83, 85, 87, 88, 90, 93, 96, 98, 100, 101, 104, 107, 109, 111, 112, 113, 115, 116, 117, 120, 122, 124, 126, 127, 128, 131, 134, 135, 137, 138, 139, 142, 143, 145, 146, 148, 149, 150, 152, 153, 155, 157, 162, 165, 166, 168, 171, 172, 174, 175, 176, 179, 182, 183, 185, 186, 188, 189, 191, 192, 193, 195, 197, 199, 202, 203, 205, 210, 211, 214, 215, 216, 217, 234], "true": [2, 6, 7, 9, 10, 11, 12, 14, 16, 18, 20, 21, 23, 24, 25, 27, 29, 34, 35, 37, 39, 40, 42, 45, 47, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 66, 67, 69, 71, 73, 74, 75, 77, 79, 81, 83, 85, 87, 88, 90, 92, 93, 95, 96, 98, 99, 100, 101, 103, 104, 109, 111, 112, 113, 115, 117, 119, 120, 122, 124, 126, 127, 128, 130, 131, 133, 134, 135, 137, 138, 139, 141, 142, 143, 145, 146, 148, 149, 150, 152, 153, 155, 157, 159, 162, 164, 165, 166, 168, 170, 171, 172, 174, 175, 176, 178, 179, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 195, 196, 197, 199, 201, 202, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 232, 233, 234, 239, 240, 241, 247], "nrf_aar_event_clear": 2, "nrf_aar_event_address_get": 2, "nrf_aar_int_en": 2, "nrf_aar_int_enable_check": 2, "nrf_aar_int_dis": 2, "nrf_aar_task_trigg": 2, "nrf_aar_task_address_get": 2, "nrf_aar_en": 2, "nrf_aar_dis": 2, "nrf_aar_error_get": 2, "nrf_aar_irk_pointer_set": 2, "irk_ptr": 2, "ident": [2, 249], "kei": [2, 18, 27, 37, 71, 120, 162, 206], "irk": 2, "occupi": [2, 137, 249], "16": [2, 9, 11, 18, 20, 21, 48, 60, 61, 95, 96, 99, 100, 107, 109, 112, 120, 122, 142, 143, 149, 168, 174, 175, 192, 195, 208, 209, 210], "nrf_aar_irk_number_set": 2, "point": [2, 20, 21, 45, 60, 92, 104, 112, 122, 186, 191, 196, 232, 234], "nrf_aar_irk_pointer_get": 2, "irk_num": 2, "nrf_aar_irk_number_get": 2, "nrf_aar_maxresolved_set": 2, "uint16_t": [2, 6, 7, 9, 20, 21, 59, 61, 62, 79, 93, 95, 96, 99, 101, 111, 112, 113, 122, 133, 134, 137, 141, 142, 143, 157, 168, 195, 196, 197, 205, 208, 209], "nrf_aar_maxresolved_get": 2, "nrf_aar_addr_pointer_set": 2, "addr_ptr": 2, "6": [2, 6, 7, 9, 11, 18, 40, 48, 52, 56, 61, 67, 69, 74, 77, 81, 87, 93, 104, 107, 109, 119, 120, 122, 126, 141, 142, 157, 168, 175, 188, 195, 196, 197, 210, 216], "nrf_aar_addr_pointer_get": 2, "nrf_aar_out_ptr_set": 2, "nrf_vdma_job_t": [2, 18, 37, 87, 88, 249], "p_job": [2, 18, 37, 87, 88, 249], "store": [2, 6, 18, 37, 48, 49, 55, 60, 66, 67, 87, 92, 96, 100, 112, 115, 117, 119, 120, 122, 133, 134, 135, 141, 185, 188, 191, 196, 206, 232, 233, 234, 240, 249], "nrf_aar_out_ptr_get": 2, "nrf_aar_in_ptr_set": 2, "hash": 2, "prand": 2, "privat": [2, 27], "deviceaddr": 2, "bluetooth": [2, 122], "packet": [2, 18, 122, 157, 196, 197], "nrf_aar_in_ptr_get": 2, "nrf_aar_out_amount_get": 2, "nrf_aar_scratch_pointer_set": 2, "scratch_ptr": 2, "scratch": [2, 18], "area": [2, 18, 95, 120, 124, 133, 135, 191], "temporari": [2, 18, 60, 196], "storag": [2, 18], "space": [2, 16, 122, 155, 191, 249], "minimum": [2, 93, 100, 122, 142, 143, 148, 149, 150, 186], "3": [2, 6, 7, 9, 11, 34, 40, 48, 52, 56, 61, 67, 69, 74, 77, 81, 87, 90, 92, 93, 104, 107, 109, 111, 112, 119, 120, 122, 126, 138, 142, 149, 153, 157, 162, 168, 175, 182, 195, 196, 197, 202, 205, 206, 210, 214, 216, 220, 239, 241], "reserv": [2, 126, 240, 246], "nrf_aar_scratch_pointer_get": 2, "nrf_aar_resolution_status_get": 2, "last": [2, 7, 24, 25, 56, 57, 59, 62, 74, 75, 88, 93, 95, 100, 101, 111, 112, 119, 122, 133, 142, 143, 149, 150, 152, 153, 160, 168, 170, 181, 182, 183, 185, 186, 191, 192, 193, 196, 197], "match": [2, 16, 48, 81, 122, 149, 153, 157, 182, 183, 186], "otherwis": [2, 6, 12, 14, 16, 25, 27, 35, 42, 47, 48, 53, 55, 56, 57, 59, 60, 62, 75, 77, 79, 81, 83, 88, 93, 98, 101, 104, 111, 113, 117, 119, 120, 122, 124, 126, 128, 133, 134, 135, 139, 143, 145, 149, 150, 153, 155, 162, 166, 168, 172, 176, 182, 183, 188, 191, 193, 195, 196, 205, 206, 209, 214, 216, 217, 220, 232, 234, 239, 240, 241, 247], "nrf_aar_subscribe_set": 2, "nrf_aar_subscribe_clear": 2, "nrf_aar_publish_set": 2, "nrf_aar_publish_clear": 2, "nrf_aar": 3, "nrf_acl_hal": 4, "nrf_acl_perm_t": 4, "permiss": [4, 81, 134, 155, 195], "nrf_acl_perm_read_no_writ": 4, "disallow": [4, 238], "nrf_acl_perm_no_read_writ": 4, "nrf_acl_perm_no_read_no_writ": 4, "nrf_acl_region_set": 4, "nrf_acl_typ": 4, "region_id": [4, 155], "perm": [4, 155], "protect": [4, 14, 83, 93, 155, 162], "nrf_acl_region_address_get": 4, "nrf_acl_region_size_get": 4, "nrf_acl_region_perm_get": 4, "nrf_acl": 5, "nrfx_adc": 6, "analog": [6, 7, 23, 24, 25, 73, 74, 75, 104, 141, 142, 143], "digit": [6, 7, 92, 93, 131, 141, 142, 143], "nrfx_adc_default_channel": 6, "analog_input": 6, "10": [6, 7, 11, 18, 20, 21, 24, 40, 48, 56, 61, 67, 69, 81, 93, 107, 109, 115, 116, 120, 122, 141, 142, 168, 186, 195, 210], "scale": [6, 7, 104, 170], "1": [6, 7, 9, 11, 18, 21, 23, 24, 25, 34, 35, 40, 48, 49, 52, 55, 56, 57, 61, 67, 69, 74, 75, 77, 81, 87, 90, 93, 95, 99, 100, 104, 107, 109, 111, 112, 113, 116, 119, 120, 122, 124, 126, 128, 133, 135, 138, 141, 142, 146, 148, 149, 150, 152, 153, 157, 160, 162, 168, 175, 181, 182, 186, 195, 196, 197, 205, 206, 208, 209, 210, 211, 216, 232, 234, 239, 241, 248], "2": [6, 7, 9, 11, 18, 20, 21, 24, 34, 40, 48, 52, 56, 59, 61, 67, 69, 74, 77, 81, 87, 90, 92, 93, 100, 104, 107, 109, 111, 112, 119, 120, 122, 126, 138, 142, 146, 149, 153, 157, 162, 168, 170, 171, 172, 175, 176, 182, 185, 191, 195, 196, 197, 205, 206, 208, 210, 216, 234, 241], "nrfx_adc_default_config": 6, "typedef": [6, 7, 10, 20, 23, 24, 39, 51, 55, 60, 66, 73, 74, 92, 98, 99, 100, 103, 111, 112, 115, 119, 130, 133, 137, 141, 142, 145, 148, 152, 164, 170, 174, 178, 181, 185, 186, 188, 191, 196, 201, 213, 215, 232, 234, 249], "struct": [6, 7, 9, 10, 18, 23, 24, 25, 29, 39, 42, 51, 55, 59, 60, 61, 62, 66, 73, 74, 75, 81, 88, 92, 93, 99, 101, 103, 104, 111, 112, 113, 115, 117, 119, 120, 122, 126, 130, 133, 134, 135, 137, 139, 141, 142, 143, 145, 148, 150, 152, 159, 164, 168, 170, 174, 176, 178, 181, 183, 185, 188, 189, 191, 192, 193, 195, 196, 201, 205, 208, 215, 217, 243, 244, 249], "nrfx_adc_channel_": 6, "nrfx_adc_channel_t": 6, "nrfx_adc_event_handler_t": 6, "nrfx_adc_evt_t": 6, "p_event": [6, 92, 141, 145, 148, 152, 178, 181, 185, 188, 191, 196], "param": [6, 10, 20, 23, 39, 51, 55, 60, 66, 73, 92, 99, 103, 111, 115, 133, 137, 141, 145, 148, 152, 164, 170, 174, 178, 181, 185, 188, 191, 196, 201, 213, 215], "nrfx_adc_evt_type_t": 6, "nrfx_adc_evt_don": 6, "nrfx_adc_evt_sampl": 6, "nrfx_err_t": [6, 10, 20, 23, 33, 39, 51, 55, 60, 66, 73, 92, 95, 99, 103, 106, 111, 115, 119, 130, 133, 137, 141, 145, 148, 152, 164, 170, 174, 178, 181, 185, 188, 191, 196, 213, 215, 238, 239, 240, 241, 246], "nrfx_adc_init": 6, "nrfx_adc_config_t": 6, "p_config": [6, 7, 18, 23, 25, 51, 59, 60, 61, 62, 66, 73, 74, 75, 81, 92, 99, 101, 103, 104, 111, 113, 115, 117, 119, 120, 122, 126, 130, 133, 134, 135, 137, 139, 141, 143, 145, 148, 150, 152, 164, 168, 170, 174, 176, 178, 181, 183, 185, 188, 191, 193, 195, 201, 205, 215, 217], "event_handl": [6, 10, 20, 23, 39, 73, 99, 141, 152, 178, 181, 185, 188, 191, 196, 213], "If": [6, 20, 24, 25, 29, 48, 49, 51, 56, 57, 60, 61, 62, 74, 75, 81, 85, 93, 96, 103, 104, 111, 112, 113, 119, 120, 122, 127, 133, 135, 137, 142, 145, 146, 148, 149, 150, 152, 153, 155, 168, 170, 178, 181, 185, 188, 191, 196, 232, 233, 234, 240, 246, 248], "work": [6, 20, 55, 103, 159, 174, 188, 191, 201], "nrfx_success": [6, 10, 20, 23, 33, 39, 51, 55, 60, 66, 73, 92, 95, 99, 103, 106, 111, 115, 119, 130, 133, 137, 141, 145, 148, 152, 164, 170, 174, 178, 181, 185, 188, 191, 196, 213, 215, 238, 239, 241, 246], "nrfx_adc_uninit": 6, "ongo": [6, 62, 96, 99, 113, 119, 120, 141, 142, 143, 145, 148, 150, 183, 185, 188, 191, 193], "nrfx_adc_init_check": 6, "nrfx_adc_channel_en": 6, "p_channel": [6, 33, 51, 55, 106, 141, 241], "nrfx_adc_buffer_convert": 6, "progress": [6, 20, 59, 71, 95, 99, 111, 119, 120, 141, 191, 196], "busi": [6, 7, 16, 56, 71, 96, 104, 119, 120, 122, 133, 134, 135, 142, 143, 148, 157, 178, 181, 185, 191, 196, 238], "item": [6, 196], "therefor": [6, 51, 93, 111, 112, 122, 145, 157, 181, 196, 237], "cannot": [6, 20, 21, 23, 34, 35, 55, 60, 71, 92, 95, 96, 99, 103, 106, 111, 112, 115, 133, 134, 135, 145, 148, 152, 174, 191, 196, 197, 234, 241], "automat": [6, 9, 21, 29, 55, 56, 57, 59, 92, 93, 103, 112, 142, 143, 155, 196, 206], "locat": [6, 51, 93, 122, 137, 157, 220, 234, 240], "stack": [6, 111, 112, 137, 141, 152, 188, 191, 206], "nrfx_adc_channel_dis": 6, "nrfx_adc_all_channels_dis": 6, "nrfx_adc_sampl": 6, "than": [6, 23, 48, 87, 92, 95, 98, 103, 111, 122, 137, 141, 155, 159, 178, 181, 185, 196, 234, 241], "emul": [6, 237], "scan": [6, 122, 142], "nrfx_adc_sample_convert": 6, "nrf_adc_value_t": [6, 7], "p_valu": [6, 112], "until": [6, 34, 35, 71, 81, 95, 96, 111, 119, 120, 148, 152, 155, 170, 188, 191, 196, 209, 234], "doe": [6, 20, 23, 33, 51, 55, 60, 62, 73, 92, 99, 101, 103, 111, 113, 115, 117, 119, 122, 145, 148, 150, 152, 160, 175, 178, 181, 182, 183, 185, 188, 191, 193, 196, 197, 215, 234, 241], "where": [6, 48, 49, 55, 81, 96, 100, 133, 135, 137, 185, 233, 234, 239], "place": [6, 37, 60, 112, 119, 120, 126, 148, 152, 181, 185, 191, 197, 220, 234, 240], "unless": [6, 104, 127, 148, 191, 220, 234, 248], "notifi": [6, 191], "done": [6, 20, 21, 39, 59, 60, 88, 103, 111, 119, 122, 141, 145, 148, 152, 185, 188, 191, 215, 220, 238], "prepar": [6, 57, 92, 111, 122, 142, 148, 152, 170, 181, 185, 186, 196, 203], "nrf_adc_task_start": [6, 7], "For": [6, 10, 21, 37, 39, 48, 49, 51, 60, 95, 98, 100, 111, 115, 126, 137, 145, 148, 152, 170, 174, 178, 181, 185, 188, 191, 196, 197, 215, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234], "exampl": [6, 51, 111, 112, 119, 137, 141, 148, 170, 174, 181, 186, 191, 237, 246], "adjust": 6, "lost": [6, 92, 93, 179, 182, 188], "nrfx_adc_is_busi": 6, "readi": [6, 23, 24, 29, 57, 71, 74, 77, 93, 96, 99, 103, 104, 115, 119, 120, 122, 133, 134, 135, 142, 145, 146, 148, 149, 152, 153, 155, 157, 164, 170, 171, 178, 181, 182, 189, 196, 197, 201, 202, 214], "nrfx_adc_start_task_get": 6, "nrfx_adc_done_evt_t": 6, "public": [6, 7, 9, 10, 18, 23, 24, 25, 29, 39, 42, 51, 55, 59, 60, 61, 62, 66, 73, 74, 75, 81, 88, 92, 93, 99, 101, 103, 104, 111, 112, 113, 115, 117, 119, 120, 122, 126, 130, 133, 134, 135, 137, 139, 141, 142, 143, 145, 148, 150, 152, 155, 159, 164, 168, 170, 174, 176, 178, 181, 183, 185, 188, 189, 191, 192, 193, 195, 196, 201, 205, 207, 208, 215, 217, 243, 244, 249], "p_buffer": [6, 37, 60, 61, 62, 100, 101, 119, 120, 122, 141, 142, 143, 149, 150, 153, 168, 182, 183, 191, 192, 193, 240, 249], "nrfx_adc_sample_evt_t": 6, "union": [6, 92, 112, 115, 119, 141, 185, 188, 191, 196], "anonym": [6, 92, 115, 119, 141, 185, 188, 191, 196], "local": [6, 23, 55, 56, 57, 73, 77, 112, 128, 195], "p_next": [6, 196], "nrf_adc_config_t": [6, 7], "interrupt_prior": [6, 23, 39, 51, 55, 73, 99, 115, 130, 137, 141, 164, 170, 174, 178, 181, 185, 188, 191, 213, 215], "nrf_adc_hal": 7, "nrf_adc_int_mask_t": 7, "nrf_adc_int_end_mask": 7, "nrf_adc_config_resolution_t": 7, "nrf_adc_config_res_8bit": 7, "8": [7, 9, 11, 18, 23, 24, 40, 48, 56, 60, 61, 67, 69, 73, 74, 81, 93, 104, 107, 109, 112, 120, 122, 126, 137, 142, 143, 146, 149, 157, 168, 175, 195, 196, 197, 208, 210], "nrf_adc_config_res_9bit": 7, "9": [7, 11, 18, 40, 48, 56, 67, 69, 81, 104, 107, 109, 120, 122, 126, 195, 210], "nrf_adc_config_res_10bit": 7, "nrf_adc_config_scaling_t": 7, "nrf_adc_config_scaling_input_full_scal": 7, "nrf_adc_config_scaling_input_two_third": 7, "nrf_adc_config_scaling_input_one_third": 7, "nrf_adc_config_scaling_supply_two_third": 7, "suppli": [7, 59, 60, 73, 74, 99, 104, 126, 141, 152, 188, 191, 202], "nrf_adc_config_scaling_supply_one_third": 7, "nrf_adc_config_extref_t": 7, "nrf_adc_config_extrefsel_non": 7, "nrf_adc_config_extrefsel_aref0": 7, "aref0": 7, "nrf_adc_config_extrefsel_aref1": 7, "aref1": 7, "nrf_adc_config_reference_t": 7, "nrf_adc_config_ref_vbg": 7, "nrf_adc_config_ref_supply_one_half": 7, "nrf_adc_config_ref_supply_one_third": 7, "nrf_adc_config_ref_ext": 7, "further": [7, 239], "nrf_adc_config_input_t": 7, "nrf_adc_config_input_dis": 7, "nrf_adc_config_input_0": 7, "0": [7, 9, 11, 18, 20, 21, 23, 24, 25, 34, 35, 40, 48, 49, 52, 56, 57, 60, 61, 67, 69, 74, 75, 77, 81, 83, 87, 90, 93, 95, 98, 104, 106, 107, 109, 111, 112, 113, 119, 120, 122, 124, 126, 128, 133, 134, 135, 137, 138, 141, 142, 145, 148, 149, 152, 153, 157, 160, 162, 168, 170, 171, 172, 175, 178, 181, 182, 185, 186, 191, 193, 195, 196, 197, 205, 206, 208, 209, 210, 211, 216, 220, 234, 239, 240, 241, 248], "nrf_adc_config_input_1": 7, "nrf_adc_config_input_2": 7, "nrf_adc_config_input_3": 7, "nrf_adc_config_input_4": 7, "4": [7, 9, 11, 14, 18, 20, 21, 24, 34, 40, 48, 52, 55, 56, 59, 60, 61, 67, 69, 73, 74, 77, 81, 83, 87, 93, 98, 104, 107, 109, 112, 120, 122, 126, 142, 145, 146, 148, 149, 157, 159, 168, 175, 195, 196, 197, 208, 210, 216, 241], "nrf_adc_config_input_5": 7, "5": [7, 9, 11, 23, 24, 34, 40, 48, 52, 55, 56, 61, 67, 69, 74, 77, 81, 87, 98, 104, 107, 109, 119, 120, 122, 126, 142, 157, 168, 175, 191, 195, 196, 197, 210, 216, 241], "nrf_adc_config_input_6": 7, "nrf_adc_config_input_7": 7, "7": [7, 11, 20, 21, 24, 40, 48, 52, 56, 67, 69, 74, 77, 81, 87, 93, 95, 98, 104, 107, 109, 120, 122, 126, 137, 142, 157, 168, 175, 195, 196, 197, 210, 216], "nrf_adc_task_t": 7, "nrf_adc_task_stop": 7, "nrf_adc_event_t": 7, "nrf_adc_event_end": 7, "nrf_adc_task_trigg": 7, "nrf_adc_typ": 7, "nrf_adc_task_address_get": 7, "nrf_adc_event_check": 7, "nrf_adc_event_clear": 7, "nrf_adc_event_address_get": 7, "nrf_adc_int_en": 7, "nrf_adc_int_dis": 7, "nrf_adc_int_enable_check": 7, "nrf_adc_busy_check": 7, "nrf_adc_en": 7, "nrf_adc_dis": 7, "nrf_adc_enable_check": 7, "nrf_adc_result_get": 7, "nrf_adc_init": 7, "nrf_adc": [7, 8], "extref": 7, "nrf_auxpll_hal": 9, "phase": [9, 20, 116, 117, 120, 122], "lock": [9, 16, 27, 42, 59, 81, 85, 93, 104, 134, 155, 157, 162, 195], "nrf_auxpll_task_t": 9, "nrf_auxpll_task_start": 9, "nrf_auxpll_task_stop": 9, "nrf_auxpll_task_freq_new_fin": 9, "chang": [9, 21, 23, 48, 51, 59, 81, 93, 95, 103, 112, 122, 133, 135, 141, 185, 186, 196, 197, 239], "fine": [9, 59, 93, 196], "nrf_auxpll_task_freq_new_bas": 9, "nrf_auxpll_task_freq_inc_start": 9, "autom": 9, "increment": [9, 148, 174, 175, 181], "nrf_auxpll_task_freq_inc_stop": 9, "nrf_auxpll_event_t": 9, "nrf_auxpll_event_start": 9, "nrf_auxpll_event_stop": 9, "nrf_auxpll_event_lock": 9, "nrf_auxpll_int_mask_t": 9, "nrf_auxpll_int_started_mask": 9, "nrf_auxpll_int_stopped_mask": 9, "nrf_auxpll_int_locked_mask": 9, "nrf_auxpll_status_mask_t": 9, "nrf_auxpll_status_mode_mask": 9, "freerun": 9, "nrf_auxpll_status_pll_running_mask": 9, "pll": [9, 20, 21, 61, 98, 100, 168], "mrf_auxpll_status_frequency_actual_mask": 9, "fraction": 9, "ratio": [9, 60, 61, 100], "nrf_auxpll_ctrl_outsel_t": 9, "nrf_auxpll_ctrl_outsel_div_dis": 9, "bypass": [9, 59, 61, 98, 142, 168], "nrf_auxpll_ctrl_outsel_div_1": 9, "nrf_auxpll_ctrl_outsel_div_2": 9, "nrf_auxpll_ctrl_outsel_div_3": 9, "nrf_auxpll_ctrl_outsel_div_4": 9, "nrf_auxpll_ctrl_outsel_div_6": 9, "nrf_auxpll_ctrl_outsel_div_8": 9, "nrf_auxpll_ctrl_outsel_div_12": 9, "12": [9, 11, 18, 20, 21, 40, 48, 56, 67, 69, 81, 107, 109, 120, 122, 142, 195, 210], "nrf_auxpll_ctrl_outsel_div_16": 9, "nrf_auxpll_ctrl_mode_t": 9, "nrf_auxpll_ctrl_mode_auto": 9, "nrf_auxpll_ctrl_mode_freerun": 9, "keep": [9, 21, 55, 56, 57, 96, 103, 104, 119, 160, 165, 191, 203, 220], "nrf_auxpll_ctrl_mode_lock": 9, "nrf_auxpll_divider_range_t": 9, "nrf_auxpll_divider_range_low": 9, "nrf_auxpll_divider_range_mid": 9, "mid": 9, "nrf_auxpll_divider_range_high": 9, "nrf_auxpll_divider_range_max": 9, "divis": [9, 168, 234], "nrf_auxpll_task_trigg": 9, "nrf_auxpll_typ": 9, "nrf_auxpll_task_address_get": 9, "nrf_auxpll_event_clear": 9, "nrf_auxpll_event_check": 9, "nrf_auxpll_event_address_get": 9, "nrf_auxpll_int_en": 9, "nrf_auxpll_int_dis": 9, "nrf_auxpll_int_enable_check": 9, "nrf_auxpll_int_pending_check": 9, "nrf_auxpll_status_get": 9, "nrf_auxpll_config_get": 9, "nrf_auxpll_config_t": 9, "p_cfg": [9, 120, 189, 192, 193], "nrf_auxpll_config_set": 9, "nrf_auxpll_trim_ctune_set": 9, "ring": 9, "corner": 9, "tune": 9, "nrf_auxpll_trim_ctune_get": 9, "nrf_auxpll_ctrl_frequency_set": 9, "nrf_auxpll_ctrl_frequency_get": 9, "nrf_auxpll_ctrl_freqinc_set": 9, "int8_t": [9, 115], "sign": [9, 60, 81, 122, 170], "nrf_auxpll_ctrl_freqinc_get": 9, "nrf_auxpll_ctrl_freqinc_period_set": 9, "u": [9, 115, 122, 137, 141, 142, 159, 197], "step": [9, 20, 21, 98, 103, 111, 112, 122, 171, 172, 234], "nrf_auxpll_ctrl_freqinc_period_get": 9, "nrf_auxpll_ctrl_outsel_set": 9, "nrf_auxpll_ctrl_outsel_get": 9, "nrf_auxpll_ctrl_mode_set": 9, "nrf_auxpll_ctrl_mode_get": 9, "nrf_auxpll_lock": 9, "mirror": [9, 59], "nrf_auxpll_unlock": 9, "nrf_auxpll_lock_check": 9, "nrf_auxpll": 9, "outdriv": 9, "strength": [9, 48, 49, 122], "current_tun": 9, "15": [9, 11, 18, 40, 48, 61, 67, 69, 107, 109, 112, 120, 122, 142, 148, 149, 150, 157, 168, 195, 210], "sdm_off": 9, "sigma": 9, "delta": 9, "dither_off": 9, "dither": [9, 59], "nrfx_bellboard": 10, "nrfx_bellboard_inst": 10, "id": [10, 31, 39, 51, 55, 60, 71, 81, 92, 111, 115, 137, 138, 145, 148, 152, 155, 157, 174, 175, 178, 181, 185, 188, 191, 195, 196, 197, 215, 234, 246], "nrfx_bellboard_event_handler_t": 10, "event_idx": [10, 39, 66, 213], "nrfx_bellboard_init": 10, "nrfx_bellboard_t": 10, "p_instanc": [10, 39, 51, 60, 111, 115, 137, 145, 148, 152, 174, 178, 181, 185, 188, 191, 215], "irq_prior": [10, 12, 25, 53, 57, 60, 62, 66, 75, 88, 92, 101, 111, 113, 117, 119, 133, 135, 139, 143, 145, 148, 150, 152, 166, 172, 176, 183, 193, 201, 217], "successfulli": [10, 20, 33, 51, 71, 85, 92, 93, 95, 99, 103, 106, 130, 137, 141, 152, 160, 164, 170, 188, 191, 196, 213, 215, 238, 241, 246], "nrfx_bellboard_uninit": 10, "nrfx_bellboard_init_check": 10, "nrfx_bellboard_int_en": 10, "nrfx_bellboard_int_dis": 10, "drv_inst_idx": [10, 39, 51, 60, 115, 145, 148, 152, 178, 181, 185, 188, 191, 215], "int_idx": 10, "nrf_bellboard_h": 11, "nrf_bellboard_events_triggered_count": 11, "nrf_bellboard_event_t": [11, 12], "nrf_bellboard_event_triggered_0": 11, "nrf_bellboard_event_triggered_1": 11, "nrf_bellboard_event_triggered_2": 11, "nrf_bellboard_event_triggered_3": 11, "nrf_bellboard_event_triggered_4": 11, "nrf_bellboard_event_triggered_5": 11, "nrf_bellboard_event_triggered_6": 11, "nrf_bellboard_event_triggered_7": 11, "nrf_bellboard_event_triggered_8": 11, "nrf_bellboard_event_triggered_9": 11, "nrf_bellboard_event_triggered_10": 11, "nrf_bellboard_event_triggered_11": 11, "11": [11, 20, 21, 40, 48, 56, 61, 67, 69, 81, 107, 109, 120, 124, 168, 195, 210], "nrf_bellboard_event_triggered_12": 11, "nrf_bellboard_event_triggered_13": 11, "13": [11, 18, 20, 21, 40, 48, 67, 69, 81, 93, 107, 109, 120, 195, 210], "nrf_bellboard_event_triggered_14": 11, "nrf_bellboard_event_triggered_15": 11, "nrf_bellboard_event_triggered_16": 11, "nrf_bellboard_event_triggered_17": 11, "nrf_bellboard_event_triggered_18": 11, "18": [11, 48, 98, 107, 109, 195, 210], "nrf_bellboard_event_triggered_19": 11, "19": [11, 48, 107, 109, 195, 210], "nrf_bellboard_event_triggered_20": 11, "20": [11, 48, 98, 107, 109, 122, 142, 195, 210], "nrf_bellboard_event_triggered_21": 11, "21": [11, 48, 61, 107, 109, 168, 195, 210], "nrf_bellboard_event_triggered_22": 11, "22": [11, 48, 107, 109, 195, 210], "nrf_bellboard_event_triggered_23": 11, "nrf_bellboard_event_triggered_24": 11, "24": [11, 48, 60, 61, 107, 109, 119, 120, 159, 168, 175, 195], "nrf_bellboard_event_triggered_25": 11, "25": [11, 20, 21, 48, 59, 98, 107, 109, 122, 157, 170, 171, 172, 195], "nrf_bellboard_event_triggered_26": 11, "26": [11, 48, 107, 109, 195], "nrf_bellboard_event_triggered_27": 11, "27": [11, 48, 107, 109, 195], "nrf_bellboard_event_triggered_28": 11, "28": [11, 48, 81, 107, 109, 195], "nrf_bellboard_event_triggered_29": 11, "29": [11, 48, 107, 109, 195], "nrf_bellboard_event_triggered_30": 11, "30": [11, 48, 61, 107, 109, 122, 168, 195], "nrf_bellboard_event_triggered_31": 11, "31": [11, 21, 48, 61, 107, 109, 122, 157, 168, 195], "nrf_bellboard_int_mask_t": [11, 12], "nrf_bellboard_int_triggered_0_mask": 11, "nrf_bellboard_int_triggered_1_mask": 11, "nrf_bellboard_int_triggered_2_mask": 11, "nrf_bellboard_int_triggered_3_mask": 11, "nrf_bellboard_int_triggered_4_mask": 11, "nrf_bellboard_int_triggered_5_mask": 11, "nrf_bellboard_int_triggered_6_mask": 11, "nrf_bellboard_int_triggered_7_mask": 11, "nrf_bellboard_int_triggered_8_mask": 11, "nrf_bellboard_int_triggered_9_mask": 11, "nrf_bellboard_int_triggered_10_mask": 11, "nrf_bellboard_int_triggered_11_mask": 11, "nrf_bellboard_int_triggered_12_mask": 11, "nrf_bellboard_int_triggered_13_mask": 11, "nrf_bellboard_int_triggered_14_mask": 11, "nrf_bellboard_int_triggered_15_mask": 11, "nrf_bellboard_int_triggered_16_mask": 11, "nrf_bellboard_int_triggered_17_mask": 11, "nrf_bellboard_int_triggered_18_mask": 11, "nrf_bellboard_int_triggered_19_mask": 11, "nrf_bellboard_int_triggered_20_mask": 11, "nrf_bellboard_int_triggered_21_mask": 11, "nrf_bellboard_int_triggered_22_mask": 11, "nrf_bellboard_int_triggered_23_mask": 11, "nrf_bellboard_int_triggered_24_mask": 11, "nrf_bellboard_int_triggered_25_mask": 11, "nrf_bellboard_int_triggered_26_mask": 11, "nrf_bellboard_int_triggered_27_mask": 11, "nrf_bellboard_int_triggered_28_mask": 11, "nrf_bellboard_int_triggered_29_mask": 11, "nrf_bellboard_int_triggered_30_mask": 11, "nrf_bellboard_int_triggered_31_mask": 11, "nrf_bellboard_task_t": [11, 12], "nrf_bellboard_task_trigger_0": 11, "nrf_bellboard_task_trigger_1": 11, "nrf_bellboard_task_trigger_2": 11, "nrf_bellboard_task_trigger_3": 11, "nrf_bellboard_task_trigger_4": 11, "nrf_bellboard_task_trigger_5": 11, "nrf_bellboard_task_trigger_6": 11, "nrf_bellboard_task_trigger_7": 11, "nrf_bellboard_task_trigger_8": 11, "nrf_bellboard_task_trigger_9": 11, "nrf_bellboard_task_trigger_10": 11, "nrf_bellboard_task_trigger_11": 11, "nrf_bellboard_task_trigger_12": 11, "nrf_bellboard_task_trigger_13": 11, "nrf_bellboard_task_trigger_14": 11, "nrf_bellboard_task_trigger_15": 11, "nrf_bellboard_task_trigger_16": 11, "nrf_bellboard_task_trigger_17": 11, "nrf_bellboard_task_trigger_18": 11, "nrf_bellboard_task_trigger_19": 11, "nrf_bellboard_task_trigger_20": 11, "nrf_bellboard_task_trigger_21": 11, "nrf_bellboard_task_trigger_22": 11, "nrf_bellboard_task_trigger_23": 11, "nrf_bellboard_task_trigger_24": 11, "nrf_bellboard_task_trigger_25": 11, "nrf_bellboard_task_trigger_26": 11, "nrf_bellboard_task_trigger_27": 11, "nrf_bellboard_task_trigger_28": 11, "nrf_bellboard_task_trigger_29": 11, "nrf_bellboard_task_trigger_30": 11, "nrf_bellboard_task_trigger_31": 11, "nrf_bellboard_task_trigg": [11, 12], "nrf_bellboard_typ": [11, 12], "nrf_bellboard_task_address_get": [11, 12], "nrf_bellboard_triggered_event_get": 11, "nrf_bellboard_trigger_task_get": 11, "nrf_bellboard_event_clear": [11, 12], "nrf_bellboard_event_check": [11, 12], "nrf_bellboard_event_address_get": [11, 12], "nrf_bellboard_int_en": [11, 12], "group_idx": [11, 12, 14, 52, 69, 83], "nrf_bellboard_int_dis": [11, 12], "nrf_bellboard_int_enable_check": [11, 12], "nrf_bellboard_int_pending_get": [11, 12], "save": [11, 12, 16, 29, 56, 57, 66, 67, 69, 71, 87, 88, 134, 162, 165, 196, 206], "One": [11, 12, 20, 29, 56, 57, 60, 67, 69, 71, 85, 87, 88, 134, 137, 162, 165, 189, 192, 215, 241], "particular": [11, 12, 29, 34, 35, 51, 52, 53, 55, 56, 57, 60, 67, 69, 71, 87, 88, 122, 134, 155, 162, 165, 203, 219, 220, 241, 244], "mean": [11, 12, 29, 34, 35, 48, 49, 56, 57, 60, 67, 69, 71, 87, 88, 103, 111, 134, 137, 145, 148, 157, 159, 160, 162, 165, 178, 181, 188, 195, 196, 197, 239, 241], "inform": [11, 12, 29, 44, 56, 57, 67, 69, 71, 83, 87, 88, 93, 95, 96, 103, 104, 111, 112, 119, 128, 133, 134, 135, 148, 155, 162, 165, 174, 185, 186, 195, 196, 197, 199, 205, 206, 220], "about": [11, 12, 29, 48, 56, 57, 67, 69, 71, 87, 88, 93, 103, 104, 122, 134, 135, 155, 162, 165, 185, 186, 196, 197, 199, 201], "nrfy_bellboard": 12, "barrier": [12, 25, 35, 49, 53, 57, 62, 75, 88, 101, 113, 117, 135, 139, 143, 150, 166, 172, 176, 183, 193, 211, 217], "nrfy_static_inlin": [12, 25, 35, 49, 53, 57, 62, 75, 88, 101, 113, 117, 135, 139, 143, 150, 166, 172, 176, 183, 193, 211, 217], "nrfy_bellboard_int_init": 12, "interupt": 12, "nrfy_bellboard_int_uninit": 12, "nrfy_bellboard_events_process": 12, "nrfy_event_to_int_bitmask": [12, 25, 53, 57, 62, 75, 88, 101, 113, 117, 135, 139, 143, 150, 166, 176, 183, 193, 217, 236], "To": [12, 16, 20, 21, 23, 25, 53, 57, 62, 73, 74, 75, 88, 95, 98, 101, 111, 113, 117, 119, 120, 122, 133, 135, 139, 142, 143, 150, 166, 176, 178, 183, 188, 191, 193, 196, 197, 217, 220], "against": [12, 25, 53, 57, 62, 75, 88, 101, 113, 117, 135, 139, 143, 150, 166, 176, 183, 193, 217, 234], "nrfy_bellboard_task_trigg": 12, "nrfy_bellboard_task_address_get": 12, "nrfy_bellboard_event_clear": 12, "nrfy_bellboard_event_check": 12, "nrfy_bellboard_event_address_get": 12, "nrfy_bellboard_int_en": 12, "nrfy_bellboard_int_dis": 12, "nrfy_bellboard_int_enable_check": 12, "nrfy_bellboard_int_pending_get": 12, "nrf_bellboard": 13, "nrf_bprot_hal": 14, "nrf_bprot_nvm_blocks_protection_en": 14, "nrf_bprot_typ": 14, "block_mask": [14, 83], "arrang": [14, 83], "kb": [14, 83, 120, 134, 195], "eras": [14, 16, 83, 95, 96, 119, 120, 133, 134, 135, 162], "hard": [14, 83, 159, 248], "fault": [14, 83, 85, 162, 206], "repres": [14, 51, 56, 57, 83, 98, 106, 120, 135, 203, 209, 243, 244], "nrf_bprot_nvm_protection_in_debug_set": 14, "nvm": [14, 83, 96], "nrf_bprot": 15, "nrf_cache_h": 16, "nrf_cache_has_cachedata": 16, "cachedata": 16, "nrf_cache_has_cachedata_du": 16, "unit": [16, 20, 39, 40, 45, 56, 57, 71, 83, 90, 122, 155, 210, 237, 240], "nrf_cache_has_cacheinfo": 16, "cacheinfo": 16, "nrf_cache_has_task": 16, "nrf_cache_has_task_clean": 16, "clean": [16, 23, 73, 122, 207, 208], "nrf_cache_has_task_flush": 16, "flush": [16, 157, 165, 191, 192], "nrf_cache_has_task_save_restor": 16, "nrf_cache_has_statu": 16, "nrf_cache_has_ram_mod": 16, "split": [16, 95, 155, 196, 197], "between": [16, 23, 24, 56, 57, 66, 69, 74, 93, 100, 104, 112, 116, 117, 122, 131, 148, 149, 150, 153, 174, 178, 179, 181, 182, 186, 192, 196, 197, 234, 241, 243], "nrf_cache_has_rams": 16, "nrf_cache_has_cacheinfo_du_dirti": 16, "dirti": [16, 207, 208], "nrf_cache_has_cacheinfo_du_valid": 16, "nrf_cache_has_cacheinfo_set_way_info": 16, "nrf_cachedata_data_words_in_unit_max": 16, "max": [16, 93, 149, 182, 196, 234], "nrf_cachedata_data_units_max": 16, "nrf_cachedata_word_index_max": 16, "nrf_cachedata_way_index_max": 16, "nrf_cachedata_set_index_max": 16, "nrf_cacheinfo_data_words_in_unit_max": 16, "nrf_cacheinfo_data_units_max": 16, "nrf_cacheinfo_word_index_max": 16, "nrf_cacheinfo_way_index_max": 16, "nrf_cacheinfo_set_index_max": 16, "nrf_cache_mode_ramsize_max": 16, "ramsiz": 16, "nrf_cache_task_t": 16, "nrf_cache_task_cleancach": 16, "whole": [16, 56, 95, 96, 104, 119, 133, 134, 135, 149, 196, 197, 202, 234], "nrf_cache_task_cleanlin": 16, "nrf_cache_task_flushcach": 16, "nrf_cache_task_flushlin": 16, "nrf_cache_task_sav": 16, "nrf_cache_task_restor": 16, "nrf_cache_task_invalidatecach": 16, "invalid": [16, 45, 51, 60, 92, 93, 96, 99, 152, 178, 181, 191, 238, 240, 243], "nrf_cache_task_invalidatelin": 16, "nrf_cache_task_eras": 16, "nrf_cache_region_t": 16, "nrf_cache_region_flash": 16, "nrf_cache_region_xip": 16, "nrf_cache_ramsize_t": 16, "nrf_cache_ramsize_al": 16, "nrf_cache_ramsize_half": 16, "half": [16, 61, 112, 165, 168, 197], "nrf_cache_ramsize_quart": 16, "quarter": 16, "nrf_cache_ramsize_non": 16, "none": [16, 52, 104, 127, 234, 248], "nrf_cache_en": 16, "nrf_cache_typ": 16, "nrf_cache_dis": 16, "nrf_cache_enable_check": 16, "nrf_cache_invalid": 16, "content": [16, 55, 56, 60, 81, 95, 133, 134, 135, 171, 172, 197, 234], "nrf_cache_eras": 16, "nrf_cache_erase_status_check": 16, "nrf_cache_erase_status_clear": 16, "nrf_cache_profiling_set": 16, "profil": 16, "nrf_cache_profiling_counters_clear": 16, "counter": [16, 18, 55, 56, 57, 103, 111, 112, 113, 119, 122, 137, 138, 139, 160, 164, 165, 175, 196, 197, 206, 208, 209, 210, 211, 216, 217], "nrf_cache_instruction_hit_counter_get": 16, "hit": 16, "nrf_cache_instruction_miss_counter_get": 16, "nrf_cache_data_hit_counter_get": 16, "nrf_cache_data_miss_counter_get": 16, "nrf_cache_ram_mode_set": 16, "In": [16, 39, 51, 52, 55, 56, 57, 60, 92, 104, 112, 119, 137, 141, 148, 170, 178, 181, 182, 183, 188, 191, 196, 220, 241, 243], "nrf_cache_ram_mode_check": 16, "nrf_cache_ramsize_set": 16, "nrf_cache_ramsize_get": 16, "nrf_cache_read_lock_en": 16, "unlock": [16, 27, 85, 162], "ignor": [16, 20, 21, 60, 62, 81, 98, 99, 101, 111, 112, 113, 115, 117, 119, 124, 141, 142, 145, 148, 150, 152, 178, 181, 183, 185, 188, 191, 193, 215], "nrf_cache_update_lock_set": 16, "nrf_cache_data_get": 16, "nrf_cachedata_typ": 16, "purpos": [16, 55, 60, 66, 67, 104, 174, 220], "nrf_cache_tag_get": 16, "nrf_cacheinfo_typ": 16, "tag": [16, 44, 92, 93], "nrf_cache_line_validity_check": 16, "nrf_cache_mru_get": 16, "most": [16, 112, 146, 149, 153, 178, 181, 196, 197, 209, 240], "recent": 16, "nrf_cache_data_unit_validity_check": 16, "nrf_cache_is_data_unit_dirty_check": 16, "nrf_cache_lineaddr_set": 16, "addr": [16, 79, 119, 124, 178, 181, 185, 186, 196, 243, 249], "maintain": 16, "adress": [16, 122], "nrf_cache_lineaddr_get": 16, "nrf_cache_task_trigg": 16, "nrf_cache_task_address_get": 16, "nrf_cache_busy_check": 16, "nrf_cach": 17, "nrf_ccm_hal": 18, "ae": [18, 37, 120], "nrf_ccm_has_task_ksgen": 18, "ksgen": 18, "nrf_ccm_has_task_crypt": 18, "crypt": 18, "nrf_ccm_has_task_start": 18, "nrf_ccm_has_task_rateoverrid": 18, "rateoverrid": 18, "nrf_ccm_has_event_endksgen": 18, "endksgen": 18, "nrf_ccm_has_event_endcrypt": 18, "endcrypt": 18, "nrf_ccm_has_event_end": 18, "nrf_ccm_has_adatamask": 18, "adatamask": 18, "nrf_ccm_has_cnfptr": 18, "cnfptr": 18, "nrf_ccm_has_in_amount": 18, "nrf_ccm_has_out_amount": 18, "nrf_ccm_has_rateoverrid": 18, "nrf_ccm_has_errorstatu": 18, "nrf_ccm_has_micstatu": 18, "micstatu": 18, "nrf_ccm_has_macstatu": 18, "macstatu": 18, "nrf_ccm_has_kei": 18, "nrf_ccm_has_nonc": 18, "nonc": [18, 120], "nrf_ccm_has_inptr": 18, "nrf_ccm_has_outptr": 18, "nrf_ccm_has_in_ptr": 18, "nrf_ccm_has_out_ptr": 18, "nrf_ccm_has_scratchptr": 18, "nrf_ccm_has_maxpackets": 18, "maxpackets": 18, "nrf_ccm_has_mode_fast_decrypt": 18, "fast": [18, 56, 57, 122, 142, 162, 206], "decrypt": [18, 37], "nrf_ccm_has_mode_protocol": 18, "protocol": [18, 92, 93, 119, 120, 157], "nrf_ccm_has_mode_protocol_bl": 18, "ble": 18, "nrf_ccm_has_mode_protocol_ieee802154": 18, "802": [18, 122], "nrf_ccm_has_mode_length": 18, "lengh": 18, "nrf_ccm_has_mode_datarate_125kbp": 18, "125": [18, 60, 61, 112, 122, 146, 149, 168, 175], "kbp": [18, 146, 149, 179, 182], "rate": [18, 100, 122, 142, 143, 146, 149, 150, 188, 189, 191, 192, 193], "nrf_ccm_has_mode_datarate_125kbit": 18, "kbit": [18, 122], "nrf_ccm_has_mode_datarate_250kbit": 18, "250": [18, 112, 122, 146, 149, 159, 175, 179, 182], "nrf_ccm_has_mode_datarate_500kbp": 18, "500": [18, 112, 115, 119, 122, 146, 149, 175], "nrf_ccm_has_mode_datarate_500kbit": 18, "nrf_ccm_has_mode_datarate_4mbit": 18, "mbit": [18, 122], "nrf_ccm_has_mode_maclen": 18, "mac": [18, 122, 197], "nrf_ccm_has_datar": 18, "synchron": [18, 55, 56, 57, 119, 157, 168, 185, 191, 220, 239], "nrf_ccm_has_headermask": 18, "headermask": 18, "nrf_ccm_key_siz": 18, "nrf_ccm_iv_siz": 18, "nrf_ccm_pktctr_size": 18, "nrf_ccm_task_t": 18, "nrf_ccm_task_ksgen": 18, "stream": [18, 233], "nrf_ccm_task_crypt": 18, "nrf_ccm_task_stop": 18, "nrf_ccm_task_start": 18, "nrf_ccm_task_rateoverrid": 18, "overrid": [18, 59, 67, 81, 104, 141, 157, 203], "datar": 18, "nrf_ccm_event_t": 18, "nrf_ccm_event_endksgen": 18, "keystream": 18, "nrf_ccm_event_endcrypt": 18, "nrf_ccm_event_error": 18, "nrf_ccm_event_end": 18, "nrf_ccm_short_mask_t": 18, "nrf_ccm_short_endksgen_crypt_mask": 18, "nrf_ccm_int_mask_t": 18, "nrf_ccm_int_endksgen_mask": 18, "nrf_ccm_int_endcrypt_mask": 18, "nrf_ccm_int_error_mask": 18, "nrf_ccm_int_end_mask": 18, "nrf_ccm_error_t": 18, "nrf_ccm_error_no_error": 18, "nrf_ccm_error_premature_inptr_end": 18, "nrf_ccm_error_premature_outptr_end": 18, "nrf_ccm_error_encryption_too_slow": 18, "did": [18, 60, 170, 191], "nrf_ccm_mode_t": 18, "nrf_ccm_mode_encrypt": 18, "nrf_ccm_mode_decrypt": 18, "nrf_ccm_mode_fast_decrypt": 18, "nrf_ccm_datarate_t": 18, "nrf_ccm_datarate_125k": 18, "nrf_ccm_datarate_250k": 18, "nrf_ccm_datarate_500k": 18, "nrf_ccm_datarate_1m": 18, "mbp": [18, 146, 149], "nrf_ccm_datarate_2m": 18, "nrf_ccm_datarate_4m": 18, "nrf_ccm_protocol_t": 18, "nrf_ccm_mode_protocol_bl": 18, "nrf_ccm_mode_protocol_ieee802154": 18, "nrf_ccm_length_t": 18, "nrf_ccm_length_default": 18, "nrf_ccm_length_extend": 18, "nrf_ccm_maclen_t": 18, "nrf_ccm_mode_maclen_m0": 18, "nrf_ccm_mode_maclen_m4": 18, "nrf_ccm_mode_maclen_m6": 18, "nrf_ccm_mode_maclen_m8": 18, "nrf_ccm_mode_maclen_m10": 18, "nrf_ccm_mode_maclen_m12": 18, "nrf_ccm_mode_maclen_m14": 18, "nrf_ccm_mode_maclen_m16": 18, "nrf_ccm_task_trigg": 18, "nrf_ccm_type": 18, "nrf_ccm_task_address_get": 18, "nrf_ccm_event_clear": 18, "nrf_ccm_event_check": 18, "nrf_ccm_event_address_get": 18, "nrf_ccm_shorts_en": 18, "nrf_ccm_shorts_dis": 18, "nrf_ccm_shorts_set": 18, "nrf_ccm_int_en": 18, "nrf_ccm_int_dis": 18, "nrf_ccm_int_enable_check": 18, "nrf_ccm_enabl": 18, "nrf_ccm_disabl": 18, "nrf_ccm_configur": 18, "nrf_ccm_config_t": 18, "nrf_ccm_maxpacketsize_set": 18, "nrf_ccm_micstatus_get": 18, "mic": 18, "nrf_ccm_macstatus_get": 18, "nrf_ccm_errorstatus_get": 18, "nrf_ccm_cnfptr_set": 18, "nrf_ccm_cnf_t": 18, "p_data": [18, 29, 92, 178, 181, 188, 191, 196, 232, 240], "nrf_ccm_cnfptr_get": 18, "nrf_ccm_key_set": 18, "p_kei": [18, 37], "128": [18, 37, 61, 98, 112, 116, 120, 134, 149, 155, 175, 192], "big": [18, 37, 196], "endian": [18, 37, 93, 122], "nrf_ccm_key_get": 18, "nrf_ccm_nonce_set": 18, "p_nonc": 18, "nrf_ccm_nonce_get": 18, "nrf_ccm_in_amount_get": 18, "nrf_ccm_inptr_set": 18, "nrf_ccm_inptr_get": 18, "nrf_ccm_in_ptr_set": 18, "unencrypt": [18, 37], "nrf_ccm_in_ptr_get": 18, "nrf_ccm_outptr_set": 18, "nrf_ccm_outptr_get": 18, "nrf_ccm_out_ptr_set": 18, "nrf_ccm_out_ptr_get": 18, "nrf_ccm_out_amount_get": 18, "nrf_ccm_scratchptr_set": 18, "p_area": 18, "nrf_ccm_scratchptr_get": 18, "nrf_ccm_datarate_override_set": 18, "nrf_ccm_datarate_override_get": 18, "nrf_ccm_adatamask_set": 18, "adata_msk": 18, "adata": 18, "nrf_ccm_adatamask_get": 18, "nrf_ccm_headermask_set": 18, "header_msk": 18, "nrf_ccm_headermask_get": 18, "s0": [18, 104, 122, 203], "authent": 18, "nrf_ccm_subscribe_set": 18, "nrf_ccm_subscribe_clear": 18, "nrf_ccm_publish_set": 18, "nrf_ccm_publish_clear": 18, "nrf_ccm": [18, 19], "pktctr": 18, "iv": 18, "mac_length": 18, "nrfx_clock": 20, "nrfx_clock_event_handler_t": 20, "nrfx_clock_evt_type_t": 20, "nrfx_clock_evt_hfclk_start": 20, "hfclk": [20, 21, 92, 196], "nrfx_clock_evt_lfclk_start": 20, "nrfx_clock_evt_pll_start": 20, "nrfx_clock_evt_ctto": 20, "nrfx_clock_evt_cal_don": 20, "nrfx_clock_evt_hfclkaudio_start": 20, "hfclkaudio": [20, 21], "nrfx_clock_evt_hfclk192m_start": 20, "hfclk192m": [20, 21], "nrfx_clock_init": 20, "nrfx_clock_en": 20, "nrfx_clock_dis": 20, "nrfx_clock_uninit": 20, "nrfx_clock_init_check": 20, "nrfx_clock_start": 20, "nrf_clock_domain_t": [20, 21], "nrfx_clock_stop": 20, "nrfx_clock_is_run": 20, "p_clk_src": [20, 21], "xtal": [20, 98], "assum": 20, "either": [20, 21, 55, 60, 92, 133, 141, 152, 155, 195, 197, 241], "nrf_clock_lfclk_t": [20, 21], "nrf_clock_hfclk_t": [20, 21], "nrfx_clock_divider_set": 20, "nrf_clock_hfclk_div_t": [20, 21], "div": [20, 168], "nrfx_error_not_support": [20, 55, 95, 106, 141, 145, 148, 178, 181, 238, 241], "nrfx_error_invalid_param": [20, 33, 51, 55, 60, 92, 99, 106, 119, 141, 148, 152, 174, 181, 191, 238, 239, 241], "nrfx_clock_divider_get": 20, "nrfx_clock_lfclk_start": 20, "nrfx_clock_lfclk_stop": 20, "nrfx_clock_lfclk_is_run": 20, "nrfx_clock_hfclk_start": 20, "accuraci": [20, 51, 59, 170], "nrfx_clock_hfclk_stop": 20, "nrfx_clock_hfclk_is_run": 20, "nrfx_clock_hfclkaudio_config_set": 20, "freq_valu": [20, 21], "666": [20, 21], "333": [20, 21, 100], "calcul": [20, 21, 24, 42, 87, 88, 93, 98, 112, 120, 122, 170, 175, 236, 249], "chosen": [20, 21, 33, 106, 120], "equat": [20, 21, 42, 98, 120], "f_out": [20, 21], "32m": [20, 21], "fit": [20, 21, 196, 197], "176": [20, 21], "402": [20, 21], "165": [20, 21], "411": [20, 21], "band": [20, 21], "nrfx_clock_hfclkaudio_config_get": 20, "nrfx_clock_calibration_start": 20, "nrfx_clock_is_calibr": 20, "nrfx_clock_calibration_timer_start": 20, "interv": [20, 21, 56, 57, 96, 122], "ctto": [20, 21], "nrfx_clock_calibration_timer_stop": 20, "nrfx_clock_task_address_get": 20, "nrf_clock_task_t": [20, 21], "nrfx_clock_event_address_get": 20, "nrf_clock_event_t": [20, 21], "nrf_clock_hal": 21, "nrf_clock_has_calibr": 21, "nrf_clock_has_calibration_tim": 21, "nrf_clock_has_hfclk192m": 21, "nrf_clock_has_hfclkaudio": 21, "nrf_clock_has_hfclk_div": 21, "nrf_clock_has_lfclk_alwaysrun": 21, "alwaysrun": [21, 77], "nrf_clock_has_hfclk_alwaysrun": 21, "nrf_clock_has_hfclksrc": 21, "hfclksrc": 21, "nrf_clock_has_pl": 21, "nrf_clock_has_xo": 21, "xo": 21, "nrf_clock_has_lfclk_typ": 21, "subtyp": 21, "nrf_clock_lfclkrun_status_nottrigg": 21, "lfclkstart": 21, "hfclkstart": 21, "definiton": 21, "nrf_clock_lfclkrun_status_trigg": 21, "nrf_clock_intenset_lfclkstarted_msk": 21, "nrf_lfclksrccopi": 21, "lf": 21, "srccopi": 21, "nrf_lfclkrun": 21, "nrf_lfclkstat": 21, "stat": 21, "nrf_lfclksrc": 21, "src": [21, 71, 95, 133, 135], "nrf_lfclkalwaysrun": 21, "nrf_clock_lfclksrccopy_src_msk": 21, "nrf_clock_lfclksrccopy_src_po": 21, "nrf_clock_lfclkrun_status_msk": 21, "nrf_clock_lfclkrun_status_po": 21, "nrf_clock_lfclkstat_src_msk": 21, "nrf_clock_lfclkstat_src_po": 21, "nrf_clock_lfclkstat_state_msk": 21, "nrf_clock_lfclkstat_state_po": 21, "nrf_clock_lfclkstat_alwaysrunning_msk": 21, "nrf_clock_lfclkstat_alwaysrunning_po": 21, "nrf_clock_lfclkalwaysrun_alwaysrun_msk": 21, "nrf_clock_lfclkalwaysrun_alwaysrun_po": 21, "nrf_clock_intenset_hfclkstarted_msk": 21, "hf": 21, "nrf_tasks_hfclkstart": 21, "nrf_tasks_hfclkstop": 21, "nrf_events_hfclkstart": 21, "startrd": 21, "nrf_hfclkrun": 21, "nrf_hfclkstat": 21, "nrf_clock_hfclkrun_status_msk": 21, "nrf_clock_hfclkrun_status_po": 21, "nrf_clock_hfclkstat_state_msk": 21, "nrf_clock_hfclkstat_state_po": 21, "lfclksrc": 21, "lfclkstat": 21, "lfclksrccopi": 21, "nrf_clock_lfclk_lfulp": 21, "khz": [21, 55, 56, 57, 60, 112, 137, 175, 178, 181, 182, 234], "ultra": [21, 104], "nrf_clock_lfclk_rc": 21, "rc": 21, "nrf_clock_lfclk_xtal": 21, "crystal": 21, "synthes": 21, "nrf_clock_lfclk_xtal_low_sw": 21, "swing": [21, 98], "nrf_clock_lfclk_xtal_full_sw": 21, "hfclkstat": 21, "hfclk192mstat": 21, "nrf_clock_hfclk_high_accuraci": 21, "nrf_clock_hfclk_low_accuraci": 21, "nrf_clock_domain_lfclk": 21, "nrf_clock_domain_hfclk": 21, "nrf_clock_domain_hfclk192m": 21, "nrf_clock_domain_hfclkaudio": 21, "hfclkctrl": 21, "hfclk192mctrl": 21, "nrf_clock_hfclk_div_1": 21, "nrf_clock_hfclk_div_2": 21, "nrf_clock_hfclk_div_4": 21, "nrf_clock_start_task_status_t": 21, "lfclkrun": 21, "hfclkrun": 21, "nrf_clock_start_task_not_trigg": 21, "nrf_clock_start_task_trigg": 21, "nrf_clock_int_mask_t": 21, "nrf_clock_int_hf_started_mask": 21, "nrf_clock_int_lf_started_mask": 21, "nrfx_clock_int_pll_started_mask": 21, "pllstart": 21, "nrf_clock_int_done_mask": 21, "nrf_clock_int_ctto_mask": 21, "nrf_clock_int_ctstarted_mask": 21, "nrf_clock_int_ctstopped_mask": 21, "hfclkaudiostart": 21, "nrf_clock_int_hf192m_started_mask": 21, "hfclk192mstart": 21, "nrf_clock_task_lfclkstop": 21, "nrf_clock_task_hfclkstop": 21, "nrf_clock_task_hfclkstart": 21, "nrf_clock_task_pllstart": 21, "regardless": [21, 93], "nrf_clock_task_pllstop": 21, "nrf_clock_task_lfclkstart": 21, "nrf_clock_task_c": 21, "nrf_clock_task_ctstart": 21, "nrf_clock_task_ctstop": 21, "nrf_clock_task_hfclkaudiostop": 21, "nrf_clock_task_hfclk192mstart": 21, "nrf_clock_task_hfclk192mstop": 21, "nrf_clock_event_hfclkstart": 21, "nrf_clock_event_pllstart": 21, "nrf_clock_event_lfclkstart": 21, "nrf_clock_event_don": 21, "nrf_clock_event_ctto": 21, "nrf_clock_event_ctstart": 21, "nrf_clock_event_ctstop": 21, "nrf_clock_event_hfclk192mstart": 21, "nrf_clock_int_en": 21, "nrf_clock_typ": 21, "nrf_clock_int_dis": 21, "nrf_clock_int_enable_check": 21, "nrf_clock_task_address_get": 21, "nrf_clock_task_trigg": 21, "nrf_clock_event_address_get": 21, "nrf_clock_event_clear": 21, "nrf_clock_event_check": 21, "nrf_clock_start_task_check": 21, "nrf_clock_lf_src_set": 21, "product": [21, 37, 56, 57, 60, 83, 95, 112, 119, 120, 122, 133, 134, 135, 148, 181, 191, 234], "nrf_clock_lf_src_get": 21, "nrf_clock_lf_actv_src_get": 21, "nrf_clock_lf_srccopy_get": 21, "lkclkstart": 21, "nrf_clock_lf_is_run": 21, "nrf_clock_lf_start_task_status_get": 21, "nrf_clock_hf_src_set": 21, "nrf_clock_hf_src_get": 21, "alwai": [21, 55, 57, 93, 155, 157, 193, 196, 197], "nrf_clock_hf_is_run": 21, "clk_src": [21, 55], "nrf_clock_hf_start_task_status_get": 21, "nrf_clock_hfclkaudio_config_set": 21, "nrf_clock_hfclkaudio_config_get": 21, "nrf_clock_cal_timer_timeout_set": 21, "second": [21, 60, 67, 79, 93, 111, 159, 185, 191, 232, 233, 234, 240, 241], "75": [21, 157, 170], "nrf_clock_hfclk192m_div_set": 21, "nrf_clock_hfclk192m_div_get": 21, "nrf_clock_hfclk192m_src_set": 21, "nrf_clock_hfclk192m_src_get": 21, "ensur": [21, 56, 57, 96, 112, 137, 148, 157, 181], "nrf_clock_alwaysrun_get": 21, "nrf_clock_alwaysrun_active_get": 21, "nrf_clock_subscribe_set": 21, "nrf_clock_subscribe_clear": 21, "nrf_clock_publish_set": 21, "nrf_clock_publish_clear": 21, "nrf_clock": 22, "nrfx_comp": 23, "vol": 23, "ref": [23, 122], "comp_th": [23, 25], "smaller": [23, 137, 234], "nrfx_comp_config_th": 23, "nrfx_comp_default_config": 23, "_input": [23, 73], "lower": [23, 56, 57, 95, 120, 122, 149, 159, 181, 208, 209, 234], "upper": [23, 92, 152, 234], "nrfx_comp_event_handler_t": 23, "nrf_comp_event_t": [23, 24, 25], "nrfx_comp_short_mask_t": 23, "nrfx_comp_short_stop_after_cross_evt": 23, "cross": [23, 24, 73, 74, 128], "nrfx_comp_short_stop_after_up_evt": 23, "nrfx_comp_short_stop_after_down_evt": 23, "down": [23, 24, 48, 49, 59, 73, 74, 104, 112, 119, 120, 142, 155, 160], "nrfx_comp_evt_en_mask_t": 23, "nrfx_comp_evt_en_cross_mask": 23, "vin": [23, 24, 25, 74, 75], "nrfx_comp_evt_en_up_mask": 23, "increas": [23, 191, 214], "nrfx_comp_evt_en_down_mask": 23, "decreas": 23, "nrfx_comp_evt_en_ready_mask": 23, "nrfx_comp_config_t": 23, "nrfx_comp_start": 23, "nrfx_comp_uninit": 23, "you": [23, 73, 111, 112, 148, 181, 185, 188, 196, 220], "again": [23, 73, 95, 119, 122, 141, 196], "want": [23, 73, 111], "nrfx_comp_stop": 23, "nrfx_comp_init_check": 23, "nrfx_comp_pin_select": 23, "nrf_comp_input_t": [23, 24, 25], "comp_evt_en_mask": 23, "comp_shorts_mask": 23, "OR": [23, 122, 155, 232, 233, 240], "element": [23, 103, 203, 234, 249], "nrfx_comp_sampl": 23, "copi": [23, 60, 61, 95, 112, 133, 135, 168, 191, 196], "nrfx_comp_task_address_get": 23, "nrf_comp_task_t": [23, 24, 25], "nrfx_comp_event_address_get": 23, "nrf_comp_ref_t": [23, 24, 25], "nrf_comp_ext_ref_t": [23, 24, 25], "ext_ref": [23, 24, 25, 73, 74, 75], "nrf_comp_main_mode_t": [23, 24, 25], "main_mod": [23, 24, 25], "main": [23, 24, 25, 48, 49, 55, 56, 77, 95, 103, 104, 126, 134, 135, 243], "nrf_comp_th_t": [23, 24, 25], "thdown": [23, 24, 25], "thup": [23, 24, 25], "nrf_comp_sp_mode_t": [23, 24, 25], "speed_mod": [23, 24, 25], "nrf_comp_hyst_t": [23, 24, 25], "hyst": [23, 24, 25, 74, 75], "monitor": [23, 25, 73, 75, 141, 142, 143, 164, 165, 166], "nrf_comp_hal": 24, "nrf_comp_has_isourc": [24, 25], "isourc": [24, 25], "nrf_comp_has_ain_as_pin": 24, "nrf_comp_ref_int_1v2": 24, "vref": 24, "vdd": [24, 104, 126, 142], "nrf_comp_ref_int_1v8": 24, "nrf_comp_ref_int_2v4": 24, "nrf_comp_ref_avddao1v8": 24, "avdd_ao_1v8": 24, "nrf_comp_ref_vdd": 24, "nrf_comp_ref_aref": 24, "aref": 24, "arefmin": 24, "nrf_comp_main_mode_s": 24, "nrf_comp_main_mode_diff": 24, "nrf_comp_sp_mode_low": 24, "nrf_comp_sp_mode_norm": 24, "normal": [24, 29, 48, 49, 59, 104, 126, 142, 196, 197, 234], "nrf_comp_sp_mode_high": 24, "nrf_comp_hyst_no_hyst": 24, "nrf_comp_hyst_40mv": 24, "mv": [24, 74], "nrf_comp_hyst_50mv": 24, "50": [24, 48, 74, 157], "nrf_isource_t": [24, 25], "nrf_comp_isource_off": 24, "nrf_comp_isource_ien_2ua5": 24, "ua": 24, "nrf_comp_isource_ien_5ua": 24, "nrf_comp_isource_ien_10ua": 24, "nrf_comp_task_start": 24, "nrf_comp_task_stop": 24, "nrf_comp_task_sampl": 24, "nrf_comp_event_readi": 24, "nrf_comp_event_down": 24, "go": [24, 55, 56, 57, 74, 104, 122, 133, 134, 196, 206], "nrf_comp_event_up": 24, "nrf_comp_event_cross": 24, "nrf_comp_int_mask_t": [24, 25], "nrf_comp_int_ready_mask": 24, "nrf_comp_int_down_mask": 24, "nrf_comp_int_up_mask": 24, "nrf_comp_int_cross_mask": 24, "nrf_comp_short_mask_t": 24, "nrf_comp_short_stop_cross_mask": 24, "nrf_comp_short_stop_up_mask": 24, "nrf_comp_short_stop_down_mask": 24, "nrf_comp_en": [24, 25], "nrf_comp_typ": [24, 25], "nrf_comp_dis": [24, 25], "nrf_comp_enable_check": [24, 25], "nrf_comp_ref_set": [24, 25], "nrf_comp_ext_ref_set": [24, 25], "nrf_comp_th_set": [24, 25], "vdown": [24, 25], "vup": [24, 25], "nrf_comp_main_mode_set": [24, 25], "nrf_comp_speed_mode_set": [24, 25], "nrf_comp_hysteresis_set": [24, 25], "nrf_comp_isource_set": [24, 25], "nrf_comp_input_select": [24, 25], "nrf_comp_result_get": [24, 25], "nrf_comp_int_en": [24, 25], "nrf_comp_int_enable_check": [24, 25], "nrf_comp_int_dis": [24, 25], "nrf_comp_task_address_get": [24, 25], "nrf_comp_event_address_get": [24, 25], "nrf_comp_shorts_en": [24, 25], "nrf_comp_shorts_dis": [24, 25], "nrf_comp_task_trigg": [24, 25], "nrf_comp_event_clear": [24, 25], "nrf_comp_event_check": [24, 25], "nrf_comp": [24, 26], "th_down": 24, "th_up": 24, "nrf_comp_ref_conf_t": 24, "nrfy_comp": 25, "nrfy_comp_has_isourc": 25, "nrfy_comp_periph_configur": 25, "nrfy_comp_config_t": 25, "nrfy_comp_int_init": 25, "nrfy_comp_int_uninit": 25, "nrfy_comp_events_process": 25, "nrfy_comp_sampl": 25, "nrfy_comp_en": 25, "nrfy_comp_dis": 25, "nrfy_comp_enable_check": 25, "nrfy_comp_ref_set": 25, "nrfy_comp_ext_ref_set": 25, "nrfy_comp_th_set": 25, "nrfy_comp_main_mode_set": 25, "nrfy_comp_speed_mode_set": 25, "nrfy_comp_hysteresis_set": 25, "nrfy_comp_isource_set": 25, "nrfy_comp_input_select": 25, "nrfy_comp_result_get": 25, "nrfy_comp_int_en": 25, "nrfy_comp_int_dis": 25, "nrfy_comp_int_enable_check": 25, "nrfy_comp_task_address_get": 25, "nrfy_comp_event_address_get": 25, "nrfy_comp_shorts_en": 25, "nrfy_comp_shorts_dis": 25, "nrfy_comp_task_trigg": 25, "nrfy_comp_event_clear": 25, "nrfy_comp_event_check": 25, "nrf_cracen_h": 27, "crypto": 27, "nrf_cracen_seed_count": 27, "seed": [27, 59], "nrf_cracen_event_t": 27, "nrf_cracen_event_cryptomast": 27, "cryptomast": 27, "nrf_cracen_event_rng": 27, "nrf_cracen_event_pke_ikg": 27, "pke": 27, "ikg": 27, "nrf_cracen_int_mask_t": 27, "nrf_cracen_int_cryptomaster_mask": 27, "nrf_cracen_int_rng_mask": 27, "nrf_cracen_int_pke_ikg_mask": 27, "pkeikg": 27, "nrf_cracen_module_mask_t": 27, "nrf_cracen_module_cryptomaster_mask": 27, "nrf_cracen_module_rng_mask": 27, "nrf_cracen_module_pke_ikg_mask": 27, "nrf_cracen_event_address_get": 27, "nrf_cracen_typ": 27, "nrf_cracen_event_clear": 27, "nrf_cracen_event_check": 27, "nrf_cracen_int_en": 27, "nrf_cracen_int_enable_check": 27, "nrf_cracen_int_dis": 27, "nrf_cracen_module_en": 27, "nrf_cracen_module_dis": 27, "nrf_cracen_module_get": 27, "nrf_cracen_seedram_lock_enable_set": 27, "nrf_cracen_seedram_lock_check": 27, "nrf_cracen_seed_set": 27, "idx": [27, 39, 40, 51, 52, 53, 88, 111, 112, 137, 138, 145, 146, 148, 149, 152, 153, 174, 175, 178, 179, 181, 182, 185, 186, 188, 191, 192, 215, 216, 243, 244], "nrf_cracen": 28, "nrf_ctrlap_hal": 29, "nrf_ctrlap_event_t": 29, "nrf_ctrlap_event_rxreadi": 29, "peer": 29, "nrf_ctrlap_event_txdon": 29, "nrf_ctrlap_int_mask_t": 29, "nrf_ctrlap_int_rxready_mask": 29, "rxreadi": [29, 122], "nrf_ctrlap_int_txdone_mask": 29, "txdone": 29, "nrf_ctrlap_bootmode_t": 29, "boot": [29, 162, 195], "nrf_ctrlap_mode_norm": 29, "nrf_ctrlap_mode_rom_oper": 29, "rom": 29, "nrf_ctrlap_event_clear": 29, "nrf_ctrlapperi_typ": 29, "nrf_ctrlap_event_check": 29, "nrf_ctrlap_event_address_get": 29, "nrf_ctrlap_int_en": 29, "nrf_ctrlap_int_dis": 29, "nrf_ctrlap_int_enable_check": 29, "nrf_ctrlap_int_pending_get": 29, "nrf_ctrlap_mailbox_rxdata_get": 29, "sent": [29, 60, 62, 93, 119, 120, 122, 145, 146, 148, 179, 185, 186, 188, 189, 191, 192, 196, 197, 249], "debugg": [29, 162], "nrf_ctrlap_mailbox_rxstatus_pending_check": 29, "rxdata": 29, "nrf_ctrlap_mailbox_txdata_get": 29, "nrf_ctrlap_mailbox_txdata_set": 29, "datapend": 29, "txstatu": 29, "send": [29, 66, 67, 69, 93, 109, 119, 120, 122, 142, 146, 149, 150, 153, 178, 179, 181, 182, 185, 186, 188, 191, 192, 193, 196, 197], "nrf_ctrlap_mailbox_txstatus_pending_check": 29, "txdata": 29, "nrf_ctrlap_mailbox_bootmode_get": 29, "mailbox": [29, 195], "commun": [29, 66, 67, 69, 92, 93], "nrf_ctrlap_info_set": 29, "nrf_ctrlap_info_t": 29, "nrf_ctrlap_info_get": 29, "nrf_ctrlap": [29, 30], "partno": 29, "hw_revis": 29, "nrf_dcnf_hal": 31, "nrf_dcnf_cpuid_get": 31, "nrf_dcnf_type": 31, "identifi": [31, 44, 51, 77, 81, 92, 93, 111, 112, 113, 195, 196, 197, 234], "environ": [31, 96, 133, 206, 220, 240, 245], "nrf_dcnf": 32, "nrfx_dppi": 33, "distribut": [33, 34], "programm": [33, 34, 106, 107, 155, 157], "interconnect": [33, 34, 106, 107, 243, 244], "nrfx_dppi_fre": 33, "nrfx_dppi_channel_alloc": 33, "thread": [33, 51, 55, 106, 220, 239], "safe": [33, 51, 55, 60, 106, 111, 112, 141, 185, 197, 239], "nrfx_error_no_mem": [33, 51, 55, 106, 141, 191, 215, 238, 239, 241], "There": [33, 51, 56, 57, 99, 106, 141, 185, 196, 215, 241], "nrfx_dppi_channel_fre": 33, "nrfx_flag32_fre": [33, 51, 55, 106, 239], "nrfx_dppi_channel_en": 33, "nrfx_dppi_channel_dis": 33, "nrfx_dppi_group_alloc": 33, "nrf_dppi_channel_group_t": [33, 34, 35], "p_group": [33, 106, 112, 241], "nrfx_dppi_group_fre": 33, "nrfx_dppi_channel_include_in_group": 33, "ad": [33, 52, 56, 57, 93, 106, 112, 122, 234], "nrfx_dppi_channel_remove_from_group": 33, "remov": [33, 34, 35, 103, 104, 106, 107, 159, 197, 201, 202, 220, 241], "nrfx_dppi_group_clear": 33, "nrfx_dppi_group_en": 33, "nrfx_dppi_group_dis": 33, "nrf_dppi_hal": 34, "nrf_dppi_endpoint_setup": 34, "task_or_ev": 34, "dppi_chan": 34, "nrf_dppi_endpoint_clear": 34, "nrf_dppi_channel_group0": 34, "nrf_dppi_channel_group1": 34, "nrf_dppi_channel_group2": 34, "nrf_dppi_channel_group3": 34, "nrf_dppi_channel_group4": 34, "nrf_dppi_channel_group5": 34, "nrf_dppi_task_t": [34, 35], "nrf_dppi_task_chg0_en": 34, "nrf_dppi_task_chg0_di": 34, "nrf_dppi_task_chg1_en": 34, "nrf_dppi_task_chg1_di": 34, "nrf_dppi_task_chg2_en": 34, "nrf_dppi_task_chg2_di": 34, "nrf_dppi_task_chg3_en": 34, "nrf_dppi_task_chg3_di": 34, "nrf_dppi_task_chg4_en": 34, "nrf_dppi_task_chg4_di": 34, "nrf_dppi_task_chg5_en": 34, "nrf_dppi_task_chg5_di": 34, "nrf_dppi_channel_number_get": [34, 35], "nrf_dppic_typ": [34, 35, 243], "nrf_dppi_group_number_get": [34, 35], "nrf_dppi_task_trigg": [34, 35], "dppi_task": [34, 35], "nrf_dppi_task_address_get": [34, 35], "nrf_dppi_channel_check": [34, 35], "nrf_dppi_channels_en": [34, 35], "etc": [34, 35, 67, 241], "nrf_dppi_channels_dis": [34, 35], "nrf_dppi_channels_disable_al": [34, 35], "nrf_dppi_subscribe_set": [34, 35], "nrf_dppi_subscribe_clear": [34, 35], "nrf_dppi_channels_group_set": [34, 35], "channel_mask": [34, 35, 106, 107, 141, 241], "channel_group": [34, 35, 107, 241], "assign": [34, 35, 66, 67, 83, 106, 107, 112, 113, 119, 148, 153, 155, 181, 196, 234, 239, 241, 243, 244], "overwritten": [34, 35, 107], "nrf_dppi_channels_include_in_group": [34, 35], "add": [34, 35, 107, 196, 209, 220, 232, 240], "nrf_dppi_channels_remove_from_group": [34, 35], "nrf_dppi_group_clear": [34, 35], "nrf_dppi_group_en": [34, 35], "nrf_dppi_group_dis": [34, 35], "nrf_dppi_group_enable_task_get": [34, 35], "nrf_dppi_group_disable_task_get": [34, 35], "nrfy_dppi": 35, "nrfy_dppi_channels_set": 35, "nrfy_dppi_channel_number_get": 35, "nrfy_dppi_group_number_get": 35, "nrfy_dppi_task_trigg": 35, "nrfy_dppi_task_address_get": 35, "nrfy_dppi_channel_check": 35, "nrfy_dppi_channels_en": 35, "nrfy_dppi_channels_dis": 35, "nrfy_dppi_channels_disable_al": 35, "nrfy_dppi_subscribe_set": 35, "nrfy_dppi_subscribe_clear": 35, "nrfy_dppi_channels_group_set": 35, "nrfy_dppi_channels_include_in_group": 35, "nrfy_dppi_channels_remove_from_group": 35, "nrfy_dppi_group_clear": 35, "nrfy_dppi_group_en": 35, "nrfy_dppi_group_dis": 35, "nrfy_dppi_group_enable_task_get": 35, "nrfy_dppi_group_disable_task_get": 35, "nrf_dppi": 36, "nrf_ecb_hal": 37, "electron": 37, "codebook": 37, "nrf_ecb_has_task_startecb": 37, "startecb": 37, "nrf_ecb_has_task_start": 37, "nrf_ecb_has_task_stopecb": 37, "stopecb": 37, "nrf_ecb_has_task_stop": 37, "nrf_ecb_has_event_endecb": 37, "endecb": 37, "nrf_ecb_has_event_end": 37, "nrf_ecb_has_event_errorecb": 37, "errorecb": 37, "nrf_ecb_has_event_error": 37, "nrf_ecb_has_kei": 37, "nrf_ecb_has_in_ptr": 37, "nrf_ecb_has_in_amount": 37, "nrf_ecb_has_out_ptr": 37, "nrf_ecb_has_out_amount": 37, "nrf_ecb_has_ecbdataptr": 37, "ecbdataptr": 37, "nrf_ecb_task_t": 37, "nrf_ecb_task_startecb": 37, "nrf_ecb_task_start": 37, "nrf_ecb_task_stopecb": 37, "nrf_ecb_task_stop": 37, "nrf_ecb_event_t": 37, "nrf_ecb_event_endecb": 37, "nrf_ecb_event_errorecb": 37, "becaus": [37, 60, 92, 104, 137, 152, 178, 181, 185, 191, 240, 241], "nrf_ecb_event_end": 37, "nrf_ecb_event_error": 37, "nrf_ecb_int_mask_t": 37, "nrf_ecb_int_endecb_mask": 37, "nrf_ecb_int_errorecb_mask": 37, "nrf_ecb_int_end_mask": 37, "nrf_ecb_int_error_mask": 37, "nrf_ecb_task_trigg": 37, "nrf_ecb_typ": 37, "nrf_ecb_task_address_get": 37, "nrf_ecb_event_clear": 37, "nrf_ecb_event_check": 37, "nrf_ecb_event_address_get": 37, "nrf_ecb_int_en": 37, "nrf_ecb_int_dis": 37, "nrf_ecb_int_enable_check": 37, "nrf_ecb_data_pointer_set": 37, "nrf_ecb_data_pointer_get": 37, "nrf_ecb_key_set": 37, "nrf_ecb_in_ptr_set": 37, "nrf_ecb_in_ptr_get": 37, "nrf_ecb_in_amount_get": 37, "nrf_ecb_out_ptr_set": 37, "nrf_ecb_out_ptr_get": 37, "nrf_ecb_out_amount_get": 37, "nrf_ecb_subscribe_set": 37, "nrf_ecb_subscribe_clear": 37, "nrf_ecb_publish_set": 37, "nrf_ecb_publish_clear": 37, "nrf_ecb": 38, "nrfx_egu": 39, "nrfx_egu_inst": 39, "nrfx_egu_inst_handler_get": 39, "nrfx_egu_event_handler_t": 39, "nrfx_egu_init": 39, "nrfx_egu_t": 39, "notif": [39, 111], "nrfx_egu_int_en": 39, "nrfx_egu_task_address_get": 39, "nrf_egu_task_t": [39, 40], "nrfx_egu_event_address_get": 39, "nrf_egu_event_t": [39, 40], "nrfx_egu_int_dis": 39, "nrfx_egu_trigg": 39, "nrfx_egu_uninit": 39, "nrfx_egu_init_check": 39, "nrf_egu_typ": [39, 40], "nrf_egu_h": 40, "nrf_egu_inst_get": 40, "nrf_egu_task_trigger0": 40, "nrf_egu_task_trigger1": 40, "nrf_egu_task_trigger2": 40, "nrf_egu_task_trigger3": 40, "nrf_egu_task_trigger4": 40, "nrf_egu_task_trigger5": 40, "nrf_egu_task_trigger6": 40, "nrf_egu_task_trigger7": 40, "nrf_egu_task_trigger8": 40, "nrf_egu_task_trigger9": 40, "nrf_egu_task_trigger10": 40, "nrf_egu_task_trigger11": 40, "nrf_egu_task_trigger12": 40, "nrf_egu_task_trigger13": 40, "nrf_egu_task_trigger14": 40, "nrf_egu_task_trigger15": 40, "nrf_egu_event_triggered0": 40, "nrf_egu_event_triggered1": 40, "nrf_egu_event_triggered2": 40, "nrf_egu_event_triggered3": 40, "nrf_egu_event_triggered4": 40, "nrf_egu_event_triggered5": 40, "nrf_egu_event_triggered6": 40, "nrf_egu_event_triggered7": 40, "nrf_egu_event_triggered8": 40, "nrf_egu_event_triggered9": 40, "nrf_egu_event_triggered10": 40, "nrf_egu_event_triggered11": 40, "nrf_egu_event_triggered12": 40, "nrf_egu_event_triggered13": 40, "nrf_egu_event_triggered14": 40, "nrf_egu_event_triggered15": 40, "nrf_egu_int_mask_t": 40, "nrf_egu_int_triggered0": 40, "events_trigg": 40, "nrf_egu_int_triggered1": 40, "nrf_egu_int_triggered2": 40, "nrf_egu_int_triggered3": 40, "nrf_egu_int_triggered4": 40, "nrf_egu_int_triggered5": 40, "nrf_egu_int_triggered6": 40, "nrf_egu_int_triggered7": 40, "nrf_egu_int_triggered8": 40, "nrf_egu_int_triggered9": 40, "nrf_egu_int_triggered10": 40, "nrf_egu_int_triggered11": 40, "nrf_egu_int_triggered12": 40, "nrf_egu_int_triggered13": 40, "nrf_egu_int_triggered14": 40, "nrf_egu_int_triggered15": 40, "nrf_egu_int_al": 40, "nrf_egu_channel_count": 40, "nrf_egu_task_trigg": 40, "egu_task": 40, "nrf_egu_task_address_get": 40, "nrf_egu_trigger_task_get": 40, "nrf_egu_event_check": 40, "egu_ev": 40, "nrf_egu_event_clear": 40, "nrf_egu_event_address_get": 40, "nrf_egu_triggered_event_get": 40, "nrf_egu_int_en": 40, "nrf_egu_int_enable_check": 40, "nrf_egu_int_dis": 40, "nrf_egu_channel_int_get": 40, "nrf_egu_subscribe_set": 40, "nrf_egu_subscribe_clear": 40, "nrf_egu_publish_set": 40, "nrf_egu_publish_clear": 40, "nrf_egu": 41, "nrf_exmif_h": 42, "nrf_exmif_max_memory_device_s": 42, "nrf_exmif_max_number_of_devic": 42, "nrf_exmif_task_t": 42, "nrf_exmif_task_start": 42, "nrf_exmif_task_stop": 42, "nrf_exmif_task_trigg": 42, "nrf_exmif_typ": 42, "nrf_exmif_task_address_get": 42, "nrf_exmif_reset_set": 42, "nrf_exmif_locked_access_set": 42, "serial": [42, 119, 120, 145, 148, 149, 150, 152, 168, 196, 197, 199], "nrf_exmif_device_config": 42, "device_idx": 42, "nrf_exmif_config_t": 42, "p_devic": 42, "nrf_exmif_device_en": 42, "nrf_exmif_device_dis": 42, "nrf_exmif": [42, 43], "offset": [42, 59, 81, 119, 120, 122, 141, 142, 195, 234], "subtract": [42, 240], "incom": [42, 93, 119, 188, 196, 197], "produc": 42, "axi": [42, 77, 81, 87, 88], "nrf_ficr_hal": 44, "factori": 44, "nrf_ficr_has_code_page_s": 44, "codepages": 44, "nrf_ficr_has_info_code_page_s": 44, "nrf_ficr_has_code_s": 44, "codes": 44, "nrf_ficr_has_info_code_s": 44, "nrf_ficr_has_device_id": 44, "deviceid": 44, "n": [44, 56, 67, 100, 112, 120, 122, 148, 149, 150, 155, 186, 196, 197], "nrf_ficr_has_info_device_id": 44, "nrf_ficr_has_nfc_taghead": 44, "tagheadern": 44, "nrf_ficr_has_nfc_tagheader_arrai": 44, "taghead": 44, "layout": [44, 93], "nrf_ficr_codepagesize_get": 44, "nrf_ficr_typ": 44, "nrf_ficr_codesize_get": 44, "render": 44, "nrf_ficr_deviceid_get": 44, "reg_id": 44, "uniqu": 44, "nrf_ficr_nfc_tagheader_get": 44, "tagheader_id": 44, "nrf_fpu_hal": 45, "float": 45, "nrf_fpu_event_t": 45, "nrf_fpu_event_invalidoper": 45, "fpuioc": 45, "except": [45, 93, 133, 160, 196, 197, 206, 241], "nrf_fpu_event_dividebyzero": 45, "fpudzc": 45, "nrf_fpu_event_overflow": 45, "fpuofc": 45, "overflow": [45, 56, 57, 59, 69, 99, 109, 116, 137, 138, 153, 159, 185, 186], "nrf_fpu_event_underflow": 45, "fpuufc": 45, "underflow": [45, 59], "nrf_fpu_event_inexact": 45, "fpuixc": 45, "inexact": 45, "nrf_fpu_event_denormalinput": 45, "fpuidc": 45, "denorm": 45, "nrf_fpu_int_mask_t": 45, "nrf_fpu_int_invalidoper": 45, "invalidoper": 45, "nrf_fpu_int_dividebyzero": 45, "dividebyzero": 45, "nrf_fpu_int_overflow": 45, "nrf_fpu_int_underflow": 45, "nrf_fpu_int_inexact": 45, "nrf_fpu_int_denormalinput": 45, "denormalinput": 45, "nrf_fpu_event_clear": 45, "nrf_fpu_typ": 45, "nrf_fpu_event_check": 45, "nrf_fpu_int_en": 45, "nrf_fpu_int_dis": 45, "nrf_fpu_int_enable_check": 45, "nrf_fpu": 46, "nrf_glitchdet_h": 47, "glitch": [47, 162], "detector": [47, 162], "nrf_glitchdet_mode_t": 47, "nrf_glitchdet_mode_high_pass": 47, "filter": [47, 115, 116, 117, 149, 153, 182], "nrf_glitchdet_mode_cap_div": 47, "cap": [47, 98], "nrf_glitchdet_enable_check": 47, "nrf_glitchdet_typ": 47, "nrf_glitchdet_enable_set": 47, "nrf_glitchdet_mode_get": 47, "nrf_glitchdet_mode_set": 47, "nrf_gpio_hal": 48, "nrf_gpio_latch_pres": 48, "nrf_gpio_has_sel": 48, "subsystem": [48, 92, 246], "nrf_gpio_has_multiperiph_sel": 48, "nrf_gpio_has_clockpin": 48, "nrf_gpio_has_port_imped": 48, "imped": 48, "nrf_gpio_has_retent": 48, "nrf_gpio_has_detect_mod": 48, "nrf_gpio_pin_map": 48, "understand": 48, "nrf_gpio": [48, 50], "nrf_gpio_port_impedance_all_mask": 48, "nrf_gpio_pin_dir_t": [48, 49], "nrf_gpio_pin_dir_input": 48, "nrf_gpio_pin_dir_output": 48, "nrf_gpio_pin_input_t": [48, 49, 51], "nrf_gpio_pin_input_connect": 48, "nrf_gpio_pin_input_disconnect": 48, "disconnect": [48, 49, 100, 101, 142, 189, 192, 193, 196, 197, 241], "nrf_gpio_pin_pull_t": [48, 49, 51, 145, 148, 152, 185], "nrf_gpio_pin_nopul": 48, "resistor": [48, 49, 141, 142], "nrf_gpio_pin_pulldown": 48, "nrf_gpio_pin_pullup": 48, "nrf_gpio_pin_drive_t": [48, 49, 51, 152], "nrf_gpio_pin_s0s1": 48, "nrf_gpio_pin_h0s1": 48, "nrf_gpio_pin_s0h1": 48, "nrf_gpio_pin_h0h1": 48, "nrf_gpio_pin_d0s1": 48, "nrf_gpio_pin_d0h1": 48, "nrf_gpio_pin_s0d1": 48, "nrf_gpio_pin_h0d1": 48, "nrf_gpio_pin_e0s1": 48, "extra": [48, 234], "nrf_gpio_pin_s0e1": 48, "nrf_gpio_pin_e0e1": 48, "nrf_gpio_pin_e0h1": 48, "nrf_gpio_pin_h0e1": 48, "nrf_gpio_pin_d0e1": 48, "nrf_gpio_pin_e0d1": 48, "nrf_gpio_pin_sense_t": [48, 49], "sens": [48, 49, 51, 92, 93, 128], "nrf_gpio_pin_nosens": 48, "nrf_gpio_pin_sense_low": 48, "nrf_gpio_pin_sense_high": 48, "nrf_gpio_pin_sel_app": 48, "nrf_gpio_pin_sel_network": 48, "nrf_gpio_pin_sel_peripher": [48, 119, 148], "nrf_gpio_pin_sel_tnd": 48, "trace": [48, 157, 164, 165, 166, 237], "nrf_gpio_pin_sel_gpio": 48, "nrf_gpio_pin_sel_vpr": 48, "nrf_gpio_pin_sel_grtc": 48, "nrf_gpio_port_impedance_mask_t": 48, "nrf_gpio_port_impedance_50_mask": 48, "ohm": 48, "nrf_gpio_port_impedance_100_mask": 48, "100": [48, 157, 170, 178, 179, 181, 182], "nrf_gpio_port_impedance_200_mask": 48, "200": [48, 116], "nrf_gpio_port_impedance_400_mask": 48, "400": [48, 179, 182], "nrf_gpio_port_impedance_800_mask": 48, "800": 48, "nrf_gpio_port_impedance_1600_mask": 48, "1600": 48, "nrf_gpio_retain_mask_t": 48, "nrf_gpio_retain_application_mask": 48, "nrf_gpio_retain_network_mask": 48, "nrf_gpio_retain_pin0_mask": 48, "nrf_gpio_retain_pin1_mask": 48, "nrf_gpio_retain_pin2_mask": 48, "nrf_gpio_retain_pin3_mask": 48, "nrf_gpio_retain_pin4_mask": 48, "nrf_gpio_retain_pin5_mask": 48, "nrf_gpio_retain_pin6_mask": 48, "nrf_gpio_retain_pin7_mask": 48, "nrf_gpio_retain_pin8_mask": 48, "nrf_gpio_retain_pin9_mask": 48, "nrf_gpio_retain_pin10_mask": 48, "nrf_gpio_retain_pin11_mask": 48, "nrf_gpio_retain_pin12_mask": 48, "nrf_gpio_retain_pin13_mask": 48, "nrf_gpio_retain_pin14_mask": 48, "nrf_gpio_retain_pin15_mask": 48, "nrf_gpio_retain_pin16_mask": 48, "nrf_gpio_retain_pin17_mask": 48, "nrf_gpio_retain_pin18_mask": 48, "nrf_gpio_retain_pin19_mask": 48, "nrf_gpio_retain_pin20_mask": 48, "nrf_gpio_retain_pin21_mask": 48, "nrf_gpio_retain_pin22_mask": 48, "nrf_gpio_retain_pin23_mask": 48, "nrf_gpio_retain_pin24_mask": 48, "nrf_gpio_retain_pin25_mask": 48, "nrf_gpio_retain_pin26_mask": 48, "nrf_gpio_retain_pin27_mask": 48, "nrf_gpio_retain_pin28_mask": 48, "nrf_gpio_retain_pin29_mask": 48, "nrf_gpio_retain_pin30_mask": 48, "nrf_gpio_retain_pin31_mask": 48, "nrf_gpio_range_cfg_output": [48, 49], "pin_range_start": [48, 49], "pin_range_end": [48, 49], "gate": [48, 49, 157], "gpio_pin_cnf_drive_s0s1": [48, 49], "nrf_gpio_cfg_output": [48, 49], "capabl": [48, 49, 155], "inclus": [48, 49, 234], "nrf_gpio_range_cfg_input": [48, 49], "pull_config": [48, 49], "hide": [48, 49], "inner": [48, 49], "nrf_gpio_cfg_input": [48, 49], "readabl": [48, 49], "pin_numb": [48, 49, 195], "dir": [48, 49, 168, 195], "aspect": [48, 49], "pin_cnf": [48, 49], "p_dir": [48, 49], "p_input": [48, 49, 143], "p_pull": [48, 49], "p_drive": [48, 49], "p_sens": [48, 49], "remain": [48, 49, 56, 57, 60, 77, 85, 133, 134, 149], "unchang": [48, 49, 85, 93], "nrf_gpio_cfg_default": [48, 49], "nrf_gpio_cfg_watch": [48, 49], "watcher": [48, 49], "nrf_gpio_input_disconnect": [48, 49], "nrf_gpio_cfg_sense_input": [48, 49], "sense_config": [48, 49], "nrf_gpio_cfg_sense_set": [48, 49], "nrf_gpio_pin_dir_set": [48, 49], "nrf_gpio_pin_set": [48, 49], "nrf_gpio_pin_clear": [48, 49], "nrf_gpio_pin_toggl": [48, 49], "toggl": [48, 49, 51, 52, 53, 196, 197, 208], "nrf_gpio_pin_writ": [48, 49], "written": [48, 49, 51, 95, 100, 112, 122, 133, 135, 142, 143, 209, 234], "nrf_gpio_pin_read": [48, 49], "nrf_gpio_pin_out_read": [48, 49], "nrf_gpio_pin_sense_get": [48, 49], "nrf_gpio_pin_dir_get": [48, 49], "nrf_gpio_pin_input_get": [48, 49], "nrf_gpio_pin_pull_get": [48, 49], "nrf_gpio_port_dir_output_set": [48, 49], "nrf_gpio_typ": [48, 49], "out_mask": [48, 49], "nrf_gpio_port_dir_input_set": [48, 49], "in_mask": [48, 49], "nrf_gpio_port_dir_writ": [48, 49], "dir_mask": [48, 49], "nrf_gpio_port_dir_read": [48, 49], "nrf_gpio_port_in_read": [48, 49], "nrf_gpio_port_out_read": [48, 49], "nrf_gpio_port_out_writ": [48, 49], "nrf_gpio_port_out_set": [48, 49], "set_mask": [48, 49], "logic": [48, 49, 122, 155, 162, 185, 196, 210, 211, 232], "nrf_gpio_port_out_clear": [48, 49], "clr_mask": [48, 49], "nrf_gpio_ports_read": [48, 49], "start_port": [48, 49], "p_mask": [48, 49, 137, 233, 239], "consecut": [48, 49, 60, 95, 133, 135, 234], "nrf_gpio_port_impedance_set": 48, "certain": [48, 95, 111, 119, 137, 220, 246], "parallel": 48, "nrf_gpio_port_impedance_get": 48, "gete": [48, 126], "nrf_gpio_port_retain_set": 48, "nrf_gpio_port_retain_get": 48, "nrf_gpio_port_detect_latch_set": 48, "behaviour": [48, 95, 215, 216, 217], "ldetect": 48, "directli": [48, 66, 111, 185, 234, 241], "nrf_gpio_port_detect_latch_check": 48, "nrf_gpio_latches_read": 48, "nrf_gpio_latches_read_and_clear": 48, "nrf_gpio_pin_latch_get": 48, "nrf_gpio_pin_latch_clear": 48, "nrf_gpio_pin_clock_set": 48, "nrf_gpio_pin_clock_check": 48, "nrf_gpio_pin_present_check": [48, 49], "nrf_gpio_pin_port_number_extract": [48, 49], "p_pin": [48, 49, 61, 62, 101, 117, 120, 150, 168, 183, 193], "extract": [48, 49, 197, 220], "rel": [48, 49, 55, 122, 137, 159, 233], "absolut": [48, 49, 51, 55, 137, 157, 195, 234], "inout": [48, 49, 92, 186, 196, 233, 239, 240], "nrf_gpio_pin_port_decod": 48, "nrfy_gpio": 49, "nrfy_gpio_range_cfg_output": 49, "nrfy_gpio_range_cfg_input": 49, "nrfy_gpio_cfg": 49, "nrfy_gpio_reconfigur": 49, "nrfy_gpio_cfg_output": 49, "nrfy_gpio_cfg_input": 49, "nrfy_gpio_cfg_default": 49, "nrfy_gpio_cfg_watch": 49, "nrfy_gpio_input_disconnect": 49, "nrfy_gpio_cfg_sense_input": 49, "nrfy_gpio_cfg_sense_set": 49, "nrfy_gpio_pin_dir_set": 49, "nrfy_gpio_pin_set": 49, "nrfy_gpio_pin_clear": 49, "nrfy_gpio_pin_toggl": 49, "nrfy_gpio_pin_writ": 49, "nrfy_gpio_pin_read": 49, "nrfy_gpio_pin_out_read": 49, "nrfy_gpio_pin_sense_get": 49, "nrfy_gpio_pin_dir_get": 49, "nrfy_gpio_pin_input_get": 49, "nrfy_gpio_pin_pull_get": 49, "nrfy_gpio_port_dir_output_set": 49, "nrfy_gpio_port_dir_input_set": 49, "nrfy_gpio_port_dir_writ": 49, "nrfy_gpio_port_dir_read": 49, "nrfy_gpio_port_in_read": 49, "nrfy_gpio_port_out_read": 49, "nrfy_gpio_port_out_writ": 49, "nrfy_gpio_port_out_set": 49, "nrfy_gpio_port_out_clear": 49, "nrfy_gpio_ports_read": 49, "nrfy_gpio_pin_present_check": 49, "nrfy_gpio_pin_port_number_extract": 49, "nrfx_gpiot": 51, "nrfx_gpiote_inst": 51, "nrfx_gpiote_default_output_config": 51, "nrfx_gpiote_app_channels_mask": 51, "bitfield": [51, 106, 220], "nrfx_gpiote_inst_handler_get": 51, "nrfx_gpiote_default_pull_config": 51, "nrfx_gpiote_pin_t": 51, "nrfx_gpiote_interrupt_handler_t": 51, "nrfx_gpiote_trigger_t": 51, "nrfx_gpiote_trigger_non": 51, "nrfx_gpiote_trigger_lotohi": 51, "edg": [51, 52, 53, 56, 57, 61, 99, 100, 101, 112, 119, 120, 145, 146, 148, 149, 150, 152, 153, 168, 205], "nrfx_gpiote_trigger_hitolo": 51, "nrfx_gpiote_trigger_toggl": 51, "nrfx_gpiote_trigger_low": 51, "nrfx_gpiote_trigger_high": 51, "nrfx_gpiote_trigger_max": 51, "nrfx_gpiote_in_is_set": 51, "nrfx_gpiote_init_check": 51, "nrfx_gpiote_uninit": 51, "nrfx_gpiote_channel_alloc": 51, "pool": [51, 159, 239], "routin": [51, 55, 119, 145, 148, 220, 246], "independ": [51, 55], "rest": [51, 55], "nrfx_gpiote_channel_fre": 51, "nrfx_gpiote_input_configur": 51, "nrfx_gpiote_input_pin_config_t": 51, "prior": [51, 191], "howev": [51, 56, 57, 137, 234], "transit": [51, 52, 53, 92, 95, 115, 117, 133, 135, 178, 181], "e": [51, 92, 234, 239], "g": [51, 234, 239], "same": [51, 92, 93, 103, 104, 111, 141, 145, 148, 152, 155, 178, 181, 185, 188, 191, 196, 220, 246], "p_pull_config": 51, "nrf_gpiote_polarity_non": [51, 52], "avoid": [51, 191, 215], "nrfx_gpiote_output_configur": 51, "nrfx_gpiote_output_config_t": 51, "nrfx_gpiote_task_config_t": 51, "p_task_config": 51, "nrfx_gpiote_pin_uninit": 51, "nrfx_gpiote_trigger_en": 51, "int_en": 51, "nrfx_gpiote_trigger_dis": 51, "nrfx_gpiote_global_callback_set": 51, "nrfx_gpiote_channel_get": 51, "nrfx_gpiote_channels_number_get": 51, "nrfx_gpiote_out_set": 51, "nrfx_gpiote_out_clear": 51, "nrfx_gpiote_out_toggl": 51, "nrfx_gpiote_out_task_en": 51, "nrfx_gpiote_out_task_dis": 51, "nrf_gpiote_task_t": [51, 52, 53], "nrfx_gpiote_out_task_get": 51, "nrfx_gpiote_out_task_address_get": 51, "nrfx_gpiote_set_task_get": 51, "nrfx_gpiote_set_task_address_get": 51, "nrfx_gpiote_clr_task_get": 51, "clr": [51, 52, 53], "nrfx_gpiote_clr_task_address_get": 51, "nrf_gpiote_event_t": [51, 52, 53], "nrfx_gpiote_in_event_get": 51, "nrfx_gpiote_in_event_address_get": 51, "nrfx_gpiote_out_task_forc": 51, "forc": [51, 52, 53, 77, 93, 104, 127, 196, 197, 206, 248], "nrfx_gpiote_out_task_trigg": 51, "nrfx_gpiote_set_task_trigg": 51, "nrfx_gpiote_clr_task_trigg": 51, "nrfx_gpiote_latency_set": 51, "nrf_gpiote_latency_t": [51, 52, 53], "rise": [51, 52, 53, 56, 57, 100, 119, 120, 128, 168, 197, 248], "fall": [51, 52, 53, 99, 100, 119, 152, 168], "nrfx_gpiote_latency_get": 51, "nrf_gpiote_typ": [51, 52, 53], "task_ch": 51, "nrf_gpiote_polarity_t": [51, 52, 53], "nrf_gpiote_outinit_t": [51, 52, 53], "init_v": [51, 52, 53], "input_connect": 51, "togeth": [51, 111, 148, 181, 196, 234], "d0": 51, "d1": 51, "nrfx_gpiote_trigger_config_t": 51, "p_in_channel": 51, "note": [51, 119], "nrfx_gpiote_handler_config_t": 51, "nrfx_gpiote_input_config_t": 51, "untouch": 51, "p_trigger_config": 51, "p_handler_config": 51, "nrf_gpiote_h": 52, "nrf_gpiote_inst_get": 52, "gpiote_config_port_pin_msk": 52, "nrf_gpiote_has_lat": [52, 53], "nrf_gpiote_has_int_group": 52, "nrf_gpiote_irq_group": 52, "empti": [52, 92, 134, 135, 188, 220, 240], "nrf_gpiote_secure_suffix": 52, "trustzon": [52, 155], "suffix": [52, 234], "nrf_gpiote_events_port_reg": 52, "nrf_gpiote_int_port_mask_nam": 52, "nrf_gpiote_int_in_mask": 52, "collect": [52, 79], "nrf_gpiote_polarity_lotohi": 52, "nrf_gpiote_polarity_hitolo": 52, "nrf_gpiote_polarity_toggl": 52, "nrf_gpiote_initial_value_low": 52, "nrf_gpiote_initial_value_high": 52, "nrf_gpiote_latency_lowpow": 52, "nrf_gpiote_latency_lowlat": 52, "nrf_gpiote_task_out_0": 52, "nrf_gpiote_task_out_1": 52, "nrf_gpiote_task_out_2": 52, "nrf_gpiote_task_out_3": 52, "nrf_gpiote_task_out_4": 52, "nrf_gpiote_task_out_5": 52, "nrf_gpiote_task_out_6": 52, "nrf_gpiote_task_out_7": 52, "nrf_gpiote_task_set_0": 52, "nrf_gpiote_task_set_1": 52, "nrf_gpiote_task_set_2": 52, "nrf_gpiote_task_set_3": 52, "nrf_gpiote_task_set_4": 52, "nrf_gpiote_task_set_5": 52, "nrf_gpiote_task_set_6": 52, "nrf_gpiote_task_set_7": 52, "nrf_gpiote_task_clr_0": 52, "nrf_gpiote_task_clr_1": 52, "nrf_gpiote_task_clr_2": 52, "nrf_gpiote_task_clr_3": 52, "nrf_gpiote_task_clr_4": 52, "nrf_gpiote_task_clr_5": 52, "nrf_gpiote_task_clr_6": 52, "nrf_gpiote_task_clr_7": 52, "nrf_gpiote_event_in_0": 52, "nrf_gpiote_event_in_1": 52, "nrf_gpiote_event_in_2": 52, "nrf_gpiote_event_in_3": 52, "nrf_gpiote_event_in_4": 52, "nrf_gpiote_event_in_5": 52, "nrf_gpiote_event_in_6": 52, "nrf_gpiote_event_in_7": 52, "nrf_gpiote_event_port": 52, "nrf_gpiote_int_t": [52, 53], "nrf_gpiote_int_in0_mask": 52, "in0": 52, "nrf_gpiote_int_in1_mask": 52, "in1": 52, "nrf_gpiote_int_in2_mask": 52, "in2": 52, "nrf_gpiote_int_in3_mask": 52, "in3": 52, "nrf_gpiote_int_in4_mask": 52, "in4": 52, "nrf_gpiote_int_in5_mask": 52, "in5": 52, "nrf_gpiote_int_in6_mask": 52, "in6": 52, "nrf_gpiote_int_in7_mask": 52, "in7": 52, "nrf_gpiote_int_port_mask": 52, "nrf_gpiote_task_trigg": [52, 53], "nrf_gpiote_task_address_get": [52, 53], "nrf_gpiote_event_check": [52, 53], "nrf_gpiote_event_clear": [52, 53], "nrf_gpiote_event_address_get": [52, 53], "nrf_gpiote_int_en": [52, 53], "nrf_gpiote_int_dis": [52, 53], "nrf_gpiote_int_enable_check": [52, 53], "nrf_gpiote_int_group_en": 52, "nrf_gpiote_int_group_dis": 52, "nrf_gpiote_int_group_enable_check": 52, "nrf_gpiote_subscribe_set": [52, 53], "nrf_gpiote_subscribe_clear": [52, 53], "nrf_gpiote_publish_set": [52, 53], "nrf_gpiote_publish_clear": [52, 53], "nrf_gpiote_event_en": [52, 53], "nrf_gpiote_event_dis": [52, 53], "nrf_gpiote_event_configur": [52, 53], "nrf_gpiote_event_pin_get": [52, 53], "nrf_gpiote_event_polarity_get": [52, 53], "nrf_gpiote_task_en": [52, 53], "nrf_gpiote_task_dis": [52, 53], "nrf_gpiote_task_configur": [52, 53], "nrf_gpiote_task_forc": [52, 53], "nrf_gpiote_te_default": [52, 53], "nrf_gpiote_te_is_en": [52, 53], "nrf_gpiote_out_task_get": [52, 53], "nrf_gpiote_set_task_get": [52, 53], "nrf_gpiote_clr_task_get": [52, 53], "nrf_gpiote_in_event_get": [52, 53], "nrf_gpiote_latency_set": [52, 53], "nrf_gpiote_latency_get": [52, 53], "nrfy_gpiot": 53, "nrfy_gpiote_has_lat": 53, "nrfy_gpiote_int_init": 53, "channels_numb": 53, "nrfy_gpiote_events_process": 53, "nrfy_gpiote_task_trigg": 53, "nrfy_gpiote_task_address_get": 53, "nrfy_gpiote_event_check": 53, "nrfy_gpiote_event_clear": 53, "nrfy_gpiote_event_address_get": 53, "nrfy_gpiote_int_en": 53, "nrfy_gpiote_int_dis": 53, "nrfy_gpiote_int_enable_check": 53, "nrfy_gpiote_subscribe_set": 53, "nrfy_gpiote_subscribe_clear": 53, "nrfy_gpiote_publish_set": 53, "nrfy_gpiote_publish_clear": 53, "nrfy_gpiote_event_en": 53, "nrfy_gpiote_event_dis": 53, "nrfy_gpiote_event_configur": 53, "nrfy_gpiote_event_pin_get": 53, "nrfy_gpiote_event_polarity_get": 53, "nrfy_gpiote_task_en": 53, "nrfy_gpiote_task_dis": 53, "nrfy_gpiote_task_configur": 53, "nrfy_gpiote_task_forc": 53, "nrfy_gpiote_te_default": 53, "nrfy_gpiote_te_is_en": 53, "nrfy_gpiote_out_task_get": 53, "nrfy_gpiote_set_task_get": 53, "nrfy_gpiote_clr_task_get": 53, "nrfy_gpiote_in_event_get": 53, "nrfy_gpiote_latency_set": 53, "nrfy_gpiote_latency_get": 53, "nrf_gpiot": 54, "nrfx_grtc": 55, "real": [55, 56, 81, 137, 138, 196, 206], "nrfx_grtc_sleep_default_config": 55, "wake": [55, 56, 57, 128, 133, 134, 196, 206], "nrfx_grtc_cc_handler_t": 55, "int32_t": [55, 115, 116, 117, 170, 171, 172], "uint64_t": [55, 56, 57, 206], "cc_valu": [55, 56, 57, 174, 175, 176], "nrfx_grtc_syscountervalid_handler_t": 55, "syscount": [55, 56, 57, 155], "nrfx_grtc_rtcomparesync_handler_t": 55, "rtcomparesync": 55, "nrfx_grtc_action_t": 55, "action": [55, 119, 134, 195], "nrfx_grtc_action_start": 55, "nrfx_grtc_action_stop": 55, "nrfx_grtc_action_clear": 55, "nrfx_grtc_cc_relative_reference_t": 55, "nrfx_grtc_cc_relative_syscount": 55, "nrfx_grtc_cc_relative_compar": 55, "nrfx_grtc_sleep_configur": 55, "nrfx_grtc_sleep_config_t": 55, "p_sleep_cfg": 55, "nrfx_grtc_sleep_configuration_get": 55, "nrfx_grtc_channel_alloc": 55, "nrfx_grtc_channel_fre": 55, "nrfx_grtc_is_channel_us": 55, "nrfx_grtc_init": 55, "nrfx_error_intern": [55, 152, 170, 178, 181, 188, 191, 238], "nrfx_grtc_rtcounter_cc_dis": 55, "rtcounter": [55, 56, 57], "nrfx_error_timeout": [55, 119, 137, 191, 238], "nrfx_grtc_rtcomparesync_int_en": 55, "mai": [55, 81, 87, 95, 119, 133, 135, 141, 157, 185, 191, 196, 219, 239], "nrfx_grtc_rtcomparesync_int_dis": 55, "nrfx_grtc_rtcounter_cc_absolute_set": 55, "nrfx_grtc_rtcounter_handler_data_t": 55, "handler_data": 55, "val": [55, 104, 137, 138, 139, 160, 197, 234], "enable_irq": [55, 137], "sync": [55, 56, 57, 122, 191], "nrfx_grtc_rtcounter_cc_int_en": 55, "nrfx_grtc_rtcounter_cc_int_dis": 55, "nrfx_grtc_syscountervalid_int_en": 55, "syscountervalid": 55, "nrfx_grtc_syscountervalid_int_dis": 55, "nrfx_grtc_syscounter_start": 55, "busy_wait": [55, 57], "p_main_cc_channel": 55, "nrfx_grtc_channel_t": 55, "nrfx_grtc_action_perform": 55, "nrfx_grtc_uninit": 55, "nrfx_grtc_init_check": 55, "nrfx_grtc_syscounter_cc_dis": 55, "nrfx_grtc_syscounter_cc_absolute_set": 55, "p_chan_data": 55, "nrfx_grtc_syscounter_cc_relative_set": 55, "nrfx_grtc_syscounter_cc_int_dis": 55, "nrfx_grtc_syscounter_cc_int_en": 55, "nrfx_grtc_syscounter_cc_int_enable_check": 55, "nrfx_grtc_syscounter_captur": 55, "nrfx_grtc_syscounter_cc_value_read": 55, "p_val": 55, "nrfx_grtc_active_request_set": 55, "nrfx_grtc_syscounter_get": 55, "p_counter": 55, "nrfx_grtc_task_address_get": 55, "nrf_grtc_task_t": [55, 56, 57], "nrfx_grtc_event_address_get": 55, "nrf_grtc_event_t": [55, 56, 57], "nrfx_grtc_capture_task_address_get": 55, "nrfx_grtc_event_compare_address_get": 55, "nrfx_grtc_sys_counter_cc_enable_check": 55, "nrfx_grtc_syscounter_compare_event_check": 55, "nrfx_grtc_rtcounter_get": 55, "nrfx_grtc_clock_source_set": 55, "nrf_grtc_clksel_t": [55, 56, 57], "met": [55, 60, 148, 152, 181, 185, 191, 234], "waketim": [55, 56], "wakeup": [55, 128, 134, 135, 196, 248], "auto_mod": 55, "nrf_grtc_hal": 56, "nrf_grtc_has_pwm": 56, "nrf_grtc_has_clkout": [56, 57], "nrf_grtc_has_clksel": [56, 57], "nrf_grtc_has_syscounter_arrai": [56, 57], "nrf_grtc_has_rtcount": [56, 57], "nrf_grtc_has_extend": [56, 57], "nrf_grtc_domain_index": 56, "grtc_syscount": 56, "grtc_inten": 56, "inten": [56, 71, 234], "grtc_intenset": 56, "intenset": 56, "grtc_intenclr": 56, "intenclr": 56, "grtc_intpend": 56, "intpend": 56, "nrf_grtc_syscounter_main_frequency_hz": 56, "nrf_grtc_syscounter_cc_count": 56, "nrf_grtc_syscounter_cch_mask": 56, "nrf_grtc_syscounter_ccadd_mask": 56, "ccadd": 56, "nrf_grtc_syscounterl_value_mask": 56, "nrf_grtc_syscounterh_value_mask": 56, "nrf_grtc_rtcounter_cch_mask": 56, "nrf_grtc_syscounterh_overflow_mask": 56, "nrf_grtc_syscounterh_busy_mask": 56, "nrf_grtc_timeout_max_valu": 56, "nrf_grtc_waketime_max_valu": 56, "nrf_grtc_clkcfg_clkfastdiv_max_valu": 56, "clkfastdiv": 56, "nrf_grtc_channel_int_mask": 56, "ch": [56, 138, 139, 142], "nrf_grtc_main_cc_channel": 56, "owner": [56, 81, 155, 195], "nrf_grtc_inten_mask": 56, "nrf_grtc_syscounter_all_channels_int_mask": 56, "nrf_grtc_task_start": 56, "nrf_grtc_task_stop": 56, "nrf_grtc_task_clear": 56, "nrf_grtc_task_pwm_start": 56, "nrf_grtc_task_pwm_stop": 56, "nrf_grtc_task_capture_0": 56, "nrf_grtc_task_capture_1": 56, "nrf_grtc_task_capture_2": 56, "nrf_grtc_task_capture_3": 56, "nrf_grtc_task_capture_4": 56, "nrf_grtc_task_capture_5": 56, "nrf_grtc_task_capture_6": 56, "nrf_grtc_task_capture_7": 56, "nrf_grtc_task_capture_8": 56, "nrf_grtc_task_capture_9": 56, "nrf_grtc_task_capture_10": 56, "nrf_grtc_task_capture_11": 56, "nrf_grtc_event_compare_0": 56, "nrf_grtc_event_compare_1": 56, "nrf_grtc_event_compare_2": 56, "nrf_grtc_event_compare_3": 56, "nrf_grtc_event_compare_4": 56, "nrf_grtc_event_compare_5": 56, "nrf_grtc_event_compare_6": 56, "nrf_grtc_event_compare_7": 56, "nrf_grtc_event_compare_8": 56, "nrf_grtc_event_compare_9": 56, "nrf_grtc_event_compare_10": 56, "nrf_grtc_event_compare_11": 56, "nrf_grtc_event_compare_12": 56, "nrf_grtc_event_rtcompar": 56, "nrf_grtc_event_rtcomparesync": 56, "nrf_grtc_event_syscountervalid": 56, "nrf_grtc_event_pwm_period_end": 56, "nrf_grtc_short_mask_t": 56, "nrf_grtc_short_rtcompare_clear_mask": 56, "rtcompar": 56, "nrf_grtc_cc_add_reference_t": [56, 57], "nrf_grtc_cc_add_reference_syscount": [56, 57], "nrf_grtc_cc_add_reference_cc": [56, 57], "nrf_grtc_int_mask_t": [56, 57], "nrf_grtc_int_compare0_mask": 56, "nrf_grtc_int_compare1_mask": 56, "nrf_grtc_int_compare2_mask": 56, "nrf_grtc_int_compare3_mask": 56, "nrf_grtc_int_compare4_mask": 56, "nrf_grtc_int_compare5_mask": 56, "nrf_grtc_int_compare6_mask": 56, "nrf_grtc_int_compare7_mask": 56, "nrf_grtc_int_compare8_mask": 56, "nrf_grtc_int_compare9_mask": 56, "nrf_grtc_int_compare10_mask": 56, "nrf_grtc_int_compare11_mask": 56, "nrf_grtc_int_rtcompare_mask": 56, "nrf_grtc_int_rtcomparesync_mask": 56, "nrf_grtc_int_syscountervalid_mask": 56, "nrf_grtc_clkout_t": [56, 57], "nrf_grtc_clkout_32k": 56, "32k": 56, "nrf_grtc_clkout_fast": 56, "nrf_grtc_clksel_lfxo": 56, "nrf_grtc_clksel_lfclk": 56, "nrf_grtc_sys_counter_cc_set": [56, 57], "nrf_grtc_type": [56, 57], "cc_channel": [56, 57, 174, 175, 176], "nrf_grtc_sys_counter_cc_get": [56, 57], "1mhz": [56, 57], "nrf_grtc_sys_counter_cc_add_set": [56, 57], "equal": [56, 57, 61, 122, 124, 137, 142, 168, 191, 195, 232, 234, 240, 243], "sum": [56, 57], "nrf_grtc_rt_counter_cc_set": [56, 57], "nrf_grtc_rt_counter_cc_get": [56, 57], "nrf_grtc_int_en": [56, 57], "nrf_grtc_int_dis": [56, 57], "nrf_grtc_int_enable_check": [56, 57], "nrf_grtc_int_pending_get": [56, 57], "nrf_grtc_event_en": 56, "nrf_grtc_event_dis": 56, "nrf_grtc_shorts_en": [56, 57], "nrf_grtc_shorts_dis": [56, 57], "nrf_grtc_shorts_set": [56, 57], "nrf_grtc_subscribe_set": [56, 57], "Not": [56, 57, 134, 135, 149, 155, 170, 175, 197, 238, 241], "nrf_grtc_subscribe_clear": [56, 57], "nrf_grtc_publish_set": [56, 57], "nrf_grtc_publish_clear": [56, 57], "nrf_grtc_event_check": [56, 57], "nrf_grtc_event_clear": [56, 57], "nrf_grtc_rt_counter_low_get": 56, "thu": [56, 234], "nrf_grtc_rt_counter_high_get": 56, "nrf_grtc_sys_counter_low_get": [56, 57], "nrf_grtc_sys_counter_high_get": 56, "nrf_grtc_sys_counter_overflow_check": [56, 57], "retun": 56, "repeat": [56, 111, 112, 148, 178, 181, 188], "nrf_grtc_sys_counter_get": 56, "nrf_grtc_sys_counter_active_set": [56, 57], "nrf_grtc_sys_counter_active_check": [56, 57], "nrf_grtc_event_address_get": [56, 57], "nrf_grtc_task_address_get": [56, 57], "nrf_grtc_task_trigg": [56, 57], "nrf_grtc_sys_counter_capture_task_get": [56, 57], "nrf_grtc_sys_counter_compare_event_en": [56, 57], "nrf_grtc_sys_counter_compare_event_dis": [56, 57], "nrf_grtc_sys_counter_compare_event_get": [56, 57], "nrf_grtc_sys_counter_cc_enable_check": [56, 57], "nrf_grtc_sys_counter_set": [56, 57], "nrf_grtc_sys_counter_auto_mode_set": [56, 57], "keeprun": [56, 57], "int": [56, 57], "nrf_grtc_sys_counter_auto_mode_check": [56, 57], "nrf_grtc_sys_counter_check": [56, 57], "nrf_grtc_sys_counter_active_state_request_set": [56, 57], "possess": [56, 57], "nrf_grtc_sys_counter_active_state_request_check": [56, 57], "nrf_grtc_sys_counter_active_state_request_get": [56, 57], "nrf_grtc_sys_counter_interval_set": [56, 57], "nrf_grtc_sys_counter_interval_get": [56, 57], "nrf_grtc_timeout_set": [56, 57], "nrf_grtc_timeout_get": [56, 57], "nrf_grtc_waketime_set": [56, 57], "nrf_grtc_waketime_get": [56, 57], "nrf_grtc_pwm_compare_set": [56, 57], "nrf_grtc_pwm_compare_get": [56, 57], "nrf_grtc_clkout_set": [56, 57], "clkout": [56, 57], "nrf_grtc_clkout_enable_check": [56, 57], "nrf_grtc_clkout_divider_set": [56, 57], "divisor": [56, 57], "nrf_grtc_clkout_divider_get": [56, 57], "nrf_grtc_clksel_set": [56, 57], "clksel": [56, 57], "nrf_grtc_clksel_get": [56, 57], "nrfy_grtc": 57, "nrfy_grtc_has_extend": 57, "nrfy_grtc_has_rtcount": 57, "nrfy_grtc_has_syscounter_arrai": 57, "nrfy_grtc_has_pwm": 57, "nrfy_grtc_has_clkout": 57, "nrfy_grtc_has_clksel": 57, "nrfy_grtc_syscounter_retry_mask": 57, "reliabl": [57, 137], "nrfy_grtc_int_init": 57, "nrfy_grtc_int_uninit": 57, "nrfy_grtc_events_process": 57, "nrfy_grtc_prepar": 57, "nrfy_grtc_sys_counter_start": 57, "nrfy_grtc_sys_counter_get": 57, "nrfy_grtc_sys_conter_ready_check": 57, "nrfy_grtc_rt_counter_get": 57, "nrfy_grtc_sys_counter_compare_event_int_clear_en": 57, "implicitli": [57, 139], "nrfy_grtc_sys_counter_compare_event_check": 57, "nrfy_grtc_sys_counter_compare_event_clear": 57, "nrfy_grtc_sys_counter_capture_subscribe_set": 57, "nrfy_grtc_sys_counter_capture_subscribe_clear": 57, "nrfy_grtc_sys_counter_compare_publish_set": 57, "nrfy_grtc_sys_counter_compare_publish_clear": 57, "nrfy_grtc_sys_counter_cc_set": 57, "nrfy_grtc_sys_counter_cc_get": 57, "nrfy_grtc_sys_counter_cc_add_set": 57, "nrfy_grtc_rt_counter_cc_set": 57, "nrfy_grtc_rt_counter_cc_get": 57, "nrfy_grtc_int_en": 57, "nrfy_grtc_int_dis": 57, "nrfy_grtc_int_enable_check": 57, "nrfy_grtc_int_pending_get": 57, "nrfy_grtc_shorts_en": 57, "nrfy_grtc_shorts_dis": 57, "nrfy_grtc_shorts_set": 57, "nrfy_grtc_subscribe_set": 57, "nrfy_grtc_subscribe_clear": 57, "nrfy_grtc_publish_set": 57, "nrfy_grtc_publish_clear": 57, "nrfy_grtc_event_check": 57, "nrfy_grtc_event_clear": 57, "nrfy_grtc_sys_counter_overflow_check": 57, "nrfy_grtc_event_address_get": 57, "nrfy_grtc_task_address_get": 57, "nrfy_grtc_task_trigg": 57, "nrfy_grtc_sys_counter_capture_task_get": 57, "nrfy_grtc_sys_counter_compare_event_en": 57, "nrfy_grtc_sys_counter_compare_event_dis": 57, "nrfy_grtc_sys_counter_compare_event_get": 57, "nrfy_grtc_sys_counter_cc_enable_check": 57, "nrfy_grtc_sys_counter_set": 57, "nrfy_grtc_sys_counter_auto_mode_set": 57, "nrfy_grtc_sys_counter_auto_mode_check": 57, "nrfy_grtc_sys_counter_active_set": 57, "nrfy_grtc_sys_counter_active_check": 57, "nrfy_grtc_sys_counter_check": 57, "nrfy_grtc_sys_counter_active_state_request_set": 57, "nrfy_grtc_sys_counter_active_state_request_check": 57, "nrfy_grtc_sys_counter_active_state_request_get": 57, "nrfy_grtc_sys_counter_interval_set": 57, "nrfy_grtc_sys_counter_interval_get": 57, "nrfy_grtc_timeout_set": 57, "nrfy_grtc_timeout_get": 57, "nrfy_grtc_waketime_set": 57, "nrfy_grtc_waketime_get": 57, "nrfy_grtc_pwm_compare_set": 57, "nrfy_grtc_pwm_compare_get": 57, "nrfy_grtc_clkout_set": 57, "nrfy_grtc_clkout_enable_check": 57, "nrfy_grtc_clkout_divider_set": 57, "nrfy_grtc_clkout_divider_get": 57, "nrfy_grtc_clksel_set": 57, "nrfy_grtc_clksel_get": 57, "nrf_grtc": 58, "nrf_hsfll_hal": 59, "nrf_hsfll_has_dithering_initvalu": 59, "nrf_hsfll_has_ditherinit": 59, "nrf_hsfll_task_t": 59, "nrf_hsfll_task_start": 59, "nrf_hsfll_task_stop": 59, "nrf_hsfll_task_freq_mea": 59, "measur": [59, 122, 170, 171, 172, 196], "nrf_hsfll_task_freq_chang": 59, "nrf_hsfll_event_t": 59, "nrf_hsfll_event_start": 59, "nrf_hsfll_event_stop": 59, "nrf_hsfll_event_freqm_don": 59, "nrf_hsfll_event_freq_chang": 59, "nrf_hsfll_mode_status_t": 59, "nrf_hsfll_mode_status_open_loop": 59, "open": [59, 77], "nrf_hsfll_mode_status_closed_loop": 59, "close": [59, 77, 188], "nrf_hsfll_mode_status_bypass": 59, "nrf_hsfll_mode_ctrl_t": 59, "nrf_hsfll_mode_ctrl_auto": 59, "pcgc": 59, "nrf_hsfll_mode_ctrl_open_loop": 59, "nrf_hsfll_mode_ctrl_closed_loop": 59, "nrf_hsfll_mode_ctrl_bypass": 59, "nrf_hsfll_task_address_get": 59, "nrf_hsfll_type": 59, "nrf_hsfll_task_trigg": 59, "nrf_hsfll_event_address_get": 59, "nrf_hsfll_event_clear": 59, "nrf_hsfll_event_check": 59, "nrf_hsfll_status_clk_get": 59, "nrf_hsfll_status_clk_t": 59, "p_statu": 59, "nrf_hsfll_freqm_done_check": 59, "nrf_hsfll_freqm_error_get": 59, "nrf_hsfll_freqm_error_t": 59, "p_error": 59, "nrf_hsfll_freqm_meas_get": 59, "nrf_hsfll_clkctrl_mode_set": 59, "nrf_hsfll_clkctrl_t": 59, "p_clkctrl": 59, "nrf_hsfll_clkctrl_mode_get": 59, "nrf_hsfll_clkctrl_dithering_set": 59, "nrf_hsfll_dithering_t": 59, "nrf_hsfll_clkctrl_dithering_get": 59, "nrf_hsfll_clkctrl_mult_set": 59, "multipli": [59, 170, 237], "nrf_hsfll_clkctrl_mult_get": 59, "nrf_hsfll_clkctrl_sleep_set": 59, "nrf_hsfll_sleep_t": 59, "nrf_hsfll_clkctrl_sleep_get": 59, "nrf_hsfll_clkctrl_retainfinetrim_enable_set": 59, "trim": [59, 79, 93, 126, 138], "goe": 59, "nrf_hsfll_clkctrl_overridelocked_enable_set": 59, "nrf_hsfll_clkctrl_dither_init_set": 59, "prb": 59, "nrf_hsfll_mirror_lock_set": 59, "nrf_hsfll_trim_set": 59, "nrf_hsfll_trim_t": 59, "p_trim": 59, "setup": [59, 60, 61, 168, 191, 196, 197], "nrf_hsfll_trim_get": 59, "nrf_hsfll": 59, "accurraci": 59, "trim_underflow": 59, "trim_overflow": 59, "cyclecount": 59, "maxoffset": 59, "initvalu": 59, "coars": [59, 93], "frequanc": 59, "vsup": 59, "nrfx_i2": 60, "ic": [60, 61, 104], "sound": [60, 61], "nrfx_i2s_inst": 60, "nrfx_i2s_default_config": 60, "_pin_sck": [60, 119, 145, 148, 152], "_pin_lrck": 60, "_pin_mck": 60, "_pin_sdout": 60, "_pin_sdin": 60, "master": [60, 61, 81, 100, 119, 145, 146, 148, 149, 150, 157, 168, 178, 179, 181, 182, 183, 185], "left": [60, 61, 81, 99, 100, 101, 168, 191, 196], "width": [60, 61, 111, 112, 138, 142, 168, 174, 175, 176], "mck": [60, 61, 62, 168], "lrck": [60, 61, 62], "sck": [60, 61, 62, 119, 120, 145, 146, 148, 149, 150, 152, 153, 168], "sdout": [60, 61, 62, 168], "sdin": [60, 61, 62, 168], "nrfx_i2s_status_next_buffers_need": 60, "nrfx_i2s_next_buffers_set": 60, "releas": [60, 85, 99, 104, 127, 141, 153, 178, 181, 196, 220, 246], "nrfy_i2s_xfer_desc_t": [60, 62], "nrfx_i2s_buffers_t": 60, "nrfx_i2s_data_handler_t": 60, "p_releas": 60, "henc": [60, 119, 191, 220], "later": [60, 111, 148, 215], "sinc": [60, 93, 95, 133, 135, 142, 143, 160, 191, 234], "asynchron": [60, 191, 196], "nrfx_i2s_stop": 60, "entir": 60, "anoth": [60, 96, 119, 191, 196, 241, 249], "via": [60, 111, 120, 220, 243], "moment": [60, 137], "yet": [60, 96, 98, 119, 191, 192], "what": [60, 122, 186], "just": [60, 103, 196, 197], "nrfx_i2s_start": 60, "nrfx_i2s_init": 60, "nrfx_i2s_t": 60, "nrfx_i2s_config_t": 60, "nrfx_i2s_uninit": 60, "nrfx_i2s_init_check": 60, "p_initial_buff": 60, "three": [60, 234], "proper": [60, 111, 120, 220, 246], "four": 60, "right": [60, 61, 99, 100, 101, 111, 168, 185], "nrfx_error_invalid_addr": [60, 92, 95, 119, 141, 148, 152, 181, 185, 191, 196, 238], "upcom": 60, "sck_pin": [60, 61, 120, 145, 146, 148, 149, 150, 152, 153, 168], "lrck_pin": [60, 61], "mck_pin": [60, 61, 168], "nrf_i2s_pin_not_connect": [60, 61, 62], "sdout_pin": [60, 61, 168], "sdin_pin": [60, 61, 168], "nrf_i2s_mode_t": [60, 61], "nrf_i2s_format_t": [60, 61], "nrf_i2s_align_t": [60, 61], "nrf_i2s_swidth_t": [60, 61], "sample_width": [60, 61, 168], "nrf_i2s_channels_t": [60, 61], "nrf_i2s_mck_t": [60, 61], "mck_setup": [60, 61, 168], "nrf_i2s_ratio_t": [60, 61], "skip_gpio_cfg": [60, 99, 111, 115, 119, 145, 148, 152, 178, 181, 185, 188, 191], "those": [60, 62, 99, 101, 111, 113, 115, 117, 119, 124, 145, 148, 150, 152, 178, 181, 183, 185, 188, 191, 193, 220, 232], "skip_psel_cfg": [60, 62, 99, 101, 111, 113, 115, 117, 119, 145, 148, 150, 152, 178, 181, 183, 185, 188, 191, 193], "omit": [60, 62, 99, 101, 111, 113, 115, 117, 119, 143, 145, 148, 150, 152, 178, 181, 183, 185, 188, 191, 193], "anywai": [60, 62, 99, 101, 111, 113, 115, 117, 119, 145, 148, 150, 152, 178, 181, 183, 185, 188, 191, 193], "nrf_i2s_typ": [60, 61, 62], "nrf_i2s_hal": 61, "nrf_i2s_has_clkconfig": 61, "nrf_i2s_has_framestart": 61, "nrf_i2s_has_gpio_port_select": 61, "nrf_i2s_has_swidth_32bit": 61, "physic": [61, 93, 112, 116, 119, 120, 146, 149, 153, 168], "nrf_i2s_psel_sck_pin_mask": 61, "nrf_i2s_psel_sck_port_mask": 61, "nrf_i2s_task_t": [61, 62], "nrf_i2s_task_start": 61, "nrf_i2s_task_stop": 61, "nrf_i2s_event_t": [61, 62], "nrf_i2s_event_rxptrupd": 61, "rxd": [61, 146, 149, 153, 168, 179, 188, 189, 191, 192, 193], "nrf_i2s_event_txptrupd": 61, "txd": [61, 146, 149, 150, 153, 168, 179, 186, 188, 189, 191, 192, 193], "nrf_i2s_event_stop": 61, "nrf_i2s_event_framestart": 61, "nrf_i2s_int_mask_t": [61, 62], "nrf_i2s_int_rxptrupd_mask": 61, "rxptrupd": [61, 168], "nrf_i2s_int_txptrupd_mask": 61, "txptrupd": [61, 168], "nrf_i2s_int_stopped_mask": 61, "nrf_i2s_int_framestart_mask": 61, "framestart": [61, 122], "nrf_i2s_mode_mast": 61, "nrf_i2s_mode_slav": 61, "nrf_i2s_mck_dis": 61, "nrf_i2s_mck_32mdiv2": 61, "nrf_i2s_mck_32mdiv3": 61, "6666667": 61, "nrf_i2s_mck_32mdiv4": 61, "nrf_i2s_mck_32mdiv5": 61, "nrf_i2s_mck_32mdiv6": 61, "3333333": 61, "nrf_i2s_mck_32mdiv8": 61, "nrf_i2s_mck_32mdiv10": 61, "nrf_i2s_mck_32mdiv11": 61, "9090909": 61, "nrf_i2s_mck_32mdiv15": 61, "1333333": 61, "nrf_i2s_mck_32mdiv16": 61, "nrf_i2s_mck_32mdiv21": 61, "5238095": 61, "nrf_i2s_mck_32mdiv23": 61, "3913043": 61, "nrf_i2s_mck_32mdiv30": 61, "0666667": 61, "nrf_i2s_mck_32mdiv31": 61, "0322581": 61, "nrf_i2s_mck_32mdiv32": 61, "nrf_i2s_mck_32mdiv42": 61, "42": [61, 168], "7619048": 61, "nrf_i2s_mck_32mdiv63": 61, "5079365": 61, "nrf_i2s_mck_32mdiv125": 61, "256": [61, 116, 155], "nrf_i2s_ratio_32x": 61, "nrf_i2s_ratio_48x": 61, "48": 61, "nrf_i2s_ratio_64x": 61, "nrf_i2s_ratio_96x": 61, "96": [61, 120], "nrf_i2s_ratio_128x": 61, "nrf_i2s_ratio_192x": 61, "nrf_i2s_ratio_256x": 61, "nrf_i2s_ratio_384x": 61, "384": 61, "nrf_i2s_ratio_512x": 61, "512": [61, 116, 155], "nrf_i2s_swidth_8bit": 61, "nrf_i2s_swidth_16bit": 61, "nrf_i2s_swidth_24bit": 61, "nrf_i2s_swidth_32bit": 61, "nrf_i2s_swidth_8bit_in16bit": 61, "nrf_i2s_swidth_8bit_in32bit": 61, "nrf_i2s_swidth_16bit_in32bit": 61, "nrf_i2s_swidth_24bit_in32bit": 61, "nrf_i2s_align_left": 61, "nrf_i2s_align_right": 61, "nrf_i2s_format_i2": 61, "origin": [61, 168, 220], "nrf_i2s_format_align": 61, "nrf_i2s_channels_stereo": 61, "stereo": [61, 100, 168], "nrf_i2s_channels_left": 61, "nrf_i2s_channels_right": 61, "nrf_i2s_clksrc_t": 61, "nrf_i2s_clksrc_pclk32m": 61, "32mhz": [61, 100, 168], "nrf_i2s_clksrc_aclk": 61, "nrf_i2s_task_trigg": [61, 62], "nrf_i2s_task_address_get": [61, 62], "nrf_i2s_event_clear": [61, 62], "nrf_i2s_event_check": [61, 62], "nrf_i2s_event_address_get": [61, 62], "nrf_i2s_int_en": [61, 62], "nrf_i2s_int_dis": [61, 62], "nrf_i2s_int_enable_check": [61, 62], "nrf_i2s_en": [61, 62], "nrf_i2s_dis": [61, 62], "nrf_i2s_subscribe_set": [61, 62], "nrf_i2s_subscribe_clear": [61, 62], "nrf_i2s_publish_set": [61, 62], "nrf_i2s_publish_clear": [61, 62], "nrf_i2s_pins_t": [61, 62], "nrf_i2s_sck_pin_get": [61, 62], "nrf_i2s_lrck_pin_get": [61, 62], "nrf_i2s_mck_pin_get": [61, 62], "nrf_i2s_sdout_pin_get": [61, 62], "nrf_i2s_sdin_pin_get": [61, 62], "nrf_i2s_config_t": [61, 62], "nrf_i2s_transfer_set": [61, 62], "p_rx_buffer": [61, 62, 119, 145, 150, 152], "p_tx_buffer": [61, 62, 119, 145, 150, 152], "accordingli": [61, 62], "nrf_i2s_rx_buffer_set": [61, 62], "nrf_i2s_rx_buffer_get": [61, 62], "nrf_i2s_tx_buffer_set": [61, 62], "nrf_i2s_tx_buffer_get": [61, 62], "nrf_i2s_clk_configur": 61, "clksrc": [61, 168], "enable_bypass": [61, 168], "mckfreq": 61, "effect": [61, 155, 168], "nrf_i2": [61, 63], "nrfy_i2": 62, "nrfy_i2s_periph_configur": 62, "nrfy_i2s_config_t": 62, "nrfy_i2s_int_init": 62, "nrfy_i2s_int_uninit": 62, "nrfy_i2s_events_process": 62, "p_xfer": [62, 150, 183, 193], "nrfy_i2s_buffers_set": 62, "nrfy_i2s_xfer_start": 62, "nrfy_i2s_abort": 62, "nrfy_i2s_pins_get": 62, "nrfy_i2s_task_trigg": 62, "nrfy_i2s_task_address_get": 62, "nrfy_i2s_event_clear": 62, "nrfy_i2s_event_check": 62, "nrfy_i2s_event_address_get": 62, "nrfy_i2s_int_en": 62, "nrfy_i2s_int_dis": 62, "nrfy_i2s_int_enable_check": 62, "nrfy_i2s_en": 62, "nrfy_i2s_dis": 62, "nrfy_i2s_subscribe_set": 62, "nrfy_i2s_subscribe_clear": 62, "nrfy_i2s_publish_set": 62, "nrfy_i2s_publish_clear": 62, "nrfy_i2s_pins_set": 62, "nrfy_i2s_sck_pin_get": 62, "nrfy_i2s_lrck_pin_get": 62, "nrfy_i2s_mck_pin_get": 62, "nrfy_i2s_sdout_pin_get": 62, "nrfy_i2s_sdin_pin_get": 62, "nrfy_i2s_configur": 62, "nrfy_i2s_transfer_set": 62, "nrfy_i2s_rx_buffer_set": 62, "nrfy_i2s_rx_buffer_get": 62, "nrfy_i2s_tx_buffer_set": 62, "nrfy_i2s_tx_buffer_get": 62, "nrfy_i2s_buffers_t": 62, "buffer_s": [62, 142], "nrf_icr": 64, "nrfx_ipc": 66, "interprocessor": [66, 67], "nrfx_ipc_handler_t": 66, "nrfx_ipc_init": 66, "nrfx_ipc_config_load": 66, "nrfx_ipc_config_t": 66, "load": [66, 93, 111, 112, 113, 182, 206, 232], "nrfx_ipc_sign": 66, "send_index": 66, "convei": 66, "nrfx_ipc_gpmem_set": 66, "mem_index": 66, "cell": [66, 67], "nrfx_ipc_uninit": 66, "nrfx_ipc_init_check": 66, "nrfx_ipc_receive_event_en": 66, "event_index": 66, "nrfx_ipc_receive_event_dis": 66, "nrfx_ipc_receive_event_group_en": 66, "event_bitmask": 66, "nrfx_ipc_receive_event_group_dis": 66, "nrfx_ipc_receive_event_channel_assign": 66, "channel_index": [66, 141], "nrfx_ipc_send_task_channel_assign": 66, "nrfx_ipc_receive_config_set": 66, "channel_bitmask": 66, "nrfx_ipc_send_config_set": 66, "send_task_config": 66, "ipc_conf_num": 66, "receive_event_config": 66, "receive_events_en": 66, "nrf_ipc_hal": 67, "nrf_ipc_task_t": 67, "nrf_ipc_task_send_0": 67, "send_cnf": 67, "nrf_ipc_task_send_1": 67, "nrf_ipc_task_send_2": 67, "nrf_ipc_task_send_3": 67, "nrf_ipc_task_send_4": 67, "nrf_ipc_task_send_5": 67, "nrf_ipc_task_send_6": 67, "nrf_ipc_task_send_7": 67, "nrf_ipc_task_send_8": 67, "nrf_ipc_task_send_9": 67, "nrf_ipc_task_send_10": 67, "nrf_ipc_task_send_11": 67, "nrf_ipc_task_send_12": 67, "nrf_ipc_task_send_13": 67, "nrf_ipc_task_send_14": 67, "nrf_ipc_task_send_15": 67, "nrf_ipc_event_t": 67, "nrf_ipc_event_receive_0": 67, "receive_cnf": 67, "nrf_ipc_event_receive_1": 67, "nrf_ipc_event_receive_2": 67, "nrf_ipc_event_receive_3": 67, "nrf_ipc_event_receive_4": 67, "nrf_ipc_event_receive_5": 67, "nrf_ipc_event_receive_6": 67, "nrf_ipc_event_receive_7": 67, "nrf_ipc_event_receive_8": 67, "nrf_ipc_event_receive_9": 67, "nrf_ipc_event_receive_10": 67, "nrf_ipc_event_receive_11": 67, "nrf_ipc_event_receive_12": 67, "nrf_ipc_event_receive_13": 67, "nrf_ipc_event_receive_14": 67, "nrf_ipc_event_receive_15": 67, "nrf_ipc_channel_t": 67, "nrf_ipc_channel_0": 67, "nrf_ipc_channel_1": 67, "nrf_ipc_channel_2": 67, "nrf_ipc_channel_3": 67, "nrf_ipc_channel_4": 67, "nrf_ipc_channel_5": 67, "nrf_ipc_channel_6": 67, "nrf_ipc_channel_7": 67, "nrf_ipc_channel_8": 67, "nrf_ipc_channel_9": 67, "nrf_ipc_channel_10": 67, "nrf_ipc_channel_11": 67, "nrf_ipc_channel_12": 67, "nrf_ipc_channel_13": 67, "nrf_ipc_channel_14": 67, "nrf_ipc_channel_15": 67, "nrf_ipc_int_mask_t": 67, "nrf_ipc_int_receive_0": 67, "nrf_ipc_int_receive_1": 67, "nrf_ipc_int_receive_2": 67, "nrf_ipc_int_receive_3": 67, "nrf_ipc_int_receive_4": 67, "nrf_ipc_int_receive_5": 67, "nrf_ipc_int_receive_6": 67, "nrf_ipc_int_receive_7": 67, "nrf_ipc_int_receive_8": 67, "nrf_ipc_int_receive_9": 67, "nrf_ipc_int_receive_10": 67, "nrf_ipc_int_receive_11": 67, "nrf_ipc_int_receive_12": 67, "nrf_ipc_int_receive_13": 67, "nrf_ipc_int_receive_14": 67, "nrf_ipc_int_receive_15": 67, "nrf_ipc_task_trigg": 67, "nrf_ipc_typ": 67, "nrf_ipc_task_address_get": 67, "nrf_ipc_event_clear": 67, "nrf_ipc_event_check": 67, "nrf_ipc_event_address_get": 67, "nrf_ipc_int_en": 67, "nrf_ipc_int_dis": 67, "nrf_ipc_int_enable_check": 67, "nrf_ipc_int_pending_get": 67, "events_rec": 67, "nrf_ipc_subscribe_set": 67, "nrf_ipc_subscribe_clear": 67, "nrf_ipc_publish_set": 67, "nrf_ipc_publish_clear": 67, "nrf_ipc_send_config_set": 67, "channels_mask": [67, 155], "nrf_ipc_channel_n": 67, "nrf_ipc_send_config_get": 67, "nrf_ipc_receive_config_set": 67, "nrf_ipc_receive_config_get": 67, "nrf_ipc_gpmem_set": 67, "nrf_ipc_gpmem_get": 67, "nrf_ipc_send_task_get": 67, "nrf_ipc_receive_event_get": 67, "nrf_ipc": 68, "nrf_ipct_hal": 69, "processor": [69, 155, 195, 206, 220], "transceiv": 69, "nrf_ipct_has_ack": 69, "ack": 69, "nrf_ipct_tasks_send_count": 69, "nrf_ipct_task_t": 69, "nrf_ipct_task_send_0": 69, "nrf_ipct_task_send_1": 69, "nrf_ipct_task_send_2": 69, "nrf_ipct_task_send_3": 69, "nrf_ipct_task_send_4": 69, "nrf_ipct_task_send_5": 69, "nrf_ipct_task_send_6": 69, "nrf_ipct_task_send_7": 69, "nrf_ipct_task_send_8": 69, "nrf_ipct_task_send_9": 69, "nrf_ipct_task_send_10": 69, "nrf_ipct_task_send_11": 69, "nrf_ipct_task_send_12": 69, "nrf_ipct_task_send_13": 69, "nrf_ipct_task_send_14": 69, "nrf_ipct_task_send_15": 69, "nrf_ipct_task_ack_0": 69, "acknowledg": [69, 157, 178, 196, 197, 238], "nrf_ipct_task_ack_1": 69, "nrf_ipct_task_ack_2": 69, "nrf_ipct_task_ack_3": 69, "nrf_ipct_task_ack_4": 69, "nrf_ipct_task_ack_5": 69, "nrf_ipct_task_ack_6": 69, "nrf_ipct_task_ack_7": 69, "nrf_ipct_task_ack_8": 69, "nrf_ipct_task_ack_9": 69, "nrf_ipct_task_ack_10": 69, "nrf_ipct_task_ack_11": 69, "nrf_ipct_task_ack_12": 69, "nrf_ipct_task_ack_13": 69, "nrf_ipct_task_ack_14": 69, "nrf_ipct_task_ack_15": 69, "nrf_ipct_event_t": 69, "nrf_ipct_event_receive_0": 69, "nrf_ipct_event_receive_1": 69, "nrf_ipct_event_receive_2": 69, "nrf_ipct_event_receive_3": 69, "nrf_ipct_event_receive_4": 69, "nrf_ipct_event_receive_5": 69, "nrf_ipct_event_receive_6": 69, "nrf_ipct_event_receive_7": 69, "nrf_ipct_event_receive_8": 69, "nrf_ipct_event_receive_9": 69, "nrf_ipct_event_receive_10": 69, "nrf_ipct_event_receive_11": 69, "nrf_ipct_event_receive_12": 69, "nrf_ipct_event_receive_13": 69, "nrf_ipct_event_receive_14": 69, "nrf_ipct_event_receive_15": 69, "nrf_ipct_event_acked_0": 69, "nrf_ipct_event_acked_1": 69, "nrf_ipct_event_acked_2": 69, "nrf_ipct_event_acked_3": 69, "nrf_ipct_event_acked_4": 69, "nrf_ipct_event_acked_5": 69, "nrf_ipct_event_acked_6": 69, "nrf_ipct_event_acked_7": 69, "nrf_ipct_event_acked_8": 69, "nrf_ipct_event_acked_9": 69, "nrf_ipct_event_acked_10": 69, "nrf_ipct_event_acked_11": 69, "nrf_ipct_event_acked_12": 69, "nrf_ipct_event_acked_13": 69, "nrf_ipct_event_acked_14": 69, "nrf_ipct_event_acked_15": 69, "nrf_ipct_short_mask_t": 69, "nrf_ipct_short_receive0_ack0_mask": 69, "nrf_ipct_short_receive1_ack1_mask": 69, "nrf_ipct_short_receive2_ack2_mask": 69, "nrf_ipct_short_receive3_ack3_mask": 69, "nrf_ipct_short_receive4_ack4_mask": 69, "nrf_ipct_short_receive5_ack5_mask": 69, "nrf_ipct_short_receive6_ack6_mask": 69, "nrf_ipct_short_receive7_ack7_mask": 69, "nrf_ipct_short_receive8_ack8_mask": 69, "nrf_ipct_short_receive9_ack9_mask": 69, "nrf_ipct_short_receive10_ack10_mask": 69, "nrf_ipct_short_receive11_ack11_mask": 69, "nrf_ipct_short_receive12_ack12_mask": 69, "nrf_ipct_short_receive13_ack13_mask": 69, "nrf_ipct_short_receive14_ack14_mask": 69, "nrf_ipct_short_receive15_ack15_mask": 69, "nrf_ipct_all_shorts_mask": 69, "nrf_ipct_int_mask_t": 69, "nrf_ipct_int_receive_0": 69, "nrf_ipct_int_receive_1": 69, "nrf_ipct_int_receive_2": 69, "nrf_ipct_int_receive_3": 69, "nrf_ipct_int_receive_4": 69, "nrf_ipct_int_receive_5": 69, "nrf_ipct_int_receive_6": 69, "nrf_ipct_int_receive_7": 69, "nrf_ipct_int_receive_8": 69, "nrf_ipct_int_receive_9": 69, "nrf_ipct_int_receive_10": 69, "nrf_ipct_int_receive_11": 69, "nrf_ipct_int_receive_12": 69, "nrf_ipct_int_receive_13": 69, "nrf_ipct_int_receive_14": 69, "nrf_ipct_int_receive_15": 69, "nrf_ipct_int_acked_0": 69, "nrf_ipct_int_acked_1": 69, "nrf_ipct_int_acked_2": 69, "nrf_ipct_int_acked_3": 69, "nrf_ipct_int_acked_4": 69, "nrf_ipct_int_acked_5": 69, "nrf_ipct_int_acked_6": 69, "nrf_ipct_int_acked_7": 69, "nrf_ipct_int_acked_8": 69, "nrf_ipct_int_acked_9": 69, "nrf_ipct_int_acked_10": 69, "nrf_ipct_int_acked_11": 69, "nrf_ipct_int_acked_12": 69, "nrf_ipct_int_acked_13": 69, "nrf_ipct_int_acked_14": 69, "nrf_ipct_int_acked_15": 69, "nrf_ipct_task_trigg": 69, "nrf_ipct_typ": [69, 244], "nrf_ipct_task_address_get": 69, "nrf_ipct_event_clear": 69, "nrf_ipct_event_check": 69, "nrf_ipct_event_address_get": 69, "nrf_ipct_int_en": 69, "nrf_ipct_int_dis": 69, "nrf_ipct_int_enable_check": 69, "nrf_ipct_int_pending_get": 69, "nrf_ipct_subscribe_set": 69, "nrf_ipct_subscribe_clear": 69, "nrf_ipct_publish_set": 69, "nrf_ipct_publish_clear": 69, "nrf_ipct_overflow_send_get": 69, "happen": [69, 85, 109, 185, 191, 209], "nrf_ipct_send_task_get": 69, "nrf_ipct_ack_task_get": 69, "nrf_ipct_receive_event_get": 69, "nrf_ipct_acked_event_get": 69, "nrf_ipct_shorts_en": 69, "nrf_ipct_shorts_dis": 69, "nrf_ipct_shorts_set": 69, "nrf_ipct": 70, "nrf_kmu_hal": 71, "nrf_kmu_has_inten": 71, "nrf_kmu_has_provis": 71, "provis": 71, "nrf_kmu_has_revok": 71, "revok": 71, "nrf_kmu_has_read_metadata": 71, "readmetadata": 71, "nrf_kmu_has_push_block": 71, "pushblock": 71, "nrf_kmu_has_src": 71, "nrf_kmu_has_metadata": 71, "metadata": 71, "nrf_kmu_task_t": 71, "nrf_kmu_task_provision_keyslot": 71, "slot": 71, "nrf_kmu_task_push_keyslot": 71, "push": 71, "over": [71, 122, 135, 145, 148, 149, 150, 152, 153, 185, 186, 188, 191, 196], "nrf_kmu_task_revoke_keyslot": 71, "nrf_kmu_task_read_metadata": 71, "metedata": 71, "nrf_kmu_task_push_block": 71, "nrf_kmu_event_t": 71, "nrf_kmu_event_events_provis": 71, "nrf_kmu_event_keyslot_push": 71, "nrf_kmu_event_keyslot_revok": 71, "nrf_kmu_event_keyslot_error": 71, "destin": [71, 93], "nrf_kmu_event_events_events_metadata_read": 71, "nrf_kmu_event_events_events_pushblock": 71, "succes": 71, "nrf_kmu_int_mask_t": 71, "nrf_kmu_int_pushed_mask": 71, "keyslot_push": 71, "nrf_kmu_int_revoked_mask": 71, "keyslot_revok": 71, "nrf_kmu_int_error_mask": 71, "keyslot_error": 71, "nrf_kmu_status_t": 71, "nrf_kmu_status_blocked_mask": 71, "nrf_kmu_status_selected_mask": 71, "nrf_kmu_status_readi": 71, "nrf_kmu_status_busi": 71, "nrf_kmu_task_trigg": 71, "nrf_kmu_typ": 71, "nrf_kmu_task_address_get": 71, "nrf_kmu_event_clear": 71, "nrf_kmu_event_check": 71, "nrf_kmu_event_address_get": 71, "nrf_kmu_int_en": 71, "nrf_kmu_int_dis": 71, "nrf_kmu_int_enable_check": 71, "nrf_kmu_intpend_get": 71, "nrf_kmu_status_get": 71, "pleas": [71, 119], "nrf_kmu_keyslot_set": 71, "keyslot_id": 71, "ahb": 71, "tasks_push_keyslot": 71, "nrf_kmu_keyslot_get": 71, "nrf_kmu_src_set": 71, "nrf_kmu_src_get": 71, "nrf_kmu_metadata_set": 71, "metdata": 71, "nrf_kmu_metadata_get": 71, "nrf_kmu": 72, "nrfx_lpcomp": 73, "nrfx_lpcomp_default_config": 73, "nrfx_lpcomp_event_handler_t": 73, "nrf_lpcomp_event_t": [73, 74, 75], "nrfx_lpcomp_init": 73, "nrfx_lpcomp_config_t": 73, "nrfx_lpcomp_en": 73, "nrfx_lpcomp_uninit": 73, "nrfx_lpcomp_dis": 73, "nrfx_lpcomp_init_check": 73, "nrf_lpcomp_ref_t": [73, 74, 75], "nrf_lpcomp_ext_ref_t": [73, 74, 75], "nrf_lpcomp_detect_t": [73, 74, 75], "nrf_lpcomp_input_t": [73, 74, 75], "nrf_lpcomp_hal": 74, "nrf_lpcomp_has_ain_as_pin": 74, "nrf_lpcomp_has_hyst": 74, "nrf_lpcomp_task_t": [74, 75], "nrf_lpcomp_task_start": 74, "nrf_lpcomp_task_stop": 74, "nrf_lpcomp_task_sampl": 74, "nrf_lpcomp_event_readi": 74, "nrf_lpcomp_event_down": 74, "nrf_lpcomp_event_up": 74, "nrf_lpcomp_event_cross": 74, "nrf_lpcomp_int_mask_t": [74, 75], "nrf_lpcomp_int_ready_mask": 74, "nrf_lpcomp_int_down_mask": 74, "nrf_lpcomp_int_up_mask": 74, "nrf_lpcomp_int_cross_mask": 74, "nrf_lpcomp_short_mask_t": 74, "nrf_lpcomp_short_cross_stop_mask": 74, "nrf_lpcomp_short_up_stop_mask": 74, "nrf_lpcomp_short_down_stop_mask": 74, "nrf_lpcomp_short_ready_stop_mask": 74, "nrf_lpcomp_short_ready_sample_mask": 74, "nrf_lpcomp_ref_supply_1_8": 74, "nrf_lpcomp_ref_supply_2_8": 74, "nrf_lpcomp_ref_supply_3_8": 74, "nrf_lpcomp_ref_supply_4_8": 74, "nrf_lpcomp_ref_supply_5_8": 74, "nrf_lpcomp_ref_supply_6_8": 74, "nrf_lpcomp_ref_supply_7_8": 74, "nrf_lpcomp_ref_ext_ref": [74, 75], "nrf_lpcomp_detect_cross": 74, "anadetec": 74, "upward": 74, "downward": 74, "nrf_lpcomp_detect_up": 74, "nrf_lpcomp_detect_down": 74, "nrf_lpcomp_hyst_t": [74, 75], "nrf_lpcomp_hyst_nohyst": 74, "nrf_lpcomp_hyst_en": 74, "typic": [74, 160, 234], "nrf_lpcomp_task_trigg": [74, 75], "nrf_lpcomp_typ": [74, 75], "nrf_lpcomp_task_address_get": [74, 75], "nrf_lpcomp_event_check": [74, 75], "nrf_lpcomp_event_clear": [74, 75], "nrf_lpcomp_event_address_get": [74, 75], "nrf_lpcomp_shorts_en": [74, 75], "nrf_lpcomp_shorts_dis": [74, 75], "nrf_lpcomp_shorts_set": 74, "nrf_lpcomp_int_en": [74, 75], "nrf_lpcomp_int_dis": [74, 75], "nrf_lpcomp_int_enable_check": [74, 75], "nrf_lpcomp_subscribe_set": 74, "nrf_lpcomp_subscribe_clear": 74, "nrf_lpcomp_publish_set": 74, "nrf_lpcomp_publish_clear": 74, "nrf_lpcomp_config_t": [74, 75], "inact": [74, 75, 122, 148, 150, 191], "nrf_lpcomp_ref_set": [74, 75], "nrf_lpcomp_ext_ref_set": [74, 75], "nrf_lpcomp_input_select": [74, 75], "nrf_lpcomp_detection_set": [74, 75], "nrf_lpcomp_hysteresis_set": [74, 75], "nrf_lpcomp_en": [74, 75], "nrf_lpcomp_dis": [74, 75], "nrf_lpcomp_enable_check": 74, "nrf_lpcomp_result_get": [74, 75], "nrf_lpcomp": [74, 76], "nrfy_lpcomp": 75, "nrfy_lpcomp_periph_configur": 75, "nrfy_lpcomp_config_t": 75, "nrfy_lpcomp_int_init": 75, "nrfy_lpcomp_int_uninit": 75, "nrfy_lpcomp_events_process": 75, "nrfy_lpcomp_sample_check": 75, "nrfy_lpcomp_ref_set": 75, "nrfy_lpcomp_ext_ref_set": 75, "nrfy_lpcomp_detection_set": 75, "nrfy_lpcomp_hysteresis_set": 75, "nrfy_lpcomp_configur": 75, "nrfy_lpcomp_input_select": 75, "nrfy_lpcomp_en": 75, "nrfy_lpcomp_dis": 75, "nrfy_lpcomp_result_get": 75, "nrfy_lpcomp_int_en": 75, "nrfy_lpcomp_int_dis": 75, "nrfy_lpcomp_int_enable_check": 75, "nrfy_lpcomp_task_address_get": 75, "nrfy_lpcomp_event_address_get": 75, "nrfy_lpcomp_shorts_en": 75, "nrfy_lpcomp_shorts_dis": 75, "nrfy_lpcomp_task_trigg": 75, "nrfy_lpcomp_event_clear": 75, "nrfy_lpcomp_event_check": 75, "nrf_lrcconf_hal": 77, "nrf_lrcconf_clk_count": 77, "nrf_lrcconf_axi_waitstates_array_s": 77, "bridg": [77, 109], "waitstat": [77, 124, 155], "nrf_lrcconf_has_hfxo": 77, "hfxo": [77, 98, 196], "nrf_lrcconf_task_t": 77, "nrf_lrcconf_task_clkstart_0": 77, "nrf_lrcconf_task_clkstart_1": 77, "nrf_lrcconf_task_clkstart_2": 77, "nrf_lrcconf_task_clkstart_3": 77, "nrf_lrcconf_task_clkstart_4": 77, "nrf_lrcconf_task_clkstart_5": 77, "nrf_lrcconf_task_clkstart_6": 77, "nrf_lrcconf_task_clkstart_7": 77, "nrf_lrcconf_task_clkstop_0": 77, "nrf_lrcconf_task_clkstop_1": 77, "nrf_lrcconf_task_clkstop_2": 77, "nrf_lrcconf_task_clkstop_3": 77, "nrf_lrcconf_task_clkstop_4": 77, "nrf_lrcconf_task_clkstop_5": 77, "nrf_lrcconf_task_clkstop_6": 77, "nrf_lrcconf_task_clkstop_7": 77, "nrf_lrcconf_task_constlat_en": 77, "nrf_lrcconf_task_constlat_dis": 77, "nrf_lrcconf_task_systemoffnotreadi": 77, "nrf_lrcconf_task_systemoffreadi": 77, "nrf_lrcconf_task_reqhfxo": 77, "nrf_lrcconf_task_stopreqhfxo": 77, "nrf_lrcconf_event_t": 77, "nrf_lrcconf_event_clkstarted_0": 77, "nrf_lrcconf_event_clkstarted_1": 77, "nrf_lrcconf_event_clkstarted_2": 77, "nrf_lrcconf_event_clkstarted_3": 77, "nrf_lrcconf_event_clkstarted_4": 77, "nrf_lrcconf_event_clkstarted_5": 77, "nrf_lrcconf_event_clkstarted_6": 77, "nrf_lrcconf_event_clkstarted_7": 77, "nrf_lrcconf_event_hfxostart": 77, "nrf_lrcconf_clk_src_t": 77, "nrf_lrcconf_clk_src_open_loop": 77, "nrf_lrcconf_clk_src_closed_loop": 77, "nrf_lrcconf_power_domain_mask_t": 77, "nrf_lrcconf_power_main": 77, "nrf_lrcconf_power_domain_0": 77, "nrf_lrcconf_power_domain_1": 77, "nrf_lrcconf_power_domain_2": 77, "nrf_lrcconf_power_domain_3": 77, "nrf_lrcconf_power_domain_4": 77, "nrf_lrcconf_power_domain_5": 77, "nrf_lrcconf_power_domain_6": 77, "nrf_lrcconf_power_domain_7": 77, "nrf_lrcconf_task_trigg": 77, "nrf_lrcconf_typ": 77, "nrf_lrcconf_task_address_get": 77, "nrf_lrcconf_event_address_get": 77, "nrf_lrcconf_event_clear": 77, "nrf_lrcconf_event_check": 77, "nrf_lrcconf_clkstart_task_get": 77, "clkstart": 77, "nrf_lrcconf_clkstop_task_get": 77, "clkstop": 77, "nrf_lrcconf_clkstarted_event_get": 77, "nrf_lrcconf_power_domain_on_get": 77, "nrf_lrcconf_clock_run_status_check": 77, "task_clkstart": 77, "nrf_lrcconf_clock_source_get": 77, "nrf_lrcconf_clock_always_run_force_set": 77, "nrf_lrcconf_clock_always_run_check": 77, "nrf_lrcconf_clock_source_set": 77, "nrf_lrcconf_constlatstat_check": 77, "nrf_lrcconf_poweron_force_set": 77, "domain_mask": 77, "alwayson": 77, "nrf_lrcconf_poweron_force_check": 77, "nrf_lrcconf_retain_set": 77, "ON": [77, 104, 203], "flase": 77, "nrf_lrcconf_retain_check": 77, "nrf_lrcconf_axi_waitstates_set": 77, "waitstates_num": 77, "nrf_lrcconf_axi_waitstates_get": 77, "nrf_lrc": 78, "nrf_memconf_h": 79, "nrf_memconf_has_ret2": 79, "nrf_memconf_has_repair": 79, "repair": 79, "nrf_memconf_has_trim": 79, "nrf_memconf_powerblock_count": 79, "nrf_memconf_powerblock_ramblock_control_count": 79, "nrf_memconf_powerblock_ramblock_ret_count": 79, "nrf_memconf_powerblock_ramblock_ret2_count": 79, "bank": 79, "nrf_memconf_blocktype_trim_memtrim_mask": 79, "margin": 79, "nrf_memconf_blocktype_trim_memrettrim_mask": 79, "nrf_memconf_ramblock_control_enable_set": 79, "nrf_memconf_typ": 79, "power_id": 79, "ramblock": 79, "nrf_memconf_ramblock_control_mask_enable_set": 79, "ramblock_mask": 79, "nrf_memconf_ramblock_control_enable_check": 79, "nrf_memconf_ramblock_ret_enable_set": 79, "nrf_memconf_ramblock_ret_mask_enable_set": 79, "nrf_memconf_ramblock_ret_enable_check": 79, "nrf_memconf_ramblock_ret2_enable_set": 79, "nrf_memconf_ramblock_ret2_enable_check": 79, "nrf_memconf_bitline_enable_set": 79, "bitlin": 79, "nrf_memconf_bitline_enable_check": 79, "nrf_memconf_bitline_address_set": 79, "nrf_memconf_bitline_address_get": 79, "nrf_memconf_memtrim_set": 79, "trim_id": 79, "trim_val": 79, "nrf_memconf_memtrim_get": 79, "nrf_memconf_rettrim_set": 79, "nrf_memconf_rettrim_get": 79, "nrf_memconf": 80, "nrf_mpc_hal": 81, "privileg": [81, 157, 162, 205], "nrf_mpc_has_rtchok": 81, "rtchoke": 81, "nrf_mpc_has_secdom": 81, "secdom": 81, "nrf_mpc_has_override_offset": 81, "nrf_mpc_region_count": 81, "nrf_mpc_override_count": 81, "nrf_mpc_master_ports_count": 81, "nrf_mpc_rtchoke_count": 81, "choke": 81, "nrf_mpc_event_t": 81, "nrf_mpc_event_memaccerr": 81, "nrf_mpc_int_mask_t": 81, "nrf_mpc_int_memaccerr_mask": 81, "memaccerr": 81, "nrf_mpc_errorsource_t": 81, "nrf_mpc_errorsource_slav": 81, "nrf_mpc_errorsource_mpc": 81, "mcp": 81, "nrf_mpc_permission_mask_t": 81, "nrf_mpc_perm_read_mask": 81, "nrf_mpc_perm_write_mask": 81, "nrf_mpc_perm_execute_mask": 81, "nrf_mpc_perm_secure_mask": 81, "nrf_mpc_masterport_mask_t": 81, "masterport": 81, "nrf_mpc_masterport_0_mask": 81, "nrf_mpc_masterport_1_mask": 81, "nrf_mpc_masterport_2_mask": 81, "nrf_mpc_masterport_3_mask": 81, "nrf_mpc_masterport_4_mask": 81, "nrf_mpc_masterport_5_mask": 81, "nrf_mpc_masterport_6_mask": 81, "nrf_mpc_masterport_7_mask": 81, "nrf_mpc_masterport_8_mask": 81, "nrf_mpc_masterport_9_mask": 81, "nrf_mpc_masterport_10_mask": 81, "nrf_mpc_masterport_11_mask": 81, "nrf_mpc_masterport_12_mask": 81, "nrf_mpc_masterport_13_mask": 81, "nrf_mpc_masterport_14_mask": 81, "nrf_mpc_event_check": 81, "nrf_mpc_type": 81, "nrf_mpc_event_clear": 81, "nrf_mpc_event_address_get": 81, "nrf_mpc_int_en": 81, "nrf_mpc_int_enable_check": 81, "nrf_mpc_int_dis": 81, "nrf_mpc_region_config_set": 81, "nrf_mpc_region_config_t": 81, "nrf_mpc_region_config_get": 81, "nrf_mpc_region_startaddr_set": 81, "4kb": [81, 119], "boundari": [81, 179, 182, 206], "nrf_mpc_region_startaddr_get": 81, "nrf_mpc_region_addrmask_set": 81, "nrf_mpc_region_addrmask_get": 81, "nrf_mpc_region_masterport_set": 81, "construct": [81, 104, 109, 127, 128, 162, 215, 216, 217, 248], "nrf_mpc_region_masterport_get": 81, "nrf_mpc_override_config_set": 81, "nrf_mpc_override_config_t": 81, "nrf_mpc_override_config_get": 81, "nrf_mpc_override_startaddr_set": 81, "nrf_mpc_override_startaddr_get": 81, "nrf_mpc_override_endaddr_set": 81, "nrf_mpc_override_endaddr_get": 81, "nrf_mpc_override_offset_set": 81, "shift": [81, 145, 146, 148, 149, 152, 153, 208], "33": 81, "nrf_mpc_override_offset_get": 81, "nrf_mpc_override_perm_set": 81, "nrf_mpc_override_perm_get": 81, "nrf_mpc_override_permmask_set": 81, "nrf_mpc_override_permmask_get": 81, "nrf_mpc_override_ownerid_set": 81, "nrf_owner_t": [81, 155, 195], "owner_id": [81, 155], "nrf_mpc_override_ownerid_get": 81, "overridd": 81, "nrf_mpc_override_masterport_set": 81, "nrf_mpc_override_masterport_get": 81, "nrf_mpc_memaccerr_address_get": 81, "errron": 81, "nrf_mpc_memaccerr_info_ownerid_get": 81, "errorn": 81, "nrf_mpc_memaccerr_info_masterport_get": 81, "nrf_mpc_memaccerr_info_perm_get": 81, "nrf_mpc_memaccerr_info_errorsource_get": 81, "nrf_mpc_globalslave_masterport_set": 81, "nrf_mpc_globalslave_masterport_get": 81, "nrf_mpc_globalslave_lock_en": 81, "nrf_mpc_globalslave_lock_check": 81, "nrf_mpc_rtchoke_writeaccess_set": 81, "nrf_mpc_rtchoke_writeaccess_get": 81, "nrf_mpc_rtchoke_readaccess_set": 81, "nrf_mpc_rtchoke_readaccess_get": 81, "nrf_mpc_rtchoke_delay_set": 81, "nrf_mpc_rtchoke_delay_get": 81, "nrf_mpc": [81, 82], "slave_numb": 81, "secdom_en": 81, "secure_mask": 81, "nrf_mpu_hal": 83, "nrf_mpu_peripheral_mask_get": 83, "base_addr": [83, 234], "nrf_mpu_region0_ram_size_set": 83, "nrf_mpu_typ": 83, "enforc": 83, "runtim": [83, 240], "readback": 83, "classifi": 83, "nrf_mpu_region0_peripherals_set": 83, "peripheral_mask": 83, "compos": [83, 90, 104, 112, 160], "nrf_mpu_region0_peripherals_get": 83, "nrf_mpu_nvm_blocks_protection_en": 83, "nrf_mpu_nvm_protection_in_debug_set": 83, "nrf_mpu": 84, "nrf_mutex_h": 85, "nrf_mutex_lock": 85, "nrf_mutex_typ": 85, "nrf_mutex_unlock": 85, "nrf_mutex": 86, "nrf_mvdma_hal": 87, "nrf_mvdma_has_new_v": [87, 88], "nrf_mvdma_has_aximod": [87, 88], "aximod": [87, 88], "nrf_mvdma_has_multimod": 87, "nrf_mvdma_task_t": [87, 88], "nrf_mvdma_task_paus": 87, "paus": [87, 174, 215], "nrf_mvdma_task_reset": 87, "fsm": 87, "nrf_mvdma_task_start0": 87, "descriptor": [87, 88, 92, 145, 148, 178, 181, 196, 249], "nrf_mvdma_task_start1": 87, "nrf_mvdma_task_start2": 87, "nrf_mvdma_task_start3": 87, "nrf_mvdma_task_start4": 87, "nrf_mvdma_task_start5": 87, "nrf_mvdma_task_start6": 87, "nrf_mvdma_task_start7": 87, "nrf_mvdma_event_t": [87, 88], "nrf_mvdma_event_end": 87, "sink": [87, 88, 195, 249], "nrf_mvdma_event_start": 87, "nrf_mvdma_event_paus": 87, "nrf_mvdma_event_reset": 87, "nrf_mvdma_event_sourcebuserror": 87, "nrf_mvdma_event_sourceselectjobdon": 87, "attribut": [87, 155, 195, 205, 249], "nrf_mvdma_event_sinkbuserror": 87, "nrf_mvdma_event_sinkselectjobdon": 87, "nrf_mvdma_int_mask_t": [87, 88], "nrf_mvdma_int_end_mask": 87, "nrf_mvdma_int_started_mask": 87, "nrf_mvdma_int_paused_mask": 87, "nrf_mvdma_int_reset_mask": 87, "nrf_mvdma_int_sourcebuserror_mask": 87, "sourcebuserror": 87, "nrf_mvdma_int_sinkbuserror_mask": 87, "sinkbuserror": 87, "nrf_mvdma_int_sourceselectjobdone_mask": 87, "sourceselectjobdon": 87, "nrf_mvdma_int_sinkselectjobdone_mask": 87, "sinkselectjobdon": 87, "nrf_mvdma_mode_t": [87, 88], "nrf_mvdma_mode_singl": 87, "sourcelistptr": 87, "sinklistptr": 87, "nrf_mvdma_mode_multi": 87, "nrf_mvdma_aximode_t": [87, 88], "nrf_mvdma_aximode_axi": 87, "beat": 87, "nrf_mvdma_aximode_axilit": 87, "nrf_mvdma_fifo_status_t": [87, 88], "fifo": [87, 88, 188, 191, 192], "nrf_mvdma_fifo_status_empti": 87, "intermedi": [87, 88, 128], "nrf_mvdma_fifo_status_not_empti": 87, "nrf_mvdma_fifo_status_ful": 87, "nrf_mvdma_source_error_t": [87, 88], "nrf_mvdma_source_error_non": 87, "nrf_mvdma_source_error_read": 87, "joblist": [87, 249], "nrf_mvdma_source_error_read_decod": 87, "nrf_mvdma_sink_error_t": [87, 88], "nrf_mvdma_sink_error_non": 87, "nrf_mvdma_sink_error_read": 87, "nrf_mvdma_sink_error_writ": 87, "nrf_mvdma_sink_error_decode_read": 87, "nrf_mvdma_sink_error_decode_writ": 87, "nrf_mvdma_task_trigg": [87, 88], "nrf_mvdma_typ": [87, 88], "nrf_mvdma_task_address_get": [87, 88], "nrf_mvdma_start_task_get": [87, 88], "nrf_mvdma_event_clear": [87, 88], "nrf_mvdma_event_check": [87, 88], "nrf_mvdma_event_address_get": [87, 88], "nrf_mvdma_int_en": [87, 88], "nrf_mvdma_int_dis": [87, 88], "nrf_mvdma_int_enable_check": [87, 88], "nrf_mvdma_int_pending_get": [87, 88], "nrf_mvdma_subscribe_set": [87, 88], "nrf_mvdma_subscribe_clear": [87, 88], "nrf_mvdma_publish_set": [87, 88], "nrf_mvdma_publish_clear": [87, 88], "nrf_mvdma_mode_set": [87, 88], "nrf_mvdma_aximode_set": [87, 88], "nrf_mvdma_source_list_ptr_set": [87, 88], "nrf_mvdma_source_list_ptr_get": [87, 88], "nrf_mvdma_sink_list_ptr_set": [87, 88], "nrf_mvdma_sink_list_ptr_get": [87, 88], "nrf_mvdma_crc_result_get": [87, 88], "crc": [87, 88, 93, 122, 197, 249], "checksum": [87, 88, 249], "nrf_mvdma_fifo_status_get": [87, 88], "nrf_mvdma_activity_check": [87, 88], "nrf_mvdma_source_error_get": [87, 88], "nrf_mvdma_sink_error_get": [87, 88], "nrf_mvdma_last_source_address_get": [87, 88], "latest": [87, 88], "nrf_mvdma_last_sink_address_get": [87, 88], "nrf_mvdma_source_job_count_get": [87, 88], "nrf_mvdma_sink_job_count_get": [87, 88], "nrfy_mvdma": 88, "nrfy_mvdma_has_new_v": 88, "nrfy_mvdma_has_aximod": 88, "nrfy_mvdma_int_init": 88, "nrfy_mvdma_int_uninit": 88, "nrfy_mvdma_events_process": 88, "nrfy_mvdma_list_request_t": 88, "p_list_request": 88, "nrfy_mvdma_start": 88, "nrfy_mvdma_multi_start": 88, "nrfy_mvdma_multi_list_request_t": 88, "nrfy_mvdma_multi_job_list_set": 88, "nrfy_mvdma_multi_job_list_get": 88, "nrfy_mvdma_job_list_set": 88, "nrfy_mvdma_reset": 88, "nrfy_mvdma_abort": 88, "nrfy_mvdma_source_job_description_get": 88, "nrfy_mvdma_list_desc_t": 88, "p_job_list_desc": 88, "nrfy_mvdma_sink_job_description_get": 88, "nrfy_mvdma_task_trigg": 88, "nrfy_mvdma_task_address_get": 88, "nrfy_mvdma_start_task_get": 88, "nrfy_mvdma_event_clear": 88, "nrfy_mvdma_event_check": 88, "nrfy_mvdma_event_address_get": 88, "nrfy_mvdma_int_en": 88, "nrfy_mvdma_int_dis": 88, "nrfy_mvdma_int_enable_check": 88, "nrfy_mvdma_int_pending_get": 88, "nrfy_mvdma_subscribe_set": 88, "nrfy_mvdma_subscribe_clear": 88, "nrfy_mvdma_publish_set": 88, "nrfy_mvdma_publish_clear": 88, "nrfy_mvdma_mode_set": 88, "nrfy_mvdma_aximode_set": 88, "nrfy_mvdma_source_list_ptr_set": 88, "nrfy_mvdma_source_list_ptr_get": 88, "nrfy_mvdma_sink_list_ptr_set": 88, "nrfy_mvdma_sink_list_ptr_get": 88, "nrfy_mvdma_crc_result_get": 88, "nrfy_mvdma_fifo_status_get": 88, "nrfy_mvdma_activity_check": 88, "nrfy_mvdma_source_error_get": 88, "nrfy_mvdma_sink_error_get": 88, "nrfy_mvdma_last_source_address_get": 88, "nrfy_mvdma_last_sink_address_get": 88, "nrfy_mvdma_source_job_count_get": 88, "nrfy_mvdma_sink_job_count_get": 88, "p_source_job_list": 88, "p_sink_job_list": 88, "unspecifi": 88, "job_count": 88, "last_addr": 88, "nrf_mvdma": 89, "nrf_mwu_hal": 90, "watch": 90, "nrf_mwu_event_t": 90, "nrf_mwu_event_region0_writ": 90, "nrf_mwu_event_region0_read": 90, "nrf_mwu_event_region1_writ": 90, "nrf_mwu_event_region1_read": 90, "nrf_mwu_event_region2_writ": 90, "nrf_mwu_event_region2_read": 90, "nrf_mwu_event_region3_writ": 90, "nrf_mwu_event_region3_read": 90, "nrf_mwu_event_pregion0_writ": 90, "nrf_mwu_event_pregion0_read": 90, "nrf_mwu_event_pregion1_writ": 90, "nrf_mwu_event_pregion1_read": 90, "nrf_mwu_int_mask_t": 90, "nrf_mwu_int_region0_write_mask": 90, "nrf_mwu_int_region0_read_mask": 90, "ra": 90, "nrf_mwu_int_region1_write_mask": 90, "nrf_mwu_int_region1_read_mask": 90, "nrf_mwu_int_region2_write_mask": 90, "nrf_mwu_int_region2_read_mask": 90, "nrf_mwu_int_region3_write_mask": 90, "nrf_mwu_int_region3_read_mask": 90, "nrf_mwu_int_pregion0_write_mask": 90, "pregion": 90, "nrf_mwu_int_pregion0_read_mask": 90, "nrf_mwu_int_pregion1_write_mask": 90, "nrf_mwu_int_pregion1_read_mask": 90, "nrf_mwu_region_watch_t": 90, "nrf_mwu_watch_region0_writ": 90, "nrf_mwu_watch_region0_read": 90, "nrf_mwu_watch_region1_writ": 90, "nrf_mwu_watch_region1_read": 90, "nrf_mwu_watch_region2_writ": 90, "nrf_mwu_watch_region2_read": 90, "nrf_mwu_watch_region3_writ": 90, "nrf_mwu_watch_region3_read": 90, "nrf_mwu_watch_pregion0_writ": 90, "nrf_mwu_watch_pregion0_read": 90, "nrf_mwu_watch_pregion1_writ": 90, "nrf_mwu_watch_pregion1_read": 90, "nrf_mwu_event_check": 90, "nrf_mwu_typ": 90, "nrf_mwu_event_clear": 90, "nrf_mwu_event_address_get": 90, "nrf_mwu_int_en": 90, "nrf_mwu_int_enable_check": 90, "nrf_mwu_int_dis": 90, "nrf_mwu_nmi_en": 90, "nrf_mwu_nmi_enable_check": 90, "nrf_mwu_nmi_dis": 90, "nrf_mwu_user_region_range_set": 90, "region_idx": 90, "start_addr": 90, "end_addr": 90, "begin": [90, 111, 122, 142, 143, 234], "nrf_mwu_region_watch_en": 90, "reg_watch_mask": 90, "nrf_mwu_region_watch_dis": 90, "nrf_mwu_region_watch_get": 90, "nrf_mwu_subregions_configur": 90, "per_reg_idx": 90, "subregion_mask": 90, "subregion": 90, "nrf_mwu_subregions_write_accesses_get": 90, "nrf_mwu_subregions_write_accesses_clear": 90, "nrf_mwu_subregions_read_accesses_get": 90, "nrf_mwu_subregions_read_accesses_clear": 90, "nrf_mwu": 91, "nrfx_nfct": 92, "Near": [92, 93], "nrfx_nfct_nfcid1_single_s": 92, "nfcid1": [92, 93], "nrfx_nfct_nfcid1_double_s": 92, "nrfx_nfct_nfcid1_triple_s": 92, "tripl": [92, 93], "nrfx_nfct_nfcid1_default_len": 92, "nrfx_nfct_handler_t": 92, "nrfx_nfct_evt_t": 92, "nrfx_nfct_evt_field_detect": 92, "mention": [92, 220, 234], "come": [92, 196, 197, 220], "row": 92, "nrfx_nfct_state_t": 92, "nrfx_nfct_state_dis": 92, "nrfx_nfct_state_sens": 92, "nrfx_nfct_state_activ": 92, "nrfx_nfct_active_state_t": 92, "substat": [92, 185], "nrfx_nfct_active_state_idl": 92, "reader": 92, "nrfx_nfct_active_state_sleep": 92, "nrfx_nfct_active_state_default": 92, "poller": [92, 93], "nrfx_nfct_evt_id_t": 92, "nrfx_nfct_evt_select": 92, "nrfx_nfct_evt_rx_framestart": 92, "nrfx_nfct_evt_rx_frameend": 92, "nrfx_nfct_evt_tx_framestart": 92, "nrfx_nfct_evt_tx_frameend": 92, "nrfx_nfct_evt_error": 92, "nrfx_nfct_error_t": 92, "nrfx_nfct_error_framedelaytimeout": 92, "window": [92, 93], "nrfx_nfct_error_num": 92, "nrfx_nfct_param_id_t": 92, "nrfx_nfct_param_id_fdt": 92, "min": [92, 234], "nrfx_nfct_param_id_sel_r": 92, "nrfx_nfct_param_id_nfcid1": 92, "nrfx_nfct_init": 92, "nrfx_nfct_config_t": 92, "antenna": [92, 93, 122], "pad": [92, 93, 120], "nrfx_nfct_uninit": 92, "nrfx_nfct_init_check": 92, "nrfx_nfct_enabl": 92, "abl": [92, 95, 128, 133, 135, 196], "nrfx_nfct_disabl": 92, "nrfx_nfct_field_check": 92, "nrfx_nfct_rx": 92, "nrfx_nfct_data_desc_t": 92, "p_rx_data": [92, 120], "reachabl": 92, "nrfx_nfct_tx": 92, "p_tx_data": [92, 120], "nrf_nfct_frame_delay_mode_t": [92, 93], "delay_mod": 92, "nrfx_error_invalid_length": [92, 141, 152, 185, 191, 238], "nrfx_nfct_bits_tx": 92, "unlik": [92, 145, 148], "data_s": [92, 196], "rather": 92, "nrfx_nfct_state_forc": 92, "nrfx_nfct_init_substate_forc": 92, "sub_stat": 92, "nrfx_nfct_parameter_set": 92, "nrfx_nfct_param_t": 92, "p_param": 92, "nrfx_nfct_nfcid1_default_bytes_get": 92, "p_nfcid1_buff": 92, "nfcid1_buff_len": 92, "nfcid": 92, "nrfx_nfct_autocolres_en": 92, "collis": [92, 93], "forum": [92, 93], "technic": [92, 93, 232], "iso": [92, 93, 197], "14443": [92, 93], "nrfx_nfct_autocolres_dis": 92, "nrfx_nfct_nfcid1_t": 92, "p_id": 92, "id_siz": 92, "fdt": [92, 93], "fdt_min": 92, "sel_res_protocol": [92, 93], "nrfx_nfct_evt_rx_frameend_t": 92, "rx_statu": 92, "rx_data": 92, "nrfx_nfct_evt_tx_framestart_t": 92, "tx_data": 92, "nrfx_nfct_evt_error_t": 92, "evt_id": 92, "rx_frameend": 92, "tx_framestart": 92, "rxtx_int_mask": 92, "cb": 92, "nrf_nfct_hal": 93, "nrf_nfct_crc_size": 93, "nrf_nfct_disable_all_int": 93, "nrf_nfct_mod_ctrl_pin_not_connect": 93, "nrf_nfct_mod_ctrl_pin_set": 93, "nrf_nfct_frame_delay_max_max_valu": 93, "nrf_nfcid1_has_new_layout": 93, "nrf_nfct_has_stoptx_task": 93, "nrf_nfct_has_modulation_psel_reg": 93, "nrf_nfct_has_modulation_ctrl_reg": 93, "nrf_nfct_has_tag_state_reg": 93, "nrf_nfct_has_sleep_state_reg": 93, "nrf_nfct_has_autocolres_config_reg": 93, "nrf_nfct_has_pad_config_reg": 93, "nrf_nfct_has_bias_config_trim_reg": 93, "nrf_nfct_task_t": 93, "nrf_nfct_task_activ": 93, "outgo": 93, "nrf_nfct_task_dis": 93, "nrf_nfct_task_sens": 93, "nrf_nfct_task_starttx": 93, "nrf_nfct_task_stoptx": 93, "nrf_nfct_task_enablerxdata": 93, "nrf_nfct_task_goidl": 93, "machin": [93, 122, 185, 205, 206], "nrf_nfct_task_gosleep": 93, "sleep_a": 93, "nrf_nfct_event_t": 93, "nrf_nfct_event_readi": 93, "nrf_nfct_event_fielddetect": 93, "remot": [93, 195, 196], "nrf_nfct_event_fieldlost": 93, "nrf_nfct_event_txframestart": 93, "nrf_nfct_event_txframeend": 93, "air": [93, 122], "nrf_nfct_event_rxframestart": 93, "nrf_nfct_event_rxframeend": 93, "nrf_nfct_event_error": 93, "nrf_nfct_event_rxerror": 93, "framestatu": 93, "nrf_nfct_event_endrx": 93, "packetptr": 93, "maxlen": [93, 122], "nrf_nfct_event_endtx": 93, "nrf_nfct_event_autocolresstart": 93, "nrf_nfct_event_collis": 93, "nrf_nfct_event_select": 93, "nrf_nfct_event_start": 93, "nrf_nfct_short_mask_t": 93, "nrf_nfct_short_fielddetected_activate_mask": 93, "fielddetect": 93, "nrf_nfct_short_fieldlost_sense_mask": 93, "fieldlost": 93, "nrf_nfct_short_txframeend_enablerxdata_mask": 93, "txframeend": 93, "enablerxdata": 93, "nrf_nfct_int_mask_t": 93, "nrf_nfct_int_ready_mask": 93, "nrf_nfct_int_fielddetected_mask": 93, "nrf_nfct_int_fieldlost_mask": 93, "nrf_nfct_int_txframestart_mask": 93, "txframestart": 93, "nrf_nfct_int_txframeend_mask": 93, "nrf_nfct_int_rxframestart_mask": 93, "nrf_nfct_int_rxframeend_mask": 93, "rxframeend": 93, "nrf_nfct_int_error_mask": 93, "nrf_nfct_int_rxerror_mask": 93, "rxerror": 93, "nrf_nfct_int_endrx_mask": 93, "endrx": [93, 149, 153, 192], "nrf_nfct_int_endtx_mask": 93, "endtx": [93, 149, 153, 191, 192], "nrf_nfct_int_autocolresstarted_mask": 93, "autocolresstart": 93, "nrf_nfct_int_collision_mask": 93, "nrf_nfct_int_selected_mask": 93, "nrf_nfct_int_started_mask": 93, "nrf_nfct_error_status_t": 93, "nrf_nfct_error_framedelaytimeout_mask": 93, "nrf_nfct_error_nfcfieldtoostrong_mask": 93, "too": [93, 141, 191], "resist": [93, 133, 134, 135], "nrf_nfct_error_nfcfieldtooweak_mask": 93, "nrf_nfct_rx_frame_status_t": 93, "nrf_nfct_rx_frame_status_crc_mask": 93, "nrf_nfct_rx_frame_status_parity_mask": 93, "nrf_nfct_rx_frame_status_overrun_mask": 93, "overrun": [93, 145, 148, 150, 179, 182, 188, 189, 192, 238], "nrf_nfct_tag_state_t": 93, "nrf_nfct_tag_state_dis": 93, "nrf_nfct_tag_state_ramp_up": 93, "nrf_nfct_tag_state_idl": 93, "nrf_nfct_tag_state_rec": 93, "nrf_nfct_tag_state_frame_delai": 93, "nrf_nfct_tag_state_transmit": 93, "nrf_nfct_sleep_state_t": 93, "show": 93, "v2": 93, "nrf_nfct_sleep_state_idl": 93, "nrf_nfct_sleep_state_sleep_a": 93, "nrf_nfct_field_state_t": 93, "nrf_nfct_field_state_present_mask": 93, "nrf_nfct_field_state_lock_mask": 93, "nrf_nfct_frame_delay_mode_freerun": 93, "nrf_nfct_frame_delay_mode_window": 93, "framedelaymax": 93, "nrf_nfct_frame_delay_mode_exactv": 93, "reach": [93, 96, 98, 111, 122, 141, 149, 153, 209], "nrf_nfct_frame_delay_mode_windowgrid": 93, "grid": 93, "nrf_nfct_tx_frame_config_t": 93, "nrf_nfct_tx_frame_config_par": 93, "nrf_nfct_tx_frame_config_discard_start": 93, "discard": [93, 191], "nrf_nfct_tx_frame_config_sof": 93, "sof": [93, 196, 197], "nrf_nfct_tx_frame_config_crc16": 93, "nrf_nfct_rx_frame_config_t": 93, "nrf_nfct_rx_frame_config_par": 93, "nrf_nfct_rx_frame_config_sof": 93, "nrf_nfct_rx_frame_config_crc16": 93, "nrf_nfct_sensres_nfcid1_size_t": 93, "nfci1": 93, "nrf_nfct_sensres_nfcid1_size_singl": 93, "nrf_nfct_sensres_nfcid1_size_doubl": 93, "nrf_nfct_sensres_nfcid1_size_tripl": 93, "nrf_nfct_sensres_nfcid1_size_default": 93, "leav": [93, 185], "nrf_nfct_sensres_bit_frame_sdd_t": 93, "sdd": 93, "nrf_nfct_sensres_bit_frame_sdd_00000": 93, "pattern": [93, 122, 149, 153, 182], "00000": 93, "nrf_nfct_sensres_bit_frame_sdd_00001": 93, "00001": 93, "nrf_nfct_sensres_bit_frame_sdd_00010": 93, "00010": 93, "nrf_nfct_sensres_bit_frame_sdd_00100": 93, "00100": 93, "nrf_nfct_sensres_bit_frame_sdd_01000": 93, "01000": 93, "nrf_nfct_sensres_bit_frame_sdd_10000": 93, "10000": 93, "nrf_nfct_sensres_platform_config_t": 93, "platofrm": 93, "nrf_nfct_sensres_platform_config_t1t": 93, "platform": 93, "b4": 93, "b1": 93, "b7": 93, "b6": 93, "nrf_nfct_sensres_platform_config_oth": 93, "nrf_nfct_selres_protocol_t": 93, "nrf_nfct_selres_protocol_t2t": 93, "nrf_nfct_selres_protocol_t4at": 93, "4a": 93, "nrf_nfct_selres_protocol_nfcdep": 93, "dep": 93, "nrf_nfct_selres_protocol_nfcdep_t4at": 93, "nrf_nfct_modulation_ctrl_t": 93, "nrf_nfct_modulation_ctrl_invalid": 93, "nrf_nfct_modulation_ctrl_intern": 93, "nrf_nfct_modulation_ctrl_gpio": 93, "nrf_nfct_modulation_ctrl_internal_gpio": 93, "nrf_nfct_task_trigg": 93, "nrf_nfct_type": 93, "nrf_nfct_task_address_get": 93, "nrf_nfct_event_clear": 93, "nrf_nfct_event_check": 93, "nrf_nfct_event_address_get": 93, "nrf_nfct_shorts_en": 93, "short_mask": 93, "nrf_nfct_shorts_dis": 93, "nrf_nfct_shorts_get": 93, "nrf_nfct_shorts_set": 93, "nrf_nfct_int_en": 93, "nrf_nfct_int_enable_check": 93, "nrf_nfct_int_enable_get": 93, "nrf_nfct_int_dis": 93, "mod_ctrl_pin": 93, "nrf_nfct_mod_ctrl_pin_get": 93, "nrf_nfct_modulation_output_set": 93, "mod_ctrl": 93, "nrf_nfct_modulation_output_get": 93, "nrf_nfct_error_status_get": 93, "nrf_nfct_error_status_clear": 93, "error_flag": 93, "nrf_nfct_rx_frame_status_get": 93, "nrf_nfct_rx_frame_status_clear": 93, "framestatus_flag": 93, "nrf_nfct_tag_state_get": 93, "nrf_nfct_sleep_state_get": 93, "autimat": 93, "nrf_nfct_field_status_get": 93, "nrf_nfct_frame_delay_min_get": 93, "shortest": 93, "56": 93, "nrf_nfct_frame_delay_min_set": 93, "frame_delay_min": 93, "nrf_nfct_frame_delay_max_get": 93, "longest": 93, "nrf_nfct_frame_delay_max_set": 93, "frame_delay_max": 93, "nrf_nfct_frame_delay_mode_get": 93, "nrf_nfct_frame_delay_mode_set": 93, "frame_delay_mod": 93, "nrf_nfct_rxtx_buffer_get": 93, "nrf_nfct_rxtx_buffer_set": 93, "p_rxtx_buf": 93, "max_txrx_len": 93, "nrf_nfct_max_rxtx_length_get": 93, "nrf_nfct_tx_frame_config_get": 93, "nrf_nfct_tx_frame_config_set": 93, "nrf_nfct_tx_bits_get": 93, "exclud": [93, 107, 122, 189, 192, 220], "eof": 93, "nrf_nfct_tx_bits_set": 93, "tx_bit": 93, "overal": 93, "nrf_nfct_rx_frame_config_get": 93, "nrf_nfct_rx_frame_config_set": 93, "nrf_nfct_rx_bits_get": 93, "crc_exclud": 93, "nrf_nfct_nfcid1_get": 93, "p_nfcid1_buf": 93, "nrf_nfct_sensres_nfcid1_size_set": 93, "nrf_nfct_nfcid1_set": 93, "ndfcid1": 93, "littl": 93, "nfcid1_3rd_last": 93, "nfcid1_2nd_last": 93, "nfcid1_last": 93, "nfcid1_siz": 93, "nfcidsiz": 93, "sensr": 93, "nrf_nfct_autocolres_is_en": 93, "nrf_nfct_autocolres_en": 93, "nrf_nfct_autocolres_dis": 93, "nrf_nfct_sensres_nfcid1_size_get": 93, "nrf_nfct_sensres_bit_frame_sdd_get": 93, "nrf_nfct_sensres_bit_frame_sdd_set": 93, "bit_frame_sdd": 93, "nrf_nfct_sensres_platform_config_get": 93, "nrf_nfct_sensres_platform_config_set": 93, "platform_config": 93, "nrf_nfct_selres_cascade_check": 93, "cascad": 93, "spefici": 93, "nrf_nfct_selres_protocol_get": 93, "nrf_nfct_selres_protocol_set": 93, "nrf_nfct_selres_get": 93, "nrf_nfct_selres_set": 93, "selr": 93, "nrf_nfct_pad_config_enable_set": 93, "nrf_nfct_pad_config_enable_check": 93, "nrf_nfct_bias_config_set": 93, "nrf_nfct_bias_config_t": 93, "p_bias_config": 93, "nrf_nfct_bias_config_get": 93, "nrf_nfct": [93, 94], "trim_ibpsr": 93, "ibpsr": 93, "\u00b5a": 93, "coarse_ibpsr": 93, "reference_volatg": 93, "spare": 93, "nrfx_nvmc": 95, "nrfx_nvmc_page_eras": 95, "halt": [95, 133, 135, 162, 197, 215, 216, 217], "nrfx_nvmc_uicr_eras": 95, "nrfx_nvmc_all_eras": 95, "nrfx_nvmc_page_partial_erase_init": 95, "duration_m": [95, 96], "known": [95, 137, 178, 181, 185], "partial": [95, 96], "durat": [95, 96, 122, 148, 149, 150, 168], "nrfx_nvmc_page_partial_erase_continu": 95, "electr": 95, "lead": [95, 145, 146, 148, 149, 152, 153, 240], "nrfx_nvmc_byte_writable_check": 95, "writabl": [95, 196], "rewrit": [95, 133, 135], "back": [95, 103, 111, 112, 113, 133, 135, 240], "resid": [95, 133, 135], "transform": [95, 106, 133, 135], "nrfx_nvmc_byte_writ": 95, "nrfx_nvmc_write_done_check": 95, "nrfx_nvmc_halfword_writable_check": 95, "nrfx_nvmc_halfword_writ": 95, "nrfx_nvmc_word_writable_check": 95, "nrfx_nvmc_word_writ": [95, 96], "num_byt": [95, 96, 133, 135], "nrfx_nvmc_words_writ": 95, "num_word": [95, 133, 135], "nrfx_nvmc_otp_halfword_read": 95, "nrfx_nvmc_uicr_word_read": 95, "straight": 95, "nrfx_nvmc_flash_size_get": 95, "nrfx_nvmc_flash_page_size_get": 95, "nrfx_nvmc_flash_page_count_get": 95, "nrfx_nvmc_icache_en": 95, "icach": [95, 96], "boost": 95, "consumpt": [95, 122, 181, 191], "nrfx_nvmc_icache_dis": 95, "nrf_nvmc_hal": 96, "nrf_nvmc_has_partial_eras": 96, "nrf_nvmc_has_non_secure_oper": 96, "nrf_nvmc_has_uicr_eras": 96, "nrf_nvmc_mode_t": 96, "nrf_nvmc_mode_readonli": 96, "nrf_nvmc_mode_writ": 96, "nrf_nvmc_mode_eras": 96, "nrf_nvmc_ns_mode_t": 96, "nrf_nvmc_ns_mode_readonli": 96, "nrf_nvmc_ns_mode_writ": 96, "nrf_nvmc_ns_mode_eras": 96, "nrf_nvmc_ready_check": 96, "nrf_nvmc_type": 96, "nrf_nvmc_write_ready_check": 96, "taken": [96, 137, 197], "account": [96, 137, 220, 241], "soon": [96, 170], "nrf_nvmc_mode_set": 96, "nrf_nvmc_nonsecure_mode_set": 96, "nrf_nvmc_word_writ": 96, "give": [96, 133, 185, 196, 234], "simul": [96, 133], "caller": [96, 191], "recommend": [96, 191], "nrf_nvmc_byte_read": 96, "nrf_nvmc_halfword_read": 96, "nrf_nvmc_word_read": 96, "nrf_nvmc_buffer_read": 96, "dst": [96, 133, 135], "nrf_nvmc_page_erase_start": 96, "page_addr": 96, "nrf_nvmc_uicr_erase_start": 96, "nrf_nvmc_erase_all_start": 96, "purg": 96, "nrf_nvmc_partial_erase_duration_set": 96, "nrf_nvmc_partial_erase_duration_get": 96, "nrf_nvmc_page_partial_erase_start": 96, "nrf_nvmc": 97, "nrf_oscillators_h": 98, "nrf_oscillators_has_pl": 98, "nrf_oscillators_has_clock_quality_ind": 98, "qualiti": 98, "nrf_oscillators_has_lfxo_cap_as_int_valu": 98, "capacitor": 98, "nrf_oscillators_has_lfxo_bypass": 98, "oscillators_hfxo_cap_calcul": 98, "p_ficr_reg": 98, "cap_val": 98, "capacit": 98, "pf": 98, "nrf_oscillators_hfxo_cap_set": 98, "oscillators_lfxo_cap_calcul": 98, "nrf_oscillators_lfxo_cap_set": 98, "nrf_oscillators_lfxo_cap_extern": 98, "nrf_oscillators_lfxo_cap_t": 98, "nrf_oscillators_hfxo_clock_quality_t": 98, "nrf_oscillators_hfxo_clock_quality_non": 98, "xosc32m": 98, "nrf_oscillators_hfxo_clock_quality_start": 98, "toler": 98, "ftol_hfxo": 98, "nrf_oscillators_pll_freq_t": 98, "nrf_oscillators_pll_freq_64m": 98, "nrf_oscillators_pll_freq_128m": 98, "nrf_oscillators_hfxo_clock_quality_get": 98, "nrf_oscillators_typ": 98, "nrf_oscillators_pll_freq_set": 98, "freq": [98, 137, 138, 234], "nrf_oscillators_pll_freq_get": 98, "nrf_oscillators_lfxo_bypass_set": 98, "rail": [98, 104], "cap_valu": 98, "nrfx_pdm": 99, "puls": [99, 100, 111, 112, 113, 168, 178, 181], "densiti": [99, 100], "nrfx_pdm_max_buffer_s": 99, "nrfx_pdm_default_config": 99, "_pin_clk": 99, "_pin_din": 99, "mono": [99, 100, 168], "032": [99, 100], "clk": [99, 100, 101], "din": [99, 100, 101], "nrfx_pdm_event_handler_t": 99, "nrfx_pdm_evt_t": 99, "p_evt": 99, "nrfx_pdm_error_t": 99, "nrfx_pdm_no_error": 99, "nrfx_pdm_error_overflow": 99, "nrfx_pdm_init": 99, "nrfx_pdm_config_t": 99, "nrfx_pdm_reconfigur": 99, "nrfx_pdm_uninit": 99, "nrfx_pdm_init_check": 99, "nrfx_pdm_task_address_get": 99, "nrf_pdm_task_t": [99, 100, 101], "nrfx_pdm_enable_check": 99, "nrfx_pdm_start": 99, "nrfx_pdm_stop": 99, "nrfx_pdm_buffer_set": 99, "buffer_length": 99, "buffer_request": 99, "buffer_releas": 99, "nrf_pdm_mode_t": [99, 100, 101], "nrf_pdm_edge_t": [99, 100, 101], "clk_pin": [99, 101], "din_pin": [99, 101], "nrf_pdm_freq_t": [99, 100, 101], "clock_freq": [99, 101], "nrf_pdm_gain_t": [99, 100, 101], "gain_l": [99, 100, 101], "gain_r": [99, 100, 101], "nrf_pdm_hal": 100, "nrf_pdm_has_mclkconfig": 100, "nrf_pdm_has_ratio_config": 100, "nrf_pdm_has_dma_reg": 100, "nrf_pdm_has_dma_tasks_ev": 100, "nrf_pdm_gain_minimum": 100, "nrf_pdm_gain_default": 100, "nrf_pdm_gain_maximum": 100, "nrf_pdm_task_start": 100, "nrf_pdm_task_stop": 100, "nrf_pdm_event_t": [100, 101], "nrf_pdm_event_start": 100, "nrf_pdm_event_stop": 100, "nrf_pdm_event_end": 100, "maxcnt": [100, 168, 191, 197], "nrf_pdm_int_mask_t": [100, 101], "nrf_pdm_int_start": 100, "events_start": [100, 142], "nrf_pdm_int_stop": 100, "events_stop": [100, 142], "nrf_pdm_int_end": 100, "events_end": [100, 142], "nrf_pdm_freq_1000k": 100, "pdm_clk": 100, "000": [100, 234], "nrf_pdm_freq_1032k": 100, "nrf_pdm_freq_1067k": 100, "067": 100, "nrf_pdm_freq_1231k": 100, "231": 100, "nrf_pdm_freq_1280k": 100, "280": [100, 116], "nrf_pdm_freq_1333k": 100, "nrf_pdm_ratio_t": 100, "nrf_pdm_ratio_64x": 100, "nrf_pdm_ratio_80x": 100, "80": [100, 116, 142, 143], "nrf_pdm_mode_stereo": 100, "pair": [100, 122, 155, 195, 196], "per": [100, 116, 117, 122, 159], "nrf_pdm_mode_mono": 100, "nrf_pdm_edge_leftfal": 100, "nrf_pdm_edge_leftris": 100, "nrf_pdm_mclksrc_t": 100, "nrf_pdm_mclksrc_pclk32m": 100, "nrf_pdm_mclksrc_aclk": 100, "nrf_pdm_task_trigg": [100, 101], "nrf_pdm_type": [100, 101], "nrf_pdm_task_address_get": [100, 101], "nrf_pdm_event_check": [100, 101], "nrf_pdm_event_clear": [100, 101], "nrf_pdm_event_address_get": [100, 101], "nrf_pdm_int_en": [100, 101], "nrf_pdm_int_enable_check": [100, 101], "nrf_pdm_int_dis": [100, 101], "nrf_pdm_subscribe_set": [100, 101], "nrf_pdm_subscribe_clear": [100, 101], "nrf_pdm_publish_set": [100, 101], "nrf_pdm_publish_clear": [100, 101], "nrf_pdm_enabl": [100, 101], "nrf_pdm_disabl": [100, 101], "nrf_pdm_enable_check": [100, 101], "nrf_pdm_mode_set": [100, 101], "pdm_mode": [100, 101], "pdm_edg": [100, 101], "nrf_pdm_mode_get": [100, 101], "p_pdm_mode": [100, 101], "p_pdm_edg": [100, 101], "nrf_pdm_clock_set": [100, 101], "pdm_freq": [100, 101], "nrf_pdm_clock_get": [100, 101], "nrf_pdm_psel_connect": 100, "psel_clk": 100, "psel_din": 100, "nrf_pdm_clk_pin_get": 100, "nrf_pdm_din_pin_get": 100, "nrf_pdm_psel_disconnect": [100, 101], "nrf_pdm_gain_set": [100, 101], "nrf_pdm_gain_get": [100, 101], "p_gain_l": [100, 101], "p_gain_r": [100, 101], "nrf_pdm_buffer_set": 100, "num": 100, "ceil": 100, "nrf_pdm_buffer_get": [100, 101], "nrf_pdm_ratio_set": 100, "nrf_pdm_mclksrc_configur": 100, "mclksrc": 100, "nrfy_pdm": 101, "nrfy_pdm_periph_configur": 101, "nrfy_pdm_config_t": 101, "nrfy_pdm_int_init": 101, "nrfy_pdm_int_uninit": 101, "nrfy_pdm_events_process": 101, "nrfy_pdm_buffer_t": 101, "nrfy_pdm_buffer_set": 101, "nrfy_pdm_start": 101, "nrfy_pdm_abort": 101, "nrfy_pdm_pins_set": 101, "nrfy_pdm_pins_t": 101, "configurart": [101, 117, 183, 193], "nrfy_pdm_pins_get": 101, "nrfy_pdm_task_trigg": 101, "nrfy_pdm_task_address_get": 101, "nrfy_pdm_event_check": 101, "nrfy_pdm_event_clear": 101, "nrfy_pdm_event_address_get": 101, "nrfy_pdm_int_en": 101, "nrfy_pdm_int_enable_check": 101, "nrfy_pdm_int_dis": 101, "nrfy_pdm_subscribe_set": 101, "nrfy_pdm_subscribe_clear": 101, "nrfy_pdm_publish_set": 101, "nrfy_pdm_publish_clear": 101, "nrfy_pdm_en": 101, "nrfy_pdm_dis": 101, "nrfy_pdm_enable_check": 101, "nrfy_pdm_mode_set": 101, "nrfy_pdm_mode_get": 101, "nrfy_pdm_clock_set": 101, "nrfy_pdm_clock_get": 101, "nrfy_pdm_pin_disconnect": 101, "nrfy_pdm_gain_set": 101, "nrfy_pdm_gain_get": 101, "nrfy_pdm_buffer_get": 101, "p_buff": 101, "lenght": [101, 120], "nrf_pdm": 102, "nrfx_power_pofwarn_event_handler_t": 103, "failur": [103, 104, 133, 134, 191], "nrfx_power_sleep_event_handler_t": 103, "nrfx_power_sleep_evt_t": 103, "nrfx_power_usb_event_handler_t": 103, "nrfx_power_usb_evt_t": 103, "nrfx_power_supports_pofcon": 103, "nrfx_power_supports_pofcon_vddh": 103, "nrfx_power_supports_dcdcen_vddh": 103, "nrfx_power_mode_t": 103, "nrfx_power_mode_constlat": 103, "nrfx_power_mode_lowpwr": 103, "nrfx_power_sleep_evt_ent": 103, "enter": [103, 104, 120, 128, 137, 174, 179, 197, 240, 248], "wfi": [103, 104, 160], "wfe": [103, 104, 160], "mind": [103, 160], "waken": 103, "nrfx_power_sleep_evt_exit": 103, "exit": [103, 104, 185, 196, 197, 240], "nrfx_power_usb_evt_detect": 103, "connector": [103, 201], "plug": [103, 201], "nrfx_power_usb_evt_remov": 103, "nrfx_power_usb_evt_readi": 103, "nrfx_power_usb_state_t": 103, "nrfx_power_usb_state_disconnect": 103, "nrfx_power_usb_state_connect": 103, "nrfx_power_usb_state_readi": 103, "viewpoint": [103, 201], "nrfx_power_pof_handler_get": 103, "nrfx_power_usb_handler_get": 103, "nrfx_power_init": 103, "nrfx_power_config_t": 103, "nrfx_power_uninit": 103, "uninti": 103, "nrfx_power_init_check": 103, "nrfx_power_pof_init": 103, "nrfx_power_pofwarn_config_t": 103, "nrfx_power_pof_en": 103, "nrfx_power_pof_dis": 103, "softdevic": [103, 137], "init": [103, 239], "nrfx_power_pof_uninit": 103, "nrfx_power_sleepevt_init": 103, "nrfx_power_sleepevt_config_t": 103, "nrfx_power_sleepevt_uninit": 103, "nrfx_power_sleepevt_en": 103, "nrfx_power_sleepevt_dis": 103, "nrfx_power_constlat_mode_request": 103, "nrfx_power_constlat_mode_fre": 103, "nrfx_power_mode_get": 103, "nrfx_power_usbevt_init": 103, "nrfx_power_usbevt_config_t": 103, "nrfx_power_usbevt_uninit": 103, "nrfx_power_usbevt_en": 103, "nrfx_power_usbevt_dis": 103, "uninit": [103, 178, 181, 201], "nrfx_power_usbstatus_get": 103, "dcdcen": [103, 104], "dcdc": [103, 104], "instal": [103, 220], "dcdcenhv": 103, "hv": 103, "nrf_power_pof_thr_t": [103, 104], "nrf_power_pof_thrvddh_t": [103, 104], "thrvddh": 103, "en_ent": 103, "en_exit": 103, "nrf_power_h": 104, "nrf_power_has_const_lat": 104, "nrf_power_has_low_pow": 104, "nrf_power_has_sleepevt": 104, "nrf_power_has_usbreg": 104, "nrf_power_has_dcdcen_vddh": 104, "reg0": 104, "nrf_power_has_dcdcen": 104, "reg1": 104, "nrf_power_has_pofwarn": 104, "nrf_power_has_pofcon": 104, "nrf_power_has_pofcon_vddh": 104, "nrf_power_has_resetrea": 104, "nrf_power_has_resetreas_ctrlap": 104, "nrf_power_has_resetreas_lpcomp": 104, "nrf_power_has_resetreas_nfc": 104, "nrf_power_has_resetreas_vbu": 104, "vbu": [104, 127, 128, 202, 248], "nrf_power_has_mainregstatu": 104, "mainregstatu": 104, "nrf_power_has_gpregret": 104, "nrf_power_has_gpregret_arrai": 104, "treat": [104, 234], "nrfx_power_gpregret_count": 104, "nrf_power_has_semaphor": 104, "semaphor": [104, 153], "nrf_power_has_vreg_update_task_ev": 104, "nrf_power_has_vreg_config": 104, "nrf_power_has_abb": 104, "adapt": 104, "bodi": 104, "bias": 104, "abb": 104, "nrf_power_has_block_mod": 104, "nrf_power_has_bil": 104, "leakag": 104, "sensor": [104, 170, 171, 172], "bil": 104, "nrf_power_has_pm": 104, "pmic": 104, "nrf_power_events_abb_lock_count": 104, "abb_lock": 104, "nrf_power_task_t": 104, "nrf_power_task_constlat": 104, "nrf_power_task_lowpwr": 104, "nrf_power_task_semaphore_acquir": 104, "acquir": [104, 141, 142, 143, 153, 246], "nrf_power_task_semaphore_releas": 104, "nrf_power_task_regulator_upd": 104, "nrf_power_event_t": 104, "nrf_power_event_pofwarn": 104, "nrf_power_event_sleepent": 104, "nrf_power_event_sleepexit": 104, "nrf_power_event_usbdetect": 104, "nrf_power_event_usbremov": 104, "nrf_power_event_usbpwrrdi": 104, "nrf_power_event_semaphore_acquir": 104, "nrf_power_event_semaphore_releas": 104, "nrf_power_event_regulator_upd": 104, "nrf_power_event_abb_lock_0": 104, "nrf_power_event_abb_lock_1": 104, "nrf_power_int_mask_t": 104, "nrf_power_int_pofwarn_mask": 104, "pofwarn": [104, 126], "nrf_power_int_sleepenter_mask": 104, "sleepent": 104, "nrf_power_int_sleepexit_mask": 104, "sleepexit": 104, "nrf_power_int_usbdetected_mask": 104, "usbdetect": [104, 196, 202], "nrf_power_int_usbremoved_mask": 104, "usbremov": [104, 202], "nrf_power_int_usbpwrrdy_mask": 104, "usbpwrrdi": [104, 196, 202], "nrf_power_int_semaphore_acquir": 104, "semaphore_acquir": 104, "nrf_power_int_semaphore_releas": 104, "semaphore_releas": 104, "nrf_power_int_regulator_upd": 104, "regulator_upd": 104, "nrf_power_int_abb_lock_0": 104, "abb_lock_0": 104, "nrf_power_int_abb_lock_1": 104, "abb_lock_1": 104, "nrf_power_resetreas_mask_t": 104, "nrf_power_resetreas_resetpin_mask": 104, "resetpin": [104, 127], "nrf_power_resetreas_dog_mask": 104, "dog": 104, "nrf_power_resetreas_sreq_mask": 104, "sreq": [104, 127], "nrf_power_resetreas_lockup_mask": 104, "lockup": [104, 127, 128, 248], "nrf_power_resetreas_off_mask": 104, "nrf_power_resetreas_lpcomp_mask": 104, "nrf_power_resetreas_dif_mask": 104, "dif": [104, 127], "nrf_power_resetreas_nfc_mask": 104, "nrf_power_resetreas_vbus_mask": 104, "nrf_power_resetreas_ctrlap_mask": 104, "nrf_power_usbregstatus_mask_t": 104, "usbregstatu": [104, 202], "nrf_power_usbregstatus_get": 104, "nrf_power_usbregstatus_vbusdetect_mask": 104, "nrf_power_usbregstatus_outputrdy_mask": 104, "nrf_power_ramblock_t": 104, "nrf_power_ramblock_mask_t": 104, "nrf51": [104, 219], "segment": [104, 122], "p": 104, "style": [104, 245], "nrf_power_ramblock0": 104, "nrf_power_ramblock1": 104, "nrf_power_ramblock2": 104, "nrf_power_ramblock3": 104, "nrf_power_ramblock0_mask": 104, "nrf_power_ramblock1_mask": 104, "nrf_power_ramblock2_mask": 104, "nrf_power_ramblock3_mask": 104, "nrf_power_onoffram_t": 104, "nrf_power_onoffram_mask_t": 104, "nrf_power_onram0": 104, "nrf_power_offram0": 104, "switch": [104, 111, 115, 116, 117, 122, 127, 149, 162, 188, 191, 203], "nrf_power_onram1": 104, "nrf_power_offram1": 104, "nrf_power_onram2": 104, "nrf_power_offram2": 104, "nrf_power_onram3": 104, "nrf_power_offram3": 104, "nrf_power_onram0_mask": 104, "nrf_power_offram0_mask": 104, "nrf_power_onram1_mask": 104, "nrf_power_offram1_mask": 104, "nrf_power_onram2_mask": 104, "nrf_power_offram2_mask": 104, "nrf_power_onram3_mask": 104, "nrf_power_offram3_mask": 104, "nrf_power_pofthr_v21": 104, "nrf_power_pofthr_v23": 104, "nrf_power_pofthr_v25": 104, "nrf_power_pofthr_v27": 104, "nrf_power_pofthr_v17": 104, "nrf_power_pofthr_v18": 104, "nrf_power_pofthr_v19": 104, "nrf_power_pofthr_v20": 104, "nrf_power_pofthr_v22": 104, "nrf_power_pofthr_v24": 104, "nrf_power_pofthr_v26": 104, "nrf_power_pofthr_v28": 104, "nrf_power_pofthrvddh_v27": 104, "nrf_power_pofthrvddh_v28": 104, "nrf_power_pofthrvddh_v29": 104, "nrf_power_pofthrvddh_v30": 104, "nrf_power_pofthrvddh_v31": 104, "nrf_power_pofthrvddh_v32": 104, "nrf_power_pofthrvddh_v33": 104, "nrf_power_pofthrvddh_v34": 104, "nrf_power_pofthrvddh_v35": 104, "nrf_power_pofthrvddh_v36": 104, "nrf_power_pofthrvddh_v37": 104, "nrf_power_pofthrvddh_v38": 104, "nrf_power_pofthrvddh_v39": 104, "nrf_power_pofthrvddh_v40": 104, "nrf_power_pofthrvddh_v41": 104, "nrf_power_pofthrvddh_v42": 104, "nrf_power_mainregstatus_t": 104, "nrf_power_mainregstatus_norm": 104, "nrf_power_mainregstatus_high": 104, "nrf_power_rampower_t": 104, "rampow": 104, "even": [104, 185, 189, 192, 234], "nrf_power_rampower_s0pow": 104, "nrf_power_rampower_s1pow": 104, "s1": [104, 122, 203], "nrf_power_rampower_s2pow": 104, "s2": [104, 203], "nrf_power_rampower_s3pow": 104, "s3": [104, 203], "nrf_power_rampower_s4pow": 104, "s4": [104, 203], "nrf_power_rampower_s5pow": 104, "s5": [104, 203], "nrf_power_rampower_s6pow": 104, "s6": [104, 203], "nrf_power_rampower_s7pow": 104, "s7": [104, 203], "nrf_power_rampower_s8pow": 104, "s8": [104, 203], "nrf_power_rampower_s9pow": 104, "s9": [104, 203], "nrf_power_rampower_s10pow": 104, "s10": [104, 203], "nrf_power_rampower_s11pow": 104, "s11": [104, 203], "nrf_power_rampower_s12pow": 104, "s12": [104, 203], "nrf_power_rampower_s13pow": 104, "s13": [104, 203], "nrf_power_rampower_s14pow": 104, "s14": [104, 203], "nrf_power_rampower_s15pow": 104, "s15": [104, 203], "nrf_power_rampower_s0retent": 104, "nrf_power_rampower_s1retent": 104, "nrf_power_rampower_s2retent": 104, "nrf_power_rampower_s3retent": 104, "nrf_power_rampower_s4retent": 104, "nrf_power_rampower_s5retent": 104, "nrf_power_rampower_s6retent": 104, "nrf_power_rampower_s7retent": 104, "nrf_power_rampower_s8retent": 104, "nrf_power_rampower_s9retent": 104, "nrf_power_rampower_s10retent": 104, "nrf_power_rampower_s11retent": 104, "nrf_power_rampower_s12retent": 104, "nrf_power_rampower_s13retent": 104, "nrf_power_rampower_s14retent": 104, "nrf_power_rampower_s15retent": 104, "nrf_power_rampower_mask_t": 104, "nrf_power_rampower_s0power_mask": 104, "nrf_power_rampower_s1power_mask": 104, "nrf_power_rampower_s2power_mask": 104, "nrf_power_rampower_s3power_mask": 104, "nrf_power_rampower_s4power_mask": 104, "nrf_power_rampower_s5power_mask": 104, "nrf_power_rampower_s7power_mask": 104, "nrf_power_rampower_s8power_mask": 104, "nrf_power_rampower_s9power_mask": 104, "nrf_power_rampower_s10power_mask": 104, "nrf_power_rampower_s11power_mask": 104, "nrf_power_rampower_s12power_mask": 104, "nrf_power_rampower_s13power_mask": 104, "nrf_power_rampower_s14power_mask": 104, "nrf_power_rampower_s15power_mask": 104, "nrf_power_rampower_s0retention_mask": 104, "nrf_power_rampower_s1retention_mask": 104, "nrf_power_rampower_s2retention_mask": 104, "nrf_power_rampower_s3retention_mask": 104, "nrf_power_rampower_s4retention_mask": 104, "nrf_power_rampower_s5retention_mask": 104, "nrf_power_rampower_s7retention_mask": 104, "nrf_power_rampower_s8retention_mask": 104, "nrf_power_rampower_s9retention_mask": 104, "nrf_power_rampower_s10retention_mask": 104, "nrf_power_rampower_s11retention_mask": 104, "nrf_power_rampower_s12retention_mask": 104, "nrf_power_rampower_s13retention_mask": 104, "nrf_power_rampower_s14retention_mask": 104, "nrf_power_rampower_s15retention_mask": 104, "nrf_power_vreg_mask_t": 104, "nrf_power_vreg_1v8_mask": 104, "nrf_power_vreg_1v0_mask": 104, "nrf_power_vreg_0v8_mask": 104, "nrf_power_vreg_vs_mask": 104, "nrf_power_vreg_main1v8_mask": 104, "vregmain": [104, 126], "nrf_power_vreg_main1v0_mask": 104, "nrf_power_vreg_mainvs_mask": 104, "nrf_power_vreg_force_mask": 104, "nrf_power_op_point_t": 104, "nrf_power_op_point_0v4": 104, "nrf_power_op_point_0v5": 104, "nrf_power_op_point_0v6": 104, "nrf_power_op_point_0v8": 104, "nrf_power_override_value_t": 104, "nrf_power_override_value_power_down": 104, "nrf_power_override_value_power_up": 104, "nrf_power_task_trigg": 104, "nrf_power_typ": 104, "nrf_power_task_address_get": 104, "nrf_power_event_clear": 104, "nrf_power_event_check": 104, "nrf_power_event_get_and_clear": 104, "nrf_power_event_address_get": 104, "nrf_power_int_en": 104, "nrf_power_int_enable_check": 104, "nrf_power_int_enable_get": 104, "nrf_power_int_dis": 104, "nrf_power_subscribe_set": 104, "nrf_power_subscribe_clear": 104, "nrf_power_publish_set": 104, "nrf_power_publish_clear": 104, "nrf_power_resetreas_get": 104, "cumul": [104, 127, 248], "nrf_power_resetreas_clear": 104, "brown": [104, 127, 248], "nrf_power_powerstatus_get": 104, "lte": 104, "modem": 104, "nrf_power_ramstatus_get": 104, "ramstatu": 104, "nrf_power_pofcon_set": 104, "nrf_power_pofcon_get": 104, "p_enabl": 104, "we": 104, "nrf_power_pofcon_vddh_set": 104, "nrf_power_pofcon_vddh_get": 104, "nrf_power_dcdcen_set": 104, "side": [104, 195], "nrf_power_dcdcen_get": 104, "nrf_power_rampower_mask_on": 104, "section_mask": [104, 247], "nrf_power_rampower_mask_off": 104, "merg": [104, 196, 234], "nrf_power_rampower_mask_get": 104, "nrf_power_dcdcen_vddh_set": 104, "nrf_power_dcdcen_vddh_get": 104, "nrf_power_mainregstatus_get": 104, "nrf_power_usbregstatus_vbusdet_get": 104, "nrf_power_usbregstatus_outrdy_get": 104, "deriv": 104, "elaps": 104, "settl": 104, "nrf_power_abb_busy_check": 104, "domain_idx": 104, "nrf_power_abb_config_set": 104, "nrf_power_abb_config_t": 104, "nrf_power_abb_config_get": 104, "nrf_power_abb_force_lock_set": 104, "nrf_power_abb_force_lock_check": 104, "whose": [104, 234], "nrf_power_vreg_en": 104, "nrf_power_vreg_dis": 104, "nrf_power_vreg_enable_check": 104, "nrf_power_ulp_mode_set": 104, "ulp": 104, "ulv": 104, "nrf_power_ulp_mode_check": 104, "nrf_power_ulv_mode_set": 104, "nrf_power_ulv_mode_check": 104, "nrf_power_sem_status_get": 104, "nrf_power_bils_set": 104, "nrf_power_bils_check": 104, "nrf_power_pmic_set": 104, "nrf_power_pmic_check": 104, "nrf_power": [104, 105], "op_point": 104, "override_valu": 104, "powerup": 104, "override_en": 104, "nrfx_ppi": 106, "nrfx_ppi_all_app_channels_mask": 106, "nrfx_ppi_prog_app_channels_mask": 106, "nrfx_ppi_all_app_groups_mask": 106, "nrfx_ppi_free_al": 106, "nrfx_ppi_channel_alloc": 106, "nrf_ppi_channel_t": [106, 107], "nrfx_ppi_channel_fre": 106, "nrfx_ppi_channel_assign": 106, "eep": [106, 107, 241], "tep": [106, 107, 241], "fork_tep": [106, 107, 241], "fork": [106, 107, 241], "nrfx_ppi_channel_en": 106, "nrfx_ppi_channel_dis": 106, "nrfx_ppi_group_alloc": 106, "nrf_ppi_channel_group_t": [106, 107], "nrfx_ppi_group_fre": 106, "nrfx_ppi_channel_to_mask": 106, "nrf_ppi": [106, 108], "nrfx_ppi_channels_include_in_group": 106, "nrfx_ppi_channel_include_in_group": 106, "nrfx_ppi_channels_remove_from_group": 106, "nrfx_ppi_channel_remove_from_group": 106, "nrfx_ppi_group_clear": 106, "nrfx_ppi_group_en": 106, "nrfx_ppi_group_dis": 106, "nrfx_ppi_task_address_get": 106, "nrf_ppi_task_t": [106, 107], "nrfx_ppi_task_group_enable_address_get": 106, "nrfx_ppi_task_group_disable_address_get": 106, "nrf_ppi_hal": 107, "nrf_ppi_channel0": 107, "nrf_ppi_channel1": 107, "nrf_ppi_channel2": 107, "nrf_ppi_channel3": 107, "nrf_ppi_channel4": 107, "nrf_ppi_channel5": 107, "nrf_ppi_channel6": 107, "nrf_ppi_channel7": 107, "nrf_ppi_channel8": 107, "nrf_ppi_channel9": 107, "nrf_ppi_channel10": 107, "nrf_ppi_channel11": 107, "nrf_ppi_channel12": 107, "nrf_ppi_channel13": 107, "nrf_ppi_channel14": 107, "nrf_ppi_channel15": 107, "nrf_ppi_channel16": 107, "nrf_ppi_channel17": 107, "nrf_ppi_channel18": 107, "nrf_ppi_channel19": 107, "nrf_ppi_channel20": 107, "nrf_ppi_channel21": 107, "nrf_ppi_channel22": 107, "nrf_ppi_channel23": 107, "nrf_ppi_channel24": 107, "nrf_ppi_channel25": 107, "nrf_ppi_channel26": 107, "nrf_ppi_channel27": 107, "nrf_ppi_channel28": 107, "nrf_ppi_channel29": 107, "nrf_ppi_channel30": 107, "nrf_ppi_channel31": 107, "nrf_ppi_channel_group0": 107, "nrf_ppi_channel_group1": 107, "nrf_ppi_channel_group2": 107, "nrf_ppi_channel_group3": 107, "nrf_ppi_channel_group4": 107, "nrf_ppi_channel_group5": 107, "nrf_ppi_channel_include_t": 107, "belong": [107, 134, 243, 244], "nrf_ppi_channel_exclud": 107, "nrf_ppi_channel_includ": 107, "nrf_ppi_channel_enable_t": 107, "nrf_ppi_channel_dis": 107, "nrf_ppi_channel_en": 107, "nrf_ppi_task_chg0_en": 107, "nrf_ppi_task_chg0_di": 107, "nrf_ppi_task_chg1_en": 107, "nrf_ppi_task_chg1_di": 107, "nrf_ppi_task_chg2_en": 107, "nrf_ppi_task_chg2_di": 107, "nrf_ppi_task_chg3_en": 107, "nrf_ppi_task_chg3_di": 107, "nrf_ppi_task_chg4_en": 107, "nrf_ppi_task_chg4_di": 107, "nrf_ppi_task_chg5_en": 107, "nrf_ppi_task_chg5_di": 107, "nrf_ppi_typ": 107, "nrf_ppi_channel_enable_get": 107, "nrf_ppi_channels_disable_al": 107, "nrf_ppi_channels_en": 107, "nrf_ppi_channels_dis": 107, "nrf_ppi_channel_endpoint_setup": 107, "nrf_ppi_event_endpoint_setup": 107, "nrf_ppi_task_endpoint_setup": 107, "nrf_ppi_fork_endpoint_setup": 107, "nrf_ppi_channel_and_fork_endpoint_setup": 107, "nrf_ppi_channel_include_in_group": 107, "nrf_ppi_channels_group_set": 107, "assgin": 107, "nrf_ppi_channels_include_in_group": 107, "nrf_ppi_channel_remove_from_group": 107, "nrf_ppi_channels_remove_from_group": 107, "nrf_ppi_group_clear": 107, "nrf_ppi_group_en": 107, "nrf_ppi_group_dis": 107, "nrf_ppi_task_trigg": 107, "ppi_task": 107, "nrf_ppi_task_address_get": 107, "nrf_ppi_task_group_enable_address_get": 107, "nrf_ppi_task_group_disable_address_get": 107, "nrf_ppi_group_enable_task_get": 107, "nrf_ppi_group_disable_task_get": 107, "nrf_ppib_hal": 109, "nrf_ppib_tasks_send_count": 109, "nrf_ppib_events_receive_count": 109, "nrf_ppib_task_t": 109, "nrf_ppib_task_send_0": 109, "nrf_ppib_task_send_1": 109, "nrf_ppib_task_send_2": 109, "nrf_ppib_task_send_3": 109, "nrf_ppib_task_send_4": 109, "nrf_ppib_task_send_5": 109, "nrf_ppib_task_send_6": 109, "nrf_ppib_task_send_7": 109, "nrf_ppib_task_send_8": 109, "nrf_ppib_task_send_9": 109, "nrf_ppib_task_send_10": 109, "nrf_ppib_task_send_11": 109, "nrf_ppib_task_send_12": 109, "nrf_ppib_task_send_13": 109, "nrf_ppib_task_send_14": 109, "nrf_ppib_task_send_15": 109, "nrf_ppib_task_send_16": 109, "nrf_ppib_task_send_17": 109, "nrf_ppib_task_send_18": 109, "nrf_ppib_task_send_19": 109, "nrf_ppib_task_send_20": 109, "nrf_ppib_task_send_21": 109, "nrf_ppib_task_send_22": 109, "nrf_ppib_task_send_23": 109, "nrf_ppib_task_send_24": 109, "nrf_ppib_task_send_25": 109, "nrf_ppib_task_send_26": 109, "nrf_ppib_task_send_27": 109, "nrf_ppib_task_send_28": 109, "nrf_ppib_task_send_29": 109, "nrf_ppib_task_send_30": 109, "nrf_ppib_task_send_31": 109, "nrf_ppib_event_t": 109, "nrf_ppib_event_receive_0": 109, "nrf_ppib_event_receive_1": 109, "nrf_ppib_event_receive_2": 109, "nrf_ppib_event_receive_3": 109, "nrf_ppib_event_receive_4": 109, "nrf_ppib_event_receive_5": 109, "nrf_ppib_event_receive_6": 109, "nrf_ppib_event_receive_7": 109, "nrf_ppib_event_receive_8": 109, "nrf_ppib_event_receive_9": 109, "nrf_ppib_event_receive_10": 109, "nrf_ppib_event_receive_11": 109, "nrf_ppib_event_receive_12": 109, "nrf_ppib_event_receive_13": 109, "nrf_ppib_event_receive_14": 109, "nrf_ppib_event_receive_15": 109, "nrf_ppib_event_receive_16": 109, "nrf_ppib_event_receive_17": 109, "nrf_ppib_event_receive_18": 109, "nrf_ppib_event_receive_19": 109, "nrf_ppib_event_receive_20": 109, "nrf_ppib_event_receive_21": 109, "nrf_ppib_event_receive_22": 109, "nrf_ppib_event_receive_23": 109, "nrf_ppib_event_receive_24": 109, "nrf_ppib_event_receive_25": 109, "nrf_ppib_event_receive_26": 109, "nrf_ppib_event_receive_27": 109, "nrf_ppib_event_receive_28": 109, "nrf_ppib_event_receive_29": 109, "nrf_ppib_event_receive_30": 109, "nrf_ppib_event_receive_31": 109, "nrf_ppib_send_mask_t": 109, "nrf_ppib_send_0_mask": 109, "nrf_ppib_send_1_mask": 109, "nrf_ppib_send_2_mask": 109, "nrf_ppib_send_3_mask": 109, "nrf_ppib_send_4_mask": 109, "nrf_ppib_send_5_mask": 109, "nrf_ppib_send_6_mask": 109, "nrf_ppib_send_7_mask": 109, "nrf_ppib_send_8_mask": 109, "nrf_ppib_send_9_mask": 109, "nrf_ppib_send_10_mask": 109, "nrf_ppib_send_11_mask": 109, "nrf_ppib_send_12_mask": 109, "nrf_ppib_send_13_mask": 109, "nrf_ppib_send_14_mask": 109, "nrf_ppib_send_15_mask": 109, "nrf_ppib_send_16_mask": 109, "nrf_ppib_send_17_mask": 109, "nrf_ppib_send_18_mask": 109, "nrf_ppib_send_19_mask": 109, "nrf_ppib_send_20_mask": 109, "nrf_ppib_send_21_mask": 109, "nrf_ppib_send_22_mask": 109, "nrf_ppib_send_23_mask": 109, "nrf_ppib_send_24_mask": 109, "nrf_ppib_send_25_mask": 109, "nrf_ppib_send_26_mask": 109, "nrf_ppib_send_27_mask": 109, "nrf_ppib_send_28_mask": 109, "nrf_ppib_send_29_mask": 109, "nrf_ppib_send_30_mask": 109, "nrf_ppib_send_31_mask": 109, "nrf_ppib_send_task_get": 109, "nrf_ppib_receive_event_get": 109, "nrf_ppib_subscribe_set": 109, "nrf_ppib_typ": [109, 243], "nrf_ppib_subscribe_clear": 109, "nrf_ppib_publish_set": 109, "nrf_ppib_publish_clear": 109, "nrf_ppib_overflow_get_and_clear": 109, "oveflow": 109, "nrf_ppib_overflow_check": 109, "nrf_ppib": 110, "nrfx_pwm": 111, "nrfx_pwm_instanc": 111, "nrfx_pwm_default_config": 111, "_out_0": 111, "_out_1": 111, "_out_2": 111, "_out_3": 111, "top": [111, 112, 209], "1000": [111, 182], "nrfx_pwm_inst_handler_get": 111, "nrfx_pwm_handler_t": 111, "nrfx_pwm_evt_type_t": 111, "event_typ": [111, 133, 174, 215], "nrfx_pwm_flag_t": 111, "nrfx_pwm_flag_stop": 111, "duti": [111, 112, 113], "nrfx_pwm_flag_loop": 111, "nrf_pwm_step_trigg": [111, 112], "plai": [111, 112, 113], "nrfx_pwm_flag_signal_end_seq0": 111, "nrfx_pwm_flag_signal_end_seq1": 111, "nrfx_pwm_flag_no_evt_finish": 111, "suppress": [111, 148, 178, 181, 234], "nrfx_pwm_flag_start_via_task": 111, "nrfx_pwm_evt_finish": 111, "nrfx_pwm_evt_end_seq0": 111, "Its": [111, 160], "nrfx_pwm_evt_end_seq1": 111, "nrfx_pwm_evt_stop": 111, "nrfx_pwm_init": 111, "nrfx_pwm_t": 111, "nrfx_pwm_config_t": 111, "nrfx_pwm_reconfigur": 111, "nrfx_pwm_uninit": 111, "nrfx_pwm_init_check": 111, "nrfx_pwm_simple_playback": 111, "nrf_pwm_sequence_t": [111, 112, 113], "p_sequenc": 111, "playback_count": 111, "advantag": 111, "nrfx_pwm_complex_playback": 111, "p_sequence_0": 111, "p_sequence_1": 111, "nrfx_pwm_step": 111, "nrfx_pwm_stop": 111, "wait_until_stop": 111, "appear": [111, 188, 196], "pmw": 111, "signific": [111, 112, 146, 149, 153, 209, 240, 241], "poll": [111, 119, 178], "seq_id": [111, 112, 113], "nrfx_pwm_task_address_get": 111, "nrf_pwm_task_t": [111, 112, 113], "nrfx_pwm_event_address_get": 111, "nrf_pwm_event_t": [111, 112, 113], "nrf_pwm_type": [111, 112, 113], "instance_id": [111, 137, 174], "output_pin": [111, 113], "nrf_pwm_channel_count": [111, 112, 113], "nrf_pwm_pin_not_connect": [111, 112, 113], "pin_invert": 111, "nrf_pwm_clk_t": [111, 112, 113], "base_clock": [111, 112, 113], "nrf_pwm_mode_t": [111, 112, 113], "count_mod": [111, 113], "top_valu": [111, 112, 113], "nrf_pwm_dec_load_t": [111, 112, 113], "load_mod": [111, 113], "nrf_pwm_dec_step_t": [111, 112, 113], "step_mod": [111, 113], "touch": 111, "nrf_pwm_hal": 112, "nrf_pwm_has_dma_reg": 112, "nrf_pwm_has_short_loopsdone_seqstart": 112, "loopsdon": 112, "nrf_pwm_has_dma_tasks_ev": 112, "nrf_pwm_has_seq_cnt": 112, "nrf_pwm_inst_get": 112, "nrf_pwm_pins_set": [112, 113], "nrf_pwm_values_length": 112, "nrf_pwm_values_common_t": 112, "nrf_pwm_load_common": 112, "nrf_pwm_task_stop": 112, "nrf_pwm_task_seqstart0": 112, "nrf_pwm_task_seqstart1": 112, "nrf_pwm_task_nextstep": 112, "decod": [112, 115, 116, 196], "nrf_pwm_event_stop": 112, "emit": 112, "nrf_pwm_event_seqstarted0": 112, "nrf_pwm_event_seqstarted1": 112, "nrf_pwm_event_seqend0": 112, "nrf_pwm_event_seqend1": 112, "nrf_pwm_event_pwmperiodend": 112, "nrf_pwm_event_loopsdon": 112, "concaten": [112, 113, 234], "nrf_pwm_int_mask_t": [112, 113], "nrf_pwm_int_stopped_mask": 112, "nrf_pwm_int_seqstarted0_mask": 112, "nrf_pwm_int_seqstarted1_mask": 112, "nrf_pwm_int_seqend0_mask": 112, "nrf_pwm_int_seqend1_mask": 112, "nrf_pwm_int_pwmperiodend_mask": 112, "pwmperiodend": 112, "nrf_pwm_int_loopsdone_mask": 112, "nrf_pwm_short_mask_t": 112, "nrf_pwm_short_seqend0_stop_mask": 112, "nrf_pwm_short_seqend1_stop_mask": 112, "nrf_pwm_short_loopsdone_seqstart0_mask": 112, "nrf_pwm_short_loopsdone_seqstart1_mask": 112, "nrf_pwm_short_loopsdone_stop_mask": 112, "nrf_pwm_mode_up": 112, "nrf_pwm_mode_up_and_down": 112, "center": 112, "nrf_pwm_clk_16mhz": 112, "nrf_pwm_clk_8mhz": 112, "nrf_pwm_clk_4mhz": 112, "nrf_pwm_clk_2mhz": 112, "nrf_pwm_clk_1mhz": 112, "nrf_pwm_clk_500khz": 112, "nrf_pwm_clk_250khz": 112, "nrf_pwm_clk_125khz": 112, "spread": 112, "1st": 112, "nrf_pwm_load_group": 112, "2nd": 112, "nrf_pwm_load_individu": 112, "3rd": 112, "4th": 112, "nrf_pwm_load_wave_form": 112, "nrf_pwm_step_auto": 112, "nrf_pwm_task_trigg": [112, 113], "nrf_pwm_task_address_get": [112, 113], "nrf_pwm_event_clear": [112, 113], "nrf_pwm_event_check": [112, 113], "nrf_pwm_event_address_get": [112, 113], "nrf_pwm_shorts_en": [112, 113], "nrf_pwm_shorts_dis": [112, 113], "nrf_pwm_shorts_set": [112, 113], "nrf_pwm_int_en": [112, 113], "nrf_pwm_int_dis": [112, 113], "nrf_pwm_int_set": [112, 113], "nrf_pwm_int_enable_check": [112, 113], "nrf_pwm_subscribe_set": [112, 113], "nrf_pwm_subscribe_clear": [112, 113], "nrf_pwm_publish_set": [112, 113], "nrf_pwm_publish_clear": [112, 113], "nrf_pwm_enabl": [112, 113], "nrf_pwm_disabl": [112, 113], "nrf_pwm_enable_check": [112, 113], "out_pin": [112, 113], "nrf_pwm_pin_get": [112, 113], "nrf_pwm_configur": [112, 113], "nrf_pwm_sequence_set": [112, 113], "p_seq": [112, 113], "nrf_pwm_seq_ptr_set": 112, "nrf_pwm_seq_cnt_set": 112, "nrf_pwm_seq_refresh_set": 112, "refresh": 112, "spent": 112, "nrf_pwm_seq_end_delay_set": 112, "end_delai": 112, "nrf_pwm_decoder_set": [112, 113], "dec_load": [112, 113], "dec_step": [112, 113], "nrf_pwm_loop_set": [112, 113], "loop_count": [112, 113], "nrf_pwm_seqstart_task_get": [112, 113], "nrf_pwm_seqend_event_get": [112, 113], "nrf_pwm_values_grouped_t": 112, "nrf_pwm": [112, 114], "group_0": 112, "group_1": 112, "nrf_pwm_values_individual_t": 112, "channel_0": 112, "channel_1": 112, "channel_2": 112, "channel_3": 112, "nrf_pwm_values_wave_form_t": 112, "counter_top": 112, "nrf_pwm_values_t": 112, "p_common": 112, "p_individu": 112, "p_wave_form": 112, "p_raw": 112, "raw": [112, 170], "seq": 112, "enddelai": 112, "complex": [112, 122], "conveni": [112, 220], "nrfy_pwm": 113, "nrfy_pwm_periph_configur": 113, "nrfy_pwm_config_t": 113, "nrfy_pwm_int_init": 113, "nrfy_pwm_int_uninit": 113, "nrfy_pwm_events_process": 113, "nrfy_pwm_start": 113, "nrfy_pwm_abort": 113, "nrfy_pwm_task_trigg": 113, "nrfy_pwm_task_address_get": 113, "nrfy_pwm_event_clear": 113, "nrfy_pwm_event_check": 113, "nrfy_pwm_event_address_get": 113, "nrfy_pwm_shorts_en": 113, "nrfy_pwm_shorts_dis": 113, "nrfy_pwm_shorts_set": 113, "nrfy_pwm_int_en": 113, "nrfy_pwm_int_dis": 113, "nrfy_pwm_int_set": 113, "nrfy_pwm_int_enable_check": 113, "nrfy_pwm_subscribe_set": 113, "nrfy_pwm_subscribe_clear": 113, "nrfy_pwm_publish_set": 113, "nrfy_pwm_publish_clear": 113, "nrfy_pwm_en": 113, "nrfy_pwm_dis": 113, "nrfy_pwm_enable_check": 113, "nrfy_pwm_pins_set": 113, "nrfy_pwm_pin_get": 113, "nrfy_pwm_configur": 113, "nrfy_pwm_sequence_set": 113, "nrfy_pwm_decoder_set": 113, "nrfy_pwm_loop_set": 113, "nrfy_pwm_seqstart_task_get": 113, "nrfy_pwm_seqend_event_get": 113, "nrfx_qdec": 115, "quadratur": [115, 116], "nrfx_qdec_inst": 115, "nrfx_qdec_default_config": 115, "_pin_a": 115, "_pin_b": 115, "_pin_l": 115, "16384": [115, 116], "debounc": [115, 116, 117], "encod": [115, 205], "b": [115, 116, 117, 234], "nrfx_qdec_event_handler_t": 115, "nrfx_qdec_event_t": 115, "nrfx_qdec_init": 115, "nrfx_qdec_t": 115, "nrfx_qdec_config_t": 115, "nrfx_qdec_reconfigur": 115, "nrfx_qdec_uninit": 115, "nrfx_qdec_init_check": 115, "nrfx_qdec_en": 115, "nrfx_qdec_dis": 115, "nrfx_qdec_accumulators_read": 115, "p_acc": [115, 117], "p_accdbl": [115, 117], "accumul": [115, 116, 117], "nrfx_qdec_task_address_get": 115, "nrf_qdec_task_t": [115, 116, 117], "nrfx_qdec_event_address_get": 115, "nrf_qdec_event_t": [115, 116, 117], "nrf_qdec_typ": [115, 116, 117], "nrf_qdec_reportper_t": [115, 116, 117], "nrf_qdec_sampleper_t": [115, 116, 117], "samplep": [115, 116, 117], "microsecond": [115, 116, 117, 137, 159, 174, 175, 234, 237, 240], "psela": 115, "pselb": 115, "psell": 115, "ledpr": [115, 116, 117], "nrf_qdec_ledpol_t": [115, 116, 117], "ledpol": [115, 117], "dbfen": [115, 117], "sample_inten": 115, "nrfx_qdec_sample_data_evt_t": 115, "nrfx_qdec_report_data_evt_t": 115, "acc": [115, 116, 117], "accdbl": [115, 116, 117], "nrf_qdec_hal": 116, "nrf_qdec_has_task_rdclracc": 116, "rdclracc": 116, "nrf_qdec_has_task_rdclrdbl": 116, "rdclrdbl": 116, "nrf_qdec_has_event_dblrdi": 116, "dblrdy": 116, "nrf_qdec_has_event_stop": 116, "nrf_qdec_ledpre_default": 116, "nrf_qdec_task_start": 116, "nrf_qdec_task_stop": 116, "nrf_qdec_task_readclracc": 116, "nrf_qdec_task_rdclracc": 116, "nrf_qdec_task_rdclrdbl": 116, "nrf_qdec_event_samplerdi": 116, "nrf_qdec_event_reportrdi": 116, "nrf_qdec_event_accof": 116, "nrf_qdec_event_dblrdi": 116, "displac": 116, "nrf_qdec_event_stop": 116, "nrf_qdec_short_mask_t": 116, "nrf_qdec_short_reportrdy_readclracc_mask": 116, "readclracc": 116, "nrf_qdec_short_samplerdy_stop_mask": 116, "samplerdi": 116, "nrf_qdec_int_mask_t": [116, 117], "nrf_qdec_int_samplerdy_mask": 116, "nrf_qdec_int_reportrdy_mask": 116, "nrf_qdec_int_accof_mask": 116, "accof": 116, "nrf_qdec_enable_t": 116, "nrf_qdec_dis": [116, 117], "periper": 116, "nrf_qdec_en": [116, 117], "nrf_qdec_dbfen_t": 116, "nrf_qdec_dbfen_dis": [116, 117], "nrf_qdec_dbfen_en": [116, 117], "nrf_qdec_lepol_active_low": 116, "nrf_qdec_lepol_active_high": 116, "nrf_qdec_sampleper_128u": 116, "nrf_qdec_sampleper_256u": 116, "nrf_qdec_sampleper_512u": 116, "nrf_qdec_sampleper_1024u": 116, "1024": [116, 155], "nrf_qdec_sampleper_2048u": 116, "2048": [116, 155], "nrf_qdec_sampleper_4096u": 116, "4096": [116, 155], "nrf_qdec_sampleper_8192u": 116, "8192": 116, "nrf_qdec_sampleper_16384u": 116, "nrf_qdec_reportper_1": 116, "nrf_qdec_reportper_10": 116, "nrf_qdec_reportper_40": 116, "nrf_qdec_reportper_80": 116, "nrf_qdec_reportper_120": 116, "120": 116, "nrf_qdec_reportper_160": 116, "160": 116, "nrf_qdec_reportper_200": 116, "nrf_qdec_reportper_240": 116, "240": 116, "nrf_qdec_reportper_280": 116, "nrf_qdec_enable_get": [116, 117], "nrf_qdec_int_en": [116, 117], "nrf_qdec_int_dis": [116, 117], "nrf_qdec_int_enable_check": [116, 117], "nrf_qdec_dbfen_get": [116, 117], "phase_a_pin": 116, "phase_b_pin": 116, "led_pin": [116, 117], "nrf_qdec_phase_a_pin_get": [116, 117], "nrf_qdec_phase_b_pin_get": [116, 117], "nrf_qdec_led_pin_get": [116, 117], "nrf_qdec_task_trigg": [116, 117], "nrf_qdec_task_address_get": [116, 117], "nrf_qdec_event_clear": [116, 117], "nrf_qdec_event_check": [116, 117], "nrf_qdec_event_address_get": [116, 117], "nrf_qdec_shorts_en": [116, 117], "nrf_qdec_shorts_dis": [116, 117], "nrf_qdec_sampleper_to_valu": [116, 117], "nrf_qdec_sampleper_get": [116, 117], "nrf_qdec_sampleper_set": [116, 117], "nrf_qdec_sample_get": [116, 117], "nrf_qdec_acc_get": [116, 117], "nrf_qdec_accread_get": [116, 117], "accread": [116, 117], "nrf_qdec_accdbl_get": [116, 117], "nrf_qdec_accdblread_get": [116, 117], "accdblread": [116, 117], "nrf_qdec_ledpre_set": [116, 117], "time_u": [116, 117, 174, 175, 237], "nrf_qdec_ledpre_get": [116, 117], "gap": [116, 117], "nrf_qdec_reportper_set": [116, 117], "nrf_qdec_reportper_get": [116, 117], "nrf_qdec_reportper_to_valu": [116, 117], "nrf_qdec_ledpol_set": [116, 117], "pol": [116, 117], "nrf_qdec_ledpol_get": [116, 117], "nrfy_qdec": 117, "nrfy_qdec_periph_configur": 117, "nrfy_qdec_config_t": 117, "nrfy_qdec_int_init": 117, "nrfy_qdec_int_uninit": 117, "nrfy_qdec_events_process": 117, "nrfy_qdec_accumulators_read": 117, "nrfy_qdec_pins_get": 117, "nrfy_qdec_pins_t": 117, "nrfy_qdec_pins_set": 117, "nrfy_qdec_en": 117, "nrfy_qdec_dis": 117, "nrfy_qdec_enable_get": 117, "nrfy_qdec_int_en": 117, "nrfy_qdec_int_dis": 117, "nrfy_qdec_int_enable_check": 117, "nrfy_qdec_dbfen_en": 117, "nrfy_qdec_dbfen_dis": 117, "nrfy_qdec_dbfen_get": 117, "nrfy_qdec_a_pin_get": 117, "nrfy_qdec_b_pin_get": 117, "nrfy_qdec_led_pin_get": 117, "nrfy_qdec_task_trigg": 117, "nrfy_qdec_task_address_get": 117, "nrfy_qdec_event_clear": 117, "nrfy_qdec_event_check": 117, "nrfy_qdec_event_address_get": 117, "nrfy_qdec_shorts_en": 117, "nrfy_qdec_shorts_dis": 117, "nrfy_qdec_sampleper_to_valu": 117, "nrfy_qdec_sampleper_set": 117, "nrfy_qdec_sampleper_get": 117, "nrfy_qdec_sample_get": 117, "nrfy_qdec_acc_get": 117, "nrfy_qdec_accread_get": 117, "nrfy_qdec_accdbl_get": 117, "nrfy_qdec_accdblread_get": 117, "nrfy_qdec_ledpre_set": 117, "nrfy_qdec_ledpre_get": 117, "nrfy_qdec_ledpol_set": 117, "nrfy_qdec_ledpol_get": 117, "nrfy_qdec_reportper_set": 117, "nrfy_qdec_reportper_get": 117, "nrfy_qdec_reportper_to_valu": 117, "a_pin": 117, "b_pin": 117, "nrf_qdec": 118, "nrfx_qspi": 119, "quad": [119, 120], "nrfx_qspi_default_config": 119, "_pin_csn": [119, 152], "_pin_io0": 119, "_pin_io1": 119, "_pin_io2": 119, "_pin_io3": 119, "fast_read": [119, 120], "opcod": [119, 120], "pp": [119, 120], "deep": [119, 120], "o": [119, 120], "nrfx_qspi_default_cinstr": 119, "opc": 119, "len": [119, 120], "nrfx_qspi_handler_t": 119, "nrfx_qspi_evt_t": 119, "nrfx_qspi_event_don": 119, "nrfx_qspi_evt_ext_type_t": 119, "obtain": [119, 138, 141], "nrfx_qspi_event_extended_get": 119, "nrfx_qspi_event_non": 119, "nrfx_qspi_event_write_don": 119, "nrfx_qspi_event_read_don": 119, "nrfx_qspi_event_erase_don": 119, "nrfx_qspi_init": 119, "nrfx_qspi_config_t": 119, "sure": [119, 185, 234], "like": [119, 220, 234, 237], "circuit": 119, "tri": 119, "On": [119, 122, 126, 148, 181, 239], "chapter": [119, 148, 181, 234], "nrfx_qspi_reconfigur": 119, "deactiv": [119, 120, 189, 192], "nrfx_qspi_uninit": 119, "nrfx_qspi_deactiv": 119, "nrfx_qspi_init_check": 119, "nrfx_qspi_read": 119, "rx_buffer_length": [119, 152], "src_address": 119, "emiss": [119, 157], "nrf_qspi_task_readstart": [119, 120], "nrf_qspi_event_readi": [119, 120], "commiss": 119, "nrfx_qspi_writ": 119, "dst_address": 119, "rememb": [119, 120, 159], "nrf_qspi_task_writestart": [119, 120], "nrfx_qspi_eras": 119, "nrf_qspi_erase_len_t": [119, 120], "start_address": 119, "64kb": 119, "periher": 119, "ommit": [119, 120], "nrfx_qspi_chip_eras": 119, "nrfx_qspi_evt_ext_t": 119, "nrfx_qspi_xfer_buffered_check": 119, "test": [119, 122, 159, 185, 188, 191, 196, 232, 234], "wip": 119, "nrfx_qspi_cinstr_xf": 119, "nrf_qspi_cinstr_conf_t": [119, 120], "necessari": [119, 120], "io2_level": [119, 120], "io3_level": [119, 120], "io2": [119, 120], "Such": [119, 197], "suitabl": [119, 141, 220], "interpret": [119, 196], "wp": 119, "safer": [119, 196], "noth": 119, "nrfx_qspi_cinstr_quick_send": 119, "nrf_qspi_cinstr_len_t": [119, 120], "simpler": 119, "arbitrari": [119, 141], "nrf_qspi_cinstr_len_1b": [119, 120], "transfer_length": 119, "least": [119, 146, 149, 153, 168, 188, 191, 215, 234, 240], "becom": [119, 191, 196, 249], "nrfx_qspi_xip_encrypt": 119, "nrf_qspi_encryption_t": [119, 120], "nrfx_qspi_dma_encrypt": 119, "xip_offset": [119, 120], "nrf_qspi_pins_t": [119, 120], "nrf_qspi_prot_conf_t": [119, 120], "prot_if": 119, "nrf_qspi_phy_conf_t": [119, 120], "phy_if": 119, "nrfx_qspi_evt_ext_erase_t": 119, "nrfx_qspi_evt_ext_xfer_t": 119, "xfer": 119, "nrf_qspi_hal": 120, "nrf_qspi_has_xipen": 120, "xipen": 120, "nrf_qspi_has_xip_enc": 120, "nrf_qspi_has_dma_enc": 120, "nrf_qspi_has_mode_1": 120, "nrf_qspi_base_clock_freq": 120, "nrf_qspi_pin_not_connect": 120, "nrf_qspi_pins_set": 120, "csn": [120, 148, 149, 150, 152, 153], "io0": 120, "io1": 120, "nrf_qspi_pin_v": 120, "nrf_qspi_task_t": 120, "nrf_qspi_task_activ": 120, "nrf_qspi_task_erasestart": 120, "nrf_qspi_task_deactiv": 120, "nrf_qspi_event_t": 120, "nrf_qspi_int_mask_t": 120, "nrf_qspi_int_ready_mask": 120, "nrf_qspi_frequency_t": 120, "nrf_qspi_freq_div1": 120, "nrf_qspi_freq_div2": 120, "nrf_qspi_freq_div3": 120, "nrf_qspi_freq_div4": 120, "nrf_qspi_freq_div5": 120, "nrf_qspi_freq_div6": 120, "nrf_qspi_freq_div7": 120, "nrf_qspi_freq_div8": 120, "nrf_qspi_freq_div9": 120, "nrf_qspi_freq_div10": 120, "nrf_qspi_freq_div11": 120, "nrf_qspi_freq_div12": 120, "nrf_qspi_freq_div13": 120, "nrf_qspi_freq_div14": 120, "nrf_qspi_freq_div15": 120, "nrf_qspi_freq_div16": 120, "nrf_qspi_readoc_t": 120, "nrf_qspi_readoc_fastread": 120, "0x0b": 120, "nrf_qspi_readoc_read2o": 120, "dual": 120, "read2o": 120, "0x3b": 120, "nrf_qspi_readoc_read2io": 120, "read2io": 120, "0xbb": 120, "nrf_qspi_readoc_read4o": 120, "read4o": 120, "0x6b": 120, "nrf_qspi_readoc_read4io": 120, "read4io": 120, "0xeb": 120, "nrf_qspi_writeoc_t": 120, "nrf_qspi_writeoc_pp": 120, "0x02": 120, "nrf_qspi_writeoc_pp2o": 120, "pp2o": 120, "0xa2": 120, "nrf_qspi_writeoc_pp4o": 120, "pp4o": 120, "0x32": 120, "nrf_qspi_writeoc_pp4io": 120, "0x38": 120, "nrf_qspi_addrmode_t": 120, "nrf_qspi_addrmode_24bit": 120, "nrf_qspi_addrmode_32bit": 120, "nrf_qspi_spi_mode_t": 120, "nrf_qspi_mode_0": 120, "cpol": 120, "cpha": [120, 148], "nrf_qspi_mode_1": 120, "nrf_qspi_addrconfig_mode_t": 120, "nrf_qspi_addrconf_mode_noinstr": 120, "nrf_qspi_addrconf_mode_opcod": 120, "nrf_qspi_addrconf_mode_opbyte0": 120, "byte0": 120, "nrf_qspi_addrconf_mode_al": 120, "byte1": 120, "nrf_qspi_erase_len_4kb": 120, "0x20": 120, "nrf_qspi_erase_len_64kb": 120, "0xd8": 120, "nrf_qspi_erase_len_al": 120, "0xc7": 120, "nrf_qspi_cinstr_len_2b": 120, "cinstrdat0": 120, "nrf_qspi_cinstr_len_3b": 120, "nrf_qspi_cinstr_len_4b": 120, "byte2": 120, "nrf_qspi_cinstr_len_5b": 120, "byte3": 120, "nrf_qspi_cinstr_len_6b": 120, "cinstrdat1": 120, "byte4": 120, "nrf_qspi_cinstr_len_7b": 120, "byte5": 120, "nrf_qspi_cinstr_len_8b": 120, "byte6": 120, "nrf_qspi_cinstr_len_9b": 120, "byte7": 120, "nrf_qspi_task_trigg": 120, "nrf_qspi_typ": 120, "nrf_qspi_task_address_get": 120, "nrf_qspi_event_clear": 120, "nrf_qspi_event_check": 120, "nrf_qspi_event_address_get": 120, "nrf_qspi_int_en": 120, "nrf_qspi_int_dis": 120, "nrf_qspi_int_enable_check": 120, "nrf_qspi_en": 120, "nrf_qspi_dis": 120, "nrf_qspi_pins_get": 120, "nrf_qspi_xip_offset_set": 120, "xipoffset": 120, "nrf_qspi_ifconfig0_set": 120, "ifconfig0": 120, "nrf_qspi_ifconfig0_raw_set": 120, "regval": 120, "explicit": 120, "nrf_qspi_ifconfig0_raw_get": 120, "nrf_qspi_ifconfig1_set": 120, "ifconfig1": 120, "nrf_qspi_addrconfig_set": 120, "nrf_qspi_addrconfig_conf_t": 120, "addrconf": 120, "nrf_qspi_write_buffer_set": 120, "dest_addr": 120, "nrf_qspi_read_buffer_set": 120, "src_addr": 120, "nrf_qspi_erase_ptr_set": 120, "erase_addr": 120, "nrf_qspi_erase_ptr_get": 120, "nrf_qspi_erase_len_get": 120, "nrf_qspi_status_reg_get": 120, "nrf_qspi_sreg_get": 120, "nrf_qspi_busy_check": 120, "nrf_qspi_cinstrdata_set": 120, "nrf_qspi_cinstrdata_get": 120, "nrf_qspi_cinstr_transfer_start": 120, "nrf_qspi_cinstr_long_transfer_start": 120, "nrf_qspi_cinstr_long_transfer_is_ongo": 120, "nrf_qspi_cinstr_long_transfer_continu": 120, "nrf_qspi_xip_set": 120, "nrf_qspi_xip_encryption_configur": 120, "nrf_qspi_xip_encryption_set": 120, "nrf_qspi_dma_encryption_configur": 120, "nrf_qspi_dma_encryption_set": 120, "nrf_qspi_iftiming_set": 120, "rxdelai": [120, 149, 150], "625": [120, 148, 149, 150], "nrf_qspi": [120, 121], "csn_pin": [120, 150, 152, 153], "io0_pin": 120, "mosi": [120, 145, 146, 148, 149, 150, 152, 153], "io1_pin": 120, "io2_pin": 120, "io3_pin": 120, "wipwait": 120, "wren": 120, "addres": 120, "readoc": 120, "writeoc": 120, "addrmod": 120, "dpmconfig": 120, "dpm": 120, "sck_delai": 120, "tshsl": 120, "twhsl": 120, "tshwl": 120, "62": 120, "5n": 120, "dpmen": 120, "spi_mod": [120, 146, 149, 150, 153], "sck_freq": 120, "nrf_radio_h": 122, "nrf_radio_dppi_offset": 122, "nrf_radio_task_t": 122, "nrf_radio_task_txen": 122, "nrf_radio_task_rxen": 122, "nrf_radio_task_start": 122, "nrf_radio_task_stop": 122, "nrf_radio_task_dis": 122, "nrf_radio_task_rssistart": 122, "rssi": 122, "nrf_radio_task_rssistop": 122, "nrf_radio_task_bcstart": 122, "nrf_radio_task_bcstop": 122, "nrf_radio_task_edstart": 122, "energi": 122, "ieee": 122, "nrf_radio_task_edstop": 122, "nrf_radio_task_ccastart": 122, "assess": 122, "nrf_radio_task_ccastop": 122, "nrf_radio_event_t": 122, "nrf_radio_event_readi": 122, "nrf_radio_event_address": 122, "nrf_radio_event_payload": 122, "nrf_radio_event_end": 122, "nrf_radio_event_dis": 122, "nrf_radio_event_devmatch": 122, "nrf_radio_event_devmiss": 122, "nrf_radio_event_rssiend": 122, "nrf_radio_event_bcmatch": 122, "nrf_radio_event_crcok": 122, "nrf_radio_event_crcerror": 122, "nrf_radio_event_framestart": 122, "nrf_radio_event_edend": 122, "nrf_radio_event_edstop": 122, "nrf_radio_event_ccaidl": 122, "wireless": 122, "medium": [122, 126], "nrf_radio_event_ccabusi": 122, "nrf_radio_event_ccastop": 122, "cca": 122, "nrf_radio_event_rateboost": 122, "ble_lr": 122, "ci": 122, "ble_lr125kbit": 122, "ble_lr500kbit": 122, "nrf_radio_event_txreadi": 122, "path": [122, 220], "nrf_radio_event_rxreadi": 122, "nrf_radio_event_mhrmatch": 122, "found": 122, "nrf_radio_event_phyend": 122, "bleieee802154_250kbit": 122, "nrf_radio_event_sync": 122, "preambl": 122, "nrf_radio_event_ctepres": 122, "cte": 122, "nrf_radio_int_mask_t": 122, "nrf_radio_int_ready_mask": 122, "nrf_radio_int_address_mask": 122, "nrf_radio_int_payload_mask": 122, "nrf_radio_int_end_mask": 122, "nrf_radio_int_disabled_mask": 122, "nrf_radio_int_devmatch_mask": 122, "devmatch": 122, "nrf_radio_int_devmiss_mask": 122, "devmiss": 122, "nrf_radio_int_rssiend_mask": 122, "rssiend": 122, "nrf_radio_int_bcmatch_mask": 122, "bcmatch": 122, "nrf_radio_int_crcok_mask": 122, "crcok": 122, "nrf_radio_int_crcerror_mask": 122, "crcerror": 122, "nrf_radio_int_framestart_mask": 122, "nrf_radio_int_edend_mask": 122, "edend": 122, "nrf_radio_int_edstopped_mask": 122, "edstop": 122, "nrf_radio_int_ccaidle_mask": 122, "ccaidl": 122, "nrf_radio_int_ccabusy_mask": 122, "ccabusi": 122, "nrf_radio_int_ccastopped_mask": 122, "ccastop": 122, "nrf_radio_int_rateboost_mask": 122, "rateboost": 122, "nrf_radio_int_txready_mask": 122, "txreadi": 122, "nrf_radio_int_rxready_mask": 122, "nrf_radio_int_mhrmatch_mask": 122, "mhrmatch": 122, "nrf_radio_int_phyend_mask": 122, "phyend": 122, "nrf_radio_int_sync_mask": 122, "nrf_radio_int_ctepresent_mask": 122, "ctepres": 122, "nrf_radio_short_mask_t": 122, "nrf_radio_short_ready_start_mask": 122, "nrf_radio_short_end_disable_mask": 122, "nrf_radio_short_disabled_txen_mask": 122, "txen": 122, "nrf_radio_short_disabled_rxen_mask": 122, "rxen": 122, "nrf_radio_short_address_rssistart_mask": 122, "rssistart": 122, "nrf_radio_short_end_start_mask": 122, "nrf_radio_short_address_bcstart_mask": 122, "bcstart": 122, "nrf_radio_short_disabled_rssistop_mask": 122, "rssistop": 122, "nrf_radio_short_rxready_ccastart_mask": 122, "ccastart": 122, "nrf_radio_short_ccaidle_txen_mask": 122, "nrf_radio_short_ccabusy_disable_mask": 122, "nrf_radio_short_framestart_bcstart_mask": 122, "nrf_radio_short_ready_edstart_mask": 122, "edstart": 122, "nrf_radio_short_edend_disable_mask": 122, "nrf_radio_short_ccaidle_stop_mask": 122, "nrf_radio_short_txready_start_mask": 122, "nrf_radio_short_rxready_start_mask": 122, "nrf_radio_short_phyend_disable_mask": 122, "nrf_radio_short_phyend_start_mask": 122, "nrf_radio_cca_mode_t": 122, "nrf_radio_cca_mode_": 122, "Will": 122, "whenev": [122, 191], "nrf_radio_cca_mode_carri": 122, "carrier": 122, "seen": [122, 197], "compliant": [122, 181], "nrf_radio_cca_mode_carrier_and_": 122, "AND": [122, 232, 233, 240], "nrf_radio_cca_mode_carrier_or_": 122, "nrf_radio_cca_mode_ed_test1": 122, "ed": [122, 182, 183], "averag": [122, 142, 143], "nrf_radio_state_t": 122, "nrf_radio_state_dis": 122, "nrf_radio_state_rxru": 122, "nrf_radio_state_rxidl": 122, "nrf_radio_state_rx": 122, "nrf_radio_state_rxdis": 122, "nrf_radio_state_txru": 122, "nrf_radio_state_txidl": 122, "nrf_radio_state_tx": 122, "nrf_radio_state_txdis": 122, "nrf_radio_txpower_t": 122, "nrf_radio_txpower_pos10dbm": 122, "dbm": [122, 214], "nrf_radio_txpower_pos9dbm": 122, "nrf_radio_txpower_pos8dbm": 122, "nrf_radio_txpower_pos7dbm": 122, "nrf_radio_txpower_pos6dbm": 122, "nrf_radio_txpower_pos5dbm": 122, "nrf_radio_txpower_pos4dbm": 122, "nrf_radio_txpower_pos3dbm": 122, "nrf_radio_txpower_pos2dbm": 122, "nrf_radio_txpower_pos1dbm": 122, "nrf_radio_txpower_0dbm": 122, "nrf_radio_txpower_neg1dbm": 122, "nrf_radio_txpower_neg2dbm": 122, "nrf_radio_txpower_neg3dbm": 122, "nrf_radio_txpower_neg4dbm": 122, "nrf_radio_txpower_neg5dbm": 122, "nrf_radio_txpower_neg6dbm": 122, "nrf_radio_txpower_neg7dbm": 122, "nrf_radio_txpower_neg8dbm": 122, "nrf_radio_txpower_neg12dbm": 122, "nrf_radio_txpower_neg16dbm": 122, "nrf_radio_txpower_neg20dbm": 122, "nrf_radio_txpower_neg30dbm": 122, "nrf_radio_txpower_neg40dbm": 122, "nrf_radio_txpower_neg70dbm": 122, "70": 122, "nrf_radio_mode_t": 122, "nrf_radio_mode_nrf_1mbit": 122, "1mbit": 122, "nordic": [122, 160, 206, 219, 220, 234], "proprietari": 122, "nrf_radio_mode_nrf_2mbit": 122, "2mbit": 122, "nrf_radio_mode_nrf_250kbit": 122, "250kbit": 122, "nrf_radio_mode_nrf_4mbit_h_0_5": 122, "4mbit": 122, "bt": 122, "nrf_radio_mode_nrf_4mbit_h_0_25": 122, "nrf_radio_mode_ble_1mbit": 122, "nrf_radio_mode_ble_2mbit": 122, "nrf_radio_mode_ble_lr125kbit": 122, "nrf_radio_mode_ble_lr500kbit": 122, "nrf_radio_mode_ieee802154_250kbit": 122, "2006": 122, "nrf_radio_preamble_length_t": 122, "nrf_radio_preamble_length_8bit": 122, "nrf_radio_preamble_length_16bit": 122, "nrf_radio_preamble_length_32bit_zero": 122, "nrf_radio_preamble_length_long_rang": 122, "btle": 122, "nrf_radio_crc_addr_t": 122, "calculaton": 122, "nrf_radio_crc_addr_includ": 122, "nrf_radio_crc_addr_skip": 122, "nrf_radio_crc_addr_ieee802154": 122, "nrf_radio_crc_addr_s0": 122, "nrf_radio_crc_addr_s1": 122, "nrf_radio_dfe_op_mode_t": 122, "nrf_radio_dfe_op_mode_aod": 122, "angl": 122, "departur": 122, "nrf_radio_dfe_op_mode_aoa": 122, "arriv": 122, "nrf_radio_dfe_switch_state_t": 122, "nrf_radio_dfe_switch_state_idl": 122, "nrf_radio_dfe_switch_state_offset": 122, "nrf_radio_dfe_switch_state_guard": 122, "nrf_radio_dfe_switch_state_ref": 122, "nrf_radio_dfe_switch_state_switch": 122, "nrf_radio_dfe_switch_state_end": 122, "nrf_radio_dfe_sample_state_t": 122, "nrf_radio_dfe_sample_state_idl": 122, "nrf_radio_dfe_sample_state_sampl": 122, "nrf_radio_cteinline_time_range_t": 122, "nrf_radio_cteinline_time_range_20": 122, "nrf_radio_cteinline_time_range_31": 122, "nrf_radio_cteinline_time_range_63": 122, "nrf_radio_cteinline_rx_mode_t": 122, "nrf_radio_cteinline_rx_mode_125n": 122, "nrf_radio_cteinline_rx_mode_250n": 122, "nrf_radio_cteinline_rx_mode_500n": 122, "nrf_radio_cteinline_rx_mode_1u": 122, "nrf_radio_cteinline_rx_mode_2u": 122, "nrf_radio_cteinline_rx_mode_4u": 122, "nrf_radio_dfectrl_extension_t": 122, "nrf_radio_dfectrl_extension_crc": 122, "aoa": 122, "aod": 122, "nrf_radio_dfectrl_extension_payload": 122, "nrf_radio_dfectrl_switch_spacing_t": 122, "nrf_radio_dfectrl_switch_spacing_1u": 122, "nrf_radio_dfectrl_switch_spacing_2u": 122, "nrf_radio_dfectrl_switch_spacing_4u": 122, "nrf_radio_dfectrl_sample_spacing_t": 122, "nrf_radio_dfectrl_sample_spacing_125n": 122, "nrf_radio_dfectrl_sample_spacing_250n": 122, "nrf_radio_dfectrl_sample_spacing_500n": 122, "nrf_radio_dfectrl_sample_spacing_1u": 122, "nrf_radio_dfectrl_sample_spacing_2u": 122, "nrf_radio_dfectrl_sample_spacing_4u": 122, "nrf_radio_dfectrl_sample_type_t": 122, "nrf_radio_dfectrl_sample_type_iq": 122, "q": 122, "nrf_radio_dfectrl_sample_type_magphas": 122, "magnitud": 122, "nrf_radio_task_trigg": 122, "nrf_radio_typ": 122, "nrf_radio_task_address_get": 122, "nrf_radio_event_clear": 122, "nrf_radio_event_check": 122, "nrf_radio_event_address_get": 122, "nrf_radio_shorts_en": 122, "shorts_mask": 122, "nrf_radio_shorts_dis": 122, "nrf_radio_shorts_set": 122, "nrf_radio_shorts_get": 122, "nrf_radio_int_en": 122, "nrf_radio_int_dis": 122, "nrf_radio_int_enable_check": 122, "nrf_radio_subscribe_set": 122, "nrf_radio_subscribe_clear": 122, "nrf_radio_publish_set": 122, "nrf_radio_publish_clear": 122, "nrf_radio_crc_status_check": 122, "nrf_radio_rxmatch_get": 122, "nrf_radio_rxcrc_get": 122, "nrf_radio_dai_get": 122, "nrf_radio_pdustat_get": 122, "lesser": 122, "pcnf1": 122, "greater": [122, 206, 234], "nrf_radio_cistat_get": 122, "125kbp": 122, "500kbp": 122, "nrf_radio_packetptr_set": 122, "p_packet": 122, "nrf_radio_packetptr_get": 122, "nrf_radio_frequency_set": 122, "radio_frequ": 122, "nrf_radio_frequency_get": 122, "nrf_radio_txpower_set": 122, "tx_power": 122, "nrf_radio_txpower_get": 122, "nrf_radio_mode_set": 122, "radio_mod": 122, "nrf_radio_mode_get": 122, "nrf_radio_packet_configur": 122, "nrf_radio_packet_conf_t": 122, "nrf_radio_base0_set": 122, "nrf_radio_base0_get": 122, "nrf_radio_base1_set": 122, "nrf_radio_base1_get": 122, "nrf_radio_prefix0_set": 122, "prefix": [122, 234], "nrf_radio_prefix0_get": 122, "nrf_radio_prefix1_set": 122, "nrf_radio_prefix1_get": 122, "nrf_radio_txaddress_set": 122, "txaddress": 122, "nrf_radio_txaddress_get": 122, "nrf_radio_rxaddresses_set": 122, "rxaddress": 122, "nrf_radio_rxaddresses_get": 122, "nrf_radio_crc_configur": 122, "crc_length": 122, "crc_address": 122, "crc_polynomin": 122, "polynomin": 122, "nrf_radio_crcinit_set": 122, "crc_init_valu": 122, "nrf_radio_crcinit_get": 122, "nrf_radio_ifs_set": 122, "radio_if": 122, "nrf_radio_ifs_get": 122, "nrf_radio_rssi_sample_get": 122, "read_valu": 122, "nrf_radio_state_get": 122, "nrf_radio_datawhiteiv_set": 122, "datawhiteiv": 122, "whiten": 122, "nrf_radio_datawhiteiv_get": 122, "nrf_radio_bcc_set": 122, "radio_bcc": 122, "nrf_radio_bcc_get": 122, "nrf_radio_dab_set": 122, "dab_valu": 122, "nrf_radio_dab_get": 122, "nrf_radio_dap_set": 122, "dap_valu": 122, "prefix_index": 122, "nrf_radio_dap_get": 122, "nrf_radio_dacnf_set": 122, "ena": 122, "txadd": 122, "nrf_radio_dacnf_ena_get": 122, "nrf_radio_dacnf_txadd_get": 122, "nrf_radio_mhmu_search_pattern_set": 122, "radio_mhmu_search_pattern": 122, "search": [122, 234], "nrf_radio_mhmu_search_pattern_get": 122, "nrf_radio_mhmu_pattern_mask_set": 122, "radio_mhmu_pattern_mask": 122, "nrf_radio_mhmu_pattern_mask_get": 122, "nrf_radio_modecnf0_set": 122, "fast_ramp_up": 122, "default_tx": 122, "nrf_radio_modecnf0_ru_get": 122, "nrf_radio_modecnf0_dtx_get": 122, "nrf_radio_fast_ramp_up_enable_set": 122, "nrf_radio_fast_ramp_up_check": 122, "180nm": 122, "nrf_radio_sfd_set": 122, "sfd": 122, "delimit": 122, "nrf_radio_sfd_get": 122, "nrf_radio_ed_loop_count_set": 122, "ed_loop_count": 122, "nrf_radio_ed_cca_period_set": 122, "ed_period": 122, "nrf_radio_ed_sample_get": 122, "nrf_radio_cca_configur": 122, "cca_mod": 122, "cca_ed_threshold": 122, "cca_corr_threshold": 122, "cca_corr_cnt": 122, "correl": 122, "nrf_radio_power_set": 122, "radio_pow": 122, "nrf_radio_cte_time_get": 122, "pars": [122, 196], "nrf_radio_cte_type_get": 122, "nrf_radio_cte_rfu_get": 122, "rfu": 122, "nrf_radio_dfe_switch_state_get": 122, "dfe": 122, "nrf_radio_dfe_sample_state_get": 122, "nrf_radio_cteinline_configur": 122, "nrf_radio_cteinline_conf_t": 122, "nrf_radio_dfectrl_configur": 122, "nrf_radio_dfectrl_conf_t": 122, "nrf_radio_dfe_pattern_pin_set": 122, "po": 122, "nrf_radio_dfe_pattern_add": 122, "nrf_radio_dfe_patterns_add": 122, "pin_mask": 122, "nrf_radio_dfe_pattern_cnt_get": 122, "nrf_radio_dfe_pattern_clear": 122, "p_pin_mask": 122, "nrf_radio_dfe_buffer_set": 122, "iq": 122, "nrf_radio_dfe_amount_get": 122, "nrf_radio_dfe_current_amount_get": 122, "nrf_radio": [122, 123], "lflen": 122, "s0len": 122, "s1len": 122, "s1incl": 122, "cilen": 122, "plen": 122, "decis": 122, "tasks_start": 122, "crcinc": 122, "termlen": 122, "term": 122, "statlen": 122, "balen": 122, "big_endian": 122, "whiteen": 122, "cteinfo": 122, "info_in_s1": 122, "err_handl": 122, "ok": 122, "time_rang": 122, "rx1u": 122, "rx2u": 122, "s0_pattern": 122, "s0_mask": 122, "dfe_len": 122, "\u00b5": 122, "switch_spac": 122, "spacing_ref": 122, "sample_typ": 122, "sample_spac": 122, "gain_step": 122, "switch_offset": 122, "sample_offset": 122, "nrf_ramc_hal": 124, "random": [124, 130, 131, 133, 134, 135], "nrf_ramc_event_t": 124, "nrf_ramc_event_error_fix": 124, "ecc": 124, "fixabl": 124, "nrf_ramc_event_error_non_fix": 124, "nrf_ramc_event_clear": 124, "nrf_ramc_typ": 124, "nrf_ramc_event_check": 124, "nrf_ramc_event_address_get": 124, "nrf_ramc_waitstates_set": 124, "nrf_ramc_waitstates_get": 124, "nrf_ramc_secbase_set": 124, "secen": 124, "similarli": [124, 220], "msb": [124, 145, 148, 152], "nrf_ramc_secbase_get": 124, "nrf_ramc_secenable_set": 124, "nrf_ramc_secenable_check": 124, "nrf_ramc": 125, "nrf_regulators_h": 126, "nrf_regulators_has_vreg_high": 126, "vregh": 126, "nrf_regulators_has_vreg_medium": 126, "vregm": 126, "nrf_regulators_has_vreg_radio": 126, "vregradio": 126, "nrf_regulators_has_pof": 126, "nrf_regulators_has_pof_vddh": 126, "nrf_regulators_has_pof_warn_dis": 126, "nrf_regulators_has_pof_statu": 126, "nrf_regulators_has_trim": 126, "nrf_regulators_has_main_statu": 126, "nrf_regulators_has_inductor_det": 126, "nrf_regulators_vreg_t": 126, "nrf_regulators_vreg_main": 126, "nrf_regulators_vreg_high": 126, "nrf_regulators_vreg_medium": 126, "nrf_regulators_vreg_radio": 126, "nrf_regulators_pof_thr_t": 126, "nrf_regulators_pof_thr_1v7": 126, "nrf_regulators_pof_thr_1v8": 126, "nrf_regulators_pof_thr_1v9": 126, "nrf_regulators_pof_thr_2v0": 126, "nrf_regulators_pof_thr_2v1": 126, "nrf_regulators_pof_thr_2v2": 126, "nrf_regulators_pof_thr_2v3": 126, "nrf_regulators_pof_thr_2v4": 126, "nrf_regulators_pof_thr_2v5": 126, "nrf_regulators_pof_thr_2v6": 126, "nrf_regulators_pof_thr_2v7": 126, "nrf_regulators_pof_thr_2v8": 126, "nrf_regulators_pof_thr_vddh_2v7": 126, "nrf_regulators_pof_thr_vddh_2v8": 126, "nrf_regulators_pof_thr_vddh_2v9": 126, "nrf_regulators_pof_thr_vddh_3v0": 126, "nrf_regulators_pof_thr_vddh_3v1": 126, "nrf_regulators_pof_thr_vddh_3v2": 126, "nrf_regulators_pof_thr_vddh_3v3": 126, "nrf_regulators_pof_thr_vddh_3v4": 126, "nrf_regulators_pof_thr_vddh_3v5": 126, "nrf_regulators_pof_thr_vddh_3v6": 126, "nrf_regulators_pof_thr_vddh_3v7": 126, "nrf_regulators_pof_thr_vddh_3v8": 126, "nrf_regulators_pof_thr_vddh_3v9": 126, "nrf_regulators_pof_thr_vddh_4v0": 126, "nrf_regulators_pof_thr_vddh_4v1": 126, "nrf_regulators_pof_thr_vddh_4v2": 126, "nrf_regulators_elv_mode_allow_mask_t": 126, "compon": [126, 148, 157, 181, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "elv": 126, "nrf_regulators_elv_mode_allow_mask_ext": 126, "nrf_regulators_main_status_t": 126, "nrf_regulators_main_status_norm": 126, "nrf_regulators_main_status_high": 126, "nrf_regulators_typ": 126, "nrf_regulators_vreg_enable_check": 126, "nrf_regulators_system_off": 126, "never": [126, 196], "nrf_regulators_pof_config_set": 126, "nrf_regulators_pof_config_t": 126, "nrf_regulators_pof_below_thr_check": 126, "nrf_regulators_elv_mode_allow_set": 126, "nrf_regulators_elv_mode_allow_get": 126, "nrf_regulators_inductor_check": 126, "vreg_main": 126, "dc": 126, "nrf_regul": 126, "thr_vddh": 126, "warn_dis": 126, "nrf_reset_h": 127, "nrf_reset_has_network": 127, "nrf_reset_has_appl": 127, "nrf_reset_has_vbus_reset": 127, "nrf_reset_has_ctrlap_reset": 127, "ctrap": [127, 248], "nrf_reset_has_ctrlapsoft_reset": 127, "ctrapsoft": 127, "nrf_reset_has_ctrlaphard_reset": 127, "ctraphard": 127, "nrf_reset_has_ctrlappin_reset": 127, "ctrappin": 127, "nrf_reset_has_lpcomp_reset": 127, "nrf_reset_has_llockup_reset": 127, "llockup": 127, "nrf_reset_has_ldog_reset": 127, "ldog": 127, "nrf_reset_has_mforceoff_reset": 127, "mforceoff": 127, "nrf_reset_has_grtc_reset": 127, "nrf_reset_has_sectamper_reset": 127, "sectamp": 127, "nrf_reset_resetreas_mask_t": 127, "nrf_reset_resetreas_resetpin_mask": 127, "nrf_reset_resetreas_dog0_mask": 127, "dog0": 127, "nrf_reset_resetreas_sreq_mask": 127, "nrf_reset_resetreas_lockup_mask": 127, "nrf_reset_resetreas_off_mask": 127, "nrf_reset_resetreas_dif_mask": 127, "nrf_reset_resetreas_nfc_mask": 127, "nrf_reset_resetreas_dog1_mask": 127, "dog1": 127, "nrf_reset_resetreas_ctrlapsoft_mask": 127, "ctrlapsoft": 127, "nrf_reset_resetreas_ctrlaphard_mask": 127, "ctrlaphard": 127, "nrf_reset_resetreas_ctrlappin_mask": 127, "ctrlappin": 127, "nrf_reset_resetreas_ctrlap_mask": 127, "nrf_reset_resetreas_lpcomp_mask": 127, "nrf_reset_resetreas_lsreq_mask": 127, "lsreq": 127, "nrf_reset_resetreas_llockup_mask": 127, "nrf_reset_resetreas_ldog_mask": 127, "nrf_reset_resetreas_mforceoff_mask": 127, "nrf_reset_resetreas_grtc_mask": 127, "nrf_reset_resetreas_vbus_mask": 127, "nrf_reset_resetreas_lctrlap_mask": 127, "lctrlap": 127, "nrf_reset_resetreas_sectamper_mask": 127, "nrf_reset_resetreas_get": 127, "nrf_reset_typ": 127, "nrf_reset_resetreas_clear": 127, "nrf_reset_network_force_off": 127, "held": 127, "nrf_resetinfo_h": 128, "nrf_resetinfo_has_resetreas_struct": 128, "nrf_resetinfo_has_multiple_secwdt": 128, "nrf_resetinfo_has_masklockup": 128, "nrf_resetinfo_has_local_crossdomain": 128, "crossdomain": 128, "nrf_resetinfo_error_status_max": 128, "nrf_resetinfo_resetreas_global_mask_t": 128, "nrf_resetinfo_resetreas_global_por_mask": 128, "nrf_resetinfo_resetreas_global_pin_mask": 128, "nrf_resetinfo_resetreas_global_dog_mask": 128, "sysctrl": 128, "nrf_resetinfo_resetreas_global_ctrlap_mask": 128, "nrf_resetinfo_resetreas_global_secsreq_mask": 128, "nrf_resetinfo_resetreas_global_secwdt0_mask": 128, "nrf_resetinfo_resetreas_global_secwdt1_mask": 128, "nrf_resetinfo_resetreas_global_seclockup_mask": 128, "nrf_resetinfo_resetreas_global_sectamper_mask": 128, "tamper": [128, 162, 248], "nrf_resetinfo_resetreas_global_gpio_mask": 128, "nrf_resetinfo_resetreas_global_lpcomp_mask": 128, "nrf_resetinfo_resetreas_global_dif_mask": 128, "nrf_resetinfo_resetreas_global_grtc_mask": 128, "nrf_resetinfo_resetreas_global_nfc_mask": 128, "nrf": 128, "nrf_resetinfo_resetreas_global_vusb_mask": 128, "nrf_resetinfo_resetreas_local_mask_t": 128, "nrf_resetinfo_resetreas_local_dog_mask": 128, "nrf_resetinfo_resetreas_local_dogns_mask": 128, "nrf_resetinfo_resetreas_local_sreq_mask": 128, "soft": [128, 248], "nrf_resetinfo_resetreas_local_lockup_mask": 128, "nrf_resetinfo_resetreas_local_crossdomain_mask": 128, "nrf_resetinfo_resetreas_local_unretained_mask": 128, "unretain": [128, 162], "nrf_resetinfo_resetreas_global_set": 128, "nrf_resetinfo_typ": 128, "nrf_resetinfo_resetreas_global_get": 128, "nrf_resetinfo_resetreas_local_set": 128, "nrf_resetinfo_resetreas_local_get": 128, "nrf_resetinfo_error_status_set": 128, "nrf_resetinfo_error_status_get": 128, "nrf_resetinfo_error_address_set": 128, "nrf_resetinfo_error_address_get": 128, "nrf_resetinfo_restore_valid_set": 128, "imag": 128, "nrf_resetinfo_restore_valid_check": 128, "nrf_resetinfo_mask_lockup_set": 128, "session": 128, "nrf_resetinfo_mask_lockup_check": 128, "nrf_resetinfo": 129, "nrfx_rng": 130, "nrfx_rng_default_config": 130, "nrfx_rng_config_t": 130, "nrfx_rng_init": 130, "randon": 130, "nrfx_rng_evt_handler_t": 130, "rng_data": 130, "nrfx_rng_start": 130, "nrfx_rng_stop": 130, "nrfx_rng_uninit": 130, "nrfx_rng_init_check": 130, "error_correct": 130, "nrf_rng_hal": 131, "nrf_rng_task_t": 131, "nrf_rng_task_start": 131, "nrf_rng_task_stop": 131, "nrf_rng_event_t": 131, "nrf_rng_event_valrdi": 131, "nrf_rng_int_mask_t": 131, "nrf_rng_int_valrdy_mask": 131, "valrdi": 131, "nrf_rng_short_mask_t": 131, "nrf_rng_short_valrdy_stop_mask": 131, "event_valrdi": 131, "task_stop": 131, "nrf_rng_int_en": 131, "nrf_rng_type": 131, "nrf_rng_int_dis": 131, "nrf_rng_int_enable_check": 131, "nrf_rng_task_address_get": 131, "rng_task": 131, "nrf_rng_task_trigg": 131, "nrf_rng_event_address_get": 131, "rng_event": 131, "nrf_rng_event_clear": 131, "nrf_rng_event_check": 131, "nrf_rng_shorts_en": 131, "nrf_rng_shorts_dis": 131, "nrf_rng_random_value_get": 131, "nrf_rng_error_correction_en": 131, "nrf_rng_error_correction_dis": 131, "nrf_rng_subscribe_set": 131, "nrf_rng_subscribe_clear": 131, "nrf_rng_publish_set": 131, "nrf_rng_publish_clear": 131, "nrf_rng": 132, "nrfx_rramc": 133, "nrfx_rramc_default_config": 133, "_write_buff_s": 133, "preload": [133, 134, 135], "0x80": 133, "rram": [133, 134, 135], "0x100": 133, "nrfx_rramc_evt_handler_t": 133, "nrf_rramc_event_t": [133, 134, 135], "nrfx_rramc_all_eras": 133, "nrfx_rramc_byte_writ": 133, "nrfx_rramc_ready_check": 133, "nrfx_rramc_bytes_writ": 133, "nrfx_rramc_word_writ": 133, "nrfx_rramc_words_writ": 133, "nrfx_rramc_write_enable_set": 133, "write_buff_s": [133, 134], "nrfx_rramc_write_enable_check": 133, "nrfx_rramc_init": 133, "nrfx_rramc_config_t": 133, "nrfx_rramc_reconfigur": 133, "nrfx_rramc_uninit": 133, "nrfx_rramc_memory_size_get": 133, "ficr_info_rram_rram_unspecifi": 133, "nrfx_rramc_otp_word_read": 133, "tabl": [133, 135, 186, 195, 206, 219, 220], "nrfx_rramc_otp_word_writ": 133, "ye": [133, 135, 234], "nrfx_rramc_byte_read": 133, "nrfx_rramc_word_read": 133, "nrfx_rramc_buffer_read": 133, "mode_writ": [133, 134], "preload_timeout": [133, 135], "preload_timeout_en": 133, "access_timeout": [133, 134], "standbi": [133, 134], "abort_on_pof": [133, 134], "nrf_rramc_hal": 134, "nrf_rramc_config_write_buff_size_max": 134, "nrf_rramc_readynexttimeout_max": 134, "nrf_rramc_region_config_perm_mask": 134, "nrf_rramc_task_t": [134, 135], "nrf_rramc_task_wakeup": 134, "nrf_rramc_task_commit_writebuf": 134, "commit": [134, 135], "nrf_rramc_event_wokenup": 134, "woken": 134, "nrf_rramc_event_readi": 134, "nrf_rramc_event_ready_next": 134, "nrf_rramc_event_error_access": 134, "nrf_rramc_int_mask_t": [134, 135], "nrf_rramc_int_wokenup_mask": 134, "wokenup": [134, 135], "nrf_rramc_int_ready_mask": 134, "nrf_rramc_int_ready_next_mask": 134, "readynext": 134, "nrf_rramc_int_error_access_mask": 134, "accesserror": 134, "nrf_rramc_all_ints_mask": 134, "nrf_rramc_region_perm_mask_t": 134, "nrf_rramc_region_perm_read_mask": 134, "nrf_rramc_region_perm_write_mask": 134, "nrf_rramc_region_perm_execute_mask": 134, "nrf_rramc_region_perm_secure_mask": 134, "nrf_rramc_task_trigg": [134, 135], "nrf_rramc_typ": [134, 135], "nrf_rramc_task_address_get": [134, 135], "nrf_rramc_event_clear": [134, 135], "nrf_rramc_event_check": [134, 135], "nrf_rramc_event_address_get": [134, 135], "nrf_rramc_int_en": [134, 135], "nrf_rramc_int_dis": [134, 135], "nrf_rramc_int_enable_check": [134, 135], "nrf_rramc_int_pending_get": 134, "nrf_rramc_subscribe_set": [134, 135], "nrf_rramc_subscribe_clear": [134, 135], "nrf_rramc_publish_set": [134, 135], "nrf_rramc_publish_clear": [134, 135], "nrf_rramc_ready_check": [134, 135], "nrf_rramc_write_ready_check": [134, 135], "nrf_rramc_error_access_addr_get": [134, 135], "fuction": [134, 135], "nrf_rramc_empty_buffer_check": [134, 135], "nrf_rramc_config_get": [134, 135], "nrf_rramc_config_t": [134, 135], "nrf_rramc_config_set": [134, 135], "nrf_rramc_ready_next_timeout_get": [134, 135], "nrf_rramc_ready_next_timeout_t": [134, 135], "nrf_rramc_ready_next_timeout_set": [134, 135], "nrf_rramc_power_config_get": [134, 135], "nrf_rramc_power_t": [134, 135], "nrf_rramc_power_config_set": [134, 135], "nrf_rramc_erase_all_check": [134, 135], "nrf_rramc_erase_all_set": [134, 135], "sicr": [134, 135], "nrf_rramc_region_config_set": 134, "nrf_rramc_region_config_t": 134, "nrf_rramc_region_config_get": 134, "nrf_rramc": [134, 136], "writeonc": [134, 195], "0xffffffff": [134, 195], "size_kb": [134, 195], "nrfy_rramc": 135, "nrfy_rramc_bytes_in_word": 135, "nrfy_rramc_words_in_bufer_lin": 135, "nrfy_rramc_rram_base_address": 135, "nrfy_rramc_ready_next_timeout_default": 135, "nrfy_rramc_configur": 135, "nrfy_rramc_config_t": 135, "nrfy_rramc_int_init": 135, "nrfy_rramc_int_uninit": 135, "nrfy_rramc_events_process": 135, "nrfy_rramc_byte_writ": 135, "nrfy_rramc_bytes_writ": 135, "nrfy_rramc_byte_read": 135, "nrfy_rramc_word_writ": 135, "nrfy_rramc_words_writ": 135, "nrfy_rramc_word_read": 135, "nrfy_rramc_buffer_read": 135, "nrfy_rramc_otp_word_read": 135, "nrfy_rramc_otp_word_writ": 135, "nrfy_rramc_task_trigg": 135, "nrfy_rramc_task_address_get": 135, "nrfy_rramc_event_clear": 135, "nrfy_rramc_event_check": 135, "nrfy_rramc_event_address_get": 135, "nrfy_rramc_int_en": 135, "nrfy_rramc_int_dis": 135, "nrfy_rramc_int_enable_check": 135, "nrfy_rramc_subscribe_set": 135, "nrfy_rramc_subscribe_clear": 135, "nrfy_rramc_publish_set": 135, "nrfy_rramc_publish_clear": 135, "nrfy_rramc_ready_check": 135, "nrfy_rramc_write_ready_check": 135, "nrfy_rramc_error_access_addr_get": 135, "nrfy_rramc_empty_buffer_check": 135, "nrfy_rramc_config_get": 135, "nrfy_rramc_config_set": 135, "nrfy_rramc_ready_next_timeout_get": 135, "nrfy_rramc_ready_next_timeout_set": 135, "nrfy_rramc_power_config_get": 135, "nrfy_rramc_power_config_set": 135, "nrfy_rramc_erase_all_check": 135, "nrfy_rramc_erase_all_set": 135, "nrfx_rtc": 137, "nrfx_rtc_us_to_tick": 137, "nrfx_rtc_instanc": 137, "nrfx_rtc_default_config": 137, "768": 137, "2000": [137, 215], "nrfx_rtc_inst_handler_get": 137, "nrfx_rtc_handler_t": 137, "nrfx_rtc_int_type_t": 137, "int_typ": 137, "nrfx_rtc_int_compare0": 137, "compare0": 137, "nrfx_rtc_int_compare1": 137, "compare1": 137, "nrfx_rtc_int_compare2": 137, "compare2": 137, "nrfx_rtc_int_compare3": 137, "compare3": 137, "nrfx_rtc_int_tick": 137, "nrfx_rtc_int_overflow": 137, "nrfx_rtc_init": 137, "nrfx_rtc_t": 137, "nrfx_rtc_config_t": 137, "nrfx_rtc_uninit": 137, "nrfx_rtc_init_check": 137, "nrfx_rtc_enabl": 137, "nrfx_rtc_disabl": 137, "nrfx_rtc_cc_set": 137, "preempt": [137, 239], "behind": 137, "assumpt": 137, "preemption": 137, "m": [137, 155, 159, 205, 206, 215, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "bigger": [137, 191, 196], "0x00ffffff": 137, "tick_lat": 137, "nrfx_rtc_cc_disabl": 137, "nrfx_rtc_tick_en": 137, "nrfx_rtc_tick_dis": 137, "nrfx_rtc_overflow_en": 137, "nrfx_rtc_overflow_dis": 137, "nrfx_rtc_max_ticks_get": 137, "nrfx_rtc_int_dis": 137, "nrfx_rtc_int_en": 137, "nrfx_rtc_counter_get": 137, "nrfx_rtc_counter_clear": 137, "nrfx_rtc_task_address_get": 137, "nrf_rtc_task_t": [137, 138, 139], "nrfx_rtc_event_address_get": 137, "nrf_rtc_event_t": [137, 138, 139], "nrf_rtc_type": [137, 138, 139], "cc_channel_count": [137, 174], "nrf_rtc_hal": 138, "nrf_rtc_inst_get": 138, "nrf_rtc_cc_channel_count": 138, "nrf_rtc_cc_count_max": 138, "nrf_rtc_counter_max": 138, "nrf_rtc_input_freq": 138, "nrf_rtc_freq_to_prescal": 138, "nrf_rtc_wrap": 138, "nrf_rtc_channel_int_mask": 138, "nrf_rtc_all_channels_int_mask": 138, "nrf_rtc_channel_event_addr": 138, "nrf_rtc_task_start": 138, "nrf_rtc_task_stop": 138, "nrf_rtc_task_clear": 138, "nrf_rtc_task_trigger_overflow": 138, "nrf_rtc_task_capture_0": 138, "nrf_rtc_task_capture_1": 138, "nrf_rtc_task_capture_2": 138, "nrf_rtc_task_capture_3": 138, "nrf_rtc_event_tick": 138, "nrf_rtc_event_overflow": 138, "nrf_rtc_event_compare_0": 138, "nrf_rtc_event_compare_1": 138, "nrf_rtc_event_compare_2": 138, "nrf_rtc_event_compare_3": 138, "nrf_rtc_int_t": [138, 139], "nrf_rtc_int_tick_mask": 138, "nrf_rtc_int_overflow_mask": 138, "nrf_rtc_int_compare0_mask": 138, "nrf_rtc_int_compare1_mask": 138, "nrf_rtc_int_compare2_mask": 138, "nrf_rtc_int_compare3_mask": 138, "nrf_rtc_cc_set": [138, 139], "cc_val": [138, 139], "nrf_rtc_cc_get": [138, 139], "nrf_rtc_int_en": [138, 139], "nrf_rtc_int_dis": [138, 139], "nrf_rtc_int_enable_check": [138, 139], "nrf_rtc_subscribe_set": [138, 139], "nrf_rtc_subscribe_clear": [138, 139], "nrf_rtc_publish_set": [138, 139], "nrf_rtc_publish_clear": [138, 139], "nrf_rtc_event_check": [138, 139], "nrf_rtc_event_clear": [138, 139], "nrf_rtc_counter_get": [138, 139], "nrf_rtc_prescaler_set": [138, 139], "nrf_rtc_prescaler_get": [138, 139], "nrf_rtc_event_address_get": [138, 139], "nrf_rtc_task_address_get": [138, 139], "nrf_rtc_task_trigg": [138, 139], "nrf_rtc_event_en": [138, 139], "nrf_rtc_compare_event_get": [138, 139], "nrfy_rtc": 139, "nrfy_rtc_periph_configur": 139, "nrfy_rtc_config_t": 139, "nrfy_rtc_int_init": 139, "nrfy_rtc_int_uninit": 139, "nrfy_rtc_events_process": 139, "nrfy_rtc_stop": 139, "nrfy_rtc_event_int_clear_en": 139, "nrfy_rtc_event_int_dis": 139, "nrfy_rtc_cc_set": 139, "nrfy_rtc_cc_get": 139, "nrfy_rtc_int_en": 139, "nrfy_rtc_int_dis": 139, "nrfy_rtc_int_enable_check": 139, "nrfy_rtc_subscribe_set": 139, "nrfy_rtc_subscribe_clear": 139, "nrfy_rtc_publish_set": 139, "nrfy_rtc_publish_clear": 139, "nrfy_rtc_event_check": 139, "nrfy_rtc_event_clear": 139, "nrfy_rtc_counter_get": 139, "nrfy_rtc_prescaler_set": 139, "nrfy_rtc_prescaler_get": 139, "nrfy_rtc_event_address_get": 139, "nrfy_rtc_task_address_get": 139, "nrfy_rtc_task_trigg": 139, "nrfy_rtc_capture_task_get": 139, "nrfy_rtc_event_en": 139, "nrfy_rtc_event_dis": 139, "nrfy_rtc_compare_event_get": 139, "nrf_rtc": 140, "nrfx_saadc": 141, "approxim": 141, "nrfx_saadc_default_acqtim": 141, "acquisit": [141, 142], "nrfx_saadc_default_conv_tim": 141, "nrfx_saadc_default_channel_s": 141, "_pin_p": 141, "_index": 141, "ladder": [141, 142], "nrfx_saadc_channel_t": 141, "nrfx_saadc_default_channel_differenti": 141, "_pin_n": 141, "nrfx_saadc_samples_to_byt": 141, "_resolut": 141, "_sampl": 141, "nrf_saadc_resolution_t": [141, 142, 143], "nrfx_saadc_sample_get": 141, "nrfx_saadc_default_adv_config": 141, "oversampl": [141, 142, 143], "nrfx_saadc_adv_config_t": 141, "nrfx_saadc_event_handler_t": 141, "nrfx_saadc_evt_t": 141, "nrfx_saadc_evt_readi": 141, "nrfx_saadc_evt_finish": 141, "nrfx_saadc_buffer_set": 141, "nrfx_saadc_evt_buf_req": 141, "nrfx_saadc_evt_type_t": 141, "nrfx_saadc_evt_don": 141, "nrfx_saadc_evt_limit": 141, "nrfx_saadc_evt_calibratedon": 141, "nrfx_saadc_uninit": 141, "nrfx_saadc_init_check": 141, "nrfx_saadc_channels_config": 141, "channel_count": 141, "nrf_saadc_channel_config_t": [141, 142, 143], "nrfx_saadc_channel_config": 141, "nrfx_saadc_channels_configured_get": 141, "nrfx_saadc_channels_deconfig": 141, "deconfigur": 141, "nrfx_saadc_simple_mode_set": 141, "nrfx_saadc_advanced_mode_set": 141, "nrf_saadc_oversample_t": [141, 142, 143], "manner": 141, "nrfx_saadc_mode_trigg": 141, "internal_timer_cc": 141, "nrf_saadc_task_sampl": [141, 142], "start_on_end": 141, "nrf_saadc_task_start": [141, 142], "nrf_saadc_event_end": [141, 142], "try": 141, "nrfx_saadc_limits_set": 141, "limit_low": 141, "limit_high": 141, "exce": [141, 152, 191, 234], "int16_min": 141, "int16_max": 141, "nrfx_saadc_offset_calibr": 141, "calib_event_handl": 141, "channel_config": 141, "nrf_saadc_input_t": [141, 142, 143], "pin_p": 141, "pin_n": 141, "nrf_saadc_burst_t": [141, 142, 143], "nrfx_saadc_done_evt_t": 141, "nrfx_saadc_limit_evt_t": 141, "nrf_saadc_limit_t": [141, 142, 143], "limit_typ": [141, 142, 143], "nrf_saadc_hal": 142, "nrf_saadc_limits_int_offset": 142, "nrf_saadc_all_channels_limits_int_mask": 142, "nrf_saadc_has_acqtime_enum": 142, "predefin": [142, 220], "nrf_saadc_has_convtim": 142, "nrf_saadc_has_lin_c": 142, "linear": 142, "coeffici": [142, 171, 172], "nrf_saadc_has_ain_as_pin": 142, "nrf_saadc_has_dma_reg": 142, "nrf_saadc_has_dma_ev": 142, "nrf_saadc_has_ch_config_r": 142, "nrf_saadc_convtime_max": 142, "nrf_saadc_lin_cal_max_count": 142, "nrf_saadc_lin_cal_max": 142, "nrf_saadc_8bit_sample_width": 142, "nrf_saadc_input_dis": [142, 143], "nrf_saadc_resolution_8bit": 142, "nrf_saadc_resolution_10bit": 142, "nrf_saadc_resolution_12bit": 142, "nrf_saadc_resolution_14bit": 142, "nrf_saadc_oversample_dis": 142, "nrf_saadc_oversample_2x": 142, "2x": 142, "nrf_saadc_oversample_4x": 142, "4x": 142, "nrf_saadc_oversample_8x": 142, "8x": 142, "nrf_saadc_oversample_16x": 142, "16x": 142, "nrf_saadc_oversample_32x": 142, "32x": 142, "nrf_saadc_oversample_64x": 142, "64x": 142, "nrf_saadc_oversample_128x": 142, "128x": 142, "nrf_saadc_oversample_256x": 142, "256x": 142, "nrf_saadc_resistor_t": 142, "nrf_saadc_resistor_dis": 142, "nrf_saadc_resistor_pulldown": 142, "gnd": 142, "nrf_saadc_resistor_pullup": 142, "nrf_saadc_resistor_vdd1_2": 142, "nrf_saadc_gain_t": 142, "nrf_saadc_gain1_6": 142, "nrf_saadc_gain1_5": 142, "nrf_saadc_gain1_4": 142, "nrf_saadc_gain2_7": 142, "nrf_saadc_gain1_3": 142, "nrf_saadc_gain2_5": 142, "nrf_saadc_gain1_2": 142, "nrf_saadc_gain2_3": 142, "nrf_saadc_gain1": 142, "nrf_saadc_gain2": 142, "nrf_saadc_gain4": 142, "nrf_saadc_reference_t": 142, "nrf_saadc_reference_intern": 142, "nrf_saadc_reference_vdd4": 142, "nrf_saadc_acqtime_t": 142, "nrf_saadc_acqtime_3u": 142, "nrf_saadc_acqtime_5u": 142, "nrf_saadc_acqtime_10u": 142, "nrf_saadc_acqtime_15u": 142, "nrf_saadc_acqtime_20u": 142, "nrf_saadc_acqtime_40u": 142, "nrf_saadc_mode_t": 142, "nrf_saadc_mode_single_end": 142, "pseln": [142, 143], "nrf_saadc_mode_differenti": 142, "nrf_saadc_burst_dis": 142, "nrf_saadc_burst_en": 142, "nrf_saadc_task_t": [142, 143], "nrf_saadc_task_stop": 142, "nrf_saadc_task_calibrateoffset": 142, "nrf_saadc_event_t": [142, 143], "nrf_saadc_event_start": 142, "nrf_saadc_event_don": 142, "nrf_saadc_event_resultdon": 142, "nrf_saadc_event_calibratedon": 142, "nrf_saadc_event_stop": 142, "nrf_saadc_event_ch0_limith": 142, "nrf_saadc_event_ch0_limitl": 142, "nrf_saadc_event_ch1_limith": 142, "nrf_saadc_event_ch1_limitl": 142, "nrf_saadc_event_ch2_limith": 142, "nrf_saadc_event_ch2_limitl": 142, "nrf_saadc_event_ch3_limith": 142, "nrf_saadc_event_ch3_limitl": 142, "nrf_saadc_event_ch4_limith": 142, "nrf_saadc_event_ch4_limitl": 142, "nrf_saadc_event_ch5_limith": 142, "nrf_saadc_event_ch5_limitl": 142, "nrf_saadc_event_ch6_limith": 142, "nrf_saadc_event_ch6_limitl": 142, "nrf_saadc_event_ch7_limith": 142, "nrf_saadc_event_ch7_limitl": 142, "nrf_saadc_int_mask_t": [142, 143], "nrf_saadc_int_start": 142, "nrf_saadc_int_end": 142, "nrf_saadc_int_don": 142, "events_don": 142, "nrf_saadc_int_resultdon": 142, "events_resultdon": 142, "nrf_saadc_int_calibratedon": 142, "events_calibratedon": 142, "nrf_saadc_int_stop": 142, "nrf_saadc_int_ch0limith": 142, "events_ch": 142, "limith": 142, "nrf_saadc_int_ch0limitl": 142, "limitl": 142, "nrf_saadc_int_ch1limith": 142, "nrf_saadc_int_ch1limitl": 142, "nrf_saadc_int_ch2limith": 142, "nrf_saadc_int_ch2limitl": 142, "nrf_saadc_int_ch3limith": 142, "nrf_saadc_int_ch3limitl": 142, "nrf_saadc_int_ch4limith": 142, "nrf_saadc_int_ch4limitl": 142, "nrf_saadc_int_ch5limith": 142, "nrf_saadc_int_ch5limitl": 142, "nrf_saadc_int_ch6limith": 142, "nrf_saadc_int_ch6limitl": 142, "nrf_saadc_int_ch7limith": 142, "nrf_saadc_int_ch7limitl": 142, "nrf_saadc_int_al": 142, "nrf_saadc_limit_low": 142, "nrf_saadc_limit_high": 142, "nrf_saadc_task_trigg": [142, 143], "nrf_saadc_typ": [142, 143], "nrf_saadc_task_address_get": [142, 143], "nrf_saadc_event_check": [142, 143], "nrf_saadc_event_clear": [142, 143], "nrf_saadc_event_address_get": [142, 143], "nrf_saadc_subscribe_set": [142, 143], "nrf_saadc_subscribe_clear": [142, 143], "nrf_saadc_publish_set": [142, 143], "nrf_saadc_publish_clear": [142, 143], "nrf_saadc_limit_event_get": [142, 143], "nrf_saadc_channel_input_set": [142, 143], "pselp": [142, 143], "nrf_saadc_channel_pos_input_set": [142, 143], "nrf_saadc_channel_limits_set": [142, 143], "nrf_saadc_int_set": [142, 143], "nrf_saadc_int_en": [142, 143], "nrf_saadc_int_enable_check": [142, 143], "nrf_saadc_int_dis": [142, 143], "nrf_saadc_limit_int_get": [142, 143], "nrf_saadc_busy_check": [142, 143], "nrf_saadc_en": [142, 143], "nrf_saadc_dis": [142, 143], "nrf_saadc_enable_check": [142, 143], "nrf_saadc_buffer_init": [142, 143], "nrf_saadc_buffer_pointer_set": [142, 143], "nrf_saadc_buffer_pointer_get": [142, 143], "nrf_saadc_amount_get": [142, 143], "nrf_saadc_resolution_set": [142, 143], "nrf_saadc_resolution_get": [142, 143], "nrf_saadc_oversample_set": [142, 143], "nrf_saadc_oversample_get": [142, 143], "nrf_saadc_oversample_sample_count_get": [142, 143], "nrf_saadc_continuous_mode_en": [142, 143], "fix": [142, 143, 249], "2047": [142, 143], "nrf_saadc_continuous_mode_enable_check": [142, 143], "nrf_saadc_continuous_mode_dis": [142, 143], "nrf_saadc_linearity_calibration_coeff_set": 142, "coeff": [142, 171, 172], "nrf_saadc_linearity_calibration_coeff_get": 142, "nrf_saadc_channel_init": [142, 143], "nrf_saadc_burst_set": [142, 143], "nrf_saadc_value_min_get": [142, 143], "nrf_saadc_value_max_get": [142, 143], "nrf_saadc_config_t": 142, "resistor_p": 142, "resistor_n": 142, "acq_tim": 142, "conv_tim": 142, "nrfy_saadc": 143, "nrfy_saadc_periph_configur": 143, "nrfy_saadc_config_t": 143, "nrfy_saadc_int_init": 143, "nrfy_saadc_int_uninit": 143, "nrfy_saadc_events_process": 143, "nrfy_saadc_buffer_t": 143, "p_desc": 143, "nrfy_saadc_channel_configur": 143, "nrfy_saadc_channel_input_t": 143, "nrfy_saadc_buffer_set": 143, "nrfy_saadc_buffer_latch": 143, "nrfy_saadc_sample_start": 143, "nrfy_saadc_abort": 143, "nrfy_saadc_stop": 143, "nrfy_saadc_calibr": 143, "nrfy_saadc_task_trigg": 143, "nrfy_saadc_task_address_get": 143, "nrfy_saadc_event_check": 143, "nrfy_saadc_event_clear": 143, "nrfy_saadc_event_address_get": 143, "nrfy_saadc_subscribe_set": 143, "nrfy_saadc_subscribe_clear": 143, "nrfy_saadc_publish_set": 143, "nrfy_saadc_publish_clear": 143, "nrfy_saadc_limit_event_get": 143, "nrfy_saadc_channel_input_set": 143, "nrfy_saadc_channel_pos_input_set": 143, "nrfy_saadc_channel_limits_set": 143, "nrfy_saadc_int_set": 143, "nrfy_saadc_int_en": 143, "nrfy_saadc_int_enable_check": 143, "nrfy_saadc_int_dis": 143, "nrfy_saadc_limit_int_get": 143, "nrfy_saadc_busy_check": 143, "nrfy_saadc_en": 143, "nrfy_saadc_dis": 143, "nrfy_saadc_enable_check": 143, "nrfy_saadc_buffer_init": 143, "nrfy_saadc_buffer_pointer_set": 143, "nrfy_saadc_buffer_pointer_get": 143, "nrfy_saadc_amount_get": 143, "nrfy_saadc_resolution_set": 143, "nrfy_saadc_resolution_get": 143, "nrfy_saadc_oversample_set": 143, "nrfy_saadc_oversample_get": 143, "nrfy_saadc_oversample_sample_count_get": 143, "nrfy_saadc_continuous_mode_en": 143, "nrfy_saadc_continuous_mode_enable_check": 143, "nrfy_saadc_continuous_mode_dis": 143, "nrfy_saadc_channel_init": 143, "nrfy_saadc_burst_set": 143, "nrfy_saadc_value_min_get": 143, "nrfy_saadc_value_max_get": 143, "input_p": 143, "input_n": 143, "nrfx_spi": [145, 152], "nrfx_spi_inst": 145, "nrfx_spi_pin_not_us": 145, "nrfx_spi_default_config": 145, "_pin_mosi": [145, 148, 152], "_pin_miso": [145, 148, 152], "_pin_ss": [145, 148], "charact": [145, 148, 149, 150, 152, 153, 186], "0xff": [145, 148, 152], "ss": [145, 148], "nrfx_spi_single_xf": 145, "p_tx": [145, 148, 178, 181], "tx_len": [145, 148, 178, 181], "p_rx": [145, 148, 178, 181], "rx_len": [145, 148, 178, 181], "nrfx_spi_xfer_trx": 145, "p_tx_buf": [145, 148], "tx_length": [145, 148, 150], "p_rx_buf": [145, 148], "rx_length": [145, 148, 150], "duplex": [145, 148], "nrfx_spi_xfer_tx": 145, "p_buf": [145, 148, 185, 186], "nrfx_spi_xfer_rx": 145, "nrfx_spi_inst_handler_get": 145, "nrfx_spi_evt_handler_t": 145, "nrfx_spi_evt_t": 145, "nrfx_spi_evt_type_t": 145, "nrfx_spi_event_don": 145, "nrfx_spi_init": 145, "nrfx_spi_t": 145, "nrfx_spi_config_t": 145, "nrfx_spi_reconfigur": 145, "nrfx_spi_uninit": 145, "nrfx_spi_init_check": 145, "nrfx_spi_xfer": 145, "nrfx_spi_xfer_desc_t": 145, "p_xfer_desc": [145, 148, 178, 181], "nrfx_spi_abort": 145, "nrf_spi_typ": [145, 146], "mosi_pin": [145, 146, 148, 149, 150, 152, 153], "miso_pin": [145, 146, 148, 149, 150, 152, 153], "ss_pin": [145, 148], "regular": [145, 148], "orc": [145, 148, 149, 150, 152, 153, 186], "nrf_spi_frequency_t": [145, 146], "nrf_spi_mode_t": [145, 146], "nrf_spi_bit_order_t": [145, 146], "bit_ord": [145, 148, 150, 152], "miso_pul": [145, 148], "xfer_desc": [145, 148, 178, 181], "nrf_spi_hal": 146, "nrf_spi_inst_get": 146, "nrf_spi_pin_not_connect": 146, "nrf_spi_pins_set": 146, "nrf_spi_event_t": 146, "nrf_spi_event_readi": 146, "nrf_spi_int_mask_t": 146, "nrf_spi_int_ready_mask": 146, "nrf_spi_all_ints_mask": 146, "nrf_spi_freq_125k": 146, "nrf_spi_freq_250k": 146, "nrf_spi_freq_500k": 146, "nrf_spi_freq_1m": 146, "nrf_spi_freq_2m": 146, "nrf_spi_freq_4m": 146, "nrf_spi_freq_8m": 146, "nrf_spi_mode_0": 146, "nrf_spi_mode_1": 146, "trail": [146, 148, 149, 153, 240], "nrf_spi_mode_2": 146, "nrf_spi_mode_3": 146, "nrf_spi_bit_order_msb_first": 146, "nrf_spi_bit_order_lsb_first": 146, "nrf_spi_event_clear": 146, "nrf_spi_event_check": 146, "nrf_spi_event_address_get": 146, "nrf_spi_int_en": 146, "nrf_spi_int_dis": 146, "nrf_spi_int_enable_check": 146, "nrf_spi_en": 146, "nrf_spi_dis": 146, "nrf_spi_sck_pin_get": 146, "nrf_spi_mosi_pin_get": 146, "nrf_spi_miso_pin_get": 146, "nrf_spi_txd_set": 146, "nrf_spi_rxd_get": 146, "nrf_spi_frequency_set": 146, "nrf_spi_configur": 146, "spi_bit_ord": [146, 149, 150, 153], "nrf_spi": [147, 154], "nrfx_spim": 148, "nrfx_spim_inst": 148, "nrfx_spim_default_config": 148, "nrfx_spim_flag_tx_postinc": 148, "nrfx_spim_flag_rx_postinc": 148, "nrfx_spim_single_xf": 148, "nrfx_spim_xfer_trx": 148, "nrfx_spim_xfer_tx": 148, "nrfx_spim_xfer_rx": 148, "nrfx_spim_inst_handler_get": 148, "nrfy_spim_xfer_desc_t": [148, 150], "nrfx_spim_xfer_desc_t": 148, "nrfx_spim_evt_handler_t": 148, "nrfx_spim_evt_t": 148, "nrfx_spim_evt_type_t": 148, "nrfx_spim_event_don": 148, "nrfx_spim_t": 148, "nrfx_spim_config_t": 148, "spim4": 148, "nrfx_spim_reconfigur": 148, "nrfx_spim_uninit": 148, "nrfx_spim_init_check": 148, "nrfx_spim_xfer": 148, "post": [148, 181], "nrfx_spim_start_task_address_get": 148, "nrf_spim_pin_not_connect": [148, 149, 150], "addition": 148, "nrfx_spim_end_event_address_get": 148, "nrfx_spim_xfer_dcx": 148, "cmd_length": 148, "preced": [148, 149, 150], "nrf_spim_dcx_cnt_all_cmd": [148, 149, 150], "nrf_spim_typ": [148, 149, 150], "ss_active_high": 148, "nrf_spim_mode_t": [148, 149, 150], "nrf_spim_bit_order_t": [148, 149, 150], "dcx_pin": [148, 149, 150], "cx": [148, 150], "rx_delai": [148, 150], "use_hw_ss": 148, "ss_durat": 148, "nrf_spim_hal": 149, "nrf_spim_inst_get": 149, "nrf_spim_has_16_mhz_freq": 149, "nrf_spim_has_32_mhz_freq": 149, "nrf_spim_has_frequ": [149, 150], "nrf_spim_has_prescal": [149, 150], "nrf_spim_has_array_list": [149, 150], "nrf_spim_has_dma_reg": 149, "nrf_spim_has_dma_tasks_ev": 149, "nrf_spim_has_hw_csn": [149, 150], "nrf_spim_has_dcx": [149, 150], "nrf_spim_has_rxdelai": [149, 150], "nrf_spim_has_stallstat": [149, 150], "stallstat": [149, 150], "nrf_spim_has_extend": [149, 150], "nrf_spim_pins_set": [149, 150], "nrf_spim_dma_rx_pattern_max_count": 149, "nrf_spim_dcx_default": 149, "nrf_spim_csn_default": 149, "nrf_spim_csndur_default": 149, "nrf_spim_csnpol_default": 149, "nrf_spim_rxdelay_default": 149, "nrf_spim_min_frequ": 149, "minim": [149, 210], "nrf_spim_base_frequency_320mhz": 149, "320": [149, 175], "nrf_spim_base_frequency_192mhz": 149, "nrf_spim_base_frequency_128mhz": 149, "nrf_spim_base_frequency_64mhz": 149, "nrf_spim_base_frequency_32mhz": 149, "nrf_spim_base_frequency_16mhz": 149, "nrf_spim_is_320mhz_spim": 149, "nrf_spim_is_192mhz_spim": 149, "nrf_spim_is_128mhz_spim": 149, "nrf_spim_is_64mhz_spim": 149, "nrf_spim_is_32mhz_spim": 149, "nrf_spim_base_frequency_get": 149, "nrf_spim_prescaler_max_get": 149, "nrf_spim_prescaler_min_get": 149, "nrf_spim_prescaler_calcul": 149, "nrf_spim_frequency_static_check": 149, "nrf_spim_task_t": [149, 150], "nrf_spim_task_start": 149, "nrf_spim_task_stop": 149, "nrf_spim_task_suspend": 149, "nrf_spim_task_resum": 149, "resum": [149, 174, 179, 181, 182, 186, 196, 197], "nrf_spim_task_enablerxmatch0": 149, "nrf_spim_task_enablerxmatch1": 149, "nrf_spim_task_enablerxmatch2": 149, "nrf_spim_task_enablerxmatch3": 149, "nrf_spim_task_disablerxmatch0": 149, "nrf_spim_task_disablerxmatch1": 149, "nrf_spim_task_disablerxmatch2": 149, "nrf_spim_task_disablerxmatch3": 149, "nrf_spim_event_t": [149, 150], "nrf_spim_event_start": 149, "nrf_spim_event_stop": 149, "nrf_spim_event_rxstart": 149, "nrf_spim_event_rxbuserror": 149, "nrf_spim_event_rxmatch0": 149, "nrf_spim_event_rxmatch1": 149, "nrf_spim_event_rxmatch2": 149, "nrf_spim_event_rxmatch3": 149, "nrf_spim_event_txstart": 149, "nrf_spim_event_txbuserror": 149, "nrf_spim_event_endrx": 149, "nrf_spim_event_endtx": 149, "nrf_spim_event_end": 149, "nrf_spim_short_mask_t": 149, "nrf_spim_short_end_start_mask": 149, "nrf_spim_short_rxmatch0_enablerxmatch1_mask": 149, "match0": [149, 153, 182], "enablematch1": [149, 153, 182], "nrf_spim_short_rxmatch1_enablerxmatch2_mask": 149, "match1": [149, 153, 182], "enablematch2": [149, 153, 182], "nrf_spim_short_rxmatch2_enablerxmatch3_mask": 149, "match2": [149, 153, 182], "enablematch3": [149, 153], "nrf_spim_short_rxmatch3_enablerxmatch0_mask": 149, "match3": [149, 153, 182], "enablematch4": 149, "nrf_spim_short_rxmatch0_disablerxmatch0_mask": 149, "disablematch0": [149, 153, 182], "nrf_spim_short_rxmatch1_disablerxmatch1_mask": 149, "disablematch1": [149, 153, 182], "nrf_spim_short_rxmatch2_disablerxmatch2_mask": 149, "disablematch2": [149, 153, 182], "nrf_spim_short_rxmatch3_disablerxmatch3_mask": 149, "disablematch3": [149, 153, 182], "nrf_spim_all_shorts_mask": 149, "nrf_spim_int_mask_t": [149, 150], "nrf_spim_int_started_mask": 149, "nrf_spim_int_stopped_mask": 149, "nrf_spim_int_rxready_mask": 149, "nrf_spim_int_rxbuserror_mask": 149, "buserror": [149, 153, 182], "nrf_spim_int_rxmatch0_mask": 149, "nrf_spim_int_rxmatch1_mask": 149, "nrf_spim_int_rxmatch2_mask": 149, "nrf_spim_int_rxmatch3_mask": 149, "nrf_spim_int_txready_mask": 149, "nrf_spim_int_txbuserror_mask": 149, "nrf_spim_int_endrx_mask": 149, "nrf_spim_int_endtx_mask": 149, "nrf_spim_int_end_mask": 149, "nrf_spim_all_ints_mask": 149, "nrf_spim_frequency_t": [149, 150], "nrf_spim_freq_125k": 149, "nrf_spim_freq_250k": 149, "nrf_spim_freq_500k": 149, "nrf_spim_freq_1m": 149, "nrf_spim_freq_2m": 149, "nrf_spim_freq_4m": 149, "nrf_spim_freq_8m": 149, "nrf_spim_freq_16m": 149, "nrf_spim_freq_32m": 149, "nrf_spim_mode_0": 149, "nrf_spim_mode_1": 149, "nrf_spim_mode_2": 149, "nrf_spim_mode_3": 149, "nrf_spim_bit_order_msb_first": 149, "nrf_spim_bit_order_lsb_first": 149, "nrf_spim_csn_pol_t": [149, 150], "nrf_spim_csn_pol_low": 149, "nrf_spim_csn_pol_high": 149, "nrf_spim_task_trigg": [149, 150], "nrf_spim_task_address_get": [149, 150], "nrf_spim_event_clear": [149, 150], "nrf_spim_event_check": [149, 150], "nrf_spim_event_address_get": [149, 150], "nrf_spim_shorts_en": [149, 150], "nrf_spim_shorts_dis": [149, 150], "nrf_spim_shorts_get": [149, 150], "nrf_spim_int_en": [149, 150], "nrf_spim_int_dis": [149, 150], "nrf_spim_int_enable_check": [149, 150], "nrf_spim_prescaler_set": [149, 150], "nrf_spim_prescaler_get": [149, 150], "nrf_spim_subscribe_set": [149, 150], "nrf_spim_subscribe_clear": [149, 150], "nrf_spim_publish_set": [149, 150], "nrf_spim_publish_clear": [149, 150], "nrf_spim_en": [149, 150], "nrf_spim_dis": [149, 150], "nrf_spim_enable_check": 149, "nrf_spim_sck_pin_get": [149, 150], "nrf_spim_mosi_pin_get": [149, 150], "nrf_spim_miso_pin_get": [149, 150], "nrf_spim_csn_configur": [149, 150], "stai": [149, 150, 196], "unselect": [149, 150], "nrf_spim_csn_pin_get": [149, 150], "nrf_spim_dcx_pin_set": [149, 150], "nrf_spim_dcx_pin_get": [149, 150], "nrf_spim_dcx_cnt_set": [149, 150], "nrf_spim_iftiming_set": [149, 150], "nrf_spim_stallstat_rx_clear": [149, 150], "stall": [149, 150, 185, 196, 197, 209], "nrf_spim_stallstat_rx_get": [149, 150], "nrf_spim_stallstat_tx_clear": [149, 150], "nrf_spim_stallstat_tx_get": [149, 150], "nrf_spim_frequency_set": [149, 150], "nrf_spim_frequency_get": 149, "nrf_spim_tx_buffer_set": [149, 150], "nrf_spim_tx_amount_get": [149, 150], "nrf_spim_tx_maxcnt_get": [149, 150], "nrf_spim_rx_buffer_set": [149, 150], "nrf_spim_rx_amount_get": 149, "nrf_spim_rx_maxcnt_get": [149, 150], "nrf_spim_configur": [149, 150], "nrf_spim_orc_set": [149, 150], "nrf_spim_tx_list_en": 149, "nrf_spim_tx_list_dis": 149, "nrf_spim_rx_list_en": 149, "nrf_spim_rx_list_dis": 149, "nrf_spim_rx_pattern_match_enable_set": 149, "nrf_spim_rx_pattern_match_enable_check": 149, "nrf_spim_rx_pattern_match_one_shot_en": 149, "shot": [149, 153, 175, 176, 182], "nrf_spim_rx_pattern_match_one_shot_dis": 149, "nrf_spim_rx_pattern_match_one_shot_check": 149, "nrf_spim_rx_pattern_match_candidate_set": 149, "look": [149, 153, 182], "nrf_spim_rx_pattern_match_candidate_get": 149, "nrf_spim_rx_terminate_on_bus_error_en": 149, "nrf_spim_rx_terminate_on_bus_error_dis": 149, "nrf_spim_rx_terminate_on_bus_error_check": 149, "nrf_spim_tx_terminate_on_bus_error_en": 149, "nrf_spim_tx_terminate_on_bus_error_dis": 149, "nrf_spim_tx_terminate_on_bus_error_check": 149, "nrfy_spim": 150, "nrfy_spim_has_hw_csn": 150, "nrfy_spim_has_dcx": 150, "nrfy_spim_has_rxdelai": 150, "nrfy_spim_has_stallstat": 150, "nrfy_spim_has_extend": 150, "nrfy_spim_has_array_list": 150, "nrfy_spim_has_frequ": 150, "nrfy_spim_has_prescal": 150, "nrfy_spim_periph_configur": 150, "nrfy_spim_config_t": 150, "nrfy_spim_int_init": 150, "nrfy_spim_int_uninit": 150, "nrfy_spim_events_process": 150, "nrfy_spim_buffers_set": 150, "nrfy_spim_xfer_start": 150, "nrfy_spim_abort": 150, "nrfy_spim_pins_get": 150, "nrfy_spim_pins_t": 150, "nrfy_spim_ext_pins_get": 150, "nrfy_spim_ext_pins_t": 150, "nrfy_spim_tx_list_set": 150, "nrfy_spim_rx_list_set": 150, "nrfy_spim_task_trigg": 150, "nrfy_spim_task_address_get": 150, "nrfy_spim_event_clear": 150, "nrfy_spim_event_check": 150, "nrfy_spim_event_address_get": 150, "nrfy_spim_shorts_en": 150, "nrfy_spim_shorts_dis": 150, "nrfy_spim_shorts_get": 150, "nrfy_spim_int_en": 150, "nrfy_spim_int_dis": 150, "nrfy_spim_int_enable_check": 150, "nrfy_spim_subscribe_set": 150, "nrfy_spim_subscribe_clear": 150, "nrfy_spim_publish_set": 150, "nrfy_spim_publish_clear": 150, "nrfy_spim_en": 150, "nrfy_spim_dis": 150, "nrfy_spim_pins_set": 150, "nrfy_spim_sck_pin_get": 150, "nrfy_spim_mosi_pin_get": 150, "nrfy_spim_miso_pin_get": 150, "nrfy_spim_csn_configur": 150, "nrfy_spim_csn_pin_get": 150, "nrfy_spim_dcx_pin_set": 150, "nrfy_spim_dcx_pin_get": 150, "nrfy_spim_dcx_cnt_set": 150, "nrfy_spim_iftiming_set": 150, "nrfy_spim_stallstat_rx_clear": 150, "nrfy_spim_stallstat_rx_get": 150, "nrfy_spim_stallstat_tx_clear": 150, "nrfy_spim_stallstat_tx_get": 150, "nrfy_spim_frequency_set": 150, "nrfy_spim_prescaler_set": 150, "nrfy_spim_prescaler_get": 150, "nrfy_spim_tx_buffer_set": 150, "nrfy_spim_tx_amount_get": 150, "nrfy_spim_tx_maxcnt_get": 150, "nrfy_spim_rx_buffer_set": 150, "nrfy_spim_rx_amount_get": 150, "nrfy_spim_rx_maxcnt_get": 150, "nrfy_spim_configur": 150, "nrfy_spim_orc_set": 150, "nrfy_spim_ext_config_t": 150, "csn_pol": 150, "csn_durat": 150, "occurr": 150, "exhaust": 150, "ext_config": 150, "nrf_spim": 151, "nrfx_spis_inst": 152, "nrfx_spis_default_config": 152, "0xfe": 152, "nrfx_spis_inst_handler_get": 152, "nrfx_spis_event_handler_t": 152, "nrfx_spis_evt_t": 152, "nrfx_spis_evt_type_t": 152, "nrfx_spis_buffers_set_don": 152, "nrfx_spis_xfer_don": 152, "nrfx_spis_evt_type_max": 152, "nrfx_spis_init": 152, "nrfx_spis_t": 152, "nrfx_spis_config_t": 152, "well": [152, 220], "upon": [152, 191], "nrfx_spis_reconfigur": 152, "nrfx_spis_uninit": 152, "nrfx_spis_init_check": 152, "nrfx_spis_buffers_set": 152, "appropri": 152, "client": 152, "nrf_spis_typ": [152, 153], "evt_typ": 152, "rx_amount": [152, 185], "tx_amount": [152, 185], "nrf_spis_pin_not_connect": [152, 153], "nrf_spis_mode_t": [152, 153], "nrf_spis_bit_order_t": [152, 153], "csn_pullup": 152, "miso_dr": 152, "def": [152, 153], "nrf_spis_hal": 153, "nrf_spis_has_dma_reg": 153, "nrf_spis_has_dma_tasks_ev": 153, "nrf_spis_dma_rx_pattern_max_count": 153, "nrf_spis_inst_get": 153, "nrf_spis_pins_set": 153, "nrf_spis_task_t": 153, "nrf_spis_task_acquir": 153, "nrf_spis_task_releas": 153, "nrf_spis_task_enablerxmatch0": 153, "nrf_spis_task_enablerxmatch1": 153, "nrf_spis_task_enablerxmatch2": 153, "nrf_spis_task_enablerxmatch3": 153, "nrf_spis_task_disablerxmatch0": 153, "nrf_spis_task_disablerxmatch1": 153, "nrf_spis_task_disablerxmatch2": 153, "nrf_spis_task_disablerxmatch3": 153, "nrf_spis_event_t": 153, "nrf_spis_event_rxstart": 153, "nrf_spis_event_rxbuserror": 153, "nrf_spis_event_rxmatch0": 153, "nrf_spis_event_rxmatch1": 153, "nrf_spis_event_rxmatch2": 153, "nrf_spis_event_rxmatch3": 153, "nrf_spis_event_txstart": 153, "nrf_spis_event_txbuserror": 153, "nrf_spis_event_endrx": 153, "nrf_spis_event_endtx": 153, "nrf_spis_event_end": 153, "grant": [153, 215], "nrf_spis_event_acquir": 153, "nrf_spis_short_mask_t": 153, "nrf_spis_short_end_acquir": 153, "nrf_spis_short_rxmatch0_enablerxmatch1_mask": 153, "nrf_spis_short_rxmatch1_enablerxmatch2_mask": 153, "nrf_spis_short_rxmatch2_enablerxmatch3_mask": 153, "nrf_spis_short_rxmatch3_enablerxmatch0_mask": 153, "enablematch0": [153, 182], "nrf_spis_short_rxmatch0_disablerxmatch0_mask": 153, "nrf_spis_short_rxmatch1_disablerxmatch1_mask": 153, "nrf_spis_short_rxmatch2_disablerxmatch2_mask": 153, "nrf_spis_short_rxmatch3_disablerxmatch3_mask": 153, "nrf_spis_all_shorts_mask": 153, "nrf_spis_int_mask_t": 153, "nrf_spis_int_end_mask": 153, "nrf_spis_int_acquired_mask": 153, "nrf_spis_int_rxready_mask": 153, "nrf_spis_int_rxbuserror_mask": 153, "nrf_spis_int_rxmatch0_mask": 153, "nrf_spis_int_rxmatch1_mask": 153, "nrf_spis_int_rxmatch2_mask": 153, "nrf_spis_int_rxmatch3_mask": 153, "nrf_spis_int_txready_mask": 153, "nrf_spis_int_txbuserror_mask": 153, "nrf_spis_int_endrx_mask": 153, "nrf_spis_int_endtx_mask": 153, "nrf_spis_all_ints_mask": 153, "nrf_spis_mode_0": 153, "nrf_spis_mode_1": 153, "nrf_spis_mode_2": 153, "nrf_spis_mode_3": 153, "nrf_spis_bit_order_msb_first": 153, "nrf_spis_bit_order_lsb_first": 153, "nrf_spis_semstat_t": 153, "nrf_spis_semstat_fre": 153, "nrf_spis_semstat_cpu": 153, "nrf_spis_semstat_spi": 153, "nrf_spis_semstat_cpupend": 153, "handov": 153, "nrf_spis_status_mask_t": 153, "nrf_spis_status_overread": 153, "nrf_spis_status_overflow": 153, "nrf_spis_task_trigg": 153, "nrf_spis_task_address_get": 153, "nrf_spis_event_clear": 153, "nrf_spis_event_check": 153, "nrf_spis_event_address_get": 153, "nrf_spis_shorts_en": 153, "nrf_spis_shorts_dis": 153, "nrf_spis_int_en": 153, "nrf_spis_int_dis": 153, "nrf_spis_int_enable_check": 153, "nrf_spis_subscribe_set": 153, "nrf_spis_subscribe_clear": 153, "nrf_spis_publish_set": 153, "nrf_spis_publish_clear": 153, "nrf_spis_en": 153, "nrf_spis_dis": 153, "nrf_spis_enable_check": 153, "nrf_spis_semaphore_status_get": 153, "nrf_spis_status_get": 153, "nrf_spis_sck_pin_get": 153, "nrf_spis_mosi_pin_get": 153, "nrf_spis_miso_pin_get": 153, "nrf_spis_csn_pin_get": 153, "nrf_spis_tx_buffer_set": 153, "nrf_spis_rx_buffer_set": 153, "nrf_spis_tx_amount_get": 153, "nrf_spis_rx_amount_get": 153, "nrf_spis_configur": 153, "nrf_spis_def_set": 153, "nrf_spis_orc_set": 153, "nrf_spis_tx_list_en": 153, "nrf_spis_tx_list_dis": 153, "nrf_spis_rx_list_en": 153, "nrf_spis_rx_list_dis": 153, "nrf_spis_rx_pattern_match_enable_set": 153, "nrf_spis_rx_pattern_match_enable_check": 153, "nrf_spis_rx_pattern_match_one_shot_en": 153, "nrf_spis_rx_pattern_match_one_shot_dis": 153, "nrf_spis_rx_pattern_match_one_shot_check": 153, "nrf_spis_rx_pattern_match_candidate_set": 153, "nrf_spis_rx_pattern_match_candidate_get": 153, "nrf_spis_rx_terminate_on_bus_error_en": 153, "nrf_spis_rx_terminate_on_bus_error_dis": 153, "nrf_spis_rx_terminate_on_bus_error_check": 153, "nrf_spis_tx_terminate_on_bus_error_en": 153, "nrf_spis_tx_terminate_on_bus_error_dis": 153, "nrf_spis_tx_terminate_on_bus_error_check": 153, "nrf_spu_hal": 155, "nrf_spu_has_peripheral_access": 155, "nrf_spu_has_peripheral_access_error_info": 155, "nrf_spu_has_ownership": 155, "ownership": [155, 195], "nrf_spu_has_memori": 155, "nrf_spu_has_block": 155, "nrf_spu_has_bel": 155, "bell": 155, "nrf_spu_has_domain": 155, "nrf_spu_has_ipct": 155, "nrf_spu_has_tdd": 155, "tdd": 155, "nrf_spu_has_mramc": 155, "mramc": 155, "nrf_spu_periph_count": 155, "nrf_spu_feature_ipct_channel_count": 155, "nrf_spu_feature_ipct_interrupt_count": 155, "nrf_spu_feature_dppi_channel_count": 155, "nrf_spu_feature_dppi_channel_group_count": 155, "nrf_spu_feature_gpiote_count": 155, "nrf_spu_feature_gpiote_channel_count": 155, "nrf_spu_feature_gpiote_interrupt_count": 155, "nrf_spu_feature_gpio_count": 155, "nrf_spu_feature_gpio_pin_count": 155, "nrf_spu_feature_grtc_cc_count": 155, "nrf_spu_feature_grtc_interrupt_count": 155, "nrf_spu_feature_bell_domain_count": 155, "nrf_spu_feature_bell_bell_count": 155, "nrf_spu_feature_tdd_count": 155, "nrf_spu_feature_mramc_count": 155, "nrf_spu_event_t": 155, "nrf_spu_event_ramaccerr": 155, "nrf_spu_event_flashaccerr": 155, "nrf_spu_event_periphaccerr": 155, "nrf_spu_int_mask_t": 155, "nrf_spu_int_ramaccerr_mask": 155, "ramaccerr": 155, "nrf_spu_int_flashaccerr_mask": 155, "flashaccerr": 155, "nrf_spu_int_periphaccerr_mask": 155, "periphaccerr": 155, "nrf_spu_nsc_size_t": 155, "callabl": 155, "nsc": 155, "nrf_spu_nsc_size_dis": 155, "nrf_spu_nsc_size_32b": 155, "nrf_spu_nsc_size_64b": 155, "nrf_spu_nsc_size_128b": 155, "nrf_spu_nsc_size_256b": 155, "nrf_spu_nsc_size_512b": 155, "nrf_spu_nsc_size_1024b": 155, "nrf_spu_nsc_size_2048b": 155, "nrf_spu_nsc_size_4096b": 155, "nrf_spu_mem_perm_t": 155, "nrf_spu_mem_perm_execut": 155, "nrf_spu_mem_perm_writ": 155, "nrf_spu_mem_perm_read": 155, "nrf_spu_securemapping_t": 155, "cortex": [155, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232], "nrf_spu_securemapping_nonsecur": 155, "nrf_spu_securemapping_secur": 155, "nrf_spu_securemapping_userselect": 155, "nrf_spu_securemapping_split": 155, "nrf_spu_dma_t": 155, "nrf_spu_dma_nodma": 155, "nrf_spu_dma_noseparateattribut": 155, "nrf_spu_dma_separateattribut": 155, "nrf_spu_feature_t": 155, "nrf_spu_feature_ipct_channel": 155, "nrf_spu_feature_ipct_interrupt": 155, "nrf_spu_feature_dppi_channel": 155, "nrf_spu_feature_dppi_channel_group": 155, "nrf_spu_feature_gpiote_channel": 155, "nrf_spu_feature_gpiote_interrupt": 155, "nrf_spu_feature_gpio_pin": 155, "nrf_spu_feature_grtc_cc": 155, "nrf_spu_feature_grtc_syscount": 155, "nrf_spu_feature_grtc_interrupt": 155, "nrf_spu_feature_bells_bel": 155, "nrf_spu_feature_tdd": 155, "nrf_spu_feature_mramc_waitst": 155, "nrf_spu_feature_mramc_autodpowerdown": 155, "nrf_spu_feature_mramc_readi": 155, "nrf_spu_event_clear": 155, "nrf_spu_typ": 155, "nrf_spu_event_check": 155, "nrf_spu_int_en": 155, "nrf_spu_int_dis": 155, "nrf_spu_int_enable_check": 155, "nrf_spu_publish_set": 155, "nrf_spu_publish_clear": 155, "nrf_spu_tz_is_avail": 155, "nrf_spu_dppi_config_set": 155, "dppi_id": 155, "lock_conf": 155, "nrf_spu_gpio_config_set": 155, "gpio_port": 155, "gpio_mask": 155, "nrf_spu_flashnsc_set": 155, "flash_nsc_id": 155, "flash_nsc_siz": 155, "region_numb": 155, "nrf_spu_ramnsc_set": 155, "ram_nsc_id": 155, "ram_nsc_siz": 155, "nrf_spu_flashregion_set": 155, "secure_attr": 155, "nrf_spu_ramregion_set": 155, "nrf_spu_peripheral_set": 155, "peripheral_id": 155, "secure_dma": 155, "nrf_spu_extdomain_set": 155, "domain_id": 155, "nrf_spu_periphaccerr_address_get": 155, "nrf_spu_periphaccerr_ownerid_get": 155, "nrf_spu_periph_perm_securemapping_get": 155, "nrf_spu_periph_perm_dma_get": 155, "nrf_spu_periph_perm_secattr_get": 155, "nrf_spu_periph_perm_secattr_set": 155, "nrf_spu_periph_perm_dmasec_get": 155, "nrf_spu_periph_perm_dmasec_set": 155, "nrf_spu_periph_perm_block_get": 155, "nrf_spu_periph_perm_block_en": 155, "nrf_spu_periph_perm_lock_get": 155, "nrf_spu_periph_perm_lock_en": 155, "nrf_spu_periph_perm_ownerid_get": 155, "nrf_spu_periph_perm_ownerid_set": 155, "nrf_spu_periph_perm_ownerprog_get": 155, "nrf_spu_periph_perm_present_get": 155, "nrf_spu_feature_secattr_get": 155, "subindex": 155, "nrf_spu_feature_secattr_set": 155, "nrf_spu_feature_lock_get": 155, "nrf_spu_feature_lock_en": 155, "nrf_spu_feature_block_get": 155, "nrf_spu_feature_block_en": 155, "nrf_spu_feature_ownerid_get": 155, "nrf_spu_feature_ownerid_set": 155, "nrf_spu": 156, "nrf_stm_hal": 157, "macrocel": 157, "nrf_stm_feature_t": 157, "ro": 157, "nrf_stm_feature_check": 157, "rw": 157, "nrf_stm_feature_set": 157, "negat": 157, "nrf_stm_feature_present_check": 157, "nrf_stm_feature_het": 157, "nrf_stm_feature_heerr": 157, "nrf_stm_feature_hemastr": 157, "nrf_stm_feature_stm": 157, "nrf_stm_feature_tsen": 157, "timestamp": 157, "nrf_stm_feature_syncen": 157, "nrf_stm_feature_compen": 157, "compress": 157, "nrf_stm_feature_busi": 157, "nrf_stm_feature_fifoaf": 157, "nrf_stm_feature_asyncp": 157, "async": 157, "escal": 157, "nrf_stm_feature_priorinvdi": 157, "invers": 157, "nrf_stm_feature_clkon": 157, "architectur": 157, "nrf_stm_feature_afreadyhigh": 157, "afreadi": 157, "nrf_stm_feature_tsfreq": 157, "nrf_stm_feature_forcet": 157, "stimulu": 157, "nrf_stm_feature_tsprescal": 157, "nrf_stm_feature_hwten": 157, "nrf_stm_feature_swoen": 157, "anynchron": 157, "model": 157, "nrf_stm_feature_spt": 157, "nrf_stm_feature_sp": 157, "nrf_stm_feature_spoverrid": 157, "nrf_stm_feature_privmask": 157, "nrf_stm_feature_integr": 157, "nrf_stm_feature_lc_pres": 157, "nrf_stm_feature_lc_lock": 157, "nrf_stm_feature_nsid": 157, "invas": [157, 162], "nrf_stm_feature_nsnid": 157, "nrf_stm_feature_sid": 157, "nrf_stm_feature_snid": 157, "nrf_stm_output_t": 157, "nrf_stm_output_trigoutspt": 157, "stmspter": 157, "nrf_stm_output_trigoutsw": 157, "trig": 157, "nrf_stm_output_trigouthet": 157, "stmheter": 157, "nrf_stm_output_asyncout": 157, "nrf_stm_output_atdatam_0": 157, "atdatam": 157, "nrf_stm_output_atdatam_7": 157, "nrf_stm_output_atdatam_15": 157, "nrf_stm_output_atdatam_23": 157, "nrf_stm_output_atdatam_31": 157, "nrf_stm_output_atidm_0": 157, "nrf_stm_output_atidm_1": 157, "nrf_stm_output_atidm_2": 157, "nrf_stm_output_atidm_3": 157, "nrf_stm_output_atidm_4": 157, "nrf_stm_output_atidm_5": 157, "nrf_stm_output_atidm_6": 157, "nrf_stm_output_atvalidm": 157, "nrf_stm_output_afreadym": 157, "atb": 157, "nrf_stm_output_atbytesm_0": 157, "atdata": 157, "nrf_stm_output_atbytesm_1": 157, "nrf_stm_input_t": 157, "nrf_stm_input_atreadym": 157, "nrf_stm_input_afvalidm": 157, "nrf_stm_dma_sens_t": 157, "sensit": 157, "nrf_stm_dmactlr_lt25": 157, "nrf_stm_dmactlr_lt50": 157, "nrf_stm_dmactlr_lt75": 157, "nrf_stm_dmactlr_lt100": 157, "nrf_stm_heidr_class_t": 157, "nrf_stm_heidr_class_hardware_event_control": 157, "nrf_stm_spfeat1r_prot_t": 157, "nrf_stm_sfpeat1r_prot_stpv2": 157, "stpv2": 157, "nrf_stm_spfeat1r_ts_t": 157, "nrf_stm_spfeat1r_ts_absolut": 157, "timestap": 157, "nrf_stm_spfeat1r_syncen_t": 157, "stmtcsr": 157, "syncen": 157, "nrf_stm_spfeat1r_syncen_read_as_on": 157, "nrf_stm_spfeat2r_spcomp_t": 157, "nrf_stm_spfeat2r_spcomp_programm": 157, "nrf_stm_spfeat2r_sptrtype_t": 157, "nrf_stm_spfeat2r_sptrtype_invariant_and_guarante": 157, "invari": 157, "guarante": 157, "nrf_stm_spfeat2r_dsize_t": 157, "fundament": 157, "nrf_stm_spfeat2r_dsize_32": 157, "nrf_stm_lsr_type_t": 157, "nrf_stm_lsr_type_8": 157, "nrf_stm_lsr_type_32": 157, "nrf_stm_devtype_major_t": 157, "major": [157, 234, 235], "classif": 157, "nrf_stm_devtype_major_trace_sourc": 157, "nrf_stm_devtype_sub_t": 157, "nrf_stm_devtype_sub_stimulus_trac": 157, "nrf_stm_type": 157, "nrf_stm_input_check": 157, "nrf_stm_output_set": 157, "nrf_stm_dmactlr_sens_set": 157, "sen": 157, "sensiv": 157, "nrf_stm_dmactlr_sens_get": 157, "nrf_stm_hemastr_get": 157, "nrf_stm_hefeat1r_numhe_get": 157, "suppot": 157, "nrf_stm_heidr_class_get": 157, "track": [157, 191], "nrf_stm_heidr_classrev_get": 157, "nrf_stm_heidr_vendspec_get": 157, "vendor": 157, "modif": [157, 240], "nrf_stm_tcsr_traceid_set": 157, "trace_id": 157, "nrf_stm_tcsr_traceid_get": 157, "nrf_stm_spfeat1r_prot_get": 157, "nrf_stm_spfeat1r_ts_get": 157, "nrf_stm_spfeat1r_tracebus_get": 157, "nrf_stm_spfeat1r_trigctl_get": 157, "nrf_stm_spfeat1r_syncen_get": 157, "nrf_stm_spfeat2r_spcomp_get": 157, "nrf_stm_spfeat2r_sptrtype_get": 157, "nrf_stm_spfeat2r_dsize_get": 157, "nrf_stm_spfeat3r_nummast_get": 157, "minu": 157, "nrf_stm_lar_access_set": 157, "nrf_stm_lsr_type_get": 157, "nrf_stm_devid_numsp_get": 157, "nrf_stm_devtype_major_get": 157, "nrf_stm_devtype_sub_get": 157, "nrf_stm": 158, "nrfx_systick": 159, "64mhz": 159, "wide": 159, "around": 159, "highest": [159, 239], "librari": [159, 240], "halv": 159, "safeti": [159, 220], "nrfx_systick_init": 159, "nrfx_systick_get": 159, "nrfx_systick_state_t": 159, "p_state": 159, "nrfx_systick_test": 159, "plu": 159, "nrfx_systick_delay_tick": 159, "nrfx_systick_delay_u": 159, "nrfx_systick_delay_m": 159, "nrf_systick_h": 160, "design": 160, "here": [160, 185, 234, 243], "moreov": 160, "nrf_systick_val_mask": 160, "nrf_systick_csr_flags_t": 160, "nrf_systick_csr_set": 160, "nrf_systick_csr_get": 160, "nrf_systick_csr_countflag_mask": 160, "nrf_systick_csr_clksource_mask": 160, "nrf_systick_csr_clksource_ref": 160, "nrf_systick_csr_clksource_cpu": 160, "nrf_systick_csr_tickint_mask": 160, "nrf_systick_csr_tickint_en": 160, "nrf_systick_csr_tickint_dis": 160, "nrf_systick_csr_enable_mask": 160, "nrf_systick_csr_en": 160, "nrf_systick_csr_dis": 160, "nrf_systick_load_get": 160, "nrf_systick_load_set": 160, "nrf_systick_val_get": 160, "nrf_systick_val_clear": 160, "nrf_systick_calib_get": 160, "nrf_systick": 161, "nrf_tampc_hal": 162, "nrf_tampc_key_mask": 162, "nrf_tampc_has_event_write_error": 162, "nrf_tampc_has_active_shield_channel": 162, "shield": 162, "nrf_tampc_has_extended_protector": 162, "nrf_tampc_has_erase_protector": 162, "protector": 162, "nrf_tampc_has_external_tamperswitch_protector": 162, "nrf_tampc_has_ap_spiden_protector": 162, "privilig": 162, "nrf_tampc_has_detectors_en": 162, "nrf_tampc_has_coresight": 162, "coresight": 162, "nrf_tampc_has_warmboot": 162, "warm": 162, "nrf_tampc_has_external_tamperswitch_detector": 162, "nrf_tampc_event_t": 162, "nrf_tampc_event_tamp": 162, "nrf_tampc_event_write_error": 162, "writeprotect": 162, "nrf_tapmc_int_mask_t": 162, "nrf_tampc_int_tamper_mask": 162, "nrf_tampc_int_write_error_mask": 162, "writeerror": 162, "nrf_tampc_all_ints_mask": 162, "nrf_tampc_activeshield_mask_t": 162, "nrf_tampc_activeshield_channel_0_mask": 162, "nrf_tampc_activeshield_channel_1_mask": 162, "nrf_tampc_activeshield_channel_2_mask": 162, "nrf_tampc_activeshield_channel_3_mask": 162, "nrf_tampc_all_activeshield_channels_mask": 162, "nrf_tampc_detector_t": 162, "nrf_tampc_detector_active_shield": 162, "nrf_tampc_detector_tamper_switch": 162, "nrf_tampc_detector_protected_sign": 162, "nrf_tampc_detector_cracen": 162, "nrf_tampc_detector_glitch_domain_slow": 162, "slow": 162, "nrf_tampc_detector_glitch_domain_fast": 162, "nrf_tampc_protect_t": 162, "nrf_tampc_protect_active_shield": 162, "nrf_tampc_protect_tamper_switch": 162, "nrf_tampc_protect_cracen": 162, "nrf_tampc_protect_glitch_domain_slow": 162, "nrf_tampc_protect_glitch_domain_fast": 162, "nrf_tampc_protect_reseten_ext": 162, "nrf_tampc_protect_reseten_int": 162, "nrf_tampc_protect_erase_protect": 162, "nrf_tampc_debug_type_t": 162, "nrf_tampc_debug_type_dbgen": 162, "nrf_tampc_debug_type_niden": 162, "nrf_tampc_debug_type_spiden": 162, "nrf_tampc_debug_type_spniden": 162, "nrf_tampc_debug_type_deviceen": 162, "circuitri": 162, "nrf_tampc_warmboot_mode_t": 162, "nrf_tampc_warmboot_mode_unret_idl": 162, "nrf_tampc_warmboot_mode_systemoff": 162, "nrf_tampc_event_clear": 162, "nrf_tampc_typ": 162, "nrf_tampc_event_check": 162, "nrf_tampc_event_address_get": 162, "nrf_tampc_int_en": 162, "nrf_tampc_int_dis": 162, "nrf_tampc_int_enable_check": 162, "nrf_tampc_int_pending_get": 162, "nrf_tampc_detector_status_check": 162, "nrf_tampc_detector_status_clear": 162, "nrf_tampc_activeshield_channel_en": 162, "nrf_tampc_activeshield_channel_dis": 162, "nrf_tampc_activeshield_channel_enable_check": 162, "nrf_tampc_domain_ctrl_value_set": 162, "nrf_domain_t": [162, 195, 243, 244], "nrf_tampc_domain_ctrl_value_get": 162, "nrf_tampc_domain_ctrl_lock_set": 162, "nrf_tampc_domain_ctrl_lock_get": 162, "nrf_tampc_ap_ctrl_value_set": 162, "nrf_tampc_ap_ctrl_value_get": 162, "nrf_tampc_ap_ctrl_lock_set": 162, "nrf_tampc_ap_ctrl_lock_get": 162, "nrf_tampc_coresight_ctrl_value_set": 162, "nrf_tampc_coresight_ctrl_value_get": 162, "nrf_tampc_coresight_ctrl_lock_set": 162, "nrf_tampc_coresight_ctrl_lock_get": 162, "nrf_tampc_coresight_ctrl_fault_set": 162, "inject": [162, 234], "nrf_tampc_coresight_ctrl_fault_get": 162, "nrf_tampc_warmboot_ctrl_value_set": 162, "nrf_tampc_warmboot_ctrl_value_get": 162, "nrf_tampc_warmboot_ctrl_lock_set": 162, "nrf_tampc_warmboot_ctrl_lock_get": 162, "nrf_tampc_warmboot_ctrl_fault_set": 162, "nrf_tampc_warmboot_ctrl_fault_get": 162, "nrf_tampc_warmboot_status_check": 162, "nrf_tampc_warmboot_status_clear": 162, "nrf_tampc_protector_ctrl_value_set": 162, "nrf_tampc_protector_ctrl_value_get": 162, "nrf_tampc_protector_ctrl_lock_set": 162, "nrf_tampc_protector_ctrl_lock_get": 162, "nrf_tampc_protector_status_check": 162, "nrf_tampc_protector_status_clear": 162, "nrf_tampc": 163, "nrfx_tbm": 164, "nrfx_tbm_default_config": 164, "nrfx_tbm_event_handler_t": 164, "nrf_tbm_event_t": [164, 165, 166], "nrfx_tbm_init": 164, "nrfx_tbm_config_t": 164, "nrfx_tbm_start": 164, "nrfx_tbm_stop": 164, "nrfx_tbm_uninit": 164, "nrfx_tbm_init_check": 164, "nrfx_tbm_count_get": 164, "nrf_tbm_hal": 165, "nrf_tbm_task_t": [165, 166], "nrf_tbm_task_start": 165, "nrf_tbm_task_stop": 165, "nrf_tbm_task_flush": 165, "nrf_tbm_event_halfful": 165, "nrf_tbm_event_ful": 165, "nrf_tbm_event_flush": 165, "nrf_tbm_int_mask_t": [165, 166], "nrf_tbm_int_halffull_mask": 165, "halfful": 165, "nrf_tbm_int_full_mask": 165, "nrf_tbm_int_flush_mask": 165, "nrf_tbm_task_trigg": [165, 166], "nrf_tbm_type": [165, 166], "nrf_tbm_event_clear": [165, 166], "nrf_tbm_event_check": [165, 166], "nrf_tbm_int_en": [165, 166], "nrf_tbm_int_set": 165, "nrf_tbm_int_dis": [165, 166], "nrf_tbm_int_enable_check": [165, 166], "nrf_tbm_int_pending_get": 165, "nrf_tbm_buffersize_set": 165, "nrf_tbm_count_get": [165, 166], "nrfy_tbm": 166, "nrfy_tbm_configur": 166, "nrfy_tbm_int_init": 166, "interrutp": 166, "nrfy_tbm_int_uninit": 166, "nrfy_tbm_events_process": 166, "nrfy_tbm_count_get": 166, "nrfy_tbm_task_trigg": 166, "nrfy_tbm_event_clear": 166, "nrfy_tbm_event_check": 166, "nrfy_tbm_int_en": 166, "nrfy_tbm_int_dis": 166, "nrfy_tbm_int_enable_check": 166, "nrf_tbm": 167, "nrf_tdm_hal": 168, "multiplex": 168, "nrf_tdm_pin_not_connect": 168, "nrf_tdm_pins_set": 168, "nrf_tdm_task_t": 168, "nrf_tdm_task_start": 168, "nrf_tdm_task_stop": 168, "nrf_tdm_task_abort": 168, "nrf_tdm_event_t": 168, "nrf_tdm_event_rxptrupd": 168, "nrf_tdm_event_stop": 168, "nrf_tdm_event_abort": 168, "nrf_tdm_event_txptrupd": 168, "nrf_tdm_event_maxcnt": 168, "fsync": 168, "nrf_tdm_int_mask_t": 168, "nrf_tdm_int_rxptrupd_mask_mask": 168, "nrf_tdm_int_stopped_mask_mask": 168, "nrf_tdm_int_aborted_mask": 168, "events_abort": 168, "nrf_tdm_int_txptrupd_mask_mask": 168, "nrf_tdm_int_maxcnt_mask": 168, "events_maxcnt": 168, "nrf_tdm_mode_t": 168, "nrf_tdm_mode_mast": 168, "nrf_tdm_mode_slav": 168, "nrf_tdm_rxtxen_t": 168, "nrf_tdm_rxtxen_duplex": 168, "nrf_tdm_rxtxen_rx": 168, "nrf_tdm_rxtxen_tx": 168, "nrf_tdm_mck_div_t": 168, "nrf_tdm_mck_div_2": 168, "nrf_tdm_mck_div_3": 168, "nrf_tdm_mck_div_4": 168, "nrf_tdm_mck_div_5": 168, "nrf_tdm_mck_div_6": 168, "nrf_tdm_mck_div_8": 168, "nrf_tdm_mck_div_10": 168, "nrf_tdm_mck_div_11": 168, "nrf_tdm_mck_div_15": 168, "nrf_tdm_mck_div_16": 168, "nrf_tdm_mck_div_21": 168, "nrf_tdm_mck_div_23": 168, "nrf_tdm_mck_div_30": 168, "nrf_tdm_mck_div_31": 168, "nrf_tdm_mck_div_32": 168, "nrf_tdm_mck_div_42": 168, "nrf_tdm_mck_div_63": 168, "nrf_tdm_mck_div_125": 168, "nrf_tdm_sck_div_t": 168, "nrf_tdm_sck_div_2": 168, "nrf_tdm_sck_div_3": 168, "nrf_tdm_sck_div_4": 168, "nrf_tdm_sck_div_5": 168, "nrf_tdm_sck_div_6": 168, "nrf_tdm_sck_div_8": 168, "nrf_tdm_sck_div_10": 168, "nrf_tdm_sck_div_11": 168, "nrf_tdm_sck_div_15": 168, "nrf_tdm_sck_div_16": 168, "nrf_tdm_sck_div_21": 168, "nrf_tdm_sck_div_23": 168, "nrf_tdm_sck_div_30": 168, "nrf_tdm_sck_div_31": 168, "nrf_tdm_sck_div_32": 168, "nrf_tdm_sck_div_42": 168, "nrf_tdm_sck_div_63": 168, "nrf_tdm_sck_div_125": 168, "nrf_tdm_src_t": 168, "nrf_tdm_src_pclk32m": 168, "nrf_tdm_src_aclk": 168, "nrf_tdm_swidth_t": 168, "nrf_tdm_swidth_8bit": 168, "nrf_tdm_swidth_16bit": 168, "nrf_tdm_swidth_24bit": 168, "nrf_tdm_swidth_32bit": 168, "nrf_tdm_swidth_8bit_in16bit": 168, "nrf_tdm_swidth_8bit_in32bit": 168, "nrf_tdm_swidth_16bit_in32bit": 168, "nrf_tdm_swidth_24bit_in32bit": 168, "nrf_tdm_align_t": 168, "nrf_tdm_align_left": 168, "nrf_tdm_align_right": 168, "nrf_tdm_channel_mask_t": 168, "nrf_tdm_channel_rx0_mask": 168, "nrf_tdm_channel_rx1_mask": 168, "nrf_tdm_channel_rx2_mask": 168, "nrf_tdm_channel_rx3_mask": 168, "nrf_tdm_channel_rx4_mask": 168, "nrf_tdm_channel_rx5_mask": 168, "nrf_tdm_channel_rx6_mask": 168, "nrf_tdm_channel_rx7_mask": 168, "nrf_tdm_channel_tx0_mask": 168, "nrf_tdm_channel_tx1_mask": 168, "nrf_tdm_channel_tx2_mask": 168, "nrf_tdm_channel_tx3_mask": 168, "nrf_tdm_channel_tx4_mask": 168, "nrf_tdm_channel_tx5_mask": 168, "nrf_tdm_channel_tx6_mask": 168, "nrf_tdm_channel_tx7_mask": 168, "nrf_tdm_channels_count_t": 168, "nrf_tdm_channels_count_1": 168, "nrf_tdm_channels_count_2": 168, "nrf_tdm_channels_count_3": 168, "nrf_tdm_channels_count_4": 168, "nrf_tdm_channels_count_5": 168, "nrf_tdm_channels_count_6": 168, "nrf_tdm_channels_count_7": 168, "nrf_tdm_channels_count_8": 168, "nrf_tdm_channel_delay_t": 168, "nrf_tdm_channel_delay_non": 168, "dsp": 168, "nrf_tdm_channel_delay_1ck": 168, "nrf_tdm_channel_delay_2ck": 168, "nrf_tdm_polarity_t": 168, "nrf_tdm_polarity_posedg": 168, "nrf_tdm_polarity_negedg": 168, "nrf_tdm_fsync_duration_t": 168, "nrf_tdm_fsync_duration_sck": 168, "nrf_tdm_fsync_duration_channel": 168, "nrf_tdm_task_trigg": 168, "nrf_tdm_type": 168, "nrf_tdm_task_address_get": 168, "nrf_tdm_event_clear": 168, "nrf_tdm_event_check": 168, "nrf_tdm_event_address_get": 168, "nrf_tdm_int_en": 168, "nrf_tdm_int_dis": 168, "nrf_tdm_int_enable_check": 168, "nrf_tdm_enabl": 168, "nrf_tdm_disabl": 168, "nrf_tdm_enable_check": 168, "nrf_tdm_subscribe_set": 168, "nrf_tdm_subscribe_clear": 168, "nrf_tdm_publish_set": 168, "nrf_tdm_publish_clear": 168, "nrf_tdm_pins_t": 168, "nrf_tdm_sck_pin_get": 168, "nrf_tdm_fsync_pin_get": 168, "nrf_tdm_mck_pin_get": 168, "nrf_tdm_sdout_pin_get": 168, "nrf_tdm_sdin_pin_get": 168, "nrf_tdm_configur": 168, "nrf_tdm_config_t": 168, "nrf_tdm_mck_set": 168, "nrf_tdm_rx_count_set": 168, "At": [168, 191, 215, 232, 234], "nrf_tdm_tx_count_set": 168, "nrf_tdm_transfer_direction_set": 168, "nrf_tdm_rx_buffer_set": 168, "nrf_tdm_tx_buffer_set": 168, "nrf_tdm_rx_buffer_get": 168, "nrf_tdm_current_tx_transfer_amount_get": 168, "nrf_tdm_last_tx_transfer_amount_get": 168, "nrf_tdm_current_rx_transfer_amount_get": 168, "nrf_tdm_last_rx_transfer_amount_get": 168, "nrf_tdm_tx_buffer_get": 168, "nrf_tdm_mck_configur": 168, "nrf_tdm_sck_configur": 168, "nrf_tdm": [168, 169], "num_of_channel": 168, "nnumber": 168, "channel_delai": 168, "sck_setup": 168, "sck_polar": 168, "fsync_polar": 168, "fsync_dur": 168, "fsync_pin": 168, "nrfx_temp": 170, "temperatur": [170, 171, 172], "nrfx_temp_default_config": 170, "nrfx_temp_data_handler_t": 170, "complement": [170, 171, 172], "represent": [170, 245], "celsiu": 170, "nrfx_temp_calcul": 170, "nrfx_temp_init": 170, "nrfx_temp_config_t": 170, "nrfx_temp_uninit": 170, "nrfx_temp_init_check": 170, "nrfx_temp_result_get": 170, "nrfx_temp_measur": 170, "raw_measur": 170, "2575": 170, "nrf_temp_hal": 171, "nrf_temp_has_calibr": [171, 172], "nrf_temp_task_t": [171, 172], "nrf_temp_task_start": 171, "nrf_temp_task_stop": 171, "nrf_temp_event_t": [171, 172], "nrf_temp_event_datardi": 171, "nrf_temp_int_mask_t": [171, 172], "nrf_temp_int_datardy_mask": 171, "datardi": 171, "nrf_temp_int_en": [171, 172], "nrf_temp_typ": [171, 172], "nrf_temp_int_dis": [171, 172], "nrf_temp_int_enable_check": [171, 172], "nrf_temp_task_address_get": [171, 172], "nrf_temp_task_trigg": [171, 172], "nrf_temp_event_address_get": [171, 172], "nrf_temp_event_clear": [171, 172], "nrf_temp_event_check": [171, 172], "nrf_temp_result_get": [171, 172], "nrf_temp_calibration_coeff_set": [171, 172], "nrf_temp_calibration_coeff_get": [171, 172], "nrf_temp_subscribe_set": [171, 172], "nrf_temp_subscribe_clear": [171, 172], "nrf_temp_publish_set": [171, 172], "nrf_temp_publish_clear": [171, 172], "nrfy_temp": 172, "nrfy_temp_has_calibr": 172, "nrfy_temp_int_init": 172, "nrfy_temp_int_uninit": 172, "nrfy_temp_int_en": 172, "nrfy_temp_int_dis": 172, "nrfy_temp_int_enable_check": 172, "nrfy_temp_task_address_get": 172, "nrfy_temp_task_trigg": 172, "nrfy_temp_event_address_get": 172, "nrfy_temp_event_clear": 172, "nrfy_temp_event_check": 172, "nrfy_temp_result_get": 172, "nrfy_temp_calibration_coeff_set": 172, "nrfy_temp_calibration_coeff_get": 172, "nrfy_temp_subscribe_set": 172, "nrfy_temp_subscribe_clear": 172, "nrfy_temp_publish_set": 172, "nrfy_temp_publish_clear": 172, "nrf_temp": 173, "nrfx_timer": 174, "nrfx_timer_inst": 174, "_frequenc": 174, "achiv": [174, 175], "nrfx_timer_inst_handler_get": 174, "nrfx_timer_event_handler_t": 174, "nrf_timer_event_t": [174, 175, 176], "nrfx_timer_init": 174, "nrfx_timer_t": 174, "nrfx_timer_config_t": 174, "timer_event_handl": 174, "nrfx_timer_reconfigur": 174, "nrfx_timer_uninit": 174, "nrfx_timer_init_check": 174, "nrfx_timer_en": 174, "nrfx_timer_dis": 174, "lowest": [174, 191], "system_on": 174, "nrfx_timer_is_en": 174, "nrfx_timer_paus": 174, "nrfx_timer_resum": 174, "nrfx_timer_clear": 174, "nrfx_timer_incr": 174, "nrfx_timer_task_address_get": 174, "nrf_timer_task_t": [174, 175, 176], "timer_task": 174, "nrfx_timer_capture_task_address_get": 174, "nrfx_timer_event_address_get": 174, "timer_ev": 174, "nrfx_timer_compare_event_address_get": 174, "nrfx_timer_captur": 174, "nrf_timer_cc_channel_t": [174, 175, 176], "nrfx_timer_capture_get": 174, "nrfx_timer_compar": 174, "enable_int": 174, "nrfx_timer_extended_compar": 174, "nrf_timer_short_mask_t": [174, 175], "timer_short_mask": 174, "nrfx_timer_us_to_tick": 174, "nrfx_timer_ms_to_tick": 174, "time_m": [174, 175], "nrfx_timer_compare_int_en": 174, "nrfx_timer_compare_int_dis": 174, "nrf_timer_typ": [174, 175, 176], "nrf_timer_mode_t": [174, 175, 176], "nrf_timer_bit_width_t": [174, 175, 176], "bit_width": [174, 175, 176], "nrf_timer_h": 175, "nrf_timer_inst_get": 175, "nrf_timer_has_cc4": 175, "nrf_timer_has_cc5": 175, "nrf_timer_has_cc6": 175, "nrf_timer_has_cc7": 175, "nrf_timer_has_low_power_mod": 175, "nrf_timer_has_one_shot": [175, 176], "nrf_timer_base_frequency_320mhz": 175, "nrf_timer_base_frequency_128mhz": 175, "nrf_timer_base_frequency_64mhz": 175, "nrf_timer_base_frequency_32mhz": 175, "nrf_timer_base_frequency_16mhz": 175, "nrf_timer_prescaler_max": 175, "timer_max_s": 175, "timer_bit_width_max": 175, "nrf_timer_is_bit_width_valid": 175, "nrf_timer_is_320mhz_tim": 175, "nrf_timer_is_128mhz_tim": 175, "nrf_timer_is_64mhz_tim": 175, "nrf_timer_is_32mhz_tim": 175, "base_freq": 175, "nrf_timer_frequency_static_check": 175, "nrf_timer_cc_channel_count": 175, "nrf_timer_task_start": 175, "nrf_timer_task_stop": 175, "nrf_timer_task_count": 175, "nrf_timer_task_clear": 175, "nrf_timer_task_shutdown": 175, "nrf_timer_task_capture0": 175, "nrf_timer_task_capture1": 175, "nrf_timer_task_capture2": 175, "nrf_timer_task_capture3": 175, "nrf_timer_task_capture4": 175, "nrf_timer_task_capture5": 175, "nrf_timer_task_capture6": 175, "nrf_timer_task_capture7": 175, "nrf_timer_event_compare0": 175, "nrf_timer_event_compare1": 175, "nrf_timer_event_compare2": 175, "nrf_timer_event_compare3": 175, "nrf_timer_event_compare4": 175, "nrf_timer_event_compare5": 175, "nrf_timer_event_compare6": 175, "nrf_timer_event_compare7": 175, "nrf_timer_short_compare0_stop_mask": 175, "nrf_timer_short_compare1_stop_mask": 175, "nrf_timer_short_compare2_stop_mask": 175, "nrf_timer_short_compare3_stop_mask": 175, "nrf_timer_short_compare4_stop_mask": 175, "nrf_timer_short_compare5_stop_mask": 175, "nrf_timer_short_compare6_stop_mask": 175, "nrf_timer_short_compare7_stop_mask": 175, "nrf_timer_short_compare0_clear_mask": 175, "nrf_timer_short_compare1_clear_mask": 175, "nrf_timer_short_compare2_clear_mask": 175, "nrf_timer_short_compare3_clear_mask": 175, "nrf_timer_short_compare4_clear_mask": 175, "nrf_timer_short_compare5_clear_mask": 175, "nrf_timer_short_compare6_clear_mask": 175, "nrf_timer_short_compare7_clear_mask": 175, "nrf_timer_mode_tim": 175, "nrf_timer_mode_count": 175, "nrf_timer_mode_low_power_count": 175, "nrf_timer_bit_width_8": 175, "nrf_timer_bit_width_16": 175, "nrf_timer_bit_width_24": 175, "nrf_timer_bit_width_32": 175, "nrf_timer_frequency_t": 175, "nrf_timer_freq_16mhz": 175, "nrf_timer_freq_8mhz": 175, "nrf_timer_freq_4mhz": 175, "nrf_timer_freq_2mhz": 175, "nrf_timer_freq_1mhz": 175, "nrf_timer_freq_500khz": 175, "nrf_timer_freq_250khz": 175, "nrf_timer_freq_125khz": 175, "nrf_timer_freq_62500hz": 175, "62500": 175, "nrf_timer_freq_31250hz": 175, "31250": [175, 189, 192], "nrf_timer_cc_channel0": 175, "nrf_timer_cc_channel1": 175, "nrf_timer_cc_channel2": 175, "nrf_timer_cc_channel3": 175, "nrf_timer_cc_channel4": 175, "nrf_timer_cc_channel5": 175, "nrf_timer_cc_channel6": 175, "nrf_timer_cc_channel7": 175, "nrf_timer_int_mask_t": [175, 176], "nrf_timer_int_compare0_mask": 175, "nrf_timer_int_compare1_mask": 175, "nrf_timer_int_compare2_mask": 175, "nrf_timer_int_compare3_mask": 175, "nrf_timer_int_compare4_mask": 175, "nrf_timer_int_compare5_mask": 175, "nrf_timer_int_compare6_mask": 175, "nrf_timer_int_compare7_mask": 175, "prescaler_factor": [175, 176], "_factor": [175, 176], "nrf_timer_task_trigg": [175, 176], "nrf_timer_task_address_get": [175, 176], "nrf_timer_event_clear": [175, 176], "nrf_timer_event_check": [175, 176], "nrf_timer_event_address_get": [175, 176], "nrf_timer_shorts_en": [175, 176], "nrf_timer_shorts_dis": [175, 176], "nrf_timer_shorts_set": [175, 176], "nrf_timer_short_compare_clear_get": 175, "compare_clear": 175, "nrf_timer_short_compare_stop_get": 175, "compare_stop": 175, "nrf_timer_int_en": [175, 176], "nrf_timer_int_dis": [175, 176], "nrf_timer_int_enable_check": [175, 176], "nrf_timer_subscribe_set": [175, 176], "nrf_timer_subscribe_clear": [175, 176], "nrf_timer_publish_set": [175, 176], "nrf_timer_publish_clear": [175, 176], "nrf_timer_mode_set": [175, 176], "nrf_timer_mode_get": [175, 176], "nrf_timer_bit_width_set": [175, 176], "nrf_timer_bit_width_get": [175, 176], "nrf_timer_cc_set": [175, 176], "nrf_timer_cc_get": [175, 176], "nrf_timer_capture_task_get": [175, 176], "nrf_timer_compare_event_get": [175, 176], "nrf_timer_compare_int_get": [175, 176], "nrf_timer_us_to_tick": 175, "nrf_timer_ms_to_tick": 175, "nrf_timer_one_shot_en": [175, 176], "nrf_timer_one_shot_dis": [175, 176], "nrfy_tim": 176, "nrfy_timer_has_one_shot": 176, "nrfy_timer_periph_configur": 176, "nrfy_timer_config_t": 176, "nrfy_timer_int_init": 176, "nrfy_timer_int_uninit": 176, "nrfy_timer_events_process": 176, "nrfy_timer_capture_get": 176, "nrfy_timer_task_trigg": 176, "nrfy_timer_task_address_get": 176, "nrfy_timer_event_clear": 176, "nrfy_timer_event_check": 176, "nrfy_timer_event_address_get": 176, "nrfy_timer_shorts_en": 176, "nrfy_timer_shorts_dis": 176, "nrfy_timer_shorts_set": 176, "nrfy_timer_int_en": 176, "nrfy_timer_int_dis": 176, "nrfy_timer_int_enable_check": 176, "nrfy_timer_subscribe_set": 176, "nrfy_timer_subscribe_clear": 176, "nrfy_timer_publish_set": 176, "nrfy_timer_publish_clear": 176, "nrfy_timer_mode_set": 176, "nrfy_timer_mode_get": 176, "nrfy_timer_bit_width_set": 176, "nrfy_timer_bit_width_get": 176, "nrfy_timer_prescaler_set": 176, "nrfy_timer_prescaler_get": 176, "nrfy_timer_cc_set": 176, "nrfy_timer_cc_get": 176, "nrfy_timer_capture_task_get": 176, "nrfy_timer_compare_event_get": 176, "nrfy_timer_compare_int_get": 176, "nrfy_timer_one_shot_en": 176, "nrfy_timer_one_shot_dis": 176, "nrf_timer": 177, "nrfx_twi": [178, 185], "wire": [178, 181, 185, 186], "nrfx_twi_inst": 178, "nrfx_twi_default_config": 178, "_pin_scl": [178, 181, 185], "_pin_sda": [178, 181, 185], "scl": [178, 179, 181, 182, 183, 185, 186], "sda": [178, 179, 181, 182, 183, 185, 186], "nrfx_twi_flag_no_xfer_evt_handl": 178, "nrfx_twi_flag_tx_no_stop": 178, "nrfx_twi_flag_suspend": 178, "nrfx_twi_xfer_desc_tx": 178, "nrfx_twi_xfer_desc_rx": 178, "nrfx_twi_xfer_desc_txrx": 178, "nrfx_twi_xfer_desc_txtx": 178, "p_tx2": [178, 181], "tx_len2": [178, 181], "nrfx_twi_inst_handler_get": 178, "nrfx_twi_evt_handler_t": 178, "nrfx_twi_evt_t": 178, "nrfx_twi_evt_type_t": 178, "nrfx_twi_evt_don": 178, "nrfx_twi_evt_address_nack": 178, "nack": [178, 179, 181, 182, 183, 185, 186], "nrfx_twi_evt_data_nack": 178, "nrfx_twi_evt_overrun": 178, "unread": [178, 181], "nrfx_twi_evt_bus_error": 178, "unexpect": [178, 181, 185, 196], "nrfx_twi_xfer_type_t": 178, "nrfx_twi_xfer_tx": 178, "nrfx_twi_xfer_rx": 178, "nrfx_twi_xfer_txrx": 178, "nrfx_twi_xfer_txtx": 178, "nrfx_twi_init": 178, "nrfx_twi_t": 178, "nrfx_twi_config_t": 178, "nrfx_twi_reconfigur": 178, "nrfx_twi_uninit": 178, "nrfx_twi_init_check": 178, "nrfx_twi_en": 178, "nrfx_twi_dis": 178, "nrfx_twi_xfer": 178, "nrfx_twi_xfer_desc_t": 178, "nrfx_error_drv_twi_err_overrun": [178, 181, 238], "nrfx_error_drv_twi_err_anack": [178, 181, 238], "nrfx_error_drv_twi_err_dnack": [178, 181, 238], "nrfx_twi_is_busi": 178, "nrfx_twi_data_count_get": 178, "nrfx_twi_stopped_event_get": 178, "nrfx_twi_bus_recov": 178, "scl_pin": [178, 179, 181, 182, 183, 185], "sda_pin": [178, 179, 181, 182, 183, 185], "recov": [178, 181], "nrf_twi_typ": [178, 179], "p_twi": 178, "nrf_twi_frequency_t": [178, 179], "hold_bus_uninit": [178, 181], "primary_length": [178, 181], "secondary_length": [178, 181], "p_primary_buf": [178, 181], "p_secondary_buf": [178, 181], "nrf_twi_hal": 179, "nrf_twi_inst_get": 179, "nrf_twi_task_t": 179, "nrf_twi_task_startrx": 179, "nrf_twi_task_starttx": 179, "nrf_twi_task_stop": 179, "nrf_twi_task_suspend": 179, "nrf_twi_task_resum": 179, "nrf_twi_event_t": 179, "nrf_twi_event_stop": 179, "nrf_twi_event_rxdreadi": 179, "nrf_twi_event_txds": 179, "nrf_twi_event_error": 179, "nrf_twi_event_bb": 179, "nrf_twi_event_suspend": 179, "nrf_twi_short_mask_t": 179, "nrf_twi_short_bb_suspend_mask": 179, "bb": 179, "nrf_twi_short_bb_stop_mask": 179, "nrf_twi_all_shorts_mask": 179, "nrf_twi_int_mask_t": 179, "nrf_twi_int_stopped_mask": 179, "nrf_twi_int_rxdready_mask": 179, "rxdreadi": 179, "nrf_twi_int_txdsent_mask": 179, "txdsent": 179, "nrf_twi_int_error_mask": 179, "nrf_twi_int_bb_mask": 179, "nrf_twi_int_suspended_mask": 179, "nrf_twi_all_ints_mask": 179, "nrf_twi_error_t": 179, "nrf_twi_error_address_nack": 179, "nrf_twi_error_data_nack": 179, "nrf_twi_error_overrun": 179, "nrf_twi_freq_100k": 179, "nrf_twi_freq_250k": 179, "nrf_twi_freq_400k": 179, "nrf_twi_task_trigg": 179, "nrf_twi_task_address_get": 179, "nrf_twi_event_clear": 179, "nrf_twi_event_check": 179, "nrf_twi_event_address_get": 179, "nrf_twi_shorts_en": 179, "nrf_twi_shorts_dis": 179, "nrf_twi_int_en": 179, "nrf_twi_int_dis": 179, "nrf_twi_int_enable_check": 179, "nrf_twi_en": 179, "nrf_twi_dis": 179, "nrf_twi_pins_set": 179, "nrf_twi_scl_pin_get": 179, "nrf_twi_sda_pin_get": 179, "nrf_twi_frequency_set": 179, "nrf_twi_errorsrc_get_and_clear": 179, "nrf_twi_address_set": 179, "nrf_twi_rxd_get": 179, "nrf_twi_txd_set": 179, "nrf_twi_shorts_set": 179, "nrf_twi": [180, 187], "nrfx_twim": 181, "nrfx_twim_inst": 181, "nrfx_twim_default_config": 181, "nrfx_twim_flag_tx_postinc": 181, "nrfx_twim_flag_rx_postinc": 181, "nrfx_twim_flag_no_xfer_evt_handl": 181, "nrfx_twim_flag_hold_xf": 181, "nrfx_twim_flag_repeated_xf": 181, "nrfx_twim_flag_tx_no_stop": 181, "nrfx_twim_flag_no_spurious_stop_check": 181, "p_buf1": 181, "buf_len1": 181, "p_buf2": 181, "buf_len2": 181, "nrfx_twim_xfer_desc_tx": 181, "nrfx_twim_xfer_desc_rx": 181, "nrfx_twim_xfer_desc_txrx": 181, "nrfx_twim_xfer_desc_txtx": 181, "nrfx_twim_inst_handler_get": 181, "nrfx_twim_evt_handler_t": 181, "nrfx_twim_evt_t": 181, "nrfx_twim_evt_type_t": 181, "nrfx_twim_evt_don": 181, "nrfx_twim_evt_address_nack": 181, "nrfx_twim_evt_data_nack": 181, "nrfx_twim_evt_overrun": 181, "nrfx_twim_evt_bus_error": 181, "nrfx_twim_xfer_type_t": 181, "nrfx_twim_xfer_tx": 181, "nrfx_twim_xfer_rx": 181, "nrfx_twim_xfer_txrx": 181, "nrfx_twim_xfer_txtx": 181, "nrfx_twim_init": 181, "nrfx_twim_t": 181, "nrfx_twim_config_t": 181, "nrfx_twim_reconfigur": 181, "nrfx_twim_uninit": 181, "nrfx_twim_init_check": 181, "nrfx_twim_en": 181, "nrfx_twim_dis": 181, "nrfx_twim_xfer": 181, "nrfx_twim_xfer_desc_t": 181, "nrfx_twim_start_task_address_get": 181, "nrfx_twim_stopped_event_address_get": 181, "i2c": 181, "tasks_resum": 181, "tasks_starttx": 181, "nrfx_twim_is_busi": 181, "xfer_typ": 181, "nrfx_twim_bus_recov": 181, "nrf_twim_typ": [181, 182, 183], "p_twim": 181, "nrf_twim_frequency_t": [181, 182, 183], "nrf_twim_hal": 182, "nrf_twim_inst_get": 182, "nrf_twim_has_1000_khz_freq": 182, "nrf_twim_has_array_list": [182, 183], "nrf_twim_has_dma_reg": 182, "nrf_twim_has_dma_currentamount_reg": 182, "currentamount": 182, "nrf_twim_has_dma_tasks_ev": 182, "nrf_twim_has_dma_short": 182, "nrf_twim_has_bus_error_ev": 182, "nrf_twim_dma_rx_pattern_max_count": 182, "nrf_twim_task_t": [182, 183], "nrf_twim_task_startrx": 182, "nrf_twim_task_stoprx": 182, "nrf_twim_task_starttx": 182, "nrf_twim_task_stoptx": 182, "nrf_twim_task_enablerxmatch0": 182, "nrf_twim_task_enablerxmatch1": 182, "nrf_twim_task_enablerxmatch2": 182, "nrf_twim_task_enablerxmatch3": 182, "nrf_twim_task_disablerxmatch0": 182, "nrf_twim_task_disablerxmatch1": 182, "nrf_twim_task_disablerxmatch2": 182, "nrf_twim_task_disablerxmatch3": 182, "nrf_twim_task_stop": 182, "nrf_twim_task_suspend": 182, "nrf_twim_task_resum": 182, "nrf_twim_event_stop": 182, "nrf_twim_event_error": 182, "nrf_twim_event_suspend": 182, "nrf_twim_event_endrx": 182, "nrf_twim_event_rxstart": 182, "nrf_twim_event_rxmatch0": 182, "nrf_twim_event_rxmatch1": 182, "nrf_twim_event_rxmatch2": 182, "nrf_twim_event_rxmatch3": 182, "nrf_twim_event_endtx": 182, "nrf_twim_event_txstart": 182, "nrf_twim_event_rxbuserror": 182, "nrf_twim_event_txbuserror": 182, "nrf_twim_event_lastrx": 182, "nrf_twim_event_lasttx": 182, "nrf_twim_short_mask_t": 182, "nrf_twim_short_lasttx_suspend_mask": 182, "lasttx": 182, "nrf_twim_short_lasttx_stop_mask": 182, "nrf_twim_short_lastrx_stop_mask": 182, "lastrx": 182, "nrf_twim_short_lasttx_startrx_mask": 182, "startrx": [182, 192], "nrf_twim_short_lastrx_starttx_mask": 182, "starttx": 182, "nrf_twim_short_rxmatch0_enablerxmatch1_mask": 182, "nrf_twim_short_rxmatch1_enablerxmatch2_mask": 182, "nrf_twim_short_rxmatch2_enablerxmatch3_mask": 182, "nrf_twim_short_rxmatch3_enablerxmatch0_mask": 182, "nrf_twim_short_rxmatch0_disablerxmatch0_mask": 182, "nrf_twim_short_rxmatch1_disablerxmatch1_mask": 182, "nrf_twim_short_rxmatch2_disablerxmatch2_mask": 182, "nrf_twim_short_rxmatch3_disablerxmatch3_mask": 182, "nrf_twim_all_shorts_mask": 182, "nrf_twim_int_mask_t": [182, 183], "nrf_twim_int_stopped_mask": 182, "nrf_twim_int_error_mask": 182, "nrf_twim_int_suspended_mask": 182, "nrf_twim_int_rxstarted_mask": 182, "rxstart": [182, 186, 192], "nrf_twim_int_txstarted_mask": 182, "txstart": [182, 186, 192], "nrf_twim_int_endrx_mask": 182, "nrf_twim_int_rxready_mask": 182, "nrf_twim_int_rxbuserror_mask": 182, "nrf_twim_int_rxmatch0_mask": 182, "nrf_twim_int_rxmatch1_mask": 182, "nrf_twim_int_rxmatch2_mask": 182, "nrf_twim_int_rxmatch3_mask": 182, "nrf_twim_int_endtx_mask": 182, "nrf_twim_int_txready_mask": 182, "nrf_twim_int_txbuserror_mask": 182, "nrf_twim_int_lastrx_mask": 182, "nrf_twim_int_lasttx_mask": 182, "nrf_twim_all_ints_mask": 182, "nrf_twim_freq_100k": 182, "nrf_twim_freq_250k": 182, "nrf_twim_freq_400k": 182, "nrf_twim_freq_1000k": 182, "nrf_twim_error_t": 182, "nrf_twim_error_address_nack": 182, "nrf_twim_error_data_nack": 182, "nrf_twim_error_overrun": 182, "nrf_twim_task_trigg": [182, 183], "nrf_twim_task_address_get": [182, 183], "nrf_twim_event_clear": [182, 183], "nrf_twim_event_check": [182, 183], "nrf_twim_event_address_get": [182, 183], "nrf_twim_shorts_en": [182, 183], "nrf_twim_shorts_dis": [182, 183], "nrf_twim_int_en": [182, 183], "nrf_twim_int_dis": [182, 183], "nrf_twim_int_enable_check": [182, 183], "nrf_twim_subscribe_set": [182, 183], "nrf_twim_subscribe_clear": [182, 183], "nrf_twim_publish_set": [182, 183], "nrf_twim_publish_clear": [182, 183], "nrf_twim_en": [182, 183], "nrf_twim_dis": [182, 183], "nrf_twim_pins_set": 182, "nrf_twim_scl_pin_get": [182, 183], "nrf_twim_sda_pin_get": [182, 183], "nrf_twim_frequency_set": [182, 183], "nrf_twim_errorsrc_get_and_clear": [182, 183], "nrf_twim_address_set": [182, 183], "nrf_twim_address_get": 182, "nrf_twim_tx_buffer_set": 182, "nrf_twim_rx_buffer_set": 182, "nrf_twim_shorts_set": [182, 183], "nrf_twim_shorts_get": [182, 183], "nrf_twim_txd_amount_get": [182, 183], "nrf_twim_rxd_amount_get": [182, 183], "nrf_twim_txd_curr_amount_get": 182, "nrf_twim_rxd_curr_amount_get": 182, "nrf_twim_tx_list_en": [182, 183], "nrf_twim_tx_list_dis": [182, 183], "nrf_twim_rx_list_en": [182, 183], "nrf_twim_rx_list_dis": [182, 183], "nrf_twim_rx_pattern_match_enable_set": 182, "nrf_twim_rx_pattern_match_enable_check": 182, "nrf_twim_rx_pattern_match_one_shot_en": 182, "nrf_twim_rx_pattern_match_one_shot_dis": 182, "nrf_twim_rx_pattern_match_one_shot_check": 182, "nrf_twim_rx_pattern_match_candidate_set": 182, "nrf_twim_rx_pattern_match_candidate_get": 182, "nrf_twim_rx_terminate_on_bus_error_enable_set": 182, "nrf_twim_rx_terminate_on_bus_error_check": 182, "nrf_twim_tx_terminate_on_bus_error_enable_set": 182, "nrf_twim_tx_terminate_on_bus_error_check": 182, "nrfy_twim": 183, "nrfy_twim_has_array_list": 183, "nrfy_twim_periph_configur": 183, "nrfy_twim_config_t": 183, "nrfy_twim_int_init": 183, "nrfy_twim_int_uninit": 183, "nrfy_twim_events_process": 183, "nrfy_twim_xfer_desc_t": 183, "nrfy_twim_tx_buffer_set": 183, "nrfy_twim_rx_buffer_set": 183, "nrfy_twim_tx_start": 183, "nrfy_twim_rx_start": 183, "nrfy_twim_abort": 183, "nrfy_twim_pins_get": 183, "nrfy_twim_pins_t": 183, "nrfy_twim_stop": 183, "nrfy_twim_tx_list_set": 183, "nrfy_twim_rx_list_set": 183, "nrfy_twim_pins_set": 183, "nrfy_twim_task_trigg": 183, "nrfy_twim_task_address_get": 183, "nrfy_twim_event_clear": 183, "nrfy_twim_event_check": 183, "nrfy_twim_event_address_get": 183, "nrfy_twim_shorts_en": 183, "nrfy_twim_shorts_dis": 183, "nrfy_twim_int_en": 183, "nrfy_twim_int_dis": 183, "nrfy_twim_int_enable_check": 183, "nrfy_twim_subscribe_set": 183, "nrfy_twim_subscribe_clear": 183, "nrfy_twim_publish_set": 183, "nrfy_twim_publish_clear": 183, "nrfy_twim_en": 183, "nrfy_twim_dis": 183, "nrfy_twim_scl_pin_get": 183, "nrfy_twim_sda_pin_get": 183, "nrfy_twim_frequency_set": 183, "nrfy_twim_errorsrc_get_and_clear": 183, "nrfy_twim_address_set": 183, "nrfy_twim_shorts_set": 183, "nrfy_twim_shorts_get": 183, "nrfy_twim_txd_amount_get": 183, "nrfy_twim_rxd_amount_get": 183, "nrfy_twim_tx_list_en": 183, "nrfy_twim_tx_list_dis": 183, "nrfy_twim_rx_list_en": 183, "nrfy_twim_rx_list_dis": 183, "configu": 183, "nrf_twim": 184, "nrfx_twis_inst": 185, "nrfx_twis_default_config": 185, "_addr": 185, "nrfx_twis_inst_handler_get": 185, "nrfx_twis_event_handler_t": 185, "nrfx_twis_evt_t": 185, "nrfx_twis_evt_type_t": 185, "nrfx_twis_evt_read_req": 185, "buf_req": [185, 191], "nrfx_twis_tx_prepar": 185, "nrfx_twis_evt_read_don": 185, "nrfx_twis_evt_read_error": 185, "nrfx_twis_evt_write_req": 185, "nrfx_twis_rx_prepar": 185, "nrfx_twis_evt_write_don": 185, "nrfx_twis_evt_write_error": 185, "nrfx_twis_evt_general_error": 185, "nrfx_twis_error_t": 185, "nrf_twis_error_t": [185, 186], "redefin": 185, "futur": 185, "eg": 185, "nrfx_twis_error_overflow": 185, "nrfx_twis_error_data_nack": 185, "nrfx_twis_error_overread": 185, "nrfx_twis_error_unexpected_ev": 185, "nrfx_twis_init": 185, "nrfx_twis_t": 185, "nrfx_twis_config_t": 185, "attent": [185, 186], "nrfx_twis_en": 185, "object": [185, 232, 234, 240, 247], "destroi": 185, "nrfx_prs_enabl": [185, 246], "nrfx_twis_reconfigur": 185, "nrfx_twis_uninit": 185, "nrfx_twis_init_check": 185, "dynam": [185, 220], "nrfx_twis_dis": 185, "nrfx_twis_error_get_and_clear": 185, "wrong": 185, "nrfx_twis_tx_amount": 185, "nrfx_twis_rx_amount": 185, "nrfx_twis_is_busi": 185, "nrfx_twis_is_waiting_tx_buff": 185, "nrfx_twis_is_waiting_rx_buff": 185, "nrfx_twis_is_pending_tx": 185, "nrfx_twis_is_pending_rx": 185, "nrf_twis_typ": [185, 186], "respond": [185, 186, 191, 196, 197], "scl_pull": 185, "sda_pul": 185, "nrf_twis_hal": 186, "nrf_twis_has_dma_reg": 186, "nrf_twis_has_dma_tasks_ev": 186, "nrf_twis_has_list_reg": 186, "nrf_twis_tx_max_count_s": 186, "nrf_twis_rx_max_count_s": 186, "nrf_twis_inst_get": 186, "nrf_twis_address_t": 186, "smallest": 186, "nrf_twis_task_t": 186, "nrf_twis_task_stop": 186, "nrf_twis_task_suspend": 186, "nrf_twis_task_resum": 186, "nrf_twis_task_preparerx": 186, "nrf_twis_task_preparetx": 186, "nrf_twis_event_t": 186, "nrf_twis_event_stop": 186, "nrf_twis_event_error": 186, "nrf_twis_event_rxstart": 186, "nrf_twis_event_txstart": 186, "nrf_twis_event_writ": 186, "nrf_twis_event_read": 186, "nrf_twis_short_mask_t": 186, "nrf_twis_short_write_suspend_mask": 186, "nrf_twis_short_read_suspend_mask": 186, "nrf_twis_int_mask_t": 186, "nrf_twis_int_stopped_mask": 186, "nrf_twis_int_error_mask": 186, "nrf_twis_int_rxstarted_mask": 186, "nrf_twis_int_txstarted_mask": 186, "nrf_twis_int_write_mask": 186, "nrf_twis_int_read_mask": 186, "nrf_twis_error_overflow": 186, "nrf_twis_error_data_nack": 186, "nrf_twis_error_overread": 186, "nrf_twis_config_addr_mask_t": 186, "nrf_twis_config_address0_mask": 186, "nrf_twis_config_address1_mask": 186, "nrf_twis_config_address01_mask": 186, "nrf_twis_task_trigg": 186, "nrf_twis_task_address_get": 186, "nrf_twis_event_clear": 186, "nrf_twis_event_check": 186, "nrf_twis_event_get_and_clear": 186, "nrf_twis_event_address_get": 186, "nrf_twis_shorts_en": 186, "nrf_twis_shorts_dis": 186, "nrf_twis_shorts_get": 186, "nrf_twis_int_en": 186, "nrf_twis_int_enable_check": 186, "nrf_twis_int_dis": 186, "nrf_twis_subscribe_set": 186, "nrf_twis_subscribe_clear": 186, "nrf_twis_publish_set": 186, "nrf_twis_publish_clear": 186, "nrf_twis_error_source_get_and_clear": 186, "uint_fast8_t": 186, "nrf_twis_match_get": 186, "nrf_twis_en": 186, "nrf_twis_dis": 186, "nrf_twis_enable_check": 186, "nrf_twis_pins_set": 186, "nrf_twis_scl_pin_get": 186, "nrf_twis_sda_pin_get": 186, "nrf_twis_rx_buffer_set": 186, "nrf_twis_rx_buffer_get": 186, "nrf_twis_rx_prepar": 186, "nrf_twis_rx_amount_get": 186, "nrf_twis_tx_buffer_set": 186, "nrf_twis_tx_buffer_get": 186, "nrf_twis_tx_prepar": 186, "nrf_twis_tx_amount_get": 186, "nrf_twis_address_set": 186, "nrf_twis_config_address_set": 186, "nrf_twis_config_address_get": 186, "nrf_twis_address_get": 186, "addr_mask": 186, "answer": 186, "nrf_twis_orc_set": 186, "nrf_twis_orc_get": 186, "nrf_twis_tx_list_en": 186, "nrf_twis_tx_list_dis": 186, "nrf_twis_rx_list_en": 186, "nrf_twis_rx_list_dis": 186, "nrfx_uart": [188, 191], "nrfx_uart_inst": 188, "nrfx_uart_default_extended_stop_config": 188, "nrfx_uart_default_extended_paritytype_config": 188, "nrfx_uart_default_config": 188, "_pin_tx": [188, 191], "_pin_rx": [188, 191], "flow": [188, 189, 191, 192, 193], "baudrat": [188, 189, 191, 192, 193], "115200": [188, 189, 191, 192], "nrfx_uart_inst_handler_get": 188, "nrfx_uart_event_handler_t": 188, "nrfx_uart_event_t": 188, "nrfx_uart_evt_type_t": 188, "nrfx_uart_evt_tx_don": 188, "nrfx_uart_evt_rx_don": 188, "nrfx_uart_evt_error": 188, "nrfx_uart_t": 188, "nrfx_uart_config_t": 188, "nrfx_uart_reconfigur": 188, "nrfx_uart_uninit": 188, "nrfx_uart_init_check": 188, "nrfx_uart_task_address_get": 188, "nrf_uart_task_t": [188, 189], "nrfx_uart_event_address_get": 188, "nrf_uart_event_t": [188, 189], "nrfx_uart_tx": 188, "nrfx_uart_tx_in_progress": 188, "nrfx_uart_tx_abort": 188, "nrfx_uart_rx": 188, "secondari": [188, 191], "primari": [188, 191], "nrfx_uart_rx_en": 188, "fresh": 188, "establish": 188, "nrfx_uart_rx_dis": 188, "nrfx_uart_rx_readi": 188, "nrfx_uart_rx_abort": 188, "nrfx_uart_errorsrc_get": 188, "nrf_uart_error_mask_t": [188, 189], "nrf_uart_typ": [188, 189], "pseltxd": [188, 189, 192, 193], "pselrxd": [188, 189, 192, 193], "pselct": [188, 189, 192, 193], "ct": [188, 189, 191, 192, 193], "pselrt": [188, 189, 192, 193], "rt": [188, 189, 191, 192, 193, 206], "nrf_uart_baudrate_t": [188, 189], "baud": [188, 189, 191, 192, 193], "nrf_uart_config_t": [188, 189], "hal_cfg": 188, "nrfx_uart_xfer_evt_t": 188, "nrfx_uart_error_evt_t": 188, "rxtx": 188, "error_mask": [188, 191], "nrf_uart_hal": 189, "nrf_uart_has_stop_bit": 189, "nrf_uart_has_parity_bit": 189, "nrf_uart_psel_disconnect": 189, "nrf_uart_task_startrx": 189, "nrf_uart_task_stoprx": 189, "nrf_uart_task_starttx": 189, "nrf_uart_task_stoptx": 189, "nrf_uart_task_suspend": 189, "nrf_uart_event_ct": 189, "nrf_uart_event_nct": 189, "nrf_uart_event_rxdrdi": 189, "nrf_uart_event_txdrdi": 189, "nrf_uart_event_error": 189, "nrf_uart_event_rxto": 189, "nrf_uart_int_mask_t": 189, "nrf_uart_int_mask_ct": 189, "nrf_uart_int_mask_nct": 189, "nrf_uart_int_mask_rxdrdi": 189, "nrf_uart_int_mask_txdrdi": 189, "nrf_uart_int_mask_error": 189, "nrf_uart_int_mask_rxto": 189, "nrf_uart_baudrate_1200": 189, "1200": [189, 192], "nrf_uart_baudrate_2400": 189, "2400": [189, 192], "nrf_uart_baudrate_4800": 189, "4800": [189, 192], "nrf_uart_baudrate_9600": 189, "9600": [189, 192], "nrf_uart_baudrate_14400": 189, "14400": [189, 192], "nrf_uart_baudrate_19200": 189, "19200": [189, 192], "nrf_uart_baudrate_28800": 189, "28800": [189, 192], "nrf_uart_baudrate_31250": 189, "nrf_uart_baudrate_38400": 189, "38400": [189, 192], "nrf_uart_baudrate_56000": 189, "56000": [189, 192], "nrf_uart_baudrate_57600": 189, "57600": [189, 192], "nrf_uart_baudrate_76800": 189, "76800": [189, 192], "nrf_uart_baudrate_115200": 189, "nrf_uart_baudrate_230400": 189, "230400": [189, 192], "nrf_uart_baudrate_250000": 189, "250000": [189, 192], "nrf_uart_baudrate_460800": 189, "460800": [189, 192], "nrf_uart_baudrate_921600": 189, "921600": [189, 192], "nrf_uart_baudrate_1000000": 189, "1000000": [189, 192], "nrf_uart_error_overrun_mask": 189, "nrf_uart_error_parity_mask": 189, "nrf_uart_error_framing_mask": 189, "nrf_uart_error_break_mask": 189, "nrf_uart_parity_t": 189, "nrf_uart_parity_exclud": 189, "nrf_uart_parity_includ": 189, "nrf_uart_hwfc_t": 189, "nrf_uart_hwfc_dis": 189, "nrf_uart_hwfc_en": 189, "nrf_uart_stop_t": 189, "nrf_uart_stop_on": 189, "nrf_uart_stop_two": 189, "nrf_uart_paritytype_t": 189, "nrf_uart_paritytype_even": 189, "nrf_uart_paritytype_odd": 189, "odd": [189, 192, 234], "nrf_uart_event_clear": 189, "nrf_uart_event_check": 189, "nrf_uart_event_address_get": 189, "nrf_uart_int_en": 189, "nrf_uart_int_enable_check": 189, "nrf_uart_int_dis": 189, "nrf_uart_errorsrc_get_and_clear": 189, "nrf_uart_en": 189, "nrf_uart_dis": 189, "nrf_uart_txrx_pins_set": 189, "nrf_uart_txrx_pins_disconnect": 189, "nrf_uart_tx_pin_get": 189, "nrf_uart_rx_pin_get": 189, "nrf_uart_rts_pin_get": 189, "nrf_uart_cts_pin_get": 189, "nrf_uart_hwfc_pins_set": 189, "nrf_uart_hwfc_pins_disconnect": 189, "nrf_uart_rxd_get": 189, "nrf_uart_txd_set": 189, "nrf_uart_task_trigg": 189, "nrf_uart_task_address_get": 189, "nrf_uart_configur": 189, "nrf_uart_baudrate_set": 189, "nrf_uart": [189, 190, 192, 194], "hwfc": [189, 192], "paritytyp": [189, 192], "nrfx_uarte_inst": 191, "nrfx_uarte_default_config": 191, "nrfx_uarte_inst_handler_get": 191, "nrfx_uarte_event_handler_t": 191, "nrfx_uarte_event_t": 191, "nrfx_uarte_evt_type_t": 191, "nrfx_uarte_evt_tx_don": 191, "nrfx_uarte_evt_rx_don": 191, "nrfx_uarte_evt_error": 191, "nrfx_uarte_evt_rx_buf_request": 191, "nrfx_uarte_evt_rx_dis": 191, "nrfx_uarte_evt_rx_buf_too_l": 191, "late": 191, "nrfx_uarte_evt_rx_byt": 191, "nrfx_uarte_evt_trigg": 191, "nrfx_uarte_int_trigg": 191, "nrfx_uarte_t": 191, "nrfx_uarte_config_t": 191, "nrfx_uarte_reconfigur": 191, "nrfx_uarte_uninit": 191, "nrfx_uarte_init_check": 191, "nrfx_uarte_task_address_get": 191, "nrf_uarte_task_t": [191, 192, 193], "nrfx_uarte_event_address_get": 191, "nrf_uarte_event_t": [191, 192, 193], "nrfx_uarte_tx": 191, "nrfx_uarte_tx_link": 191, "nrfx_uarte_tx_early_return": 191, "nrfx_uarte_tx_abort": 191, "nrfx_uarte_rx_en": 191, "nrfx_uarte_rx_buffer_set": 191, "seamlessli": 191, "enough": [191, 196, 197], "invok": 191, "perspect": 191, "imposs": 191, "deduc": 191, "larg": 191, "nrfx_uarte_rx_readi": 191, "p_rx_amount": 191, "nrfx_uarte_rx_abort": 191, "disable_al": 191, "nrfx_uarte_errorsrc_get": 191, "nrf_uarte_error_mask_t": [191, 192], "nrfx_uarte_rx_new_data_check": 191, "nrf_uarte_event_rxdrdi": [191, 192], "nrfx_uarte_rxdrdy_en": 191, "nrfx_uarte_rxdrdy_dis": 191, "rxdrdy": [191, 192], "jump": 191, "nrf_uarte_typ": [191, 192, 193], "nrfx_uarte_rx_cache_t": 191, "nrfy_uarte_buffer_t": [191, 193], "cache_len": 191, "txd_pin": [191, 193], "rxd_pin": [191, 193], "rts_pin": [191, 193], "cts_pin": [191, 193], "tx_cach": 191, "rx_cach": 191, "hw": 191, "p_rx_cache_scratch": 191, "nrf_uarte_baudrate_t": [191, 192, 193], "nrf_uarte_config_t": [191, 192, 193], "tx_stop_on_end": 191, "exist": [191, 234], "nrfx_uarte_rx_evt_t": 191, "nrfx_uarte_tx_evt_t": 191, "nrfx_uarte_error_evt_t": 191, "nrfx_uarte_rx_disabled_evt_t": 191, "flush_cnt": 191, "nrfx_uarte_rx_enable_keep_fifo_cont": 191, "rx_disabl": 191, "nrf_uarte_h": 192, "nrf_uarte_inst_get": 192, "nrf_uarte_has_dma_reg": 192, "nrf_uarte_has_dma_tasks_ev": 192, "nrf_uarte_has_dma_short": 192, "nrf_uarte_has_endtx_stoptx_short": 192, "endtx_stoptx": 192, "nrf_uarte_base_frequency_128mhz": 192, "nrf_uarte_base_frequency_64mhz": 192, "nrf_uarte_base_frequency_16mhz": 192, "nrf_uarte_is_128mhz_uart": 192, "nrf_uarte_is_64mhz_uart": 192, "nrf_uarte_base_frequency_get": 192, "nrf_uarte_task_startrx": 192, "nrf_uarte_task_stoprx": 192, "nrf_uarte_task_starttx": 192, "nrf_uarte_task_stoptx": 192, "nrf_uarte_task_flushrx": 192, "nrf_uarte_event_ct": 192, "nrf_uarte_event_nct": 192, "potenti": [192, 220, 234], "nrf_uarte_event_txdrdi": 192, "nrf_uarte_event_error": 192, "nrf_uarte_event_rxto": 192, "nrf_uarte_event_txstop": 192, "nrf_uarte_event_endrx": 192, "nrf_uarte_event_endtx": 192, "nrf_uarte_event_rxstart": 192, "nrf_uarte_event_txstart": 192, "nrf_uarte_short_t": 192, "nrf_uarte_short_endrx_startrx": 192, "nrf_uarte_short_endrx_stoprx": 192, "stoprx": 192, "nrf_uarte_short_endtx_stoptx": 192, "nrf_uarte_int_mask_t": [192, 193], "nrf_uarte_int_cts_mask": 192, "nrf_uarte_int_ncts_mask": 192, "nct": 192, "nrf_uarte_int_rxdrdy_mask": 192, "nrf_uarte_int_txdrdy_mask": 192, "nrf_uarte_int_error_mask": 192, "nrf_uarte_int_rxto_mask": 192, "rxto": 192, "nrf_uarte_int_txstopped_mask": 192, "txstop": 192, "nrf_uarte_int_endrx_mask": 192, "nrf_uarte_int_endtx_mask": 192, "nrf_uarte_int_rxstarted_mask": 192, "nrf_uarte_int_txstarted_mask": 192, "nrf_uarte_baudrate_1200": 192, "nrf_uarte_baudrate_2400": 192, "nrf_uarte_baudrate_4800": 192, "nrf_uarte_baudrate_9600": 192, "nrf_uarte_baudrate_14400": 192, "nrf_uarte_baudrate_19200": 192, "nrf_uarte_baudrate_28800": 192, "nrf_uarte_baudrate_31250": 192, "nrf_uarte_baudrate_38400": 192, "nrf_uarte_baudrate_56000": 192, "nrf_uarte_baudrate_57600": 192, "nrf_uarte_baudrate_76800": 192, "nrf_uarte_baudrate_115200": 192, "nrf_uarte_baudrate_230400": 192, "nrf_uarte_baudrate_250000": 192, "nrf_uarte_baudrate_460800": 192, "nrf_uarte_baudrate_921600": 192, "nrf_uarte_baudrate_1000000": 192, "nrf_uarte_error_overrun_mask": 192, "nrf_uarte_error_parity_mask": 192, "nrf_uarte_error_framing_mask": 192, "nrf_uarte_error_break_mask": 192, "nrf_uarte_parity_t": 192, "nrf_uarte_parity_exclud": 192, "nrf_uarte_parity_includ": 192, "nrf_uarte_hwfc_t": 192, "nrf_uarte_hwfc_dis": 192, "nrf_uarte_hwfc_en": 192, "nrf_uarte_stop_t": 192, "nrf_uarte_stop_on": 192, "nrf_uarte_stop_two": 192, "nrf_uarte_paritytype_t": 192, "nrf_uarte_paritytype_even": 192, "nrf_uarte_paritytype_odd": 192, "nrf_uarte_event_clear": [192, 193], "nrf_uarte_event_check": [192, 193], "nrf_uarte_event_address_get": [192, 193], "nrf_uarte_shorts_set": [192, 193], "nrf_uarte_shorts_get": [192, 193], "nrf_uarte_shorts_en": [192, 193], "nrf_uarte_shorts_dis": [192, 193], "nrf_uarte_int_en": [192, 193], "nrf_uarte_int_enable_check": [192, 193], "nrf_uarte_int_dis": [192, 193], "nrf_uarte_subscribe_set": [192, 193], "nrf_uarte_subscribe_clear": [192, 193], "nrf_uarte_publish_set": [192, 193], "nrf_uarte_publish_clear": [192, 193], "nrf_uarte_errorsrc_get_and_clear": [192, 193], "nrf_uarte_en": [192, 193], "nrf_uarte_dis": [192, 193], "nrf_uarte_enable_check": [192, 193], "nrf_uarte_txrx_pins_set": [192, 193], "nrf_uarte_txrx_pins_disconnect": [192, 193], "nrf_uarte_tx_pin_get": [192, 193], "nrf_uarte_rx_pin_get": [192, 193], "nrf_uarte_rts_pin_get": [192, 193], "nrf_uarte_cts_pin_get": [192, 193], "nrf_uarte_hwfc_pins_set": [192, 193], "nrf_uarte_hwfc_pins_disconnect": [192, 193], "nrf_uarte_task_trigg": [192, 193], "nrf_uarte_task_address_get": [192, 193], "nrf_uarte_configur": [192, 193], "nrf_uarte_baudrate_set": [192, 193], "nrf_uarte_tx_buffer_set": [192, 193], "nrf_uarte_tx_buffer_get": [192, 193], "nrf_uarte_tx_amount_get": [192, 193], "nrf_uarte_rx_buffer_set": [192, 193], "nrf_uarte_rx_buffer_get": 192, "nrf_uarte_rx_amount_get": [192, 193], "nrfy_uart": 193, "nrfy_uarte_periph_configur": 193, "nrfy_uarte_config_t": 193, "nrfy_uarte_int_init": 193, "nrfy_uarte_int_uninit": 193, "nrfy_uarte_events_process": 193, "nrfy_uarte_tx_abort": 193, "nrfy_uarte_stop": 193, "nrfy_uarte_tx_start": 193, "nrfy_uarte_rx_start": 193, "nrfy_uarte_pins_get": 193, "nrfy_uarte_pins_t": 193, "nrfy_uarte_pins_disconnect": 193, "nrfy_uarte_event_clear": 193, "nrfy_uarte_event_check": 193, "nrfy_uarte_event_address_get": 193, "nrfy_uarte_shorts_set": 193, "nrfy_uarte_shorts_get": 193, "nrfy_uarte_shorts_en": 193, "nrfy_uarte_shorts_dis": 193, "nrfy_uarte_int_en": 193, "nrfy_uarte_int_enable_check": 193, "nrfy_uarte_int_dis": 193, "nrfy_uarte_subscribe_set": 193, "nrfy_uarte_subscribe_clear": 193, "nrfy_uarte_publish_set": 193, "nrfy_uarte_publish_clear": 193, "nrfy_uarte_errorsrc_get_and_clear": 193, "nrfy_uarte_en": 193, "nrfy_uarte_dis": 193, "nrfy_uarte_enable_check": 193, "nrfy_uarte_txrx_pins_set": 193, "nrfy_uarte_txrx_pins_disconnect": 193, "nrfy_uarte_tx_pin_get": 193, "nrfy_uarte_rx_pin_get": 193, "nrfy_uarte_rts_pin_get": 193, "nrfy_uarte_cts_pin_get": 193, "nrfy_uarte_hwfc_pins_set": 193, "nrfy_uarte_hwfc_pins_disconnect": 193, "nrfy_uarte_task_trigg": 193, "nrfy_uarte_task_address_get": 193, "nrfy_uarte_configur": 193, "nrfy_uarte_baudrate_set": 193, "nrfy_uarte_tx_buffer_set": 193, "nrfy_uarte_tx_buffer_get": 193, "nrfy_uarte_tx_amount_get": 193, "nrfy_uarte_rx_buffer_set": 193, "nrfy_uarte_rx_amount_get": 193, "nrf_uicr_hal": 195, "nrf_uicr_has_mem_config": 195, "nrf_uicr_has_periph_config": 195, "nrf_uicr_has_feature_config": 195, "nrf_uicr_has_mailbox": 195, "nrf_uicr_has_vtor": 195, "vtor": 195, "nrf_uicr_has_ptrext": 195, "nrf_uicr_has_feature_gpio": 195, "nrf_uicr_has_bootconf": 195, "immut": 195, "nrf_uicr_has_ch_link_dir_en": 195, "en": 195, "nrf_uicr_mem_count": 195, "nrf_uicr_periph_count": 195, "nrf_uicr_gpio_count": 195, "nrf_uicr_gpiote_ch_count": 195, "nrf_uicr_ipct_global_count": 195, "nrf_uicr_dppi_local_count": 195, "nrf_uicr_dppi_global_count": 195, "nrf_uicr_ipcmap_count": 195, "ipcmap": 195, "nrf_uicr_mailbox_count": 195, "nrf_uicr_bootconf_perm_mask": 195, "nrf_uicr_mem_config_perm_mask_t": 195, "nrf_uicr_mem_config_perm_read_mask": 195, "nrf_uicr_mem_config_perm_write_mask": 195, "nrf_uicr_mem_config_perm_execute_mask": 195, "nrf_uicr_mem_config_perm_nonsecure_mask": 195, "nrf_uicr_feature_index_mask_t": 195, "nrf_uicr_feature_index_0_mask": 195, "nrf_uicr_feature_index_1_mask": 195, "nrf_uicr_feature_index_2_mask": 195, "nrf_uicr_feature_index_3_mask": 195, "nrf_uicr_feature_index_4_mask": 195, "nrf_uicr_feature_index_5_mask": 195, "nrf_uicr_feature_index_6_mask": 195, "nrf_uicr_feature_index_7_mask": 195, "nrf_uicr_feature_index_8_mask": 195, "nrf_uicr_feature_index_9_mask": 195, "nrf_uicr_feature_index_10_mask": 195, "nrf_uicr_feature_index_11_mask": 195, "nrf_uicr_feature_index_12_mask": 195, "nrf_uicr_feature_index_13_mask": 195, "nrf_uicr_feature_index_14_mask": 195, "nrf_uicr_feature_index_15_mask": 195, "nrf_uicr_feature_index_16_mask": 195, "nrf_uicr_feature_index_17_mask": 195, "nrf_uicr_feature_index_18_mask": 195, "nrf_uicr_feature_index_19_mask": 195, "nrf_uicr_feature_index_20_mask": 195, "nrf_uicr_feature_index_21_mask": 195, "nrf_uicr_feature_index_22_mask": 195, "nrf_uicr_feature_index_23_mask": 195, "nrf_uicr_feature_index_24_mask": 195, "nrf_uicr_feature_index_25_mask": 195, "nrf_uicr_feature_index_26_mask": 195, "nrf_uicr_feature_index_27_mask": 195, "nrf_uicr_feature_index_28_mask": 195, "nrf_uicr_feature_index_29_mask": 195, "nrf_uicr_feature_index_30_mask": 195, "nrf_uicr_feature_index_31_mask": 195, "nrf_uicr_feature_t": 195, "nrf_uicr_feature_gpio": 195, "nrf_uicr_feature_gpiote_ch": 195, "nrf_uicr_feature_ipct_local_ch": 195, "nrf_uicr_feature_ipct_local_interrupt": 195, "nrf_uicr_feature_ipct_global_ch": 195, "nrf_uicr_feature_ipct_global_interrupt": 195, "nrf_uicr_feature_dppi_local_ch": 195, "nrf_uicr_feature_dppi_local_chg": 195, "nrf_uicr_feature_dppi_global_ch": 195, "nrf_uicr_feature_dppi_global_chg": 195, "nrf_uicr_feature_grtc_cc": 195, "nrf_uicr_boot_region_perm_mask_t": 195, "nrf_uicr_boot_region_perm_read_mask": 195, "nrf_uicr_boot_region_perm_write_mask": 195, "nrf_uicr_boot_region_perm_execute_mask": 195, "nrf_uicr_boot_region_perm_secure_mask": 195, "nrf_uicr_mem_config_t": 195, "nrf_uicr_mem_config_get": 195, "nrf_uicr_typ": 195, "nrf_uicr_mem_size_get": 195, "nrf_uicr_periph_config_t": 195, "nrf_uicr_periph_config_get": 195, "nrf_uicr_feature_own_get": 195, "nrf_uicr_feature_secure_get": 195, "nrf_uicr_dppi_link_t": 195, "nrf_uicr_feature_link_get": 195, "nrf_uicr_ipcmap_config_t": 195, "nrf_uicr_ipcmap_config_get": 195, "nrf_uicr_mailbox_address_get": 195, "nrf_uicr_mailbox_config_t": 195, "nrf_uicr_mailbox_config_get": 195, "nrf_uicr_initsvtor_get": 195, "nrf_uicr_initnsvtor_get": 195, "nrf_uicr_ptrextuicr_get": 195, "nrf_uicr_boot_region_config_set": 195, "nrf_uicr_boot_region_config_t": 195, "nrf_uicr_boot_region_config_get": 195, "nrf_uicr_gpio_instance_get": 195, "nrf_uicrextended_typ": 195, "nrf_uicr_gpio_ctrlsel_get": 195, "ctrlsel": 195, "nrf_uicr_ipcmap_pair_t": 195, "ipct_channel": 195, "secattr": 195, "dmasec": 195, "nrf_processor_t": 195, "identif": 195, "univers": [196, 197, 199], "nrfx_usbd_epin": 196, "nrfx_usbd_epout": 196, "nrfx_usbd_eps": 196, "nrfx_usbd_isos": 196, "totali": 196, "nrf_usbd_isosplit_set": [196, 197], "nrf_usbd_isosplit_get": [196, 197], "nrfx_usbd_feeder_buffer_s": 196, "feeder": 196, "nrfx_usbd_feeder_buffer_get": 196, "nrfx_usbd_transfer_in": 196, "tx_buff": 196, "tx_size": 196, "tx_flag": 196, "nrfx_usbd_transfer_flags_t": 196, "nrfx_usbd_transfer_out": 196, "rx_buff": 196, "rx_size": 196, "nrfx_usbd_transfer_t": 196, "nrfx_usbd_event_handler_t": 196, "nrfx_usbd_evt_t": 196, "nrfx_usbd_feeder_t": 196, "nrfx_usbd_ep_transfer_t": 196, "ep_siz": 196, "feedback": 196, "retval": 196, "nrfx_usbd_consumer_t": 196, "nrfx_usbd_ep_overload": 196, "nrfx_usbd_ep_t": 196, "nrfx_usbd_epout0": 196, "nrfx_usbd_epout1": 196, "nrfx_usbd_epout2": 196, "nrfx_usbd_epout3": 196, "nrfx_usbd_epout4": 196, "nrfx_usbd_epout5": 196, "nrfx_usbd_epout6": 196, "nrfx_usbd_epout7": 196, "nrfx_usbd_epout8": 196, "nrfx_usbd_epin0": 196, "nrfx_usbd_epin1": 196, "nrfx_usbd_epin2": 196, "nrfx_usbd_epin3": 196, "nrfx_usbd_epin4": 196, "nrfx_usbd_epin5": 196, "nrfx_usbd_epin6": 196, "nrfx_usbd_epin7": 196, "nrfx_usbd_epin8": 196, "nrfx_usbd_event_type_t": 196, "nrfx_usbd_evt_sof": 196, "Of": 196, "nrfx_usbd_evt_reset": 196, "nrfx_usbd_evt_suspend": 196, "nrfx_usbd_evt_resum": 196, "nrfx_usbd_evt_wureq": 196, "nrfx_usbd_evt_setup": 196, "nrfx_usbd_evt_eptransf": 196, "nrfx_usbd_evt_cnt": 196, "nrfx_usbd_ep_status_t": 196, "nrfx_usbd_ep_busi": 196, "nrfx_usbd_ep_ok": 196, "nrfx_usbd_ep_wait": 196, "next_transf": 196, "nrfx_usbd_ep_abort": 196, "ep0": [196, 197], "bitwis": [196, 233, 240], "nrfx_usbd_transfer_zlp_flag": 196, "nrfx_usbd_init": 196, "nrfx_usbd_uninit": 196, "nrfx_usbd_init_check": 196, "nrfx_usbd_en": 196, "ldo": 196, "hfint": 196, "perfectli": 196, "nrfx_usbd_start": 196, "reaction": 196, "nrfx_usbd_dis": 196, "enable_sof": 196, "fulli": [196, 234], "nrfx_usbd_is_initi": 196, "nrfx_usbd_is_en": 196, "nrfx_usbd_is_start": 196, "nrfx_usbd_suspend": 196, "firmwar": 196, "unavail": 196, "nrfx_usbd_wakeup_req": 196, "quit": 196, "5m": [196, 197], "begun": 196, "20m": 196, "nrfx_usbd_suspend_check": 196, "itself": [196, 240], "nrfx_usbd_suspend_irq_config": 196, "help": [196, 241], "stabl": [196, 220], "nrfx_usbd_active_irq_config": 196, "nrfx_usbd_bus_suspend_check": 196, "nrfx_usbd_force_bus_wakeup": 196, "nrfx_usbd_ep_max_packet_size_set": 196, "ep": [196, 197], "nrfx_usbd_ep_en": 196, "nrfx_usbd_ep_max_packet_size_get": 196, "pocket": 196, "nrfx_usbd_ep_enable_check": 196, "nrfx_usbd_ep_dis": 196, "nrfx_usbd_ep_default_config": 196, "nrfx_usbd_ep_transf": 196, "p_transfer": 196, "till": 196, "queu": 196, "epin0": 196, "epout0": 196, "nrfx_usbd_ep_handled_transf": 196, "nrfx_usbd_handler_desc_t": 196, "p_handler": 196, "chunk": 196, "reus": [196, 241], "temporarili": 196, "p_size": 196, "consid": [196, 220], "nrfx_usbd_epout_size_get": 196, "nrfx_usbd_ep_is_busi": 196, "under": 196, "ip": 196, "upload": 196, "download": [196, 220], "nrfx_usbd_ep_stal": 196, "endpoit": 196, "nrfx_usbd_setup_stal": 196, "nrfx_usbd_ep_stall_clear": 196, "nrfx_usbd_ep_stall_check": 196, "nrfx_usbd_ep_dtoggle_clear": 196, "nrfx_usbd_setup_get": 196, "p_setup": 196, "nrfx_usbd_setup_data_clear": 196, "token": [196, 197, 234], "nrfx_usbd_setup_clear": 196, "nrfx_usbd_last_setup_dir_get": 196, "nrfx_usbd_transfer_out_drop": 196, "drop": 196, "framecnt": 196, "isocrc": 196, "isochronoun": 196, "eptransf": 196, "nrfx_usbd_data_ptr_t": 196, "mainli": 196, "nrfx_usbd_handler_t": 196, "bmrequesttyp": [196, 197], "wvalu": [196, 197], "windex": [196, 197], "wlength": [196, 197], "nrf_usbd_hal": 197, "nrf_usbd_setup_bmrequesttype_get": 197, "nrf_usbd_typ": 197, "brequesttyp": 197, "nrf_usbd_setup_brequest_get": 197, "nrf_usbd_setup_wvalue_get": 197, "nrf_usbd_setup_windex_get": 197, "nrf_usbd_setup_wlength_get": 197, "nrf_usbd_framecntr_s": 197, "nrf_usbd_episo_first": 197, "nrf_usbd_epin_cnt": 197, "nrf_usbd_epout_cnt": 197, "nrf_usbd_ep_dir_msk": 197, "nrf_usbd_ep_dir_in": 197, "nrf_usbd_ep_dir_out": 197, "nrf_usbd_epin": 197, "epnr": 197, "nrf_usbd_epout": 197, "nrf_usbd_ep_nr_get": 197, "strip": 197, "nrf_usbd_epin_check": 197, "nrf_usbd_epout_check": 197, "nrf_usbd_episo_check": 197, "bulk": 197, "nrf_usbd_ep_valid": 197, "nrf_usbd_episoout_no_data": 197, "nrf_usbd_episoout_size_get": 197, "nrf_usbd_task_t": 197, "nrf_usbd_task_startepin0": 197, "epin": 197, "traffic": 197, "nrf_usbd_task_startepin1": 197, "nrf_usbd_task_startepin2": 197, "nrf_usbd_task_startepin3": 197, "nrf_usbd_task_startepin4": 197, "nrf_usbd_task_startepin5": 197, "nrf_usbd_task_startepin6": 197, "nrf_usbd_task_startepin7": 197, "nrf_usbd_task_startisoin": 197, "isoin": 197, "nrf_usbd_task_startepout0": 197, "epout": 197, "nrf_usbd_task_startepout1": 197, "nrf_usbd_task_startepout2": 197, "nrf_usbd_task_startepout3": 197, "nrf_usbd_task_startepout4": 197, "nrf_usbd_task_startepout5": 197, "nrf_usbd_task_startepout6": 197, "nrf_usbd_task_startepout7": 197, "nrf_usbd_task_startisoout": 197, "isoout": 197, "nrf_usbd_task_ep0rcvout": 197, "nrf_usbd_task_ep0statu": 197, "nrf_usbd_task_ep0stal": 197, "nrf_usbd_task_drivedpdm": 197, "dpdmvalu": 197, "nrf_usbd_task_nodrivedpdm": 197, "nrf_usbd_event_t": 197, "nrf_usbd_event_usbreset": 197, "nrf_usbd_event_start": 197, "confirm": 197, "epstatu": 197, "nrf_usbd_event_endepin0": 197, "nrf_usbd_event_endepin1": 197, "nrf_usbd_event_endepin2": 197, "nrf_usbd_event_endepin3": 197, "nrf_usbd_event_endepin4": 197, "nrf_usbd_event_endepin5": 197, "nrf_usbd_event_endepin6": 197, "nrf_usbd_event_endepin7": 197, "nrf_usbd_event_ep0datadon": 197, "nrf_usbd_event_endisoin0": 197, "nrf_usbd_event_endepout0": 197, "nrf_usbd_event_endepout1": 197, "nrf_usbd_event_endepout2": 197, "nrf_usbd_event_endepout3": 197, "nrf_usbd_event_endepout4": 197, "nrf_usbd_event_endepout5": 197, "nrf_usbd_event_endepout6": 197, "nrf_usbd_event_endepout7": 197, "nrf_usbd_event_endisoout0": 197, "nrf_usbd_event_sof": 197, "nrf_usbd_event_usbev": 197, "eventcaus": 197, "nrf_usbd_event_ep0setup": 197, "nrf_usbd_event_dataep": 197, "epdatastatu": 197, "nrf_usbd_short_mask_t": 197, "nrf_usbd_short_ep0datadone_startepin0_mask": 197, "ep0datadon": 197, "startepin0": 197, "nrf_usbd_short_ep0datadone_startepout0_mask": 197, "startepout0": 197, "nrf_usbd_short_ep0datadone_ep0status_mask": 197, "ep0statu": 197, "nrf_usbd_short_endepout0_ep0status_mask": 197, "endepout": 197, "nrf_usbd_short_endepout0_ep0rcvout_mask": 197, "ep0rcvout": 197, "nrf_usbd_int_mask_t": 197, "nrf_usbd_int_usbreset_mask": 197, "usbreset": 197, "nrf_usbd_int_started_mask": 197, "nrf_usbd_int_endepin0_mask": 197, "endepin": 197, "nrf_usbd_int_endepin1_mask": 197, "nrf_usbd_int_endepin2_mask": 197, "nrf_usbd_int_endepin3_mask": 197, "nrf_usbd_int_endepin4_mask": 197, "nrf_usbd_int_endepin5_mask": 197, "nrf_usbd_int_endepin6_mask": 197, "nrf_usbd_int_endepin7_mask": 197, "nrf_usbd_int_ep0datadone_mask": 197, "nrf_usbd_int_endisoin0_mask": 197, "endisoin": 197, "nrf_usbd_int_endepout0_mask": 197, "nrf_usbd_int_endepout1_mask": 197, "nrf_usbd_int_endepout2_mask": 197, "nrf_usbd_int_endepout3_mask": 197, "nrf_usbd_int_endepout4_mask": 197, "nrf_usbd_int_endepout5_mask": 197, "nrf_usbd_int_endepout6_mask": 197, "nrf_usbd_int_endepout7_mask": 197, "nrf_usbd_int_endisoout0_mask": 197, "endisoout": 197, "nrf_usbd_int_sof_mask": 197, "nrf_usbd_int_usbevent_mask": 197, "usbev": 197, "nrf_usbd_int_ep0setup_mask": 197, "ep0setup": 197, "nrf_usbd_int_dataep_mask": 197, "epdata": 197, "nrf_usbd_eventcause_mask_t": 197, "nrf_usbd_eventcause_isooutcrc_mask": 197, "nrf_usbd_eventcause_suspend_mask": 197, "nrf_usbd_eventcause_resume_mask": 197, "k": 197, "nrf_usbd_eventcause_wureq_mask": 197, "nrf_usbd_eventcause_ready_mask": 197, "few": [197, 220], "nrf_usbd_dpdmvalue_t": 197, "nrf_usbd_dpdmvalue_resum": 197, "50u": 197, "nrf_usbd_dpdmvalue_j": 197, "j": 197, "nrf_usbd_dpmvalue_k": 197, "nrf_usbd_dtoggle_t": 197, "nrf_usbd_dtoggle_nop": 197, "nrf_usbd_dtoggle_data0": 197, "data0": 197, "nrf_usbd_dtoggle_data1": 197, "data1": 197, "nrf_usbd_epstatus_mask_t": 197, "nrf_usbd_epstatus_epin0_mask": 197, "nrf_usbd_epstatus_epin1_mask": 197, "nrf_usbd_epstatus_epin2_mask": 197, "nrf_usbd_epstatus_epin3_mask": 197, "nrf_usbd_epstatus_epin4_mask": 197, "nrf_usbd_epstatus_epin5_mask": 197, "nrf_usbd_epstatus_epin6_mask": 197, "nrf_usbd_epstatus_epin7_mask": 197, "nrf_usbd_epstatus_epout0_mask": 197, "nrf_usbd_epstatus_epout1_mask": 197, "nrf_usbd_epstatus_epout2_mask": 197, "nrf_usbd_epstatus_epout3_mask": 197, "nrf_usbd_epstatus_epout4_mask": 197, "nrf_usbd_epstatus_epout5_mask": 197, "nrf_usbd_epstatus_epout6_mask": 197, "nrf_usbd_epstatus_epout7_mask": 197, "nrf_usbd_dataepstatus_mask_t": 197, "dataepstatu": 197, "nrf_usbd_epdatastatus_epin1_mask": 197, "nrf_usbd_epdatastatus_epin2_mask": 197, "nrf_usbd_epdatastatus_epin3_mask": 197, "nrf_usbd_epdatastatus_epin4_mask": 197, "nrf_usbd_epdatastatus_epin5_mask": 197, "nrf_usbd_epdatastatus_epin6_mask": 197, "nrf_usbd_epdatastatus_epin7_mask": 197, "nrf_usbd_epdatastatus_epout1_mask": 197, "nrf_usbd_epdatastatus_epout2_mask": 197, "nrf_usbd_epdatastatus_epout3_mask": 197, "nrf_usbd_epdatastatus_epout4_mask": 197, "nrf_usbd_epdatastatus_epout5_mask": 197, "nrf_usbd_epdatastatus_epout6_mask": 197, "nrf_usbd_epdatastatus_epout7_mask": 197, "nrf_usbd_isosplit_t": 197, "nrf_usbd_isosplit_onedir": 197, "nrf_usbd_isosplit_half": 197, "nrf_usbd_isoinconfig_t": 197, "isoinconfig": 197, "nrf_usbd_isoinconfig_noresp": 197, "nrf_usbd_isoinconfig_zerodata": 197, "nrf_usbd_task_trigg": 197, "nrf_usbd_task_address_get": 197, "nrf_usbd_event_clear": 197, "nrf_usbd_event_check": 197, "nrf_usbd_event_get_and_clear": 197, "nrf_usbd_event_address_get": 197, "nrf_usbd_shorts_en": 197, "nrf_usbd_shorts_dis": 197, "nrf_usbd_shorts_get": 197, "nrf_usbd_int_en": 197, "nrf_usbd_int_enable_check": 197, "nrf_usbd_int_enable_get": 197, "nrf_usbd_int_dis": 197, "nrf_usbd_en": 197, "nrf_usbd_dis": 197, "nrf_usbd_eventcause_get": 197, "nrf_usbd_eventcause_clear": 197, "nrf_usbd_eventcause_get_and_clear": 197, "safest": 197, "nrf_usbd_halted_get": 197, "haltedepin": 197, "getstatu": 197, "nrf_usbd_ep_is_stal": 197, "haltedout": 197, "syntax": 197, "sweeter": 197, "nrf_usbd_epstatus_get": 197, "nrf_usbd_epstatus_clear": 197, "nrf_usbd_epstatus_get_and_clear": 197, "nrf_usbd_epdatastatus_get": 197, "nrf_usbd_epdatastatus_clear": 197, "nrf_usbd_epdatastatus_get_and_clear": 197, "nrf_usbd_epout_size_get": 197, "nrf_usbd_epout_clear": 197, "nrf_usbd_pullup_en": 197, "pullup": 197, "nrf_usbd_pullup_dis": 197, "nrf_usbd_pullup_check": 197, "nrf_usbd_dpdmvalue_set": 197, "drivedpdm": 197, "nrf_usbd_dtoggle_set": 197, "op": 197, "nrf_usbd_dtoggle_get": 197, "nrf_usbd_ep_enable_check": 197, "nrf_usbd_ep_en": 197, "nrf_usbd_ep_dis": 197, "nrf_usbd_ep_stal": 197, "nrf_usbd_ep_unstal": 197, "unstal": 197, "nrf_usbd_framecntr_get": 197, "nrf_usbd_lowpower_en": 197, "anymor": 197, "nrf_usbd_lowpower_dis": 197, "nrf_usbd_lowpower_check": 197, "nrf_usbd_isoinconfig_set": 197, "nrf_usbd_isoinconfig_get": 197, "cofigur": 197, "nrf_usbd_ep_easydma_set": 197, "nrf_usbd_ep_amount_get": 197, "nrf_usbd": 198, "nrf_usbhs_hal": 199, "nrf_usbhs_task_t": 199, "nrf_usbhs_task_start": 199, "nrf_usbhs_event_t": 199, "nrf_usbhs_event_cor": 199, "nrf_usbhs_int_mask_t": 199, "nrf_usbhs_int_usbcore_mask": 199, "usbcor": 199, "nrf_usbhs_task_trigg": 199, "nrf_usbhs_typ": 199, "nrf_usbhs_task_address_get": 199, "nrf_usbhs_event_clear": 199, "nrf_usbhs_event_check": 199, "nrf_usbhs_event_get_and_clear": 199, "nrf_usbhs_event_address_get": 199, "nrf_usbhs_int_en": 199, "nrf_usbhs_int_enable_check": 199, "nrf_usbhs_int_enable_get": 199, "nrf_usbhs_int_dis": 199, "nrf_usbhs_en": 199, "nrf_usbhs_dis": 199, "nrf_usbh": 200, "nrfx_usbreg": 201, "nrfx_usbreg_event_handler_t": 201, "nrfx_usbreg_evt_t": 201, "nrfx_usbreg_evt_detect": 201, "nrfx_usbreg_evt_remov": 201, "nrfx_usbreg_evt_readi": 201, "nrfx_usbreg_state_t": 201, "nrfx_usbreg_state_disconnect": 201, "nrfx_usbreg_state_connect": 201, "nrfx_usbreg_state_readi": 201, "nrfx_usbreg_handler_get": 201, "nrfx_usbreg_init": 201, "nrfx_usbreg_config_t": 201, "nrfx_usbreg_uninit": 201, "nrfx_usbreg_en": 201, "nrfx_usbreg_dis": 201, "nrfx_usbreg_init_check": 201, "nrfx_usbreg_usbstatus_get": 201, "nrf_usbreg_h": 202, "nrf_usbreg_event_t": 202, "nrf_usbreg_event_usbdetect": 202, "nrf_usbreg_event_usbremov": 202, "nrf_usbreg_event_usbpwrrdi": 202, "3v": 202, "nrf_usbreg_int_mask_t": 202, "nrf_usbreg_int_usbdetect": 202, "nrf_usbreg_int_usbremov": 202, "nrf_usbreg_int_usbpwrrdi": 202, "nrf_usbreg_status_mask_t": 202, "nrf_usbreg_status_vbusdetect_mask": 202, "nrf_usbreg_status_outputrdy_mask": 202, "nrf_usbreg_event_clear": 202, "nrf_usbreg_typ": 202, "nrf_usbreg_event_check": 202, "nrf_usbreg_int_en": 202, "nrf_usbreg_int_dis": 202, "nrf_usbreg_int_enable_check": 202, "nrf_usbreg_status_get": 202, "nrf_vmc_hal": 203, "nrf_vmc_power_t": 203, "nrf_vmc_power_s0": 203, "nrf_vmc_power_s1": 203, "nrf_vmc_power_s2": 203, "nrf_vmc_power_s3": 203, "nrf_vmc_power_s4": 203, "nrf_vmc_power_s5": 203, "nrf_vmc_power_s6": 203, "nrf_vmc_power_s7": 203, "nrf_vmc_power_s8": 203, "nrf_vmc_power_s9": 203, "nrf_vmc_power_s10": 203, "nrf_vmc_power_s11": 203, "nrf_vmc_power_s12": 203, "nrf_vmc_power_s13": 203, "nrf_vmc_power_s14": 203, "nrf_vmc_power_s15": 203, "nrf_vmc_retention_t": 203, "nrf_vmc_retention_s0": 203, "nrf_vmc_retention_s1": 203, "nrf_vmc_retention_s2": 203, "nrf_vmc_retention_s3": 203, "nrf_vmc_retention_s4": 203, "nrf_vmc_retention_s5": 203, "nrf_vmc_retention_s6": 203, "nrf_vmc_retention_s7": 203, "nrf_vmc_retention_s8": 203, "nrf_vmc_retention_s9": 203, "nrf_vmc_retention_s10": 203, "nrf_vmc_retention_s11": 203, "nrf_vmc_retention_s12": 203, "nrf_vmc_retention_s13": 203, "nrf_vmc_retention_s14": 203, "nrf_vmc_retention_s15": 203, "nrf_vmc_ram_block_config": 203, "nrf_vmc_type": 203, "ram_block_num": 203, "power_mask": 203, "retention_mask": 203, "nrf_vmc_ram_block_clear": 203, "nrf_vmc_ram_block_power_set": 203, "sect_pow": 203, "paricular": 203, "nrf_vmc_ram_block_power_all_set": 203, "nrf_vmc_ram_block_power_clear": 203, "nrf_vmc_ram_block_power_mask_get": 203, "nrf_vmc_ram_block_retention_set": 203, "sect_retent": 203, "nrf_vmc_ram_block_retention_all_set": 203, "nrf_vmc_ram_block_retention_clear": 203, "nrf_vmc_ram_block_retention_mask_get": 203, "nrf_vmc": 204, "nrf_vpr_clic_hal": 205, "risc": [205, 206, 207, 208, 209, 210], "nrf_vpr_clic_irq_count": 205, "nrf_vpr_clic_int_to_prio": 205, "nrf_vpr_clic_priority_t": 205, "nrf_vpr_clic_mode_t": 205, "nrf_vpr_clic_mode_m": 205, "nrf_vpr_clic_priority_level0": 205, "nrf_vpr_clic_priority_level1": 205, "nrf_vpr_clic_priority_level2": 205, "nrf_vpr_clic_priority_level3": 205, "nrf_vpr_clic_trigger_t": 205, "nrf_vpr_clic_trigger_edge_po": 205, "nrf_vpr_clic_priv_t": 205, "nrf_vpr_clic_priv_machin": 205, "nrf_vpr_clic_config_get": 205, "nrf_clic_typ": 205, "nrf_vpr_clic_config_t": 205, "nrf_vpr_clic_info_get": 205, "nrf_vpr_clic_info_t": 205, "p_info": 205, "nrf_vpr_clic_int_pending_set": 205, "irq_num": 205, "nrf_vpr_clic_int_pending_clear": 205, "nrf_vpr_clic_int_pending_check": 205, "nrf_vpr_clic_int_enable_set": 205, "nrf_vpr_clic_int_enable_check": 205, "nrf_vpr_clic_int_priority_set": 205, "nrf_vpr_clic_int_priority_get": 205, "nrf_vpr_clic_int_attr_get": 205, "nrf_vpr_clic_attr_t": 205, "p_attr": 205, "nrf_vpr_clic": 205, "hw_vector": 205, "level_encod": 205, "privilege_mod": 205, "interrupt_count": 205, "trigger_count": 205, "nrf_vpr_csr_hal": 206, "nrf_vpr_csr_nordic_key_mask": 206, "nrf_vpr_csr_int_threshold_t": 206, "nrf_vpr_csr_int_threshold_dis": 206, "nrf_vpr_csr_int_threshold_level0": 206, "nrf_vpr_csr_int_threshold_level1": 206, "nrf_vpr_csr_int_threshold_level2": 206, "nrf_vpr_csr_int_threshold_level3": 206, "nrf_vpr_csr_trap_cause_t": 206, "trap": 206, "nrf_vpr_csr_trap_cause_instr_addr_misalign": 206, "misalign": 206, "nrf_vpr_csr_trap_cause_instr_access_fault": 206, "nrf_vpr_csr_trap_cause_instr_illeg": 206, "illeg": [206, 248], "nrf_vpr_csr_trap_cause_breakpoint": 206, "breakpoint": 206, "nrf_vpr_csr_trap_cause_load_addr_misalign": 206, "nrf_vpr_csr_trap_cause_load_access_fault": 206, "nrf_vpr_csr_trap_cause_store_addr_misalign": 206, "amo": 206, "nrf_vpr_csr_trap_cause_store_access_fault": 206, "nrf_vpr_csr_trap_cause_ecall_m": 206, "nrf_vpr_csr_trap_cause_stacking_bus_fault": 206, "nrf_vpr_csr_trap_cause_stacking_unalign": 206, "nrf_vpr_csr_trap_cause_vector_fault": 206, "nrf_vpr_csr_trap_cause_stacking_unaligned_ex": 206, "nrf_vpr_csr_trap_cause_unstacking_unalign": 206, "unstack": 206, "nrf_vpr_csr_trap_cause_unstacking_bus_fault": 206, "nrf_vpr_csr_trap_cause_store_timeout_fault": 206, "nrf_vpr_csr_trap_cause_load_timeout_fault": 206, "nrf_vpr_csr_sleep_state_t": 206, "nrf_vpr_csr_sleep_state_wait": 206, "nrf_vpr_csr_sleep_state_reset": 206, "nrf_vpr_csr_sleep_state_sleep": 206, "nrf_vpr_csr_sleep_state_deep_sleep": 206, "nrf_vpr_csr_sleep_state_hibern": 206, "nrf_vpr_csr_machine_interrupts_en": 206, "nrf_vpr_csr_machine_interrupts_dis": 206, "nrf_vpr_csr_machine_interrupts_check": 206, "nrf_vpr_csr_machine_trap_vector_table_addr_set": 206, "nrf_vpr_csr_machine_trap_vector_table_addr_get": 206, "nrf_vpr_csr_machine_exception_pc_get": 206, "virtual": 206, "encount": [206, 249], "nrf_vpr_csr_machine_trap_cause_code_get": 206, "nrf_vpr_csr_machine_trap_interrupt_check": 206, "nrf_vpr_csr_machine_trap_value_get": 206, "nrf_vpr_csr_machine_interrupt_threshold_set": 206, "th": 206, "nrf_vpr_csr_machine_interrupt_threshold_get": 206, "nrf_vpr_csr_machine_cycle_counter_enable_set": 206, "nrf_vpr_csr_machine_cycle_counter_enable_check": 206, "nrf_vpr_csr_machine_cycle_counter_get": 206, "nrf_vpr_csr_machine_instruction_counter_enable_set": 206, "nrf_vpr_csr_machine_instruction_counter_enable_check": 206, "nrf_vpr_csr_machine_instruction_counter_get": 206, "exectut": 206, "nrf_vpr_csr_rtperiph_enable_set": 206, "perhiper": 206, "nrf_vpr_csr_rtperiph_enable_check": 206, "nrf_vpr_csr_cnt_irq_enable_set": 206, "cnt_irq_posit": 206, "nrf_vpr_csr_cnt_irq_enable_check": 206, "nrf_vpr_csr_sleep_state_set": 206, "nrf_vpr_csr_sleep_state_get": 206, "nrf_vpr_csr_return_to_sleep_set": 206, "nrf_vpr_csr_return_to_sleep_check": 206, "nrf_vpr_csr_stack_on_sleep_set": 206, "nrf_vpr_csr_stack_on_sleep_check": 206, "nrf_vpr_csr_clic_round_robin_set": 206, "round": [206, 234], "robin": 206, "arbitr": 206, "nrf_vpr_csr_clic_round_robin_check": 206, "nrf_vpr_csr_unrecoverable_return_set": 206, "unrecover": 206, "nrf_vpr_csr_unrecoverable_return_check": 206, "nrf_vpr_csr_vevif_h": 207, "nrf_vpr_csr_vevif_event_task_count": 207, "nrf_vpr_csr_vevif_tasks_get": 207, "nrf_vpr_csr_vevif_tasks_clear": 207, "nrf_vpr_csr_vevif_tasks_set": 207, "nrf_vpr_csr_vevif_events_get": 207, "nrf_vpr_csr_vevif_events_set": 207, "nrf_vpr_csr_vevif_events_trigg": 207, "nrf_vpr_csr_vevif_events_buffered_set": 207, "nrf_vpr_csr_vevif_events_buffered_dirty_check": 207, "nrf_vpr_csr_vevif_subscribe_get": 207, "nrf_vpr_csr_vevif_subscribe_set": 207, "nrf_vpr_csr_vevif_publish_get": 207, "nrf_vpr_csr_vevif_publish_set": 207, "nrf_vpr_csr_vevif_int_en": 207, "nrf_vpr_csr_vevif_int_dis": 207, "nrf_vpr_csr_vevif_int_enable_check": 207, "nrf_vpr_csr_vio_hal": 208, "io": 208, "nrf_vpr_csr_vio_out_shift_t": 208, "nrf_vpr_csr_vio_out_shift_1": 208, "nrf_vpr_csr_vio_out_shift_2": 208, "nrf_vpr_csr_vio_out_shift_4": 208, "nrf_vpr_csr_vio_out_shift_8": 208, "nrf_vpr_csr_vio_out_shift_16": 208, "nrf_vpr_csr_vio_mode_in_t": 208, "nrf_vpr_csr_vio_mode_in_continu": 208, "nrf_vpr_csr_vio_mode_in_ev": 208, "nrf_vpr_csr_vio_dir_get": 208, "nrf_vpr_csr_vio_dir_set": 208, "nrf_vpr_csr_vio_dir_buffered_get": 208, "nrf_vpr_csr_vio_dir_buffered_set": 208, "nrf_vpr_csr_vio_dir_buffered_dirty_check": 208, "fasl": 208, "nrf_vpr_csr_vio_dir_toggle_set": 208, "nrf_vpr_csr_vio_dir_buffered_toggle_set": 208, "nrf_vpr_csr_vio_in_get": 208, "nrf_vpr_csr_vio_mode_in_get": 208, "nrf_vpr_csr_vio_mode_in_set": 208, "nrf_vpr_csr_vio_out_get": 208, "nrf_vpr_csr_vio_out_set": 208, "nrf_vpr_csr_vio_out_buffered_get": 208, "nrf_vpr_csr_vio_out_buffered_set": 208, "nrf_vpr_csr_vio_out_buffered_dirty_check": 208, "nrf_vpr_csr_vio_out_toggle_set": 208, "nrf_vpr_csr_vio_out_toggle_buffered_set": 208, "nrf_vpr_csr_vio_out_combined_set": 208, "nrf_vpr_csr_vio_out_combined_toggle_set": 208, "nrf_vpr_csr_vio_out_combined_dirty_check": 208, "nrf_vpr_csr_vio_mode_out_get": 208, "nrf_vpr_csr_vio_mode_out_t": 208, "p_mode": 208, "nrf_vpr_csr_vio_mode_out_set": 208, "nrf_vpr_csr_vio_dirout_get": 208, "nrf_vpr_csr_vio_dirout_set": 208, "nrf_vpr_csr_vio_dirout_buffered_get": 208, "nrf_vpr_csr_vio_dirout_buffered_set": 208, "nrf_vpr_csr_vio_dirout_buffered_dirty_check": 208, "nrf_vpr_csr_vio_dirout_toggle_set": 208, "nrf_vpr_csr_vio_dirout_toggle_buffered_set": 208, "nrf_vpr_csr_vio": 208, "shift_en": 208, "shift_siz": 208, "nrf_vpr_csr_vtim_hal": 209, "nrf_vpr_csr_vtim_count_t": 209, "nrf_vpr_csr_vtim_count_stop": 209, "nrf_vpr_csr_vtim_count_wrap": 209, "0xfff": 209, "nrf_vpr_csr_vtim_count_reload": 209, "nrf_vpr_csr_vtim_count_trigger_combin": 209, "act": 209, "nrf_vpr_cst_vtim_count_mode_get": 209, "nrf_vpr_csr_vtim_count_mode_set": 209, "nrf_vpr_csr_vtim_simple_counter_get": 209, "nrf_vpr_csr_vtim_simple_counter_set": 209, "nrf_vpr_csr_vtim_simple_counter_top_get": 209, "nrf_vpr_csr_vtim_simple_counter_top_set": 209, "nrf_vpr_csr_vtim_simple_counter_add_set": 209, "nrf_vpr_csr_vtim_simple_wait_set": 209, "writtten": 209, "nrf_vpr_csr_vtim_combined_counter_get": 209, "nrf_vpr_csr_vtim_combined_counter_set": 209, "nrf_vpr_csr_vtim_combined_counter_top_get": 209, "nrf_vpr_csr_vtim_combined_counter_top_set": 209, "nrf_vpr_csr_vtim_combined_counter_add_set": 209, "nrf_vpr_csr_vtim_combined_wait_trigg": 209, "nrf_vpr_hal": 210, "nrf_vpr_events_triggered_count": 210, "nrf_vpr_all_channels_int_mask": 210, "nrf_vpr_task_trigger_all_mask": 210, "nrf_vpr_events_triggered_min": 210, "nrf_vpr_events_triggered_max": 210, "maxim": 210, "nrf_vpr_tasks_trigger_min": 210, "nrf_vpr_tasks_trigger_max": 210, "nrf_vpr_event_t": [210, 211], "nrf_vpr_event_triggered_0": 210, "nrf_vpr_event_triggered_1": 210, "nrf_vpr_event_triggered_2": 210, "nrf_vpr_event_triggered_3": 210, "nrf_vpr_event_triggered_4": 210, "nrf_vpr_event_triggered_5": 210, "nrf_vpr_event_triggered_6": 210, "nrf_vpr_event_triggered_7": 210, "nrf_vpr_event_triggered_8": 210, "nrf_vpr_event_triggered_9": 210, "nrf_vpr_event_triggered_10": 210, "nrf_vpr_event_triggered_11": 210, "nrf_vpr_event_triggered_12": 210, "nrf_vpr_event_triggered_13": 210, "nrf_vpr_event_triggered_14": 210, "nrf_vpr_event_triggered_15": 210, "nrf_vpr_event_triggered_16": 210, "nrf_vpr_event_triggered_17": 210, "nrf_vpr_event_triggered_18": 210, "nrf_vpr_event_triggered_19": 210, "nrf_vpr_event_triggered_20": 210, "nrf_vpr_event_triggered_21": 210, "nrf_vpr_event_triggered_22": 210, "nrf_vpr_int_mask_t": [210, 211], "nrf_vpr_int_triggered_0_mask": 210, "nrf_vpr_int_triggered_1_mask": 210, "nrf_vpr_int_triggered_2_mask": 210, "nrf_vpr_int_triggered_3_mask": 210, "nrf_vpr_int_triggered_4_mask": 210, "nrf_vpr_int_triggered_5_mask": 210, "nrf_vpr_int_triggered_6_mask": 210, "nrf_vpr_int_triggered_7_mask": 210, "nrf_vpr_int_triggered_8_mask": 210, "nrf_vpr_int_triggered_9_mask": 210, "nrf_vpr_int_triggered_10_mask": 210, "nrf_vpr_int_triggered_11_mask": 210, "nrf_vpr_int_triggered_12_mask": 210, "nrf_vpr_int_triggered_13_mask": 210, "nrf_vpr_int_triggered_14_mask": 210, "nrf_vpr_int_triggered_15_mask": 210, "nrf_vpr_int_triggered_16_mask": 210, "nrf_vpr_int_triggered_17_mask": 210, "nrf_vpr_int_triggered_18_mask": 210, "nrf_vpr_int_triggered_19_mask": 210, "nrf_vpr_int_triggered_20_mask": 210, "nrf_vpr_int_triggered_21_mask": 210, "nrf_vpr_int_triggered_22_mask": 210, "nrf_vpr_task_t": [210, 211], "nrf_vpr_task_trigger_0": 210, "nrf_vpr_task_trigger_1": 210, "nrf_vpr_task_trigger_2": 210, "nrf_vpr_task_trigger_3": 210, "nrf_vpr_task_trigger_4": 210, "nrf_vpr_task_trigger_5": 210, "nrf_vpr_task_trigger_6": 210, "nrf_vpr_task_trigger_7": 210, "nrf_vpr_task_trigger_8": 210, "nrf_vpr_task_trigger_9": 210, "nrf_vpr_task_trigger_10": 210, "nrf_vpr_task_trigger_11": 210, "nrf_vpr_task_trigger_12": 210, "nrf_vpr_task_trigger_13": 210, "nrf_vpr_task_trigger_14": 210, "nrf_vpr_task_trigger_15": 210, "nrf_vpr_task_trigger_16": 210, "nrf_vpr_task_trigger_17": 210, "nrf_vpr_task_trigger_18": 210, "nrf_vpr_task_trigger_19": 210, "nrf_vpr_task_trigger_20": 210, "nrf_vpr_task_trigger_21": 210, "nrf_vpr_task_trigger_22": 210, "nrf_vpr_dmcontrol_t": [210, 211], "nrf_vpr_dmcontrol_dmact": 210, "nrf_vpr_dmcontrol_ndmreset": 210, "nrf_vpr_dmcontrol_mask_t": 210, "nrf_vpr_dmcontrol_dmactive_mask": 210, "nrf_vpr_dmcontrol_ndmreset_mask": 210, "nrf_vpr_task_trigg": [210, 211], "nrf_vpr_type": [210, 211], "nrf_vpr_task_address_get": [210, 211], "nrf_vpr_trigger_task_get": [210, 211], "nrf_vpr_event_clear": [210, 211], "nrf_vpr_event_check": [210, 211], "nrf_vpr_event_address_get": [210, 211], "nrf_vpr_triggered_event_get": [210, 211], "nrf_vpr_int_en": [210, 211], "nrf_vpr_int_dis": [210, 211], "nrf_vpr_int_enable_check": [210, 211], "nrf_vpr_cpurun_set": [210, 211], "nrf_vpr_cpurun_get": [210, 211], "nrf_vpr_initpc_set": [210, 211], "pc": [210, 211], "nrf_vpr_initpc_get": [210, 211], "nrf_vpr_debugif_dmcontrol_set": [210, 211], "nrf_vpr_debugif_dmcontrol_mask_set": 210, "nrf_vpr_debugif_dmcontrol_get": [210, 211], "nrfy_vpr": 211, "nrfy_vpr_task_trigg": 211, "nrfy_vpr_task_address_get": 211, "nrfy_vpr_trigger_task_get": 211, "nrfy_vpr_event_clear": 211, "nrfy_vpr_event_check": 211, "nrfy_vpr_event_address_get": 211, "nrfy_vpr_triggered_event_get": 211, "nrfy_vpr_int_en": 211, "nrfy_vpr_int_dis": 211, "nrfy_vpr_int_enable_check": 211, "nrfy_vpr_cpurun_set": 211, "nrfy_vpr_cpurun_get": 211, "nrfy_vpr_initpc_set": 211, "nrfy_vpr_initpc_get": 211, "nrfy_vpr_debugif_dmcontrol_set": 211, "nrfy_vpr_debugif_dmcontrol_get": 211, "nrf_vpr": 212, "nrfx_vevif": 213, "nrfx_vevif_event_handler_t": 213, "nrfx_vevif_init": 213, "nrfx_vevif_uninit": 213, "nrfx_vevif_init_check": 213, "nrfx_vevif_int_en": 213, "nrfx_vevif_int_dis": 213, "nrf_vreqctrl_hal": 214, "nrf_vreqctrl_radio_high_voltage_set": 214, "nrf_vreqctrl_typ": 214, "nrf_vreqctrl_radio_high_voltage_check": 214, "nrfx_wdt": 215, "nrfx_wdt_has_stop": 215, "nrfx_wdt_irq_config": 215, "nrfx_wdt_instanc": 215, "nrfx_wdt_default_config": 215, "nrfx_wdt_inst_handler_get": 215, "nrfx_wdt_event_handler_t": 215, "nrf_wdt_event_t": [215, 216, 217], "rr": 215, "nrf_wdt_event_timeout": [215, 216], "nrf_wdt_rr_register_t": [215, 216, 217], "nrfx_wdt_channel_id": 215, "nrfx_wdt_t": 215, "nrfx_wdt_config_t": 215, "wdt_event_handl": 215, "nrfx_wdt_config_no_irq": 215, "nrfx_wdt_init_check": 215, "nrfx_wdt_channel_alloc": 215, "p_channel_id": 215, "nrfx_wdt_enabl": 215, "nrfx_wdt_channels_fre": 215, "feed": 215, "nrfx_wdt_feed": 215, "nrfx_wdt_channel_fe": 215, "channel_id": 215, "nrfx_wdt_task_address_get": 215, "nrf_wdt_task_t": [215, 216, 217], "nrfx_wdt_event_address_get": 215, "nrf_wdt_type": [215, 216, 217], "nrf_wdt_behaviour_mask_t": [215, 216, 217], "reload_valu": [215, 216, 217], "nrf_wdt_hal": 216, "nrf_wdt_inst_get": 216, "nrf_wdt_has_stop": [216, 217], "nrf_wdt_has_nmi": 216, "nrf_wdt_channel_numb": 216, "nrf_wdt_rr_valu": 216, "nrf_wdt_task_start": 216, "nrf_wdt_task_stop": 216, "nrf_wdt_event_stop": 216, "nrf_wdt_behaviour_run_sleep_mask": 216, "nrf_wdt_behaviour_run_halt_mask": 216, "nrf_wdt_behaviour_stop_enable_mask": 216, "nrf_wdt_rr0": 216, "nrf_wdt_rr1": 216, "nrf_wdt_rr2": 216, "nrf_wdt_rr3": 216, "nrf_wdt_rr4": 216, "nrf_wdt_rr5": 216, "nrf_wdt_rr6": 216, "nrf_wdt_rr7": 216, "nrf_wdt_rr_register_mask_t": [216, 217], "nrf_wdt_rr0_mask": 216, "nrf_wdt_rr1_mask": 216, "nrf_wdt_rr2_mask": 216, "nrf_wdt_rr3_mask": 216, "nrf_wdt_rr4_mask": 216, "nrf_wdt_rr5_mask": 216, "nrf_wdt_rr6_mask": 216, "nrf_wdt_rr7_mask": 216, "nrf_wdt_int_mask_t": [216, 217], "nrf_wdt_int_timeout_mask": 216, "nrf_wdt_int_stopped_mask": 216, "nrf_wdt_behaviour_set": [216, 217], "nrf_wdt_task_trigg": [216, 217], "nrf_wdt_event_clear": [216, 217], "nrf_wdt_event_check": [216, 217], "nrf_wdt_int_en": [216, 217], "nrf_wdt_int_enable_check": [216, 217], "nrf_wdt_int_dis": [216, 217], "nrf_wdt_nmi_int_en": 216, "nrf_wdt_nmi_int_enable_check": 216, "nrf_wdt_nmi_int_dis": 216, "nrf_wdt_subscribe_set": [216, 217], "nrf_wdt_subscribe_clear": [216, 217], "nrf_wdt_publish_set": [216, 217], "nrf_wdt_publish_clear": [216, 217], "nrf_wdt_task_address_get": [216, 217], "nrf_wdt_event_address_get": [216, 217], "rr_regist": [216, 217], "nrf_wdt_request_status_get": [216, 217], "nrf_wdt_reload_value_set": [216, 217], "nrf_wdt_reload_value_get": [216, 217], "nrf_wdt_reload_request_en": [216, 217], "nrf_wdt_reload_request_dis": [216, 217], "nrf_wdt_reload_request_enable_check": [216, 217], "nrf_wdt_reload_request_set": [216, 217], "nrfy_wdt": 217, "nrfy_wdt_has_stop": 217, "nrfy_wdt_periph_configur": 217, "nrfy_wdt_config_t": 217, "nrfy_wdt_int_init": 217, "nrfy_wdt_int_uninit": 217, "nrfy_wdt_events_process": 217, "nrfy_wdt_task_trigg": 217, "nrfy_wdt_task_address_get": 217, "nrfy_wdt_event_clear": 217, "nrfy_wdt_event_check": 217, "nrfy_wdt_event_address_get": 217, "nrfy_wdt_int_en": 217, "nrfy_wdt_int_enable_check": 217, "nrfy_wdt_int_dis": 217, "nrfy_wdt_subscribe_set": 217, "nrfy_wdt_subscribe_clear": 217, "nrfy_wdt_publish_set": 217, "nrfy_wdt_publish_clear": 217, "nrfy_wdt_behaviour_set": 217, "nrfy_wdt_started_check": 217, "nrfy_wdt_request_status_check": 217, "nrfy_wdt_request_status_get": 217, "nrfy_wdt_reload_value_set": 217, "nrfy_wdt_reload_value_get": 217, "nrfy_wdt_reload_request_en": 217, "nrfy_wdt_reload_request_dis": 217, "nrfy_wdt_reload_request_enable_check": 217, "nrfy_wdt_reload_request_set": 217, "nrf_wdt": 218, "matrix": 219, "nrf52805_xxaa": 219, "nrf52810_xxaa": 219, "nrf52811_xxaa": 219, "nrf52820_xxaa": 219, "nrf52832_xxaa": 219, "nrf52832_xxab": 219, "nrf52833_xxaa": 219, "nrf52840_xxaa": 219, "nrf54h20_xxaa": 219, "nrf_applic": 219, "nrf_radiocor": 219, "nrf_ppr": 219, "nrf_flpr": 219, "enga": 219, "nrf54l15_enga_xxaa": 219, "nrf9160_xxaa": 219, "necessarili": 219, "standalon": 220, "semiconductor": 220, "nrf5": 220, "sdk": 220, "intent": 220, "necess": 220, "packag": 220, "overview": [220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "rtose": 220, "bare": 220, "metal": 220, "light": 220, "subfold": 220, "Their": 220, "stand": 220, "root": 220, "folder": 220, "ordinari": 220, "_irq_handl": 220, "nrfx_irq": 220, "linker": 220, "parametr": 220, "impact": 220, "obsolet": 220, "websit": 220, "directori": 220, "themselv": [220, 234], "nrfx_atom": 232, "c11": 232, "stdatom": 232, "simplifi": 232, "m3": 232, "m4": 232, "ldrex": 232, "strex": 232, "nrfx_atomic_u32_t": 232, "nrfx_atomic_flag_t": 232, "nrfx_atomic_u32_fetch_stor": 232, "nrfx_atomic_u32_stor": 232, "nrfx_atomic_u32_fetch_or": 232, "operand": [232, 240], "nrfx_atomic_u32_or": 232, "nrfx_atomic_u32_fetch_and": 232, "nrfx_atomic_u32_and": 232, "nrfx_atomic_u32_fetch_xor": 232, "xor": [232, 240], "nrfx_atomic_u32_xor": 232, "nrfx_atomic_u32_fetch_add": 232, "arithmet": 232, "nrfx_atomic_u32_add": 232, "nrfx_atomic_u32_fetch_sub": 232, "nrfx_atomic_u32_sub": 232, "nrfx_atomic_u32_cmp_exch": 232, "p_expect": 232, "former": 232, "nrfx_atomic_u32_fetch_sub_h": 232, "nrfx_atomic_u32_sub_h": 232, "nrfx_atomic_flag_set_fetch": 232, "nrfx_atomic_flag_set": 232, "nrfx_atomic_flag_clear_fetch": 232, "nrfx_atomic_flag_clear": 232, "nrf_bitmask": 233, "bitmask_bytes_calcul": 233, "bits_count": 233, "bitmask_byte_get": 233, "abs_bit": 233, "bitmask_relbit_get": 233, "nrf_bitmask_bit_is_set": 233, "nrf_bitmask_bit_set": 233, "nrf_bitmask_bit_clear": 233, "nrf_bitmask_masks_or": 233, "p_mask1": 233, "p_mask2": 233, "p_out_mask": 233, "nrf_bitmask_masks_and": 233, "nrfx_common": 234, "nrfx_check": 234, "module_en": 234, "analyz": 234, "evalu": [234, 240], "nrfx_api_ver_at_least": 234, "micro": [234, 235], "nrfx_bit": 234, "nrfx_bit_mask": 234, "nrfx_bit_siz": 234, "nrfx_concat_2": 234, "p1": 234, "p2": 234, "expans": 234, "nrfx_concat_3": 234, "nrfx_concat_2_": 234, "p3": 234, "third": 234, "nrfx_concat_3_": 234, "nrfx_feature_pres": 234, "periph_nam": 234, "feature_nam": 234, "_peripher": 234, "255": 234, "spim0": [234, 246], "spim255": 234, "00": 234, "099": 234, "spim00": 234, "spim099": 234, "009": 234, "spim000": 234, "spim009": 234, "_feature_hardware_csn_pres": 234, "nrfx_foreach_en": 234, "sep": 234, "off_cod": 234, "instac": 234, "_enabl": 234, "parenthes": 234, "nrfx_foreach_pres": 234, "nrf_": 234, "wrap": 234, "parenthesi": 234, "nrfx_instance_concat": 234, "nrfx_instance_enum_list": 234, "comma": 234, "instance_nam": 234, "inst_idx": 234, "nrfx_spim0_inst_idx": 234, "nrfx_instance_irq_handl": 234, "periph_name_smal": 234, "irq_handl": [234, 246], "small": 234, "letter": 234, "nrfx_instance_irq_handlers_ext": 234, "ext_macro": 234, "01": 234, "timer01": 234, "nrfx_instance_irq_handlers_declar": 234, "intend": 234, "nrfx_instance_irq_handlers_list": 234, "nrfx_instance_pres": 234, "_inst": 234, "fact": 234, "parethesi": 234, "nrf_spim10": 234, "liter": 234, "spim10": 234, "larger": 234, "twice": 234, "oppos": 234, "truncat": 234, "denomin": 234, "nrfx_ceil_div": 234, "nrfx_is_power_of_two": 234, "nrfx_is_even": 234, "nrfx_easydma_length_valid": 234, "length1": 234, "length2": 234, "delay_u": 234, "meet": 234, "nrfx_peripheral_id_get": 234, "relationship": 234, "nrfx_irq_number_get": 234, "nrfx_irq_handler_t": [234, 246], "nrfx_drv_state_t": 234, "nrfx_drv_state_uniniti": 234, "nrfx_drv_state_initi": 234, "nrfx_drv_state_powered_on": 234, "nrfx_is_in_ram": 234, "p_object": [234, 247], "irqn_typ": 234, "nrfx_get_irq_numb": 234, "nrfx_bitpos_to_ev": 234, "_event_t": 234, "nrfx_event_to_bitpo": 234, "nrfx_common_config": 235, "nrfy_common": 236, "nrfy_event_to_int_bitpo": 236, "nrfy_int_bitpos_to_ev": 236, "bitpo": [236, 239], "nrfy_irq_priority_set": 236, "irq_numb": [236, 240], "nrfx_irq_priority_set": [236, 240], "nrfy_irq_en": 236, "nrfx_irq_en": [236, 240], "nrfy_irq_is_en": 236, "nrfx_irq_is_en": [236, 240], "nrfy_irq_dis": 236, "nrfx_irq_dis": [236, 240], "nrfy_irq_pending_set": 236, "nrfx_irq_pending_set": [236, 240], "nrfy_irq_pending_clear": 236, "nrfx_irq_pending_clear": [236, 240], "nrfy_irq_is_pend": 236, "nrfx_irq_is_pend": [236, 240], "nrfy_critical_section_ent": 236, "nrfx_critical_section_ent": [236, 240], "nrfy_critical_section_exit": 236, "nrfx_critical_section_exit": [236, 240], "nrfx_coredep": 237, "nrfx_delay_cpu_freq_mhz": 237, "nrfx_delay_dwt_pres": 237, "watchpoint": 237, "dwt": [237, 240], "nrfx_error_cod": 238, "nrfx_error_base_num": 238, "nrfx_error_drivers_base_num": 238, "forbidden": 238, "nrfx_error_nul": 238, "bad": 238, "nrfx_flag32_init": 239, "nrfx_atomic_t": [239, 240, 243, 244], "init_mask": 239, "availablil": 239, "0x0000000a": 239, "initil": 239, "nrfx_flag32_is_alloc": 239, "p_flag": 239, "0x00000002": 239, "nrfx_assert": 240, "nrfx_static_assert": 240, "nrfx_delay_dwt_bas": 240, "solut": 240, "nrfx_delay_u": 240, "us_tim": 240, "nrfx_atomic_fetch_stor": 240, "nrfx_atomic_fetch_or": 240, "nrfx_atomic_fetch_and": 240, "nrfx_atomic_fetch_xor": 240, "nrfx_atomic_fetch_add": 240, "nrfx_atomic_fetch_sub": 240, "old_valu": 240, "new_valu": 240, "nrfx_custom_error_cod": 240, "nrfx_error": 240, "nrfx_event_readback_en": 240, "defer": 240, "nrfy_cache_wb": 240, "nrfy_cache_inv": 240, "nrfy_cache_wbinv": 240, "nrfx_dppi_channels_us": 240, "nrfx_dppi_groups_us": 240, "nrfx_ppi_channels_us": 240, "nrfx_ppi_groups_us": 240, "nrfx_gpiote_channels_us": 240, "nrfx_egus_us": 240, "nrfx_timers_us": 240, "equip": 241, "wherea": 241, "import": 241, "nrfx_gppi_channel_group_t": 241, "nrfx_gppi_channel_group0": 241, "nrfx_gppi_channel_group1": 241, "nrfx_gppi_channel_group2": 241, "nrfx_gppi_channel_group3": 241, "nrfx_gppi_channel_group4": 241, "nrfx_gppi_channel_group5": 241, "nrfx_gppi_task_t": 241, "nrfx_gppi_task_chg0_en": 241, "nrfx_gppi_task_chg0_di": 241, "nrfx_gppi_task_chg1_en": 241, "nrfx_gppi_task_chg1_di": 241, "nrfx_gppi_task_chg2_en": 241, "nrfx_gppi_task_chg2_di": 241, "nrfx_gppi_task_chg3_en": 241, "nrfx_gppi_task_chg3_di": 241, "nrfx_gppi_task_chg4_en": 241, "nrfx_gppi_task_chg4_di": 241, "nrfx_gppi_task_chg5_en": 241, "nrfx_gppi_task_chg5_di": 241, "nrfx_gppi_channel_check": 241, "nrfx_gppi_channels_disable_al": 241, "nrfx_gppi_channels_en": 241, "nrfx_gppi_channels_dis": 241, "nrfx_gppi_event_endpoint_setup": 241, "nrfx_gppi_task_endpoint_setup": 241, "nrfx_gppi_channel_endpoints_setup": 241, "nrfx_gppi_channel_endpoints_clear": 241, "nrfx_gppi_event_endpoint_clear": 241, "nrfx_gppi_task_endpoint_clear": 241, "enpoint": 241, "nrfx_gppi_fork_endpoint_setup": 241, "nrfx_gppi_fork_endpoint_clear": 241, "nrfx_gppi_channels_group_set": 241, "nrfx_gppi_channels_include_in_group": 241, "nrfx_gppi_channels_remove_from_group": 241, "nrfx_gppi_group_clear": 241, "nrfx_gppi_group_en": 241, "nrfx_gppi_group_dis": 241, "nrfx_gppi_task_trigg": 241, "nrfx_gppi_task_address_get": 241, "nrfx_gppi_group_disable_task_get": 241, "nrfx_gppi_group_enable_task_get": 241, "nrfx_gppi_channel_alloc": 241, "nrfx_gppi_channel_fre": 241, "nrfx_gppi_group_alloc": 241, "nrfx_gppi_group_fre": 241, "nrfx_interconnect_apb": 243, "servic": [243, 244], "nrfx_interconnect_apb_domain_get": 243, "nrfx_interconnect_apb_t": [243, 244], "p_apb_prop": [243, 244], "properti": [243, 244], "nrfx_interconnect_apb_main_get": 243, "realiz": 243, "main_apb_connect": 243, "nrfx_interconnect_apb_get": 243, "nrfx_interconnect_apb_global_num_of_get": 243, "buse": 243, "nrf_apb_interconnect_by_idx_global_get": 243, "p_dppi": 243, "p_dppi_channel": 243, "dppi_pub_channels_mask": 243, "dppi_sub_channels_mask": 243, "p_ppib": 243, "nrfx_interconnect_ipct": 244, "nrfx_interconnect_ipct_domain_get": 244, "nrfx_interconnect_ipct_t": 244, "p_ipct_prop": 244, "nrfx_interconnect_ipct_get": 244, "nrfx_interconnect_ipct_global_num_of_get": 244, "nrfx_interconnect_ipct_global_by_idx_get": 244, "p_ipct": 244, "p_ipct_channel": 244, "ipct_pub_channels_mask": 244, "ipct_sub_channels_mask": 244, "nrfx_log_error": 245, "printf": 245, "string": 245, "insert": 245, "nrfx_log_warn": 245, "nrfx_log_info": 245, "nrfx_log_debug": 245, "nrfx_log_hexdump_error": 245, "p_memori": 245, "dump": 245, "nrfx_log_hexdump_warn": 245, "nrfx_log_hexdump_info": 245, "nrfx_log_hexdump_debug": 245, "nrfx_log_error_string_get": 245, "error_cod": 245, "textual": 245, "nrfx_pr": 246, "nrfx_prs_acquir": 246, "p_base_addr": 246, "among": 246, "spi0": 246, "spis0": 246, "twi0": 246, "twim0": 246, "twis0": 246, "nrfx_prs_releas": 246, "uniform": [247, 248], "nrfx_ram_ctrl_power_enable_set": 247, "nrfx_ram_ctrl_retention_enable_set": 247, "nrfx_ram_ctrl_section_power_mask_enable_set": 247, "block_idx": 247, "nrfx_ram_ctrl_section_retention_mask_enable_set": 247, "nrfx_reset_reason_has_ctrlap": 248, "nrfx_reset_reason_has_network": 248, "nrfx_reset_reason_has_lpcomp": 248, "nrfx_reset_reason_has_nfc": 248, "nrfx_reset_reason_has_vbu": 248, "nrfx_reset_reason_has_ctrlapsoft": 248, "nrfx_reset_reason_has_ctrlaphard": 248, "nrfx_reset_reason_has_ctrlappin": 248, "nrfx_reset_reason_has_grtc": 248, "nrfx_reset_reason_has_sectamp": 248, "nrfx_reset_reason_resetpin_mask": 248, "nrfx_reset_reason_dog0_mask": 248, "nrfx_reset_reason_dog_mask": 248, "nrfx_resetreas_sreq_mask": 248, "nrfx_reset_reason_lockup_mask": 248, "nrfx_reset_reason_off_mask": 248, "anadetect": 248, "nrfx_reset_reason_lpcomp_mask": 248, "nrfx_reset_reason_dif_mask": 248, "nrfx_reset_reason_lsreq_mask": 248, "nrfx_reset_reason_llockup_mask": 248, "nrfx_reset_reason_ldog_mask": 248, "nrfx_reset_reason_mforceoff_mask": 248, "nrfx_reset_reason_nfc_mask": 248, "nrfx_reset_reason_dog1_mask": 248, "nrfx_reset_reason_vbus_mask": 248, "nrfx_reset_reason_lctrlap_mask": 248, "nrfx_reset_reason_ctrlaphard_mask": 248, "nrfx_reset_reason_ctrlappin_mask": 248, "nrfx_reset_reason_grtc_mask": 248, "nrfx_reset_reason_sectamper_mask": 248, "nrfx_reset_reason_get": 248, "nrfx_reset_reason_clear": 248, "nrf_vdma": 249, "vdma": 249, "nrf_vdma_buffer_size_mask": 249, "nrf_vdma_reduced_job_s": 249, "nrf_vdma_job_el": 249, "nrf_vdma_reduced_job_init_el": 249, "nrfx_vdma_periph_job": 249, "engag": 249, "nrf_vdma_job_reduced_t": 249, "nrf_vdma_attributes_t": 249, "nrf_vdma_attribute_plain_data": 249, "nrf_vdma_attribute_byte_swap": 249, "nrf_vdma_attribute_job_list": 249, "chain": 249, "nrf_vdma_attribute_buffer_fil": 249, "inster": 249, "nrf_vdma_attribute_fixed_attr": 249, "nrf_vdma_attribute_crc": 249, "nrf_vdma_attribute_static_addr": 249, "entireti": 249, "nrf_vdma_attribute_plain_data_buf_writ": 249, "better": 249, "mani": 249, "bei": 249, "nrf_vdma_ext_attribute_t": 249, "nrf_vdma_ext_attribute_peripheral_mod": 249, "nrf_vdma_ext_attribute_event_en": 249, "nrf_vdma_job_fil": 249, "nrf_vdma_job_reduced_init": 249, "nrf_vdma_job_termin": 249, "nrf_vdma_job_reduced_fil": 249, "nrf_vdma_job_buffer_get": 249, "nrf_vdma_job_size_get": 249, "vectordma": 249, "nrf_vdma_job_link": 249, "p_job_link": 249}, "objects": {"": [[233, 0, 1, "c.BITMASK_BYTES_CALCULATE", "BITMASK_BYTES_CALCULATE"], [233, 0, 1, "c.BITMASK_BYTE_GET", "BITMASK_BYTE_GET"], [233, 0, 1, "c.BITMASK_RELBIT_GET", "BITMASK_RELBIT_GET"], [52, 0, 1, "c.GPIOTE_CONFIG_PORT_PIN_Msk", "GPIOTE_CONFIG_PORT_PIN_Msk"], [56, 0, 1, "c.GRTC_INTEN", "GRTC_INTEN"], [56, 0, 1, "c.GRTC_INTENCLR", "GRTC_INTENCLR"], [56, 0, 1, "c.GRTC_INTENSET", "GRTC_INTENSET"], [56, 0, 1, "c.GRTC_INTPEND", "GRTC_INTPEND"], [56, 0, 1, "c.GRTC_SYSCOUNTER", "GRTC_SYSCOUNTER"], [9, 1, 1, "c.nrf_auxpll_status_mask_t.MRF_AUXPLL_STATUS_FREQUENCY_ACTUAL_MASK", "MRF_AUXPLL_STATUS_FREQUENCY_ACTUAL_MASK"], [234, 0, 1, "c.NRFX_ABS", "NRFX_ABS"], [6, 0, 1, "c.NRFX_ADC_DEFAULT_CHANNEL", "NRFX_ADC_DEFAULT_CHANNEL"], [6, 0, 1, "c.NRFX_ADC_DEFAULT_CONFIG", "NRFX_ADC_DEFAULT_CONFIG"], [6, 1, 1, "c.nrfx_adc_evt_type_t.NRFX_ADC_EVT_DONE", "NRFX_ADC_EVT_DONE"], [6, 1, 1, "c.nrfx_adc_evt_type_t.NRFX_ADC_EVT_SAMPLE", "NRFX_ADC_EVT_SAMPLE"], [234, 0, 1, "c.NRFX_API_VER_AT_LEAST", "NRFX_API_VER_AT_LEAST"], [234, 0, 1, "c.NRFX_ARRAY_SIZE", "NRFX_ARRAY_SIZE"], [240, 0, 1, "c.NRFX_ASSERT", "NRFX_ASSERT"], [240, 0, 1, "c.NRFX_ATOMIC_CAS", "NRFX_ATOMIC_CAS"], [240, 0, 1, "c.NRFX_ATOMIC_FETCH_ADD", "NRFX_ATOMIC_FETCH_ADD"], [240, 0, 1, "c.NRFX_ATOMIC_FETCH_AND", "NRFX_ATOMIC_FETCH_AND"], [240, 0, 1, "c.NRFX_ATOMIC_FETCH_OR", "NRFX_ATOMIC_FETCH_OR"], [240, 0, 1, "c.NRFX_ATOMIC_FETCH_STORE", "NRFX_ATOMIC_FETCH_STORE"], [240, 0, 1, "c.NRFX_ATOMIC_FETCH_SUB", "NRFX_ATOMIC_FETCH_SUB"], [240, 0, 1, "c.NRFX_ATOMIC_FETCH_XOR", "NRFX_ATOMIC_FETCH_XOR"], [10, 0, 1, "c.NRFX_BELLBOARD_INSTANCE", "NRFX_BELLBOARD_INSTANCE"], [234, 0, 1, "c.NRFX_BIT", "NRFX_BIT"], [234, 0, 1, "c.NRFX_BIT_MASK", "NRFX_BIT_MASK"], [234, 0, 1, "c.NRFX_BIT_SIZE", "NRFX_BIT_SIZE"], [234, 0, 1, "c.NRFX_CEIL_DIV", "NRFX_CEIL_DIV"], [234, 0, 1, "c.NRFX_CHECK", "NRFX_CHECK"], [20, 1, 1, "c.nrfx_clock_evt_type_t.NRFX_CLOCK_EVT_CAL_DONE", "NRFX_CLOCK_EVT_CAL_DONE"], [20, 1, 1, "c.nrfx_clock_evt_type_t.NRFX_CLOCK_EVT_CTTO", "NRFX_CLOCK_EVT_CTTO"], [20, 1, 1, "c.nrfx_clock_evt_type_t.NRFX_CLOCK_EVT_HFCLK192M_STARTED", "NRFX_CLOCK_EVT_HFCLK192M_STARTED"], [20, 1, 1, "c.nrfx_clock_evt_type_t.NRFX_CLOCK_EVT_HFCLKAUDIO_STARTED", "NRFX_CLOCK_EVT_HFCLKAUDIO_STARTED"], [20, 1, 1, "c.nrfx_clock_evt_type_t.NRFX_CLOCK_EVT_HFCLK_STARTED", "NRFX_CLOCK_EVT_HFCLK_STARTED"], [20, 1, 1, "c.nrfx_clock_evt_type_t.NRFX_CLOCK_EVT_LFCLK_STARTED", "NRFX_CLOCK_EVT_LFCLK_STARTED"], [20, 1, 1, "c.nrfx_clock_evt_type_t.NRFX_CLOCK_EVT_PLL_STARTED", "NRFX_CLOCK_EVT_PLL_STARTED"], [21, 1, 1, "c.nrf_clock_int_mask_t.NRFX_CLOCK_INT_PLL_STARTED_MASK", "NRFX_CLOCK_INT_PLL_STARTED_MASK"], [240, 0, 1, "c.NRFX_CLZ", "NRFX_CLZ"], [23, 0, 1, "c.NRFX_COMP_CONFIG_TH", "NRFX_COMP_CONFIG_TH"], [23, 0, 1, "c.NRFX_COMP_DEFAULT_CONFIG", "NRFX_COMP_DEFAULT_CONFIG"], [23, 1, 1, "c.nrfx_comp_evt_en_mask_t.NRFX_COMP_EVT_EN_CROSS_MASK", "NRFX_COMP_EVT_EN_CROSS_MASK"], [23, 1, 1, "c.nrfx_comp_evt_en_mask_t.NRFX_COMP_EVT_EN_DOWN_MASK", "NRFX_COMP_EVT_EN_DOWN_MASK"], [23, 1, 1, "c.nrfx_comp_evt_en_mask_t.NRFX_COMP_EVT_EN_READY_MASK", "NRFX_COMP_EVT_EN_READY_MASK"], [23, 1, 1, "c.nrfx_comp_evt_en_mask_t.NRFX_COMP_EVT_EN_UP_MASK", "NRFX_COMP_EVT_EN_UP_MASK"], [23, 1, 1, "c.nrfx_comp_short_mask_t.NRFX_COMP_SHORT_STOP_AFTER_CROSS_EVT", "NRFX_COMP_SHORT_STOP_AFTER_CROSS_EVT"], [23, 1, 1, "c.nrfx_comp_short_mask_t.NRFX_COMP_SHORT_STOP_AFTER_DOWN_EVT", "NRFX_COMP_SHORT_STOP_AFTER_DOWN_EVT"], [23, 1, 1, "c.nrfx_comp_short_mask_t.NRFX_COMP_SHORT_STOP_AFTER_UP_EVT", "NRFX_COMP_SHORT_STOP_AFTER_UP_EVT"], [23, 0, 1, "c.NRFX_COMP_VOLTAGE_THRESHOLD_TO_INT", "NRFX_COMP_VOLTAGE_THRESHOLD_TO_INT"], [234, 0, 1, "c.NRFX_CONCAT_2", "NRFX_CONCAT_2"], [234, 0, 1, "c.NRFX_CONCAT_2_", "NRFX_CONCAT_2_"], [234, 0, 1, "c.NRFX_CONCAT_3", "NRFX_CONCAT_3"], [234, 0, 1, "c.NRFX_CONCAT_3_", "NRFX_CONCAT_3_"], [235, 0, 1, "c.NRFX_CONFIG_API_VER_MAJOR", "NRFX_CONFIG_API_VER_MAJOR"], [235, 0, 1, "c.NRFX_CONFIG_API_VER_MICRO", "NRFX_CONFIG_API_VER_MICRO"], [235, 0, 1, "c.NRFX_CONFIG_API_VER_MINOR", "NRFX_CONFIG_API_VER_MINOR"], [237, 0, 1, "c.NRFX_COREDEP_DELAY_US_LOOP_CYCLES", "NRFX_COREDEP_DELAY_US_LOOP_CYCLES"], [240, 0, 1, "c.NRFX_CRITICAL_SECTION_ENTER", "NRFX_CRITICAL_SECTION_ENTER"], [240, 0, 1, "c.NRFX_CRITICAL_SECTION_EXIT", "NRFX_CRITICAL_SECTION_EXIT"], [240, 0, 1, "c.NRFX_CTZ", "NRFX_CTZ"], [240, 0, 1, "c.NRFX_CUSTOM_ERROR_CODES", "NRFX_CUSTOM_ERROR_CODES"], [237, 0, 1, "c.NRFX_DELAY_CPU_FREQ_MHZ", "NRFX_DELAY_CPU_FREQ_MHZ"], [240, 0, 1, "c.NRFX_DELAY_DWT_BASED", "NRFX_DELAY_DWT_BASED"], [237, 0, 1, "c.NRFX_DELAY_DWT_PRESENT", "NRFX_DELAY_DWT_PRESENT"], [240, 0, 1, "c.NRFX_DELAY_US", "NRFX_DELAY_US"], [240, 0, 1, "c.NRFX_DPPI_CHANNELS_USED", "NRFX_DPPI_CHANNELS_USED"], [240, 0, 1, "c.NRFX_DPPI_GROUPS_USED", "NRFX_DPPI_GROUPS_USED"], [234, 1, 1, "c.nrfx_drv_state_t.NRFX_DRV_STATE_INITIALIZED", "NRFX_DRV_STATE_INITIALIZED"], [234, 1, 1, "c.nrfx_drv_state_t.NRFX_DRV_STATE_POWERED_ON", "NRFX_DRV_STATE_POWERED_ON"], [234, 1, 1, "c.nrfx_drv_state_t.NRFX_DRV_STATE_UNINITIALIZED", "NRFX_DRV_STATE_UNINITIALIZED"], [234, 0, 1, "c.NRFX_EASYDMA_LENGTH_VALIDATE", "NRFX_EASYDMA_LENGTH_VALIDATE"], [240, 0, 1, "c.NRFX_EGUS_USED", "NRFX_EGUS_USED"], [39, 0, 1, "c.NRFX_EGU_INSTANCE", "NRFX_EGU_INSTANCE"], [39, 0, 1, "c.NRFX_EGU_INST_HANDLER_GET", "NRFX_EGU_INST_HANDLER_GET"], [238, 1, 1, "c.nrfx_err_t.NRFX_ERROR_ALREADY", "NRFX_ERROR_ALREADY"], [238, 1, 1, "c.nrfx_err_t.NRFX_ERROR_ALREADY_INITIALIZED", "NRFX_ERROR_ALREADY_INITIALIZED"], [238, 0, 1, "c.NRFX_ERROR_BASE_NUM", "NRFX_ERROR_BASE_NUM"], [238, 1, 1, "c.nrfx_err_t.NRFX_ERROR_BUSY", "NRFX_ERROR_BUSY"], [238, 0, 1, "c.NRFX_ERROR_DRIVERS_BASE_NUM", "NRFX_ERROR_DRIVERS_BASE_NUM"], [238, 1, 1, "c.nrfx_err_t.NRFX_ERROR_DRV_TWI_ERR_ANACK", "NRFX_ERROR_DRV_TWI_ERR_ANACK"], [238, 1, 1, "c.nrfx_err_t.NRFX_ERROR_DRV_TWI_ERR_DNACK", "NRFX_ERROR_DRV_TWI_ERR_DNACK"], [238, 1, 1, "c.nrfx_err_t.NRFX_ERROR_DRV_TWI_ERR_OVERRUN", "NRFX_ERROR_DRV_TWI_ERR_OVERRUN"], [238, 1, 1, "c.nrfx_err_t.NRFX_ERROR_FORBIDDEN", "NRFX_ERROR_FORBIDDEN"], [238, 1, 1, "c.nrfx_err_t.NRFX_ERROR_INTERNAL", "NRFX_ERROR_INTERNAL"], [238, 1, 1, "c.nrfx_err_t.NRFX_ERROR_INVALID_ADDR", "NRFX_ERROR_INVALID_ADDR"], [238, 1, 1, "c.nrfx_err_t.NRFX_ERROR_INVALID_LENGTH", "NRFX_ERROR_INVALID_LENGTH"], [238, 1, 1, "c.nrfx_err_t.NRFX_ERROR_INVALID_PARAM", "NRFX_ERROR_INVALID_PARAM"], [238, 1, 1, "c.nrfx_err_t.NRFX_ERROR_INVALID_STATE", "NRFX_ERROR_INVALID_STATE"], [238, 1, 1, "c.nrfx_err_t.NRFX_ERROR_NOT_SUPPORTED", "NRFX_ERROR_NOT_SUPPORTED"], [238, 1, 1, "c.nrfx_err_t.NRFX_ERROR_NO_MEM", "NRFX_ERROR_NO_MEM"], [238, 1, 1, "c.nrfx_err_t.NRFX_ERROR_NULL", "NRFX_ERROR_NULL"], [238, 1, 1, "c.nrfx_err_t.NRFX_ERROR_TIMEOUT", "NRFX_ERROR_TIMEOUT"], [240, 0, 1, "c.NRFX_EVENT_READBACK_ENABLED", "NRFX_EVENT_READBACK_ENABLED"], [234, 0, 1, "c.NRFX_FEATURE_PRESENT", "NRFX_FEATURE_PRESENT"], [234, 0, 1, "c.NRFX_FOREACH_ENABLED", "NRFX_FOREACH_ENABLED"], [234, 0, 1, "c.NRFX_FOREACH_PRESENT", "NRFX_FOREACH_PRESENT"], [51, 0, 1, "c.NRFX_GPIOTE_APP_CHANNELS_MASK", "NRFX_GPIOTE_APP_CHANNELS_MASK"], [240, 0, 1, "c.NRFX_GPIOTE_CHANNELS_USED", "NRFX_GPIOTE_CHANNELS_USED"], [51, 0, 1, "c.NRFX_GPIOTE_DEFAULT_OUTPUT_CONFIG", "NRFX_GPIOTE_DEFAULT_OUTPUT_CONFIG"], [51, 0, 1, "c.NRFX_GPIOTE_DEFAULT_PULL_CONFIG", "NRFX_GPIOTE_DEFAULT_PULL_CONFIG"], [51, 0, 1, "c.NRFX_GPIOTE_INSTANCE", "NRFX_GPIOTE_INSTANCE"], [51, 0, 1, "c.NRFX_GPIOTE_INST_HANDLER_GET", "NRFX_GPIOTE_INST_HANDLER_GET"], [51, 1, 1, "c.nrfx_gpiote_trigger_t.NRFX_GPIOTE_TRIGGER_HIGH", "NRFX_GPIOTE_TRIGGER_HIGH"], [51, 1, 1, "c.nrfx_gpiote_trigger_t.NRFX_GPIOTE_TRIGGER_HITOLO", "NRFX_GPIOTE_TRIGGER_HITOLO"], [51, 1, 1, "c.nrfx_gpiote_trigger_t.NRFX_GPIOTE_TRIGGER_LOTOHI", "NRFX_GPIOTE_TRIGGER_LOTOHI"], [51, 1, 1, "c.nrfx_gpiote_trigger_t.NRFX_GPIOTE_TRIGGER_LOW", "NRFX_GPIOTE_TRIGGER_LOW"], [51, 1, 1, "c.nrfx_gpiote_trigger_t.NRFX_GPIOTE_TRIGGER_MAX", "NRFX_GPIOTE_TRIGGER_MAX"], [51, 1, 1, "c.nrfx_gpiote_trigger_t.NRFX_GPIOTE_TRIGGER_NONE", "NRFX_GPIOTE_TRIGGER_NONE"], [51, 1, 1, "c.nrfx_gpiote_trigger_t.NRFX_GPIOTE_TRIGGER_TOGGLE", "NRFX_GPIOTE_TRIGGER_TOGGLE"], [241, 1, 1, "c.nrfx_gppi_channel_group_t.NRFX_GPPI_CHANNEL_GROUP0", "NRFX_GPPI_CHANNEL_GROUP0"], [241, 1, 1, "c.nrfx_gppi_channel_group_t.NRFX_GPPI_CHANNEL_GROUP1", "NRFX_GPPI_CHANNEL_GROUP1"], [241, 1, 1, "c.nrfx_gppi_channel_group_t.NRFX_GPPI_CHANNEL_GROUP2", "NRFX_GPPI_CHANNEL_GROUP2"], [241, 1, 1, "c.nrfx_gppi_channel_group_t.NRFX_GPPI_CHANNEL_GROUP3", "NRFX_GPPI_CHANNEL_GROUP3"], [241, 1, 1, "c.nrfx_gppi_channel_group_t.NRFX_GPPI_CHANNEL_GROUP4", "NRFX_GPPI_CHANNEL_GROUP4"], [241, 1, 1, "c.nrfx_gppi_channel_group_t.NRFX_GPPI_CHANNEL_GROUP5", "NRFX_GPPI_CHANNEL_GROUP5"], [241, 1, 1, "c.nrfx_gppi_task_t.NRFX_GPPI_TASK_CHG0_DIS", "NRFX_GPPI_TASK_CHG0_DIS"], [241, 1, 1, "c.nrfx_gppi_task_t.NRFX_GPPI_TASK_CHG0_EN", "NRFX_GPPI_TASK_CHG0_EN"], [241, 1, 1, "c.nrfx_gppi_task_t.NRFX_GPPI_TASK_CHG1_DIS", "NRFX_GPPI_TASK_CHG1_DIS"], [241, 1, 1, "c.nrfx_gppi_task_t.NRFX_GPPI_TASK_CHG1_EN", "NRFX_GPPI_TASK_CHG1_EN"], [241, 1, 1, "c.nrfx_gppi_task_t.NRFX_GPPI_TASK_CHG2_DIS", "NRFX_GPPI_TASK_CHG2_DIS"], [241, 1, 1, "c.nrfx_gppi_task_t.NRFX_GPPI_TASK_CHG2_EN", "NRFX_GPPI_TASK_CHG2_EN"], [241, 1, 1, "c.nrfx_gppi_task_t.NRFX_GPPI_TASK_CHG3_DIS", "NRFX_GPPI_TASK_CHG3_DIS"], [241, 1, 1, "c.nrfx_gppi_task_t.NRFX_GPPI_TASK_CHG3_EN", "NRFX_GPPI_TASK_CHG3_EN"], [241, 1, 1, "c.nrfx_gppi_task_t.NRFX_GPPI_TASK_CHG4_DIS", "NRFX_GPPI_TASK_CHG4_DIS"], [241, 1, 1, "c.nrfx_gppi_task_t.NRFX_GPPI_TASK_CHG4_EN", "NRFX_GPPI_TASK_CHG4_EN"], [241, 1, 1, "c.nrfx_gppi_task_t.NRFX_GPPI_TASK_CHG5_DIS", "NRFX_GPPI_TASK_CHG5_DIS"], [241, 1, 1, "c.nrfx_gppi_task_t.NRFX_GPPI_TASK_CHG5_EN", "NRFX_GPPI_TASK_CHG5_EN"], [55, 1, 1, "c.nrfx_grtc_action_t.NRFX_GRTC_ACTION_CLEAR", "NRFX_GRTC_ACTION_CLEAR"], [55, 1, 1, "c.nrfx_grtc_action_t.NRFX_GRTC_ACTION_START", "NRFX_GRTC_ACTION_START"], [55, 1, 1, "c.nrfx_grtc_action_t.NRFX_GRTC_ACTION_STOP", "NRFX_GRTC_ACTION_STOP"], [55, 1, 1, "c.nrfx_grtc_cc_relative_reference_t.NRFX_GRTC_CC_RELATIVE_COMPARE", "NRFX_GRTC_CC_RELATIVE_COMPARE"], [55, 1, 1, "c.nrfx_grtc_cc_relative_reference_t.NRFX_GRTC_CC_RELATIVE_SYSCOUNTER", "NRFX_GRTC_CC_RELATIVE_SYSCOUNTER"], [55, 0, 1, "c.NRFX_GRTC_SLEEP_DEFAULT_CONFIG", "NRFX_GRTC_SLEEP_DEFAULT_CONFIG"], [60, 0, 1, "c.NRFX_I2S_DEFAULT_CONFIG", "NRFX_I2S_DEFAULT_CONFIG"], [60, 0, 1, "c.NRFX_I2S_INSTANCE", "NRFX_I2S_INSTANCE"], [60, 0, 1, "c.NRFX_I2S_STATUS_NEXT_BUFFERS_NEEDED", "NRFX_I2S_STATUS_NEXT_BUFFERS_NEEDED"], [60, 0, 1, "c.NRFX_I2S_STATUS_TRANSFER_STOPPED", "NRFX_I2S_STATUS_TRANSFER_STOPPED"], [234, 0, 1, "c.NRFX_INSTANCE_CONCAT", "NRFX_INSTANCE_CONCAT"], [234, 0, 1, "c.NRFX_INSTANCE_ENUM_LIST", "NRFX_INSTANCE_ENUM_LIST"], [234, 0, 1, "c.NRFX_INSTANCE_IRQ_HANDLERS", "NRFX_INSTANCE_IRQ_HANDLERS"], [234, 0, 1, "c.NRFX_INSTANCE_IRQ_HANDLERS_DECLARE", "NRFX_INSTANCE_IRQ_HANDLERS_DECLARE"], [234, 0, 1, "c.NRFX_INSTANCE_IRQ_HANDLERS_EXT", "NRFX_INSTANCE_IRQ_HANDLERS_EXT"], [234, 0, 1, "c.NRFX_INSTANCE_IRQ_HANDLERS_LIST", "NRFX_INSTANCE_IRQ_HANDLERS_LIST"], [234, 0, 1, "c.NRFX_INSTANCE_PRESENT", "NRFX_INSTANCE_PRESENT"], [234, 0, 1, "c.NRFX_IN_RANGE", "NRFX_IN_RANGE"], [240, 0, 1, "c.NRFX_IRQ_DISABLE", "NRFX_IRQ_DISABLE"], [240, 0, 1, "c.NRFX_IRQ_ENABLE", "NRFX_IRQ_ENABLE"], [240, 0, 1, "c.NRFX_IRQ_IS_ENABLED", "NRFX_IRQ_IS_ENABLED"], [240, 0, 1, "c.NRFX_IRQ_IS_PENDING", "NRFX_IRQ_IS_PENDING"], [234, 0, 1, "c.NRFX_IRQ_NUMBER_GET", "NRFX_IRQ_NUMBER_GET"], [240, 0, 1, "c.NRFX_IRQ_PENDING_CLEAR", "NRFX_IRQ_PENDING_CLEAR"], [240, 0, 1, "c.NRFX_IRQ_PENDING_SET", "NRFX_IRQ_PENDING_SET"], [240, 0, 1, "c.NRFX_IRQ_PRIORITY_SET", "NRFX_IRQ_PRIORITY_SET"], [234, 0, 1, "c.NRFX_IS_EVEN", "NRFX_IS_EVEN"], [234, 0, 1, "c.NRFX_IS_POWER_OF_TWO", "NRFX_IS_POWER_OF_TWO"], [234, 0, 1, "c.NRFX_KHZ_TO_HZ", "NRFX_KHZ_TO_HZ"], [245, 0, 1, "c.NRFX_LOG_DEBUG", "NRFX_LOG_DEBUG"], [245, 0, 1, "c.NRFX_LOG_ERROR", "NRFX_LOG_ERROR"], [245, 0, 1, "c.NRFX_LOG_ERROR_STRING_GET", "NRFX_LOG_ERROR_STRING_GET"], [245, 0, 1, "c.NRFX_LOG_HEXDUMP_DEBUG", "NRFX_LOG_HEXDUMP_DEBUG"], [245, 0, 1, "c.NRFX_LOG_HEXDUMP_ERROR", "NRFX_LOG_HEXDUMP_ERROR"], [245, 0, 1, "c.NRFX_LOG_HEXDUMP_INFO", "NRFX_LOG_HEXDUMP_INFO"], [245, 0, 1, "c.NRFX_LOG_HEXDUMP_WARNING", "NRFX_LOG_HEXDUMP_WARNING"], [245, 0, 1, "c.NRFX_LOG_INFO", "NRFX_LOG_INFO"], [245, 0, 1, "c.NRFX_LOG_WARNING", "NRFX_LOG_WARNING"], [73, 0, 1, "c.NRFX_LPCOMP_DEFAULT_CONFIG", "NRFX_LPCOMP_DEFAULT_CONFIG"], [234, 0, 1, "c.NRFX_MAX", "NRFX_MAX"], [234, 0, 1, "c.NRFX_MHZ_TO_HZ", "NRFX_MHZ_TO_HZ"], [234, 0, 1, "c.NRFX_MIN", "NRFX_MIN"], [92, 1, 1, "c.nrfx_nfct_active_state_t.NRFX_NFCT_ACTIVE_STATE_DEFAULT", "NRFX_NFCT_ACTIVE_STATE_DEFAULT"], [92, 1, 1, "c.nrfx_nfct_active_state_t.NRFX_NFCT_ACTIVE_STATE_IDLE", "NRFX_NFCT_ACTIVE_STATE_IDLE"], [92, 1, 1, "c.nrfx_nfct_active_state_t.NRFX_NFCT_ACTIVE_STATE_SLEEP", "NRFX_NFCT_ACTIVE_STATE_SLEEP"], [92, 1, 1, "c.nrfx_nfct_error_t.NRFX_NFCT_ERROR_FRAMEDELAYTIMEOUT", "NRFX_NFCT_ERROR_FRAMEDELAYTIMEOUT"], [92, 1, 1, "c.nrfx_nfct_error_t.NRFX_NFCT_ERROR_NUM", "NRFX_NFCT_ERROR_NUM"], [92, 1, 1, "c.nrfx_nfct_evt_id_t.NRFX_NFCT_EVT_ERROR", "NRFX_NFCT_EVT_ERROR"], [92, 1, 1, "c.nrfx_nfct_evt_id_t.NRFX_NFCT_EVT_FIELD_DETECTED", "NRFX_NFCT_EVT_FIELD_DETECTED"], [92, 1, 1, "c.nrfx_nfct_evt_id_t.NRFX_NFCT_EVT_FIELD_LOST", "NRFX_NFCT_EVT_FIELD_LOST"], [92, 1, 1, "c.nrfx_nfct_evt_id_t.NRFX_NFCT_EVT_RX_FRAMEEND", "NRFX_NFCT_EVT_RX_FRAMEEND"], [92, 1, 1, "c.nrfx_nfct_evt_id_t.NRFX_NFCT_EVT_RX_FRAMESTART", "NRFX_NFCT_EVT_RX_FRAMESTART"], [92, 1, 1, "c.nrfx_nfct_evt_id_t.NRFX_NFCT_EVT_SELECTED", "NRFX_NFCT_EVT_SELECTED"], [92, 1, 1, "c.nrfx_nfct_evt_id_t.NRFX_NFCT_EVT_TX_FRAMEEND", "NRFX_NFCT_EVT_TX_FRAMEEND"], [92, 1, 1, "c.nrfx_nfct_evt_id_t.NRFX_NFCT_EVT_TX_FRAMESTART", "NRFX_NFCT_EVT_TX_FRAMESTART"], [92, 0, 1, "c.NRFX_NFCT_NFCID1_DEFAULT_LEN", "NRFX_NFCT_NFCID1_DEFAULT_LEN"], [92, 0, 1, "c.NRFX_NFCT_NFCID1_DOUBLE_SIZE", "NRFX_NFCT_NFCID1_DOUBLE_SIZE"], [92, 0, 1, "c.NRFX_NFCT_NFCID1_SINGLE_SIZE", "NRFX_NFCT_NFCID1_SINGLE_SIZE"], [92, 0, 1, "c.NRFX_NFCT_NFCID1_TRIPLE_SIZE", "NRFX_NFCT_NFCID1_TRIPLE_SIZE"], [92, 1, 1, "c.nrfx_nfct_param_id_t.NRFX_NFCT_PARAM_ID_FDT", "NRFX_NFCT_PARAM_ID_FDT"], [92, 1, 1, "c.nrfx_nfct_param_id_t.NRFX_NFCT_PARAM_ID_FDT_MIN", "NRFX_NFCT_PARAM_ID_FDT_MIN"], [92, 1, 1, "c.nrfx_nfct_param_id_t.NRFX_NFCT_PARAM_ID_NFCID1", "NRFX_NFCT_PARAM_ID_NFCID1"], [92, 1, 1, "c.nrfx_nfct_param_id_t.NRFX_NFCT_PARAM_ID_SEL_RES", "NRFX_NFCT_PARAM_ID_SEL_RES"], [92, 1, 1, "c.nrfx_nfct_state_t.NRFX_NFCT_STATE_ACTIVATED", "NRFX_NFCT_STATE_ACTIVATED"], [92, 1, 1, "c.nrfx_nfct_state_t.NRFX_NFCT_STATE_DISABLED", "NRFX_NFCT_STATE_DISABLED"], [92, 1, 1, "c.nrfx_nfct_state_t.NRFX_NFCT_STATE_SENSING", "NRFX_NFCT_STATE_SENSING"], [234, 0, 1, "c.NRFX_OFFSETOF", "NRFX_OFFSETOF"], [99, 0, 1, "c.NRFX_PDM_DEFAULT_CONFIG", "NRFX_PDM_DEFAULT_CONFIG"], [99, 1, 1, "c.nrfx_pdm_error_t.NRFX_PDM_ERROR_OVERFLOW", "NRFX_PDM_ERROR_OVERFLOW"], [99, 0, 1, "c.NRFX_PDM_MAX_BUFFER_SIZE", "NRFX_PDM_MAX_BUFFER_SIZE"], [99, 1, 1, "c.nrfx_pdm_error_t.NRFX_PDM_NO_ERROR", "NRFX_PDM_NO_ERROR"], [234, 0, 1, "c.NRFX_PERIPHERAL_ID_GET", "NRFX_PERIPHERAL_ID_GET"], [104, 0, 1, "c.NRFX_POWER_GPREGRET_COUNT", "NRFX_POWER_GPREGRET_COUNT"], [103, 1, 1, "c.nrfx_power_mode_t.NRFX_POWER_MODE_CONSTLAT", "NRFX_POWER_MODE_CONSTLAT"], [103, 1, 1, "c.nrfx_power_mode_t.NRFX_POWER_MODE_LOWPWR", "NRFX_POWER_MODE_LOWPWR"], [103, 1, 1, "c.nrfx_power_sleep_evt_t.NRFX_POWER_SLEEP_EVT_ENTER", "NRFX_POWER_SLEEP_EVT_ENTER"], [103, 1, 1, "c.nrfx_power_sleep_evt_t.NRFX_POWER_SLEEP_EVT_EXIT", "NRFX_POWER_SLEEP_EVT_EXIT"], [103, 0, 1, "c.NRFX_POWER_SUPPORTS_DCDCEN_VDDH", "NRFX_POWER_SUPPORTS_DCDCEN_VDDH"], [103, 0, 1, "c.NRFX_POWER_SUPPORTS_POFCON", "NRFX_POWER_SUPPORTS_POFCON"], [103, 0, 1, "c.NRFX_POWER_SUPPORTS_POFCON_VDDH", "NRFX_POWER_SUPPORTS_POFCON_VDDH"], [103, 1, 1, "c.nrfx_power_usb_evt_t.NRFX_POWER_USB_EVT_DETECTED", "NRFX_POWER_USB_EVT_DETECTED"], [103, 1, 1, "c.nrfx_power_usb_evt_t.NRFX_POWER_USB_EVT_READY", "NRFX_POWER_USB_EVT_READY"], [103, 1, 1, "c.nrfx_power_usb_evt_t.NRFX_POWER_USB_EVT_REMOVED", "NRFX_POWER_USB_EVT_REMOVED"], [103, 1, 1, "c.nrfx_power_usb_state_t.NRFX_POWER_USB_STATE_CONNECTED", "NRFX_POWER_USB_STATE_CONNECTED"], [103, 1, 1, "c.nrfx_power_usb_state_t.NRFX_POWER_USB_STATE_DISCONNECTED", "NRFX_POWER_USB_STATE_DISCONNECTED"], [103, 1, 1, "c.nrfx_power_usb_state_t.NRFX_POWER_USB_STATE_READY", "NRFX_POWER_USB_STATE_READY"], [106, 0, 1, "c.NRFX_PPI_ALL_APP_CHANNELS_MASK", "NRFX_PPI_ALL_APP_CHANNELS_MASK"], [106, 0, 1, "c.NRFX_PPI_ALL_APP_GROUPS_MASK", "NRFX_PPI_ALL_APP_GROUPS_MASK"], [240, 0, 1, "c.NRFX_PPI_CHANNELS_USED", "NRFX_PPI_CHANNELS_USED"], [240, 0, 1, "c.NRFX_PPI_GROUPS_USED", "NRFX_PPI_GROUPS_USED"], [106, 0, 1, "c.NRFX_PPI_PROG_APP_CHANNELS_MASK", "NRFX_PPI_PROG_APP_CHANNELS_MASK"], [111, 0, 1, "c.NRFX_PWM_DEFAULT_CONFIG", "NRFX_PWM_DEFAULT_CONFIG"], [111, 1, 1, "c.nrfx_pwm_evt_type_t.NRFX_PWM_EVT_END_SEQ0", "NRFX_PWM_EVT_END_SEQ0"], [111, 1, 1, "c.nrfx_pwm_evt_type_t.NRFX_PWM_EVT_END_SEQ1", "NRFX_PWM_EVT_END_SEQ1"], [111, 1, 1, "c.nrfx_pwm_evt_type_t.NRFX_PWM_EVT_FINISHED", "NRFX_PWM_EVT_FINISHED"], [111, 1, 1, "c.nrfx_pwm_evt_type_t.NRFX_PWM_EVT_STOPPED", "NRFX_PWM_EVT_STOPPED"], [111, 1, 1, "c.nrfx_pwm_flag_t.NRFX_PWM_FLAG_LOOP", "NRFX_PWM_FLAG_LOOP"], [111, 1, 1, "c.nrfx_pwm_flag_t.NRFX_PWM_FLAG_NO_EVT_FINISHED", "NRFX_PWM_FLAG_NO_EVT_FINISHED"], [111, 1, 1, "c.nrfx_pwm_flag_t.NRFX_PWM_FLAG_SIGNAL_END_SEQ0", "NRFX_PWM_FLAG_SIGNAL_END_SEQ0"], [111, 1, 1, "c.nrfx_pwm_flag_t.NRFX_PWM_FLAG_SIGNAL_END_SEQ1", "NRFX_PWM_FLAG_SIGNAL_END_SEQ1"], [111, 1, 1, "c.nrfx_pwm_flag_t.NRFX_PWM_FLAG_START_VIA_TASK", "NRFX_PWM_FLAG_START_VIA_TASK"], [111, 1, 1, "c.nrfx_pwm_flag_t.NRFX_PWM_FLAG_STOP", "NRFX_PWM_FLAG_STOP"], [111, 0, 1, "c.NRFX_PWM_INSTANCE", "NRFX_PWM_INSTANCE"], [111, 0, 1, "c.NRFX_PWM_INST_HANDLER_GET", "NRFX_PWM_INST_HANDLER_GET"], [115, 0, 1, "c.NRFX_QDEC_DEFAULT_CONFIG", "NRFX_QDEC_DEFAULT_CONFIG"], [115, 0, 1, "c.NRFX_QDEC_INSTANCE", "NRFX_QDEC_INSTANCE"], [119, 0, 1, "c.NRFX_QSPI_DEFAULT_CINSTR", "NRFX_QSPI_DEFAULT_CINSTR"], [119, 0, 1, "c.NRFX_QSPI_DEFAULT_CONFIG", "NRFX_QSPI_DEFAULT_CONFIG"], [119, 1, 1, "c.nrfx_qspi_evt_t.NRFX_QSPI_EVENT_DONE", "NRFX_QSPI_EVENT_DONE"], [119, 1, 1, "c.nrfx_qspi_evt_ext_type_t.NRFX_QSPI_EVENT_ERASE_DONE", "NRFX_QSPI_EVENT_ERASE_DONE"], [119, 1, 1, "c.nrfx_qspi_evt_ext_type_t.NRFX_QSPI_EVENT_NONE", "NRFX_QSPI_EVENT_NONE"], [119, 1, 1, "c.nrfx_qspi_evt_ext_type_t.NRFX_QSPI_EVENT_READ_DONE", "NRFX_QSPI_EVENT_READ_DONE"], [119, 1, 1, "c.nrfx_qspi_evt_ext_type_t.NRFX_QSPI_EVENT_WRITE_DONE", "NRFX_QSPI_EVENT_WRITE_DONE"], [248, 1, 1, "c.nrfx_reset_reason_mask_t.NRFX_RESETREAS_SREQ_MASK", "NRFX_RESETREAS_SREQ_MASK"], [248, 1, 1, "c.nrfx_reset_reason_mask_t.NRFX_RESET_REASON_CTRLAPHARD_MASK", "NRFX_RESET_REASON_CTRLAPHARD_MASK"], [248, 1, 1, "c.nrfx_reset_reason_mask_t.NRFX_RESET_REASON_CTRLAPPIN_MASK", "NRFX_RESET_REASON_CTRLAPPIN_MASK"], [248, 1, 1, "c.nrfx_reset_reason_mask_t.NRFX_RESET_REASON_CTRLAP_MASK", "NRFX_RESET_REASON_CTRLAP_MASK"], [248, 1, 1, "c.nrfx_reset_reason_mask_t.NRFX_RESET_REASON_DIF_MASK", "NRFX_RESET_REASON_DIF_MASK"], [248, 1, 1, "c.nrfx_reset_reason_mask_t.NRFX_RESET_REASON_DOG0_MASK", "NRFX_RESET_REASON_DOG0_MASK"], [248, 1, 1, "c.nrfx_reset_reason_mask_t.NRFX_RESET_REASON_DOG1_MASK", "NRFX_RESET_REASON_DOG1_MASK"], [248, 1, 1, "c.nrfx_reset_reason_mask_t.NRFX_RESET_REASON_DOG_MASK", "NRFX_RESET_REASON_DOG_MASK"], [248, 1, 1, "c.nrfx_reset_reason_mask_t.NRFX_RESET_REASON_GRTC_MASK", "NRFX_RESET_REASON_GRTC_MASK"], [248, 0, 1, "c.NRFX_RESET_REASON_HAS_CTRLAP", "NRFX_RESET_REASON_HAS_CTRLAP"], [248, 0, 1, "c.NRFX_RESET_REASON_HAS_CTRLAPHARD", "NRFX_RESET_REASON_HAS_CTRLAPHARD"], [248, 0, 1, "c.NRFX_RESET_REASON_HAS_CTRLAPPIN", "NRFX_RESET_REASON_HAS_CTRLAPPIN"], [248, 0, 1, "c.NRFX_RESET_REASON_HAS_CTRLAPSOFT", "NRFX_RESET_REASON_HAS_CTRLAPSOFT"], [248, 0, 1, "c.NRFX_RESET_REASON_HAS_GRTC", "NRFX_RESET_REASON_HAS_GRTC"], [248, 0, 1, "c.NRFX_RESET_REASON_HAS_LPCOMP", "NRFX_RESET_REASON_HAS_LPCOMP"], [248, 0, 1, "c.NRFX_RESET_REASON_HAS_NETWORK", "NRFX_RESET_REASON_HAS_NETWORK"], [248, 0, 1, "c.NRFX_RESET_REASON_HAS_NFC", "NRFX_RESET_REASON_HAS_NFC"], [248, 0, 1, "c.NRFX_RESET_REASON_HAS_SECTAMPER", "NRFX_RESET_REASON_HAS_SECTAMPER"], [248, 0, 1, "c.NRFX_RESET_REASON_HAS_VBUS", "NRFX_RESET_REASON_HAS_VBUS"], [248, 1, 1, "c.nrfx_reset_reason_mask_t.NRFX_RESET_REASON_LCTRLAP_MASK", "NRFX_RESET_REASON_LCTRLAP_MASK"], [248, 1, 1, "c.nrfx_reset_reason_mask_t.NRFX_RESET_REASON_LDOG_MASK", "NRFX_RESET_REASON_LDOG_MASK"], [248, 1, 1, "c.nrfx_reset_reason_mask_t.NRFX_RESET_REASON_LLOCKUP_MASK", "NRFX_RESET_REASON_LLOCKUP_MASK"], [248, 1, 1, "c.nrfx_reset_reason_mask_t.NRFX_RESET_REASON_LOCKUP_MASK", "NRFX_RESET_REASON_LOCKUP_MASK"], [248, 1, 1, "c.nrfx_reset_reason_mask_t.NRFX_RESET_REASON_LPCOMP_MASK", "NRFX_RESET_REASON_LPCOMP_MASK"], [248, 1, 1, "c.nrfx_reset_reason_mask_t.NRFX_RESET_REASON_LSREQ_MASK", "NRFX_RESET_REASON_LSREQ_MASK"], [248, 1, 1, "c.nrfx_reset_reason_mask_t.NRFX_RESET_REASON_MFORCEOFF_MASK", "NRFX_RESET_REASON_MFORCEOFF_MASK"], [248, 1, 1, "c.nrfx_reset_reason_mask_t.NRFX_RESET_REASON_NFC_MASK", "NRFX_RESET_REASON_NFC_MASK"], [248, 1, 1, "c.nrfx_reset_reason_mask_t.NRFX_RESET_REASON_OFF_MASK", "NRFX_RESET_REASON_OFF_MASK"], [248, 1, 1, "c.nrfx_reset_reason_mask_t.NRFX_RESET_REASON_RESETPIN_MASK", "NRFX_RESET_REASON_RESETPIN_MASK"], [248, 1, 1, "c.nrfx_reset_reason_mask_t.NRFX_RESET_REASON_SECTAMPER_MASK", "NRFX_RESET_REASON_SECTAMPER_MASK"], [248, 1, 1, "c.nrfx_reset_reason_mask_t.NRFX_RESET_REASON_SREQ_MASK", "NRFX_RESET_REASON_SREQ_MASK"], [248, 1, 1, "c.nrfx_reset_reason_mask_t.NRFX_RESET_REASON_VBUS_MASK", "NRFX_RESET_REASON_VBUS_MASK"], [130, 0, 1, "c.NRFX_RNG_DEFAULT_CONFIG", "NRFX_RNG_DEFAULT_CONFIG"], [234, 0, 1, "c.NRFX_ROUNDED_DIV", "NRFX_ROUNDED_DIV"], [133, 0, 1, "c.NRFX_RRAMC_DEFAULT_CONFIG", "NRFX_RRAMC_DEFAULT_CONFIG"], [137, 0, 1, "c.NRFX_RTC_DEFAULT_CONFIG", "NRFX_RTC_DEFAULT_CONFIG"], [137, 0, 1, "c.NRFX_RTC_INSTANCE", "NRFX_RTC_INSTANCE"], [137, 0, 1, "c.NRFX_RTC_INST_HANDLER_GET", "NRFX_RTC_INST_HANDLER_GET"], [137, 1, 1, "c.nrfx_rtc_int_type_t.NRFX_RTC_INT_COMPARE0", "NRFX_RTC_INT_COMPARE0"], [137, 1, 1, "c.nrfx_rtc_int_type_t.NRFX_RTC_INT_COMPARE1", "NRFX_RTC_INT_COMPARE1"], [137, 1, 1, "c.nrfx_rtc_int_type_t.NRFX_RTC_INT_COMPARE2", "NRFX_RTC_INT_COMPARE2"], [137, 1, 1, "c.nrfx_rtc_int_type_t.NRFX_RTC_INT_COMPARE3", "NRFX_RTC_INT_COMPARE3"], [137, 1, 1, "c.nrfx_rtc_int_type_t.NRFX_RTC_INT_OVERFLOW", "NRFX_RTC_INT_OVERFLOW"], [137, 1, 1, "c.nrfx_rtc_int_type_t.NRFX_RTC_INT_TICK", "NRFX_RTC_INT_TICK"], [137, 0, 1, "c.NRFX_RTC_US_TO_TICKS", "NRFX_RTC_US_TO_TICKS"], [141, 0, 1, "c.NRFX_SAADC_DEFAULT_ACQTIME", "NRFX_SAADC_DEFAULT_ACQTIME"], [141, 0, 1, "c.NRFX_SAADC_DEFAULT_ADV_CONFIG", "NRFX_SAADC_DEFAULT_ADV_CONFIG"], [141, 0, 1, "c.NRFX_SAADC_DEFAULT_CHANNEL_DIFFERENTIAL", "NRFX_SAADC_DEFAULT_CHANNEL_DIFFERENTIAL"], [141, 0, 1, "c.NRFX_SAADC_DEFAULT_CHANNEL_SE", "NRFX_SAADC_DEFAULT_CHANNEL_SE"], [141, 0, 1, "c.NRFX_SAADC_DEFAULT_CONV_TIME", "NRFX_SAADC_DEFAULT_CONV_TIME"], [141, 1, 1, "c.nrfx_saadc_evt_type_t.NRFX_SAADC_EVT_BUF_REQ", "NRFX_SAADC_EVT_BUF_REQ"], [141, 1, 1, "c.nrfx_saadc_evt_type_t.NRFX_SAADC_EVT_CALIBRATEDONE", "NRFX_SAADC_EVT_CALIBRATEDONE"], [141, 1, 1, "c.nrfx_saadc_evt_type_t.NRFX_SAADC_EVT_DONE", "NRFX_SAADC_EVT_DONE"], [141, 1, 1, "c.nrfx_saadc_evt_type_t.NRFX_SAADC_EVT_FINISHED", "NRFX_SAADC_EVT_FINISHED"], [141, 1, 1, "c.nrfx_saadc_evt_type_t.NRFX_SAADC_EVT_LIMIT", "NRFX_SAADC_EVT_LIMIT"], [141, 1, 1, "c.nrfx_saadc_evt_type_t.NRFX_SAADC_EVT_READY", "NRFX_SAADC_EVT_READY"], [141, 0, 1, "c.NRFX_SAADC_SAMPLES_TO_BYTES", "NRFX_SAADC_SAMPLES_TO_BYTES"], [141, 0, 1, "c.NRFX_SAADC_SAMPLE_GET", "NRFX_SAADC_SAMPLE_GET"], [148, 0, 1, "c.NRFX_SPIM_BASE_FREQUENCY_GET", "NRFX_SPIM_BASE_FREQUENCY_GET"], [148, 0, 1, "c.NRFX_SPIM_DEFAULT_CONFIG", "NRFX_SPIM_DEFAULT_CONFIG"], [148, 1, 1, "c.nrfx_spim_evt_type_t.NRFX_SPIM_EVENT_DONE", "NRFX_SPIM_EVENT_DONE"], [148, 0, 1, "c.NRFX_SPIM_FLAG_HOLD_XFER", "NRFX_SPIM_FLAG_HOLD_XFER"], [148, 0, 1, "c.NRFX_SPIM_FLAG_NO_XFER_EVT_HANDLER", "NRFX_SPIM_FLAG_NO_XFER_EVT_HANDLER"], [148, 0, 1, "c.NRFX_SPIM_FLAG_REPEATED_XFER", "NRFX_SPIM_FLAG_REPEATED_XFER"], [148, 0, 1, "c.NRFX_SPIM_FLAG_RX_POSTINC", "NRFX_SPIM_FLAG_RX_POSTINC"], [148, 0, 1, "c.NRFX_SPIM_FLAG_TX_POSTINC", "NRFX_SPIM_FLAG_TX_POSTINC"], [148, 0, 1, "c.NRFX_SPIM_FREQUENCY_STATIC_CHECK", "NRFX_SPIM_FREQUENCY_STATIC_CHECK"], [148, 0, 1, "c.NRFX_SPIM_INSTANCE", "NRFX_SPIM_INSTANCE"], [148, 0, 1, "c.NRFX_SPIM_INST_HANDLER_GET", "NRFX_SPIM_INST_HANDLER_GET"], [148, 0, 1, "c.NRFX_SPIM_SINGLE_XFER", "NRFX_SPIM_SINGLE_XFER"], [148, 0, 1, "c.NRFX_SPIM_XFER_RX", "NRFX_SPIM_XFER_RX"], [148, 0, 1, "c.NRFX_SPIM_XFER_TRX", "NRFX_SPIM_XFER_TRX"], [148, 0, 1, "c.NRFX_SPIM_XFER_TX", "NRFX_SPIM_XFER_TX"], [152, 1, 1, "c.nrfx_spis_evt_type_t.NRFX_SPIS_BUFFERS_SET_DONE", "NRFX_SPIS_BUFFERS_SET_DONE"], [152, 0, 1, "c.NRFX_SPIS_DEFAULT_CONFIG", "NRFX_SPIS_DEFAULT_CONFIG"], [152, 1, 1, "c.nrfx_spis_evt_type_t.NRFX_SPIS_EVT_TYPE_MAX", "NRFX_SPIS_EVT_TYPE_MAX"], [152, 0, 1, "c.NRFX_SPIS_INSTANCE", "NRFX_SPIS_INSTANCE"], [152, 0, 1, "c.NRFX_SPIS_INST_HANDLER_GET", "NRFX_SPIS_INST_HANDLER_GET"], [152, 1, 1, "c.nrfx_spis_evt_type_t.NRFX_SPIS_XFER_DONE", "NRFX_SPIS_XFER_DONE"], [145, 0, 1, "c.NRFX_SPI_DEFAULT_CONFIG", "NRFX_SPI_DEFAULT_CONFIG"], [145, 1, 1, "c.nrfx_spi_evt_type_t.NRFX_SPI_EVENT_DONE", "NRFX_SPI_EVENT_DONE"], [145, 0, 1, "c.NRFX_SPI_INSTANCE", "NRFX_SPI_INSTANCE"], [145, 0, 1, "c.NRFX_SPI_INST_HANDLER_GET", "NRFX_SPI_INST_HANDLER_GET"], [145, 0, 1, "c.NRFX_SPI_PIN_NOT_USED", "NRFX_SPI_PIN_NOT_USED"], [145, 0, 1, "c.NRFX_SPI_SINGLE_XFER", "NRFX_SPI_SINGLE_XFER"], [145, 0, 1, "c.NRFX_SPI_XFER_RX", "NRFX_SPI_XFER_RX"], [145, 0, 1, "c.NRFX_SPI_XFER_TRX", "NRFX_SPI_XFER_TRX"], [145, 0, 1, "c.NRFX_SPI_XFER_TX", "NRFX_SPI_XFER_TX"], [240, 0, 1, "c.NRFX_STATIC_ASSERT", "NRFX_STATIC_ASSERT"], [238, 1, 1, "c.nrfx_err_t.NRFX_SUCCESS", "NRFX_SUCCESS"], [164, 0, 1, "c.NRFX_TBM_DEFAULT_CONFIG", "NRFX_TBM_DEFAULT_CONFIG"], [170, 0, 1, "c.NRFX_TEMP_DEFAULT_CONFIG", "NRFX_TEMP_DEFAULT_CONFIG"], [240, 0, 1, "c.NRFX_TIMERS_USED", "NRFX_TIMERS_USED"], [174, 0, 1, "c.NRFX_TIMER_BASE_FREQUENCY_GET", "NRFX_TIMER_BASE_FREQUENCY_GET"], [174, 0, 1, "c.NRFX_TIMER_DEFAULT_CONFIG", "NRFX_TIMER_DEFAULT_CONFIG"], [174, 0, 1, "c.NRFX_TIMER_FREQUENCY_STATIC_CHECK", "NRFX_TIMER_FREQUENCY_STATIC_CHECK"], [174, 0, 1, "c.NRFX_TIMER_INSTANCE", "NRFX_TIMER_INSTANCE"], [174, 0, 1, "c.NRFX_TIMER_INST_HANDLER_GET", "NRFX_TIMER_INST_HANDLER_GET"], [181, 0, 1, "c.NRFX_TWIM_DEFAULT_CONFIG", "NRFX_TWIM_DEFAULT_CONFIG"], [181, 1, 1, "c.nrfx_twim_evt_type_t.NRFX_TWIM_EVT_ADDRESS_NACK", "NRFX_TWIM_EVT_ADDRESS_NACK"], [181, 1, 1, "c.nrfx_twim_evt_type_t.NRFX_TWIM_EVT_BUS_ERROR", "NRFX_TWIM_EVT_BUS_ERROR"], [181, 1, 1, "c.nrfx_twim_evt_type_t.NRFX_TWIM_EVT_DATA_NACK", "NRFX_TWIM_EVT_DATA_NACK"], [181, 1, 1, "c.nrfx_twim_evt_type_t.NRFX_TWIM_EVT_DONE", "NRFX_TWIM_EVT_DONE"], [181, 1, 1, "c.nrfx_twim_evt_type_t.NRFX_TWIM_EVT_OVERRUN", "NRFX_TWIM_EVT_OVERRUN"], [181, 0, 1, "c.NRFX_TWIM_FLAG_HOLD_XFER", "NRFX_TWIM_FLAG_HOLD_XFER"], [181, 0, 1, "c.NRFX_TWIM_FLAG_NO_SPURIOUS_STOP_CHECK", "NRFX_TWIM_FLAG_NO_SPURIOUS_STOP_CHECK"], [181, 0, 1, "c.NRFX_TWIM_FLAG_NO_XFER_EVT_HANDLER", "NRFX_TWIM_FLAG_NO_XFER_EVT_HANDLER"], [181, 0, 1, "c.NRFX_TWIM_FLAG_REPEATED_XFER", "NRFX_TWIM_FLAG_REPEATED_XFER"], [181, 0, 1, "c.NRFX_TWIM_FLAG_RX_POSTINC", "NRFX_TWIM_FLAG_RX_POSTINC"], [181, 0, 1, "c.NRFX_TWIM_FLAG_TX_NO_STOP", "NRFX_TWIM_FLAG_TX_NO_STOP"], [181, 0, 1, "c.NRFX_TWIM_FLAG_TX_POSTINC", "NRFX_TWIM_FLAG_TX_POSTINC"], [181, 0, 1, "c.NRFX_TWIM_INSTANCE", "NRFX_TWIM_INSTANCE"], [181, 0, 1, "c.NRFX_TWIM_INST_HANDLER_GET", "NRFX_TWIM_INST_HANDLER_GET"], [181, 0, 1, "c.NRFX_TWIM_XFER_DESC", "NRFX_TWIM_XFER_DESC"], [181, 0, 1, "c.NRFX_TWIM_XFER_DESC_RX", "NRFX_TWIM_XFER_DESC_RX"], [181, 0, 1, "c.NRFX_TWIM_XFER_DESC_TX", "NRFX_TWIM_XFER_DESC_TX"], [181, 0, 1, "c.NRFX_TWIM_XFER_DESC_TXRX", "NRFX_TWIM_XFER_DESC_TXRX"], [181, 0, 1, "c.NRFX_TWIM_XFER_DESC_TXTX", "NRFX_TWIM_XFER_DESC_TXTX"], [181, 1, 1, "c.nrfx_twim_xfer_type_t.NRFX_TWIM_XFER_RX", "NRFX_TWIM_XFER_RX"], [181, 1, 1, "c.nrfx_twim_xfer_type_t.NRFX_TWIM_XFER_TX", "NRFX_TWIM_XFER_TX"], [181, 1, 1, "c.nrfx_twim_xfer_type_t.NRFX_TWIM_XFER_TXRX", "NRFX_TWIM_XFER_TXRX"], [181, 1, 1, "c.nrfx_twim_xfer_type_t.NRFX_TWIM_XFER_TXTX", "NRFX_TWIM_XFER_TXTX"], [185, 0, 1, "c.NRFX_TWIS_DEFAULT_CONFIG", "NRFX_TWIS_DEFAULT_CONFIG"], [185, 1, 1, "c.nrfx_twis_error_t.NRFX_TWIS_ERROR_DATA_NACK", "NRFX_TWIS_ERROR_DATA_NACK"], [185, 1, 1, "c.nrfx_twis_error_t.NRFX_TWIS_ERROR_OVERFLOW", "NRFX_TWIS_ERROR_OVERFLOW"], [185, 1, 1, "c.nrfx_twis_error_t.NRFX_TWIS_ERROR_OVERREAD", "NRFX_TWIS_ERROR_OVERREAD"], [185, 1, 1, "c.nrfx_twis_error_t.NRFX_TWIS_ERROR_UNEXPECTED_EVENT", "NRFX_TWIS_ERROR_UNEXPECTED_EVENT"], [185, 1, 1, "c.nrfx_twis_evt_type_t.NRFX_TWIS_EVT_GENERAL_ERROR", "NRFX_TWIS_EVT_GENERAL_ERROR"], [185, 1, 1, "c.nrfx_twis_evt_type_t.NRFX_TWIS_EVT_READ_DONE", "NRFX_TWIS_EVT_READ_DONE"], [185, 1, 1, "c.nrfx_twis_evt_type_t.NRFX_TWIS_EVT_READ_ERROR", "NRFX_TWIS_EVT_READ_ERROR"], [185, 1, 1, "c.nrfx_twis_evt_type_t.NRFX_TWIS_EVT_READ_REQ", "NRFX_TWIS_EVT_READ_REQ"], [185, 1, 1, "c.nrfx_twis_evt_type_t.NRFX_TWIS_EVT_WRITE_DONE", "NRFX_TWIS_EVT_WRITE_DONE"], [185, 1, 1, "c.nrfx_twis_evt_type_t.NRFX_TWIS_EVT_WRITE_ERROR", "NRFX_TWIS_EVT_WRITE_ERROR"], [185, 1, 1, "c.nrfx_twis_evt_type_t.NRFX_TWIS_EVT_WRITE_REQ", "NRFX_TWIS_EVT_WRITE_REQ"], [185, 0, 1, "c.NRFX_TWIS_INSTANCE", "NRFX_TWIS_INSTANCE"], [185, 0, 1, "c.NRFX_TWIS_INST_HANDLER_GET", "NRFX_TWIS_INST_HANDLER_GET"], [178, 0, 1, "c.NRFX_TWI_DEFAULT_CONFIG", "NRFX_TWI_DEFAULT_CONFIG"], [178, 1, 1, "c.nrfx_twi_evt_type_t.NRFX_TWI_EVT_ADDRESS_NACK", "NRFX_TWI_EVT_ADDRESS_NACK"], [178, 1, 1, "c.nrfx_twi_evt_type_t.NRFX_TWI_EVT_BUS_ERROR", "NRFX_TWI_EVT_BUS_ERROR"], [178, 1, 1, "c.nrfx_twi_evt_type_t.NRFX_TWI_EVT_DATA_NACK", "NRFX_TWI_EVT_DATA_NACK"], [178, 1, 1, "c.nrfx_twi_evt_type_t.NRFX_TWI_EVT_DONE", "NRFX_TWI_EVT_DONE"], [178, 1, 1, "c.nrfx_twi_evt_type_t.NRFX_TWI_EVT_OVERRUN", "NRFX_TWI_EVT_OVERRUN"], [178, 0, 1, "c.NRFX_TWI_FLAG_NO_XFER_EVT_HANDLER", "NRFX_TWI_FLAG_NO_XFER_EVT_HANDLER"], [178, 0, 1, "c.NRFX_TWI_FLAG_SUSPEND", "NRFX_TWI_FLAG_SUSPEND"], [178, 0, 1, "c.NRFX_TWI_FLAG_TX_NO_STOP", "NRFX_TWI_FLAG_TX_NO_STOP"], [178, 0, 1, "c.NRFX_TWI_INSTANCE", "NRFX_TWI_INSTANCE"], [178, 0, 1, "c.NRFX_TWI_INST_HANDLER_GET", "NRFX_TWI_INST_HANDLER_GET"], [178, 0, 1, "c.NRFX_TWI_XFER_DESC_RX", "NRFX_TWI_XFER_DESC_RX"], [178, 0, 1, "c.NRFX_TWI_XFER_DESC_TX", "NRFX_TWI_XFER_DESC_TX"], [178, 0, 1, "c.NRFX_TWI_XFER_DESC_TXRX", "NRFX_TWI_XFER_DESC_TXRX"], [178, 0, 1, "c.NRFX_TWI_XFER_DESC_TXTX", "NRFX_TWI_XFER_DESC_TXTX"], [178, 1, 1, "c.nrfx_twi_xfer_type_t.NRFX_TWI_XFER_RX", "NRFX_TWI_XFER_RX"], [178, 1, 1, "c.nrfx_twi_xfer_type_t.NRFX_TWI_XFER_TX", "NRFX_TWI_XFER_TX"], [178, 1, 1, "c.nrfx_twi_xfer_type_t.NRFX_TWI_XFER_TXRX", "NRFX_TWI_XFER_TXRX"], [178, 1, 1, "c.nrfx_twi_xfer_type_t.NRFX_TWI_XFER_TXTX", "NRFX_TWI_XFER_TXTX"], [191, 0, 1, "c.NRFX_UARTE_DEFAULT_CONFIG", "NRFX_UARTE_DEFAULT_CONFIG"], [191, 1, 1, "c.nrfx_uarte_evt_type_t.NRFX_UARTE_EVT_ERROR", "NRFX_UARTE_EVT_ERROR"], [191, 1, 1, "c.nrfx_uarte_evt_type_t.NRFX_UARTE_EVT_RX_BUF_REQUEST", "NRFX_UARTE_EVT_RX_BUF_REQUEST"], [191, 1, 1, "c.nrfx_uarte_evt_type_t.NRFX_UARTE_EVT_RX_BUF_TOO_LATE", "NRFX_UARTE_EVT_RX_BUF_TOO_LATE"], [191, 1, 1, "c.nrfx_uarte_evt_type_t.NRFX_UARTE_EVT_RX_BYTE", "NRFX_UARTE_EVT_RX_BYTE"], [191, 1, 1, "c.nrfx_uarte_evt_type_t.NRFX_UARTE_EVT_RX_DISABLED", "NRFX_UARTE_EVT_RX_DISABLED"], [191, 1, 1, "c.nrfx_uarte_evt_type_t.NRFX_UARTE_EVT_RX_DONE", "NRFX_UARTE_EVT_RX_DONE"], [191, 1, 1, "c.nrfx_uarte_evt_type_t.NRFX_UARTE_EVT_TRIGGER", "NRFX_UARTE_EVT_TRIGGER"], [191, 1, 1, "c.nrfx_uarte_evt_type_t.NRFX_UARTE_EVT_TX_DONE", "NRFX_UARTE_EVT_TX_DONE"], [191, 0, 1, "c.NRFX_UARTE_INSTANCE", "NRFX_UARTE_INSTANCE"], [191, 0, 1, "c.NRFX_UARTE_INST_HANDLER_GET", "NRFX_UARTE_INST_HANDLER_GET"], [188, 0, 1, "c.NRFX_UART_DEFAULT_CONFIG", "NRFX_UART_DEFAULT_CONFIG"], [188, 0, 1, "c.NRFX_UART_DEFAULT_EXTENDED_PARITYTYPE_CONFIG", "NRFX_UART_DEFAULT_EXTENDED_PARITYTYPE_CONFIG"], [188, 0, 1, "c.NRFX_UART_DEFAULT_EXTENDED_STOP_CONFIG", "NRFX_UART_DEFAULT_EXTENDED_STOP_CONFIG"], [188, 1, 1, "c.nrfx_uart_evt_type_t.NRFX_UART_EVT_ERROR", "NRFX_UART_EVT_ERROR"], [188, 1, 1, "c.nrfx_uart_evt_type_t.NRFX_UART_EVT_RX_DONE", "NRFX_UART_EVT_RX_DONE"], [188, 1, 1, "c.nrfx_uart_evt_type_t.NRFX_UART_EVT_TX_DONE", "NRFX_UART_EVT_TX_DONE"], [188, 0, 1, "c.NRFX_UART_INSTANCE", "NRFX_UART_INSTANCE"], [188, 0, 1, "c.NRFX_UART_INST_HANDLER_GET", "NRFX_UART_INST_HANDLER_GET"], [196, 0, 1, "c.NRFX_USBD_EPIN", "NRFX_USBD_EPIN"], [196, 1, 1, "c.nrfx_usbd_ep_t.NRFX_USBD_EPIN0", "NRFX_USBD_EPIN0"], [196, 1, 1, "c.nrfx_usbd_ep_t.NRFX_USBD_EPIN1", "NRFX_USBD_EPIN1"], [196, 1, 1, "c.nrfx_usbd_ep_t.NRFX_USBD_EPIN2", "NRFX_USBD_EPIN2"], [196, 1, 1, "c.nrfx_usbd_ep_t.NRFX_USBD_EPIN3", "NRFX_USBD_EPIN3"], [196, 1, 1, "c.nrfx_usbd_ep_t.NRFX_USBD_EPIN4", "NRFX_USBD_EPIN4"], [196, 1, 1, "c.nrfx_usbd_ep_t.NRFX_USBD_EPIN5", "NRFX_USBD_EPIN5"], [196, 1, 1, "c.nrfx_usbd_ep_t.NRFX_USBD_EPIN6", "NRFX_USBD_EPIN6"], [196, 1, 1, "c.nrfx_usbd_ep_t.NRFX_USBD_EPIN7", "NRFX_USBD_EPIN7"], [196, 1, 1, "c.nrfx_usbd_ep_t.NRFX_USBD_EPIN8", "NRFX_USBD_EPIN8"], [196, 0, 1, "c.NRFX_USBD_EPOUT", "NRFX_USBD_EPOUT"], [196, 1, 1, "c.nrfx_usbd_ep_t.NRFX_USBD_EPOUT0", "NRFX_USBD_EPOUT0"], [196, 1, 1, "c.nrfx_usbd_ep_t.NRFX_USBD_EPOUT1", "NRFX_USBD_EPOUT1"], [196, 1, 1, "c.nrfx_usbd_ep_t.NRFX_USBD_EPOUT2", "NRFX_USBD_EPOUT2"], [196, 1, 1, "c.nrfx_usbd_ep_t.NRFX_USBD_EPOUT3", "NRFX_USBD_EPOUT3"], [196, 1, 1, "c.nrfx_usbd_ep_t.NRFX_USBD_EPOUT4", "NRFX_USBD_EPOUT4"], [196, 1, 1, "c.nrfx_usbd_ep_t.NRFX_USBD_EPOUT5", "NRFX_USBD_EPOUT5"], [196, 1, 1, "c.nrfx_usbd_ep_t.NRFX_USBD_EPOUT6", "NRFX_USBD_EPOUT6"], [196, 1, 1, "c.nrfx_usbd_ep_t.NRFX_USBD_EPOUT7", "NRFX_USBD_EPOUT7"], [196, 1, 1, "c.nrfx_usbd_ep_t.NRFX_USBD_EPOUT8", "NRFX_USBD_EPOUT8"], [196, 0, 1, "c.NRFX_USBD_EPSIZE", "NRFX_USBD_EPSIZE"], [196, 1, 1, "c.nrfx_usbd_ep_status_t.NRFX_USBD_EP_ABORTED", "NRFX_USBD_EP_ABORTED"], [196, 1, 1, "c.nrfx_usbd_ep_status_t.NRFX_USBD_EP_BUSY", "NRFX_USBD_EP_BUSY"], [196, 1, 1, "c.nrfx_usbd_ep_status_t.NRFX_USBD_EP_OK", "NRFX_USBD_EP_OK"], [196, 1, 1, "c.nrfx_usbd_ep_status_t.NRFX_USBD_EP_OVERLOAD", "NRFX_USBD_EP_OVERLOAD"], [196, 1, 1, "c.nrfx_usbd_ep_status_t.NRFX_USBD_EP_WAITING", "NRFX_USBD_EP_WAITING"], [196, 1, 1, "c.nrfx_usbd_event_type_t.NRFX_USBD_EVT_CNT", "NRFX_USBD_EVT_CNT"], [196, 1, 1, "c.nrfx_usbd_event_type_t.NRFX_USBD_EVT_EPTRANSFER", "NRFX_USBD_EVT_EPTRANSFER"], [196, 1, 1, "c.nrfx_usbd_event_type_t.NRFX_USBD_EVT_RESET", "NRFX_USBD_EVT_RESET"], [196, 1, 1, "c.nrfx_usbd_event_type_t.NRFX_USBD_EVT_RESUME", "NRFX_USBD_EVT_RESUME"], [196, 1, 1, "c.nrfx_usbd_event_type_t.NRFX_USBD_EVT_SETUP", "NRFX_USBD_EVT_SETUP"], [196, 1, 1, "c.nrfx_usbd_event_type_t.NRFX_USBD_EVT_SOF", "NRFX_USBD_EVT_SOF"], [196, 1, 1, "c.nrfx_usbd_event_type_t.NRFX_USBD_EVT_SUSPEND", "NRFX_USBD_EVT_SUSPEND"], [196, 1, 1, "c.nrfx_usbd_event_type_t.NRFX_USBD_EVT_WUREQ", "NRFX_USBD_EVT_WUREQ"], [196, 0, 1, "c.NRFX_USBD_FEEDER_BUFFER_SIZE", "NRFX_USBD_FEEDER_BUFFER_SIZE"], [196, 0, 1, "c.NRFX_USBD_ISOSIZE", "NRFX_USBD_ISOSIZE"], [196, 0, 1, "c.NRFX_USBD_TRANSFER_IN", "NRFX_USBD_TRANSFER_IN"], [196, 0, 1, "c.NRFX_USBD_TRANSFER_OUT", "NRFX_USBD_TRANSFER_OUT"], [196, 1, 1, "c.nrfx_usbd_transfer_flags_t.NRFX_USBD_TRANSFER_ZLP_FLAG", "NRFX_USBD_TRANSFER_ZLP_FLAG"], [201, 1, 1, "c.nrfx_usbreg_evt_t.NRFX_USBREG_EVT_DETECTED", "NRFX_USBREG_EVT_DETECTED"], [201, 1, 1, "c.nrfx_usbreg_evt_t.NRFX_USBREG_EVT_READY", "NRFX_USBREG_EVT_READY"], [201, 1, 1, "c.nrfx_usbreg_evt_t.NRFX_USBREG_EVT_REMOVED", "NRFX_USBREG_EVT_REMOVED"], [201, 1, 1, "c.nrfx_usbreg_state_t.NRFX_USBREG_STATE_CONNECTED", "NRFX_USBREG_STATE_CONNECTED"], [201, 1, 1, "c.nrfx_usbreg_state_t.NRFX_USBREG_STATE_DISCONNECTED", "NRFX_USBREG_STATE_DISCONNECTED"], [201, 1, 1, "c.nrfx_usbreg_state_t.NRFX_USBREG_STATE_READY", "NRFX_USBREG_STATE_READY"], [249, 0, 1, "c.NRFX_VDMA_PERIPH_JOB", "NRFX_VDMA_PERIPH_JOB"], [234, 0, 1, "c.NRFX_WAIT_FOR", "NRFX_WAIT_FOR"], [215, 0, 1, "c.NRFX_WDT_DEFAULT_CONFIG", "NRFX_WDT_DEFAULT_CONFIG"], [215, 0, 1, "c.NRFX_WDT_HAS_STOP", "NRFX_WDT_HAS_STOP"], [215, 0, 1, "c.NRFX_WDT_INSTANCE", "NRFX_WDT_INSTANCE"], [215, 0, 1, "c.NRFX_WDT_INST_HANDLER_GET", "NRFX_WDT_INST_HANDLER_GET"], [215, 0, 1, "c.NRFX_WDT_IRQ_CONFIG", "NRFX_WDT_IRQ_CONFIG"], [240, 0, 1, "c.NRFY_CACHE_INV", "NRFY_CACHE_INV"], [240, 0, 1, "c.NRFY_CACHE_WB", "NRFY_CACHE_WB"], [240, 0, 1, "c.NRFY_CACHE_WBINV", "NRFY_CACHE_WBINV"], [25, 0, 1, "c.NRFY_COMP_HAS_ISOURCE", "NRFY_COMP_HAS_ISOURCE"], [236, 0, 1, "c.NRFY_CRITICAL_SECTION_ENTER", "NRFY_CRITICAL_SECTION_ENTER"], [236, 0, 1, "c.NRFY_CRITICAL_SECTION_EXIT", "NRFY_CRITICAL_SECTION_EXIT"], [236, 0, 1, "c.NRFY_EVENT_TO_INT_BITMASK", "NRFY_EVENT_TO_INT_BITMASK"], [236, 0, 1, "c.NRFY_EVENT_TO_INT_BITPOS", "NRFY_EVENT_TO_INT_BITPOS"], [53, 0, 1, "c.NRFY_GPIOTE_HAS_LATENCY", "NRFY_GPIOTE_HAS_LATENCY"], [57, 0, 1, "c.NRFY_GRTC_HAS_CLKOUT", "NRFY_GRTC_HAS_CLKOUT"], [57, 0, 1, "c.NRFY_GRTC_HAS_CLKSEL", "NRFY_GRTC_HAS_CLKSEL"], [57, 0, 1, "c.NRFY_GRTC_HAS_EXTENDED", "NRFY_GRTC_HAS_EXTENDED"], [57, 0, 1, "c.NRFY_GRTC_HAS_PWM", "NRFY_GRTC_HAS_PWM"], [57, 0, 1, "c.NRFY_GRTC_HAS_RTCOUNTER", "NRFY_GRTC_HAS_RTCOUNTER"], [57, 0, 1, "c.NRFY_GRTC_HAS_SYSCOUNTER_ARRAY", "NRFY_GRTC_HAS_SYSCOUNTER_ARRAY"], [57, 0, 1, "c.NRFY_GRTC_SYSCOUNTER_RETRY_MASK", "NRFY_GRTC_SYSCOUNTER_RETRY_MASK"], [236, 0, 1, "c.NRFY_INT_BITPOS_TO_EVENT", "NRFY_INT_BITPOS_TO_EVENT"], [236, 0, 1, "c.NRFY_IRQ_DISABLE", "NRFY_IRQ_DISABLE"], [236, 0, 1, "c.NRFY_IRQ_ENABLE", "NRFY_IRQ_ENABLE"], [236, 0, 1, "c.NRFY_IRQ_IS_ENABLED", "NRFY_IRQ_IS_ENABLED"], [236, 0, 1, "c.NRFY_IRQ_IS_PENDING", "NRFY_IRQ_IS_PENDING"], [236, 0, 1, "c.NRFY_IRQ_PENDING_CLEAR", "NRFY_IRQ_PENDING_CLEAR"], [236, 0, 1, "c.NRFY_IRQ_PENDING_SET", "NRFY_IRQ_PENDING_SET"], [236, 0, 1, "c.NRFY_IRQ_PRIORITY_SET", "NRFY_IRQ_PRIORITY_SET"], [88, 0, 1, "c.NRFY_MVDMA_HAS_AXIMODE", "NRFY_MVDMA_HAS_AXIMODE"], [88, 0, 1, "c.NRFY_MVDMA_HAS_NEW_VER", "NRFY_MVDMA_HAS_NEW_VER"], [135, 0, 1, "c.NRFY_RRAMC_BYTES_IN_WORD", "NRFY_RRAMC_BYTES_IN_WORD"], [135, 0, 1, "c.NRFY_RRAMC_READY_NEXT_TIMEOUT_DEFAULT", "NRFY_RRAMC_READY_NEXT_TIMEOUT_DEFAULT"], [135, 0, 1, "c.NRFY_RRAMC_RRAM_BASE_ADDRESS", "NRFY_RRAMC_RRAM_BASE_ADDRESS"], [135, 0, 1, "c.NRFY_RRAMC_WORDS_IN_BUFER_LINE", "NRFY_RRAMC_WORDS_IN_BUFER_LINE"], [150, 0, 1, "c.NRFY_SPIM_HAS_ARRAY_LIST", "NRFY_SPIM_HAS_ARRAY_LIST"], [150, 0, 1, "c.NRFY_SPIM_HAS_DCX", "NRFY_SPIM_HAS_DCX"], [150, 0, 1, "c.NRFY_SPIM_HAS_EXTENDED", "NRFY_SPIM_HAS_EXTENDED"], [150, 0, 1, "c.NRFY_SPIM_HAS_FREQUENCY", "NRFY_SPIM_HAS_FREQUENCY"], [150, 0, 1, "c.NRFY_SPIM_HAS_HW_CSN", "NRFY_SPIM_HAS_HW_CSN"], [150, 0, 1, "c.NRFY_SPIM_HAS_PRESCALER", "NRFY_SPIM_HAS_PRESCALER"], [150, 0, 1, "c.NRFY_SPIM_HAS_RXDELAY", "NRFY_SPIM_HAS_RXDELAY"], [150, 0, 1, "c.NRFY_SPIM_HAS_STALLSTAT", "NRFY_SPIM_HAS_STALLSTAT"], [172, 0, 1, "c.NRFY_TEMP_HAS_CALIBRATION", "NRFY_TEMP_HAS_CALIBRATION"], [176, 0, 1, "c.NRFY_TIMER_HAS_ONE_SHOT", "NRFY_TIMER_HAS_ONE_SHOT"], [183, 0, 1, "c.NRFY_TWIM_HAS_ARRAY_LIST", "NRFY_TWIM_HAS_ARRAY_LIST"], [217, 0, 1, "c.NRFY_WDT_HAS_STOP", "NRFY_WDT_HAS_STOP"], [2, 1, 1, "c.nrf_aar_error_t.NRF_AAR_ERROR_DMA_ERROR", "NRF_AAR_ERROR_DMA_ERROR"], [2, 1, 1, "c.nrf_aar_error_t.NRF_AAR_ERROR_NO_ERROR", "NRF_AAR_ERROR_NO_ERROR"], [2, 1, 1, "c.nrf_aar_error_t.NRF_AAR_ERROR_PREMATURE_INPTR_END", "NRF_AAR_ERROR_PREMATURE_INPTR_END"], [2, 1, 1, "c.nrf_aar_error_t.NRF_AAR_ERROR_PREMATURE_OUTPTR_END", "NRF_AAR_ERROR_PREMATURE_OUTPTR_END"], [2, 1, 1, "c.nrf_aar_event_t.NRF_AAR_EVENT_END", "NRF_AAR_EVENT_END"], [2, 1, 1, "c.nrf_aar_event_t.NRF_AAR_EVENT_ERROR", "NRF_AAR_EVENT_ERROR"], [2, 1, 1, "c.nrf_aar_event_t.NRF_AAR_EVENT_NOTRESOLVED", "NRF_AAR_EVENT_NOTRESOLVED"], [2, 1, 1, "c.nrf_aar_event_t.NRF_AAR_EVENT_RESOLVED", "NRF_AAR_EVENT_RESOLVED"], [2, 0, 1, "c.NRF_AAR_HAS_ADDRPTR", "NRF_AAR_HAS_ADDRPTR"], [2, 0, 1, "c.NRF_AAR_HAS_ERROR", "NRF_AAR_HAS_ERROR"], [2, 0, 1, "c.NRF_AAR_HAS_IN_PTR", "NRF_AAR_HAS_IN_PTR"], [2, 0, 1, "c.NRF_AAR_HAS_IRKPTR", "NRF_AAR_HAS_IRKPTR"], [2, 0, 1, "c.NRF_AAR_HAS_MAXRESOLVED", "NRF_AAR_HAS_MAXRESOLVED"], [2, 0, 1, "c.NRF_AAR_HAS_NIRK", "NRF_AAR_HAS_NIRK"], [2, 0, 1, "c.NRF_AAR_HAS_OUT_AMOUNT", "NRF_AAR_HAS_OUT_AMOUNT"], [2, 0, 1, "c.NRF_AAR_HAS_OUT_PTR", "NRF_AAR_HAS_OUT_PTR"], [2, 0, 1, "c.NRF_AAR_HAS_SCRATCHPTR", "NRF_AAR_HAS_SCRATCHPTR"], [2, 0, 1, "c.NRF_AAR_HAS_STATUS", "NRF_AAR_HAS_STATUS"], [2, 1, 1, "c.nrf_aar_int_mask_t.NRF_AAR_INT_END_MASK", "NRF_AAR_INT_END_MASK"], [2, 1, 1, "c.nrf_aar_int_mask_t.NRF_AAR_INT_ERROR_MASK", "NRF_AAR_INT_ERROR_MASK"], [2, 1, 1, "c.nrf_aar_int_mask_t.NRF_AAR_INT_NOTRESOLVED_MASK", "NRF_AAR_INT_NOTRESOLVED_MASK"], [2, 1, 1, "c.nrf_aar_int_mask_t.NRF_AAR_INT_RESOLVED_MASK", "NRF_AAR_INT_RESOLVED_MASK"], [2, 1, 1, "c.nrf_aar_task_t.NRF_AAR_TASK_START", "NRF_AAR_TASK_START"], [2, 1, 1, "c.nrf_aar_task_t.NRF_AAR_TASK_STOP", "NRF_AAR_TASK_STOP"], [4, 1, 1, "c.nrf_acl_perm_t.NRF_ACL_PERM_NO_READ_NO_WRITE", "NRF_ACL_PERM_NO_READ_NO_WRITE"], [4, 1, 1, "c.nrf_acl_perm_t.NRF_ACL_PERM_NO_READ_WRITE", "NRF_ACL_PERM_NO_READ_WRITE"], [4, 1, 1, "c.nrf_acl_perm_t.NRF_ACL_PERM_READ_NO_WRITE", "NRF_ACL_PERM_READ_NO_WRITE"], [7, 1, 1, "c.nrf_adc_config_extref_t.NRF_ADC_CONFIG_EXTREFSEL_AREF0", "NRF_ADC_CONFIG_EXTREFSEL_AREF0"], [7, 1, 1, "c.nrf_adc_config_extref_t.NRF_ADC_CONFIG_EXTREFSEL_AREF1", "NRF_ADC_CONFIG_EXTREFSEL_AREF1"], [7, 1, 1, "c.nrf_adc_config_extref_t.NRF_ADC_CONFIG_EXTREFSEL_NONE", "NRF_ADC_CONFIG_EXTREFSEL_NONE"], [7, 1, 1, "c.nrf_adc_config_input_t.NRF_ADC_CONFIG_INPUT_0", "NRF_ADC_CONFIG_INPUT_0"], [7, 1, 1, "c.nrf_adc_config_input_t.NRF_ADC_CONFIG_INPUT_1", "NRF_ADC_CONFIG_INPUT_1"], [7, 1, 1, "c.nrf_adc_config_input_t.NRF_ADC_CONFIG_INPUT_2", "NRF_ADC_CONFIG_INPUT_2"], [7, 1, 1, "c.nrf_adc_config_input_t.NRF_ADC_CONFIG_INPUT_3", "NRF_ADC_CONFIG_INPUT_3"], [7, 1, 1, "c.nrf_adc_config_input_t.NRF_ADC_CONFIG_INPUT_4", "NRF_ADC_CONFIG_INPUT_4"], [7, 1, 1, "c.nrf_adc_config_input_t.NRF_ADC_CONFIG_INPUT_5", "NRF_ADC_CONFIG_INPUT_5"], [7, 1, 1, "c.nrf_adc_config_input_t.NRF_ADC_CONFIG_INPUT_6", "NRF_ADC_CONFIG_INPUT_6"], [7, 1, 1, "c.nrf_adc_config_input_t.NRF_ADC_CONFIG_INPUT_7", "NRF_ADC_CONFIG_INPUT_7"], [7, 1, 1, "c.nrf_adc_config_input_t.NRF_ADC_CONFIG_INPUT_DISABLED", "NRF_ADC_CONFIG_INPUT_DISABLED"], [7, 1, 1, "c.nrf_adc_config_reference_t.NRF_ADC_CONFIG_REF_EXT", "NRF_ADC_CONFIG_REF_EXT"], [7, 1, 1, "c.nrf_adc_config_reference_t.NRF_ADC_CONFIG_REF_SUPPLY_ONE_HALF", "NRF_ADC_CONFIG_REF_SUPPLY_ONE_HALF"], [7, 1, 1, "c.nrf_adc_config_reference_t.NRF_ADC_CONFIG_REF_SUPPLY_ONE_THIRD", "NRF_ADC_CONFIG_REF_SUPPLY_ONE_THIRD"], [7, 1, 1, "c.nrf_adc_config_reference_t.NRF_ADC_CONFIG_REF_VBG", "NRF_ADC_CONFIG_REF_VBG"], [7, 1, 1, "c.nrf_adc_config_resolution_t.NRF_ADC_CONFIG_RES_10BIT", "NRF_ADC_CONFIG_RES_10BIT"], [7, 1, 1, "c.nrf_adc_config_resolution_t.NRF_ADC_CONFIG_RES_8BIT", "NRF_ADC_CONFIG_RES_8BIT"], [7, 1, 1, "c.nrf_adc_config_resolution_t.NRF_ADC_CONFIG_RES_9BIT", "NRF_ADC_CONFIG_RES_9BIT"], [7, 1, 1, "c.nrf_adc_config_scaling_t.NRF_ADC_CONFIG_SCALING_INPUT_FULL_SCALE", "NRF_ADC_CONFIG_SCALING_INPUT_FULL_SCALE"], [7, 1, 1, "c.nrf_adc_config_scaling_t.NRF_ADC_CONFIG_SCALING_INPUT_ONE_THIRD", "NRF_ADC_CONFIG_SCALING_INPUT_ONE_THIRD"], [7, 1, 1, "c.nrf_adc_config_scaling_t.NRF_ADC_CONFIG_SCALING_INPUT_TWO_THIRDS", "NRF_ADC_CONFIG_SCALING_INPUT_TWO_THIRDS"], [7, 1, 1, "c.nrf_adc_config_scaling_t.NRF_ADC_CONFIG_SCALING_SUPPLY_ONE_THIRD", "NRF_ADC_CONFIG_SCALING_SUPPLY_ONE_THIRD"], [7, 1, 1, "c.nrf_adc_config_scaling_t.NRF_ADC_CONFIG_SCALING_SUPPLY_TWO_THIRDS", "NRF_ADC_CONFIG_SCALING_SUPPLY_TWO_THIRDS"], [7, 1, 1, "c.nrf_adc_event_t.NRF_ADC_EVENT_END", "NRF_ADC_EVENT_END"], [7, 1, 1, "c.nrf_adc_int_mask_t.NRF_ADC_INT_END_MASK", "NRF_ADC_INT_END_MASK"], [7, 1, 1, "c.nrf_adc_task_t.NRF_ADC_TASK_START", "NRF_ADC_TASK_START"], [7, 1, 1, "c.nrf_adc_task_t.NRF_ADC_TASK_STOP", "NRF_ADC_TASK_STOP"], [9, 1, 1, "c.nrf_auxpll_ctrl_mode_t.NRF_AUXPLL_CTRL_MODE_AUTO", "NRF_AUXPLL_CTRL_MODE_AUTO"], [9, 1, 1, "c.nrf_auxpll_ctrl_mode_t.NRF_AUXPLL_CTRL_MODE_FREERUN", "NRF_AUXPLL_CTRL_MODE_FREERUN"], [9, 1, 1, "c.nrf_auxpll_ctrl_mode_t.NRF_AUXPLL_CTRL_MODE_LOCKED", "NRF_AUXPLL_CTRL_MODE_LOCKED"], [9, 1, 1, "c.nrf_auxpll_ctrl_outsel_t.NRF_AUXPLL_CTRL_OUTSEL_DIV_1", "NRF_AUXPLL_CTRL_OUTSEL_DIV_1"], [9, 1, 1, "c.nrf_auxpll_ctrl_outsel_t.NRF_AUXPLL_CTRL_OUTSEL_DIV_12", "NRF_AUXPLL_CTRL_OUTSEL_DIV_12"], [9, 1, 1, "c.nrf_auxpll_ctrl_outsel_t.NRF_AUXPLL_CTRL_OUTSEL_DIV_16", "NRF_AUXPLL_CTRL_OUTSEL_DIV_16"], [9, 1, 1, "c.nrf_auxpll_ctrl_outsel_t.NRF_AUXPLL_CTRL_OUTSEL_DIV_2", "NRF_AUXPLL_CTRL_OUTSEL_DIV_2"], [9, 1, 1, "c.nrf_auxpll_ctrl_outsel_t.NRF_AUXPLL_CTRL_OUTSEL_DIV_3", "NRF_AUXPLL_CTRL_OUTSEL_DIV_3"], [9, 1, 1, "c.nrf_auxpll_ctrl_outsel_t.NRF_AUXPLL_CTRL_OUTSEL_DIV_4", "NRF_AUXPLL_CTRL_OUTSEL_DIV_4"], [9, 1, 1, "c.nrf_auxpll_ctrl_outsel_t.NRF_AUXPLL_CTRL_OUTSEL_DIV_6", "NRF_AUXPLL_CTRL_OUTSEL_DIV_6"], [9, 1, 1, "c.nrf_auxpll_ctrl_outsel_t.NRF_AUXPLL_CTRL_OUTSEL_DIV_8", "NRF_AUXPLL_CTRL_OUTSEL_DIV_8"], [9, 1, 1, "c.nrf_auxpll_ctrl_outsel_t.NRF_AUXPLL_CTRL_OUTSEL_DIV_DISABLED", "NRF_AUXPLL_CTRL_OUTSEL_DIV_DISABLED"], [9, 1, 1, "c.nrf_auxpll_divider_range_t.NRF_AUXPLL_DIVIDER_RANGE_HIGH", "NRF_AUXPLL_DIVIDER_RANGE_HIGH"], [9, 1, 1, "c.nrf_auxpll_divider_range_t.NRF_AUXPLL_DIVIDER_RANGE_LOW", "NRF_AUXPLL_DIVIDER_RANGE_LOW"], [9, 1, 1, "c.nrf_auxpll_divider_range_t.NRF_AUXPLL_DIVIDER_RANGE_MAX", "NRF_AUXPLL_DIVIDER_RANGE_MAX"], [9, 1, 1, "c.nrf_auxpll_divider_range_t.NRF_AUXPLL_DIVIDER_RANGE_MID", "NRF_AUXPLL_DIVIDER_RANGE_MID"], [9, 1, 1, "c.nrf_auxpll_event_t.NRF_AUXPLL_EVENT_LOCKED", "NRF_AUXPLL_EVENT_LOCKED"], [9, 1, 1, "c.nrf_auxpll_event_t.NRF_AUXPLL_EVENT_STARTED", "NRF_AUXPLL_EVENT_STARTED"], [9, 1, 1, "c.nrf_auxpll_event_t.NRF_AUXPLL_EVENT_STOPPED", "NRF_AUXPLL_EVENT_STOPPED"], [9, 1, 1, "c.nrf_auxpll_int_mask_t.NRF_AUXPLL_INT_LOCKED_MASK", "NRF_AUXPLL_INT_LOCKED_MASK"], [9, 1, 1, "c.nrf_auxpll_int_mask_t.NRF_AUXPLL_INT_STARTED_MASK", "NRF_AUXPLL_INT_STARTED_MASK"], [9, 1, 1, "c.nrf_auxpll_int_mask_t.NRF_AUXPLL_INT_STOPPED_MASK", "NRF_AUXPLL_INT_STOPPED_MASK"], [9, 1, 1, "c.nrf_auxpll_status_mask_t.NRF_AUXPLL_STATUS_MODE_MASK", "NRF_AUXPLL_STATUS_MODE_MASK"], [9, 1, 1, "c.nrf_auxpll_status_mask_t.NRF_AUXPLL_STATUS_PLL_RUNNING_MASK", "NRF_AUXPLL_STATUS_PLL_RUNNING_MASK"], [9, 1, 1, "c.nrf_auxpll_task_t.NRF_AUXPLL_TASK_FREQ_INC_START", "NRF_AUXPLL_TASK_FREQ_INC_START"], [9, 1, 1, "c.nrf_auxpll_task_t.NRF_AUXPLL_TASK_FREQ_INC_STOP", "NRF_AUXPLL_TASK_FREQ_INC_STOP"], [9, 1, 1, "c.nrf_auxpll_task_t.NRF_AUXPLL_TASK_FREQ_NEW_BASE", "NRF_AUXPLL_TASK_FREQ_NEW_BASE"], [9, 1, 1, "c.nrf_auxpll_task_t.NRF_AUXPLL_TASK_FREQ_NEW_FINE", "NRF_AUXPLL_TASK_FREQ_NEW_FINE"], [9, 1, 1, "c.nrf_auxpll_task_t.NRF_AUXPLL_TASK_START", "NRF_AUXPLL_TASK_START"], [9, 1, 1, "c.nrf_auxpll_task_t.NRF_AUXPLL_TASK_STOP", "NRF_AUXPLL_TASK_STOP"], [11, 0, 1, "c.NRF_BELLBOARD_EVENTS_TRIGGERED_COUNT", "NRF_BELLBOARD_EVENTS_TRIGGERED_COUNT"], [11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_0", "NRF_BELLBOARD_EVENT_TRIGGERED_0"], [11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_1", "NRF_BELLBOARD_EVENT_TRIGGERED_1"], [11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_10", "NRF_BELLBOARD_EVENT_TRIGGERED_10"], [11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_11", "NRF_BELLBOARD_EVENT_TRIGGERED_11"], [11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_12", "NRF_BELLBOARD_EVENT_TRIGGERED_12"], [11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_13", "NRF_BELLBOARD_EVENT_TRIGGERED_13"], [11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_14", "NRF_BELLBOARD_EVENT_TRIGGERED_14"], [11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_15", "NRF_BELLBOARD_EVENT_TRIGGERED_15"], [11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_16", "NRF_BELLBOARD_EVENT_TRIGGERED_16"], [11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_17", "NRF_BELLBOARD_EVENT_TRIGGERED_17"], [11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_18", "NRF_BELLBOARD_EVENT_TRIGGERED_18"], [11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_19", "NRF_BELLBOARD_EVENT_TRIGGERED_19"], [11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_2", "NRF_BELLBOARD_EVENT_TRIGGERED_2"], [11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_20", "NRF_BELLBOARD_EVENT_TRIGGERED_20"], [11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_21", "NRF_BELLBOARD_EVENT_TRIGGERED_21"], [11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_22", "NRF_BELLBOARD_EVENT_TRIGGERED_22"], [11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_23", "NRF_BELLBOARD_EVENT_TRIGGERED_23"], [11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_24", "NRF_BELLBOARD_EVENT_TRIGGERED_24"], [11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_25", "NRF_BELLBOARD_EVENT_TRIGGERED_25"], [11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_26", "NRF_BELLBOARD_EVENT_TRIGGERED_26"], [11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_27", "NRF_BELLBOARD_EVENT_TRIGGERED_27"], [11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_28", "NRF_BELLBOARD_EVENT_TRIGGERED_28"], [11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_29", "NRF_BELLBOARD_EVENT_TRIGGERED_29"], [11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_3", "NRF_BELLBOARD_EVENT_TRIGGERED_3"], [11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_30", "NRF_BELLBOARD_EVENT_TRIGGERED_30"], [11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_31", "NRF_BELLBOARD_EVENT_TRIGGERED_31"], [11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_4", "NRF_BELLBOARD_EVENT_TRIGGERED_4"], [11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_5", "NRF_BELLBOARD_EVENT_TRIGGERED_5"], [11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_6", "NRF_BELLBOARD_EVENT_TRIGGERED_6"], [11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_7", "NRF_BELLBOARD_EVENT_TRIGGERED_7"], [11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_8", "NRF_BELLBOARD_EVENT_TRIGGERED_8"], [11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_9", "NRF_BELLBOARD_EVENT_TRIGGERED_9"], [11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_0_MASK", "NRF_BELLBOARD_INT_TRIGGERED_0_MASK"], [11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_10_MASK", "NRF_BELLBOARD_INT_TRIGGERED_10_MASK"], [11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_11_MASK", "NRF_BELLBOARD_INT_TRIGGERED_11_MASK"], [11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_12_MASK", "NRF_BELLBOARD_INT_TRIGGERED_12_MASK"], [11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_13_MASK", "NRF_BELLBOARD_INT_TRIGGERED_13_MASK"], [11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_14_MASK", "NRF_BELLBOARD_INT_TRIGGERED_14_MASK"], [11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_15_MASK", "NRF_BELLBOARD_INT_TRIGGERED_15_MASK"], [11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_16_MASK", "NRF_BELLBOARD_INT_TRIGGERED_16_MASK"], [11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_17_MASK", "NRF_BELLBOARD_INT_TRIGGERED_17_MASK"], [11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_18_MASK", "NRF_BELLBOARD_INT_TRIGGERED_18_MASK"], [11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_19_MASK", "NRF_BELLBOARD_INT_TRIGGERED_19_MASK"], [11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_1_MASK", "NRF_BELLBOARD_INT_TRIGGERED_1_MASK"], [11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_20_MASK", "NRF_BELLBOARD_INT_TRIGGERED_20_MASK"], [11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_21_MASK", "NRF_BELLBOARD_INT_TRIGGERED_21_MASK"], [11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_22_MASK", "NRF_BELLBOARD_INT_TRIGGERED_22_MASK"], [11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_23_MASK", "NRF_BELLBOARD_INT_TRIGGERED_23_MASK"], [11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_24_MASK", "NRF_BELLBOARD_INT_TRIGGERED_24_MASK"], [11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_25_MASK", "NRF_BELLBOARD_INT_TRIGGERED_25_MASK"], [11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_26_MASK", "NRF_BELLBOARD_INT_TRIGGERED_26_MASK"], [11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_27_MASK", "NRF_BELLBOARD_INT_TRIGGERED_27_MASK"], [11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_28_MASK", "NRF_BELLBOARD_INT_TRIGGERED_28_MASK"], [11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_29_MASK", "NRF_BELLBOARD_INT_TRIGGERED_29_MASK"], [11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_2_MASK", "NRF_BELLBOARD_INT_TRIGGERED_2_MASK"], [11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_30_MASK", "NRF_BELLBOARD_INT_TRIGGERED_30_MASK"], [11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_31_MASK", "NRF_BELLBOARD_INT_TRIGGERED_31_MASK"], [11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_3_MASK", "NRF_BELLBOARD_INT_TRIGGERED_3_MASK"], [11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_4_MASK", "NRF_BELLBOARD_INT_TRIGGERED_4_MASK"], [11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_5_MASK", "NRF_BELLBOARD_INT_TRIGGERED_5_MASK"], [11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_6_MASK", "NRF_BELLBOARD_INT_TRIGGERED_6_MASK"], [11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_7_MASK", "NRF_BELLBOARD_INT_TRIGGERED_7_MASK"], [11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_8_MASK", "NRF_BELLBOARD_INT_TRIGGERED_8_MASK"], [11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_9_MASK", "NRF_BELLBOARD_INT_TRIGGERED_9_MASK"], [11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_0", "NRF_BELLBOARD_TASK_TRIGGER_0"], [11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_1", "NRF_BELLBOARD_TASK_TRIGGER_1"], [11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_10", "NRF_BELLBOARD_TASK_TRIGGER_10"], [11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_11", "NRF_BELLBOARD_TASK_TRIGGER_11"], [11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_12", "NRF_BELLBOARD_TASK_TRIGGER_12"], [11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_13", "NRF_BELLBOARD_TASK_TRIGGER_13"], [11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_14", "NRF_BELLBOARD_TASK_TRIGGER_14"], [11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_15", "NRF_BELLBOARD_TASK_TRIGGER_15"], [11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_16", "NRF_BELLBOARD_TASK_TRIGGER_16"], [11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_17", "NRF_BELLBOARD_TASK_TRIGGER_17"], [11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_18", "NRF_BELLBOARD_TASK_TRIGGER_18"], [11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_19", "NRF_BELLBOARD_TASK_TRIGGER_19"], [11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_2", "NRF_BELLBOARD_TASK_TRIGGER_2"], [11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_20", "NRF_BELLBOARD_TASK_TRIGGER_20"], [11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_21", "NRF_BELLBOARD_TASK_TRIGGER_21"], [11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_22", "NRF_BELLBOARD_TASK_TRIGGER_22"], [11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_23", "NRF_BELLBOARD_TASK_TRIGGER_23"], [11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_24", "NRF_BELLBOARD_TASK_TRIGGER_24"], [11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_25", "NRF_BELLBOARD_TASK_TRIGGER_25"], [11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_26", "NRF_BELLBOARD_TASK_TRIGGER_26"], [11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_27", "NRF_BELLBOARD_TASK_TRIGGER_27"], [11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_28", "NRF_BELLBOARD_TASK_TRIGGER_28"], [11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_29", "NRF_BELLBOARD_TASK_TRIGGER_29"], [11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_3", "NRF_BELLBOARD_TASK_TRIGGER_3"], [11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_30", "NRF_BELLBOARD_TASK_TRIGGER_30"], [11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_31", "NRF_BELLBOARD_TASK_TRIGGER_31"], [11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_4", "NRF_BELLBOARD_TASK_TRIGGER_4"], [11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_5", "NRF_BELLBOARD_TASK_TRIGGER_5"], [11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_6", "NRF_BELLBOARD_TASK_TRIGGER_6"], [11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_7", "NRF_BELLBOARD_TASK_TRIGGER_7"], [11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_8", "NRF_BELLBOARD_TASK_TRIGGER_8"], [11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_9", "NRF_BELLBOARD_TASK_TRIGGER_9"], [16, 0, 1, "c.NRF_CACHEDATA_DATA_UNITS_MAX", "NRF_CACHEDATA_DATA_UNITS_MAX"], [16, 0, 1, "c.NRF_CACHEDATA_DATA_WORDS_IN_UNIT_MAX", "NRF_CACHEDATA_DATA_WORDS_IN_UNIT_MAX"], [16, 0, 1, "c.NRF_CACHEDATA_SET_INDEX_MAX", "NRF_CACHEDATA_SET_INDEX_MAX"], [16, 0, 1, "c.NRF_CACHEDATA_WAY_INDEX_MAX", "NRF_CACHEDATA_WAY_INDEX_MAX"], [16, 0, 1, "c.NRF_CACHEDATA_WORD_INDEX_MAX", "NRF_CACHEDATA_WORD_INDEX_MAX"], [16, 0, 1, "c.NRF_CACHEINFO_DATA_UNITS_MAX", "NRF_CACHEINFO_DATA_UNITS_MAX"], [16, 0, 1, "c.NRF_CACHEINFO_DATA_WORDS_IN_UNIT_MAX", "NRF_CACHEINFO_DATA_WORDS_IN_UNIT_MAX"], [16, 0, 1, "c.NRF_CACHEINFO_SET_INDEX_MAX", "NRF_CACHEINFO_SET_INDEX_MAX"], [16, 0, 1, "c.NRF_CACHEINFO_WAY_INDEX_MAX", "NRF_CACHEINFO_WAY_INDEX_MAX"], [16, 0, 1, "c.NRF_CACHEINFO_WORD_INDEX_MAX", "NRF_CACHEINFO_WORD_INDEX_MAX"], [16, 0, 1, "c.NRF_CACHE_HAS_CACHEDATA", "NRF_CACHE_HAS_CACHEDATA"], [16, 0, 1, "c.NRF_CACHE_HAS_CACHEDATA_DU", "NRF_CACHE_HAS_CACHEDATA_DU"], [16, 0, 1, "c.NRF_CACHE_HAS_CACHEINFO", "NRF_CACHE_HAS_CACHEINFO"], [16, 0, 1, "c.NRF_CACHE_HAS_CACHEINFO_DU_DIRTY", "NRF_CACHE_HAS_CACHEINFO_DU_DIRTY"], [16, 0, 1, "c.NRF_CACHE_HAS_CACHEINFO_DU_VALIDATION", "NRF_CACHE_HAS_CACHEINFO_DU_VALIDATION"], [16, 0, 1, "c.NRF_CACHE_HAS_CACHEINFO_SET_WAY_INFO", "NRF_CACHE_HAS_CACHEINFO_SET_WAY_INFO"], [16, 0, 1, "c.NRF_CACHE_HAS_RAMSIZE", "NRF_CACHE_HAS_RAMSIZE"], [16, 0, 1, "c.NRF_CACHE_HAS_RAM_MODE", "NRF_CACHE_HAS_RAM_MODE"], [16, 0, 1, "c.NRF_CACHE_HAS_STATUS", "NRF_CACHE_HAS_STATUS"], [16, 0, 1, "c.NRF_CACHE_HAS_TASKS", "NRF_CACHE_HAS_TASKS"], [16, 0, 1, "c.NRF_CACHE_HAS_TASK_CLEAN", "NRF_CACHE_HAS_TASK_CLEAN"], [16, 0, 1, "c.NRF_CACHE_HAS_TASK_FLUSH", "NRF_CACHE_HAS_TASK_FLUSH"], [16, 0, 1, "c.NRF_CACHE_HAS_TASK_SAVE_RESTORE", "NRF_CACHE_HAS_TASK_SAVE_RESTORE"], [16, 0, 1, "c.NRF_CACHE_MODE_RAMSIZE_MAX", "NRF_CACHE_MODE_RAMSIZE_MAX"], [16, 1, 1, "c.nrf_cache_ramsize_t.NRF_CACHE_RAMSIZE_ALL", "NRF_CACHE_RAMSIZE_ALL"], [16, 1, 1, "c.nrf_cache_ramsize_t.NRF_CACHE_RAMSIZE_HALF", "NRF_CACHE_RAMSIZE_HALF"], [16, 1, 1, "c.nrf_cache_ramsize_t.NRF_CACHE_RAMSIZE_NONE", "NRF_CACHE_RAMSIZE_NONE"], [16, 1, 1, "c.nrf_cache_ramsize_t.NRF_CACHE_RAMSIZE_QUARTER", "NRF_CACHE_RAMSIZE_QUARTER"], [16, 1, 1, "c.nrf_cache_region_t.NRF_CACHE_REGION_FLASH", "NRF_CACHE_REGION_FLASH"], [16, 1, 1, "c.nrf_cache_region_t.NRF_CACHE_REGION_XIP", "NRF_CACHE_REGION_XIP"], [16, 1, 1, "c.nrf_cache_task_t.NRF_CACHE_TASK_CLEANCACHE", "NRF_CACHE_TASK_CLEANCACHE"], [16, 1, 1, "c.nrf_cache_task_t.NRF_CACHE_TASK_CLEANLINE", "NRF_CACHE_TASK_CLEANLINE"], [16, 1, 1, "c.nrf_cache_task_t.NRF_CACHE_TASK_ERASE", "NRF_CACHE_TASK_ERASE"], [16, 1, 1, "c.nrf_cache_task_t.NRF_CACHE_TASK_FLUSHCACHE", "NRF_CACHE_TASK_FLUSHCACHE"], [16, 1, 1, "c.nrf_cache_task_t.NRF_CACHE_TASK_FLUSHLINE", "NRF_CACHE_TASK_FLUSHLINE"], [16, 1, 1, "c.nrf_cache_task_t.NRF_CACHE_TASK_INVALIDATECACHE", "NRF_CACHE_TASK_INVALIDATECACHE"], [16, 1, 1, "c.nrf_cache_task_t.NRF_CACHE_TASK_INVALIDATELINE", "NRF_CACHE_TASK_INVALIDATELINE"], [16, 1, 1, "c.nrf_cache_task_t.NRF_CACHE_TASK_RESTORE", "NRF_CACHE_TASK_RESTORE"], [16, 1, 1, "c.nrf_cache_task_t.NRF_CACHE_TASK_SAVE", "NRF_CACHE_TASK_SAVE"], [18, 1, 1, "c.nrf_ccm_datarate_t.NRF_CCM_DATARATE_125K", "NRF_CCM_DATARATE_125K"], [18, 1, 1, "c.nrf_ccm_datarate_t.NRF_CCM_DATARATE_1M", "NRF_CCM_DATARATE_1M"], [18, 1, 1, "c.nrf_ccm_datarate_t.NRF_CCM_DATARATE_250K", "NRF_CCM_DATARATE_250K"], [18, 1, 1, "c.nrf_ccm_datarate_t.NRF_CCM_DATARATE_2M", "NRF_CCM_DATARATE_2M"], [18, 1, 1, "c.nrf_ccm_datarate_t.NRF_CCM_DATARATE_4M", "NRF_CCM_DATARATE_4M"], [18, 1, 1, "c.nrf_ccm_datarate_t.NRF_CCM_DATARATE_500K", "NRF_CCM_DATARATE_500K"], [18, 1, 1, "c.nrf_ccm_error_t.NRF_CCM_ERROR_ENCRYPTION_TOO_SLOW", "NRF_CCM_ERROR_ENCRYPTION_TOO_SLOW"], [18, 1, 1, "c.nrf_ccm_error_t.NRF_CCM_ERROR_NO_ERROR", "NRF_CCM_ERROR_NO_ERROR"], [18, 1, 1, "c.nrf_ccm_error_t.NRF_CCM_ERROR_PREMATURE_INPTR_END", "NRF_CCM_ERROR_PREMATURE_INPTR_END"], [18, 1, 1, "c.nrf_ccm_error_t.NRF_CCM_ERROR_PREMATURE_OUTPTR_END", "NRF_CCM_ERROR_PREMATURE_OUTPTR_END"], [18, 1, 1, "c.nrf_ccm_event_t.NRF_CCM_EVENT_END", "NRF_CCM_EVENT_END"], [18, 1, 1, "c.nrf_ccm_event_t.NRF_CCM_EVENT_ENDCRYPT", "NRF_CCM_EVENT_ENDCRYPT"], [18, 1, 1, "c.nrf_ccm_event_t.NRF_CCM_EVENT_ENDKSGEN", "NRF_CCM_EVENT_ENDKSGEN"], [18, 1, 1, "c.nrf_ccm_event_t.NRF_CCM_EVENT_ERROR", "NRF_CCM_EVENT_ERROR"], [18, 0, 1, "c.NRF_CCM_HAS_ADATAMASK", "NRF_CCM_HAS_ADATAMASK"], [18, 0, 1, "c.NRF_CCM_HAS_CNFPTR", "NRF_CCM_HAS_CNFPTR"], [18, 0, 1, "c.NRF_CCM_HAS_DATARATE", "NRF_CCM_HAS_DATARATE"], [18, 0, 1, "c.NRF_CCM_HAS_ERRORSTATUS", "NRF_CCM_HAS_ERRORSTATUS"], [18, 0, 1, "c.NRF_CCM_HAS_EVENT_END", "NRF_CCM_HAS_EVENT_END"], [18, 0, 1, "c.NRF_CCM_HAS_EVENT_ENDCRYPT", "NRF_CCM_HAS_EVENT_ENDCRYPT"], [18, 0, 1, "c.NRF_CCM_HAS_EVENT_ENDKSGEN", "NRF_CCM_HAS_EVENT_ENDKSGEN"], [18, 0, 1, "c.NRF_CCM_HAS_HEADERMASK", "NRF_CCM_HAS_HEADERMASK"], [18, 0, 1, "c.NRF_CCM_HAS_INPTR", "NRF_CCM_HAS_INPTR"], [18, 0, 1, "c.NRF_CCM_HAS_IN_AMOUNT", "NRF_CCM_HAS_IN_AMOUNT"], [18, 0, 1, "c.NRF_CCM_HAS_IN_PTR", "NRF_CCM_HAS_IN_PTR"], [18, 0, 1, "c.NRF_CCM_HAS_KEY", "NRF_CCM_HAS_KEY"], [18, 0, 1, "c.NRF_CCM_HAS_MACSTATUS", "NRF_CCM_HAS_MACSTATUS"], [18, 0, 1, "c.NRF_CCM_HAS_MAXPACKETSIZE", "NRF_CCM_HAS_MAXPACKETSIZE"], [18, 0, 1, "c.NRF_CCM_HAS_MICSTATUS", "NRF_CCM_HAS_MICSTATUS"], [18, 0, 1, "c.NRF_CCM_HAS_MODE_DATARATE_125KBIT", "NRF_CCM_HAS_MODE_DATARATE_125KBIT"], [18, 0, 1, "c.NRF_CCM_HAS_MODE_DATARATE_125KBPS", "NRF_CCM_HAS_MODE_DATARATE_125KBPS"], [18, 0, 1, "c.NRF_CCM_HAS_MODE_DATARATE_250KBIT", "NRF_CCM_HAS_MODE_DATARATE_250KBIT"], [18, 0, 1, "c.NRF_CCM_HAS_MODE_DATARATE_4MBIT", "NRF_CCM_HAS_MODE_DATARATE_4MBIT"], [18, 0, 1, "c.NRF_CCM_HAS_MODE_DATARATE_500KBIT", "NRF_CCM_HAS_MODE_DATARATE_500KBIT"], [18, 0, 1, "c.NRF_CCM_HAS_MODE_DATARATE_500KBPS", "NRF_CCM_HAS_MODE_DATARATE_500KBPS"], [18, 0, 1, "c.NRF_CCM_HAS_MODE_FAST_DECRYPTION", "NRF_CCM_HAS_MODE_FAST_DECRYPTION"], [18, 0, 1, "c.NRF_CCM_HAS_MODE_LENGTH", "NRF_CCM_HAS_MODE_LENGTH"], [18, 0, 1, "c.NRF_CCM_HAS_MODE_MACLEN", "NRF_CCM_HAS_MODE_MACLEN"], [18, 0, 1, "c.NRF_CCM_HAS_MODE_PROTOCOL", "NRF_CCM_HAS_MODE_PROTOCOL"], [18, 0, 1, "c.NRF_CCM_HAS_MODE_PROTOCOL_BLE", "NRF_CCM_HAS_MODE_PROTOCOL_BLE"], [18, 0, 1, "c.NRF_CCM_HAS_MODE_PROTOCOL_IEEE802154", "NRF_CCM_HAS_MODE_PROTOCOL_IEEE802154"], [18, 0, 1, "c.NRF_CCM_HAS_NONCE", "NRF_CCM_HAS_NONCE"], [18, 0, 1, "c.NRF_CCM_HAS_OUTPTR", "NRF_CCM_HAS_OUTPTR"], [18, 0, 1, "c.NRF_CCM_HAS_OUT_AMOUNT", "NRF_CCM_HAS_OUT_AMOUNT"], [18, 0, 1, "c.NRF_CCM_HAS_OUT_PTR", "NRF_CCM_HAS_OUT_PTR"], [18, 0, 1, "c.NRF_CCM_HAS_RATEOVERRIDE", "NRF_CCM_HAS_RATEOVERRIDE"], [18, 0, 1, "c.NRF_CCM_HAS_SCRATCHPTR", "NRF_CCM_HAS_SCRATCHPTR"], [18, 0, 1, "c.NRF_CCM_HAS_TASK_CRYPT", "NRF_CCM_HAS_TASK_CRYPT"], [18, 0, 1, "c.NRF_CCM_HAS_TASK_KSGEN", "NRF_CCM_HAS_TASK_KSGEN"], [18, 0, 1, "c.NRF_CCM_HAS_TASK_RATEOVERRIDE", "NRF_CCM_HAS_TASK_RATEOVERRIDE"], [18, 0, 1, "c.NRF_CCM_HAS_TASK_START", "NRF_CCM_HAS_TASK_START"], [18, 1, 1, "c.nrf_ccm_int_mask_t.NRF_CCM_INT_ENDCRYPT_MASK", "NRF_CCM_INT_ENDCRYPT_MASK"], [18, 1, 1, "c.nrf_ccm_int_mask_t.NRF_CCM_INT_ENDKSGEN_MASK", "NRF_CCM_INT_ENDKSGEN_MASK"], [18, 1, 1, "c.nrf_ccm_int_mask_t.NRF_CCM_INT_END_MASK", "NRF_CCM_INT_END_MASK"], [18, 1, 1, "c.nrf_ccm_int_mask_t.NRF_CCM_INT_ERROR_MASK", "NRF_CCM_INT_ERROR_MASK"], [18, 0, 1, "c.NRF_CCM_IV_SIZE", "NRF_CCM_IV_SIZE"], [18, 0, 1, "c.NRF_CCM_KEY_SIZE", "NRF_CCM_KEY_SIZE"], [18, 1, 1, "c.nrf_ccm_length_t.NRF_CCM_LENGTH_DEFAULT", "NRF_CCM_LENGTH_DEFAULT"], [18, 1, 1, "c.nrf_ccm_length_t.NRF_CCM_LENGTH_EXTENDED", "NRF_CCM_LENGTH_EXTENDED"], [18, 1, 1, "c.nrf_ccm_mode_t.NRF_CCM_MODE_DECRYPTION", "NRF_CCM_MODE_DECRYPTION"], [18, 1, 1, "c.nrf_ccm_mode_t.NRF_CCM_MODE_ENCRYPTION", "NRF_CCM_MODE_ENCRYPTION"], [18, 1, 1, "c.nrf_ccm_mode_t.NRF_CCM_MODE_FAST_DECRYPTION", "NRF_CCM_MODE_FAST_DECRYPTION"], [18, 1, 1, "c.nrf_ccm_maclen_t.NRF_CCM_MODE_MACLEN_M0", "NRF_CCM_MODE_MACLEN_M0"], [18, 1, 1, "c.nrf_ccm_maclen_t.NRF_CCM_MODE_MACLEN_M10", "NRF_CCM_MODE_MACLEN_M10"], [18, 1, 1, "c.nrf_ccm_maclen_t.NRF_CCM_MODE_MACLEN_M12", "NRF_CCM_MODE_MACLEN_M12"], [18, 1, 1, "c.nrf_ccm_maclen_t.NRF_CCM_MODE_MACLEN_M14", "NRF_CCM_MODE_MACLEN_M14"], [18, 1, 1, "c.nrf_ccm_maclen_t.NRF_CCM_MODE_MACLEN_M16", "NRF_CCM_MODE_MACLEN_M16"], [18, 1, 1, "c.nrf_ccm_maclen_t.NRF_CCM_MODE_MACLEN_M4", "NRF_CCM_MODE_MACLEN_M4"], [18, 1, 1, "c.nrf_ccm_maclen_t.NRF_CCM_MODE_MACLEN_M6", "NRF_CCM_MODE_MACLEN_M6"], [18, 1, 1, "c.nrf_ccm_maclen_t.NRF_CCM_MODE_MACLEN_M8", "NRF_CCM_MODE_MACLEN_M8"], [18, 1, 1, "c.nrf_ccm_protocol_t.NRF_CCM_MODE_PROTOCOL_BLE", "NRF_CCM_MODE_PROTOCOL_BLE"], [18, 1, 1, "c.nrf_ccm_protocol_t.NRF_CCM_MODE_PROTOCOL_IEEE802154", "NRF_CCM_MODE_PROTOCOL_IEEE802154"], [18, 0, 1, "c.NRF_CCM_PKTCTR_SIZE", "NRF_CCM_PKTCTR_SIZE"], [18, 1, 1, "c.nrf_ccm_short_mask_t.NRF_CCM_SHORT_ENDKSGEN_CRYPT_MASK", "NRF_CCM_SHORT_ENDKSGEN_CRYPT_MASK"], [18, 1, 1, "c.nrf_ccm_task_t.NRF_CCM_TASK_CRYPT", "NRF_CCM_TASK_CRYPT"], [18, 1, 1, "c.nrf_ccm_task_t.NRF_CCM_TASK_KSGEN", "NRF_CCM_TASK_KSGEN"], [18, 1, 1, "c.nrf_ccm_task_t.NRF_CCM_TASK_RATEOVERRIDE", "NRF_CCM_TASK_RATEOVERRIDE"], [18, 1, 1, "c.nrf_ccm_task_t.NRF_CCM_TASK_START", "NRF_CCM_TASK_START"], [18, 1, 1, "c.nrf_ccm_task_t.NRF_CCM_TASK_STOP", "NRF_CCM_TASK_STOP"], [21, 1, 1, "c.nrf_clock_domain_t.NRF_CLOCK_DOMAIN_HFCLK", "NRF_CLOCK_DOMAIN_HFCLK"], [21, 1, 1, "c.nrf_clock_domain_t.NRF_CLOCK_DOMAIN_HFCLK192M", "NRF_CLOCK_DOMAIN_HFCLK192M"], [21, 1, 1, "c.nrf_clock_domain_t.NRF_CLOCK_DOMAIN_HFCLKAUDIO", "NRF_CLOCK_DOMAIN_HFCLKAUDIO"], [21, 1, 1, "c.nrf_clock_domain_t.NRF_CLOCK_DOMAIN_LFCLK", "NRF_CLOCK_DOMAIN_LFCLK"], [21, 1, 1, "c.nrf_clock_event_t.NRF_CLOCK_EVENT_CTSTARTED", "NRF_CLOCK_EVENT_CTSTARTED"], [21, 1, 1, "c.nrf_clock_event_t.NRF_CLOCK_EVENT_CTSTOPPED", "NRF_CLOCK_EVENT_CTSTOPPED"], [21, 1, 1, "c.nrf_clock_event_t.NRF_CLOCK_EVENT_CTTO", "NRF_CLOCK_EVENT_CTTO"], [21, 1, 1, "c.nrf_clock_event_t.NRF_CLOCK_EVENT_DONE", "NRF_CLOCK_EVENT_DONE"], [21, 1, 1, "c.nrf_clock_event_t.NRF_CLOCK_EVENT_HFCLK192MSTARTED", "NRF_CLOCK_EVENT_HFCLK192MSTARTED"], [21, 1, 1, "c.nrf_clock_event_t.NRF_CLOCK_EVENT_HFCLKSTARTED", "NRF_CLOCK_EVENT_HFCLKSTARTED"], [21, 1, 1, "c.nrf_clock_event_t.NRF_CLOCK_EVENT_LFCLKSTARTED", "NRF_CLOCK_EVENT_LFCLKSTARTED"], [21, 1, 1, "c.nrf_clock_event_t.NRF_CLOCK_EVENT_PLLSTARTED", "NRF_CLOCK_EVENT_PLLSTARTED"], [21, 0, 1, "c.NRF_CLOCK_HAS_CALIBRATION", "NRF_CLOCK_HAS_CALIBRATION"], [21, 0, 1, "c.NRF_CLOCK_HAS_CALIBRATION_TIMER", "NRF_CLOCK_HAS_CALIBRATION_TIMER"], [21, 0, 1, "c.NRF_CLOCK_HAS_HFCLK192M", "NRF_CLOCK_HAS_HFCLK192M"], [21, 0, 1, "c.NRF_CLOCK_HAS_HFCLKAUDIO", "NRF_CLOCK_HAS_HFCLKAUDIO"], [21, 0, 1, "c.NRF_CLOCK_HAS_HFCLKSRC", "NRF_CLOCK_HAS_HFCLKSRC"], [21, 0, 1, "c.NRF_CLOCK_HAS_HFCLK_ALWAYSRUN", "NRF_CLOCK_HAS_HFCLK_ALWAYSRUN"], [21, 0, 1, "c.NRF_CLOCK_HAS_HFCLK_DIV", "NRF_CLOCK_HAS_HFCLK_DIV"], [21, 0, 1, "c.NRF_CLOCK_HAS_LFCLK_ALWAYSRUN", "NRF_CLOCK_HAS_LFCLK_ALWAYSRUN"], [21, 0, 1, "c.NRF_CLOCK_HAS_LFCLK_TYPE", "NRF_CLOCK_HAS_LFCLK_TYPE"], [21, 0, 1, "c.NRF_CLOCK_HAS_PLL", "NRF_CLOCK_HAS_PLL"], [21, 0, 1, "c.NRF_CLOCK_HAS_XO", "NRF_CLOCK_HAS_XO"], [21, 0, 1, "c.NRF_CLOCK_HFCLKRUN_STATUS_Msk", "NRF_CLOCK_HFCLKRUN_STATUS_Msk"], [21, 0, 1, "c.NRF_CLOCK_HFCLKRUN_STATUS_Pos", "NRF_CLOCK_HFCLKRUN_STATUS_Pos"], [21, 0, 1, "c.NRF_CLOCK_HFCLKSTAT_STATE_Msk", "NRF_CLOCK_HFCLKSTAT_STATE_Msk"], [21, 0, 1, "c.NRF_CLOCK_HFCLKSTAT_STATE_Pos", "NRF_CLOCK_HFCLKSTAT_STATE_Pos"], [21, 1, 1, "c.nrf_clock_hfclk_div_t.NRF_CLOCK_HFCLK_DIV_1", "NRF_CLOCK_HFCLK_DIV_1"], [21, 1, 1, "c.nrf_clock_hfclk_div_t.NRF_CLOCK_HFCLK_DIV_2", "NRF_CLOCK_HFCLK_DIV_2"], [21, 1, 1, "c.nrf_clock_hfclk_div_t.NRF_CLOCK_HFCLK_DIV_4", "NRF_CLOCK_HFCLK_DIV_4"], [21, 1, 1, "c.nrf_clock_hfclk_t.NRF_CLOCK_HFCLK_HIGH_ACCURACY", "NRF_CLOCK_HFCLK_HIGH_ACCURACY"], [21, 1, 1, "c.nrf_clock_hfclk_t.NRF_CLOCK_HFCLK_LOW_ACCURACY", "NRF_CLOCK_HFCLK_LOW_ACCURACY"], [21, 0, 1, "c.NRF_CLOCK_INTENSET_HFCLKSTARTED_Msk", "NRF_CLOCK_INTENSET_HFCLKSTARTED_Msk"], [21, 0, 1, "c.NRF_CLOCK_INTENSET_LFCLKSTARTED_Msk", "NRF_CLOCK_INTENSET_LFCLKSTARTED_Msk"], [21, 1, 1, "c.nrf_clock_int_mask_t.NRF_CLOCK_INT_CTSTARTED_MASK", "NRF_CLOCK_INT_CTSTARTED_MASK"], [21, 1, 1, "c.nrf_clock_int_mask_t.NRF_CLOCK_INT_CTSTOPPED_MASK", "NRF_CLOCK_INT_CTSTOPPED_MASK"], [21, 1, 1, "c.nrf_clock_int_mask_t.NRF_CLOCK_INT_CTTO_MASK", "NRF_CLOCK_INT_CTTO_MASK"], [21, 1, 1, "c.nrf_clock_int_mask_t.NRF_CLOCK_INT_DONE_MASK", "NRF_CLOCK_INT_DONE_MASK"], [21, 1, 1, "c.nrf_clock_int_mask_t.NRF_CLOCK_INT_HF192M_STARTED_MASK", "NRF_CLOCK_INT_HF192M_STARTED_MASK"], [21, 1, 1, "c.nrf_clock_int_mask_t.NRF_CLOCK_INT_HF_STARTED_MASK", "NRF_CLOCK_INT_HF_STARTED_MASK"], [21, 1, 1, "c.nrf_clock_int_mask_t.NRF_CLOCK_INT_LF_STARTED_MASK", "NRF_CLOCK_INT_LF_STARTED_MASK"], [21, 0, 1, "c.NRF_CLOCK_LFCLKALWAYSRUN_ALWAYSRUN_Msk", "NRF_CLOCK_LFCLKALWAYSRUN_ALWAYSRUN_Msk"], [21, 0, 1, "c.NRF_CLOCK_LFCLKALWAYSRUN_ALWAYSRUN_Pos", "NRF_CLOCK_LFCLKALWAYSRUN_ALWAYSRUN_Pos"], [21, 0, 1, "c.NRF_CLOCK_LFCLKRUN_STATUS_Msk", "NRF_CLOCK_LFCLKRUN_STATUS_Msk"], [21, 0, 1, "c.NRF_CLOCK_LFCLKRUN_STATUS_NotTriggered", "NRF_CLOCK_LFCLKRUN_STATUS_NotTriggered"], [21, 0, 1, "c.NRF_CLOCK_LFCLKRUN_STATUS_Pos", "NRF_CLOCK_LFCLKRUN_STATUS_Pos"], [21, 0, 1, "c.NRF_CLOCK_LFCLKRUN_STATUS_Triggered", "NRF_CLOCK_LFCLKRUN_STATUS_Triggered"], [21, 0, 1, "c.NRF_CLOCK_LFCLKSRCCOPY_SRC_Msk", "NRF_CLOCK_LFCLKSRCCOPY_SRC_Msk"], [21, 0, 1, "c.NRF_CLOCK_LFCLKSRCCOPY_SRC_Pos", "NRF_CLOCK_LFCLKSRCCOPY_SRC_Pos"], [21, 0, 1, "c.NRF_CLOCK_LFCLKSTAT_ALWAYSRUNNING_Msk", "NRF_CLOCK_LFCLKSTAT_ALWAYSRUNNING_Msk"], [21, 0, 1, "c.NRF_CLOCK_LFCLKSTAT_ALWAYSRUNNING_Pos", "NRF_CLOCK_LFCLKSTAT_ALWAYSRUNNING_Pos"], [21, 0, 1, "c.NRF_CLOCK_LFCLKSTAT_SRC_Msk", "NRF_CLOCK_LFCLKSTAT_SRC_Msk"], [21, 0, 1, "c.NRF_CLOCK_LFCLKSTAT_SRC_Pos", "NRF_CLOCK_LFCLKSTAT_SRC_Pos"], [21, 0, 1, "c.NRF_CLOCK_LFCLKSTAT_STATE_Msk", "NRF_CLOCK_LFCLKSTAT_STATE_Msk"], [21, 0, 1, "c.NRF_CLOCK_LFCLKSTAT_STATE_Pos", "NRF_CLOCK_LFCLKSTAT_STATE_Pos"], [21, 1, 1, "c.nrf_clock_lfclk_t.NRF_CLOCK_LFCLK_LFULP", "NRF_CLOCK_LFCLK_LFULP"], [21, 1, 1, "c.nrf_clock_lfclk_t.NRF_CLOCK_LFCLK_RC", "NRF_CLOCK_LFCLK_RC"], [21, 1, 1, "c.nrf_clock_lfclk_t.NRF_CLOCK_LFCLK_SYNTH", "NRF_CLOCK_LFCLK_SYNTH"], [21, 1, 1, "c.nrf_clock_lfclk_t.NRF_CLOCK_LFCLK_XTAL", "NRF_CLOCK_LFCLK_XTAL"], [21, 1, 1, "c.nrf_clock_lfclk_t.NRF_CLOCK_LFCLK_XTAL_FULL_SWING", "NRF_CLOCK_LFCLK_XTAL_FULL_SWING"], [21, 1, 1, "c.nrf_clock_lfclk_t.NRF_CLOCK_LFCLK_XTAL_LOW_SWING", "NRF_CLOCK_LFCLK_XTAL_LOW_SWING"], [21, 1, 1, "c.nrf_clock_start_task_status_t.NRF_CLOCK_START_TASK_NOT_TRIGGERED", "NRF_CLOCK_START_TASK_NOT_TRIGGERED"], [21, 1, 1, "c.nrf_clock_start_task_status_t.NRF_CLOCK_START_TASK_TRIGGERED", "NRF_CLOCK_START_TASK_TRIGGERED"], [21, 1, 1, "c.nrf_clock_task_t.NRF_CLOCK_TASK_CAL", "NRF_CLOCK_TASK_CAL"], [21, 1, 1, "c.nrf_clock_task_t.NRF_CLOCK_TASK_CTSTART", "NRF_CLOCK_TASK_CTSTART"], [21, 1, 1, "c.nrf_clock_task_t.NRF_CLOCK_TASK_CTSTOP", "NRF_CLOCK_TASK_CTSTOP"], [21, 1, 1, "c.nrf_clock_task_t.NRF_CLOCK_TASK_HFCLK192MSTART", "NRF_CLOCK_TASK_HFCLK192MSTART"], [21, 1, 1, "c.nrf_clock_task_t.NRF_CLOCK_TASK_HFCLK192MSTOP", "NRF_CLOCK_TASK_HFCLK192MSTOP"], [21, 1, 1, "c.nrf_clock_task_t.NRF_CLOCK_TASK_HFCLKAUDIOSTOP", "NRF_CLOCK_TASK_HFCLKAUDIOSTOP"], [21, 1, 1, "c.nrf_clock_task_t.NRF_CLOCK_TASK_HFCLKSTART", "NRF_CLOCK_TASK_HFCLKSTART"], [21, 1, 1, "c.nrf_clock_task_t.NRF_CLOCK_TASK_HFCLKSTOP", "NRF_CLOCK_TASK_HFCLKSTOP"], [21, 1, 1, "c.nrf_clock_task_t.NRF_CLOCK_TASK_LFCLKSTART", "NRF_CLOCK_TASK_LFCLKSTART"], [21, 1, 1, "c.nrf_clock_task_t.NRF_CLOCK_TASK_LFCLKSTOP", "NRF_CLOCK_TASK_LFCLKSTOP"], [21, 1, 1, "c.nrf_clock_task_t.NRF_CLOCK_TASK_PLLSTART", "NRF_CLOCK_TASK_PLLSTART"], [21, 1, 1, "c.nrf_clock_task_t.NRF_CLOCK_TASK_PLLSTOP", "NRF_CLOCK_TASK_PLLSTOP"], [24, 1, 1, "c.nrf_comp_event_t.NRF_COMP_EVENT_CROSS", "NRF_COMP_EVENT_CROSS"], [24, 1, 1, "c.nrf_comp_event_t.NRF_COMP_EVENT_DOWN", "NRF_COMP_EVENT_DOWN"], [24, 1, 1, "c.nrf_comp_event_t.NRF_COMP_EVENT_READY", "NRF_COMP_EVENT_READY"], [24, 1, 1, "c.nrf_comp_event_t.NRF_COMP_EVENT_UP", "NRF_COMP_EVENT_UP"], [24, 0, 1, "c.NRF_COMP_HAS_AIN_AS_PIN", "NRF_COMP_HAS_AIN_AS_PIN"], [24, 0, 1, "c.NRF_COMP_HAS_ISOURCE", "NRF_COMP_HAS_ISOURCE"], [24, 1, 1, "c.nrf_comp_hyst_t.NRF_COMP_HYST_40MV", "NRF_COMP_HYST_40MV"], [24, 1, 1, "c.nrf_comp_hyst_t.NRF_COMP_HYST_50MV", "NRF_COMP_HYST_50MV"], [24, 1, 1, "c.nrf_comp_hyst_t.NRF_COMP_HYST_NO_HYST", "NRF_COMP_HYST_NO_HYST"], [24, 1, 1, "c.nrf_comp_int_mask_t.NRF_COMP_INT_CROSS_MASK", "NRF_COMP_INT_CROSS_MASK"], [24, 1, 1, "c.nrf_comp_int_mask_t.NRF_COMP_INT_DOWN_MASK", "NRF_COMP_INT_DOWN_MASK"], [24, 1, 1, "c.nrf_comp_int_mask_t.NRF_COMP_INT_READY_MASK", "NRF_COMP_INT_READY_MASK"], [24, 1, 1, "c.nrf_comp_int_mask_t.NRF_COMP_INT_UP_MASK", "NRF_COMP_INT_UP_MASK"], [24, 1, 1, "c.nrf_isource_t.NRF_COMP_ISOURCE_IEN_10UA", "NRF_COMP_ISOURCE_IEN_10UA"], [24, 1, 1, "c.nrf_isource_t.NRF_COMP_ISOURCE_IEN_2UA5", "NRF_COMP_ISOURCE_IEN_2UA5"], [24, 1, 1, "c.nrf_isource_t.NRF_COMP_ISOURCE_IEN_5UA", "NRF_COMP_ISOURCE_IEN_5UA"], [24, 1, 1, "c.nrf_isource_t.NRF_COMP_ISOURCE_OFF", "NRF_COMP_ISOURCE_OFF"], [24, 1, 1, "c.nrf_comp_main_mode_t.NRF_COMP_MAIN_MODE_DIFF", "NRF_COMP_MAIN_MODE_DIFF"], [24, 1, 1, "c.nrf_comp_main_mode_t.NRF_COMP_MAIN_MODE_SE", "NRF_COMP_MAIN_MODE_SE"], [24, 1, 1, "c.nrf_comp_ref_t.NRF_COMP_REF_AREF", "NRF_COMP_REF_AREF"], [24, 1, 1, "c.nrf_comp_ref_t.NRF_COMP_REF_AVDDAO1V8", "NRF_COMP_REF_AVDDAO1V8"], [24, 1, 1, "c.nrf_comp_ref_t.NRF_COMP_REF_INT_1V2", "NRF_COMP_REF_INT_1V2"], [24, 1, 1, "c.nrf_comp_ref_t.NRF_COMP_REF_INT_1V8", "NRF_COMP_REF_INT_1V8"], [24, 1, 1, "c.nrf_comp_ref_t.NRF_COMP_REF_INT_2V4", "NRF_COMP_REF_INT_2V4"], [24, 1, 1, "c.nrf_comp_ref_t.NRF_COMP_REF_VDD", "NRF_COMP_REF_VDD"], [24, 1, 1, "c.nrf_comp_short_mask_t.NRF_COMP_SHORT_STOP_CROSS_MASK", "NRF_COMP_SHORT_STOP_CROSS_MASK"], [24, 1, 1, "c.nrf_comp_short_mask_t.NRF_COMP_SHORT_STOP_DOWN_MASK", "NRF_COMP_SHORT_STOP_DOWN_MASK"], [24, 1, 1, "c.nrf_comp_short_mask_t.NRF_COMP_SHORT_STOP_UP_MASK", "NRF_COMP_SHORT_STOP_UP_MASK"], [24, 1, 1, "c.nrf_comp_sp_mode_t.NRF_COMP_SP_MODE_HIGH", "NRF_COMP_SP_MODE_HIGH"], [24, 1, 1, "c.nrf_comp_sp_mode_t.NRF_COMP_SP_MODE_LOW", "NRF_COMP_SP_MODE_LOW"], [24, 1, 1, "c.nrf_comp_sp_mode_t.NRF_COMP_SP_MODE_NORMAL", "NRF_COMP_SP_MODE_NORMAL"], [24, 1, 1, "c.nrf_comp_task_t.NRF_COMP_TASK_SAMPLE", "NRF_COMP_TASK_SAMPLE"], [24, 1, 1, "c.nrf_comp_task_t.NRF_COMP_TASK_START", "NRF_COMP_TASK_START"], [24, 1, 1, "c.nrf_comp_task_t.NRF_COMP_TASK_STOP", "NRF_COMP_TASK_STOP"], [27, 1, 1, "c.nrf_cracen_event_t.NRF_CRACEN_EVENT_CRYPTOMASTER", "NRF_CRACEN_EVENT_CRYPTOMASTER"], [27, 1, 1, "c.nrf_cracen_event_t.NRF_CRACEN_EVENT_PKE_IKG", "NRF_CRACEN_EVENT_PKE_IKG"], [27, 1, 1, "c.nrf_cracen_event_t.NRF_CRACEN_EVENT_RNG", "NRF_CRACEN_EVENT_RNG"], [27, 1, 1, "c.nrf_cracen_int_mask_t.NRF_CRACEN_INT_CRYPTOMASTER_MASK", "NRF_CRACEN_INT_CRYPTOMASTER_MASK"], [27, 1, 1, "c.nrf_cracen_int_mask_t.NRF_CRACEN_INT_PKE_IKG_MASK", "NRF_CRACEN_INT_PKE_IKG_MASK"], [27, 1, 1, "c.nrf_cracen_int_mask_t.NRF_CRACEN_INT_RNG_MASK", "NRF_CRACEN_INT_RNG_MASK"], [27, 1, 1, "c.nrf_cracen_module_mask_t.NRF_CRACEN_MODULE_CRYPTOMASTER_MASK", "NRF_CRACEN_MODULE_CRYPTOMASTER_MASK"], [27, 1, 1, "c.nrf_cracen_module_mask_t.NRF_CRACEN_MODULE_PKE_IKG_MASK", "NRF_CRACEN_MODULE_PKE_IKG_MASK"], [27, 1, 1, "c.nrf_cracen_module_mask_t.NRF_CRACEN_MODULE_RNG_MASK", "NRF_CRACEN_MODULE_RNG_MASK"], [27, 0, 1, "c.NRF_CRACEN_SEED_COUNT", "NRF_CRACEN_SEED_COUNT"], [29, 1, 1, "c.nrf_ctrlap_event_t.NRF_CTRLAP_EVENT_RXREADY", "NRF_CTRLAP_EVENT_RXREADY"], [29, 1, 1, "c.nrf_ctrlap_event_t.NRF_CTRLAP_EVENT_TXDONE", "NRF_CTRLAP_EVENT_TXDONE"], [29, 1, 1, "c.nrf_ctrlap_int_mask_t.NRF_CTRLAP_INT_RXREADY_MASK", "NRF_CTRLAP_INT_RXREADY_MASK"], [29, 1, 1, "c.nrf_ctrlap_int_mask_t.NRF_CTRLAP_INT_TXDONE_MASK", "NRF_CTRLAP_INT_TXDONE_MASK"], [29, 1, 1, "c.nrf_ctrlap_bootmode_t.NRF_CTRLAP_MODE_NORMAL", "NRF_CTRLAP_MODE_NORMAL"], [29, 1, 1, "c.nrf_ctrlap_bootmode_t.NRF_CTRLAP_MODE_ROM_OPERATION", "NRF_CTRLAP_MODE_ROM_OPERATION"], [34, 1, 1, "c.nrf_dppi_channel_group_t.NRF_DPPI_CHANNEL_GROUP0", "NRF_DPPI_CHANNEL_GROUP0"], [34, 1, 1, "c.nrf_dppi_channel_group_t.NRF_DPPI_CHANNEL_GROUP1", "NRF_DPPI_CHANNEL_GROUP1"], [34, 1, 1, "c.nrf_dppi_channel_group_t.NRF_DPPI_CHANNEL_GROUP2", "NRF_DPPI_CHANNEL_GROUP2"], [34, 1, 1, "c.nrf_dppi_channel_group_t.NRF_DPPI_CHANNEL_GROUP3", "NRF_DPPI_CHANNEL_GROUP3"], [34, 1, 1, "c.nrf_dppi_channel_group_t.NRF_DPPI_CHANNEL_GROUP4", "NRF_DPPI_CHANNEL_GROUP4"], [34, 1, 1, "c.nrf_dppi_channel_group_t.NRF_DPPI_CHANNEL_GROUP5", "NRF_DPPI_CHANNEL_GROUP5"], [34, 0, 1, "c.NRF_DPPI_ENDPOINT_CLEAR", "NRF_DPPI_ENDPOINT_CLEAR"], [34, 0, 1, "c.NRF_DPPI_ENDPOINT_SETUP", "NRF_DPPI_ENDPOINT_SETUP"], [34, 1, 1, "c.nrf_dppi_task_t.NRF_DPPI_TASK_CHG0_DIS", "NRF_DPPI_TASK_CHG0_DIS"], [34, 1, 1, "c.nrf_dppi_task_t.NRF_DPPI_TASK_CHG0_EN", "NRF_DPPI_TASK_CHG0_EN"], [34, 1, 1, "c.nrf_dppi_task_t.NRF_DPPI_TASK_CHG1_DIS", "NRF_DPPI_TASK_CHG1_DIS"], [34, 1, 1, "c.nrf_dppi_task_t.NRF_DPPI_TASK_CHG1_EN", "NRF_DPPI_TASK_CHG1_EN"], [34, 1, 1, "c.nrf_dppi_task_t.NRF_DPPI_TASK_CHG2_DIS", "NRF_DPPI_TASK_CHG2_DIS"], [34, 1, 1, "c.nrf_dppi_task_t.NRF_DPPI_TASK_CHG2_EN", "NRF_DPPI_TASK_CHG2_EN"], [34, 1, 1, "c.nrf_dppi_task_t.NRF_DPPI_TASK_CHG3_DIS", "NRF_DPPI_TASK_CHG3_DIS"], [34, 1, 1, "c.nrf_dppi_task_t.NRF_DPPI_TASK_CHG3_EN", "NRF_DPPI_TASK_CHG3_EN"], [34, 1, 1, "c.nrf_dppi_task_t.NRF_DPPI_TASK_CHG4_DIS", "NRF_DPPI_TASK_CHG4_DIS"], [34, 1, 1, "c.nrf_dppi_task_t.NRF_DPPI_TASK_CHG4_EN", "NRF_DPPI_TASK_CHG4_EN"], [34, 1, 1, "c.nrf_dppi_task_t.NRF_DPPI_TASK_CHG5_DIS", "NRF_DPPI_TASK_CHG5_DIS"], [34, 1, 1, "c.nrf_dppi_task_t.NRF_DPPI_TASK_CHG5_EN", "NRF_DPPI_TASK_CHG5_EN"], [37, 1, 1, "c.nrf_ecb_event_t.NRF_ECB_EVENT_END", "NRF_ECB_EVENT_END"], [37, 1, 1, "c.nrf_ecb_event_t.NRF_ECB_EVENT_ENDECB", "NRF_ECB_EVENT_ENDECB"], [37, 1, 1, "c.nrf_ecb_event_t.NRF_ECB_EVENT_ERROR", "NRF_ECB_EVENT_ERROR"], [37, 1, 1, "c.nrf_ecb_event_t.NRF_ECB_EVENT_ERRORECB", "NRF_ECB_EVENT_ERRORECB"], [37, 0, 1, "c.NRF_ECB_HAS_ECBDATAPTR", "NRF_ECB_HAS_ECBDATAPTR"], [37, 0, 1, "c.NRF_ECB_HAS_EVENT_END", "NRF_ECB_HAS_EVENT_END"], [37, 0, 1, "c.NRF_ECB_HAS_EVENT_ENDECB", "NRF_ECB_HAS_EVENT_ENDECB"], [37, 0, 1, "c.NRF_ECB_HAS_EVENT_ERROR", "NRF_ECB_HAS_EVENT_ERROR"], [37, 0, 1, "c.NRF_ECB_HAS_EVENT_ERRORECB", "NRF_ECB_HAS_EVENT_ERRORECB"], [37, 0, 1, "c.NRF_ECB_HAS_IN_AMOUNT", "NRF_ECB_HAS_IN_AMOUNT"], [37, 0, 1, "c.NRF_ECB_HAS_IN_PTR", "NRF_ECB_HAS_IN_PTR"], [37, 0, 1, "c.NRF_ECB_HAS_KEY", "NRF_ECB_HAS_KEY"], [37, 0, 1, "c.NRF_ECB_HAS_OUT_AMOUNT", "NRF_ECB_HAS_OUT_AMOUNT"], [37, 0, 1, "c.NRF_ECB_HAS_OUT_PTR", "NRF_ECB_HAS_OUT_PTR"], [37, 0, 1, "c.NRF_ECB_HAS_TASK_START", "NRF_ECB_HAS_TASK_START"], [37, 0, 1, "c.NRF_ECB_HAS_TASK_STARTECB", "NRF_ECB_HAS_TASK_STARTECB"], [37, 0, 1, "c.NRF_ECB_HAS_TASK_STOP", "NRF_ECB_HAS_TASK_STOP"], [37, 0, 1, "c.NRF_ECB_HAS_TASK_STOPECB", "NRF_ECB_HAS_TASK_STOPECB"], [37, 1, 1, "c.nrf_ecb_int_mask_t.NRF_ECB_INT_ENDECB_MASK", "NRF_ECB_INT_ENDECB_MASK"], [37, 1, 1, "c.nrf_ecb_int_mask_t.NRF_ECB_INT_END_MASK", "NRF_ECB_INT_END_MASK"], [37, 1, 1, "c.nrf_ecb_int_mask_t.NRF_ECB_INT_ERRORECB_MASK", "NRF_ECB_INT_ERRORECB_MASK"], [37, 1, 1, "c.nrf_ecb_int_mask_t.NRF_ECB_INT_ERROR_MASK", "NRF_ECB_INT_ERROR_MASK"], [37, 1, 1, "c.nrf_ecb_task_t.NRF_ECB_TASK_START", "NRF_ECB_TASK_START"], [37, 1, 1, "c.nrf_ecb_task_t.NRF_ECB_TASK_STARTECB", "NRF_ECB_TASK_STARTECB"], [37, 1, 1, "c.nrf_ecb_task_t.NRF_ECB_TASK_STOP", "NRF_ECB_TASK_STOP"], [37, 1, 1, "c.nrf_ecb_task_t.NRF_ECB_TASK_STOPECB", "NRF_ECB_TASK_STOPECB"], [40, 1, 1, "c.nrf_egu_event_t.NRF_EGU_EVENT_TRIGGERED0", "NRF_EGU_EVENT_TRIGGERED0"], [40, 1, 1, "c.nrf_egu_event_t.NRF_EGU_EVENT_TRIGGERED1", "NRF_EGU_EVENT_TRIGGERED1"], [40, 1, 1, "c.nrf_egu_event_t.NRF_EGU_EVENT_TRIGGERED10", "NRF_EGU_EVENT_TRIGGERED10"], [40, 1, 1, "c.nrf_egu_event_t.NRF_EGU_EVENT_TRIGGERED11", "NRF_EGU_EVENT_TRIGGERED11"], [40, 1, 1, "c.nrf_egu_event_t.NRF_EGU_EVENT_TRIGGERED12", "NRF_EGU_EVENT_TRIGGERED12"], [40, 1, 1, "c.nrf_egu_event_t.NRF_EGU_EVENT_TRIGGERED13", "NRF_EGU_EVENT_TRIGGERED13"], [40, 1, 1, "c.nrf_egu_event_t.NRF_EGU_EVENT_TRIGGERED14", "NRF_EGU_EVENT_TRIGGERED14"], [40, 1, 1, "c.nrf_egu_event_t.NRF_EGU_EVENT_TRIGGERED15", "NRF_EGU_EVENT_TRIGGERED15"], [40, 1, 1, "c.nrf_egu_event_t.NRF_EGU_EVENT_TRIGGERED2", "NRF_EGU_EVENT_TRIGGERED2"], [40, 1, 1, "c.nrf_egu_event_t.NRF_EGU_EVENT_TRIGGERED3", "NRF_EGU_EVENT_TRIGGERED3"], [40, 1, 1, "c.nrf_egu_event_t.NRF_EGU_EVENT_TRIGGERED4", "NRF_EGU_EVENT_TRIGGERED4"], [40, 1, 1, "c.nrf_egu_event_t.NRF_EGU_EVENT_TRIGGERED5", "NRF_EGU_EVENT_TRIGGERED5"], [40, 1, 1, "c.nrf_egu_event_t.NRF_EGU_EVENT_TRIGGERED6", "NRF_EGU_EVENT_TRIGGERED6"], [40, 1, 1, "c.nrf_egu_event_t.NRF_EGU_EVENT_TRIGGERED7", "NRF_EGU_EVENT_TRIGGERED7"], [40, 1, 1, "c.nrf_egu_event_t.NRF_EGU_EVENT_TRIGGERED8", "NRF_EGU_EVENT_TRIGGERED8"], [40, 1, 1, "c.nrf_egu_event_t.NRF_EGU_EVENT_TRIGGERED9", "NRF_EGU_EVENT_TRIGGERED9"], [40, 0, 1, "c.NRF_EGU_INST_GET", "NRF_EGU_INST_GET"], [40, 1, 1, "c.nrf_egu_int_mask_t.NRF_EGU_INT_ALL", "NRF_EGU_INT_ALL"], [40, 1, 1, "c.nrf_egu_int_mask_t.NRF_EGU_INT_TRIGGERED0", "NRF_EGU_INT_TRIGGERED0"], [40, 1, 1, "c.nrf_egu_int_mask_t.NRF_EGU_INT_TRIGGERED1", "NRF_EGU_INT_TRIGGERED1"], [40, 1, 1, "c.nrf_egu_int_mask_t.NRF_EGU_INT_TRIGGERED10", "NRF_EGU_INT_TRIGGERED10"], [40, 1, 1, "c.nrf_egu_int_mask_t.NRF_EGU_INT_TRIGGERED11", "NRF_EGU_INT_TRIGGERED11"], [40, 1, 1, "c.nrf_egu_int_mask_t.NRF_EGU_INT_TRIGGERED12", "NRF_EGU_INT_TRIGGERED12"], [40, 1, 1, "c.nrf_egu_int_mask_t.NRF_EGU_INT_TRIGGERED13", "NRF_EGU_INT_TRIGGERED13"], [40, 1, 1, "c.nrf_egu_int_mask_t.NRF_EGU_INT_TRIGGERED14", "NRF_EGU_INT_TRIGGERED14"], [40, 1, 1, "c.nrf_egu_int_mask_t.NRF_EGU_INT_TRIGGERED15", "NRF_EGU_INT_TRIGGERED15"], [40, 1, 1, "c.nrf_egu_int_mask_t.NRF_EGU_INT_TRIGGERED2", "NRF_EGU_INT_TRIGGERED2"], [40, 1, 1, "c.nrf_egu_int_mask_t.NRF_EGU_INT_TRIGGERED3", "NRF_EGU_INT_TRIGGERED3"], [40, 1, 1, "c.nrf_egu_int_mask_t.NRF_EGU_INT_TRIGGERED4", "NRF_EGU_INT_TRIGGERED4"], [40, 1, 1, "c.nrf_egu_int_mask_t.NRF_EGU_INT_TRIGGERED5", "NRF_EGU_INT_TRIGGERED5"], [40, 1, 1, "c.nrf_egu_int_mask_t.NRF_EGU_INT_TRIGGERED6", "NRF_EGU_INT_TRIGGERED6"], [40, 1, 1, "c.nrf_egu_int_mask_t.NRF_EGU_INT_TRIGGERED7", "NRF_EGU_INT_TRIGGERED7"], [40, 1, 1, "c.nrf_egu_int_mask_t.NRF_EGU_INT_TRIGGERED8", "NRF_EGU_INT_TRIGGERED8"], [40, 1, 1, "c.nrf_egu_int_mask_t.NRF_EGU_INT_TRIGGERED9", "NRF_EGU_INT_TRIGGERED9"], [40, 1, 1, "c.nrf_egu_task_t.NRF_EGU_TASK_TRIGGER0", "NRF_EGU_TASK_TRIGGER0"], [40, 1, 1, "c.nrf_egu_task_t.NRF_EGU_TASK_TRIGGER1", "NRF_EGU_TASK_TRIGGER1"], [40, 1, 1, "c.nrf_egu_task_t.NRF_EGU_TASK_TRIGGER10", "NRF_EGU_TASK_TRIGGER10"], [40, 1, 1, "c.nrf_egu_task_t.NRF_EGU_TASK_TRIGGER11", "NRF_EGU_TASK_TRIGGER11"], [40, 1, 1, "c.nrf_egu_task_t.NRF_EGU_TASK_TRIGGER12", "NRF_EGU_TASK_TRIGGER12"], [40, 1, 1, "c.nrf_egu_task_t.NRF_EGU_TASK_TRIGGER13", "NRF_EGU_TASK_TRIGGER13"], [40, 1, 1, "c.nrf_egu_task_t.NRF_EGU_TASK_TRIGGER14", "NRF_EGU_TASK_TRIGGER14"], [40, 1, 1, "c.nrf_egu_task_t.NRF_EGU_TASK_TRIGGER15", "NRF_EGU_TASK_TRIGGER15"], [40, 1, 1, "c.nrf_egu_task_t.NRF_EGU_TASK_TRIGGER2", "NRF_EGU_TASK_TRIGGER2"], [40, 1, 1, "c.nrf_egu_task_t.NRF_EGU_TASK_TRIGGER3", "NRF_EGU_TASK_TRIGGER3"], [40, 1, 1, "c.nrf_egu_task_t.NRF_EGU_TASK_TRIGGER4", "NRF_EGU_TASK_TRIGGER4"], [40, 1, 1, "c.nrf_egu_task_t.NRF_EGU_TASK_TRIGGER5", "NRF_EGU_TASK_TRIGGER5"], [40, 1, 1, "c.nrf_egu_task_t.NRF_EGU_TASK_TRIGGER6", "NRF_EGU_TASK_TRIGGER6"], [40, 1, 1, "c.nrf_egu_task_t.NRF_EGU_TASK_TRIGGER7", "NRF_EGU_TASK_TRIGGER7"], [40, 1, 1, "c.nrf_egu_task_t.NRF_EGU_TASK_TRIGGER8", "NRF_EGU_TASK_TRIGGER8"], [40, 1, 1, "c.nrf_egu_task_t.NRF_EGU_TASK_TRIGGER9", "NRF_EGU_TASK_TRIGGER9"], [21, 0, 1, "c.NRF_EVENTS_HFCLKSTARTED", "NRF_EVENTS_HFCLKSTARTED"], [42, 0, 1, "c.NRF_EXMIF_MAX_MEMORY_DEVICE_SIZE", "NRF_EXMIF_MAX_MEMORY_DEVICE_SIZE"], [42, 0, 1, "c.NRF_EXMIF_MAX_NUMBER_OF_DEVICES", "NRF_EXMIF_MAX_NUMBER_OF_DEVICES"], [42, 1, 1, "c.nrf_exmif_task_t.NRF_EXMIF_TASK_START", "NRF_EXMIF_TASK_START"], [42, 1, 1, "c.nrf_exmif_task_t.NRF_EXMIF_TASK_STOP", "NRF_EXMIF_TASK_STOP"], [44, 0, 1, "c.NRF_FICR_HAS_CODE_PAGE_SIZE", "NRF_FICR_HAS_CODE_PAGE_SIZE"], [44, 0, 1, "c.NRF_FICR_HAS_CODE_SIZE", "NRF_FICR_HAS_CODE_SIZE"], [44, 0, 1, "c.NRF_FICR_HAS_DEVICE_ID", "NRF_FICR_HAS_DEVICE_ID"], [44, 0, 1, "c.NRF_FICR_HAS_INFO_CODE_PAGE_SIZE", "NRF_FICR_HAS_INFO_CODE_PAGE_SIZE"], [44, 0, 1, "c.NRF_FICR_HAS_INFO_CODE_SIZE", "NRF_FICR_HAS_INFO_CODE_SIZE"], [44, 0, 1, "c.NRF_FICR_HAS_INFO_DEVICE_ID", "NRF_FICR_HAS_INFO_DEVICE_ID"], [44, 0, 1, "c.NRF_FICR_HAS_NFC_TAGHEADER", "NRF_FICR_HAS_NFC_TAGHEADER"], [44, 0, 1, "c.NRF_FICR_HAS_NFC_TAGHEADER_ARRAY", "NRF_FICR_HAS_NFC_TAGHEADER_ARRAY"], [45, 1, 1, "c.nrf_fpu_event_t.NRF_FPU_EVENT_DENORMALINPUT", "NRF_FPU_EVENT_DENORMALINPUT"], [45, 1, 1, "c.nrf_fpu_event_t.NRF_FPU_EVENT_DIVIDEBYZERO", "NRF_FPU_EVENT_DIVIDEBYZERO"], [45, 1, 1, "c.nrf_fpu_event_t.NRF_FPU_EVENT_INEXACT", "NRF_FPU_EVENT_INEXACT"], [45, 1, 1, "c.nrf_fpu_event_t.NRF_FPU_EVENT_INVALIDOPERATION", "NRF_FPU_EVENT_INVALIDOPERATION"], [45, 1, 1, "c.nrf_fpu_event_t.NRF_FPU_EVENT_OVERFLOW", "NRF_FPU_EVENT_OVERFLOW"], [45, 1, 1, "c.nrf_fpu_event_t.NRF_FPU_EVENT_UNDERFLOW", "NRF_FPU_EVENT_UNDERFLOW"], [45, 1, 1, "c.nrf_fpu_int_mask_t.NRF_FPU_INT_DENORMALINPUT", "NRF_FPU_INT_DENORMALINPUT"], [45, 1, 1, "c.nrf_fpu_int_mask_t.NRF_FPU_INT_DIVIDEBYZERO", "NRF_FPU_INT_DIVIDEBYZERO"], [45, 1, 1, "c.nrf_fpu_int_mask_t.NRF_FPU_INT_INEXACT", "NRF_FPU_INT_INEXACT"], [45, 1, 1, "c.nrf_fpu_int_mask_t.NRF_FPU_INT_INVALIDOPERATION", "NRF_FPU_INT_INVALIDOPERATION"], [45, 1, 1, "c.nrf_fpu_int_mask_t.NRF_FPU_INT_OVERFLOW", "NRF_FPU_INT_OVERFLOW"], [45, 1, 1, "c.nrf_fpu_int_mask_t.NRF_FPU_INT_UNDERFLOW", "NRF_FPU_INT_UNDERFLOW"], [47, 1, 1, "c.nrf_glitchdet_mode_t.NRF_GLITCHDET_MODE_CAP_DIV", "NRF_GLITCHDET_MODE_CAP_DIV"], [47, 1, 1, "c.nrf_glitchdet_mode_t.NRF_GLITCHDET_MODE_HIGH_PASS", "NRF_GLITCHDET_MODE_HIGH_PASS"], [52, 0, 1, "c.NRF_GPIOTE_EVENTS_PORT_REG", "NRF_GPIOTE_EVENTS_PORT_REG"], [52, 1, 1, "c.nrf_gpiote_event_t.NRF_GPIOTE_EVENT_IN_0", "NRF_GPIOTE_EVENT_IN_0"], [52, 1, 1, "c.nrf_gpiote_event_t.NRF_GPIOTE_EVENT_IN_1", "NRF_GPIOTE_EVENT_IN_1"], [52, 1, 1, "c.nrf_gpiote_event_t.NRF_GPIOTE_EVENT_IN_2", "NRF_GPIOTE_EVENT_IN_2"], [52, 1, 1, "c.nrf_gpiote_event_t.NRF_GPIOTE_EVENT_IN_3", "NRF_GPIOTE_EVENT_IN_3"], [52, 1, 1, "c.nrf_gpiote_event_t.NRF_GPIOTE_EVENT_IN_4", "NRF_GPIOTE_EVENT_IN_4"], [52, 1, 1, "c.nrf_gpiote_event_t.NRF_GPIOTE_EVENT_IN_5", "NRF_GPIOTE_EVENT_IN_5"], [52, 1, 1, "c.nrf_gpiote_event_t.NRF_GPIOTE_EVENT_IN_6", "NRF_GPIOTE_EVENT_IN_6"], [52, 1, 1, "c.nrf_gpiote_event_t.NRF_GPIOTE_EVENT_IN_7", "NRF_GPIOTE_EVENT_IN_7"], [52, 1, 1, "c.nrf_gpiote_event_t.NRF_GPIOTE_EVENT_PORT", "NRF_GPIOTE_EVENT_PORT"], [52, 0, 1, "c.NRF_GPIOTE_HAS_INT_GROUPS", "NRF_GPIOTE_HAS_INT_GROUPS"], [52, 0, 1, "c.NRF_GPIOTE_HAS_LATENCY", "NRF_GPIOTE_HAS_LATENCY"], [52, 1, 1, "c.nrf_gpiote_outinit_t.NRF_GPIOTE_INITIAL_VALUE_HIGH", "NRF_GPIOTE_INITIAL_VALUE_HIGH"], [52, 1, 1, "c.nrf_gpiote_outinit_t.NRF_GPIOTE_INITIAL_VALUE_LOW", "NRF_GPIOTE_INITIAL_VALUE_LOW"], [52, 0, 1, "c.NRF_GPIOTE_INST_GET", "NRF_GPIOTE_INST_GET"], [52, 1, 1, "c.nrf_gpiote_int_t.NRF_GPIOTE_INT_IN0_MASK", "NRF_GPIOTE_INT_IN0_MASK"], [52, 1, 1, "c.nrf_gpiote_int_t.NRF_GPIOTE_INT_IN1_MASK", "NRF_GPIOTE_INT_IN1_MASK"], [52, 1, 1, "c.nrf_gpiote_int_t.NRF_GPIOTE_INT_IN2_MASK", "NRF_GPIOTE_INT_IN2_MASK"], [52, 1, 1, "c.nrf_gpiote_int_t.NRF_GPIOTE_INT_IN3_MASK", "NRF_GPIOTE_INT_IN3_MASK"], [52, 1, 1, "c.nrf_gpiote_int_t.NRF_GPIOTE_INT_IN4_MASK", "NRF_GPIOTE_INT_IN4_MASK"], [52, 1, 1, "c.nrf_gpiote_int_t.NRF_GPIOTE_INT_IN5_MASK", "NRF_GPIOTE_INT_IN5_MASK"], [52, 1, 1, "c.nrf_gpiote_int_t.NRF_GPIOTE_INT_IN6_MASK", "NRF_GPIOTE_INT_IN6_MASK"], [52, 1, 1, "c.nrf_gpiote_int_t.NRF_GPIOTE_INT_IN7_MASK", "NRF_GPIOTE_INT_IN7_MASK"], [52, 0, 1, "c.NRF_GPIOTE_INT_IN_MASK", "NRF_GPIOTE_INT_IN_MASK"], [52, 1, 1, "c.nrf_gpiote_int_t.NRF_GPIOTE_INT_PORT_MASK", "NRF_GPIOTE_INT_PORT_MASK"], [52, 0, 1, "c.NRF_GPIOTE_INT_PORT_MASK_NAME", "NRF_GPIOTE_INT_PORT_MASK_NAME"], [52, 0, 1, "c.NRF_GPIOTE_IRQ_GROUP", "NRF_GPIOTE_IRQ_GROUP"], [52, 1, 1, "c.nrf_gpiote_latency_t.NRF_GPIOTE_LATENCY_LOWLATENCY", "NRF_GPIOTE_LATENCY_LOWLATENCY"], [52, 1, 1, "c.nrf_gpiote_latency_t.NRF_GPIOTE_LATENCY_LOWPOWER", "NRF_GPIOTE_LATENCY_LOWPOWER"], [52, 1, 1, "c.nrf_gpiote_polarity_t.NRF_GPIOTE_POLARITY_HITOLO", "NRF_GPIOTE_POLARITY_HITOLO"], [52, 1, 1, "c.nrf_gpiote_polarity_t.NRF_GPIOTE_POLARITY_LOTOHI", "NRF_GPIOTE_POLARITY_LOTOHI"], [52, 1, 1, "c.nrf_gpiote_polarity_t.NRF_GPIOTE_POLARITY_NONE", "NRF_GPIOTE_POLARITY_NONE"], [52, 1, 1, "c.nrf_gpiote_polarity_t.NRF_GPIOTE_POLARITY_TOGGLE", "NRF_GPIOTE_POLARITY_TOGGLE"], [52, 0, 1, "c.NRF_GPIOTE_SECURE_SUFFIX", "NRF_GPIOTE_SECURE_SUFFIX"], [52, 1, 1, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_CLR_0", "NRF_GPIOTE_TASK_CLR_0"], [52, 1, 1, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_CLR_1", "NRF_GPIOTE_TASK_CLR_1"], [52, 1, 1, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_CLR_2", "NRF_GPIOTE_TASK_CLR_2"], [52, 1, 1, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_CLR_3", "NRF_GPIOTE_TASK_CLR_3"], [52, 1, 1, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_CLR_4", "NRF_GPIOTE_TASK_CLR_4"], [52, 1, 1, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_CLR_5", "NRF_GPIOTE_TASK_CLR_5"], [52, 1, 1, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_CLR_6", "NRF_GPIOTE_TASK_CLR_6"], [52, 1, 1, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_CLR_7", "NRF_GPIOTE_TASK_CLR_7"], [52, 1, 1, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_OUT_0", "NRF_GPIOTE_TASK_OUT_0"], [52, 1, 1, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_OUT_1", "NRF_GPIOTE_TASK_OUT_1"], [52, 1, 1, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_OUT_2", "NRF_GPIOTE_TASK_OUT_2"], [52, 1, 1, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_OUT_3", "NRF_GPIOTE_TASK_OUT_3"], [52, 1, 1, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_OUT_4", "NRF_GPIOTE_TASK_OUT_4"], [52, 1, 1, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_OUT_5", "NRF_GPIOTE_TASK_OUT_5"], [52, 1, 1, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_OUT_6", "NRF_GPIOTE_TASK_OUT_6"], [52, 1, 1, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_OUT_7", "NRF_GPIOTE_TASK_OUT_7"], [52, 1, 1, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_SET_0", "NRF_GPIOTE_TASK_SET_0"], [52, 1, 1, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_SET_1", "NRF_GPIOTE_TASK_SET_1"], [52, 1, 1, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_SET_2", "NRF_GPIOTE_TASK_SET_2"], [52, 1, 1, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_SET_3", "NRF_GPIOTE_TASK_SET_3"], [52, 1, 1, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_SET_4", "NRF_GPIOTE_TASK_SET_4"], [52, 1, 1, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_SET_5", "NRF_GPIOTE_TASK_SET_5"], [52, 1, 1, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_SET_6", "NRF_GPIOTE_TASK_SET_6"], [52, 1, 1, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_SET_7", "NRF_GPIOTE_TASK_SET_7"], [48, 0, 1, "c.NRF_GPIO_HAS_CLOCKPIN", "NRF_GPIO_HAS_CLOCKPIN"], [48, 0, 1, "c.NRF_GPIO_HAS_DETECT_MODE", "NRF_GPIO_HAS_DETECT_MODE"], [48, 0, 1, "c.NRF_GPIO_HAS_MULTIPERIPH_SEL", "NRF_GPIO_HAS_MULTIPERIPH_SEL"], [48, 0, 1, "c.NRF_GPIO_HAS_PORT_IMPEDANCE", "NRF_GPIO_HAS_PORT_IMPEDANCE"], [48, 0, 1, "c.NRF_GPIO_HAS_RETENTION", "NRF_GPIO_HAS_RETENTION"], [48, 0, 1, "c.NRF_GPIO_HAS_SEL", "NRF_GPIO_HAS_SEL"], [48, 0, 1, "c.NRF_GPIO_LATCH_PRESENT", "NRF_GPIO_LATCH_PRESENT"], [48, 1, 1, "c.nrf_gpio_pin_drive_t.NRF_GPIO_PIN_D0E1", "NRF_GPIO_PIN_D0E1"], [48, 1, 1, "c.nrf_gpio_pin_drive_t.NRF_GPIO_PIN_D0H1", "NRF_GPIO_PIN_D0H1"], [48, 1, 1, "c.nrf_gpio_pin_drive_t.NRF_GPIO_PIN_D0S1", "NRF_GPIO_PIN_D0S1"], [48, 1, 1, "c.nrf_gpio_pin_dir_t.NRF_GPIO_PIN_DIR_INPUT", "NRF_GPIO_PIN_DIR_INPUT"], [48, 1, 1, "c.nrf_gpio_pin_dir_t.NRF_GPIO_PIN_DIR_OUTPUT", "NRF_GPIO_PIN_DIR_OUTPUT"], [48, 1, 1, "c.nrf_gpio_pin_drive_t.NRF_GPIO_PIN_E0D1", "NRF_GPIO_PIN_E0D1"], [48, 1, 1, "c.nrf_gpio_pin_drive_t.NRF_GPIO_PIN_E0E1", "NRF_GPIO_PIN_E0E1"], [48, 1, 1, "c.nrf_gpio_pin_drive_t.NRF_GPIO_PIN_E0H1", "NRF_GPIO_PIN_E0H1"], [48, 1, 1, "c.nrf_gpio_pin_drive_t.NRF_GPIO_PIN_E0S1", "NRF_GPIO_PIN_E0S1"], [48, 1, 1, "c.nrf_gpio_pin_drive_t.NRF_GPIO_PIN_H0D1", "NRF_GPIO_PIN_H0D1"], [48, 1, 1, "c.nrf_gpio_pin_drive_t.NRF_GPIO_PIN_H0E1", "NRF_GPIO_PIN_H0E1"], [48, 1, 1, "c.nrf_gpio_pin_drive_t.NRF_GPIO_PIN_H0H1", "NRF_GPIO_PIN_H0H1"], [48, 1, 1, "c.nrf_gpio_pin_drive_t.NRF_GPIO_PIN_H0S1", "NRF_GPIO_PIN_H0S1"], [48, 1, 1, "c.nrf_gpio_pin_input_t.NRF_GPIO_PIN_INPUT_CONNECT", "NRF_GPIO_PIN_INPUT_CONNECT"], [48, 1, 1, "c.nrf_gpio_pin_input_t.NRF_GPIO_PIN_INPUT_DISCONNECT", "NRF_GPIO_PIN_INPUT_DISCONNECT"], [48, 0, 1, "c.NRF_GPIO_PIN_MAP", "NRF_GPIO_PIN_MAP"], [48, 1, 1, "c.nrf_gpio_pin_pull_t.NRF_GPIO_PIN_NOPULL", "NRF_GPIO_PIN_NOPULL"], [48, 1, 1, "c.nrf_gpio_pin_sense_t.NRF_GPIO_PIN_NOSENSE", "NRF_GPIO_PIN_NOSENSE"], [48, 1, 1, "c.nrf_gpio_pin_pull_t.NRF_GPIO_PIN_PULLDOWN", "NRF_GPIO_PIN_PULLDOWN"], [48, 1, 1, "c.nrf_gpio_pin_pull_t.NRF_GPIO_PIN_PULLUP", "NRF_GPIO_PIN_PULLUP"], [48, 1, 1, "c.nrf_gpio_pin_drive_t.NRF_GPIO_PIN_S0D1", "NRF_GPIO_PIN_S0D1"], [48, 1, 1, "c.nrf_gpio_pin_drive_t.NRF_GPIO_PIN_S0E1", "NRF_GPIO_PIN_S0E1"], [48, 1, 1, "c.nrf_gpio_pin_drive_t.NRF_GPIO_PIN_S0H1", "NRF_GPIO_PIN_S0H1"], [48, 1, 1, "c.nrf_gpio_pin_drive_t.NRF_GPIO_PIN_S0S1", "NRF_GPIO_PIN_S0S1"], [48, 1, 1, "c.nrf_gpio_pin_sel_t.NRF_GPIO_PIN_SEL_APP", "NRF_GPIO_PIN_SEL_APP"], [48, 1, 1, "c.nrf_gpio_pin_sel_t.NRF_GPIO_PIN_SEL_GPIO", "NRF_GPIO_PIN_SEL_GPIO"], [48, 1, 1, "c.nrf_gpio_pin_sel_t.NRF_GPIO_PIN_SEL_GRTC", "NRF_GPIO_PIN_SEL_GRTC"], [48, 1, 1, "c.nrf_gpio_pin_sel_t.NRF_GPIO_PIN_SEL_NETWORK", "NRF_GPIO_PIN_SEL_NETWORK"], [48, 1, 1, "c.nrf_gpio_pin_sel_t.NRF_GPIO_PIN_SEL_PERIPHERAL", "NRF_GPIO_PIN_SEL_PERIPHERAL"], [48, 1, 1, "c.nrf_gpio_pin_sel_t.NRF_GPIO_PIN_SEL_TND", "NRF_GPIO_PIN_SEL_TND"], [48, 1, 1, "c.nrf_gpio_pin_sel_t.NRF_GPIO_PIN_SEL_VPR", "NRF_GPIO_PIN_SEL_VPR"], [48, 1, 1, "c.nrf_gpio_pin_sense_t.NRF_GPIO_PIN_SENSE_HIGH", "NRF_GPIO_PIN_SENSE_HIGH"], [48, 1, 1, "c.nrf_gpio_pin_sense_t.NRF_GPIO_PIN_SENSE_LOW", "NRF_GPIO_PIN_SENSE_LOW"], [48, 1, 1, "c.nrf_gpio_port_impedance_mask_t.NRF_GPIO_PORT_IMPEDANCE_100_MASK", "NRF_GPIO_PORT_IMPEDANCE_100_MASK"], [48, 1, 1, "c.nrf_gpio_port_impedance_mask_t.NRF_GPIO_PORT_IMPEDANCE_1600_MASK", "NRF_GPIO_PORT_IMPEDANCE_1600_MASK"], [48, 1, 1, "c.nrf_gpio_port_impedance_mask_t.NRF_GPIO_PORT_IMPEDANCE_200_MASK", "NRF_GPIO_PORT_IMPEDANCE_200_MASK"], [48, 1, 1, "c.nrf_gpio_port_impedance_mask_t.NRF_GPIO_PORT_IMPEDANCE_400_MASK", "NRF_GPIO_PORT_IMPEDANCE_400_MASK"], [48, 1, 1, "c.nrf_gpio_port_impedance_mask_t.NRF_GPIO_PORT_IMPEDANCE_50_MASK", "NRF_GPIO_PORT_IMPEDANCE_50_MASK"], [48, 1, 1, "c.nrf_gpio_port_impedance_mask_t.NRF_GPIO_PORT_IMPEDANCE_800_MASK", "NRF_GPIO_PORT_IMPEDANCE_800_MASK"], [48, 0, 1, "c.NRF_GPIO_PORT_IMPEDANCE_ALL_MASK", "NRF_GPIO_PORT_IMPEDANCE_ALL_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_APPLICATION_MASK", "NRF_GPIO_RETAIN_APPLICATION_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_NETWORK_MASK", "NRF_GPIO_RETAIN_NETWORK_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN0_MASK", "NRF_GPIO_RETAIN_PIN0_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN10_MASK", "NRF_GPIO_RETAIN_PIN10_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN11_MASK", "NRF_GPIO_RETAIN_PIN11_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN12_MASK", "NRF_GPIO_RETAIN_PIN12_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN13_MASK", "NRF_GPIO_RETAIN_PIN13_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN14_MASK", "NRF_GPIO_RETAIN_PIN14_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN15_MASK", "NRF_GPIO_RETAIN_PIN15_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN16_MASK", "NRF_GPIO_RETAIN_PIN16_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN17_MASK", "NRF_GPIO_RETAIN_PIN17_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN18_MASK", "NRF_GPIO_RETAIN_PIN18_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN19_MASK", "NRF_GPIO_RETAIN_PIN19_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN1_MASK", "NRF_GPIO_RETAIN_PIN1_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN20_MASK", "NRF_GPIO_RETAIN_PIN20_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN21_MASK", "NRF_GPIO_RETAIN_PIN21_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN22_MASK", "NRF_GPIO_RETAIN_PIN22_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN23_MASK", "NRF_GPIO_RETAIN_PIN23_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN24_MASK", "NRF_GPIO_RETAIN_PIN24_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN25_MASK", "NRF_GPIO_RETAIN_PIN25_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN26_MASK", "NRF_GPIO_RETAIN_PIN26_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN27_MASK", "NRF_GPIO_RETAIN_PIN27_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN28_MASK", "NRF_GPIO_RETAIN_PIN28_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN29_MASK", "NRF_GPIO_RETAIN_PIN29_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN2_MASK", "NRF_GPIO_RETAIN_PIN2_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN30_MASK", "NRF_GPIO_RETAIN_PIN30_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN31_MASK", "NRF_GPIO_RETAIN_PIN31_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN3_MASK", "NRF_GPIO_RETAIN_PIN3_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN4_MASK", "NRF_GPIO_RETAIN_PIN4_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN5_MASK", "NRF_GPIO_RETAIN_PIN5_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN6_MASK", "NRF_GPIO_RETAIN_PIN6_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN7_MASK", "NRF_GPIO_RETAIN_PIN7_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN8_MASK", "NRF_GPIO_RETAIN_PIN8_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN9_MASK", "NRF_GPIO_RETAIN_PIN9_MASK"], [56, 1, 1, "c.nrf_grtc_cc_add_reference_t.NRF_GRTC_CC_ADD_REFERENCE_CC", "NRF_GRTC_CC_ADD_REFERENCE_CC"], [56, 1, 1, "c.nrf_grtc_cc_add_reference_t.NRF_GRTC_CC_ADD_REFERENCE_SYSCOUNTER", "NRF_GRTC_CC_ADD_REFERENCE_SYSCOUNTER"], [56, 0, 1, "c.NRF_GRTC_CHANNEL_INT_MASK", "NRF_GRTC_CHANNEL_INT_MASK"], [56, 0, 1, "c.NRF_GRTC_CLKCFG_CLKFASTDIV_MAX_VALUE", "NRF_GRTC_CLKCFG_CLKFASTDIV_MAX_VALUE"], [56, 1, 1, "c.nrf_grtc_clkout_t.NRF_GRTC_CLKOUT_32K", "NRF_GRTC_CLKOUT_32K"], [56, 1, 1, "c.nrf_grtc_clkout_t.NRF_GRTC_CLKOUT_FAST", "NRF_GRTC_CLKOUT_FAST"], [56, 1, 1, "c.nrf_grtc_clksel_t.NRF_GRTC_CLKSEL_LFCLK", "NRF_GRTC_CLKSEL_LFCLK"], [56, 1, 1, "c.nrf_grtc_clksel_t.NRF_GRTC_CLKSEL_LFXO", "NRF_GRTC_CLKSEL_LFXO"], [56, 0, 1, "c.NRF_GRTC_DOMAIN_INDEX", "NRF_GRTC_DOMAIN_INDEX"], [56, 1, 1, "c.nrf_grtc_event_t.NRF_GRTC_EVENT_COMPARE_0", "NRF_GRTC_EVENT_COMPARE_0"], [56, 1, 1, "c.nrf_grtc_event_t.NRF_GRTC_EVENT_COMPARE_1", "NRF_GRTC_EVENT_COMPARE_1"], [56, 1, 1, "c.nrf_grtc_event_t.NRF_GRTC_EVENT_COMPARE_10", "NRF_GRTC_EVENT_COMPARE_10"], [56, 1, 1, "c.nrf_grtc_event_t.NRF_GRTC_EVENT_COMPARE_11", "NRF_GRTC_EVENT_COMPARE_11"], [56, 1, 1, "c.nrf_grtc_event_t.NRF_GRTC_EVENT_COMPARE_12", "NRF_GRTC_EVENT_COMPARE_12"], [56, 1, 1, "c.nrf_grtc_event_t.NRF_GRTC_EVENT_COMPARE_2", "NRF_GRTC_EVENT_COMPARE_2"], [56, 1, 1, "c.nrf_grtc_event_t.NRF_GRTC_EVENT_COMPARE_3", "NRF_GRTC_EVENT_COMPARE_3"], [56, 1, 1, "c.nrf_grtc_event_t.NRF_GRTC_EVENT_COMPARE_4", "NRF_GRTC_EVENT_COMPARE_4"], [56, 1, 1, "c.nrf_grtc_event_t.NRF_GRTC_EVENT_COMPARE_5", "NRF_GRTC_EVENT_COMPARE_5"], [56, 1, 1, "c.nrf_grtc_event_t.NRF_GRTC_EVENT_COMPARE_6", "NRF_GRTC_EVENT_COMPARE_6"], [56, 1, 1, "c.nrf_grtc_event_t.NRF_GRTC_EVENT_COMPARE_7", "NRF_GRTC_EVENT_COMPARE_7"], [56, 1, 1, "c.nrf_grtc_event_t.NRF_GRTC_EVENT_COMPARE_8", "NRF_GRTC_EVENT_COMPARE_8"], [56, 1, 1, "c.nrf_grtc_event_t.NRF_GRTC_EVENT_COMPARE_9", "NRF_GRTC_EVENT_COMPARE_9"], [56, 1, 1, "c.nrf_grtc_event_t.NRF_GRTC_EVENT_PWM_PERIOD_END", "NRF_GRTC_EVENT_PWM_PERIOD_END"], [56, 1, 1, "c.nrf_grtc_event_t.NRF_GRTC_EVENT_RTCOMPARE", "NRF_GRTC_EVENT_RTCOMPARE"], [56, 1, 1, "c.nrf_grtc_event_t.NRF_GRTC_EVENT_RTCOMPARESYNC", "NRF_GRTC_EVENT_RTCOMPARESYNC"], [56, 1, 1, "c.nrf_grtc_event_t.NRF_GRTC_EVENT_SYSCOUNTERVALID", "NRF_GRTC_EVENT_SYSCOUNTERVALID"], [56, 0, 1, "c.NRF_GRTC_HAS_CLKOUT", "NRF_GRTC_HAS_CLKOUT"], [56, 0, 1, "c.NRF_GRTC_HAS_CLKSEL", "NRF_GRTC_HAS_CLKSEL"], [56, 0, 1, "c.NRF_GRTC_HAS_EXTENDED", "NRF_GRTC_HAS_EXTENDED"], [56, 0, 1, "c.NRF_GRTC_HAS_PWM", "NRF_GRTC_HAS_PWM"], [56, 0, 1, "c.NRF_GRTC_HAS_RTCOUNTER", "NRF_GRTC_HAS_RTCOUNTER"], [56, 0, 1, "c.NRF_GRTC_HAS_SYSCOUNTER_ARRAY", "NRF_GRTC_HAS_SYSCOUNTER_ARRAY"], [56, 0, 1, "c.NRF_GRTC_INTEN_MASK", "NRF_GRTC_INTEN_MASK"], [56, 1, 1, "c.nrf_grtc_int_mask_t.NRF_GRTC_INT_COMPARE0_MASK", "NRF_GRTC_INT_COMPARE0_MASK"], [56, 1, 1, "c.nrf_grtc_int_mask_t.NRF_GRTC_INT_COMPARE10_MASK", "NRF_GRTC_INT_COMPARE10_MASK"], [56, 1, 1, "c.nrf_grtc_int_mask_t.NRF_GRTC_INT_COMPARE11_MASK", "NRF_GRTC_INT_COMPARE11_MASK"], [56, 1, 1, "c.nrf_grtc_int_mask_t.NRF_GRTC_INT_COMPARE1_MASK", "NRF_GRTC_INT_COMPARE1_MASK"], [56, 1, 1, "c.nrf_grtc_int_mask_t.NRF_GRTC_INT_COMPARE2_MASK", "NRF_GRTC_INT_COMPARE2_MASK"], [56, 1, 1, "c.nrf_grtc_int_mask_t.NRF_GRTC_INT_COMPARE3_MASK", "NRF_GRTC_INT_COMPARE3_MASK"], [56, 1, 1, "c.nrf_grtc_int_mask_t.NRF_GRTC_INT_COMPARE4_MASK", "NRF_GRTC_INT_COMPARE4_MASK"], [56, 1, 1, "c.nrf_grtc_int_mask_t.NRF_GRTC_INT_COMPARE5_MASK", "NRF_GRTC_INT_COMPARE5_MASK"], [56, 1, 1, "c.nrf_grtc_int_mask_t.NRF_GRTC_INT_COMPARE6_MASK", "NRF_GRTC_INT_COMPARE6_MASK"], [56, 1, 1, "c.nrf_grtc_int_mask_t.NRF_GRTC_INT_COMPARE7_MASK", "NRF_GRTC_INT_COMPARE7_MASK"], [56, 1, 1, "c.nrf_grtc_int_mask_t.NRF_GRTC_INT_COMPARE8_MASK", "NRF_GRTC_INT_COMPARE8_MASK"], [56, 1, 1, "c.nrf_grtc_int_mask_t.NRF_GRTC_INT_COMPARE9_MASK", "NRF_GRTC_INT_COMPARE9_MASK"], [56, 1, 1, "c.nrf_grtc_int_mask_t.NRF_GRTC_INT_RTCOMPARESYNC_MASK", "NRF_GRTC_INT_RTCOMPARESYNC_MASK"], [56, 1, 1, "c.nrf_grtc_int_mask_t.NRF_GRTC_INT_RTCOMPARE_MASK", "NRF_GRTC_INT_RTCOMPARE_MASK"], [56, 1, 1, "c.nrf_grtc_int_mask_t.NRF_GRTC_INT_SYSCOUNTERVALID_MASK", "NRF_GRTC_INT_SYSCOUNTERVALID_MASK"], [56, 0, 1, "c.NRF_GRTC_MAIN_CC_CHANNEL", "NRF_GRTC_MAIN_CC_CHANNEL"], [56, 0, 1, "c.NRF_GRTC_RTCOUNTER_CCH_MASK", "NRF_GRTC_RTCOUNTER_CCH_MASK"], [56, 1, 1, "c.nrf_grtc_short_mask_t.NRF_GRTC_SHORT_RTCOMPARE_CLEAR_MASK", "NRF_GRTC_SHORT_RTCOMPARE_CLEAR_MASK"], [56, 0, 1, "c.NRF_GRTC_SYSCOUNTERH_BUSY_MASK", "NRF_GRTC_SYSCOUNTERH_BUSY_MASK"], [56, 0, 1, "c.NRF_GRTC_SYSCOUNTERH_OVERFLOW_MASK", "NRF_GRTC_SYSCOUNTERH_OVERFLOW_MASK"], [56, 0, 1, "c.NRF_GRTC_SYSCOUNTERH_VALUE_MASK", "NRF_GRTC_SYSCOUNTERH_VALUE_MASK"], [56, 0, 1, "c.NRF_GRTC_SYSCOUNTERL_VALUE_MASK", "NRF_GRTC_SYSCOUNTERL_VALUE_MASK"], [56, 0, 1, "c.NRF_GRTC_SYSCOUNTER_ALL_CHANNELS_INT_MASK", "NRF_GRTC_SYSCOUNTER_ALL_CHANNELS_INT_MASK"], [56, 0, 1, "c.NRF_GRTC_SYSCOUNTER_CCADD_MASK", "NRF_GRTC_SYSCOUNTER_CCADD_MASK"], [56, 0, 1, "c.NRF_GRTC_SYSCOUNTER_CCH_MASK", "NRF_GRTC_SYSCOUNTER_CCH_MASK"], [56, 0, 1, "c.NRF_GRTC_SYSCOUNTER_CC_COUNT", "NRF_GRTC_SYSCOUNTER_CC_COUNT"], [56, 0, 1, "c.NRF_GRTC_SYSCOUNTER_MAIN_FREQUENCY_HZ", "NRF_GRTC_SYSCOUNTER_MAIN_FREQUENCY_HZ"], [56, 1, 1, "c.nrf_grtc_task_t.NRF_GRTC_TASK_CAPTURE_0", "NRF_GRTC_TASK_CAPTURE_0"], [56, 1, 1, "c.nrf_grtc_task_t.NRF_GRTC_TASK_CAPTURE_1", "NRF_GRTC_TASK_CAPTURE_1"], [56, 1, 1, "c.nrf_grtc_task_t.NRF_GRTC_TASK_CAPTURE_10", "NRF_GRTC_TASK_CAPTURE_10"], [56, 1, 1, "c.nrf_grtc_task_t.NRF_GRTC_TASK_CAPTURE_11", "NRF_GRTC_TASK_CAPTURE_11"], [56, 1, 1, "c.nrf_grtc_task_t.NRF_GRTC_TASK_CAPTURE_2", "NRF_GRTC_TASK_CAPTURE_2"], [56, 1, 1, "c.nrf_grtc_task_t.NRF_GRTC_TASK_CAPTURE_3", "NRF_GRTC_TASK_CAPTURE_3"], [56, 1, 1, "c.nrf_grtc_task_t.NRF_GRTC_TASK_CAPTURE_4", "NRF_GRTC_TASK_CAPTURE_4"], [56, 1, 1, "c.nrf_grtc_task_t.NRF_GRTC_TASK_CAPTURE_5", "NRF_GRTC_TASK_CAPTURE_5"], [56, 1, 1, "c.nrf_grtc_task_t.NRF_GRTC_TASK_CAPTURE_6", "NRF_GRTC_TASK_CAPTURE_6"], [56, 1, 1, "c.nrf_grtc_task_t.NRF_GRTC_TASK_CAPTURE_7", "NRF_GRTC_TASK_CAPTURE_7"], [56, 1, 1, "c.nrf_grtc_task_t.NRF_GRTC_TASK_CAPTURE_8", "NRF_GRTC_TASK_CAPTURE_8"], [56, 1, 1, "c.nrf_grtc_task_t.NRF_GRTC_TASK_CAPTURE_9", "NRF_GRTC_TASK_CAPTURE_9"], [56, 1, 1, "c.nrf_grtc_task_t.NRF_GRTC_TASK_CLEAR", "NRF_GRTC_TASK_CLEAR"], [56, 1, 1, "c.nrf_grtc_task_t.NRF_GRTC_TASK_PWM_START", "NRF_GRTC_TASK_PWM_START"], [56, 1, 1, "c.nrf_grtc_task_t.NRF_GRTC_TASK_PWM_STOP", "NRF_GRTC_TASK_PWM_STOP"], [56, 1, 1, "c.nrf_grtc_task_t.NRF_GRTC_TASK_START", "NRF_GRTC_TASK_START"], [56, 1, 1, "c.nrf_grtc_task_t.NRF_GRTC_TASK_STOP", "NRF_GRTC_TASK_STOP"], [56, 0, 1, "c.NRF_GRTC_TIMEOUT_MAX_VALUE", "NRF_GRTC_TIMEOUT_MAX_VALUE"], [56, 0, 1, "c.NRF_GRTC_WAKETIME_MAX_VALUE", "NRF_GRTC_WAKETIME_MAX_VALUE"], [21, 0, 1, "c.NRF_HFCLKRUN", "NRF_HFCLKRUN"], [21, 0, 1, "c.NRF_HFCLKSTAT", "NRF_HFCLKSTAT"], [59, 1, 1, "c.nrf_hsfll_event_t.NRF_HSFLL_EVENT_FREQM_DONE", "NRF_HSFLL_EVENT_FREQM_DONE"], [59, 1, 1, "c.nrf_hsfll_event_t.NRF_HSFLL_EVENT_FREQ_CHANGED", "NRF_HSFLL_EVENT_FREQ_CHANGED"], [59, 1, 1, "c.nrf_hsfll_event_t.NRF_HSFLL_EVENT_STARTED", "NRF_HSFLL_EVENT_STARTED"], [59, 1, 1, "c.nrf_hsfll_event_t.NRF_HSFLL_EVENT_STOPPED", "NRF_HSFLL_EVENT_STOPPED"], [59, 0, 1, "c.NRF_HSFLL_HAS_DITHERING_INITVALUE", "NRF_HSFLL_HAS_DITHERING_INITVALUE"], [59, 0, 1, "c.NRF_HSFLL_HAS_DITHERINIT", "NRF_HSFLL_HAS_DITHERINIT"], [59, 1, 1, "c.nrf_hsfll_mode_ctrl_t.NRF_HSFLL_MODE_CTRL_AUTO", "NRF_HSFLL_MODE_CTRL_AUTO"], [59, 1, 1, "c.nrf_hsfll_mode_ctrl_t.NRF_HSFLL_MODE_CTRL_BYPASS", "NRF_HSFLL_MODE_CTRL_BYPASS"], [59, 1, 1, "c.nrf_hsfll_mode_ctrl_t.NRF_HSFLL_MODE_CTRL_CLOSED_LOOP", "NRF_HSFLL_MODE_CTRL_CLOSED_LOOP"], [59, 1, 1, "c.nrf_hsfll_mode_ctrl_t.NRF_HSFLL_MODE_CTRL_OPEN_LOOP", "NRF_HSFLL_MODE_CTRL_OPEN_LOOP"], [59, 1, 1, "c.nrf_hsfll_mode_status_t.NRF_HSFLL_MODE_STATUS_BYPASS", "NRF_HSFLL_MODE_STATUS_BYPASS"], [59, 1, 1, "c.nrf_hsfll_mode_status_t.NRF_HSFLL_MODE_STATUS_CLOSED_LOOP", "NRF_HSFLL_MODE_STATUS_CLOSED_LOOP"], [59, 1, 1, "c.nrf_hsfll_mode_status_t.NRF_HSFLL_MODE_STATUS_OPEN_LOOP", "NRF_HSFLL_MODE_STATUS_OPEN_LOOP"], [59, 1, 1, "c.nrf_hsfll_task_t.NRF_HSFLL_TASK_FREQ_CHANGE", "NRF_HSFLL_TASK_FREQ_CHANGE"], [59, 1, 1, "c.nrf_hsfll_task_t.NRF_HSFLL_TASK_FREQ_MEAS", "NRF_HSFLL_TASK_FREQ_MEAS"], [59, 1, 1, "c.nrf_hsfll_task_t.NRF_HSFLL_TASK_START", "NRF_HSFLL_TASK_START"], [59, 1, 1, "c.nrf_hsfll_task_t.NRF_HSFLL_TASK_STOP", "NRF_HSFLL_TASK_STOP"], [61, 1, 1, "c.nrf_i2s_align_t.NRF_I2S_ALIGN_LEFT", "NRF_I2S_ALIGN_LEFT"], [61, 1, 1, "c.nrf_i2s_align_t.NRF_I2S_ALIGN_RIGHT", "NRF_I2S_ALIGN_RIGHT"], [61, 1, 1, "c.nrf_i2s_channels_t.NRF_I2S_CHANNELS_LEFT", "NRF_I2S_CHANNELS_LEFT"], [61, 1, 1, "c.nrf_i2s_channels_t.NRF_I2S_CHANNELS_RIGHT", "NRF_I2S_CHANNELS_RIGHT"], [61, 1, 1, "c.nrf_i2s_channels_t.NRF_I2S_CHANNELS_STEREO", "NRF_I2S_CHANNELS_STEREO"], [61, 1, 1, "c.nrf_i2s_clksrc_t.NRF_I2S_CLKSRC_ACLK", "NRF_I2S_CLKSRC_ACLK"], [61, 1, 1, "c.nrf_i2s_clksrc_t.NRF_I2S_CLKSRC_PCLK32M", "NRF_I2S_CLKSRC_PCLK32M"], [61, 1, 1, "c.nrf_i2s_event_t.NRF_I2S_EVENT_FRAMESTART", "NRF_I2S_EVENT_FRAMESTART"], [61, 1, 1, "c.nrf_i2s_event_t.NRF_I2S_EVENT_RXPTRUPD", "NRF_I2S_EVENT_RXPTRUPD"], [61, 1, 1, "c.nrf_i2s_event_t.NRF_I2S_EVENT_STOPPED", "NRF_I2S_EVENT_STOPPED"], [61, 1, 1, "c.nrf_i2s_event_t.NRF_I2S_EVENT_TXPTRUPD", "NRF_I2S_EVENT_TXPTRUPD"], [61, 1, 1, "c.nrf_i2s_format_t.NRF_I2S_FORMAT_ALIGNED", "NRF_I2S_FORMAT_ALIGNED"], [61, 1, 1, "c.nrf_i2s_format_t.NRF_I2S_FORMAT_I2S", "NRF_I2S_FORMAT_I2S"], [61, 0, 1, "c.NRF_I2S_HAS_CLKCONFIG", "NRF_I2S_HAS_CLKCONFIG"], [61, 0, 1, "c.NRF_I2S_HAS_FRAMESTART", "NRF_I2S_HAS_FRAMESTART"], [61, 0, 1, "c.NRF_I2S_HAS_GPIO_PORT_SELECTION", "NRF_I2S_HAS_GPIO_PORT_SELECTION"], [61, 0, 1, "c.NRF_I2S_HAS_SWIDTH_32BIT", "NRF_I2S_HAS_SWIDTH_32BIT"], [61, 1, 1, "c.nrf_i2s_int_mask_t.NRF_I2S_INT_FRAMESTART_MASK", "NRF_I2S_INT_FRAMESTART_MASK"], [61, 1, 1, "c.nrf_i2s_int_mask_t.NRF_I2S_INT_RXPTRUPD_MASK", "NRF_I2S_INT_RXPTRUPD_MASK"], [61, 1, 1, "c.nrf_i2s_int_mask_t.NRF_I2S_INT_STOPPED_MASK", "NRF_I2S_INT_STOPPED_MASK"], [61, 1, 1, "c.nrf_i2s_int_mask_t.NRF_I2S_INT_TXPTRUPD_MASK", "NRF_I2S_INT_TXPTRUPD_MASK"], [61, 1, 1, "c.nrf_i2s_mck_t.NRF_I2S_MCK_32MDIV10", "NRF_I2S_MCK_32MDIV10"], [61, 1, 1, "c.nrf_i2s_mck_t.NRF_I2S_MCK_32MDIV11", "NRF_I2S_MCK_32MDIV11"], [61, 1, 1, "c.nrf_i2s_mck_t.NRF_I2S_MCK_32MDIV125", "NRF_I2S_MCK_32MDIV125"], [61, 1, 1, "c.nrf_i2s_mck_t.NRF_I2S_MCK_32MDIV15", "NRF_I2S_MCK_32MDIV15"], [61, 1, 1, "c.nrf_i2s_mck_t.NRF_I2S_MCK_32MDIV16", "NRF_I2S_MCK_32MDIV16"], [61, 1, 1, "c.nrf_i2s_mck_t.NRF_I2S_MCK_32MDIV2", "NRF_I2S_MCK_32MDIV2"], [61, 1, 1, "c.nrf_i2s_mck_t.NRF_I2S_MCK_32MDIV21", "NRF_I2S_MCK_32MDIV21"], [61, 1, 1, "c.nrf_i2s_mck_t.NRF_I2S_MCK_32MDIV23", "NRF_I2S_MCK_32MDIV23"], [61, 1, 1, "c.nrf_i2s_mck_t.NRF_I2S_MCK_32MDIV3", "NRF_I2S_MCK_32MDIV3"], [61, 1, 1, "c.nrf_i2s_mck_t.NRF_I2S_MCK_32MDIV30", "NRF_I2S_MCK_32MDIV30"], [61, 1, 1, "c.nrf_i2s_mck_t.NRF_I2S_MCK_32MDIV31", "NRF_I2S_MCK_32MDIV31"], [61, 1, 1, "c.nrf_i2s_mck_t.NRF_I2S_MCK_32MDIV32", "NRF_I2S_MCK_32MDIV32"], [61, 1, 1, "c.nrf_i2s_mck_t.NRF_I2S_MCK_32MDIV4", "NRF_I2S_MCK_32MDIV4"], [61, 1, 1, "c.nrf_i2s_mck_t.NRF_I2S_MCK_32MDIV42", "NRF_I2S_MCK_32MDIV42"], [61, 1, 1, "c.nrf_i2s_mck_t.NRF_I2S_MCK_32MDIV5", "NRF_I2S_MCK_32MDIV5"], [61, 1, 1, "c.nrf_i2s_mck_t.NRF_I2S_MCK_32MDIV6", "NRF_I2S_MCK_32MDIV6"], [61, 1, 1, "c.nrf_i2s_mck_t.NRF_I2S_MCK_32MDIV63", "NRF_I2S_MCK_32MDIV63"], [61, 1, 1, "c.nrf_i2s_mck_t.NRF_I2S_MCK_32MDIV8", "NRF_I2S_MCK_32MDIV8"], [61, 1, 1, "c.nrf_i2s_mck_t.NRF_I2S_MCK_DISABLED", "NRF_I2S_MCK_DISABLED"], [61, 1, 1, "c.nrf_i2s_mode_t.NRF_I2S_MODE_MASTER", "NRF_I2S_MODE_MASTER"], [61, 1, 1, "c.nrf_i2s_mode_t.NRF_I2S_MODE_SLAVE", "NRF_I2S_MODE_SLAVE"], [61, 0, 1, "c.NRF_I2S_PIN_NOT_CONNECTED", "NRF_I2S_PIN_NOT_CONNECTED"], [61, 0, 1, "c.NRF_I2S_PSEL_SCK_PIN_MASK", "NRF_I2S_PSEL_SCK_PIN_MASK"], [61, 0, 1, "c.NRF_I2S_PSEL_SCK_PORT_MASK", "NRF_I2S_PSEL_SCK_PORT_MASK"], [61, 1, 1, "c.nrf_i2s_ratio_t.NRF_I2S_RATIO_128X", "NRF_I2S_RATIO_128X"], [61, 1, 1, "c.nrf_i2s_ratio_t.NRF_I2S_RATIO_192X", "NRF_I2S_RATIO_192X"], [61, 1, 1, "c.nrf_i2s_ratio_t.NRF_I2S_RATIO_256X", "NRF_I2S_RATIO_256X"], [61, 1, 1, "c.nrf_i2s_ratio_t.NRF_I2S_RATIO_32X", "NRF_I2S_RATIO_32X"], [61, 1, 1, "c.nrf_i2s_ratio_t.NRF_I2S_RATIO_384X", "NRF_I2S_RATIO_384X"], [61, 1, 1, "c.nrf_i2s_ratio_t.NRF_I2S_RATIO_48X", "NRF_I2S_RATIO_48X"], [61, 1, 1, "c.nrf_i2s_ratio_t.NRF_I2S_RATIO_512X", "NRF_I2S_RATIO_512X"], [61, 1, 1, "c.nrf_i2s_ratio_t.NRF_I2S_RATIO_64X", "NRF_I2S_RATIO_64X"], [61, 1, 1, "c.nrf_i2s_ratio_t.NRF_I2S_RATIO_96X", "NRF_I2S_RATIO_96X"], [61, 1, 1, "c.nrf_i2s_swidth_t.NRF_I2S_SWIDTH_16BIT", "NRF_I2S_SWIDTH_16BIT"], [61, 1, 1, "c.nrf_i2s_swidth_t.NRF_I2S_SWIDTH_16BIT_IN32BIT", "NRF_I2S_SWIDTH_16BIT_IN32BIT"], [61, 1, 1, "c.nrf_i2s_swidth_t.NRF_I2S_SWIDTH_24BIT", "NRF_I2S_SWIDTH_24BIT"], [61, 1, 1, "c.nrf_i2s_swidth_t.NRF_I2S_SWIDTH_24BIT_IN32BIT", "NRF_I2S_SWIDTH_24BIT_IN32BIT"], [61, 1, 1, "c.nrf_i2s_swidth_t.NRF_I2S_SWIDTH_32BIT", "NRF_I2S_SWIDTH_32BIT"], [61, 1, 1, "c.nrf_i2s_swidth_t.NRF_I2S_SWIDTH_8BIT", "NRF_I2S_SWIDTH_8BIT"], [61, 1, 1, "c.nrf_i2s_swidth_t.NRF_I2S_SWIDTH_8BIT_IN16BIT", "NRF_I2S_SWIDTH_8BIT_IN16BIT"], [61, 1, 1, "c.nrf_i2s_swidth_t.NRF_I2S_SWIDTH_8BIT_IN32BIT", "NRF_I2S_SWIDTH_8BIT_IN32BIT"], [61, 1, 1, "c.nrf_i2s_task_t.NRF_I2S_TASK_START", "NRF_I2S_TASK_START"], [61, 1, 1, "c.nrf_i2s_task_t.NRF_I2S_TASK_STOP", "NRF_I2S_TASK_STOP"], [69, 1, 1, "c.nrf_ipct_short_mask_t.NRF_IPCT_ALL_SHORTS_MASK", "NRF_IPCT_ALL_SHORTS_MASK"], [69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_ACKED_0", "NRF_IPCT_EVENT_ACKED_0"], [69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_ACKED_1", "NRF_IPCT_EVENT_ACKED_1"], [69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_ACKED_10", "NRF_IPCT_EVENT_ACKED_10"], [69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_ACKED_11", "NRF_IPCT_EVENT_ACKED_11"], [69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_ACKED_12", "NRF_IPCT_EVENT_ACKED_12"], [69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_ACKED_13", "NRF_IPCT_EVENT_ACKED_13"], [69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_ACKED_14", "NRF_IPCT_EVENT_ACKED_14"], [69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_ACKED_15", "NRF_IPCT_EVENT_ACKED_15"], [69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_ACKED_2", "NRF_IPCT_EVENT_ACKED_2"], [69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_ACKED_3", "NRF_IPCT_EVENT_ACKED_3"], [69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_ACKED_4", "NRF_IPCT_EVENT_ACKED_4"], [69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_ACKED_5", "NRF_IPCT_EVENT_ACKED_5"], [69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_ACKED_6", "NRF_IPCT_EVENT_ACKED_6"], [69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_ACKED_7", "NRF_IPCT_EVENT_ACKED_7"], [69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_ACKED_8", "NRF_IPCT_EVENT_ACKED_8"], [69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_ACKED_9", "NRF_IPCT_EVENT_ACKED_9"], [69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_RECEIVE_0", "NRF_IPCT_EVENT_RECEIVE_0"], [69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_RECEIVE_1", "NRF_IPCT_EVENT_RECEIVE_1"], [69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_RECEIVE_10", "NRF_IPCT_EVENT_RECEIVE_10"], [69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_RECEIVE_11", "NRF_IPCT_EVENT_RECEIVE_11"], [69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_RECEIVE_12", "NRF_IPCT_EVENT_RECEIVE_12"], [69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_RECEIVE_13", "NRF_IPCT_EVENT_RECEIVE_13"], [69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_RECEIVE_14", "NRF_IPCT_EVENT_RECEIVE_14"], [69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_RECEIVE_15", "NRF_IPCT_EVENT_RECEIVE_15"], [69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_RECEIVE_2", "NRF_IPCT_EVENT_RECEIVE_2"], [69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_RECEIVE_3", "NRF_IPCT_EVENT_RECEIVE_3"], [69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_RECEIVE_4", "NRF_IPCT_EVENT_RECEIVE_4"], [69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_RECEIVE_5", "NRF_IPCT_EVENT_RECEIVE_5"], [69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_RECEIVE_6", "NRF_IPCT_EVENT_RECEIVE_6"], [69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_RECEIVE_7", "NRF_IPCT_EVENT_RECEIVE_7"], [69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_RECEIVE_8", "NRF_IPCT_EVENT_RECEIVE_8"], [69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_RECEIVE_9", "NRF_IPCT_EVENT_RECEIVE_9"], [69, 0, 1, "c.NRF_IPCT_HAS_ACK", "NRF_IPCT_HAS_ACK"], [69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_ACKED_0", "NRF_IPCT_INT_ACKED_0"], [69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_ACKED_1", "NRF_IPCT_INT_ACKED_1"], [69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_ACKED_10", "NRF_IPCT_INT_ACKED_10"], [69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_ACKED_11", "NRF_IPCT_INT_ACKED_11"], [69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_ACKED_12", "NRF_IPCT_INT_ACKED_12"], [69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_ACKED_13", "NRF_IPCT_INT_ACKED_13"], [69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_ACKED_14", "NRF_IPCT_INT_ACKED_14"], [69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_ACKED_15", "NRF_IPCT_INT_ACKED_15"], [69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_ACKED_2", "NRF_IPCT_INT_ACKED_2"], [69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_ACKED_3", "NRF_IPCT_INT_ACKED_3"], [69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_ACKED_4", "NRF_IPCT_INT_ACKED_4"], [69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_ACKED_5", "NRF_IPCT_INT_ACKED_5"], [69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_ACKED_6", "NRF_IPCT_INT_ACKED_6"], [69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_ACKED_7", "NRF_IPCT_INT_ACKED_7"], [69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_ACKED_8", "NRF_IPCT_INT_ACKED_8"], [69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_ACKED_9", "NRF_IPCT_INT_ACKED_9"], [69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_RECEIVE_0", "NRF_IPCT_INT_RECEIVE_0"], [69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_RECEIVE_1", "NRF_IPCT_INT_RECEIVE_1"], [69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_RECEIVE_10", "NRF_IPCT_INT_RECEIVE_10"], [69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_RECEIVE_11", "NRF_IPCT_INT_RECEIVE_11"], [69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_RECEIVE_12", "NRF_IPCT_INT_RECEIVE_12"], [69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_RECEIVE_13", "NRF_IPCT_INT_RECEIVE_13"], [69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_RECEIVE_14", "NRF_IPCT_INT_RECEIVE_14"], [69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_RECEIVE_15", "NRF_IPCT_INT_RECEIVE_15"], [69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_RECEIVE_2", "NRF_IPCT_INT_RECEIVE_2"], [69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_RECEIVE_3", "NRF_IPCT_INT_RECEIVE_3"], [69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_RECEIVE_4", "NRF_IPCT_INT_RECEIVE_4"], [69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_RECEIVE_5", "NRF_IPCT_INT_RECEIVE_5"], [69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_RECEIVE_6", "NRF_IPCT_INT_RECEIVE_6"], [69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_RECEIVE_7", "NRF_IPCT_INT_RECEIVE_7"], [69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_RECEIVE_8", "NRF_IPCT_INT_RECEIVE_8"], [69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_RECEIVE_9", "NRF_IPCT_INT_RECEIVE_9"], [69, 1, 1, "c.nrf_ipct_short_mask_t.NRF_IPCT_SHORT_RECEIVE0_ACK0_MASK", "NRF_IPCT_SHORT_RECEIVE0_ACK0_MASK"], [69, 1, 1, "c.nrf_ipct_short_mask_t.NRF_IPCT_SHORT_RECEIVE10_ACK10_MASK", "NRF_IPCT_SHORT_RECEIVE10_ACK10_MASK"], [69, 1, 1, "c.nrf_ipct_short_mask_t.NRF_IPCT_SHORT_RECEIVE11_ACK11_MASK", "NRF_IPCT_SHORT_RECEIVE11_ACK11_MASK"], [69, 1, 1, "c.nrf_ipct_short_mask_t.NRF_IPCT_SHORT_RECEIVE12_ACK12_MASK", "NRF_IPCT_SHORT_RECEIVE12_ACK12_MASK"], [69, 1, 1, "c.nrf_ipct_short_mask_t.NRF_IPCT_SHORT_RECEIVE13_ACK13_MASK", "NRF_IPCT_SHORT_RECEIVE13_ACK13_MASK"], [69, 1, 1, "c.nrf_ipct_short_mask_t.NRF_IPCT_SHORT_RECEIVE14_ACK14_MASK", "NRF_IPCT_SHORT_RECEIVE14_ACK14_MASK"], [69, 1, 1, "c.nrf_ipct_short_mask_t.NRF_IPCT_SHORT_RECEIVE15_ACK15_MASK", "NRF_IPCT_SHORT_RECEIVE15_ACK15_MASK"], [69, 1, 1, "c.nrf_ipct_short_mask_t.NRF_IPCT_SHORT_RECEIVE1_ACK1_MASK", "NRF_IPCT_SHORT_RECEIVE1_ACK1_MASK"], [69, 1, 1, "c.nrf_ipct_short_mask_t.NRF_IPCT_SHORT_RECEIVE2_ACK2_MASK", "NRF_IPCT_SHORT_RECEIVE2_ACK2_MASK"], [69, 1, 1, "c.nrf_ipct_short_mask_t.NRF_IPCT_SHORT_RECEIVE3_ACK3_MASK", "NRF_IPCT_SHORT_RECEIVE3_ACK3_MASK"], [69, 1, 1, "c.nrf_ipct_short_mask_t.NRF_IPCT_SHORT_RECEIVE4_ACK4_MASK", "NRF_IPCT_SHORT_RECEIVE4_ACK4_MASK"], [69, 1, 1, "c.nrf_ipct_short_mask_t.NRF_IPCT_SHORT_RECEIVE5_ACK5_MASK", "NRF_IPCT_SHORT_RECEIVE5_ACK5_MASK"], [69, 1, 1, "c.nrf_ipct_short_mask_t.NRF_IPCT_SHORT_RECEIVE6_ACK6_MASK", "NRF_IPCT_SHORT_RECEIVE6_ACK6_MASK"], [69, 1, 1, "c.nrf_ipct_short_mask_t.NRF_IPCT_SHORT_RECEIVE7_ACK7_MASK", "NRF_IPCT_SHORT_RECEIVE7_ACK7_MASK"], [69, 1, 1, "c.nrf_ipct_short_mask_t.NRF_IPCT_SHORT_RECEIVE8_ACK8_MASK", "NRF_IPCT_SHORT_RECEIVE8_ACK8_MASK"], [69, 1, 1, "c.nrf_ipct_short_mask_t.NRF_IPCT_SHORT_RECEIVE9_ACK9_MASK", "NRF_IPCT_SHORT_RECEIVE9_ACK9_MASK"], [69, 0, 1, "c.NRF_IPCT_TASKS_SEND_COUNT", "NRF_IPCT_TASKS_SEND_COUNT"], [69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_ACK_0", "NRF_IPCT_TASK_ACK_0"], [69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_ACK_1", "NRF_IPCT_TASK_ACK_1"], [69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_ACK_10", "NRF_IPCT_TASK_ACK_10"], [69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_ACK_11", "NRF_IPCT_TASK_ACK_11"], [69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_ACK_12", "NRF_IPCT_TASK_ACK_12"], [69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_ACK_13", "NRF_IPCT_TASK_ACK_13"], [69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_ACK_14", "NRF_IPCT_TASK_ACK_14"], [69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_ACK_15", "NRF_IPCT_TASK_ACK_15"], [69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_ACK_2", "NRF_IPCT_TASK_ACK_2"], [69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_ACK_3", "NRF_IPCT_TASK_ACK_3"], [69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_ACK_4", "NRF_IPCT_TASK_ACK_4"], [69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_ACK_5", "NRF_IPCT_TASK_ACK_5"], [69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_ACK_6", "NRF_IPCT_TASK_ACK_6"], [69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_ACK_7", "NRF_IPCT_TASK_ACK_7"], [69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_ACK_8", "NRF_IPCT_TASK_ACK_8"], [69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_ACK_9", "NRF_IPCT_TASK_ACK_9"], [69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_SEND_0", "NRF_IPCT_TASK_SEND_0"], [69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_SEND_1", "NRF_IPCT_TASK_SEND_1"], [69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_SEND_10", "NRF_IPCT_TASK_SEND_10"], [69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_SEND_11", "NRF_IPCT_TASK_SEND_11"], [69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_SEND_12", "NRF_IPCT_TASK_SEND_12"], [69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_SEND_13", "NRF_IPCT_TASK_SEND_13"], [69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_SEND_14", "NRF_IPCT_TASK_SEND_14"], [69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_SEND_15", "NRF_IPCT_TASK_SEND_15"], [69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_SEND_2", "NRF_IPCT_TASK_SEND_2"], [69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_SEND_3", "NRF_IPCT_TASK_SEND_3"], [69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_SEND_4", "NRF_IPCT_TASK_SEND_4"], [69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_SEND_5", "NRF_IPCT_TASK_SEND_5"], [69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_SEND_6", "NRF_IPCT_TASK_SEND_6"], [69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_SEND_7", "NRF_IPCT_TASK_SEND_7"], [69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_SEND_8", "NRF_IPCT_TASK_SEND_8"], [69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_SEND_9", "NRF_IPCT_TASK_SEND_9"], [67, 1, 1, "c.nrf_ipc_channel_t.NRF_IPC_CHANNEL_0", "NRF_IPC_CHANNEL_0"], [67, 1, 1, "c.nrf_ipc_channel_t.NRF_IPC_CHANNEL_1", "NRF_IPC_CHANNEL_1"], [67, 1, 1, "c.nrf_ipc_channel_t.NRF_IPC_CHANNEL_10", "NRF_IPC_CHANNEL_10"], [67, 1, 1, "c.nrf_ipc_channel_t.NRF_IPC_CHANNEL_11", "NRF_IPC_CHANNEL_11"], [67, 1, 1, "c.nrf_ipc_channel_t.NRF_IPC_CHANNEL_12", "NRF_IPC_CHANNEL_12"], [67, 1, 1, "c.nrf_ipc_channel_t.NRF_IPC_CHANNEL_13", "NRF_IPC_CHANNEL_13"], [67, 1, 1, "c.nrf_ipc_channel_t.NRF_IPC_CHANNEL_14", "NRF_IPC_CHANNEL_14"], [67, 1, 1, "c.nrf_ipc_channel_t.NRF_IPC_CHANNEL_15", "NRF_IPC_CHANNEL_15"], [67, 1, 1, "c.nrf_ipc_channel_t.NRF_IPC_CHANNEL_2", "NRF_IPC_CHANNEL_2"], [67, 1, 1, "c.nrf_ipc_channel_t.NRF_IPC_CHANNEL_3", "NRF_IPC_CHANNEL_3"], [67, 1, 1, "c.nrf_ipc_channel_t.NRF_IPC_CHANNEL_4", "NRF_IPC_CHANNEL_4"], [67, 1, 1, "c.nrf_ipc_channel_t.NRF_IPC_CHANNEL_5", "NRF_IPC_CHANNEL_5"], [67, 1, 1, "c.nrf_ipc_channel_t.NRF_IPC_CHANNEL_6", "NRF_IPC_CHANNEL_6"], [67, 1, 1, "c.nrf_ipc_channel_t.NRF_IPC_CHANNEL_7", "NRF_IPC_CHANNEL_7"], [67, 1, 1, "c.nrf_ipc_channel_t.NRF_IPC_CHANNEL_8", "NRF_IPC_CHANNEL_8"], [67, 1, 1, "c.nrf_ipc_channel_t.NRF_IPC_CHANNEL_9", "NRF_IPC_CHANNEL_9"], [67, 1, 1, "c.nrf_ipc_event_t.NRF_IPC_EVENT_RECEIVE_0", "NRF_IPC_EVENT_RECEIVE_0"], [67, 1, 1, "c.nrf_ipc_event_t.NRF_IPC_EVENT_RECEIVE_1", "NRF_IPC_EVENT_RECEIVE_1"], [67, 1, 1, "c.nrf_ipc_event_t.NRF_IPC_EVENT_RECEIVE_10", "NRF_IPC_EVENT_RECEIVE_10"], [67, 1, 1, "c.nrf_ipc_event_t.NRF_IPC_EVENT_RECEIVE_11", "NRF_IPC_EVENT_RECEIVE_11"], [67, 1, 1, "c.nrf_ipc_event_t.NRF_IPC_EVENT_RECEIVE_12", "NRF_IPC_EVENT_RECEIVE_12"], [67, 1, 1, "c.nrf_ipc_event_t.NRF_IPC_EVENT_RECEIVE_13", "NRF_IPC_EVENT_RECEIVE_13"], [67, 1, 1, "c.nrf_ipc_event_t.NRF_IPC_EVENT_RECEIVE_14", "NRF_IPC_EVENT_RECEIVE_14"], [67, 1, 1, "c.nrf_ipc_event_t.NRF_IPC_EVENT_RECEIVE_15", "NRF_IPC_EVENT_RECEIVE_15"], [67, 1, 1, "c.nrf_ipc_event_t.NRF_IPC_EVENT_RECEIVE_2", "NRF_IPC_EVENT_RECEIVE_2"], [67, 1, 1, "c.nrf_ipc_event_t.NRF_IPC_EVENT_RECEIVE_3", "NRF_IPC_EVENT_RECEIVE_3"], [67, 1, 1, "c.nrf_ipc_event_t.NRF_IPC_EVENT_RECEIVE_4", "NRF_IPC_EVENT_RECEIVE_4"], [67, 1, 1, "c.nrf_ipc_event_t.NRF_IPC_EVENT_RECEIVE_5", "NRF_IPC_EVENT_RECEIVE_5"], [67, 1, 1, "c.nrf_ipc_event_t.NRF_IPC_EVENT_RECEIVE_6", "NRF_IPC_EVENT_RECEIVE_6"], [67, 1, 1, "c.nrf_ipc_event_t.NRF_IPC_EVENT_RECEIVE_7", "NRF_IPC_EVENT_RECEIVE_7"], [67, 1, 1, "c.nrf_ipc_event_t.NRF_IPC_EVENT_RECEIVE_8", "NRF_IPC_EVENT_RECEIVE_8"], [67, 1, 1, "c.nrf_ipc_event_t.NRF_IPC_EVENT_RECEIVE_9", "NRF_IPC_EVENT_RECEIVE_9"], [67, 1, 1, "c.nrf_ipc_int_mask_t.NRF_IPC_INT_RECEIVE_0", "NRF_IPC_INT_RECEIVE_0"], [67, 1, 1, "c.nrf_ipc_int_mask_t.NRF_IPC_INT_RECEIVE_1", "NRF_IPC_INT_RECEIVE_1"], [67, 1, 1, "c.nrf_ipc_int_mask_t.NRF_IPC_INT_RECEIVE_10", "NRF_IPC_INT_RECEIVE_10"], [67, 1, 1, "c.nrf_ipc_int_mask_t.NRF_IPC_INT_RECEIVE_11", "NRF_IPC_INT_RECEIVE_11"], [67, 1, 1, "c.nrf_ipc_int_mask_t.NRF_IPC_INT_RECEIVE_12", "NRF_IPC_INT_RECEIVE_12"], [67, 1, 1, "c.nrf_ipc_int_mask_t.NRF_IPC_INT_RECEIVE_13", "NRF_IPC_INT_RECEIVE_13"], [67, 1, 1, "c.nrf_ipc_int_mask_t.NRF_IPC_INT_RECEIVE_14", "NRF_IPC_INT_RECEIVE_14"], [67, 1, 1, "c.nrf_ipc_int_mask_t.NRF_IPC_INT_RECEIVE_15", "NRF_IPC_INT_RECEIVE_15"], [67, 1, 1, "c.nrf_ipc_int_mask_t.NRF_IPC_INT_RECEIVE_2", "NRF_IPC_INT_RECEIVE_2"], [67, 1, 1, "c.nrf_ipc_int_mask_t.NRF_IPC_INT_RECEIVE_3", "NRF_IPC_INT_RECEIVE_3"], [67, 1, 1, "c.nrf_ipc_int_mask_t.NRF_IPC_INT_RECEIVE_4", "NRF_IPC_INT_RECEIVE_4"], [67, 1, 1, "c.nrf_ipc_int_mask_t.NRF_IPC_INT_RECEIVE_5", "NRF_IPC_INT_RECEIVE_5"], [67, 1, 1, "c.nrf_ipc_int_mask_t.NRF_IPC_INT_RECEIVE_6", "NRF_IPC_INT_RECEIVE_6"], [67, 1, 1, "c.nrf_ipc_int_mask_t.NRF_IPC_INT_RECEIVE_7", "NRF_IPC_INT_RECEIVE_7"], [67, 1, 1, "c.nrf_ipc_int_mask_t.NRF_IPC_INT_RECEIVE_8", "NRF_IPC_INT_RECEIVE_8"], [67, 1, 1, "c.nrf_ipc_int_mask_t.NRF_IPC_INT_RECEIVE_9", "NRF_IPC_INT_RECEIVE_9"], [67, 1, 1, "c.nrf_ipc_task_t.NRF_IPC_TASK_SEND_0", "NRF_IPC_TASK_SEND_0"], [67, 1, 1, "c.nrf_ipc_task_t.NRF_IPC_TASK_SEND_1", "NRF_IPC_TASK_SEND_1"], [67, 1, 1, "c.nrf_ipc_task_t.NRF_IPC_TASK_SEND_10", "NRF_IPC_TASK_SEND_10"], [67, 1, 1, "c.nrf_ipc_task_t.NRF_IPC_TASK_SEND_11", "NRF_IPC_TASK_SEND_11"], [67, 1, 1, "c.nrf_ipc_task_t.NRF_IPC_TASK_SEND_12", "NRF_IPC_TASK_SEND_12"], [67, 1, 1, "c.nrf_ipc_task_t.NRF_IPC_TASK_SEND_13", "NRF_IPC_TASK_SEND_13"], [67, 1, 1, "c.nrf_ipc_task_t.NRF_IPC_TASK_SEND_14", "NRF_IPC_TASK_SEND_14"], [67, 1, 1, "c.nrf_ipc_task_t.NRF_IPC_TASK_SEND_15", "NRF_IPC_TASK_SEND_15"], [67, 1, 1, "c.nrf_ipc_task_t.NRF_IPC_TASK_SEND_2", "NRF_IPC_TASK_SEND_2"], [67, 1, 1, "c.nrf_ipc_task_t.NRF_IPC_TASK_SEND_3", "NRF_IPC_TASK_SEND_3"], [67, 1, 1, "c.nrf_ipc_task_t.NRF_IPC_TASK_SEND_4", "NRF_IPC_TASK_SEND_4"], [67, 1, 1, "c.nrf_ipc_task_t.NRF_IPC_TASK_SEND_5", "NRF_IPC_TASK_SEND_5"], [67, 1, 1, "c.nrf_ipc_task_t.NRF_IPC_TASK_SEND_6", "NRF_IPC_TASK_SEND_6"], [67, 1, 1, "c.nrf_ipc_task_t.NRF_IPC_TASK_SEND_7", "NRF_IPC_TASK_SEND_7"], [67, 1, 1, "c.nrf_ipc_task_t.NRF_IPC_TASK_SEND_8", "NRF_IPC_TASK_SEND_8"], [67, 1, 1, "c.nrf_ipc_task_t.NRF_IPC_TASK_SEND_9", "NRF_IPC_TASK_SEND_9"], [71, 1, 1, "c.nrf_kmu_event_t.NRF_KMU_EVENT_EVENTS_EVENTS_METADATA_READ", "NRF_KMU_EVENT_EVENTS_EVENTS_METADATA_READ"], [71, 1, 1, "c.nrf_kmu_event_t.NRF_KMU_EVENT_EVENTS_EVENTS_PUSHBLOCKED", "NRF_KMU_EVENT_EVENTS_EVENTS_PUSHBLOCKED"], [71, 1, 1, "c.nrf_kmu_event_t.NRF_KMU_EVENT_EVENTS_PROVISIONED", "NRF_KMU_EVENT_EVENTS_PROVISIONED"], [71, 1, 1, "c.nrf_kmu_event_t.NRF_KMU_EVENT_KEYSLOT_ERROR", "NRF_KMU_EVENT_KEYSLOT_ERROR"], [71, 1, 1, "c.nrf_kmu_event_t.NRF_KMU_EVENT_KEYSLOT_PUSHED", "NRF_KMU_EVENT_KEYSLOT_PUSHED"], [71, 1, 1, "c.nrf_kmu_event_t.NRF_KMU_EVENT_KEYSLOT_REVOKED", "NRF_KMU_EVENT_KEYSLOT_REVOKED"], [71, 0, 1, "c.NRF_KMU_HAS_INTEN", "NRF_KMU_HAS_INTEN"], [71, 0, 1, "c.NRF_KMU_HAS_METADATA", "NRF_KMU_HAS_METADATA"], [71, 0, 1, "c.NRF_KMU_HAS_PROVISION", "NRF_KMU_HAS_PROVISION"], [71, 0, 1, "c.NRF_KMU_HAS_PUSH_BLOCK", "NRF_KMU_HAS_PUSH_BLOCK"], [71, 0, 1, "c.NRF_KMU_HAS_READ_METADATA", "NRF_KMU_HAS_READ_METADATA"], [71, 0, 1, "c.NRF_KMU_HAS_REVOKE", "NRF_KMU_HAS_REVOKE"], [71, 0, 1, "c.NRF_KMU_HAS_SRC", "NRF_KMU_HAS_SRC"], [71, 1, 1, "c.nrf_kmu_int_mask_t.NRF_KMU_INT_ERROR_MASK", "NRF_KMU_INT_ERROR_MASK"], [71, 1, 1, "c.nrf_kmu_int_mask_t.NRF_KMU_INT_PUSHED_MASK", "NRF_KMU_INT_PUSHED_MASK"], [71, 1, 1, "c.nrf_kmu_int_mask_t.NRF_KMU_INT_REVOKED_MASK", "NRF_KMU_INT_REVOKED_MASK"], [71, 1, 1, "c.nrf_kmu_status_t.NRF_KMU_STATUS_BLOCKED_MASK", "NRF_KMU_STATUS_BLOCKED_MASK"], [71, 1, 1, "c.nrf_kmu_status_t.NRF_KMU_STATUS_BUSY", "NRF_KMU_STATUS_BUSY"], [71, 1, 1, "c.nrf_kmu_status_t.NRF_KMU_STATUS_READY", "NRF_KMU_STATUS_READY"], [71, 1, 1, "c.nrf_kmu_status_t.NRF_KMU_STATUS_SELECTED_MASK", "NRF_KMU_STATUS_SELECTED_MASK"], [71, 1, 1, "c.nrf_kmu_task_t.NRF_KMU_TASK_PROVISION_KEYSLOT", "NRF_KMU_TASK_PROVISION_KEYSLOT"], [71, 1, 1, "c.nrf_kmu_task_t.NRF_KMU_TASK_PUSH_BLOCK", "NRF_KMU_TASK_PUSH_BLOCK"], [71, 1, 1, "c.nrf_kmu_task_t.NRF_KMU_TASK_PUSH_KEYSLOT", "NRF_KMU_TASK_PUSH_KEYSLOT"], [71, 1, 1, "c.nrf_kmu_task_t.NRF_KMU_TASK_READ_METADATA", "NRF_KMU_TASK_READ_METADATA"], [71, 1, 1, "c.nrf_kmu_task_t.NRF_KMU_TASK_REVOKE_KEYSLOT", "NRF_KMU_TASK_REVOKE_KEYSLOT"], [21, 0, 1, "c.NRF_LFCLKALWAYSRUN", "NRF_LFCLKALWAYSRUN"], [21, 0, 1, "c.NRF_LFCLKRUN", "NRF_LFCLKRUN"], [21, 0, 1, "c.NRF_LFCLKSRC", "NRF_LFCLKSRC"], [21, 0, 1, "c.NRF_LFCLKSRCCOPY", "NRF_LFCLKSRCCOPY"], [21, 0, 1, "c.NRF_LFCLKSTAT", "NRF_LFCLKSTAT"], [74, 1, 1, "c.nrf_lpcomp_detect_t.NRF_LPCOMP_DETECT_CROSS", "NRF_LPCOMP_DETECT_CROSS"], [74, 1, 1, "c.nrf_lpcomp_detect_t.NRF_LPCOMP_DETECT_DOWN", "NRF_LPCOMP_DETECT_DOWN"], [74, 1, 1, "c.nrf_lpcomp_detect_t.NRF_LPCOMP_DETECT_UP", "NRF_LPCOMP_DETECT_UP"], [74, 1, 1, "c.nrf_lpcomp_event_t.NRF_LPCOMP_EVENT_CROSS", "NRF_LPCOMP_EVENT_CROSS"], [74, 1, 1, "c.nrf_lpcomp_event_t.NRF_LPCOMP_EVENT_DOWN", "NRF_LPCOMP_EVENT_DOWN"], [74, 1, 1, "c.nrf_lpcomp_event_t.NRF_LPCOMP_EVENT_READY", "NRF_LPCOMP_EVENT_READY"], [74, 1, 1, "c.nrf_lpcomp_event_t.NRF_LPCOMP_EVENT_UP", "NRF_LPCOMP_EVENT_UP"], [74, 0, 1, "c.NRF_LPCOMP_HAS_AIN_AS_PIN", "NRF_LPCOMP_HAS_AIN_AS_PIN"], [74, 0, 1, "c.NRF_LPCOMP_HAS_HYST", "NRF_LPCOMP_HAS_HYST"], [74, 1, 1, "c.nrf_lpcomp_hyst_t.NRF_LPCOMP_HYST_ENABLED", "NRF_LPCOMP_HYST_ENABLED"], [74, 1, 1, "c.nrf_lpcomp_hyst_t.NRF_LPCOMP_HYST_NOHYST", "NRF_LPCOMP_HYST_NOHYST"], [74, 1, 1, "c.nrf_lpcomp_int_mask_t.NRF_LPCOMP_INT_CROSS_MASK", "NRF_LPCOMP_INT_CROSS_MASK"], [74, 1, 1, "c.nrf_lpcomp_int_mask_t.NRF_LPCOMP_INT_DOWN_MASK", "NRF_LPCOMP_INT_DOWN_MASK"], [74, 1, 1, "c.nrf_lpcomp_int_mask_t.NRF_LPCOMP_INT_READY_MASK", "NRF_LPCOMP_INT_READY_MASK"], [74, 1, 1, "c.nrf_lpcomp_int_mask_t.NRF_LPCOMP_INT_UP_MASK", "NRF_LPCOMP_INT_UP_MASK"], [74, 1, 1, "c.nrf_lpcomp_ref_t.NRF_LPCOMP_REF_EXT_REF", "NRF_LPCOMP_REF_EXT_REF"], [74, 1, 1, "c.nrf_lpcomp_ref_t.NRF_LPCOMP_REF_SUPPLY_1_8", "NRF_LPCOMP_REF_SUPPLY_1_8"], [74, 1, 1, "c.nrf_lpcomp_ref_t.NRF_LPCOMP_REF_SUPPLY_2_8", "NRF_LPCOMP_REF_SUPPLY_2_8"], [74, 1, 1, "c.nrf_lpcomp_ref_t.NRF_LPCOMP_REF_SUPPLY_3_8", "NRF_LPCOMP_REF_SUPPLY_3_8"], [74, 1, 1, "c.nrf_lpcomp_ref_t.NRF_LPCOMP_REF_SUPPLY_4_8", "NRF_LPCOMP_REF_SUPPLY_4_8"], [74, 1, 1, "c.nrf_lpcomp_ref_t.NRF_LPCOMP_REF_SUPPLY_5_8", "NRF_LPCOMP_REF_SUPPLY_5_8"], [74, 1, 1, "c.nrf_lpcomp_ref_t.NRF_LPCOMP_REF_SUPPLY_6_8", "NRF_LPCOMP_REF_SUPPLY_6_8"], [74, 1, 1, "c.nrf_lpcomp_ref_t.NRF_LPCOMP_REF_SUPPLY_7_8", "NRF_LPCOMP_REF_SUPPLY_7_8"], [74, 1, 1, "c.nrf_lpcomp_short_mask_t.NRF_LPCOMP_SHORT_CROSS_STOP_MASK", "NRF_LPCOMP_SHORT_CROSS_STOP_MASK"], [74, 1, 1, "c.nrf_lpcomp_short_mask_t.NRF_LPCOMP_SHORT_DOWN_STOP_MASK", "NRF_LPCOMP_SHORT_DOWN_STOP_MASK"], [74, 1, 1, "c.nrf_lpcomp_short_mask_t.NRF_LPCOMP_SHORT_READY_SAMPLE_MASK", "NRF_LPCOMP_SHORT_READY_SAMPLE_MASK"], [74, 1, 1, "c.nrf_lpcomp_short_mask_t.NRF_LPCOMP_SHORT_READY_STOP_MASK", "NRF_LPCOMP_SHORT_READY_STOP_MASK"], [74, 1, 1, "c.nrf_lpcomp_short_mask_t.NRF_LPCOMP_SHORT_UP_STOP_MASK", "NRF_LPCOMP_SHORT_UP_STOP_MASK"], [74, 1, 1, "c.nrf_lpcomp_task_t.NRF_LPCOMP_TASK_SAMPLE", "NRF_LPCOMP_TASK_SAMPLE"], [74, 1, 1, "c.nrf_lpcomp_task_t.NRF_LPCOMP_TASK_START", "NRF_LPCOMP_TASK_START"], [74, 1, 1, "c.nrf_lpcomp_task_t.NRF_LPCOMP_TASK_STOP", "NRF_LPCOMP_TASK_STOP"], [77, 0, 1, "c.NRF_LRCCONF_AXI_WAITSTATES_ARRAY_SIZE", "NRF_LRCCONF_AXI_WAITSTATES_ARRAY_SIZE"], [77, 0, 1, "c.NRF_LRCCONF_CLK_COUNT", "NRF_LRCCONF_CLK_COUNT"], [77, 1, 1, "c.nrf_lrcconf_clk_src_t.NRF_LRCCONF_CLK_SRC_CLOSED_LOOP", "NRF_LRCCONF_CLK_SRC_CLOSED_LOOP"], [77, 1, 1, "c.nrf_lrcconf_clk_src_t.NRF_LRCCONF_CLK_SRC_OPEN_LOOP", "NRF_LRCCONF_CLK_SRC_OPEN_LOOP"], [77, 1, 1, "c.nrf_lrcconf_event_t.NRF_LRCCONF_EVENT_CLKSTARTED_0", "NRF_LRCCONF_EVENT_CLKSTARTED_0"], [77, 1, 1, "c.nrf_lrcconf_event_t.NRF_LRCCONF_EVENT_CLKSTARTED_1", "NRF_LRCCONF_EVENT_CLKSTARTED_1"], [77, 1, 1, "c.nrf_lrcconf_event_t.NRF_LRCCONF_EVENT_CLKSTARTED_2", "NRF_LRCCONF_EVENT_CLKSTARTED_2"], [77, 1, 1, "c.nrf_lrcconf_event_t.NRF_LRCCONF_EVENT_CLKSTARTED_3", "NRF_LRCCONF_EVENT_CLKSTARTED_3"], [77, 1, 1, "c.nrf_lrcconf_event_t.NRF_LRCCONF_EVENT_CLKSTARTED_4", "NRF_LRCCONF_EVENT_CLKSTARTED_4"], [77, 1, 1, "c.nrf_lrcconf_event_t.NRF_LRCCONF_EVENT_CLKSTARTED_5", "NRF_LRCCONF_EVENT_CLKSTARTED_5"], [77, 1, 1, "c.nrf_lrcconf_event_t.NRF_LRCCONF_EVENT_CLKSTARTED_6", "NRF_LRCCONF_EVENT_CLKSTARTED_6"], [77, 1, 1, "c.nrf_lrcconf_event_t.NRF_LRCCONF_EVENT_CLKSTARTED_7", "NRF_LRCCONF_EVENT_CLKSTARTED_7"], [77, 1, 1, "c.nrf_lrcconf_event_t.NRF_LRCCONF_EVENT_HFXOSTARTED", "NRF_LRCCONF_EVENT_HFXOSTARTED"], [77, 0, 1, "c.NRF_LRCCONF_HAS_HFXO", "NRF_LRCCONF_HAS_HFXO"], [77, 1, 1, "c.nrf_lrcconf_power_domain_mask_t.NRF_LRCCONF_POWER_DOMAIN_0", "NRF_LRCCONF_POWER_DOMAIN_0"], [77, 1, 1, "c.nrf_lrcconf_power_domain_mask_t.NRF_LRCCONF_POWER_DOMAIN_1", "NRF_LRCCONF_POWER_DOMAIN_1"], [77, 1, 1, "c.nrf_lrcconf_power_domain_mask_t.NRF_LRCCONF_POWER_DOMAIN_2", "NRF_LRCCONF_POWER_DOMAIN_2"], [77, 1, 1, "c.nrf_lrcconf_power_domain_mask_t.NRF_LRCCONF_POWER_DOMAIN_3", "NRF_LRCCONF_POWER_DOMAIN_3"], [77, 1, 1, "c.nrf_lrcconf_power_domain_mask_t.NRF_LRCCONF_POWER_DOMAIN_4", "NRF_LRCCONF_POWER_DOMAIN_4"], [77, 1, 1, "c.nrf_lrcconf_power_domain_mask_t.NRF_LRCCONF_POWER_DOMAIN_5", "NRF_LRCCONF_POWER_DOMAIN_5"], [77, 1, 1, "c.nrf_lrcconf_power_domain_mask_t.NRF_LRCCONF_POWER_DOMAIN_6", "NRF_LRCCONF_POWER_DOMAIN_6"], [77, 1, 1, "c.nrf_lrcconf_power_domain_mask_t.NRF_LRCCONF_POWER_DOMAIN_7", "NRF_LRCCONF_POWER_DOMAIN_7"], [77, 1, 1, "c.nrf_lrcconf_power_domain_mask_t.NRF_LRCCONF_POWER_MAIN", "NRF_LRCCONF_POWER_MAIN"], [77, 1, 1, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_CLKSTART_0", "NRF_LRCCONF_TASK_CLKSTART_0"], [77, 1, 1, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_CLKSTART_1", "NRF_LRCCONF_TASK_CLKSTART_1"], [77, 1, 1, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_CLKSTART_2", "NRF_LRCCONF_TASK_CLKSTART_2"], [77, 1, 1, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_CLKSTART_3", "NRF_LRCCONF_TASK_CLKSTART_3"], [77, 1, 1, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_CLKSTART_4", "NRF_LRCCONF_TASK_CLKSTART_4"], [77, 1, 1, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_CLKSTART_5", "NRF_LRCCONF_TASK_CLKSTART_5"], [77, 1, 1, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_CLKSTART_6", "NRF_LRCCONF_TASK_CLKSTART_6"], [77, 1, 1, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_CLKSTART_7", "NRF_LRCCONF_TASK_CLKSTART_7"], [77, 1, 1, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_CLKSTOP_0", "NRF_LRCCONF_TASK_CLKSTOP_0"], [77, 1, 1, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_CLKSTOP_1", "NRF_LRCCONF_TASK_CLKSTOP_1"], [77, 1, 1, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_CLKSTOP_2", "NRF_LRCCONF_TASK_CLKSTOP_2"], [77, 1, 1, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_CLKSTOP_3", "NRF_LRCCONF_TASK_CLKSTOP_3"], [77, 1, 1, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_CLKSTOP_4", "NRF_LRCCONF_TASK_CLKSTOP_4"], [77, 1, 1, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_CLKSTOP_5", "NRF_LRCCONF_TASK_CLKSTOP_5"], [77, 1, 1, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_CLKSTOP_6", "NRF_LRCCONF_TASK_CLKSTOP_6"], [77, 1, 1, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_CLKSTOP_7", "NRF_LRCCONF_TASK_CLKSTOP_7"], [77, 1, 1, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_CONSTLAT_DISABLE", "NRF_LRCCONF_TASK_CONSTLAT_DISABLE"], [77, 1, 1, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_CONSTLAT_ENABLE", "NRF_LRCCONF_TASK_CONSTLAT_ENABLE"], [77, 1, 1, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_REQHFXO", "NRF_LRCCONF_TASK_REQHFXO"], [77, 1, 1, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_STOPREQHFXO", "NRF_LRCCONF_TASK_STOPREQHFXO"], [77, 1, 1, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_SYSTEMOFFNOTREADY", "NRF_LRCCONF_TASK_SYSTEMOFFNOTREADY"], [77, 1, 1, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_SYSTEMOFFREADY", "NRF_LRCCONF_TASK_SYSTEMOFFREADY"], [79, 0, 1, "c.NRF_MEMCONF_BLOCKTYPE_TRIM_MEMRETTRIM_MASK", "NRF_MEMCONF_BLOCKTYPE_TRIM_MEMRETTRIM_MASK"], [79, 0, 1, "c.NRF_MEMCONF_BLOCKTYPE_TRIM_MEMTRIM_MASK", "NRF_MEMCONF_BLOCKTYPE_TRIM_MEMTRIM_MASK"], [79, 0, 1, "c.NRF_MEMCONF_HAS_REPAIR", "NRF_MEMCONF_HAS_REPAIR"], [79, 0, 1, "c.NRF_MEMCONF_HAS_RET2", "NRF_MEMCONF_HAS_RET2"], [79, 0, 1, "c.NRF_MEMCONF_HAS_TRIM", "NRF_MEMCONF_HAS_TRIM"], [79, 0, 1, "c.NRF_MEMCONF_POWERBLOCK_COUNT", "NRF_MEMCONF_POWERBLOCK_COUNT"], [79, 0, 1, "c.NRF_MEMCONF_POWERBLOCK_RAMBLOCK_CONTROL_COUNT", "NRF_MEMCONF_POWERBLOCK_RAMBLOCK_CONTROL_COUNT"], [79, 0, 1, "c.NRF_MEMCONF_POWERBLOCK_RAMBLOCK_RET2_COUNT", "NRF_MEMCONF_POWERBLOCK_RAMBLOCK_RET2_COUNT"], [79, 0, 1, "c.NRF_MEMCONF_POWERBLOCK_RAMBLOCK_RET_COUNT", "NRF_MEMCONF_POWERBLOCK_RAMBLOCK_RET_COUNT"], [81, 1, 1, "c.nrf_mpc_errorsource_t.NRF_MPC_ERRORSOURCE_MPC", "NRF_MPC_ERRORSOURCE_MPC"], [81, 1, 1, "c.nrf_mpc_errorsource_t.NRF_MPC_ERRORSOURCE_SLAVE", "NRF_MPC_ERRORSOURCE_SLAVE"], [81, 1, 1, "c.nrf_mpc_event_t.NRF_MPC_EVENT_MEMACCERR", "NRF_MPC_EVENT_MEMACCERR"], [81, 0, 1, "c.NRF_MPC_HAS_OVERRIDE_OFFSET", "NRF_MPC_HAS_OVERRIDE_OFFSET"], [81, 0, 1, "c.NRF_MPC_HAS_RTCHOKE", "NRF_MPC_HAS_RTCHOKE"], [81, 0, 1, "c.NRF_MPC_HAS_SECDOM", "NRF_MPC_HAS_SECDOM"], [81, 1, 1, "c.nrf_mpc_int_mask_t.NRF_MPC_INT_MEMACCERR_MASK", "NRF_MPC_INT_MEMACCERR_MASK"], [81, 1, 1, "c.nrf_mpc_masterport_mask_t.NRF_MPC_MASTERPORT_0_MASK", "NRF_MPC_MASTERPORT_0_MASK"], [81, 1, 1, "c.nrf_mpc_masterport_mask_t.NRF_MPC_MASTERPORT_10_MASK", "NRF_MPC_MASTERPORT_10_MASK"], [81, 1, 1, "c.nrf_mpc_masterport_mask_t.NRF_MPC_MASTERPORT_11_MASK", "NRF_MPC_MASTERPORT_11_MASK"], [81, 1, 1, "c.nrf_mpc_masterport_mask_t.NRF_MPC_MASTERPORT_12_MASK", "NRF_MPC_MASTERPORT_12_MASK"], [81, 1, 1, "c.nrf_mpc_masterport_mask_t.NRF_MPC_MASTERPORT_13_MASK", "NRF_MPC_MASTERPORT_13_MASK"], [81, 1, 1, "c.nrf_mpc_masterport_mask_t.NRF_MPC_MASTERPORT_14_MASK", "NRF_MPC_MASTERPORT_14_MASK"], [81, 1, 1, "c.nrf_mpc_masterport_mask_t.NRF_MPC_MASTERPORT_1_MASK", "NRF_MPC_MASTERPORT_1_MASK"], [81, 1, 1, "c.nrf_mpc_masterport_mask_t.NRF_MPC_MASTERPORT_2_MASK", "NRF_MPC_MASTERPORT_2_MASK"], [81, 1, 1, "c.nrf_mpc_masterport_mask_t.NRF_MPC_MASTERPORT_3_MASK", "NRF_MPC_MASTERPORT_3_MASK"], [81, 1, 1, "c.nrf_mpc_masterport_mask_t.NRF_MPC_MASTERPORT_4_MASK", "NRF_MPC_MASTERPORT_4_MASK"], [81, 1, 1, "c.nrf_mpc_masterport_mask_t.NRF_MPC_MASTERPORT_5_MASK", "NRF_MPC_MASTERPORT_5_MASK"], [81, 1, 1, "c.nrf_mpc_masterport_mask_t.NRF_MPC_MASTERPORT_6_MASK", "NRF_MPC_MASTERPORT_6_MASK"], [81, 1, 1, "c.nrf_mpc_masterport_mask_t.NRF_MPC_MASTERPORT_7_MASK", "NRF_MPC_MASTERPORT_7_MASK"], [81, 1, 1, "c.nrf_mpc_masterport_mask_t.NRF_MPC_MASTERPORT_8_MASK", "NRF_MPC_MASTERPORT_8_MASK"], [81, 1, 1, "c.nrf_mpc_masterport_mask_t.NRF_MPC_MASTERPORT_9_MASK", "NRF_MPC_MASTERPORT_9_MASK"], [81, 0, 1, "c.NRF_MPC_MASTER_PORTS_COUNT", "NRF_MPC_MASTER_PORTS_COUNT"], [81, 0, 1, "c.NRF_MPC_OVERRIDE_COUNT", "NRF_MPC_OVERRIDE_COUNT"], [81, 1, 1, "c.nrf_mpc_permission_mask_t.NRF_MPC_PERM_EXECUTE_MASK", "NRF_MPC_PERM_EXECUTE_MASK"], [81, 1, 1, "c.nrf_mpc_permission_mask_t.NRF_MPC_PERM_READ_MASK", "NRF_MPC_PERM_READ_MASK"], [81, 1, 1, "c.nrf_mpc_permission_mask_t.NRF_MPC_PERM_SECURE_MASK", "NRF_MPC_PERM_SECURE_MASK"], [81, 1, 1, "c.nrf_mpc_permission_mask_t.NRF_MPC_PERM_WRITE_MASK", "NRF_MPC_PERM_WRITE_MASK"], [81, 0, 1, "c.NRF_MPC_REGION_COUNT", "NRF_MPC_REGION_COUNT"], [81, 0, 1, "c.NRF_MPC_RTCHOKE_COUNT", "NRF_MPC_RTCHOKE_COUNT"], [83, 0, 1, "c.NRF_MPU_PERIPHERAL_MASK_GET", "NRF_MPU_PERIPHERAL_MASK_GET"], [87, 1, 1, "c.nrf_mvdma_aximode_t.NRF_MVDMA_AXIMODE_AXI", "NRF_MVDMA_AXIMODE_AXI"], [87, 1, 1, "c.nrf_mvdma_aximode_t.NRF_MVDMA_AXIMODE_AXILITE", "NRF_MVDMA_AXIMODE_AXILITE"], [87, 1, 1, "c.nrf_mvdma_event_t.NRF_MVDMA_EVENT_END", "NRF_MVDMA_EVENT_END"], [87, 1, 1, "c.nrf_mvdma_event_t.NRF_MVDMA_EVENT_PAUSED", "NRF_MVDMA_EVENT_PAUSED"], [87, 1, 1, "c.nrf_mvdma_event_t.NRF_MVDMA_EVENT_RESET", "NRF_MVDMA_EVENT_RESET"], [87, 1, 1, "c.nrf_mvdma_event_t.NRF_MVDMA_EVENT_SINKBUSERROR", "NRF_MVDMA_EVENT_SINKBUSERROR"], [87, 1, 1, "c.nrf_mvdma_event_t.NRF_MVDMA_EVENT_SINKSELECTJOBDONE", "NRF_MVDMA_EVENT_SINKSELECTJOBDONE"], [87, 1, 1, "c.nrf_mvdma_event_t.NRF_MVDMA_EVENT_SOURCEBUSERROR", "NRF_MVDMA_EVENT_SOURCEBUSERROR"], [87, 1, 1, "c.nrf_mvdma_event_t.NRF_MVDMA_EVENT_SOURCESELECTJOBDONE", "NRF_MVDMA_EVENT_SOURCESELECTJOBDONE"], [87, 1, 1, "c.nrf_mvdma_event_t.NRF_MVDMA_EVENT_STARTED", "NRF_MVDMA_EVENT_STARTED"], [87, 1, 1, "c.nrf_mvdma_fifo_status_t.NRF_MVDMA_FIFO_STATUS_EMPTY", "NRF_MVDMA_FIFO_STATUS_EMPTY"], [87, 1, 1, "c.nrf_mvdma_fifo_status_t.NRF_MVDMA_FIFO_STATUS_FULL", "NRF_MVDMA_FIFO_STATUS_FULL"], [87, 1, 1, "c.nrf_mvdma_fifo_status_t.NRF_MVDMA_FIFO_STATUS_NOT_EMPTY", "NRF_MVDMA_FIFO_STATUS_NOT_EMPTY"], [87, 0, 1, "c.NRF_MVDMA_HAS_AXIMODE", "NRF_MVDMA_HAS_AXIMODE"], [87, 0, 1, "c.NRF_MVDMA_HAS_MULTIMODE", "NRF_MVDMA_HAS_MULTIMODE"], [87, 0, 1, "c.NRF_MVDMA_HAS_NEW_VER", "NRF_MVDMA_HAS_NEW_VER"], [87, 1, 1, "c.nrf_mvdma_int_mask_t.NRF_MVDMA_INT_END_MASK", "NRF_MVDMA_INT_END_MASK"], [87, 1, 1, "c.nrf_mvdma_int_mask_t.NRF_MVDMA_INT_PAUSED_MASK", "NRF_MVDMA_INT_PAUSED_MASK"], [87, 1, 1, "c.nrf_mvdma_int_mask_t.NRF_MVDMA_INT_RESET_MASK", "NRF_MVDMA_INT_RESET_MASK"], [87, 1, 1, "c.nrf_mvdma_int_mask_t.NRF_MVDMA_INT_SINKBUSERROR_MASK", "NRF_MVDMA_INT_SINKBUSERROR_MASK"], [87, 1, 1, "c.nrf_mvdma_int_mask_t.NRF_MVDMA_INT_SINKSELECTJOBDONE_MASK", "NRF_MVDMA_INT_SINKSELECTJOBDONE_MASK"], [87, 1, 1, "c.nrf_mvdma_int_mask_t.NRF_MVDMA_INT_SOURCEBUSERROR_MASK", "NRF_MVDMA_INT_SOURCEBUSERROR_MASK"], [87, 1, 1, "c.nrf_mvdma_int_mask_t.NRF_MVDMA_INT_SOURCESELECTJOBDONE_MASK", "NRF_MVDMA_INT_SOURCESELECTJOBDONE_MASK"], [87, 1, 1, "c.nrf_mvdma_int_mask_t.NRF_MVDMA_INT_STARTED_MASK", "NRF_MVDMA_INT_STARTED_MASK"], [87, 1, 1, "c.nrf_mvdma_mode_t.NRF_MVDMA_MODE_MULTI", "NRF_MVDMA_MODE_MULTI"], [87, 1, 1, "c.nrf_mvdma_mode_t.NRF_MVDMA_MODE_SINGLE", "NRF_MVDMA_MODE_SINGLE"], [87, 1, 1, "c.nrf_mvdma_sink_error_t.NRF_MVDMA_SINK_ERROR_DECODE_READ", "NRF_MVDMA_SINK_ERROR_DECODE_READ"], [87, 1, 1, "c.nrf_mvdma_sink_error_t.NRF_MVDMA_SINK_ERROR_DECODE_WRITE", "NRF_MVDMA_SINK_ERROR_DECODE_WRITE"], [87, 1, 1, "c.nrf_mvdma_sink_error_t.NRF_MVDMA_SINK_ERROR_NONE", "NRF_MVDMA_SINK_ERROR_NONE"], [87, 1, 1, "c.nrf_mvdma_sink_error_t.NRF_MVDMA_SINK_ERROR_READ", "NRF_MVDMA_SINK_ERROR_READ"], [87, 1, 1, "c.nrf_mvdma_sink_error_t.NRF_MVDMA_SINK_ERROR_WRITE", "NRF_MVDMA_SINK_ERROR_WRITE"], [87, 1, 1, "c.nrf_mvdma_source_error_t.NRF_MVDMA_SOURCE_ERROR_NONE", "NRF_MVDMA_SOURCE_ERROR_NONE"], [87, 1, 1, "c.nrf_mvdma_source_error_t.NRF_MVDMA_SOURCE_ERROR_READ", "NRF_MVDMA_SOURCE_ERROR_READ"], [87, 1, 1, "c.nrf_mvdma_source_error_t.NRF_MVDMA_SOURCE_ERROR_READ_DECODE", "NRF_MVDMA_SOURCE_ERROR_READ_DECODE"], [87, 1, 1, "c.nrf_mvdma_task_t.NRF_MVDMA_TASK_PAUSE", "NRF_MVDMA_TASK_PAUSE"], [87, 1, 1, "c.nrf_mvdma_task_t.NRF_MVDMA_TASK_RESET", "NRF_MVDMA_TASK_RESET"], [87, 1, 1, "c.nrf_mvdma_task_t.NRF_MVDMA_TASK_START0", "NRF_MVDMA_TASK_START0"], [87, 1, 1, "c.nrf_mvdma_task_t.NRF_MVDMA_TASK_START1", "NRF_MVDMA_TASK_START1"], [87, 1, 1, "c.nrf_mvdma_task_t.NRF_MVDMA_TASK_START2", "NRF_MVDMA_TASK_START2"], [87, 1, 1, "c.nrf_mvdma_task_t.NRF_MVDMA_TASK_START3", "NRF_MVDMA_TASK_START3"], [87, 1, 1, "c.nrf_mvdma_task_t.NRF_MVDMA_TASK_START4", "NRF_MVDMA_TASK_START4"], [87, 1, 1, "c.nrf_mvdma_task_t.NRF_MVDMA_TASK_START5", "NRF_MVDMA_TASK_START5"], [87, 1, 1, "c.nrf_mvdma_task_t.NRF_MVDMA_TASK_START6", "NRF_MVDMA_TASK_START6"], [87, 1, 1, "c.nrf_mvdma_task_t.NRF_MVDMA_TASK_START7", "NRF_MVDMA_TASK_START7"], [90, 1, 1, "c.nrf_mwu_event_t.NRF_MWU_EVENT_PREGION0_READ", "NRF_MWU_EVENT_PREGION0_READ"], [90, 1, 1, "c.nrf_mwu_event_t.NRF_MWU_EVENT_PREGION0_WRITE", "NRF_MWU_EVENT_PREGION0_WRITE"], [90, 1, 1, "c.nrf_mwu_event_t.NRF_MWU_EVENT_PREGION1_READ", "NRF_MWU_EVENT_PREGION1_READ"], [90, 1, 1, "c.nrf_mwu_event_t.NRF_MWU_EVENT_PREGION1_WRITE", "NRF_MWU_EVENT_PREGION1_WRITE"], [90, 1, 1, "c.nrf_mwu_event_t.NRF_MWU_EVENT_REGION0_READ", "NRF_MWU_EVENT_REGION0_READ"], [90, 1, 1, "c.nrf_mwu_event_t.NRF_MWU_EVENT_REGION0_WRITE", "NRF_MWU_EVENT_REGION0_WRITE"], [90, 1, 1, "c.nrf_mwu_event_t.NRF_MWU_EVENT_REGION1_READ", "NRF_MWU_EVENT_REGION1_READ"], [90, 1, 1, "c.nrf_mwu_event_t.NRF_MWU_EVENT_REGION1_WRITE", "NRF_MWU_EVENT_REGION1_WRITE"], [90, 1, 1, "c.nrf_mwu_event_t.NRF_MWU_EVENT_REGION2_READ", "NRF_MWU_EVENT_REGION2_READ"], [90, 1, 1, "c.nrf_mwu_event_t.NRF_MWU_EVENT_REGION2_WRITE", "NRF_MWU_EVENT_REGION2_WRITE"], [90, 1, 1, "c.nrf_mwu_event_t.NRF_MWU_EVENT_REGION3_READ", "NRF_MWU_EVENT_REGION3_READ"], [90, 1, 1, "c.nrf_mwu_event_t.NRF_MWU_EVENT_REGION3_WRITE", "NRF_MWU_EVENT_REGION3_WRITE"], [90, 1, 1, "c.nrf_mwu_int_mask_t.NRF_MWU_INT_PREGION0_READ_MASK", "NRF_MWU_INT_PREGION0_READ_MASK"], [90, 1, 1, "c.nrf_mwu_int_mask_t.NRF_MWU_INT_PREGION0_WRITE_MASK", "NRF_MWU_INT_PREGION0_WRITE_MASK"], [90, 1, 1, "c.nrf_mwu_int_mask_t.NRF_MWU_INT_PREGION1_READ_MASK", "NRF_MWU_INT_PREGION1_READ_MASK"], [90, 1, 1, "c.nrf_mwu_int_mask_t.NRF_MWU_INT_PREGION1_WRITE_MASK", "NRF_MWU_INT_PREGION1_WRITE_MASK"], [90, 1, 1, "c.nrf_mwu_int_mask_t.NRF_MWU_INT_REGION0_READ_MASK", "NRF_MWU_INT_REGION0_READ_MASK"], [90, 1, 1, "c.nrf_mwu_int_mask_t.NRF_MWU_INT_REGION0_WRITE_MASK", "NRF_MWU_INT_REGION0_WRITE_MASK"], [90, 1, 1, "c.nrf_mwu_int_mask_t.NRF_MWU_INT_REGION1_READ_MASK", "NRF_MWU_INT_REGION1_READ_MASK"], [90, 1, 1, "c.nrf_mwu_int_mask_t.NRF_MWU_INT_REGION1_WRITE_MASK", "NRF_MWU_INT_REGION1_WRITE_MASK"], [90, 1, 1, "c.nrf_mwu_int_mask_t.NRF_MWU_INT_REGION2_READ_MASK", "NRF_MWU_INT_REGION2_READ_MASK"], [90, 1, 1, "c.nrf_mwu_int_mask_t.NRF_MWU_INT_REGION2_WRITE_MASK", "NRF_MWU_INT_REGION2_WRITE_MASK"], [90, 1, 1, "c.nrf_mwu_int_mask_t.NRF_MWU_INT_REGION3_READ_MASK", "NRF_MWU_INT_REGION3_READ_MASK"], [90, 1, 1, "c.nrf_mwu_int_mask_t.NRF_MWU_INT_REGION3_WRITE_MASK", "NRF_MWU_INT_REGION3_WRITE_MASK"], [90, 1, 1, "c.nrf_mwu_region_watch_t.NRF_MWU_WATCH_PREGION0_READ", "NRF_MWU_WATCH_PREGION0_READ"], [90, 1, 1, "c.nrf_mwu_region_watch_t.NRF_MWU_WATCH_PREGION0_WRITE", "NRF_MWU_WATCH_PREGION0_WRITE"], [90, 1, 1, "c.nrf_mwu_region_watch_t.NRF_MWU_WATCH_PREGION1_READ", "NRF_MWU_WATCH_PREGION1_READ"], [90, 1, 1, "c.nrf_mwu_region_watch_t.NRF_MWU_WATCH_PREGION1_WRITE", "NRF_MWU_WATCH_PREGION1_WRITE"], [90, 1, 1, "c.nrf_mwu_region_watch_t.NRF_MWU_WATCH_REGION0_READ", "NRF_MWU_WATCH_REGION0_READ"], [90, 1, 1, "c.nrf_mwu_region_watch_t.NRF_MWU_WATCH_REGION0_WRITE", "NRF_MWU_WATCH_REGION0_WRITE"], [90, 1, 1, "c.nrf_mwu_region_watch_t.NRF_MWU_WATCH_REGION1_READ", "NRF_MWU_WATCH_REGION1_READ"], [90, 1, 1, "c.nrf_mwu_region_watch_t.NRF_MWU_WATCH_REGION1_WRITE", "NRF_MWU_WATCH_REGION1_WRITE"], [90, 1, 1, "c.nrf_mwu_region_watch_t.NRF_MWU_WATCH_REGION2_READ", "NRF_MWU_WATCH_REGION2_READ"], [90, 1, 1, "c.nrf_mwu_region_watch_t.NRF_MWU_WATCH_REGION2_WRITE", "NRF_MWU_WATCH_REGION2_WRITE"], [90, 1, 1, "c.nrf_mwu_region_watch_t.NRF_MWU_WATCH_REGION3_READ", "NRF_MWU_WATCH_REGION3_READ"], [90, 1, 1, "c.nrf_mwu_region_watch_t.NRF_MWU_WATCH_REGION3_WRITE", "NRF_MWU_WATCH_REGION3_WRITE"], [93, 0, 1, "c.NRF_NFCID1_HAS_NEW_LAYOUT", "NRF_NFCID1_HAS_NEW_LAYOUT"], [93, 0, 1, "c.NRF_NFCT_CRC_SIZE", "NRF_NFCT_CRC_SIZE"], [93, 0, 1, "c.NRF_NFCT_DISABLE_ALL_INT", "NRF_NFCT_DISABLE_ALL_INT"], [93, 1, 1, "c.nrf_nfct_error_status_t.NRF_NFCT_ERROR_FRAMEDELAYTIMEOUT_MASK", "NRF_NFCT_ERROR_FRAMEDELAYTIMEOUT_MASK"], [93, 1, 1, "c.nrf_nfct_error_status_t.NRF_NFCT_ERROR_NFCFIELDTOOSTRONG_MASK", "NRF_NFCT_ERROR_NFCFIELDTOOSTRONG_MASK"], [93, 1, 1, "c.nrf_nfct_error_status_t.NRF_NFCT_ERROR_NFCFIELDTOOWEAK_MASK", "NRF_NFCT_ERROR_NFCFIELDTOOWEAK_MASK"], [93, 1, 1, "c.nrf_nfct_event_t.NRF_NFCT_EVENT_AUTOCOLRESSTARTED", "NRF_NFCT_EVENT_AUTOCOLRESSTARTED"], [93, 1, 1, "c.nrf_nfct_event_t.NRF_NFCT_EVENT_COLLISION", "NRF_NFCT_EVENT_COLLISION"], [93, 1, 1, "c.nrf_nfct_event_t.NRF_NFCT_EVENT_ENDRX", "NRF_NFCT_EVENT_ENDRX"], [93, 1, 1, "c.nrf_nfct_event_t.NRF_NFCT_EVENT_ENDTX", "NRF_NFCT_EVENT_ENDTX"], [93, 1, 1, "c.nrf_nfct_event_t.NRF_NFCT_EVENT_ERROR", "NRF_NFCT_EVENT_ERROR"], [93, 1, 1, "c.nrf_nfct_event_t.NRF_NFCT_EVENT_FIELDDETECTED", "NRF_NFCT_EVENT_FIELDDETECTED"], [93, 1, 1, "c.nrf_nfct_event_t.NRF_NFCT_EVENT_FIELDLOST", "NRF_NFCT_EVENT_FIELDLOST"], [93, 1, 1, "c.nrf_nfct_event_t.NRF_NFCT_EVENT_READY", "NRF_NFCT_EVENT_READY"], [93, 1, 1, "c.nrf_nfct_event_t.NRF_NFCT_EVENT_RXERROR", "NRF_NFCT_EVENT_RXERROR"], [93, 1, 1, "c.nrf_nfct_event_t.NRF_NFCT_EVENT_RXFRAMEEND", "NRF_NFCT_EVENT_RXFRAMEEND"], [93, 1, 1, "c.nrf_nfct_event_t.NRF_NFCT_EVENT_RXFRAMESTART", "NRF_NFCT_EVENT_RXFRAMESTART"], [93, 1, 1, "c.nrf_nfct_event_t.NRF_NFCT_EVENT_SELECTED", "NRF_NFCT_EVENT_SELECTED"], [93, 1, 1, "c.nrf_nfct_event_t.NRF_NFCT_EVENT_STARTED", "NRF_NFCT_EVENT_STARTED"], [93, 1, 1, "c.nrf_nfct_event_t.NRF_NFCT_EVENT_TXFRAMEEND", "NRF_NFCT_EVENT_TXFRAMEEND"], [93, 1, 1, "c.nrf_nfct_event_t.NRF_NFCT_EVENT_TXFRAMESTART", "NRF_NFCT_EVENT_TXFRAMESTART"], [93, 1, 1, "c.nrf_nfct_field_state_t.NRF_NFCT_FIELD_STATE_LOCK_MASK", "NRF_NFCT_FIELD_STATE_LOCK_MASK"], [93, 1, 1, "c.nrf_nfct_field_state_t.NRF_NFCT_FIELD_STATE_PRESENT_MASK", "NRF_NFCT_FIELD_STATE_PRESENT_MASK"], [93, 0, 1, "c.NRF_NFCT_FRAME_DELAY_MAX_MAX_VALUE", "NRF_NFCT_FRAME_DELAY_MAX_MAX_VALUE"], [93, 1, 1, "c.nrf_nfct_frame_delay_mode_t.NRF_NFCT_FRAME_DELAY_MODE_EXACTVAL", "NRF_NFCT_FRAME_DELAY_MODE_EXACTVAL"], [93, 1, 1, "c.nrf_nfct_frame_delay_mode_t.NRF_NFCT_FRAME_DELAY_MODE_FREERUN", "NRF_NFCT_FRAME_DELAY_MODE_FREERUN"], [93, 1, 1, "c.nrf_nfct_frame_delay_mode_t.NRF_NFCT_FRAME_DELAY_MODE_WINDOW", "NRF_NFCT_FRAME_DELAY_MODE_WINDOW"], [93, 1, 1, "c.nrf_nfct_frame_delay_mode_t.NRF_NFCT_FRAME_DELAY_MODE_WINDOWGRID", "NRF_NFCT_FRAME_DELAY_MODE_WINDOWGRID"], [93, 0, 1, "c.NRF_NFCT_HAS_AUTOCOLRES_CONFIG_REG", "NRF_NFCT_HAS_AUTOCOLRES_CONFIG_REG"], [93, 0, 1, "c.NRF_NFCT_HAS_BIAS_CONFIG_TRIM_REG", "NRF_NFCT_HAS_BIAS_CONFIG_TRIM_REG"], [93, 0, 1, "c.NRF_NFCT_HAS_MODULATION_CTRL_REG", "NRF_NFCT_HAS_MODULATION_CTRL_REG"], [93, 0, 1, "c.NRF_NFCT_HAS_MODULATION_PSEL_REG", "NRF_NFCT_HAS_MODULATION_PSEL_REG"], [93, 0, 1, "c.NRF_NFCT_HAS_PAD_CONFIG_REG", "NRF_NFCT_HAS_PAD_CONFIG_REG"], [93, 0, 1, "c.NRF_NFCT_HAS_SLEEP_STATE_REG", "NRF_NFCT_HAS_SLEEP_STATE_REG"], [93, 0, 1, "c.NRF_NFCT_HAS_STOPTX_TASK", "NRF_NFCT_HAS_STOPTX_TASK"], [93, 0, 1, "c.NRF_NFCT_HAS_TAG_STATE_REG", "NRF_NFCT_HAS_TAG_STATE_REG"], [93, 1, 1, "c.nrf_nfct_int_mask_t.NRF_NFCT_INT_AUTOCOLRESSTARTED_MASK", "NRF_NFCT_INT_AUTOCOLRESSTARTED_MASK"], [93, 1, 1, "c.nrf_nfct_int_mask_t.NRF_NFCT_INT_COLLISION_MASK", "NRF_NFCT_INT_COLLISION_MASK"], [93, 1, 1, "c.nrf_nfct_int_mask_t.NRF_NFCT_INT_ENDRX_MASK", "NRF_NFCT_INT_ENDRX_MASK"], [93, 1, 1, "c.nrf_nfct_int_mask_t.NRF_NFCT_INT_ENDTX_MASK", "NRF_NFCT_INT_ENDTX_MASK"], [93, 1, 1, "c.nrf_nfct_int_mask_t.NRF_NFCT_INT_ERROR_MASK", "NRF_NFCT_INT_ERROR_MASK"], [93, 1, 1, "c.nrf_nfct_int_mask_t.NRF_NFCT_INT_FIELDDETECTED_MASK", "NRF_NFCT_INT_FIELDDETECTED_MASK"], [93, 1, 1, "c.nrf_nfct_int_mask_t.NRF_NFCT_INT_FIELDLOST_MASK", "NRF_NFCT_INT_FIELDLOST_MASK"], [93, 1, 1, "c.nrf_nfct_int_mask_t.NRF_NFCT_INT_READY_MASK", "NRF_NFCT_INT_READY_MASK"], [93, 1, 1, "c.nrf_nfct_int_mask_t.NRF_NFCT_INT_RXERROR_MASK", "NRF_NFCT_INT_RXERROR_MASK"], [93, 1, 1, "c.nrf_nfct_int_mask_t.NRF_NFCT_INT_RXFRAMEEND_MASK", "NRF_NFCT_INT_RXFRAMEEND_MASK"], [93, 1, 1, "c.nrf_nfct_int_mask_t.NRF_NFCT_INT_RXFRAMESTART_MASK", "NRF_NFCT_INT_RXFRAMESTART_MASK"], [93, 1, 1, "c.nrf_nfct_int_mask_t.NRF_NFCT_INT_SELECTED_MASK", "NRF_NFCT_INT_SELECTED_MASK"], [93, 1, 1, "c.nrf_nfct_int_mask_t.NRF_NFCT_INT_STARTED_MASK", "NRF_NFCT_INT_STARTED_MASK"], [93, 1, 1, "c.nrf_nfct_int_mask_t.NRF_NFCT_INT_TXFRAMEEND_MASK", "NRF_NFCT_INT_TXFRAMEEND_MASK"], [93, 1, 1, "c.nrf_nfct_int_mask_t.NRF_NFCT_INT_TXFRAMESTART_MASK", "NRF_NFCT_INT_TXFRAMESTART_MASK"], [93, 1, 1, "c.nrf_nfct_modulation_ctrl_t.NRF_NFCT_MODULATION_CTRL_GPIO", "NRF_NFCT_MODULATION_CTRL_GPIO"], [93, 1, 1, "c.nrf_nfct_modulation_ctrl_t.NRF_NFCT_MODULATION_CTRL_INTERNAL", "NRF_NFCT_MODULATION_CTRL_INTERNAL"], [93, 1, 1, "c.nrf_nfct_modulation_ctrl_t.NRF_NFCT_MODULATION_CTRL_INTERNAL_GPIO", "NRF_NFCT_MODULATION_CTRL_INTERNAL_GPIO"], [93, 1, 1, "c.nrf_nfct_modulation_ctrl_t.NRF_NFCT_MODULATION_CTRL_INVALID", "NRF_NFCT_MODULATION_CTRL_INVALID"], [93, 0, 1, "c.NRF_NFCT_MOD_CTRL_PIN_NOT_CONNECTED", "NRF_NFCT_MOD_CTRL_PIN_NOT_CONNECTED"], [93, 1, 1, "c.nrf_nfct_rx_frame_config_t.NRF_NFCT_RX_FRAME_CONFIG_CRC16", "NRF_NFCT_RX_FRAME_CONFIG_CRC16"], [93, 1, 1, "c.nrf_nfct_rx_frame_config_t.NRF_NFCT_RX_FRAME_CONFIG_PARITY", "NRF_NFCT_RX_FRAME_CONFIG_PARITY"], [93, 1, 1, "c.nrf_nfct_rx_frame_config_t.NRF_NFCT_RX_FRAME_CONFIG_SOF", "NRF_NFCT_RX_FRAME_CONFIG_SOF"], [93, 1, 1, "c.nrf_nfct_rx_frame_status_t.NRF_NFCT_RX_FRAME_STATUS_CRC_MASK", "NRF_NFCT_RX_FRAME_STATUS_CRC_MASK"], [93, 1, 1, "c.nrf_nfct_rx_frame_status_t.NRF_NFCT_RX_FRAME_STATUS_OVERRUN_MASK", "NRF_NFCT_RX_FRAME_STATUS_OVERRUN_MASK"], [93, 1, 1, "c.nrf_nfct_rx_frame_status_t.NRF_NFCT_RX_FRAME_STATUS_PARITY_MASK", "NRF_NFCT_RX_FRAME_STATUS_PARITY_MASK"], [93, 1, 1, "c.nrf_nfct_selres_protocol_t.NRF_NFCT_SELRES_PROTOCOL_NFCDEP", "NRF_NFCT_SELRES_PROTOCOL_NFCDEP"], [93, 1, 1, "c.nrf_nfct_selres_protocol_t.NRF_NFCT_SELRES_PROTOCOL_NFCDEP_T4AT", "NRF_NFCT_SELRES_PROTOCOL_NFCDEP_T4AT"], [93, 1, 1, "c.nrf_nfct_selres_protocol_t.NRF_NFCT_SELRES_PROTOCOL_T2T", "NRF_NFCT_SELRES_PROTOCOL_T2T"], [93, 1, 1, "c.nrf_nfct_selres_protocol_t.NRF_NFCT_SELRES_PROTOCOL_T4AT", "NRF_NFCT_SELRES_PROTOCOL_T4AT"], [93, 1, 1, "c.nrf_nfct_sensres_bit_frame_sdd_t.NRF_NFCT_SENSRES_BIT_FRAME_SDD_00000", "NRF_NFCT_SENSRES_BIT_FRAME_SDD_00000"], [93, 1, 1, "c.nrf_nfct_sensres_bit_frame_sdd_t.NRF_NFCT_SENSRES_BIT_FRAME_SDD_00001", "NRF_NFCT_SENSRES_BIT_FRAME_SDD_00001"], [93, 1, 1, "c.nrf_nfct_sensres_bit_frame_sdd_t.NRF_NFCT_SENSRES_BIT_FRAME_SDD_00010", "NRF_NFCT_SENSRES_BIT_FRAME_SDD_00010"], [93, 1, 1, "c.nrf_nfct_sensres_bit_frame_sdd_t.NRF_NFCT_SENSRES_BIT_FRAME_SDD_00100", "NRF_NFCT_SENSRES_BIT_FRAME_SDD_00100"], [93, 1, 1, "c.nrf_nfct_sensres_bit_frame_sdd_t.NRF_NFCT_SENSRES_BIT_FRAME_SDD_01000", "NRF_NFCT_SENSRES_BIT_FRAME_SDD_01000"], [93, 1, 1, "c.nrf_nfct_sensres_bit_frame_sdd_t.NRF_NFCT_SENSRES_BIT_FRAME_SDD_10000", "NRF_NFCT_SENSRES_BIT_FRAME_SDD_10000"], [93, 1, 1, "c.nrf_nfct_sensres_nfcid1_size_t.NRF_NFCT_SENSRES_NFCID1_SIZE_DEFAULT", "NRF_NFCT_SENSRES_NFCID1_SIZE_DEFAULT"], [93, 1, 1, "c.nrf_nfct_sensres_nfcid1_size_t.NRF_NFCT_SENSRES_NFCID1_SIZE_DOUBLE", "NRF_NFCT_SENSRES_NFCID1_SIZE_DOUBLE"], [93, 1, 1, "c.nrf_nfct_sensres_nfcid1_size_t.NRF_NFCT_SENSRES_NFCID1_SIZE_SINGLE", "NRF_NFCT_SENSRES_NFCID1_SIZE_SINGLE"], [93, 1, 1, "c.nrf_nfct_sensres_nfcid1_size_t.NRF_NFCT_SENSRES_NFCID1_SIZE_TRIPLE", "NRF_NFCT_SENSRES_NFCID1_SIZE_TRIPLE"], [93, 1, 1, "c.nrf_nfct_sensres_platform_config_t.NRF_NFCT_SENSRES_PLATFORM_CONFIG_OTHER", "NRF_NFCT_SENSRES_PLATFORM_CONFIG_OTHER"], [93, 1, 1, "c.nrf_nfct_sensres_platform_config_t.NRF_NFCT_SENSRES_PLATFORM_CONFIG_T1T", "NRF_NFCT_SENSRES_PLATFORM_CONFIG_T1T"], [93, 1, 1, "c.nrf_nfct_short_mask_t.NRF_NFCT_SHORT_FIELDDETECTED_ACTIVATE_MASK", "NRF_NFCT_SHORT_FIELDDETECTED_ACTIVATE_MASK"], [93, 1, 1, "c.nrf_nfct_short_mask_t.NRF_NFCT_SHORT_FIELDLOST_SENSE_MASK", "NRF_NFCT_SHORT_FIELDLOST_SENSE_MASK"], [93, 1, 1, "c.nrf_nfct_short_mask_t.NRF_NFCT_SHORT_TXFRAMEEND_ENABLERXDATA_MASK", "NRF_NFCT_SHORT_TXFRAMEEND_ENABLERXDATA_MASK"], [93, 1, 1, "c.nrf_nfct_sleep_state_t.NRF_NFCT_SLEEP_STATE_IDLE", "NRF_NFCT_SLEEP_STATE_IDLE"], [93, 1, 1, "c.nrf_nfct_sleep_state_t.NRF_NFCT_SLEEP_STATE_SLEEP_A", "NRF_NFCT_SLEEP_STATE_SLEEP_A"], [93, 1, 1, "c.nrf_nfct_tag_state_t.NRF_NFCT_TAG_STATE_DISABLED", "NRF_NFCT_TAG_STATE_DISABLED"], [93, 1, 1, "c.nrf_nfct_tag_state_t.NRF_NFCT_TAG_STATE_FRAME_DELAY", "NRF_NFCT_TAG_STATE_FRAME_DELAY"], [93, 1, 1, "c.nrf_nfct_tag_state_t.NRF_NFCT_TAG_STATE_IDLE", "NRF_NFCT_TAG_STATE_IDLE"], [93, 1, 1, "c.nrf_nfct_tag_state_t.NRF_NFCT_TAG_STATE_RAMP_UP", "NRF_NFCT_TAG_STATE_RAMP_UP"], [93, 1, 1, "c.nrf_nfct_tag_state_t.NRF_NFCT_TAG_STATE_RECEIVE", "NRF_NFCT_TAG_STATE_RECEIVE"], [93, 1, 1, "c.nrf_nfct_tag_state_t.NRF_NFCT_TAG_STATE_TRANSMIT", "NRF_NFCT_TAG_STATE_TRANSMIT"], [93, 1, 1, "c.nrf_nfct_task_t.NRF_NFCT_TASK_ACTIVATE", "NRF_NFCT_TASK_ACTIVATE"], [93, 1, 1, "c.nrf_nfct_task_t.NRF_NFCT_TASK_DISABLE", "NRF_NFCT_TASK_DISABLE"], [93, 1, 1, "c.nrf_nfct_task_t.NRF_NFCT_TASK_ENABLERXDATA", "NRF_NFCT_TASK_ENABLERXDATA"], [93, 1, 1, "c.nrf_nfct_task_t.NRF_NFCT_TASK_GOIDLE", "NRF_NFCT_TASK_GOIDLE"], [93, 1, 1, "c.nrf_nfct_task_t.NRF_NFCT_TASK_GOSLEEP", "NRF_NFCT_TASK_GOSLEEP"], [93, 1, 1, "c.nrf_nfct_task_t.NRF_NFCT_TASK_SENSE", "NRF_NFCT_TASK_SENSE"], [93, 1, 1, "c.nrf_nfct_task_t.NRF_NFCT_TASK_STARTTX", "NRF_NFCT_TASK_STARTTX"], [93, 1, 1, "c.nrf_nfct_task_t.NRF_NFCT_TASK_STOPTX", "NRF_NFCT_TASK_STOPTX"], [93, 1, 1, "c.nrf_nfct_tx_frame_config_t.NRF_NFCT_TX_FRAME_CONFIG_CRC16", "NRF_NFCT_TX_FRAME_CONFIG_CRC16"], [93, 1, 1, "c.nrf_nfct_tx_frame_config_t.NRF_NFCT_TX_FRAME_CONFIG_DISCARD_START", "NRF_NFCT_TX_FRAME_CONFIG_DISCARD_START"], [93, 1, 1, "c.nrf_nfct_tx_frame_config_t.NRF_NFCT_TX_FRAME_CONFIG_PARITY", "NRF_NFCT_TX_FRAME_CONFIG_PARITY"], [93, 1, 1, "c.nrf_nfct_tx_frame_config_t.NRF_NFCT_TX_FRAME_CONFIG_SOF", "NRF_NFCT_TX_FRAME_CONFIG_SOF"], [96, 0, 1, "c.NRF_NVMC_HAS_NON_SECURE_OPERATIONS", "NRF_NVMC_HAS_NON_SECURE_OPERATIONS"], [96, 0, 1, "c.NRF_NVMC_HAS_PARTIAL_ERASE", "NRF_NVMC_HAS_PARTIAL_ERASE"], [96, 0, 1, "c.NRF_NVMC_HAS_UICR_ERASE", "NRF_NVMC_HAS_UICR_ERASE"], [96, 1, 1, "c.nrf_nvmc_mode_t.NRF_NVMC_MODE_ERASE", "NRF_NVMC_MODE_ERASE"], [96, 1, 1, "c.nrf_nvmc_mode_t.NRF_NVMC_MODE_READONLY", "NRF_NVMC_MODE_READONLY"], [96, 1, 1, "c.nrf_nvmc_mode_t.NRF_NVMC_MODE_WRITE", "NRF_NVMC_MODE_WRITE"], [96, 1, 1, "c.nrf_nvmc_ns_mode_t.NRF_NVMC_NS_MODE_ERASE", "NRF_NVMC_NS_MODE_ERASE"], [96, 1, 1, "c.nrf_nvmc_ns_mode_t.NRF_NVMC_NS_MODE_READONLY", "NRF_NVMC_NS_MODE_READONLY"], [96, 1, 1, "c.nrf_nvmc_ns_mode_t.NRF_NVMC_NS_MODE_WRITE", "NRF_NVMC_NS_MODE_WRITE"], [98, 0, 1, "c.NRF_OSCILLATORS_HAS_CLOCK_QUALITY_IND", "NRF_OSCILLATORS_HAS_CLOCK_QUALITY_IND"], [98, 0, 1, "c.NRF_OSCILLATORS_HAS_LFXO_BYPASS", "NRF_OSCILLATORS_HAS_LFXO_BYPASS"], [98, 0, 1, "c.NRF_OSCILLATORS_HAS_LFXO_CAP_AS_INT_VALUE", "NRF_OSCILLATORS_HAS_LFXO_CAP_AS_INT_VALUE"], [98, 0, 1, "c.NRF_OSCILLATORS_HAS_PLL", "NRF_OSCILLATORS_HAS_PLL"], [98, 1, 1, "c.nrf_oscillators_hfxo_clock_quality_t.NRF_OSCILLATORS_HFXO_CLOCK_QUALITY_NONE", "NRF_OSCILLATORS_HFXO_CLOCK_QUALITY_NONE"], [98, 1, 1, "c.nrf_oscillators_hfxo_clock_quality_t.NRF_OSCILLATORS_HFXO_CLOCK_QUALITY_STARTED", "NRF_OSCILLATORS_HFXO_CLOCK_QUALITY_STARTED"], [98, 1, 1, "c.nrf_oscillators_hfxo_clock_quality_t.NRF_OSCILLATORS_HFXO_CLOCK_QUALITY_STARTING", "NRF_OSCILLATORS_HFXO_CLOCK_QUALITY_STARTING"], [98, 0, 1, "c.NRF_OSCILLATORS_LFXO_CAP_EXTERNAL", "NRF_OSCILLATORS_LFXO_CAP_EXTERNAL"], [98, 1, 1, "c.nrf_oscillators_pll_freq_t.NRF_OSCILLATORS_PLL_FREQ_128M", "NRF_OSCILLATORS_PLL_FREQ_128M"], [98, 1, 1, "c.nrf_oscillators_pll_freq_t.NRF_OSCILLATORS_PLL_FREQ_64M", "NRF_OSCILLATORS_PLL_FREQ_64M"], [100, 1, 1, "c.nrf_pdm_edge_t.NRF_PDM_EDGE_LEFTFALLING", "NRF_PDM_EDGE_LEFTFALLING"], [100, 1, 1, "c.nrf_pdm_edge_t.NRF_PDM_EDGE_LEFTRISING", "NRF_PDM_EDGE_LEFTRISING"], [100, 1, 1, "c.nrf_pdm_event_t.NRF_PDM_EVENT_END", "NRF_PDM_EVENT_END"], [100, 1, 1, "c.nrf_pdm_event_t.NRF_PDM_EVENT_STARTED", "NRF_PDM_EVENT_STARTED"], [100, 1, 1, "c.nrf_pdm_event_t.NRF_PDM_EVENT_STOPPED", "NRF_PDM_EVENT_STOPPED"], [100, 1, 1, "c.nrf_pdm_freq_t.NRF_PDM_FREQ_1000K", "NRF_PDM_FREQ_1000K"], [100, 1, 1, "c.nrf_pdm_freq_t.NRF_PDM_FREQ_1032K", "NRF_PDM_FREQ_1032K"], [100, 1, 1, "c.nrf_pdm_freq_t.NRF_PDM_FREQ_1067K", "NRF_PDM_FREQ_1067K"], [100, 1, 1, "c.nrf_pdm_freq_t.NRF_PDM_FREQ_1231K", "NRF_PDM_FREQ_1231K"], [100, 1, 1, "c.nrf_pdm_freq_t.NRF_PDM_FREQ_1280K", "NRF_PDM_FREQ_1280K"], [100, 1, 1, "c.nrf_pdm_freq_t.NRF_PDM_FREQ_1333K", "NRF_PDM_FREQ_1333K"], [100, 0, 1, "c.NRF_PDM_GAIN_DEFAULT", "NRF_PDM_GAIN_DEFAULT"], [100, 0, 1, "c.NRF_PDM_GAIN_MAXIMUM", "NRF_PDM_GAIN_MAXIMUM"], [100, 0, 1, "c.NRF_PDM_GAIN_MINIMUM", "NRF_PDM_GAIN_MINIMUM"], [100, 0, 1, "c.NRF_PDM_HAS_DMA_REG", "NRF_PDM_HAS_DMA_REG"], [100, 0, 1, "c.NRF_PDM_HAS_DMA_TASKS_EVENTS", "NRF_PDM_HAS_DMA_TASKS_EVENTS"], [100, 0, 1, "c.NRF_PDM_HAS_MCLKCONFIG", "NRF_PDM_HAS_MCLKCONFIG"], [100, 0, 1, "c.NRF_PDM_HAS_RATIO_CONFIG", "NRF_PDM_HAS_RATIO_CONFIG"], [100, 1, 1, "c.nrf_pdm_int_mask_t.NRF_PDM_INT_END", "NRF_PDM_INT_END"], [100, 1, 1, "c.nrf_pdm_int_mask_t.NRF_PDM_INT_STARTED", "NRF_PDM_INT_STARTED"], [100, 1, 1, "c.nrf_pdm_int_mask_t.NRF_PDM_INT_STOPPED", "NRF_PDM_INT_STOPPED"], [100, 1, 1, "c.nrf_pdm_mclksrc_t.NRF_PDM_MCLKSRC_ACLK", "NRF_PDM_MCLKSRC_ACLK"], [100, 1, 1, "c.nrf_pdm_mclksrc_t.NRF_PDM_MCLKSRC_PCLK32M", "NRF_PDM_MCLKSRC_PCLK32M"], [100, 1, 1, "c.nrf_pdm_mode_t.NRF_PDM_MODE_MONO", "NRF_PDM_MODE_MONO"], [100, 1, 1, "c.nrf_pdm_mode_t.NRF_PDM_MODE_STEREO", "NRF_PDM_MODE_STEREO"], [100, 1, 1, "c.nrf_pdm_ratio_t.NRF_PDM_RATIO_64X", "NRF_PDM_RATIO_64X"], [100, 1, 1, "c.nrf_pdm_ratio_t.NRF_PDM_RATIO_80X", "NRF_PDM_RATIO_80X"], [100, 1, 1, "c.nrf_pdm_task_t.NRF_PDM_TASK_START", "NRF_PDM_TASK_START"], [100, 1, 1, "c.nrf_pdm_task_t.NRF_PDM_TASK_STOP", "NRF_PDM_TASK_STOP"], [104, 0, 1, "c.NRF_POWER_EVENTS_ABB_LOCK_COUNT", "NRF_POWER_EVENTS_ABB_LOCK_COUNT"], [104, 1, 1, "c.nrf_power_event_t.NRF_POWER_EVENT_ABB_LOCK_0", "NRF_POWER_EVENT_ABB_LOCK_0"], [104, 1, 1, "c.nrf_power_event_t.NRF_POWER_EVENT_ABB_LOCK_1", "NRF_POWER_EVENT_ABB_LOCK_1"], [104, 1, 1, "c.nrf_power_event_t.NRF_POWER_EVENT_POFWARN", "NRF_POWER_EVENT_POFWARN"], [104, 1, 1, "c.nrf_power_event_t.NRF_POWER_EVENT_REGULATOR_UPDATED", "NRF_POWER_EVENT_REGULATOR_UPDATED"], [104, 1, 1, "c.nrf_power_event_t.NRF_POWER_EVENT_SEMAPHORE_ACQUIRED", "NRF_POWER_EVENT_SEMAPHORE_ACQUIRED"], [104, 1, 1, "c.nrf_power_event_t.NRF_POWER_EVENT_SEMAPHORE_RELEASED", "NRF_POWER_EVENT_SEMAPHORE_RELEASED"], [104, 1, 1, "c.nrf_power_event_t.NRF_POWER_EVENT_SLEEPENTER", "NRF_POWER_EVENT_SLEEPENTER"], [104, 1, 1, "c.nrf_power_event_t.NRF_POWER_EVENT_SLEEPEXIT", "NRF_POWER_EVENT_SLEEPEXIT"], [104, 1, 1, "c.nrf_power_event_t.NRF_POWER_EVENT_USBDETECTED", "NRF_POWER_EVENT_USBDETECTED"], [104, 1, 1, "c.nrf_power_event_t.NRF_POWER_EVENT_USBPWRRDY", "NRF_POWER_EVENT_USBPWRRDY"], [104, 1, 1, "c.nrf_power_event_t.NRF_POWER_EVENT_USBREMOVED", "NRF_POWER_EVENT_USBREMOVED"], [104, 0, 1, "c.NRF_POWER_HAS_ABB", "NRF_POWER_HAS_ABB"], [104, 0, 1, "c.NRF_POWER_HAS_BILS", "NRF_POWER_HAS_BILS"], [104, 0, 1, "c.NRF_POWER_HAS_BLOCK_MODES", "NRF_POWER_HAS_BLOCK_MODES"], [104, 0, 1, "c.NRF_POWER_HAS_CONST_LATENCY", "NRF_POWER_HAS_CONST_LATENCY"], [104, 0, 1, "c.NRF_POWER_HAS_DCDCEN", "NRF_POWER_HAS_DCDCEN"], [104, 0, 1, "c.NRF_POWER_HAS_DCDCEN_VDDH", "NRF_POWER_HAS_DCDCEN_VDDH"], [104, 0, 1, "c.NRF_POWER_HAS_GPREGRET", "NRF_POWER_HAS_GPREGRET"], [104, 0, 1, "c.NRF_POWER_HAS_GPREGRET_ARRAY", "NRF_POWER_HAS_GPREGRET_ARRAY"], [104, 0, 1, "c.NRF_POWER_HAS_LOW_POWER", "NRF_POWER_HAS_LOW_POWER"], [104, 0, 1, "c.NRF_POWER_HAS_MAINREGSTATUS", "NRF_POWER_HAS_MAINREGSTATUS"], [104, 0, 1, "c.NRF_POWER_HAS_PMIC", "NRF_POWER_HAS_PMIC"], [104, 0, 1, "c.NRF_POWER_HAS_POFCON", "NRF_POWER_HAS_POFCON"], [104, 0, 1, "c.NRF_POWER_HAS_POFCON_VDDH", "NRF_POWER_HAS_POFCON_VDDH"], [104, 0, 1, "c.NRF_POWER_HAS_POFWARN", "NRF_POWER_HAS_POFWARN"], [104, 0, 1, "c.NRF_POWER_HAS_RESETREAS", "NRF_POWER_HAS_RESETREAS"], [104, 0, 1, "c.NRF_POWER_HAS_RESETREAS_CTRLAP", "NRF_POWER_HAS_RESETREAS_CTRLAP"], [104, 0, 1, "c.NRF_POWER_HAS_RESETREAS_LPCOMP", "NRF_POWER_HAS_RESETREAS_LPCOMP"], [104, 0, 1, "c.NRF_POWER_HAS_RESETREAS_NFC", "NRF_POWER_HAS_RESETREAS_NFC"], [104, 0, 1, "c.NRF_POWER_HAS_RESETREAS_VBUS", "NRF_POWER_HAS_RESETREAS_VBUS"], [104, 0, 1, "c.NRF_POWER_HAS_SEMAPHORE", "NRF_POWER_HAS_SEMAPHORE"], [104, 0, 1, "c.NRF_POWER_HAS_SLEEPEVT", "NRF_POWER_HAS_SLEEPEVT"], [104, 0, 1, "c.NRF_POWER_HAS_USBREG", "NRF_POWER_HAS_USBREG"], [104, 0, 1, "c.NRF_POWER_HAS_VREG_CONFIG", "NRF_POWER_HAS_VREG_CONFIG"], [104, 0, 1, "c.NRF_POWER_HAS_VREG_UPDATE_TASK_EVENT", "NRF_POWER_HAS_VREG_UPDATE_TASK_EVENT"], [104, 1, 1, "c.nrf_power_int_mask_t.NRF_POWER_INT_ABB_LOCK_0", "NRF_POWER_INT_ABB_LOCK_0"], [104, 1, 1, "c.nrf_power_int_mask_t.NRF_POWER_INT_ABB_LOCK_1", "NRF_POWER_INT_ABB_LOCK_1"], [104, 1, 1, "c.nrf_power_int_mask_t.NRF_POWER_INT_POFWARN_MASK", "NRF_POWER_INT_POFWARN_MASK"], [104, 1, 1, "c.nrf_power_int_mask_t.NRF_POWER_INT_REGULATOR_UPDATED", "NRF_POWER_INT_REGULATOR_UPDATED"], [104, 1, 1, "c.nrf_power_int_mask_t.NRF_POWER_INT_SEMAPHORE_ACQUIRED", "NRF_POWER_INT_SEMAPHORE_ACQUIRED"], [104, 1, 1, "c.nrf_power_int_mask_t.NRF_POWER_INT_SEMAPHORE_RELEASED", "NRF_POWER_INT_SEMAPHORE_RELEASED"], [104, 1, 1, "c.nrf_power_int_mask_t.NRF_POWER_INT_SLEEPENTER_MASK", "NRF_POWER_INT_SLEEPENTER_MASK"], [104, 1, 1, "c.nrf_power_int_mask_t.NRF_POWER_INT_SLEEPEXIT_MASK", "NRF_POWER_INT_SLEEPEXIT_MASK"], [104, 1, 1, "c.nrf_power_int_mask_t.NRF_POWER_INT_USBDETECTED_MASK", "NRF_POWER_INT_USBDETECTED_MASK"], [104, 1, 1, "c.nrf_power_int_mask_t.NRF_POWER_INT_USBPWRRDY_MASK", "NRF_POWER_INT_USBPWRRDY_MASK"], [104, 1, 1, "c.nrf_power_int_mask_t.NRF_POWER_INT_USBREMOVED_MASK", "NRF_POWER_INT_USBREMOVED_MASK"], [104, 1, 1, "c.nrf_power_mainregstatus_t.NRF_POWER_MAINREGSTATUS_HIGH", "NRF_POWER_MAINREGSTATUS_HIGH"], [104, 1, 1, "c.nrf_power_mainregstatus_t.NRF_POWER_MAINREGSTATUS_NORMAL", "NRF_POWER_MAINREGSTATUS_NORMAL"], [104, 1, 1, "c.nrf_power_onoffram_t.NRF_POWER_OFFRAM0", "NRF_POWER_OFFRAM0"], [104, 1, 1, "c.nrf_power_onoffram_mask_t.NRF_POWER_OFFRAM0_MASK", "NRF_POWER_OFFRAM0_MASK"], [104, 1, 1, "c.nrf_power_onoffram_t.NRF_POWER_OFFRAM1", "NRF_POWER_OFFRAM1"], [104, 1, 1, "c.nrf_power_onoffram_mask_t.NRF_POWER_OFFRAM1_MASK", "NRF_POWER_OFFRAM1_MASK"], [104, 1, 1, "c.nrf_power_onoffram_t.NRF_POWER_OFFRAM2", "NRF_POWER_OFFRAM2"], [104, 1, 1, "c.nrf_power_onoffram_mask_t.NRF_POWER_OFFRAM2_MASK", "NRF_POWER_OFFRAM2_MASK"], [104, 1, 1, "c.nrf_power_onoffram_t.NRF_POWER_OFFRAM3", "NRF_POWER_OFFRAM3"], [104, 1, 1, "c.nrf_power_onoffram_mask_t.NRF_POWER_OFFRAM3_MASK", "NRF_POWER_OFFRAM3_MASK"], [104, 1, 1, "c.nrf_power_onoffram_t.NRF_POWER_ONRAM0", "NRF_POWER_ONRAM0"], [104, 1, 1, "c.nrf_power_onoffram_mask_t.NRF_POWER_ONRAM0_MASK", "NRF_POWER_ONRAM0_MASK"], [104, 1, 1, "c.nrf_power_onoffram_t.NRF_POWER_ONRAM1", "NRF_POWER_ONRAM1"], [104, 1, 1, "c.nrf_power_onoffram_mask_t.NRF_POWER_ONRAM1_MASK", "NRF_POWER_ONRAM1_MASK"], [104, 1, 1, "c.nrf_power_onoffram_t.NRF_POWER_ONRAM2", "NRF_POWER_ONRAM2"], [104, 1, 1, "c.nrf_power_onoffram_mask_t.NRF_POWER_ONRAM2_MASK", "NRF_POWER_ONRAM2_MASK"], [104, 1, 1, "c.nrf_power_onoffram_t.NRF_POWER_ONRAM3", "NRF_POWER_ONRAM3"], [104, 1, 1, "c.nrf_power_onoffram_mask_t.NRF_POWER_ONRAM3_MASK", "NRF_POWER_ONRAM3_MASK"], [104, 1, 1, "c.nrf_power_op_point_t.NRF_POWER_OP_POINT_0V4", "NRF_POWER_OP_POINT_0V4"], [104, 1, 1, "c.nrf_power_op_point_t.NRF_POWER_OP_POINT_0V5", "NRF_POWER_OP_POINT_0V5"], [104, 1, 1, "c.nrf_power_op_point_t.NRF_POWER_OP_POINT_0V6", "NRF_POWER_OP_POINT_0V6"], [104, 1, 1, "c.nrf_power_op_point_t.NRF_POWER_OP_POINT_0V8", "NRF_POWER_OP_POINT_0V8"], [104, 1, 1, "c.nrf_power_override_value_t.NRF_POWER_OVERRIDE_VALUE_POWER_DOWN", "NRF_POWER_OVERRIDE_VALUE_POWER_DOWN"], [104, 1, 1, "c.nrf_power_override_value_t.NRF_POWER_OVERRIDE_VALUE_POWER_UP", "NRF_POWER_OVERRIDE_VALUE_POWER_UP"], [104, 1, 1, "c.nrf_power_pof_thrvddh_t.NRF_POWER_POFTHRVDDH_V27", "NRF_POWER_POFTHRVDDH_V27"], [104, 1, 1, "c.nrf_power_pof_thrvddh_t.NRF_POWER_POFTHRVDDH_V28", "NRF_POWER_POFTHRVDDH_V28"], [104, 1, 1, "c.nrf_power_pof_thrvddh_t.NRF_POWER_POFTHRVDDH_V29", "NRF_POWER_POFTHRVDDH_V29"], [104, 1, 1, "c.nrf_power_pof_thrvddh_t.NRF_POWER_POFTHRVDDH_V30", "NRF_POWER_POFTHRVDDH_V30"], [104, 1, 1, "c.nrf_power_pof_thrvddh_t.NRF_POWER_POFTHRVDDH_V31", "NRF_POWER_POFTHRVDDH_V31"], [104, 1, 1, "c.nrf_power_pof_thrvddh_t.NRF_POWER_POFTHRVDDH_V32", "NRF_POWER_POFTHRVDDH_V32"], [104, 1, 1, "c.nrf_power_pof_thrvddh_t.NRF_POWER_POFTHRVDDH_V33", "NRF_POWER_POFTHRVDDH_V33"], [104, 1, 1, "c.nrf_power_pof_thrvddh_t.NRF_POWER_POFTHRVDDH_V34", "NRF_POWER_POFTHRVDDH_V34"], [104, 1, 1, "c.nrf_power_pof_thrvddh_t.NRF_POWER_POFTHRVDDH_V35", "NRF_POWER_POFTHRVDDH_V35"], [104, 1, 1, "c.nrf_power_pof_thrvddh_t.NRF_POWER_POFTHRVDDH_V36", "NRF_POWER_POFTHRVDDH_V36"], [104, 1, 1, "c.nrf_power_pof_thrvddh_t.NRF_POWER_POFTHRVDDH_V37", "NRF_POWER_POFTHRVDDH_V37"], [104, 1, 1, "c.nrf_power_pof_thrvddh_t.NRF_POWER_POFTHRVDDH_V38", "NRF_POWER_POFTHRVDDH_V38"], [104, 1, 1, "c.nrf_power_pof_thrvddh_t.NRF_POWER_POFTHRVDDH_V39", "NRF_POWER_POFTHRVDDH_V39"], [104, 1, 1, "c.nrf_power_pof_thrvddh_t.NRF_POWER_POFTHRVDDH_V40", "NRF_POWER_POFTHRVDDH_V40"], [104, 1, 1, "c.nrf_power_pof_thrvddh_t.NRF_POWER_POFTHRVDDH_V41", "NRF_POWER_POFTHRVDDH_V41"], [104, 1, 1, "c.nrf_power_pof_thrvddh_t.NRF_POWER_POFTHRVDDH_V42", "NRF_POWER_POFTHRVDDH_V42"], [104, 1, 1, "c.nrf_power_pof_thr_t.NRF_POWER_POFTHR_V17", "NRF_POWER_POFTHR_V17"], [104, 1, 1, "c.nrf_power_pof_thr_t.NRF_POWER_POFTHR_V18", "NRF_POWER_POFTHR_V18"], [104, 1, 1, "c.nrf_power_pof_thr_t.NRF_POWER_POFTHR_V19", "NRF_POWER_POFTHR_V19"], [104, 1, 1, "c.nrf_power_pof_thr_t.NRF_POWER_POFTHR_V20", "NRF_POWER_POFTHR_V20"], [104, 1, 1, "c.nrf_power_pof_thr_t.NRF_POWER_POFTHR_V21", "NRF_POWER_POFTHR_V21"], [104, 1, 1, "c.nrf_power_pof_thr_t.NRF_POWER_POFTHR_V22", "NRF_POWER_POFTHR_V22"], [104, 1, 1, "c.nrf_power_pof_thr_t.NRF_POWER_POFTHR_V23", "NRF_POWER_POFTHR_V23"], [104, 1, 1, "c.nrf_power_pof_thr_t.NRF_POWER_POFTHR_V24", "NRF_POWER_POFTHR_V24"], [104, 1, 1, "c.nrf_power_pof_thr_t.NRF_POWER_POFTHR_V25", "NRF_POWER_POFTHR_V25"], [104, 1, 1, "c.nrf_power_pof_thr_t.NRF_POWER_POFTHR_V26", "NRF_POWER_POFTHR_V26"], [104, 1, 1, "c.nrf_power_pof_thr_t.NRF_POWER_POFTHR_V27", "NRF_POWER_POFTHR_V27"], [104, 1, 1, "c.nrf_power_pof_thr_t.NRF_POWER_POFTHR_V28", "NRF_POWER_POFTHR_V28"], [104, 1, 1, "c.nrf_power_ramblock_t.NRF_POWER_RAMBLOCK0", "NRF_POWER_RAMBLOCK0"], [104, 1, 1, "c.nrf_power_ramblock_mask_t.NRF_POWER_RAMBLOCK0_MASK", "NRF_POWER_RAMBLOCK0_MASK"], [104, 1, 1, "c.nrf_power_ramblock_t.NRF_POWER_RAMBLOCK1", "NRF_POWER_RAMBLOCK1"], [104, 1, 1, "c.nrf_power_ramblock_mask_t.NRF_POWER_RAMBLOCK1_MASK", "NRF_POWER_RAMBLOCK1_MASK"], [104, 1, 1, "c.nrf_power_ramblock_t.NRF_POWER_RAMBLOCK2", "NRF_POWER_RAMBLOCK2"], [104, 1, 1, "c.nrf_power_ramblock_mask_t.NRF_POWER_RAMBLOCK2_MASK", "NRF_POWER_RAMBLOCK2_MASK"], [104, 1, 1, "c.nrf_power_ramblock_t.NRF_POWER_RAMBLOCK3", "NRF_POWER_RAMBLOCK3"], [104, 1, 1, "c.nrf_power_ramblock_mask_t.NRF_POWER_RAMBLOCK3_MASK", "NRF_POWER_RAMBLOCK3_MASK"], [104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S0POWER", "NRF_POWER_RAMPOWER_S0POWER"], [104, 1, 1, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S0POWER_MASK", "NRF_POWER_RAMPOWER_S0POWER_MASK"], [104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S0RETENTION", "NRF_POWER_RAMPOWER_S0RETENTION"], [104, 1, 1, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S0RETENTION_MASK", "NRF_POWER_RAMPOWER_S0RETENTION_MASK"], [104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S10POWER", "NRF_POWER_RAMPOWER_S10POWER"], [104, 1, 1, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S10POWER_MASK", "NRF_POWER_RAMPOWER_S10POWER_MASK"], [104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S10RETENTION", "NRF_POWER_RAMPOWER_S10RETENTION"], [104, 1, 1, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S10RETENTION_MASK", "NRF_POWER_RAMPOWER_S10RETENTION_MASK"], [104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S11POWER", "NRF_POWER_RAMPOWER_S11POWER"], [104, 1, 1, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S11POWER_MASK", "NRF_POWER_RAMPOWER_S11POWER_MASK"], [104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S11RETENTION", "NRF_POWER_RAMPOWER_S11RETENTION"], [104, 1, 1, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S11RETENTION_MASK", "NRF_POWER_RAMPOWER_S11RETENTION_MASK"], [104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S12POWER", "NRF_POWER_RAMPOWER_S12POWER"], [104, 1, 1, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S12POWER_MASK", "NRF_POWER_RAMPOWER_S12POWER_MASK"], [104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S12RETENTION", "NRF_POWER_RAMPOWER_S12RETENTION"], [104, 1, 1, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S12RETENTION_MASK", "NRF_POWER_RAMPOWER_S12RETENTION_MASK"], [104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S13POWER", "NRF_POWER_RAMPOWER_S13POWER"], [104, 1, 1, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S13POWER_MASK", "NRF_POWER_RAMPOWER_S13POWER_MASK"], [104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S13RETENTION", "NRF_POWER_RAMPOWER_S13RETENTION"], [104, 1, 1, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S13RETENTION_MASK", "NRF_POWER_RAMPOWER_S13RETENTION_MASK"], [104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S14POWER", "NRF_POWER_RAMPOWER_S14POWER"], [104, 1, 1, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S14POWER_MASK", "NRF_POWER_RAMPOWER_S14POWER_MASK"], [104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S14RETENTION", "NRF_POWER_RAMPOWER_S14RETENTION"], [104, 1, 1, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S14RETENTION_MASK", "NRF_POWER_RAMPOWER_S14RETENTION_MASK"], [104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S15POWER", "NRF_POWER_RAMPOWER_S15POWER"], [104, 1, 1, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S15POWER_MASK", "NRF_POWER_RAMPOWER_S15POWER_MASK"], [104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S15RETENTION", "NRF_POWER_RAMPOWER_S15RETENTION"], [104, 1, 1, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S15RETENTION_MASK", "NRF_POWER_RAMPOWER_S15RETENTION_MASK"], [104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S1POWER", "NRF_POWER_RAMPOWER_S1POWER"], [104, 1, 1, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S1POWER_MASK", "NRF_POWER_RAMPOWER_S1POWER_MASK"], [104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S1RETENTION", "NRF_POWER_RAMPOWER_S1RETENTION"], [104, 1, 1, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S1RETENTION_MASK", "NRF_POWER_RAMPOWER_S1RETENTION_MASK"], [104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S2POWER", "NRF_POWER_RAMPOWER_S2POWER"], [104, 1, 1, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S2POWER_MASK", "NRF_POWER_RAMPOWER_S2POWER_MASK"], [104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S2RETENTION", "NRF_POWER_RAMPOWER_S2RETENTION"], [104, 1, 1, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S2RETENTION_MASK", "NRF_POWER_RAMPOWER_S2RETENTION_MASK"], [104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S3POWER", "NRF_POWER_RAMPOWER_S3POWER"], [104, 1, 1, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S3POWER_MASK", "NRF_POWER_RAMPOWER_S3POWER_MASK"], [104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S3RETENTION", "NRF_POWER_RAMPOWER_S3RETENTION"], [104, 1, 1, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S3RETENTION_MASK", "NRF_POWER_RAMPOWER_S3RETENTION_MASK"], [104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S4POWER", "NRF_POWER_RAMPOWER_S4POWER"], [104, 1, 1, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S4POWER_MASK", "NRF_POWER_RAMPOWER_S4POWER_MASK"], [104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S4RETENTION", "NRF_POWER_RAMPOWER_S4RETENTION"], [104, 1, 1, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S4RETENTION_MASK", "NRF_POWER_RAMPOWER_S4RETENTION_MASK"], [104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S5POWER", "NRF_POWER_RAMPOWER_S5POWER"], [104, 1, 1, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S5POWER_MASK", "NRF_POWER_RAMPOWER_S5POWER_MASK"], [104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S5RETENTION", "NRF_POWER_RAMPOWER_S5RETENTION"], [104, 1, 1, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S5RETENTION_MASK", "NRF_POWER_RAMPOWER_S5RETENTION_MASK"], [104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S6POWER", "NRF_POWER_RAMPOWER_S6POWER"], [104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S6RETENTION", "NRF_POWER_RAMPOWER_S6RETENTION"], [104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S7POWER", "NRF_POWER_RAMPOWER_S7POWER"], [104, 1, 1, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S7POWER_MASK", "NRF_POWER_RAMPOWER_S7POWER_MASK"], [104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S7RETENTION", "NRF_POWER_RAMPOWER_S7RETENTION"], [104, 1, 1, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S7RETENTION_MASK", "NRF_POWER_RAMPOWER_S7RETENTION_MASK"], [104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S8POWER", "NRF_POWER_RAMPOWER_S8POWER"], [104, 1, 1, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S8POWER_MASK", "NRF_POWER_RAMPOWER_S8POWER_MASK"], [104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S8RETENTION", "NRF_POWER_RAMPOWER_S8RETENTION"], [104, 1, 1, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S8RETENTION_MASK", "NRF_POWER_RAMPOWER_S8RETENTION_MASK"], [104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S9POWER", "NRF_POWER_RAMPOWER_S9POWER"], [104, 1, 1, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S9POWER_MASK", "NRF_POWER_RAMPOWER_S9POWER_MASK"], [104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S9RETENTION", "NRF_POWER_RAMPOWER_S9RETENTION"], [104, 1, 1, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S9RETENTION_MASK", "NRF_POWER_RAMPOWER_S9RETENTION_MASK"], [104, 1, 1, "c.nrf_power_resetreas_mask_t.NRF_POWER_RESETREAS_CTRLAP_MASK", "NRF_POWER_RESETREAS_CTRLAP_MASK"], [104, 1, 1, "c.nrf_power_resetreas_mask_t.NRF_POWER_RESETREAS_DIF_MASK", "NRF_POWER_RESETREAS_DIF_MASK"], [104, 1, 1, "c.nrf_power_resetreas_mask_t.NRF_POWER_RESETREAS_DOG_MASK", "NRF_POWER_RESETREAS_DOG_MASK"], [104, 1, 1, "c.nrf_power_resetreas_mask_t.NRF_POWER_RESETREAS_LOCKUP_MASK", "NRF_POWER_RESETREAS_LOCKUP_MASK"], [104, 1, 1, "c.nrf_power_resetreas_mask_t.NRF_POWER_RESETREAS_LPCOMP_MASK", "NRF_POWER_RESETREAS_LPCOMP_MASK"], [104, 1, 1, "c.nrf_power_resetreas_mask_t.NRF_POWER_RESETREAS_NFC_MASK", "NRF_POWER_RESETREAS_NFC_MASK"], [104, 1, 1, "c.nrf_power_resetreas_mask_t.NRF_POWER_RESETREAS_OFF_MASK", "NRF_POWER_RESETREAS_OFF_MASK"], [104, 1, 1, "c.nrf_power_resetreas_mask_t.NRF_POWER_RESETREAS_RESETPIN_MASK", "NRF_POWER_RESETREAS_RESETPIN_MASK"], [104, 1, 1, "c.nrf_power_resetreas_mask_t.NRF_POWER_RESETREAS_SREQ_MASK", "NRF_POWER_RESETREAS_SREQ_MASK"], [104, 1, 1, "c.nrf_power_resetreas_mask_t.NRF_POWER_RESETREAS_VBUS_MASK", "NRF_POWER_RESETREAS_VBUS_MASK"], [104, 1, 1, "c.nrf_power_task_t.NRF_POWER_TASK_CONSTLAT", "NRF_POWER_TASK_CONSTLAT"], [104, 1, 1, "c.nrf_power_task_t.NRF_POWER_TASK_LOWPWR", "NRF_POWER_TASK_LOWPWR"], [104, 1, 1, "c.nrf_power_task_t.NRF_POWER_TASK_REGULATOR_UPDATE", "NRF_POWER_TASK_REGULATOR_UPDATE"], [104, 1, 1, "c.nrf_power_task_t.NRF_POWER_TASK_SEMAPHORE_ACQUIRE", "NRF_POWER_TASK_SEMAPHORE_ACQUIRE"], [104, 1, 1, "c.nrf_power_task_t.NRF_POWER_TASK_SEMAPHORE_RELEASE", "NRF_POWER_TASK_SEMAPHORE_RELEASE"], [104, 1, 1, "c.nrf_power_usbregstatus_mask_t.NRF_POWER_USBREGSTATUS_OUTPUTRDY_MASK", "NRF_POWER_USBREGSTATUS_OUTPUTRDY_MASK"], [104, 1, 1, "c.nrf_power_usbregstatus_mask_t.NRF_POWER_USBREGSTATUS_VBUSDETECT_MASK", "NRF_POWER_USBREGSTATUS_VBUSDETECT_MASK"], [104, 1, 1, "c.nrf_power_vreg_mask_t.NRF_POWER_VREG_0V8_MASK", "NRF_POWER_VREG_0V8_MASK"], [104, 1, 1, "c.nrf_power_vreg_mask_t.NRF_POWER_VREG_1V0_MASK", "NRF_POWER_VREG_1V0_MASK"], [104, 1, 1, "c.nrf_power_vreg_mask_t.NRF_POWER_VREG_1V8_MASK", "NRF_POWER_VREG_1V8_MASK"], [104, 1, 1, "c.nrf_power_vreg_mask_t.NRF_POWER_VREG_FORCE_MASK", "NRF_POWER_VREG_FORCE_MASK"], [104, 1, 1, "c.nrf_power_vreg_mask_t.NRF_POWER_VREG_MAIN1V0_MASK", "NRF_POWER_VREG_MAIN1V0_MASK"], [104, 1, 1, "c.nrf_power_vreg_mask_t.NRF_POWER_VREG_MAIN1V8_MASK", "NRF_POWER_VREG_MAIN1V8_MASK"], [104, 1, 1, "c.nrf_power_vreg_mask_t.NRF_POWER_VREG_MAINVS_MASK", "NRF_POWER_VREG_MAINVS_MASK"], [104, 1, 1, "c.nrf_power_vreg_mask_t.NRF_POWER_VREG_VS_MASK", "NRF_POWER_VREG_VS_MASK"], [109, 0, 1, "c.NRF_PPIB_EVENTS_RECEIVE_COUNT", "NRF_PPIB_EVENTS_RECEIVE_COUNT"], [109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_0", "NRF_PPIB_EVENT_RECEIVE_0"], [109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_1", "NRF_PPIB_EVENT_RECEIVE_1"], [109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_10", "NRF_PPIB_EVENT_RECEIVE_10"], [109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_11", "NRF_PPIB_EVENT_RECEIVE_11"], [109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_12", "NRF_PPIB_EVENT_RECEIVE_12"], [109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_13", "NRF_PPIB_EVENT_RECEIVE_13"], [109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_14", "NRF_PPIB_EVENT_RECEIVE_14"], [109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_15", "NRF_PPIB_EVENT_RECEIVE_15"], [109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_16", "NRF_PPIB_EVENT_RECEIVE_16"], [109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_17", "NRF_PPIB_EVENT_RECEIVE_17"], [109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_18", "NRF_PPIB_EVENT_RECEIVE_18"], [109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_19", "NRF_PPIB_EVENT_RECEIVE_19"], [109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_2", "NRF_PPIB_EVENT_RECEIVE_2"], [109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_20", "NRF_PPIB_EVENT_RECEIVE_20"], [109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_21", "NRF_PPIB_EVENT_RECEIVE_21"], [109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_22", "NRF_PPIB_EVENT_RECEIVE_22"], [109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_23", "NRF_PPIB_EVENT_RECEIVE_23"], [109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_24", "NRF_PPIB_EVENT_RECEIVE_24"], [109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_25", "NRF_PPIB_EVENT_RECEIVE_25"], [109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_26", "NRF_PPIB_EVENT_RECEIVE_26"], [109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_27", "NRF_PPIB_EVENT_RECEIVE_27"], [109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_28", "NRF_PPIB_EVENT_RECEIVE_28"], [109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_29", "NRF_PPIB_EVENT_RECEIVE_29"], [109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_3", "NRF_PPIB_EVENT_RECEIVE_3"], [109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_30", "NRF_PPIB_EVENT_RECEIVE_30"], [109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_31", "NRF_PPIB_EVENT_RECEIVE_31"], [109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_4", "NRF_PPIB_EVENT_RECEIVE_4"], [109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_5", "NRF_PPIB_EVENT_RECEIVE_5"], [109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_6", "NRF_PPIB_EVENT_RECEIVE_6"], [109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_7", "NRF_PPIB_EVENT_RECEIVE_7"], [109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_8", "NRF_PPIB_EVENT_RECEIVE_8"], [109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_9", "NRF_PPIB_EVENT_RECEIVE_9"], [109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_0_MASK", "NRF_PPIB_SEND_0_MASK"], [109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_10_MASK", "NRF_PPIB_SEND_10_MASK"], [109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_11_MASK", "NRF_PPIB_SEND_11_MASK"], [109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_12_MASK", "NRF_PPIB_SEND_12_MASK"], [109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_13_MASK", "NRF_PPIB_SEND_13_MASK"], [109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_14_MASK", "NRF_PPIB_SEND_14_MASK"], [109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_15_MASK", "NRF_PPIB_SEND_15_MASK"], [109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_16_MASK", "NRF_PPIB_SEND_16_MASK"], [109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_17_MASK", "NRF_PPIB_SEND_17_MASK"], [109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_18_MASK", "NRF_PPIB_SEND_18_MASK"], [109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_19_MASK", "NRF_PPIB_SEND_19_MASK"], [109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_1_MASK", "NRF_PPIB_SEND_1_MASK"], [109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_20_MASK", "NRF_PPIB_SEND_20_MASK"], [109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_21_MASK", "NRF_PPIB_SEND_21_MASK"], [109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_22_MASK", "NRF_PPIB_SEND_22_MASK"], [109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_23_MASK", "NRF_PPIB_SEND_23_MASK"], [109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_24_MASK", "NRF_PPIB_SEND_24_MASK"], [109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_25_MASK", "NRF_PPIB_SEND_25_MASK"], [109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_26_MASK", "NRF_PPIB_SEND_26_MASK"], [109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_27_MASK", "NRF_PPIB_SEND_27_MASK"], [109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_28_MASK", "NRF_PPIB_SEND_28_MASK"], [109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_29_MASK", "NRF_PPIB_SEND_29_MASK"], [109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_2_MASK", "NRF_PPIB_SEND_2_MASK"], [109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_30_MASK", "NRF_PPIB_SEND_30_MASK"], [109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_31_MASK", "NRF_PPIB_SEND_31_MASK"], [109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_3_MASK", "NRF_PPIB_SEND_3_MASK"], [109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_4_MASK", "NRF_PPIB_SEND_4_MASK"], [109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_5_MASK", "NRF_PPIB_SEND_5_MASK"], [109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_6_MASK", "NRF_PPIB_SEND_6_MASK"], [109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_7_MASK", "NRF_PPIB_SEND_7_MASK"], [109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_8_MASK", "NRF_PPIB_SEND_8_MASK"], [109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_9_MASK", "NRF_PPIB_SEND_9_MASK"], [109, 0, 1, "c.NRF_PPIB_TASKS_SEND_COUNT", "NRF_PPIB_TASKS_SEND_COUNT"], [109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_0", "NRF_PPIB_TASK_SEND_0"], [109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_1", "NRF_PPIB_TASK_SEND_1"], [109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_10", "NRF_PPIB_TASK_SEND_10"], [109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_11", "NRF_PPIB_TASK_SEND_11"], [109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_12", "NRF_PPIB_TASK_SEND_12"], [109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_13", "NRF_PPIB_TASK_SEND_13"], [109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_14", "NRF_PPIB_TASK_SEND_14"], [109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_15", "NRF_PPIB_TASK_SEND_15"], [109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_16", "NRF_PPIB_TASK_SEND_16"], [109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_17", "NRF_PPIB_TASK_SEND_17"], [109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_18", "NRF_PPIB_TASK_SEND_18"], [109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_19", "NRF_PPIB_TASK_SEND_19"], [109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_2", "NRF_PPIB_TASK_SEND_2"], [109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_20", "NRF_PPIB_TASK_SEND_20"], [109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_21", "NRF_PPIB_TASK_SEND_21"], [109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_22", "NRF_PPIB_TASK_SEND_22"], [109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_23", "NRF_PPIB_TASK_SEND_23"], [109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_24", "NRF_PPIB_TASK_SEND_24"], [109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_25", "NRF_PPIB_TASK_SEND_25"], [109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_26", "NRF_PPIB_TASK_SEND_26"], [109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_27", "NRF_PPIB_TASK_SEND_27"], [109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_28", "NRF_PPIB_TASK_SEND_28"], [109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_29", "NRF_PPIB_TASK_SEND_29"], [109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_3", "NRF_PPIB_TASK_SEND_3"], [109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_30", "NRF_PPIB_TASK_SEND_30"], [109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_31", "NRF_PPIB_TASK_SEND_31"], [109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_4", "NRF_PPIB_TASK_SEND_4"], [109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_5", "NRF_PPIB_TASK_SEND_5"], [109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_6", "NRF_PPIB_TASK_SEND_6"], [109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_7", "NRF_PPIB_TASK_SEND_7"], [109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_8", "NRF_PPIB_TASK_SEND_8"], [109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_9", "NRF_PPIB_TASK_SEND_9"], [107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL0", "NRF_PPI_CHANNEL0"], [107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL1", "NRF_PPI_CHANNEL1"], [107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL10", "NRF_PPI_CHANNEL10"], [107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL11", "NRF_PPI_CHANNEL11"], [107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL12", "NRF_PPI_CHANNEL12"], [107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL13", "NRF_PPI_CHANNEL13"], [107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL14", "NRF_PPI_CHANNEL14"], [107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL15", "NRF_PPI_CHANNEL15"], [107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL16", "NRF_PPI_CHANNEL16"], [107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL17", "NRF_PPI_CHANNEL17"], [107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL18", "NRF_PPI_CHANNEL18"], [107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL19", "NRF_PPI_CHANNEL19"], [107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL2", "NRF_PPI_CHANNEL2"], [107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL20", "NRF_PPI_CHANNEL20"], [107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL21", "NRF_PPI_CHANNEL21"], [107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL22", "NRF_PPI_CHANNEL22"], [107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL23", "NRF_PPI_CHANNEL23"], [107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL24", "NRF_PPI_CHANNEL24"], [107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL25", "NRF_PPI_CHANNEL25"], [107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL26", "NRF_PPI_CHANNEL26"], [107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL27", "NRF_PPI_CHANNEL27"], [107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL28", "NRF_PPI_CHANNEL28"], [107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL29", "NRF_PPI_CHANNEL29"], [107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL3", "NRF_PPI_CHANNEL3"], [107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL30", "NRF_PPI_CHANNEL30"], [107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL31", "NRF_PPI_CHANNEL31"], [107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL4", "NRF_PPI_CHANNEL4"], [107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL5", "NRF_PPI_CHANNEL5"], [107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL6", "NRF_PPI_CHANNEL6"], [107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL7", "NRF_PPI_CHANNEL7"], [107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL8", "NRF_PPI_CHANNEL8"], [107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL9", "NRF_PPI_CHANNEL9"], [107, 1, 1, "c.nrf_ppi_channel_enable_t.NRF_PPI_CHANNEL_DISABLED", "NRF_PPI_CHANNEL_DISABLED"], [107, 1, 1, "c.nrf_ppi_channel_enable_t.NRF_PPI_CHANNEL_ENABLED", "NRF_PPI_CHANNEL_ENABLED"], [107, 1, 1, "c.nrf_ppi_channel_include_t.NRF_PPI_CHANNEL_EXCLUDE", "NRF_PPI_CHANNEL_EXCLUDE"], [107, 1, 1, "c.nrf_ppi_channel_group_t.NRF_PPI_CHANNEL_GROUP0", "NRF_PPI_CHANNEL_GROUP0"], [107, 1, 1, "c.nrf_ppi_channel_group_t.NRF_PPI_CHANNEL_GROUP1", "NRF_PPI_CHANNEL_GROUP1"], [107, 1, 1, "c.nrf_ppi_channel_group_t.NRF_PPI_CHANNEL_GROUP2", "NRF_PPI_CHANNEL_GROUP2"], [107, 1, 1, "c.nrf_ppi_channel_group_t.NRF_PPI_CHANNEL_GROUP3", "NRF_PPI_CHANNEL_GROUP3"], [107, 1, 1, "c.nrf_ppi_channel_group_t.NRF_PPI_CHANNEL_GROUP4", "NRF_PPI_CHANNEL_GROUP4"], [107, 1, 1, "c.nrf_ppi_channel_group_t.NRF_PPI_CHANNEL_GROUP5", "NRF_PPI_CHANNEL_GROUP5"], [107, 1, 1, "c.nrf_ppi_channel_include_t.NRF_PPI_CHANNEL_INCLUDE", "NRF_PPI_CHANNEL_INCLUDE"], [107, 1, 1, "c.nrf_ppi_task_t.NRF_PPI_TASK_CHG0_DIS", "NRF_PPI_TASK_CHG0_DIS"], [107, 1, 1, "c.nrf_ppi_task_t.NRF_PPI_TASK_CHG0_EN", "NRF_PPI_TASK_CHG0_EN"], [107, 1, 1, "c.nrf_ppi_task_t.NRF_PPI_TASK_CHG1_DIS", "NRF_PPI_TASK_CHG1_DIS"], [107, 1, 1, "c.nrf_ppi_task_t.NRF_PPI_TASK_CHG1_EN", "NRF_PPI_TASK_CHG1_EN"], [107, 1, 1, "c.nrf_ppi_task_t.NRF_PPI_TASK_CHG2_DIS", "NRF_PPI_TASK_CHG2_DIS"], [107, 1, 1, "c.nrf_ppi_task_t.NRF_PPI_TASK_CHG2_EN", "NRF_PPI_TASK_CHG2_EN"], [107, 1, 1, "c.nrf_ppi_task_t.NRF_PPI_TASK_CHG3_DIS", "NRF_PPI_TASK_CHG3_DIS"], [107, 1, 1, "c.nrf_ppi_task_t.NRF_PPI_TASK_CHG3_EN", "NRF_PPI_TASK_CHG3_EN"], [107, 1, 1, "c.nrf_ppi_task_t.NRF_PPI_TASK_CHG4_DIS", "NRF_PPI_TASK_CHG4_DIS"], [107, 1, 1, "c.nrf_ppi_task_t.NRF_PPI_TASK_CHG4_EN", "NRF_PPI_TASK_CHG4_EN"], [107, 1, 1, "c.nrf_ppi_task_t.NRF_PPI_TASK_CHG5_DIS", "NRF_PPI_TASK_CHG5_DIS"], [107, 1, 1, "c.nrf_ppi_task_t.NRF_PPI_TASK_CHG5_EN", "NRF_PPI_TASK_CHG5_EN"], [112, 0, 1, "c.NRF_PWM_CHANNEL_COUNT", "NRF_PWM_CHANNEL_COUNT"], [112, 1, 1, "c.nrf_pwm_clk_t.NRF_PWM_CLK_125kHz", "NRF_PWM_CLK_125kHz"], [112, 1, 1, "c.nrf_pwm_clk_t.NRF_PWM_CLK_16MHz", "NRF_PWM_CLK_16MHz"], [112, 1, 1, "c.nrf_pwm_clk_t.NRF_PWM_CLK_1MHz", "NRF_PWM_CLK_1MHz"], [112, 1, 1, "c.nrf_pwm_clk_t.NRF_PWM_CLK_250kHz", "NRF_PWM_CLK_250kHz"], [112, 1, 1, "c.nrf_pwm_clk_t.NRF_PWM_CLK_2MHz", "NRF_PWM_CLK_2MHz"], [112, 1, 1, "c.nrf_pwm_clk_t.NRF_PWM_CLK_4MHz", "NRF_PWM_CLK_4MHz"], [112, 1, 1, "c.nrf_pwm_clk_t.NRF_PWM_CLK_500kHz", "NRF_PWM_CLK_500kHz"], [112, 1, 1, "c.nrf_pwm_clk_t.NRF_PWM_CLK_8MHz", "NRF_PWM_CLK_8MHz"], [112, 1, 1, "c.nrf_pwm_event_t.NRF_PWM_EVENT_LOOPSDONE", "NRF_PWM_EVENT_LOOPSDONE"], [112, 1, 1, "c.nrf_pwm_event_t.NRF_PWM_EVENT_PWMPERIODEND", "NRF_PWM_EVENT_PWMPERIODEND"], [112, 1, 1, "c.nrf_pwm_event_t.NRF_PWM_EVENT_SEQEND0", "NRF_PWM_EVENT_SEQEND0"], [112, 1, 1, "c.nrf_pwm_event_t.NRF_PWM_EVENT_SEQEND1", "NRF_PWM_EVENT_SEQEND1"], [112, 1, 1, "c.nrf_pwm_event_t.NRF_PWM_EVENT_SEQSTARTED0", "NRF_PWM_EVENT_SEQSTARTED0"], [112, 1, 1, "c.nrf_pwm_event_t.NRF_PWM_EVENT_SEQSTARTED1", "NRF_PWM_EVENT_SEQSTARTED1"], [112, 1, 1, "c.nrf_pwm_event_t.NRF_PWM_EVENT_STOPPED", "NRF_PWM_EVENT_STOPPED"], [112, 0, 1, "c.NRF_PWM_HAS_DMA_REG", "NRF_PWM_HAS_DMA_REG"], [112, 0, 1, "c.NRF_PWM_HAS_DMA_TASKS_EVENTS", "NRF_PWM_HAS_DMA_TASKS_EVENTS"], [112, 0, 1, "c.NRF_PWM_HAS_SEQ_CNT", "NRF_PWM_HAS_SEQ_CNT"], [112, 0, 1, "c.NRF_PWM_HAS_SHORT_LOOPSDONE_SEQSTART", "NRF_PWM_HAS_SHORT_LOOPSDONE_SEQSTART"], [112, 0, 1, "c.NRF_PWM_INST_GET", "NRF_PWM_INST_GET"], [112, 1, 1, "c.nrf_pwm_int_mask_t.NRF_PWM_INT_LOOPSDONE_MASK", "NRF_PWM_INT_LOOPSDONE_MASK"], [112, 1, 1, "c.nrf_pwm_int_mask_t.NRF_PWM_INT_PWMPERIODEND_MASK", "NRF_PWM_INT_PWMPERIODEND_MASK"], [112, 1, 1, "c.nrf_pwm_int_mask_t.NRF_PWM_INT_SEQEND0_MASK", "NRF_PWM_INT_SEQEND0_MASK"], [112, 1, 1, "c.nrf_pwm_int_mask_t.NRF_PWM_INT_SEQEND1_MASK", "NRF_PWM_INT_SEQEND1_MASK"], [112, 1, 1, "c.nrf_pwm_int_mask_t.NRF_PWM_INT_SEQSTARTED0_MASK", "NRF_PWM_INT_SEQSTARTED0_MASK"], [112, 1, 1, "c.nrf_pwm_int_mask_t.NRF_PWM_INT_SEQSTARTED1_MASK", "NRF_PWM_INT_SEQSTARTED1_MASK"], [112, 1, 1, "c.nrf_pwm_int_mask_t.NRF_PWM_INT_STOPPED_MASK", "NRF_PWM_INT_STOPPED_MASK"], [112, 1, 1, "c.nrf_pwm_dec_load_t.NRF_PWM_LOAD_COMMON", "NRF_PWM_LOAD_COMMON"], [112, 1, 1, "c.nrf_pwm_dec_load_t.NRF_PWM_LOAD_GROUPED", "NRF_PWM_LOAD_GROUPED"], [112, 1, 1, "c.nrf_pwm_dec_load_t.NRF_PWM_LOAD_INDIVIDUAL", "NRF_PWM_LOAD_INDIVIDUAL"], [112, 1, 1, "c.nrf_pwm_dec_load_t.NRF_PWM_LOAD_WAVE_FORM", "NRF_PWM_LOAD_WAVE_FORM"], [112, 1, 1, "c.nrf_pwm_mode_t.NRF_PWM_MODE_UP", "NRF_PWM_MODE_UP"], [112, 1, 1, "c.nrf_pwm_mode_t.NRF_PWM_MODE_UP_AND_DOWN", "NRF_PWM_MODE_UP_AND_DOWN"], [112, 0, 1, "c.NRF_PWM_PIN_NOT_CONNECTED", "NRF_PWM_PIN_NOT_CONNECTED"], [112, 1, 1, "c.nrf_pwm_short_mask_t.NRF_PWM_SHORT_LOOPSDONE_SEQSTART0_MASK", "NRF_PWM_SHORT_LOOPSDONE_SEQSTART0_MASK"], [112, 1, 1, "c.nrf_pwm_short_mask_t.NRF_PWM_SHORT_LOOPSDONE_SEQSTART1_MASK", "NRF_PWM_SHORT_LOOPSDONE_SEQSTART1_MASK"], [112, 1, 1, "c.nrf_pwm_short_mask_t.NRF_PWM_SHORT_LOOPSDONE_STOP_MASK", "NRF_PWM_SHORT_LOOPSDONE_STOP_MASK"], [112, 1, 1, "c.nrf_pwm_short_mask_t.NRF_PWM_SHORT_SEQEND0_STOP_MASK", "NRF_PWM_SHORT_SEQEND0_STOP_MASK"], [112, 1, 1, "c.nrf_pwm_short_mask_t.NRF_PWM_SHORT_SEQEND1_STOP_MASK", "NRF_PWM_SHORT_SEQEND1_STOP_MASK"], [112, 1, 1, "c.nrf_pwm_dec_step_t.NRF_PWM_STEP_AUTO", "NRF_PWM_STEP_AUTO"], [112, 1, 1, "c.nrf_pwm_dec_step_t.NRF_PWM_STEP_TRIGGERED", "NRF_PWM_STEP_TRIGGERED"], [112, 1, 1, "c.nrf_pwm_task_t.NRF_PWM_TASK_NEXTSTEP", "NRF_PWM_TASK_NEXTSTEP"], [112, 1, 1, "c.nrf_pwm_task_t.NRF_PWM_TASK_SEQSTART0", "NRF_PWM_TASK_SEQSTART0"], [112, 1, 1, "c.nrf_pwm_task_t.NRF_PWM_TASK_SEQSTART1", "NRF_PWM_TASK_SEQSTART1"], [112, 1, 1, "c.nrf_pwm_task_t.NRF_PWM_TASK_STOP", "NRF_PWM_TASK_STOP"], [112, 0, 1, "c.NRF_PWM_VALUES_LENGTH", "NRF_PWM_VALUES_LENGTH"], [116, 1, 1, "c.nrf_qdec_dbfen_t.NRF_QDEC_DBFEN_DISABLE", "NRF_QDEC_DBFEN_DISABLE"], [116, 1, 1, "c.nrf_qdec_dbfen_t.NRF_QDEC_DBFEN_ENABLE", "NRF_QDEC_DBFEN_ENABLE"], [116, 1, 1, "c.nrf_qdec_enable_t.NRF_QDEC_DISABLE", "NRF_QDEC_DISABLE"], [116, 1, 1, "c.nrf_qdec_enable_t.NRF_QDEC_ENABLE", "NRF_QDEC_ENABLE"], [116, 1, 1, "c.nrf_qdec_event_t.NRF_QDEC_EVENT_ACCOF", "NRF_QDEC_EVENT_ACCOF"], [116, 1, 1, "c.nrf_qdec_event_t.NRF_QDEC_EVENT_DBLRDY", "NRF_QDEC_EVENT_DBLRDY"], [116, 1, 1, "c.nrf_qdec_event_t.NRF_QDEC_EVENT_REPORTRDY", "NRF_QDEC_EVENT_REPORTRDY"], [116, 1, 1, "c.nrf_qdec_event_t.NRF_QDEC_EVENT_SAMPLERDY", "NRF_QDEC_EVENT_SAMPLERDY"], [116, 1, 1, "c.nrf_qdec_event_t.NRF_QDEC_EVENT_STOPPED", "NRF_QDEC_EVENT_STOPPED"], [116, 0, 1, "c.NRF_QDEC_HAS_EVENT_DBLRDY", "NRF_QDEC_HAS_EVENT_DBLRDY"], [116, 0, 1, "c.NRF_QDEC_HAS_EVENT_STOPPED", "NRF_QDEC_HAS_EVENT_STOPPED"], [116, 0, 1, "c.NRF_QDEC_HAS_TASK_RDCLRACC", "NRF_QDEC_HAS_TASK_RDCLRACC"], [116, 0, 1, "c.NRF_QDEC_HAS_TASK_RDCLRDBL", "NRF_QDEC_HAS_TASK_RDCLRDBL"], [116, 1, 1, "c.nrf_qdec_int_mask_t.NRF_QDEC_INT_ACCOF_MASK", "NRF_QDEC_INT_ACCOF_MASK"], [116, 1, 1, "c.nrf_qdec_int_mask_t.NRF_QDEC_INT_REPORTRDY_MASK", "NRF_QDEC_INT_REPORTRDY_MASK"], [116, 1, 1, "c.nrf_qdec_int_mask_t.NRF_QDEC_INT_SAMPLERDY_MASK", "NRF_QDEC_INT_SAMPLERDY_MASK"], [116, 0, 1, "c.NRF_QDEC_LEDPRE_DEFAULT", "NRF_QDEC_LEDPRE_DEFAULT"], [116, 1, 1, "c.nrf_qdec_ledpol_t.NRF_QDEC_LEPOL_ACTIVE_HIGH", "NRF_QDEC_LEPOL_ACTIVE_HIGH"], [116, 1, 1, "c.nrf_qdec_ledpol_t.NRF_QDEC_LEPOL_ACTIVE_LOW", "NRF_QDEC_LEPOL_ACTIVE_LOW"], [116, 0, 1, "c.NRF_QDEC_PIN_NOT_CONNECTED", "NRF_QDEC_PIN_NOT_CONNECTED"], [116, 1, 1, "c.nrf_qdec_reportper_t.NRF_QDEC_REPORTPER_1", "NRF_QDEC_REPORTPER_1"], [116, 1, 1, "c.nrf_qdec_reportper_t.NRF_QDEC_REPORTPER_10", "NRF_QDEC_REPORTPER_10"], [116, 1, 1, "c.nrf_qdec_reportper_t.NRF_QDEC_REPORTPER_120", "NRF_QDEC_REPORTPER_120"], [116, 1, 1, "c.nrf_qdec_reportper_t.NRF_QDEC_REPORTPER_160", "NRF_QDEC_REPORTPER_160"], [116, 1, 1, "c.nrf_qdec_reportper_t.NRF_QDEC_REPORTPER_200", "NRF_QDEC_REPORTPER_200"], [116, 1, 1, "c.nrf_qdec_reportper_t.NRF_QDEC_REPORTPER_240", "NRF_QDEC_REPORTPER_240"], [116, 1, 1, "c.nrf_qdec_reportper_t.NRF_QDEC_REPORTPER_280", "NRF_QDEC_REPORTPER_280"], [116, 1, 1, "c.nrf_qdec_reportper_t.NRF_QDEC_REPORTPER_40", "NRF_QDEC_REPORTPER_40"], [116, 1, 1, "c.nrf_qdec_reportper_t.NRF_QDEC_REPORTPER_80", "NRF_QDEC_REPORTPER_80"], [116, 1, 1, "c.nrf_qdec_sampleper_t.NRF_QDEC_SAMPLEPER_1024US", "NRF_QDEC_SAMPLEPER_1024US"], [116, 1, 1, "c.nrf_qdec_sampleper_t.NRF_QDEC_SAMPLEPER_128US", "NRF_QDEC_SAMPLEPER_128US"], [116, 1, 1, "c.nrf_qdec_sampleper_t.NRF_QDEC_SAMPLEPER_16384US", "NRF_QDEC_SAMPLEPER_16384US"], [116, 1, 1, "c.nrf_qdec_sampleper_t.NRF_QDEC_SAMPLEPER_2048US", "NRF_QDEC_SAMPLEPER_2048US"], [116, 1, 1, "c.nrf_qdec_sampleper_t.NRF_QDEC_SAMPLEPER_256US", "NRF_QDEC_SAMPLEPER_256US"], [116, 1, 1, "c.nrf_qdec_sampleper_t.NRF_QDEC_SAMPLEPER_4096US", "NRF_QDEC_SAMPLEPER_4096US"], [116, 1, 1, "c.nrf_qdec_sampleper_t.NRF_QDEC_SAMPLEPER_512US", "NRF_QDEC_SAMPLEPER_512US"], [116, 1, 1, "c.nrf_qdec_sampleper_t.NRF_QDEC_SAMPLEPER_8192US", "NRF_QDEC_SAMPLEPER_8192US"], [116, 1, 1, "c.nrf_qdec_short_mask_t.NRF_QDEC_SHORT_REPORTRDY_READCLRACC_MASK", "NRF_QDEC_SHORT_REPORTRDY_READCLRACC_MASK"], [116, 1, 1, "c.nrf_qdec_short_mask_t.NRF_QDEC_SHORT_SAMPLERDY_STOP_MASK", "NRF_QDEC_SHORT_SAMPLERDY_STOP_MASK"], [116, 1, 1, "c.nrf_qdec_task_t.NRF_QDEC_TASK_RDCLRACC", "NRF_QDEC_TASK_RDCLRACC"], [116, 1, 1, "c.nrf_qdec_task_t.NRF_QDEC_TASK_RDCLRDBL", "NRF_QDEC_TASK_RDCLRDBL"], [116, 1, 1, "c.nrf_qdec_task_t.NRF_QDEC_TASK_READCLRACC", "NRF_QDEC_TASK_READCLRACC"], [116, 1, 1, "c.nrf_qdec_task_t.NRF_QDEC_TASK_START", "NRF_QDEC_TASK_START"], [116, 1, 1, "c.nrf_qdec_task_t.NRF_QDEC_TASK_STOP", "NRF_QDEC_TASK_STOP"], [120, 1, 1, "c.nrf_qspi_addrconfig_mode_t.NRF_QSPI_ADDRCONF_MODE_ALL", "NRF_QSPI_ADDRCONF_MODE_ALL"], [120, 1, 1, "c.nrf_qspi_addrconfig_mode_t.NRF_QSPI_ADDRCONF_MODE_NOINSTR", "NRF_QSPI_ADDRCONF_MODE_NOINSTR"], [120, 1, 1, "c.nrf_qspi_addrconfig_mode_t.NRF_QSPI_ADDRCONF_MODE_OPBYTE0", "NRF_QSPI_ADDRCONF_MODE_OPBYTE0"], [120, 1, 1, "c.nrf_qspi_addrconfig_mode_t.NRF_QSPI_ADDRCONF_MODE_OPCODE", "NRF_QSPI_ADDRCONF_MODE_OPCODE"], [120, 1, 1, "c.nrf_qspi_addrmode_t.NRF_QSPI_ADDRMODE_24BIT", "NRF_QSPI_ADDRMODE_24BIT"], [120, 1, 1, "c.nrf_qspi_addrmode_t.NRF_QSPI_ADDRMODE_32BIT", "NRF_QSPI_ADDRMODE_32BIT"], [120, 0, 1, "c.NRF_QSPI_BASE_CLOCK_FREQ", "NRF_QSPI_BASE_CLOCK_FREQ"], [120, 1, 1, "c.nrf_qspi_cinstr_len_t.NRF_QSPI_CINSTR_LEN_1B", "NRF_QSPI_CINSTR_LEN_1B"], [120, 1, 1, "c.nrf_qspi_cinstr_len_t.NRF_QSPI_CINSTR_LEN_2B", "NRF_QSPI_CINSTR_LEN_2B"], [120, 1, 1, "c.nrf_qspi_cinstr_len_t.NRF_QSPI_CINSTR_LEN_3B", "NRF_QSPI_CINSTR_LEN_3B"], [120, 1, 1, "c.nrf_qspi_cinstr_len_t.NRF_QSPI_CINSTR_LEN_4B", "NRF_QSPI_CINSTR_LEN_4B"], [120, 1, 1, "c.nrf_qspi_cinstr_len_t.NRF_QSPI_CINSTR_LEN_5B", "NRF_QSPI_CINSTR_LEN_5B"], [120, 1, 1, "c.nrf_qspi_cinstr_len_t.NRF_QSPI_CINSTR_LEN_6B", "NRF_QSPI_CINSTR_LEN_6B"], [120, 1, 1, "c.nrf_qspi_cinstr_len_t.NRF_QSPI_CINSTR_LEN_7B", "NRF_QSPI_CINSTR_LEN_7B"], [120, 1, 1, "c.nrf_qspi_cinstr_len_t.NRF_QSPI_CINSTR_LEN_8B", "NRF_QSPI_CINSTR_LEN_8B"], [120, 1, 1, "c.nrf_qspi_cinstr_len_t.NRF_QSPI_CINSTR_LEN_9B", "NRF_QSPI_CINSTR_LEN_9B"], [120, 1, 1, "c.nrf_qspi_erase_len_t.NRF_QSPI_ERASE_LEN_4KB", "NRF_QSPI_ERASE_LEN_4KB"], [120, 1, 1, "c.nrf_qspi_erase_len_t.NRF_QSPI_ERASE_LEN_64KB", "NRF_QSPI_ERASE_LEN_64KB"], [120, 1, 1, "c.nrf_qspi_erase_len_t.NRF_QSPI_ERASE_LEN_ALL", "NRF_QSPI_ERASE_LEN_ALL"], [120, 1, 1, "c.nrf_qspi_event_t.NRF_QSPI_EVENT_READY", "NRF_QSPI_EVENT_READY"], [120, 1, 1, "c.nrf_qspi_frequency_t.NRF_QSPI_FREQ_DIV1", "NRF_QSPI_FREQ_DIV1"], [120, 1, 1, "c.nrf_qspi_frequency_t.NRF_QSPI_FREQ_DIV10", "NRF_QSPI_FREQ_DIV10"], [120, 1, 1, "c.nrf_qspi_frequency_t.NRF_QSPI_FREQ_DIV11", "NRF_QSPI_FREQ_DIV11"], [120, 1, 1, "c.nrf_qspi_frequency_t.NRF_QSPI_FREQ_DIV12", "NRF_QSPI_FREQ_DIV12"], [120, 1, 1, "c.nrf_qspi_frequency_t.NRF_QSPI_FREQ_DIV13", "NRF_QSPI_FREQ_DIV13"], [120, 1, 1, "c.nrf_qspi_frequency_t.NRF_QSPI_FREQ_DIV14", "NRF_QSPI_FREQ_DIV14"], [120, 1, 1, "c.nrf_qspi_frequency_t.NRF_QSPI_FREQ_DIV15", "NRF_QSPI_FREQ_DIV15"], [120, 1, 1, "c.nrf_qspi_frequency_t.NRF_QSPI_FREQ_DIV16", "NRF_QSPI_FREQ_DIV16"], [120, 1, 1, "c.nrf_qspi_frequency_t.NRF_QSPI_FREQ_DIV2", "NRF_QSPI_FREQ_DIV2"], [120, 1, 1, "c.nrf_qspi_frequency_t.NRF_QSPI_FREQ_DIV3", "NRF_QSPI_FREQ_DIV3"], [120, 1, 1, "c.nrf_qspi_frequency_t.NRF_QSPI_FREQ_DIV4", "NRF_QSPI_FREQ_DIV4"], [120, 1, 1, "c.nrf_qspi_frequency_t.NRF_QSPI_FREQ_DIV5", "NRF_QSPI_FREQ_DIV5"], [120, 1, 1, "c.nrf_qspi_frequency_t.NRF_QSPI_FREQ_DIV6", "NRF_QSPI_FREQ_DIV6"], [120, 1, 1, "c.nrf_qspi_frequency_t.NRF_QSPI_FREQ_DIV7", "NRF_QSPI_FREQ_DIV7"], [120, 1, 1, "c.nrf_qspi_frequency_t.NRF_QSPI_FREQ_DIV8", "NRF_QSPI_FREQ_DIV8"], [120, 1, 1, "c.nrf_qspi_frequency_t.NRF_QSPI_FREQ_DIV9", "NRF_QSPI_FREQ_DIV9"], [120, 0, 1, "c.NRF_QSPI_HAS_DMA_ENC", "NRF_QSPI_HAS_DMA_ENC"], [120, 0, 1, "c.NRF_QSPI_HAS_MODE_1", "NRF_QSPI_HAS_MODE_1"], [120, 0, 1, "c.NRF_QSPI_HAS_XIPEN", "NRF_QSPI_HAS_XIPEN"], [120, 0, 1, "c.NRF_QSPI_HAS_XIP_ENC", "NRF_QSPI_HAS_XIP_ENC"], [120, 1, 1, "c.nrf_qspi_int_mask_t.NRF_QSPI_INT_READY_MASK", "NRF_QSPI_INT_READY_MASK"], [120, 1, 1, "c.nrf_qspi_spi_mode_t.NRF_QSPI_MODE_0", "NRF_QSPI_MODE_0"], [120, 1, 1, "c.nrf_qspi_spi_mode_t.NRF_QSPI_MODE_1", "NRF_QSPI_MODE_1"], [120, 0, 1, "c.NRF_QSPI_PIN_NOT_CONNECTED", "NRF_QSPI_PIN_NOT_CONNECTED"], [120, 0, 1, "c.NRF_QSPI_PIN_VAL", "NRF_QSPI_PIN_VAL"], [120, 1, 1, "c.nrf_qspi_readoc_t.NRF_QSPI_READOC_FASTREAD", "NRF_QSPI_READOC_FASTREAD"], [120, 1, 1, "c.nrf_qspi_readoc_t.NRF_QSPI_READOC_READ2IO", "NRF_QSPI_READOC_READ2IO"], [120, 1, 1, "c.nrf_qspi_readoc_t.NRF_QSPI_READOC_READ2O", "NRF_QSPI_READOC_READ2O"], [120, 1, 1, "c.nrf_qspi_readoc_t.NRF_QSPI_READOC_READ4IO", "NRF_QSPI_READOC_READ4IO"], [120, 1, 1, "c.nrf_qspi_readoc_t.NRF_QSPI_READOC_READ4O", "NRF_QSPI_READOC_READ4O"], [120, 1, 1, "c.nrf_qspi_task_t.NRF_QSPI_TASK_ACTIVATE", "NRF_QSPI_TASK_ACTIVATE"], [120, 1, 1, "c.nrf_qspi_task_t.NRF_QSPI_TASK_DEACTIVATE", "NRF_QSPI_TASK_DEACTIVATE"], [120, 1, 1, "c.nrf_qspi_task_t.NRF_QSPI_TASK_ERASESTART", "NRF_QSPI_TASK_ERASESTART"], [120, 1, 1, "c.nrf_qspi_task_t.NRF_QSPI_TASK_READSTART", "NRF_QSPI_TASK_READSTART"], [120, 1, 1, "c.nrf_qspi_task_t.NRF_QSPI_TASK_WRITESTART", "NRF_QSPI_TASK_WRITESTART"], [120, 1, 1, "c.nrf_qspi_writeoc_t.NRF_QSPI_WRITEOC_PP", "NRF_QSPI_WRITEOC_PP"], [120, 1, 1, "c.nrf_qspi_writeoc_t.NRF_QSPI_WRITEOC_PP2O", "NRF_QSPI_WRITEOC_PP2O"], [120, 1, 1, "c.nrf_qspi_writeoc_t.NRF_QSPI_WRITEOC_PP4IO", "NRF_QSPI_WRITEOC_PP4IO"], [120, 1, 1, "c.nrf_qspi_writeoc_t.NRF_QSPI_WRITEOC_PP4O", "NRF_QSPI_WRITEOC_PP4O"], [122, 1, 1, "c.nrf_radio_cca_mode_t.NRF_RADIO_CCA_MODE_CARRIER", "NRF_RADIO_CCA_MODE_CARRIER"], [122, 1, 1, "c.nrf_radio_cca_mode_t.NRF_RADIO_CCA_MODE_CARRIER_AND_ED", "NRF_RADIO_CCA_MODE_CARRIER_AND_ED"], [122, 1, 1, "c.nrf_radio_cca_mode_t.NRF_RADIO_CCA_MODE_CARRIER_OR_ED", "NRF_RADIO_CCA_MODE_CARRIER_OR_ED"], [122, 1, 1, "c.nrf_radio_cca_mode_t.NRF_RADIO_CCA_MODE_ED", "NRF_RADIO_CCA_MODE_ED"], [122, 1, 1, "c.nrf_radio_cca_mode_t.NRF_RADIO_CCA_MODE_ED_TEST1", "NRF_RADIO_CCA_MODE_ED_TEST1"], [122, 1, 1, "c.nrf_radio_crc_addr_t.NRF_RADIO_CRC_ADDR_IEEE802154", "NRF_RADIO_CRC_ADDR_IEEE802154"], [122, 1, 1, "c.nrf_radio_crc_addr_t.NRF_RADIO_CRC_ADDR_INCLUDE", "NRF_RADIO_CRC_ADDR_INCLUDE"], [122, 1, 1, "c.nrf_radio_crc_addr_t.NRF_RADIO_CRC_ADDR_S0", "NRF_RADIO_CRC_ADDR_S0"], [122, 1, 1, "c.nrf_radio_crc_addr_t.NRF_RADIO_CRC_ADDR_S1", "NRF_RADIO_CRC_ADDR_S1"], [122, 1, 1, "c.nrf_radio_crc_addr_t.NRF_RADIO_CRC_ADDR_SKIP", "NRF_RADIO_CRC_ADDR_SKIP"], [122, 1, 1, "c.nrf_radio_cteinline_rx_mode_t.NRF_RADIO_CTEINLINE_RX_MODE_125NS", "NRF_RADIO_CTEINLINE_RX_MODE_125NS"], [122, 1, 1, "c.nrf_radio_cteinline_rx_mode_t.NRF_RADIO_CTEINLINE_RX_MODE_1US", "NRF_RADIO_CTEINLINE_RX_MODE_1US"], [122, 1, 1, "c.nrf_radio_cteinline_rx_mode_t.NRF_RADIO_CTEINLINE_RX_MODE_250NS", "NRF_RADIO_CTEINLINE_RX_MODE_250NS"], [122, 1, 1, "c.nrf_radio_cteinline_rx_mode_t.NRF_RADIO_CTEINLINE_RX_MODE_2US", "NRF_RADIO_CTEINLINE_RX_MODE_2US"], [122, 1, 1, "c.nrf_radio_cteinline_rx_mode_t.NRF_RADIO_CTEINLINE_RX_MODE_4US", "NRF_RADIO_CTEINLINE_RX_MODE_4US"], [122, 1, 1, "c.nrf_radio_cteinline_rx_mode_t.NRF_RADIO_CTEINLINE_RX_MODE_500NS", "NRF_RADIO_CTEINLINE_RX_MODE_500NS"], [122, 1, 1, "c.nrf_radio_cteinline_time_range_t.NRF_RADIO_CTEINLINE_TIME_RANGE_20", "NRF_RADIO_CTEINLINE_TIME_RANGE_20"], [122, 1, 1, "c.nrf_radio_cteinline_time_range_t.NRF_RADIO_CTEINLINE_TIME_RANGE_31", "NRF_RADIO_CTEINLINE_TIME_RANGE_31"], [122, 1, 1, "c.nrf_radio_cteinline_time_range_t.NRF_RADIO_CTEINLINE_TIME_RANGE_63", "NRF_RADIO_CTEINLINE_TIME_RANGE_63"], [122, 1, 1, "c.nrf_radio_dfectrl_extension_t.NRF_RADIO_DFECTRL_EXTENSION_CRC", "NRF_RADIO_DFECTRL_EXTENSION_CRC"], [122, 1, 1, "c.nrf_radio_dfectrl_extension_t.NRF_RADIO_DFECTRL_EXTENSION_PAYLOAD", "NRF_RADIO_DFECTRL_EXTENSION_PAYLOAD"], [122, 1, 1, "c.nrf_radio_dfectrl_sample_spacing_t.NRF_RADIO_DFECTRL_SAMPLE_SPACING_125NS", "NRF_RADIO_DFECTRL_SAMPLE_SPACING_125NS"], [122, 1, 1, "c.nrf_radio_dfectrl_sample_spacing_t.NRF_RADIO_DFECTRL_SAMPLE_SPACING_1US", "NRF_RADIO_DFECTRL_SAMPLE_SPACING_1US"], [122, 1, 1, "c.nrf_radio_dfectrl_sample_spacing_t.NRF_RADIO_DFECTRL_SAMPLE_SPACING_250NS", "NRF_RADIO_DFECTRL_SAMPLE_SPACING_250NS"], [122, 1, 1, "c.nrf_radio_dfectrl_sample_spacing_t.NRF_RADIO_DFECTRL_SAMPLE_SPACING_2US", "NRF_RADIO_DFECTRL_SAMPLE_SPACING_2US"], [122, 1, 1, "c.nrf_radio_dfectrl_sample_spacing_t.NRF_RADIO_DFECTRL_SAMPLE_SPACING_4US", "NRF_RADIO_DFECTRL_SAMPLE_SPACING_4US"], [122, 1, 1, "c.nrf_radio_dfectrl_sample_spacing_t.NRF_RADIO_DFECTRL_SAMPLE_SPACING_500NS", "NRF_RADIO_DFECTRL_SAMPLE_SPACING_500NS"], [122, 1, 1, "c.nrf_radio_dfectrl_sample_type_t.NRF_RADIO_DFECTRL_SAMPLE_TYPE_IQ", "NRF_RADIO_DFECTRL_SAMPLE_TYPE_IQ"], [122, 1, 1, "c.nrf_radio_dfectrl_sample_type_t.NRF_RADIO_DFECTRL_SAMPLE_TYPE_MAGPHASE", "NRF_RADIO_DFECTRL_SAMPLE_TYPE_MAGPHASE"], [122, 1, 1, "c.nrf_radio_dfectrl_switch_spacing_t.NRF_RADIO_DFECTRL_SWITCH_SPACING_1US", "NRF_RADIO_DFECTRL_SWITCH_SPACING_1US"], [122, 1, 1, "c.nrf_radio_dfectrl_switch_spacing_t.NRF_RADIO_DFECTRL_SWITCH_SPACING_2US", "NRF_RADIO_DFECTRL_SWITCH_SPACING_2US"], [122, 1, 1, "c.nrf_radio_dfectrl_switch_spacing_t.NRF_RADIO_DFECTRL_SWITCH_SPACING_4US", "NRF_RADIO_DFECTRL_SWITCH_SPACING_4US"], [122, 1, 1, "c.nrf_radio_dfe_op_mode_t.NRF_RADIO_DFE_OP_MODE_AOA", "NRF_RADIO_DFE_OP_MODE_AOA"], [122, 1, 1, "c.nrf_radio_dfe_op_mode_t.NRF_RADIO_DFE_OP_MODE_AOD", "NRF_RADIO_DFE_OP_MODE_AOD"], [122, 1, 1, "c.nrf_radio_dfe_sample_state_t.NRF_RADIO_DFE_SAMPLE_STATE_IDLE", "NRF_RADIO_DFE_SAMPLE_STATE_IDLE"], [122, 1, 1, "c.nrf_radio_dfe_sample_state_t.NRF_RADIO_DFE_SAMPLE_STATE_SAMPLING", "NRF_RADIO_DFE_SAMPLE_STATE_SAMPLING"], [122, 1, 1, "c.nrf_radio_dfe_switch_state_t.NRF_RADIO_DFE_SWITCH_STATE_ENDING", "NRF_RADIO_DFE_SWITCH_STATE_ENDING"], [122, 1, 1, "c.nrf_radio_dfe_switch_state_t.NRF_RADIO_DFE_SWITCH_STATE_GUARD", "NRF_RADIO_DFE_SWITCH_STATE_GUARD"], [122, 1, 1, "c.nrf_radio_dfe_switch_state_t.NRF_RADIO_DFE_SWITCH_STATE_IDLE", "NRF_RADIO_DFE_SWITCH_STATE_IDLE"], [122, 1, 1, "c.nrf_radio_dfe_switch_state_t.NRF_RADIO_DFE_SWITCH_STATE_OFFSET", "NRF_RADIO_DFE_SWITCH_STATE_OFFSET"], [122, 1, 1, "c.nrf_radio_dfe_switch_state_t.NRF_RADIO_DFE_SWITCH_STATE_REF", "NRF_RADIO_DFE_SWITCH_STATE_REF"], [122, 1, 1, "c.nrf_radio_dfe_switch_state_t.NRF_RADIO_DFE_SWITCH_STATE_SWITCHING", "NRF_RADIO_DFE_SWITCH_STATE_SWITCHING"], [122, 0, 1, "c.NRF_RADIO_DPPI_OFFSET", "NRF_RADIO_DPPI_OFFSET"], [122, 1, 1, "c.nrf_radio_event_t.NRF_RADIO_EVENT_ADDRESS", "NRF_RADIO_EVENT_ADDRESS"], [122, 1, 1, "c.nrf_radio_event_t.NRF_RADIO_EVENT_BCMATCH", "NRF_RADIO_EVENT_BCMATCH"], [122, 1, 1, "c.nrf_radio_event_t.NRF_RADIO_EVENT_CCABUSY", "NRF_RADIO_EVENT_CCABUSY"], [122, 1, 1, "c.nrf_radio_event_t.NRF_RADIO_EVENT_CCAIDLE", "NRF_RADIO_EVENT_CCAIDLE"], [122, 1, 1, "c.nrf_radio_event_t.NRF_RADIO_EVENT_CCASTOPPED", "NRF_RADIO_EVENT_CCASTOPPED"], [122, 1, 1, "c.nrf_radio_event_t.NRF_RADIO_EVENT_CRCERROR", "NRF_RADIO_EVENT_CRCERROR"], [122, 1, 1, "c.nrf_radio_event_t.NRF_RADIO_EVENT_CRCOK", "NRF_RADIO_EVENT_CRCOK"], [122, 1, 1, "c.nrf_radio_event_t.NRF_RADIO_EVENT_CTEPRESENT", "NRF_RADIO_EVENT_CTEPRESENT"], [122, 1, 1, "c.nrf_radio_event_t.NRF_RADIO_EVENT_DEVMATCH", "NRF_RADIO_EVENT_DEVMATCH"], [122, 1, 1, "c.nrf_radio_event_t.NRF_RADIO_EVENT_DEVMISS", "NRF_RADIO_EVENT_DEVMISS"], [122, 1, 1, "c.nrf_radio_event_t.NRF_RADIO_EVENT_DISABLED", "NRF_RADIO_EVENT_DISABLED"], [122, 1, 1, "c.nrf_radio_event_t.NRF_RADIO_EVENT_EDEND", "NRF_RADIO_EVENT_EDEND"], [122, 1, 1, "c.nrf_radio_event_t.NRF_RADIO_EVENT_EDSTOPPED", "NRF_RADIO_EVENT_EDSTOPPED"], [122, 1, 1, "c.nrf_radio_event_t.NRF_RADIO_EVENT_END", "NRF_RADIO_EVENT_END"], [122, 1, 1, "c.nrf_radio_event_t.NRF_RADIO_EVENT_FRAMESTART", "NRF_RADIO_EVENT_FRAMESTART"], [122, 1, 1, "c.nrf_radio_event_t.NRF_RADIO_EVENT_MHRMATCH", "NRF_RADIO_EVENT_MHRMATCH"], [122, 1, 1, "c.nrf_radio_event_t.NRF_RADIO_EVENT_PAYLOAD", "NRF_RADIO_EVENT_PAYLOAD"], [122, 1, 1, "c.nrf_radio_event_t.NRF_RADIO_EVENT_PHYEND", "NRF_RADIO_EVENT_PHYEND"], [122, 1, 1, "c.nrf_radio_event_t.NRF_RADIO_EVENT_RATEBOOST", "NRF_RADIO_EVENT_RATEBOOST"], [122, 1, 1, "c.nrf_radio_event_t.NRF_RADIO_EVENT_READY", "NRF_RADIO_EVENT_READY"], [122, 1, 1, "c.nrf_radio_event_t.NRF_RADIO_EVENT_RSSIEND", "NRF_RADIO_EVENT_RSSIEND"], [122, 1, 1, "c.nrf_radio_event_t.NRF_RADIO_EVENT_RXREADY", "NRF_RADIO_EVENT_RXREADY"], [122, 1, 1, "c.nrf_radio_event_t.NRF_RADIO_EVENT_SYNC", "NRF_RADIO_EVENT_SYNC"], [122, 1, 1, "c.nrf_radio_event_t.NRF_RADIO_EVENT_TXREADY", "NRF_RADIO_EVENT_TXREADY"], [122, 1, 1, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_ADDRESS_MASK", "NRF_RADIO_INT_ADDRESS_MASK"], [122, 1, 1, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_BCMATCH_MASK", "NRF_RADIO_INT_BCMATCH_MASK"], [122, 1, 1, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_CCABUSY_MASK", "NRF_RADIO_INT_CCABUSY_MASK"], [122, 1, 1, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_CCAIDLE_MASK", "NRF_RADIO_INT_CCAIDLE_MASK"], [122, 1, 1, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_CCASTOPPED_MASK", "NRF_RADIO_INT_CCASTOPPED_MASK"], [122, 1, 1, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_CRCERROR_MASK", "NRF_RADIO_INT_CRCERROR_MASK"], [122, 1, 1, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_CRCOK_MASK", "NRF_RADIO_INT_CRCOK_MASK"], [122, 1, 1, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_CTEPRESENT_MASK", "NRF_RADIO_INT_CTEPRESENT_MASK"], [122, 1, 1, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_DEVMATCH_MASK", "NRF_RADIO_INT_DEVMATCH_MASK"], [122, 1, 1, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_DEVMISS_MASK", "NRF_RADIO_INT_DEVMISS_MASK"], [122, 1, 1, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_DISABLED_MASK", "NRF_RADIO_INT_DISABLED_MASK"], [122, 1, 1, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_EDEND_MASK", "NRF_RADIO_INT_EDEND_MASK"], [122, 1, 1, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_EDSTOPPED_MASK", "NRF_RADIO_INT_EDSTOPPED_MASK"], [122, 1, 1, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_END_MASK", "NRF_RADIO_INT_END_MASK"], [122, 1, 1, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_FRAMESTART_MASK", "NRF_RADIO_INT_FRAMESTART_MASK"], [122, 1, 1, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_MHRMATCH_MASK", "NRF_RADIO_INT_MHRMATCH_MASK"], [122, 1, 1, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_PAYLOAD_MASK", "NRF_RADIO_INT_PAYLOAD_MASK"], [122, 1, 1, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_PHYEND_MASK", "NRF_RADIO_INT_PHYEND_MASK"], [122, 1, 1, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_RATEBOOST_MASK", "NRF_RADIO_INT_RATEBOOST_MASK"], [122, 1, 1, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_READY_MASK", "NRF_RADIO_INT_READY_MASK"], [122, 1, 1, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_RSSIEND_MASK", "NRF_RADIO_INT_RSSIEND_MASK"], [122, 1, 1, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_RXREADY_MASK", "NRF_RADIO_INT_RXREADY_MASK"], [122, 1, 1, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_SYNC_MASK", "NRF_RADIO_INT_SYNC_MASK"], [122, 1, 1, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_TXREADY_MASK", "NRF_RADIO_INT_TXREADY_MASK"], [122, 1, 1, "c.nrf_radio_mode_t.NRF_RADIO_MODE_BLE_1MBIT", "NRF_RADIO_MODE_BLE_1MBIT"], [122, 1, 1, "c.nrf_radio_mode_t.NRF_RADIO_MODE_BLE_2MBIT", "NRF_RADIO_MODE_BLE_2MBIT"], [122, 1, 1, "c.nrf_radio_mode_t.NRF_RADIO_MODE_BLE_LR125KBIT", "NRF_RADIO_MODE_BLE_LR125KBIT"], [122, 1, 1, "c.nrf_radio_mode_t.NRF_RADIO_MODE_BLE_LR500KBIT", "NRF_RADIO_MODE_BLE_LR500KBIT"], [122, 1, 1, "c.nrf_radio_mode_t.NRF_RADIO_MODE_IEEE802154_250KBIT", "NRF_RADIO_MODE_IEEE802154_250KBIT"], [122, 1, 1, "c.nrf_radio_mode_t.NRF_RADIO_MODE_NRF_1MBIT", "NRF_RADIO_MODE_NRF_1MBIT"], [122, 1, 1, "c.nrf_radio_mode_t.NRF_RADIO_MODE_NRF_250KBIT", "NRF_RADIO_MODE_NRF_250KBIT"], [122, 1, 1, "c.nrf_radio_mode_t.NRF_RADIO_MODE_NRF_2MBIT", "NRF_RADIO_MODE_NRF_2MBIT"], [122, 1, 1, "c.nrf_radio_mode_t.NRF_RADIO_MODE_NRF_4MBIT_H_0_25", "NRF_RADIO_MODE_NRF_4MBIT_H_0_25"], [122, 1, 1, "c.nrf_radio_mode_t.NRF_RADIO_MODE_NRF_4MBIT_H_0_5", "NRF_RADIO_MODE_NRF_4MBIT_H_0_5"], [122, 1, 1, "c.nrf_radio_preamble_length_t.NRF_RADIO_PREAMBLE_LENGTH_16BIT", "NRF_RADIO_PREAMBLE_LENGTH_16BIT"], [122, 1, 1, "c.nrf_radio_preamble_length_t.NRF_RADIO_PREAMBLE_LENGTH_32BIT_ZERO", "NRF_RADIO_PREAMBLE_LENGTH_32BIT_ZERO"], [122, 1, 1, "c.nrf_radio_preamble_length_t.NRF_RADIO_PREAMBLE_LENGTH_8BIT", "NRF_RADIO_PREAMBLE_LENGTH_8BIT"], [122, 1, 1, "c.nrf_radio_preamble_length_t.NRF_RADIO_PREAMBLE_LENGTH_LONG_RANGE", "NRF_RADIO_PREAMBLE_LENGTH_LONG_RANGE"], [122, 1, 1, "c.nrf_radio_short_mask_t.NRF_RADIO_SHORT_ADDRESS_BCSTART_MASK", "NRF_RADIO_SHORT_ADDRESS_BCSTART_MASK"], [122, 1, 1, "c.nrf_radio_short_mask_t.NRF_RADIO_SHORT_ADDRESS_RSSISTART_MASK", "NRF_RADIO_SHORT_ADDRESS_RSSISTART_MASK"], [122, 1, 1, "c.nrf_radio_short_mask_t.NRF_RADIO_SHORT_CCABUSY_DISABLE_MASK", "NRF_RADIO_SHORT_CCABUSY_DISABLE_MASK"], [122, 1, 1, "c.nrf_radio_short_mask_t.NRF_RADIO_SHORT_CCAIDLE_STOP_MASK", "NRF_RADIO_SHORT_CCAIDLE_STOP_MASK"], [122, 1, 1, "c.nrf_radio_short_mask_t.NRF_RADIO_SHORT_CCAIDLE_TXEN_MASK", "NRF_RADIO_SHORT_CCAIDLE_TXEN_MASK"], [122, 1, 1, "c.nrf_radio_short_mask_t.NRF_RADIO_SHORT_DISABLED_RSSISTOP_MASK", "NRF_RADIO_SHORT_DISABLED_RSSISTOP_MASK"], [122, 1, 1, "c.nrf_radio_short_mask_t.NRF_RADIO_SHORT_DISABLED_RXEN_MASK", "NRF_RADIO_SHORT_DISABLED_RXEN_MASK"], [122, 1, 1, "c.nrf_radio_short_mask_t.NRF_RADIO_SHORT_DISABLED_TXEN_MASK", "NRF_RADIO_SHORT_DISABLED_TXEN_MASK"], [122, 1, 1, "c.nrf_radio_short_mask_t.NRF_RADIO_SHORT_EDEND_DISABLE_MASK", "NRF_RADIO_SHORT_EDEND_DISABLE_MASK"], [122, 1, 1, "c.nrf_radio_short_mask_t.NRF_RADIO_SHORT_END_DISABLE_MASK", "NRF_RADIO_SHORT_END_DISABLE_MASK"], [122, 1, 1, "c.nrf_radio_short_mask_t.NRF_RADIO_SHORT_END_START_MASK", "NRF_RADIO_SHORT_END_START_MASK"], [122, 1, 1, "c.nrf_radio_short_mask_t.NRF_RADIO_SHORT_FRAMESTART_BCSTART_MASK", "NRF_RADIO_SHORT_FRAMESTART_BCSTART_MASK"], [122, 1, 1, "c.nrf_radio_short_mask_t.NRF_RADIO_SHORT_PHYEND_DISABLE_MASK", "NRF_RADIO_SHORT_PHYEND_DISABLE_MASK"], [122, 1, 1, "c.nrf_radio_short_mask_t.NRF_RADIO_SHORT_PHYEND_START_MASK", "NRF_RADIO_SHORT_PHYEND_START_MASK"], [122, 1, 1, "c.nrf_radio_short_mask_t.NRF_RADIO_SHORT_READY_EDSTART_MASK", "NRF_RADIO_SHORT_READY_EDSTART_MASK"], [122, 1, 1, "c.nrf_radio_short_mask_t.NRF_RADIO_SHORT_READY_START_MASK", "NRF_RADIO_SHORT_READY_START_MASK"], [122, 1, 1, "c.nrf_radio_short_mask_t.NRF_RADIO_SHORT_RXREADY_CCASTART_MASK", "NRF_RADIO_SHORT_RXREADY_CCASTART_MASK"], [122, 1, 1, "c.nrf_radio_short_mask_t.NRF_RADIO_SHORT_RXREADY_START_MASK", "NRF_RADIO_SHORT_RXREADY_START_MASK"], [122, 1, 1, "c.nrf_radio_short_mask_t.NRF_RADIO_SHORT_TXREADY_START_MASK", "NRF_RADIO_SHORT_TXREADY_START_MASK"], [122, 1, 1, "c.nrf_radio_state_t.NRF_RADIO_STATE_DISABLED", "NRF_RADIO_STATE_DISABLED"], [122, 1, 1, "c.nrf_radio_state_t.NRF_RADIO_STATE_RX", "NRF_RADIO_STATE_RX"], [122, 1, 1, "c.nrf_radio_state_t.NRF_RADIO_STATE_RXDISABLE", "NRF_RADIO_STATE_RXDISABLE"], [122, 1, 1, "c.nrf_radio_state_t.NRF_RADIO_STATE_RXIDLE", "NRF_RADIO_STATE_RXIDLE"], [122, 1, 1, "c.nrf_radio_state_t.NRF_RADIO_STATE_RXRU", "NRF_RADIO_STATE_RXRU"], [122, 1, 1, "c.nrf_radio_state_t.NRF_RADIO_STATE_TX", "NRF_RADIO_STATE_TX"], [122, 1, 1, "c.nrf_radio_state_t.NRF_RADIO_STATE_TXDISABLE", "NRF_RADIO_STATE_TXDISABLE"], [122, 1, 1, "c.nrf_radio_state_t.NRF_RADIO_STATE_TXIDLE", "NRF_RADIO_STATE_TXIDLE"], [122, 1, 1, "c.nrf_radio_state_t.NRF_RADIO_STATE_TXRU", "NRF_RADIO_STATE_TXRU"], [122, 1, 1, "c.nrf_radio_task_t.NRF_RADIO_TASK_BCSTART", "NRF_RADIO_TASK_BCSTART"], [122, 1, 1, "c.nrf_radio_task_t.NRF_RADIO_TASK_BCSTOP", "NRF_RADIO_TASK_BCSTOP"], [122, 1, 1, "c.nrf_radio_task_t.NRF_RADIO_TASK_CCASTART", "NRF_RADIO_TASK_CCASTART"], [122, 1, 1, "c.nrf_radio_task_t.NRF_RADIO_TASK_CCASTOP", "NRF_RADIO_TASK_CCASTOP"], [122, 1, 1, "c.nrf_radio_task_t.NRF_RADIO_TASK_DISABLE", "NRF_RADIO_TASK_DISABLE"], [122, 1, 1, "c.nrf_radio_task_t.NRF_RADIO_TASK_EDSTART", "NRF_RADIO_TASK_EDSTART"], [122, 1, 1, "c.nrf_radio_task_t.NRF_RADIO_TASK_EDSTOP", "NRF_RADIO_TASK_EDSTOP"], [122, 1, 1, "c.nrf_radio_task_t.NRF_RADIO_TASK_RSSISTART", "NRF_RADIO_TASK_RSSISTART"], [122, 1, 1, "c.nrf_radio_task_t.NRF_RADIO_TASK_RSSISTOP", "NRF_RADIO_TASK_RSSISTOP"], [122, 1, 1, "c.nrf_radio_task_t.NRF_RADIO_TASK_RXEN", "NRF_RADIO_TASK_RXEN"], [122, 1, 1, "c.nrf_radio_task_t.NRF_RADIO_TASK_START", "NRF_RADIO_TASK_START"], [122, 1, 1, "c.nrf_radio_task_t.NRF_RADIO_TASK_STOP", "NRF_RADIO_TASK_STOP"], [122, 1, 1, "c.nrf_radio_task_t.NRF_RADIO_TASK_TXEN", "NRF_RADIO_TASK_TXEN"], [122, 1, 1, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_0DBM", "NRF_RADIO_TXPOWER_0DBM"], [122, 1, 1, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_NEG12DBM", "NRF_RADIO_TXPOWER_NEG12DBM"], [122, 1, 1, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_NEG16DBM", "NRF_RADIO_TXPOWER_NEG16DBM"], [122, 1, 1, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_NEG1DBM", "NRF_RADIO_TXPOWER_NEG1DBM"], [122, 1, 1, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_NEG20DBM", "NRF_RADIO_TXPOWER_NEG20DBM"], [122, 1, 1, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_NEG2DBM", "NRF_RADIO_TXPOWER_NEG2DBM"], [122, 1, 1, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_NEG30DBM", "NRF_RADIO_TXPOWER_NEG30DBM"], [122, 1, 1, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_NEG3DBM", "NRF_RADIO_TXPOWER_NEG3DBM"], [122, 1, 1, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_NEG40DBM", "NRF_RADIO_TXPOWER_NEG40DBM"], [122, 1, 1, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_NEG4DBM", "NRF_RADIO_TXPOWER_NEG4DBM"], [122, 1, 1, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_NEG5DBM", "NRF_RADIO_TXPOWER_NEG5DBM"], [122, 1, 1, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_NEG6DBM", "NRF_RADIO_TXPOWER_NEG6DBM"], [122, 1, 1, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_NEG70DBM", "NRF_RADIO_TXPOWER_NEG70DBM"], [122, 1, 1, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_NEG7DBM", "NRF_RADIO_TXPOWER_NEG7DBM"], [122, 1, 1, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_NEG8DBM", "NRF_RADIO_TXPOWER_NEG8DBM"], [122, 1, 1, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_POS10DBM", "NRF_RADIO_TXPOWER_POS10DBM"], [122, 1, 1, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_POS1DBM", "NRF_RADIO_TXPOWER_POS1DBM"], [122, 1, 1, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_POS2DBM", "NRF_RADIO_TXPOWER_POS2DBM"], [122, 1, 1, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_POS3DBM", "NRF_RADIO_TXPOWER_POS3DBM"], [122, 1, 1, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_POS4DBM", "NRF_RADIO_TXPOWER_POS4DBM"], [122, 1, 1, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_POS5DBM", "NRF_RADIO_TXPOWER_POS5DBM"], [122, 1, 1, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_POS6DBM", "NRF_RADIO_TXPOWER_POS6DBM"], [122, 1, 1, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_POS7DBM", "NRF_RADIO_TXPOWER_POS7DBM"], [122, 1, 1, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_POS8DBM", "NRF_RADIO_TXPOWER_POS8DBM"], [122, 1, 1, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_POS9DBM", "NRF_RADIO_TXPOWER_POS9DBM"], [124, 1, 1, "c.nrf_ramc_event_t.NRF_RAMC_EVENT_ERROR_FIXABLE", "NRF_RAMC_EVENT_ERROR_FIXABLE"], [124, 1, 1, "c.nrf_ramc_event_t.NRF_RAMC_EVENT_ERROR_NON_FIXABLE", "NRF_RAMC_EVENT_ERROR_NON_FIXABLE"], [126, 1, 1, "c.nrf_regulators_elv_mode_allow_mask_t.NRF_REGULATORS_ELV_MODE_ALLOW_MASK_EXT", "NRF_REGULATORS_ELV_MODE_ALLOW_MASK_EXT"], [126, 0, 1, "c.NRF_REGULATORS_HAS_INDUCTOR_DET", "NRF_REGULATORS_HAS_INDUCTOR_DET"], [126, 0, 1, "c.NRF_REGULATORS_HAS_MAIN_STATUS", "NRF_REGULATORS_HAS_MAIN_STATUS"], [126, 0, 1, "c.NRF_REGULATORS_HAS_POF", "NRF_REGULATORS_HAS_POF"], [126, 0, 1, "c.NRF_REGULATORS_HAS_POF_STATUS", "NRF_REGULATORS_HAS_POF_STATUS"], [126, 0, 1, "c.NRF_REGULATORS_HAS_POF_VDDH", "NRF_REGULATORS_HAS_POF_VDDH"], [126, 0, 1, "c.NRF_REGULATORS_HAS_POF_WARN_DISABLE", "NRF_REGULATORS_HAS_POF_WARN_DISABLE"], [126, 0, 1, "c.NRF_REGULATORS_HAS_TRIM", "NRF_REGULATORS_HAS_TRIM"], [126, 0, 1, "c.NRF_REGULATORS_HAS_VREG_HIGH", "NRF_REGULATORS_HAS_VREG_HIGH"], [126, 0, 1, "c.NRF_REGULATORS_HAS_VREG_MEDIUM", "NRF_REGULATORS_HAS_VREG_MEDIUM"], [126, 0, 1, "c.NRF_REGULATORS_HAS_VREG_RADIO", "NRF_REGULATORS_HAS_VREG_RADIO"], [126, 1, 1, "c.nrf_regulators_main_status_t.NRF_REGULATORS_MAIN_STATUS_HIGH", "NRF_REGULATORS_MAIN_STATUS_HIGH"], [126, 1, 1, "c.nrf_regulators_main_status_t.NRF_REGULATORS_MAIN_STATUS_NORMAL", "NRF_REGULATORS_MAIN_STATUS_NORMAL"], [126, 1, 1, "c.nrf_regulators_pof_thr_t.NRF_REGULATORS_POF_THR_1V7", "NRF_REGULATORS_POF_THR_1V7"], [126, 1, 1, "c.nrf_regulators_pof_thr_t.NRF_REGULATORS_POF_THR_1V8", "NRF_REGULATORS_POF_THR_1V8"], [126, 1, 1, "c.nrf_regulators_pof_thr_t.NRF_REGULATORS_POF_THR_1V9", "NRF_REGULATORS_POF_THR_1V9"], [126, 1, 1, "c.nrf_regulators_pof_thr_t.NRF_REGULATORS_POF_THR_2V0", "NRF_REGULATORS_POF_THR_2V0"], [126, 1, 1, "c.nrf_regulators_pof_thr_t.NRF_REGULATORS_POF_THR_2V1", "NRF_REGULATORS_POF_THR_2V1"], [126, 1, 1, "c.nrf_regulators_pof_thr_t.NRF_REGULATORS_POF_THR_2V2", "NRF_REGULATORS_POF_THR_2V2"], [126, 1, 1, "c.nrf_regulators_pof_thr_t.NRF_REGULATORS_POF_THR_2V3", "NRF_REGULATORS_POF_THR_2V3"], [126, 1, 1, "c.nrf_regulators_pof_thr_t.NRF_REGULATORS_POF_THR_2V4", "NRF_REGULATORS_POF_THR_2V4"], [126, 1, 1, "c.nrf_regulators_pof_thr_t.NRF_REGULATORS_POF_THR_2V5", "NRF_REGULATORS_POF_THR_2V5"], [126, 1, 1, "c.nrf_regulators_pof_thr_t.NRF_REGULATORS_POF_THR_2V6", "NRF_REGULATORS_POF_THR_2V6"], [126, 1, 1, "c.nrf_regulators_pof_thr_t.NRF_REGULATORS_POF_THR_2V7", "NRF_REGULATORS_POF_THR_2V7"], [126, 1, 1, "c.nrf_regulators_pof_thr_t.NRF_REGULATORS_POF_THR_2V8", "NRF_REGULATORS_POF_THR_2V8"], [126, 1, 1, "c.nrf_regulators_pof_thr_vddh_t.NRF_REGULATORS_POF_THR_VDDH_2V7", "NRF_REGULATORS_POF_THR_VDDH_2V7"], [126, 1, 1, "c.nrf_regulators_pof_thr_vddh_t.NRF_REGULATORS_POF_THR_VDDH_2V8", "NRF_REGULATORS_POF_THR_VDDH_2V8"], [126, 1, 1, "c.nrf_regulators_pof_thr_vddh_t.NRF_REGULATORS_POF_THR_VDDH_2V9", "NRF_REGULATORS_POF_THR_VDDH_2V9"], [126, 1, 1, "c.nrf_regulators_pof_thr_vddh_t.NRF_REGULATORS_POF_THR_VDDH_3V0", "NRF_REGULATORS_POF_THR_VDDH_3V0"], [126, 1, 1, "c.nrf_regulators_pof_thr_vddh_t.NRF_REGULATORS_POF_THR_VDDH_3V1", "NRF_REGULATORS_POF_THR_VDDH_3V1"], [126, 1, 1, "c.nrf_regulators_pof_thr_vddh_t.NRF_REGULATORS_POF_THR_VDDH_3V2", "NRF_REGULATORS_POF_THR_VDDH_3V2"], [126, 1, 1, "c.nrf_regulators_pof_thr_vddh_t.NRF_REGULATORS_POF_THR_VDDH_3V3", "NRF_REGULATORS_POF_THR_VDDH_3V3"], [126, 1, 1, "c.nrf_regulators_pof_thr_vddh_t.NRF_REGULATORS_POF_THR_VDDH_3V4", "NRF_REGULATORS_POF_THR_VDDH_3V4"], [126, 1, 1, "c.nrf_regulators_pof_thr_vddh_t.NRF_REGULATORS_POF_THR_VDDH_3V5", "NRF_REGULATORS_POF_THR_VDDH_3V5"], [126, 1, 1, "c.nrf_regulators_pof_thr_vddh_t.NRF_REGULATORS_POF_THR_VDDH_3V6", "NRF_REGULATORS_POF_THR_VDDH_3V6"], [126, 1, 1, "c.nrf_regulators_pof_thr_vddh_t.NRF_REGULATORS_POF_THR_VDDH_3V7", "NRF_REGULATORS_POF_THR_VDDH_3V7"], [126, 1, 1, "c.nrf_regulators_pof_thr_vddh_t.NRF_REGULATORS_POF_THR_VDDH_3V8", "NRF_REGULATORS_POF_THR_VDDH_3V8"], [126, 1, 1, "c.nrf_regulators_pof_thr_vddh_t.NRF_REGULATORS_POF_THR_VDDH_3V9", "NRF_REGULATORS_POF_THR_VDDH_3V9"], [126, 1, 1, "c.nrf_regulators_pof_thr_vddh_t.NRF_REGULATORS_POF_THR_VDDH_4V0", "NRF_REGULATORS_POF_THR_VDDH_4V0"], [126, 1, 1, "c.nrf_regulators_pof_thr_vddh_t.NRF_REGULATORS_POF_THR_VDDH_4V1", "NRF_REGULATORS_POF_THR_VDDH_4V1"], [126, 1, 1, "c.nrf_regulators_pof_thr_vddh_t.NRF_REGULATORS_POF_THR_VDDH_4V2", "NRF_REGULATORS_POF_THR_VDDH_4V2"], [126, 1, 1, "c.nrf_regulators_vreg_t.NRF_REGULATORS_VREG_HIGH", "NRF_REGULATORS_VREG_HIGH"], [126, 1, 1, "c.nrf_regulators_vreg_t.NRF_REGULATORS_VREG_MAIN", "NRF_REGULATORS_VREG_MAIN"], [126, 1, 1, "c.nrf_regulators_vreg_t.NRF_REGULATORS_VREG_MEDIUM", "NRF_REGULATORS_VREG_MEDIUM"], [126, 1, 1, "c.nrf_regulators_vreg_t.NRF_REGULATORS_VREG_RADIO", "NRF_REGULATORS_VREG_RADIO"], [128, 0, 1, "c.NRF_RESETINFO_ERROR_STATUS_MAX", "NRF_RESETINFO_ERROR_STATUS_MAX"], [128, 0, 1, "c.NRF_RESETINFO_HAS_LOCAL_CROSSDOMAIN", "NRF_RESETINFO_HAS_LOCAL_CROSSDOMAIN"], [128, 0, 1, "c.NRF_RESETINFO_HAS_MASKLOCKUP", "NRF_RESETINFO_HAS_MASKLOCKUP"], [128, 0, 1, "c.NRF_RESETINFO_HAS_MULTIPLE_SECWDT", "NRF_RESETINFO_HAS_MULTIPLE_SECWDT"], [128, 0, 1, "c.NRF_RESETINFO_HAS_RESETREAS_STRUCT", "NRF_RESETINFO_HAS_RESETREAS_STRUCT"], [128, 1, 1, "c.nrf_resetinfo_resetreas_global_mask_t.NRF_RESETINFO_RESETREAS_GLOBAL_CTRLAP_MASK", "NRF_RESETINFO_RESETREAS_GLOBAL_CTRLAP_MASK"], [128, 1, 1, "c.nrf_resetinfo_resetreas_global_mask_t.NRF_RESETINFO_RESETREAS_GLOBAL_DIF_MASK", "NRF_RESETINFO_RESETREAS_GLOBAL_DIF_MASK"], [128, 1, 1, "c.nrf_resetinfo_resetreas_global_mask_t.NRF_RESETINFO_RESETREAS_GLOBAL_DOG_MASK", "NRF_RESETINFO_RESETREAS_GLOBAL_DOG_MASK"], [128, 1, 1, "c.nrf_resetinfo_resetreas_global_mask_t.NRF_RESETINFO_RESETREAS_GLOBAL_GPIO_MASK", "NRF_RESETINFO_RESETREAS_GLOBAL_GPIO_MASK"], [128, 1, 1, "c.nrf_resetinfo_resetreas_global_mask_t.NRF_RESETINFO_RESETREAS_GLOBAL_GRTC_MASK", "NRF_RESETINFO_RESETREAS_GLOBAL_GRTC_MASK"], [128, 1, 1, "c.nrf_resetinfo_resetreas_global_mask_t.NRF_RESETINFO_RESETREAS_GLOBAL_LPCOMP_MASK", "NRF_RESETINFO_RESETREAS_GLOBAL_LPCOMP_MASK"], [128, 1, 1, "c.nrf_resetinfo_resetreas_global_mask_t.NRF_RESETINFO_RESETREAS_GLOBAL_NFC_MASK", "NRF_RESETINFO_RESETREAS_GLOBAL_NFC_MASK"], [128, 1, 1, "c.nrf_resetinfo_resetreas_global_mask_t.NRF_RESETINFO_RESETREAS_GLOBAL_PIN_MASK", "NRF_RESETINFO_RESETREAS_GLOBAL_PIN_MASK"], [128, 1, 1, "c.nrf_resetinfo_resetreas_global_mask_t.NRF_RESETINFO_RESETREAS_GLOBAL_POR_MASK", "NRF_RESETINFO_RESETREAS_GLOBAL_POR_MASK"], [128, 1, 1, "c.nrf_resetinfo_resetreas_global_mask_t.NRF_RESETINFO_RESETREAS_GLOBAL_SECLOCKUP_MASK", "NRF_RESETINFO_RESETREAS_GLOBAL_SECLOCKUP_MASK"], [128, 1, 1, "c.nrf_resetinfo_resetreas_global_mask_t.NRF_RESETINFO_RESETREAS_GLOBAL_SECSREQ_MASK", "NRF_RESETINFO_RESETREAS_GLOBAL_SECSREQ_MASK"], [128, 1, 1, "c.nrf_resetinfo_resetreas_global_mask_t.NRF_RESETINFO_RESETREAS_GLOBAL_SECTAMPER_MASK", "NRF_RESETINFO_RESETREAS_GLOBAL_SECTAMPER_MASK"], [128, 1, 1, "c.nrf_resetinfo_resetreas_global_mask_t.NRF_RESETINFO_RESETREAS_GLOBAL_SECWDT0_MASK", "NRF_RESETINFO_RESETREAS_GLOBAL_SECWDT0_MASK"], [128, 1, 1, "c.nrf_resetinfo_resetreas_global_mask_t.NRF_RESETINFO_RESETREAS_GLOBAL_SECWDT1_MASK", "NRF_RESETINFO_RESETREAS_GLOBAL_SECWDT1_MASK"], [128, 1, 1, "c.nrf_resetinfo_resetreas_global_mask_t.NRF_RESETINFO_RESETREAS_GLOBAL_VUSB_MASK", "NRF_RESETINFO_RESETREAS_GLOBAL_VUSB_MASK"], [128, 1, 1, "c.nrf_resetinfo_resetreas_local_mask_t.NRF_RESETINFO_RESETREAS_LOCAL_CROSSDOMAIN_MASK", "NRF_RESETINFO_RESETREAS_LOCAL_CROSSDOMAIN_MASK"], [128, 1, 1, "c.nrf_resetinfo_resetreas_local_mask_t.NRF_RESETINFO_RESETREAS_LOCAL_DOGNS_MASK", "NRF_RESETINFO_RESETREAS_LOCAL_DOGNS_MASK"], [128, 1, 1, "c.nrf_resetinfo_resetreas_local_mask_t.NRF_RESETINFO_RESETREAS_LOCAL_DOG_MASK", "NRF_RESETINFO_RESETREAS_LOCAL_DOG_MASK"], [128, 1, 1, "c.nrf_resetinfo_resetreas_local_mask_t.NRF_RESETINFO_RESETREAS_LOCAL_LOCKUP_MASK", "NRF_RESETINFO_RESETREAS_LOCAL_LOCKUP_MASK"], [128, 1, 1, "c.nrf_resetinfo_resetreas_local_mask_t.NRF_RESETINFO_RESETREAS_LOCAL_SREQ_MASK", "NRF_RESETINFO_RESETREAS_LOCAL_SREQ_MASK"], [128, 1, 1, "c.nrf_resetinfo_resetreas_local_mask_t.NRF_RESETINFO_RESETREAS_LOCAL_UNRETAINED_MASK", "NRF_RESETINFO_RESETREAS_LOCAL_UNRETAINED_MASK"], [127, 0, 1, "c.NRF_RESET_HAS_APPLICATION", "NRF_RESET_HAS_APPLICATION"], [127, 0, 1, "c.NRF_RESET_HAS_CTRLAPHARD_RESET", "NRF_RESET_HAS_CTRLAPHARD_RESET"], [127, 0, 1, "c.NRF_RESET_HAS_CTRLAPPIN_RESET", "NRF_RESET_HAS_CTRLAPPIN_RESET"], [127, 0, 1, "c.NRF_RESET_HAS_CTRLAPSOFT_RESET", "NRF_RESET_HAS_CTRLAPSOFT_RESET"], [127, 0, 1, "c.NRF_RESET_HAS_CTRLAP_RESET", "NRF_RESET_HAS_CTRLAP_RESET"], [127, 0, 1, "c.NRF_RESET_HAS_GRTC_RESET", "NRF_RESET_HAS_GRTC_RESET"], [127, 0, 1, "c.NRF_RESET_HAS_LDOG_RESET", "NRF_RESET_HAS_LDOG_RESET"], [127, 0, 1, "c.NRF_RESET_HAS_LLOCKUP_RESET", "NRF_RESET_HAS_LLOCKUP_RESET"], [127, 0, 1, "c.NRF_RESET_HAS_LPCOMP_RESET", "NRF_RESET_HAS_LPCOMP_RESET"], [127, 0, 1, "c.NRF_RESET_HAS_MFORCEOFF_RESET", "NRF_RESET_HAS_MFORCEOFF_RESET"], [127, 0, 1, "c.NRF_RESET_HAS_NETWORK", "NRF_RESET_HAS_NETWORK"], [127, 0, 1, "c.NRF_RESET_HAS_SECTAMPER_RESET", "NRF_RESET_HAS_SECTAMPER_RESET"], [127, 0, 1, "c.NRF_RESET_HAS_VBUS_RESET", "NRF_RESET_HAS_VBUS_RESET"], [127, 1, 1, "c.nrf_reset_resetreas_mask_t.NRF_RESET_RESETREAS_CTRLAPHARD_MASK", "NRF_RESET_RESETREAS_CTRLAPHARD_MASK"], [127, 1, 1, "c.nrf_reset_resetreas_mask_t.NRF_RESET_RESETREAS_CTRLAPPIN_MASK", "NRF_RESET_RESETREAS_CTRLAPPIN_MASK"], [127, 1, 1, "c.nrf_reset_resetreas_mask_t.NRF_RESET_RESETREAS_CTRLAPSOFT_MASK", "NRF_RESET_RESETREAS_CTRLAPSOFT_MASK"], [127, 1, 1, "c.nrf_reset_resetreas_mask_t.NRF_RESET_RESETREAS_CTRLAP_MASK", "NRF_RESET_RESETREAS_CTRLAP_MASK"], [127, 1, 1, "c.nrf_reset_resetreas_mask_t.NRF_RESET_RESETREAS_DIF_MASK", "NRF_RESET_RESETREAS_DIF_MASK"], [127, 1, 1, "c.nrf_reset_resetreas_mask_t.NRF_RESET_RESETREAS_DOG0_MASK", "NRF_RESET_RESETREAS_DOG0_MASK"], [127, 1, 1, "c.nrf_reset_resetreas_mask_t.NRF_RESET_RESETREAS_DOG1_MASK", "NRF_RESET_RESETREAS_DOG1_MASK"], [127, 1, 1, "c.nrf_reset_resetreas_mask_t.NRF_RESET_RESETREAS_GRTC_MASK", "NRF_RESET_RESETREAS_GRTC_MASK"], [127, 1, 1, "c.nrf_reset_resetreas_mask_t.NRF_RESET_RESETREAS_LCTRLAP_MASK", "NRF_RESET_RESETREAS_LCTRLAP_MASK"], [127, 1, 1, "c.nrf_reset_resetreas_mask_t.NRF_RESET_RESETREAS_LDOG_MASK", "NRF_RESET_RESETREAS_LDOG_MASK"], [127, 1, 1, "c.nrf_reset_resetreas_mask_t.NRF_RESET_RESETREAS_LLOCKUP_MASK", "NRF_RESET_RESETREAS_LLOCKUP_MASK"], [127, 1, 1, "c.nrf_reset_resetreas_mask_t.NRF_RESET_RESETREAS_LOCKUP_MASK", "NRF_RESET_RESETREAS_LOCKUP_MASK"], [127, 1, 1, "c.nrf_reset_resetreas_mask_t.NRF_RESET_RESETREAS_LPCOMP_MASK", "NRF_RESET_RESETREAS_LPCOMP_MASK"], [127, 1, 1, "c.nrf_reset_resetreas_mask_t.NRF_RESET_RESETREAS_LSREQ_MASK", "NRF_RESET_RESETREAS_LSREQ_MASK"], [127, 1, 1, "c.nrf_reset_resetreas_mask_t.NRF_RESET_RESETREAS_MFORCEOFF_MASK", "NRF_RESET_RESETREAS_MFORCEOFF_MASK"], [127, 1, 1, "c.nrf_reset_resetreas_mask_t.NRF_RESET_RESETREAS_NFC_MASK", "NRF_RESET_RESETREAS_NFC_MASK"], [127, 1, 1, "c.nrf_reset_resetreas_mask_t.NRF_RESET_RESETREAS_OFF_MASK", "NRF_RESET_RESETREAS_OFF_MASK"], [127, 1, 1, "c.nrf_reset_resetreas_mask_t.NRF_RESET_RESETREAS_RESETPIN_MASK", "NRF_RESET_RESETREAS_RESETPIN_MASK"], [127, 1, 1, "c.nrf_reset_resetreas_mask_t.NRF_RESET_RESETREAS_SECTAMPER_MASK", "NRF_RESET_RESETREAS_SECTAMPER_MASK"], [127, 1, 1, "c.nrf_reset_resetreas_mask_t.NRF_RESET_RESETREAS_SREQ_MASK", "NRF_RESET_RESETREAS_SREQ_MASK"], [127, 1, 1, "c.nrf_reset_resetreas_mask_t.NRF_RESET_RESETREAS_VBUS_MASK", "NRF_RESET_RESETREAS_VBUS_MASK"], [131, 1, 1, "c.nrf_rng_event_t.NRF_RNG_EVENT_VALRDY", "NRF_RNG_EVENT_VALRDY"], [131, 1, 1, "c.nrf_rng_int_mask_t.NRF_RNG_INT_VALRDY_MASK", "NRF_RNG_INT_VALRDY_MASK"], [131, 1, 1, "c.nrf_rng_short_mask_t.NRF_RNG_SHORT_VALRDY_STOP_MASK", "NRF_RNG_SHORT_VALRDY_STOP_MASK"], [131, 1, 1, "c.nrf_rng_task_t.NRF_RNG_TASK_START", "NRF_RNG_TASK_START"], [131, 1, 1, "c.nrf_rng_task_t.NRF_RNG_TASK_STOP", "NRF_RNG_TASK_STOP"], [134, 1, 1, "c.nrf_rramc_int_mask_t.NRF_RRAMC_ALL_INTS_MASK", "NRF_RRAMC_ALL_INTS_MASK"], [134, 0, 1, "c.NRF_RRAMC_CONFIG_WRITE_BUFF_SIZE_MAX", "NRF_RRAMC_CONFIG_WRITE_BUFF_SIZE_MAX"], [134, 1, 1, "c.nrf_rramc_event_t.NRF_RRAMC_EVENT_ERROR_ACCESS", "NRF_RRAMC_EVENT_ERROR_ACCESS"], [134, 1, 1, "c.nrf_rramc_event_t.NRF_RRAMC_EVENT_READY", "NRF_RRAMC_EVENT_READY"], [134, 1, 1, "c.nrf_rramc_event_t.NRF_RRAMC_EVENT_READY_NEXT", "NRF_RRAMC_EVENT_READY_NEXT"], [134, 1, 1, "c.nrf_rramc_event_t.NRF_RRAMC_EVENT_WOKENUP", "NRF_RRAMC_EVENT_WOKENUP"], [134, 1, 1, "c.nrf_rramc_int_mask_t.NRF_RRAMC_INT_ERROR_ACCESS_MASK", "NRF_RRAMC_INT_ERROR_ACCESS_MASK"], [134, 1, 1, "c.nrf_rramc_int_mask_t.NRF_RRAMC_INT_READY_MASK", "NRF_RRAMC_INT_READY_MASK"], [134, 1, 1, "c.nrf_rramc_int_mask_t.NRF_RRAMC_INT_READY_NEXT_MASK", "NRF_RRAMC_INT_READY_NEXT_MASK"], [134, 1, 1, "c.nrf_rramc_int_mask_t.NRF_RRAMC_INT_WOKENUP_MASK", "NRF_RRAMC_INT_WOKENUP_MASK"], [134, 0, 1, "c.NRF_RRAMC_READYNEXTTIMEOUT_MAX", "NRF_RRAMC_READYNEXTTIMEOUT_MAX"], [134, 0, 1, "c.NRF_RRAMC_REGION_CONFIG_PERM_MASK", "NRF_RRAMC_REGION_CONFIG_PERM_MASK"], [134, 1, 1, "c.nrf_rramc_region_perm_mask_t.NRF_RRAMC_REGION_PERM_EXECUTE_MASK", "NRF_RRAMC_REGION_PERM_EXECUTE_MASK"], [134, 1, 1, "c.nrf_rramc_region_perm_mask_t.NRF_RRAMC_REGION_PERM_READ_MASK", "NRF_RRAMC_REGION_PERM_READ_MASK"], [134, 1, 1, "c.nrf_rramc_region_perm_mask_t.NRF_RRAMC_REGION_PERM_SECURE_MASK", "NRF_RRAMC_REGION_PERM_SECURE_MASK"], [134, 1, 1, "c.nrf_rramc_region_perm_mask_t.NRF_RRAMC_REGION_PERM_WRITE_MASK", "NRF_RRAMC_REGION_PERM_WRITE_MASK"], [134, 1, 1, "c.nrf_rramc_task_t.NRF_RRAMC_TASK_COMMIT_WRITEBUF", "NRF_RRAMC_TASK_COMMIT_WRITEBUF"], [134, 1, 1, "c.nrf_rramc_task_t.NRF_RRAMC_TASK_WAKEUP", "NRF_RRAMC_TASK_WAKEUP"], [138, 0, 1, "c.NRF_RTC_ALL_CHANNELS_INT_MASK", "NRF_RTC_ALL_CHANNELS_INT_MASK"], [138, 0, 1, "c.NRF_RTC_CC_CHANNEL_COUNT", "NRF_RTC_CC_CHANNEL_COUNT"], [138, 0, 1, "c.NRF_RTC_CC_COUNT_MAX", "NRF_RTC_CC_COUNT_MAX"], [138, 0, 1, "c.NRF_RTC_CHANNEL_EVENT_ADDR", "NRF_RTC_CHANNEL_EVENT_ADDR"], [138, 0, 1, "c.NRF_RTC_CHANNEL_INT_MASK", "NRF_RTC_CHANNEL_INT_MASK"], [138, 0, 1, "c.NRF_RTC_COUNTER_MAX", "NRF_RTC_COUNTER_MAX"], [138, 1, 1, "c.nrf_rtc_event_t.NRF_RTC_EVENT_COMPARE_0", "NRF_RTC_EVENT_COMPARE_0"], [138, 1, 1, "c.nrf_rtc_event_t.NRF_RTC_EVENT_COMPARE_1", "NRF_RTC_EVENT_COMPARE_1"], [138, 1, 1, "c.nrf_rtc_event_t.NRF_RTC_EVENT_COMPARE_2", "NRF_RTC_EVENT_COMPARE_2"], [138, 1, 1, "c.nrf_rtc_event_t.NRF_RTC_EVENT_COMPARE_3", "NRF_RTC_EVENT_COMPARE_3"], [138, 1, 1, "c.nrf_rtc_event_t.NRF_RTC_EVENT_OVERFLOW", "NRF_RTC_EVENT_OVERFLOW"], [138, 1, 1, "c.nrf_rtc_event_t.NRF_RTC_EVENT_TICK", "NRF_RTC_EVENT_TICK"], [138, 0, 1, "c.NRF_RTC_FREQ_TO_PRESCALER", "NRF_RTC_FREQ_TO_PRESCALER"], [138, 0, 1, "c.NRF_RTC_INPUT_FREQ", "NRF_RTC_INPUT_FREQ"], [138, 0, 1, "c.NRF_RTC_INST_GET", "NRF_RTC_INST_GET"], [138, 1, 1, "c.nrf_rtc_int_t.NRF_RTC_INT_COMPARE0_MASK", "NRF_RTC_INT_COMPARE0_MASK"], [138, 1, 1, "c.nrf_rtc_int_t.NRF_RTC_INT_COMPARE1_MASK", "NRF_RTC_INT_COMPARE1_MASK"], [138, 1, 1, "c.nrf_rtc_int_t.NRF_RTC_INT_COMPARE2_MASK", "NRF_RTC_INT_COMPARE2_MASK"], [138, 1, 1, "c.nrf_rtc_int_t.NRF_RTC_INT_COMPARE3_MASK", "NRF_RTC_INT_COMPARE3_MASK"], [138, 1, 1, "c.nrf_rtc_int_t.NRF_RTC_INT_OVERFLOW_MASK", "NRF_RTC_INT_OVERFLOW_MASK"], [138, 1, 1, "c.nrf_rtc_int_t.NRF_RTC_INT_TICK_MASK", "NRF_RTC_INT_TICK_MASK"], [138, 1, 1, "c.nrf_rtc_task_t.NRF_RTC_TASK_CAPTURE_0", "NRF_RTC_TASK_CAPTURE_0"], [138, 1, 1, "c.nrf_rtc_task_t.NRF_RTC_TASK_CAPTURE_1", "NRF_RTC_TASK_CAPTURE_1"], [138, 1, 1, "c.nrf_rtc_task_t.NRF_RTC_TASK_CAPTURE_2", "NRF_RTC_TASK_CAPTURE_2"], [138, 1, 1, "c.nrf_rtc_task_t.NRF_RTC_TASK_CAPTURE_3", "NRF_RTC_TASK_CAPTURE_3"], [138, 1, 1, "c.nrf_rtc_task_t.NRF_RTC_TASK_CLEAR", "NRF_RTC_TASK_CLEAR"], [138, 1, 1, "c.nrf_rtc_task_t.NRF_RTC_TASK_START", "NRF_RTC_TASK_START"], [138, 1, 1, "c.nrf_rtc_task_t.NRF_RTC_TASK_STOP", "NRF_RTC_TASK_STOP"], [138, 1, 1, "c.nrf_rtc_task_t.NRF_RTC_TASK_TRIGGER_OVERFLOW", "NRF_RTC_TASK_TRIGGER_OVERFLOW"], [138, 0, 1, "c.NRF_RTC_WRAP", "NRF_RTC_WRAP"], [142, 0, 1, "c.NRF_SAADC_8BIT_SAMPLE_WIDTH", "NRF_SAADC_8BIT_SAMPLE_WIDTH"], [142, 1, 1, "c.nrf_saadc_acqtime_t.NRF_SAADC_ACQTIME_10US", "NRF_SAADC_ACQTIME_10US"], [142, 1, 1, "c.nrf_saadc_acqtime_t.NRF_SAADC_ACQTIME_15US", "NRF_SAADC_ACQTIME_15US"], [142, 1, 1, "c.nrf_saadc_acqtime_t.NRF_SAADC_ACQTIME_20US", "NRF_SAADC_ACQTIME_20US"], [142, 1, 1, "c.nrf_saadc_acqtime_t.NRF_SAADC_ACQTIME_3US", "NRF_SAADC_ACQTIME_3US"], [142, 1, 1, "c.nrf_saadc_acqtime_t.NRF_SAADC_ACQTIME_40US", "NRF_SAADC_ACQTIME_40US"], [142, 1, 1, "c.nrf_saadc_acqtime_t.NRF_SAADC_ACQTIME_5US", "NRF_SAADC_ACQTIME_5US"], [142, 0, 1, "c.NRF_SAADC_ALL_CHANNELS_LIMITS_INT_MASK", "NRF_SAADC_ALL_CHANNELS_LIMITS_INT_MASK"], [142, 1, 1, "c.nrf_saadc_burst_t.NRF_SAADC_BURST_DISABLED", "NRF_SAADC_BURST_DISABLED"], [142, 1, 1, "c.nrf_saadc_burst_t.NRF_SAADC_BURST_ENABLED", "NRF_SAADC_BURST_ENABLED"], [142, 0, 1, "c.NRF_SAADC_CONVTIME_MAX", "NRF_SAADC_CONVTIME_MAX"], [142, 1, 1, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_CALIBRATEDONE", "NRF_SAADC_EVENT_CALIBRATEDONE"], [142, 1, 1, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_CH0_LIMITH", "NRF_SAADC_EVENT_CH0_LIMITH"], [142, 1, 1, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_CH0_LIMITL", "NRF_SAADC_EVENT_CH0_LIMITL"], [142, 1, 1, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_CH1_LIMITH", "NRF_SAADC_EVENT_CH1_LIMITH"], [142, 1, 1, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_CH1_LIMITL", "NRF_SAADC_EVENT_CH1_LIMITL"], [142, 1, 1, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_CH2_LIMITH", "NRF_SAADC_EVENT_CH2_LIMITH"], [142, 1, 1, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_CH2_LIMITL", "NRF_SAADC_EVENT_CH2_LIMITL"], [142, 1, 1, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_CH3_LIMITH", "NRF_SAADC_EVENT_CH3_LIMITH"], [142, 1, 1, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_CH3_LIMITL", "NRF_SAADC_EVENT_CH3_LIMITL"], [142, 1, 1, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_CH4_LIMITH", "NRF_SAADC_EVENT_CH4_LIMITH"], [142, 1, 1, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_CH4_LIMITL", "NRF_SAADC_EVENT_CH4_LIMITL"], [142, 1, 1, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_CH5_LIMITH", "NRF_SAADC_EVENT_CH5_LIMITH"], [142, 1, 1, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_CH5_LIMITL", "NRF_SAADC_EVENT_CH5_LIMITL"], [142, 1, 1, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_CH6_LIMITH", "NRF_SAADC_EVENT_CH6_LIMITH"], [142, 1, 1, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_CH6_LIMITL", "NRF_SAADC_EVENT_CH6_LIMITL"], [142, 1, 1, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_CH7_LIMITH", "NRF_SAADC_EVENT_CH7_LIMITH"], [142, 1, 1, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_CH7_LIMITL", "NRF_SAADC_EVENT_CH7_LIMITL"], [142, 1, 1, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_DONE", "NRF_SAADC_EVENT_DONE"], [142, 1, 1, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_END", "NRF_SAADC_EVENT_END"], [142, 1, 1, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_RESULTDONE", "NRF_SAADC_EVENT_RESULTDONE"], [142, 1, 1, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_STARTED", "NRF_SAADC_EVENT_STARTED"], [142, 1, 1, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_STOPPED", "NRF_SAADC_EVENT_STOPPED"], [142, 1, 1, "c.nrf_saadc_gain_t.NRF_SAADC_GAIN1", "NRF_SAADC_GAIN1"], [142, 1, 1, "c.nrf_saadc_gain_t.NRF_SAADC_GAIN1_2", "NRF_SAADC_GAIN1_2"], [142, 1, 1, "c.nrf_saadc_gain_t.NRF_SAADC_GAIN1_3", "NRF_SAADC_GAIN1_3"], [142, 1, 1, "c.nrf_saadc_gain_t.NRF_SAADC_GAIN1_4", "NRF_SAADC_GAIN1_4"], [142, 1, 1, "c.nrf_saadc_gain_t.NRF_SAADC_GAIN1_5", "NRF_SAADC_GAIN1_5"], [142, 1, 1, "c.nrf_saadc_gain_t.NRF_SAADC_GAIN1_6", "NRF_SAADC_GAIN1_6"], [142, 1, 1, "c.nrf_saadc_gain_t.NRF_SAADC_GAIN2", "NRF_SAADC_GAIN2"], [142, 1, 1, "c.nrf_saadc_gain_t.NRF_SAADC_GAIN2_3", "NRF_SAADC_GAIN2_3"], [142, 1, 1, "c.nrf_saadc_gain_t.NRF_SAADC_GAIN2_5", "NRF_SAADC_GAIN2_5"], [142, 1, 1, "c.nrf_saadc_gain_t.NRF_SAADC_GAIN2_7", "NRF_SAADC_GAIN2_7"], [142, 1, 1, "c.nrf_saadc_gain_t.NRF_SAADC_GAIN4", "NRF_SAADC_GAIN4"], [142, 0, 1, "c.NRF_SAADC_HAS_ACQTIME_ENUM", "NRF_SAADC_HAS_ACQTIME_ENUM"], [142, 0, 1, "c.NRF_SAADC_HAS_AIN_AS_PIN", "NRF_SAADC_HAS_AIN_AS_PIN"], [142, 0, 1, "c.NRF_SAADC_HAS_CH_CONFIG_RES", "NRF_SAADC_HAS_CH_CONFIG_RES"], [142, 0, 1, "c.NRF_SAADC_HAS_CONVTIME", "NRF_SAADC_HAS_CONVTIME"], [142, 0, 1, "c.NRF_SAADC_HAS_DMA_EVENTS", "NRF_SAADC_HAS_DMA_EVENTS"], [142, 0, 1, "c.NRF_SAADC_HAS_DMA_REG", "NRF_SAADC_HAS_DMA_REG"], [142, 0, 1, "c.NRF_SAADC_HAS_LIN_CAL", "NRF_SAADC_HAS_LIN_CAL"], [142, 0, 1, "c.NRF_SAADC_INPUT_DISABLED", "NRF_SAADC_INPUT_DISABLED"], [142, 1, 1, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_ALL", "NRF_SAADC_INT_ALL"], [142, 1, 1, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_CALIBRATEDONE", "NRF_SAADC_INT_CALIBRATEDONE"], [142, 1, 1, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_CH0LIMITH", "NRF_SAADC_INT_CH0LIMITH"], [142, 1, 1, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_CH0LIMITL", "NRF_SAADC_INT_CH0LIMITL"], [142, 1, 1, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_CH1LIMITH", "NRF_SAADC_INT_CH1LIMITH"], [142, 1, 1, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_CH1LIMITL", "NRF_SAADC_INT_CH1LIMITL"], [142, 1, 1, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_CH2LIMITH", "NRF_SAADC_INT_CH2LIMITH"], [142, 1, 1, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_CH2LIMITL", "NRF_SAADC_INT_CH2LIMITL"], [142, 1, 1, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_CH3LIMITH", "NRF_SAADC_INT_CH3LIMITH"], [142, 1, 1, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_CH3LIMITL", "NRF_SAADC_INT_CH3LIMITL"], [142, 1, 1, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_CH4LIMITH", "NRF_SAADC_INT_CH4LIMITH"], [142, 1, 1, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_CH4LIMITL", "NRF_SAADC_INT_CH4LIMITL"], [142, 1, 1, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_CH5LIMITH", "NRF_SAADC_INT_CH5LIMITH"], [142, 1, 1, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_CH5LIMITL", "NRF_SAADC_INT_CH5LIMITL"], [142, 1, 1, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_CH6LIMITH", "NRF_SAADC_INT_CH6LIMITH"], [142, 1, 1, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_CH6LIMITL", "NRF_SAADC_INT_CH6LIMITL"], [142, 1, 1, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_CH7LIMITH", "NRF_SAADC_INT_CH7LIMITH"], [142, 1, 1, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_CH7LIMITL", "NRF_SAADC_INT_CH7LIMITL"], [142, 1, 1, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_DONE", "NRF_SAADC_INT_DONE"], [142, 1, 1, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_END", "NRF_SAADC_INT_END"], [142, 1, 1, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_RESULTDONE", "NRF_SAADC_INT_RESULTDONE"], [142, 1, 1, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_STARTED", "NRF_SAADC_INT_STARTED"], [142, 1, 1, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_STOPPED", "NRF_SAADC_INT_STOPPED"], [142, 0, 1, "c.NRF_SAADC_LIMITS_INT_OFFSET", "NRF_SAADC_LIMITS_INT_OFFSET"], [142, 1, 1, "c.nrf_saadc_limit_t.NRF_SAADC_LIMIT_HIGH", "NRF_SAADC_LIMIT_HIGH"], [142, 1, 1, "c.nrf_saadc_limit_t.NRF_SAADC_LIMIT_LOW", "NRF_SAADC_LIMIT_LOW"], [142, 0, 1, "c.NRF_SAADC_LIN_CAL_MAX", "NRF_SAADC_LIN_CAL_MAX"], [142, 0, 1, "c.NRF_SAADC_LIN_CAL_MAX_COUNT", "NRF_SAADC_LIN_CAL_MAX_COUNT"], [142, 1, 1, "c.nrf_saadc_mode_t.NRF_SAADC_MODE_DIFFERENTIAL", "NRF_SAADC_MODE_DIFFERENTIAL"], [142, 1, 1, "c.nrf_saadc_mode_t.NRF_SAADC_MODE_SINGLE_ENDED", "NRF_SAADC_MODE_SINGLE_ENDED"], [142, 1, 1, "c.nrf_saadc_oversample_t.NRF_SAADC_OVERSAMPLE_128X", "NRF_SAADC_OVERSAMPLE_128X"], [142, 1, 1, "c.nrf_saadc_oversample_t.NRF_SAADC_OVERSAMPLE_16X", "NRF_SAADC_OVERSAMPLE_16X"], [142, 1, 1, "c.nrf_saadc_oversample_t.NRF_SAADC_OVERSAMPLE_256X", "NRF_SAADC_OVERSAMPLE_256X"], [142, 1, 1, "c.nrf_saadc_oversample_t.NRF_SAADC_OVERSAMPLE_2X", "NRF_SAADC_OVERSAMPLE_2X"], [142, 1, 1, "c.nrf_saadc_oversample_t.NRF_SAADC_OVERSAMPLE_32X", "NRF_SAADC_OVERSAMPLE_32X"], [142, 1, 1, "c.nrf_saadc_oversample_t.NRF_SAADC_OVERSAMPLE_4X", "NRF_SAADC_OVERSAMPLE_4X"], [142, 1, 1, "c.nrf_saadc_oversample_t.NRF_SAADC_OVERSAMPLE_64X", "NRF_SAADC_OVERSAMPLE_64X"], [142, 1, 1, "c.nrf_saadc_oversample_t.NRF_SAADC_OVERSAMPLE_8X", "NRF_SAADC_OVERSAMPLE_8X"], [142, 1, 1, "c.nrf_saadc_oversample_t.NRF_SAADC_OVERSAMPLE_DISABLED", "NRF_SAADC_OVERSAMPLE_DISABLED"], [142, 1, 1, "c.nrf_saadc_reference_t.NRF_SAADC_REFERENCE_INTERNAL", "NRF_SAADC_REFERENCE_INTERNAL"], [142, 1, 1, "c.nrf_saadc_reference_t.NRF_SAADC_REFERENCE_VDD4", "NRF_SAADC_REFERENCE_VDD4"], [142, 1, 1, "c.nrf_saadc_resistor_t.NRF_SAADC_RESISTOR_DISABLED", "NRF_SAADC_RESISTOR_DISABLED"], [142, 1, 1, "c.nrf_saadc_resistor_t.NRF_SAADC_RESISTOR_PULLDOWN", "NRF_SAADC_RESISTOR_PULLDOWN"], [142, 1, 1, "c.nrf_saadc_resistor_t.NRF_SAADC_RESISTOR_PULLUP", "NRF_SAADC_RESISTOR_PULLUP"], [142, 1, 1, "c.nrf_saadc_resistor_t.NRF_SAADC_RESISTOR_VDD1_2", "NRF_SAADC_RESISTOR_VDD1_2"], [142, 1, 1, "c.nrf_saadc_resolution_t.NRF_SAADC_RESOLUTION_10BIT", "NRF_SAADC_RESOLUTION_10BIT"], [142, 1, 1, "c.nrf_saadc_resolution_t.NRF_SAADC_RESOLUTION_12BIT", "NRF_SAADC_RESOLUTION_12BIT"], [142, 1, 1, "c.nrf_saadc_resolution_t.NRF_SAADC_RESOLUTION_14BIT", "NRF_SAADC_RESOLUTION_14BIT"], [142, 1, 1, "c.nrf_saadc_resolution_t.NRF_SAADC_RESOLUTION_8BIT", "NRF_SAADC_RESOLUTION_8BIT"], [142, 1, 1, "c.nrf_saadc_task_t.NRF_SAADC_TASK_CALIBRATEOFFSET", "NRF_SAADC_TASK_CALIBRATEOFFSET"], [142, 1, 1, "c.nrf_saadc_task_t.NRF_SAADC_TASK_SAMPLE", "NRF_SAADC_TASK_SAMPLE"], [142, 1, 1, "c.nrf_saadc_task_t.NRF_SAADC_TASK_START", "NRF_SAADC_TASK_START"], [142, 1, 1, "c.nrf_saadc_task_t.NRF_SAADC_TASK_STOP", "NRF_SAADC_TASK_STOP"], [149, 1, 1, "c.nrf_spim_int_mask_t.NRF_SPIM_ALL_INTS_MASK", "NRF_SPIM_ALL_INTS_MASK"], [149, 1, 1, "c.nrf_spim_short_mask_t.NRF_SPIM_ALL_SHORTS_MASK", "NRF_SPIM_ALL_SHORTS_MASK"], [149, 0, 1, "c.NRF_SPIM_BASE_FREQUENCY_128MHZ", "NRF_SPIM_BASE_FREQUENCY_128MHZ"], [149, 0, 1, "c.NRF_SPIM_BASE_FREQUENCY_16MHZ", "NRF_SPIM_BASE_FREQUENCY_16MHZ"], [149, 0, 1, "c.NRF_SPIM_BASE_FREQUENCY_192MHZ", "NRF_SPIM_BASE_FREQUENCY_192MHZ"], [149, 0, 1, "c.NRF_SPIM_BASE_FREQUENCY_320MHZ", "NRF_SPIM_BASE_FREQUENCY_320MHZ"], [149, 0, 1, "c.NRF_SPIM_BASE_FREQUENCY_32MHZ", "NRF_SPIM_BASE_FREQUENCY_32MHZ"], [149, 0, 1, "c.NRF_SPIM_BASE_FREQUENCY_64MHZ", "NRF_SPIM_BASE_FREQUENCY_64MHZ"], [149, 0, 1, "c.NRF_SPIM_BASE_FREQUENCY_GET", "NRF_SPIM_BASE_FREQUENCY_GET"], [149, 1, 1, "c.nrf_spim_bit_order_t.NRF_SPIM_BIT_ORDER_LSB_FIRST", "NRF_SPIM_BIT_ORDER_LSB_FIRST"], [149, 1, 1, "c.nrf_spim_bit_order_t.NRF_SPIM_BIT_ORDER_MSB_FIRST", "NRF_SPIM_BIT_ORDER_MSB_FIRST"], [149, 0, 1, "c.NRF_SPIM_CSNDUR_DEFAULT", "NRF_SPIM_CSNDUR_DEFAULT"], [149, 0, 1, "c.NRF_SPIM_CSNPOL_DEFAULT", "NRF_SPIM_CSNPOL_DEFAULT"], [149, 0, 1, "c.NRF_SPIM_CSN_DEFAULT", "NRF_SPIM_CSN_DEFAULT"], [149, 1, 1, "c.nrf_spim_csn_pol_t.NRF_SPIM_CSN_POL_HIGH", "NRF_SPIM_CSN_POL_HIGH"], [149, 1, 1, "c.nrf_spim_csn_pol_t.NRF_SPIM_CSN_POL_LOW", "NRF_SPIM_CSN_POL_LOW"], [149, 0, 1, "c.NRF_SPIM_DCX_CNT_ALL_CMD", "NRF_SPIM_DCX_CNT_ALL_CMD"], [149, 0, 1, "c.NRF_SPIM_DCX_DEFAULT", "NRF_SPIM_DCX_DEFAULT"], [149, 0, 1, "c.NRF_SPIM_DMA_RX_PATTERN_MAX_COUNT", "NRF_SPIM_DMA_RX_PATTERN_MAX_COUNT"], [149, 1, 1, "c.nrf_spim_event_t.NRF_SPIM_EVENT_END", "NRF_SPIM_EVENT_END"], [149, 1, 1, "c.nrf_spim_event_t.NRF_SPIM_EVENT_ENDRX", "NRF_SPIM_EVENT_ENDRX"], [149, 1, 1, "c.nrf_spim_event_t.NRF_SPIM_EVENT_ENDTX", "NRF_SPIM_EVENT_ENDTX"], [149, 1, 1, "c.nrf_spim_event_t.NRF_SPIM_EVENT_RXBUSERROR", "NRF_SPIM_EVENT_RXBUSERROR"], [149, 1, 1, "c.nrf_spim_event_t.NRF_SPIM_EVENT_RXMATCH0", "NRF_SPIM_EVENT_RXMATCH0"], [149, 1, 1, "c.nrf_spim_event_t.NRF_SPIM_EVENT_RXMATCH1", "NRF_SPIM_EVENT_RXMATCH1"], [149, 1, 1, "c.nrf_spim_event_t.NRF_SPIM_EVENT_RXMATCH2", "NRF_SPIM_EVENT_RXMATCH2"], [149, 1, 1, "c.nrf_spim_event_t.NRF_SPIM_EVENT_RXMATCH3", "NRF_SPIM_EVENT_RXMATCH3"], [149, 1, 1, "c.nrf_spim_event_t.NRF_SPIM_EVENT_RXSTARTED", "NRF_SPIM_EVENT_RXSTARTED"], [149, 1, 1, "c.nrf_spim_event_t.NRF_SPIM_EVENT_STARTED", "NRF_SPIM_EVENT_STARTED"], [149, 1, 1, "c.nrf_spim_event_t.NRF_SPIM_EVENT_STOPPED", "NRF_SPIM_EVENT_STOPPED"], [149, 1, 1, "c.nrf_spim_event_t.NRF_SPIM_EVENT_TXBUSERROR", "NRF_SPIM_EVENT_TXBUSERROR"], [149, 1, 1, "c.nrf_spim_event_t.NRF_SPIM_EVENT_TXSTARTED", "NRF_SPIM_EVENT_TXSTARTED"], [149, 0, 1, "c.NRF_SPIM_FREQUENCY_STATIC_CHECK", "NRF_SPIM_FREQUENCY_STATIC_CHECK"], [149, 1, 1, "c.nrf_spim_frequency_t.NRF_SPIM_FREQ_125K", "NRF_SPIM_FREQ_125K"], [149, 1, 1, "c.nrf_spim_frequency_t.NRF_SPIM_FREQ_16M", "NRF_SPIM_FREQ_16M"], [149, 1, 1, "c.nrf_spim_frequency_t.NRF_SPIM_FREQ_1M", "NRF_SPIM_FREQ_1M"], [149, 1, 1, "c.nrf_spim_frequency_t.NRF_SPIM_FREQ_250K", "NRF_SPIM_FREQ_250K"], [149, 1, 1, "c.nrf_spim_frequency_t.NRF_SPIM_FREQ_2M", "NRF_SPIM_FREQ_2M"], [149, 1, 1, "c.nrf_spim_frequency_t.NRF_SPIM_FREQ_32M", "NRF_SPIM_FREQ_32M"], [149, 1, 1, "c.nrf_spim_frequency_t.NRF_SPIM_FREQ_4M", "NRF_SPIM_FREQ_4M"], [149, 1, 1, "c.nrf_spim_frequency_t.NRF_SPIM_FREQ_500K", "NRF_SPIM_FREQ_500K"], [149, 1, 1, "c.nrf_spim_frequency_t.NRF_SPIM_FREQ_8M", "NRF_SPIM_FREQ_8M"], [149, 0, 1, "c.NRF_SPIM_HAS_16_MHZ_FREQ", "NRF_SPIM_HAS_16_MHZ_FREQ"], [149, 0, 1, "c.NRF_SPIM_HAS_32_MHZ_FREQ", "NRF_SPIM_HAS_32_MHZ_FREQ"], [149, 0, 1, "c.NRF_SPIM_HAS_ARRAY_LIST", "NRF_SPIM_HAS_ARRAY_LIST"], [149, 0, 1, "c.NRF_SPIM_HAS_DCX", "NRF_SPIM_HAS_DCX"], [149, 0, 1, "c.NRF_SPIM_HAS_DMA_REG", "NRF_SPIM_HAS_DMA_REG"], [149, 0, 1, "c.NRF_SPIM_HAS_DMA_TASKS_EVENTS", "NRF_SPIM_HAS_DMA_TASKS_EVENTS"], [149, 0, 1, "c.NRF_SPIM_HAS_EXTENDED", "NRF_SPIM_HAS_EXTENDED"], [149, 0, 1, "c.NRF_SPIM_HAS_FREQUENCY", "NRF_SPIM_HAS_FREQUENCY"], [149, 0, 1, "c.NRF_SPIM_HAS_HW_CSN", "NRF_SPIM_HAS_HW_CSN"], [149, 0, 1, "c.NRF_SPIM_HAS_PRESCALER", "NRF_SPIM_HAS_PRESCALER"], [149, 0, 1, "c.NRF_SPIM_HAS_RXDELAY", "NRF_SPIM_HAS_RXDELAY"], [149, 0, 1, "c.NRF_SPIM_HAS_STALLSTAT", "NRF_SPIM_HAS_STALLSTAT"], [149, 0, 1, "c.NRF_SPIM_INST_GET", "NRF_SPIM_INST_GET"], [149, 1, 1, "c.nrf_spim_int_mask_t.NRF_SPIM_INT_ENDRX_MASK", "NRF_SPIM_INT_ENDRX_MASK"], [149, 1, 1, "c.nrf_spim_int_mask_t.NRF_SPIM_INT_ENDTX_MASK", "NRF_SPIM_INT_ENDTX_MASK"], [149, 1, 1, "c.nrf_spim_int_mask_t.NRF_SPIM_INT_END_MASK", "NRF_SPIM_INT_END_MASK"], [149, 1, 1, "c.nrf_spim_int_mask_t.NRF_SPIM_INT_RXBUSERROR_MASK", "NRF_SPIM_INT_RXBUSERROR_MASK"], [149, 1, 1, "c.nrf_spim_int_mask_t.NRF_SPIM_INT_RXMATCH0_MASK", "NRF_SPIM_INT_RXMATCH0_MASK"], [149, 1, 1, "c.nrf_spim_int_mask_t.NRF_SPIM_INT_RXMATCH1_MASK", "NRF_SPIM_INT_RXMATCH1_MASK"], [149, 1, 1, "c.nrf_spim_int_mask_t.NRF_SPIM_INT_RXMATCH2_MASK", "NRF_SPIM_INT_RXMATCH2_MASK"], [149, 1, 1, "c.nrf_spim_int_mask_t.NRF_SPIM_INT_RXMATCH3_MASK", "NRF_SPIM_INT_RXMATCH3_MASK"], [149, 1, 1, "c.nrf_spim_int_mask_t.NRF_SPIM_INT_RXREADY_MASK", "NRF_SPIM_INT_RXREADY_MASK"], [149, 1, 1, "c.nrf_spim_int_mask_t.NRF_SPIM_INT_STARTED_MASK", "NRF_SPIM_INT_STARTED_MASK"], [149, 1, 1, "c.nrf_spim_int_mask_t.NRF_SPIM_INT_STOPPED_MASK", "NRF_SPIM_INT_STOPPED_MASK"], [149, 1, 1, "c.nrf_spim_int_mask_t.NRF_SPIM_INT_TXBUSERROR_MASK", "NRF_SPIM_INT_TXBUSERROR_MASK"], [149, 1, 1, "c.nrf_spim_int_mask_t.NRF_SPIM_INT_TXREADY_MASK", "NRF_SPIM_INT_TXREADY_MASK"], [149, 0, 1, "c.NRF_SPIM_IS_128MHZ_SPIM", "NRF_SPIM_IS_128MHZ_SPIM"], [149, 0, 1, "c.NRF_SPIM_IS_192MHZ_SPIM", "NRF_SPIM_IS_192MHZ_SPIM"], [149, 0, 1, "c.NRF_SPIM_IS_320MHZ_SPIM", "NRF_SPIM_IS_320MHZ_SPIM"], [149, 0, 1, "c.NRF_SPIM_IS_32MHZ_SPIM", "NRF_SPIM_IS_32MHZ_SPIM"], [149, 0, 1, "c.NRF_SPIM_IS_64MHZ_SPIM", "NRF_SPIM_IS_64MHZ_SPIM"], [149, 0, 1, "c.NRF_SPIM_MIN_FREQUENCY", "NRF_SPIM_MIN_FREQUENCY"], [149, 1, 1, "c.nrf_spim_mode_t.NRF_SPIM_MODE_0", "NRF_SPIM_MODE_0"], [149, 1, 1, "c.nrf_spim_mode_t.NRF_SPIM_MODE_1", "NRF_SPIM_MODE_1"], [149, 1, 1, "c.nrf_spim_mode_t.NRF_SPIM_MODE_2", "NRF_SPIM_MODE_2"], [149, 1, 1, "c.nrf_spim_mode_t.NRF_SPIM_MODE_3", "NRF_SPIM_MODE_3"], [149, 0, 1, "c.NRF_SPIM_PIN_NOT_CONNECTED", "NRF_SPIM_PIN_NOT_CONNECTED"], [149, 0, 1, "c.NRF_SPIM_PRESCALER_CALCULATE", "NRF_SPIM_PRESCALER_CALCULATE"], [149, 0, 1, "c.NRF_SPIM_PRESCALER_MAX_GET", "NRF_SPIM_PRESCALER_MAX_GET"], [149, 0, 1, "c.NRF_SPIM_PRESCALER_MIN_GET", "NRF_SPIM_PRESCALER_MIN_GET"], [149, 0, 1, "c.NRF_SPIM_RXDELAY_DEFAULT", "NRF_SPIM_RXDELAY_DEFAULT"], [149, 1, 1, "c.nrf_spim_short_mask_t.NRF_SPIM_SHORT_END_START_MASK", "NRF_SPIM_SHORT_END_START_MASK"], [149, 1, 1, "c.nrf_spim_short_mask_t.NRF_SPIM_SHORT_RXMATCH0_DISABLERXMATCH0_MASK", "NRF_SPIM_SHORT_RXMATCH0_DISABLERXMATCH0_MASK"], [149, 1, 1, "c.nrf_spim_short_mask_t.NRF_SPIM_SHORT_RXMATCH0_ENABLERXMATCH1_MASK", "NRF_SPIM_SHORT_RXMATCH0_ENABLERXMATCH1_MASK"], [149, 1, 1, "c.nrf_spim_short_mask_t.NRF_SPIM_SHORT_RXMATCH1_DISABLERXMATCH1_MASK", "NRF_SPIM_SHORT_RXMATCH1_DISABLERXMATCH1_MASK"], [149, 1, 1, "c.nrf_spim_short_mask_t.NRF_SPIM_SHORT_RXMATCH1_ENABLERXMATCH2_MASK", "NRF_SPIM_SHORT_RXMATCH1_ENABLERXMATCH2_MASK"], [149, 1, 1, "c.nrf_spim_short_mask_t.NRF_SPIM_SHORT_RXMATCH2_DISABLERXMATCH2_MASK", "NRF_SPIM_SHORT_RXMATCH2_DISABLERXMATCH2_MASK"], [149, 1, 1, "c.nrf_spim_short_mask_t.NRF_SPIM_SHORT_RXMATCH2_ENABLERXMATCH3_MASK", "NRF_SPIM_SHORT_RXMATCH2_ENABLERXMATCH3_MASK"], [149, 1, 1, "c.nrf_spim_short_mask_t.NRF_SPIM_SHORT_RXMATCH3_DISABLERXMATCH3_MASK", "NRF_SPIM_SHORT_RXMATCH3_DISABLERXMATCH3_MASK"], [149, 1, 1, "c.nrf_spim_short_mask_t.NRF_SPIM_SHORT_RXMATCH3_ENABLERXMATCH0_MASK", "NRF_SPIM_SHORT_RXMATCH3_ENABLERXMATCH0_MASK"], [149, 1, 1, "c.nrf_spim_task_t.NRF_SPIM_TASK_DISABLERXMATCH0", "NRF_SPIM_TASK_DISABLERXMATCH0"], [149, 1, 1, "c.nrf_spim_task_t.NRF_SPIM_TASK_DISABLERXMATCH1", "NRF_SPIM_TASK_DISABLERXMATCH1"], [149, 1, 1, "c.nrf_spim_task_t.NRF_SPIM_TASK_DISABLERXMATCH2", "NRF_SPIM_TASK_DISABLERXMATCH2"], [149, 1, 1, "c.nrf_spim_task_t.NRF_SPIM_TASK_DISABLERXMATCH3", "NRF_SPIM_TASK_DISABLERXMATCH3"], [149, 1, 1, "c.nrf_spim_task_t.NRF_SPIM_TASK_ENABLERXMATCH0", "NRF_SPIM_TASK_ENABLERXMATCH0"], [149, 1, 1, "c.nrf_spim_task_t.NRF_SPIM_TASK_ENABLERXMATCH1", "NRF_SPIM_TASK_ENABLERXMATCH1"], [149, 1, 1, "c.nrf_spim_task_t.NRF_SPIM_TASK_ENABLERXMATCH2", "NRF_SPIM_TASK_ENABLERXMATCH2"], [149, 1, 1, "c.nrf_spim_task_t.NRF_SPIM_TASK_ENABLERXMATCH3", "NRF_SPIM_TASK_ENABLERXMATCH3"], [149, 1, 1, "c.nrf_spim_task_t.NRF_SPIM_TASK_RESUME", "NRF_SPIM_TASK_RESUME"], [149, 1, 1, "c.nrf_spim_task_t.NRF_SPIM_TASK_START", "NRF_SPIM_TASK_START"], [149, 1, 1, "c.nrf_spim_task_t.NRF_SPIM_TASK_STOP", "NRF_SPIM_TASK_STOP"], [149, 1, 1, "c.nrf_spim_task_t.NRF_SPIM_TASK_SUSPEND", "NRF_SPIM_TASK_SUSPEND"], [153, 1, 1, "c.nrf_spis_int_mask_t.NRF_SPIS_ALL_INTS_MASK", "NRF_SPIS_ALL_INTS_MASK"], [153, 1, 1, "c.nrf_spis_short_mask_t.NRF_SPIS_ALL_SHORTS_MASK", "NRF_SPIS_ALL_SHORTS_MASK"], [153, 1, 1, "c.nrf_spis_bit_order_t.NRF_SPIS_BIT_ORDER_LSB_FIRST", "NRF_SPIS_BIT_ORDER_LSB_FIRST"], [153, 1, 1, "c.nrf_spis_bit_order_t.NRF_SPIS_BIT_ORDER_MSB_FIRST", "NRF_SPIS_BIT_ORDER_MSB_FIRST"], [153, 0, 1, "c.NRF_SPIS_DMA_RX_PATTERN_MAX_COUNT", "NRF_SPIS_DMA_RX_PATTERN_MAX_COUNT"], [153, 1, 1, "c.nrf_spis_event_t.NRF_SPIS_EVENT_ACQUIRED", "NRF_SPIS_EVENT_ACQUIRED"], [153, 1, 1, "c.nrf_spis_event_t.NRF_SPIS_EVENT_END", "NRF_SPIS_EVENT_END"], [153, 1, 1, "c.nrf_spis_event_t.NRF_SPIS_EVENT_ENDRX", "NRF_SPIS_EVENT_ENDRX"], [153, 1, 1, "c.nrf_spis_event_t.NRF_SPIS_EVENT_ENDTX", "NRF_SPIS_EVENT_ENDTX"], [153, 1, 1, "c.nrf_spis_event_t.NRF_SPIS_EVENT_RXBUSERROR", "NRF_SPIS_EVENT_RXBUSERROR"], [153, 1, 1, "c.nrf_spis_event_t.NRF_SPIS_EVENT_RXMATCH0", "NRF_SPIS_EVENT_RXMATCH0"], [153, 1, 1, "c.nrf_spis_event_t.NRF_SPIS_EVENT_RXMATCH1", "NRF_SPIS_EVENT_RXMATCH1"], [153, 1, 1, "c.nrf_spis_event_t.NRF_SPIS_EVENT_RXMATCH2", "NRF_SPIS_EVENT_RXMATCH2"], [153, 1, 1, "c.nrf_spis_event_t.NRF_SPIS_EVENT_RXMATCH3", "NRF_SPIS_EVENT_RXMATCH3"], [153, 1, 1, "c.nrf_spis_event_t.NRF_SPIS_EVENT_RXSTARTED", "NRF_SPIS_EVENT_RXSTARTED"], [153, 1, 1, "c.nrf_spis_event_t.NRF_SPIS_EVENT_TXBUSERROR", "NRF_SPIS_EVENT_TXBUSERROR"], [153, 1, 1, "c.nrf_spis_event_t.NRF_SPIS_EVENT_TXSTARTED", "NRF_SPIS_EVENT_TXSTARTED"], [153, 0, 1, "c.NRF_SPIS_HAS_DMA_REG", "NRF_SPIS_HAS_DMA_REG"], [153, 0, 1, "c.NRF_SPIS_HAS_DMA_TASKS_EVENTS", "NRF_SPIS_HAS_DMA_TASKS_EVENTS"], [153, 0, 1, "c.NRF_SPIS_INST_GET", "NRF_SPIS_INST_GET"], [153, 1, 1, "c.nrf_spis_int_mask_t.NRF_SPIS_INT_ACQUIRED_MASK", "NRF_SPIS_INT_ACQUIRED_MASK"], [153, 1, 1, "c.nrf_spis_int_mask_t.NRF_SPIS_INT_ENDRX_MASK", "NRF_SPIS_INT_ENDRX_MASK"], [153, 1, 1, "c.nrf_spis_int_mask_t.NRF_SPIS_INT_ENDTX_MASK", "NRF_SPIS_INT_ENDTX_MASK"], [153, 1, 1, "c.nrf_spis_int_mask_t.NRF_SPIS_INT_END_MASK", "NRF_SPIS_INT_END_MASK"], [153, 1, 1, "c.nrf_spis_int_mask_t.NRF_SPIS_INT_RXBUSERROR_MASK", "NRF_SPIS_INT_RXBUSERROR_MASK"], [153, 1, 1, "c.nrf_spis_int_mask_t.NRF_SPIS_INT_RXMATCH0_MASK", "NRF_SPIS_INT_RXMATCH0_MASK"], [153, 1, 1, "c.nrf_spis_int_mask_t.NRF_SPIS_INT_RXMATCH1_MASK", "NRF_SPIS_INT_RXMATCH1_MASK"], [153, 1, 1, "c.nrf_spis_int_mask_t.NRF_SPIS_INT_RXMATCH2_MASK", "NRF_SPIS_INT_RXMATCH2_MASK"], [153, 1, 1, "c.nrf_spis_int_mask_t.NRF_SPIS_INT_RXMATCH3_MASK", "NRF_SPIS_INT_RXMATCH3_MASK"], [153, 1, 1, "c.nrf_spis_int_mask_t.NRF_SPIS_INT_RXREADY_MASK", "NRF_SPIS_INT_RXREADY_MASK"], [153, 1, 1, "c.nrf_spis_int_mask_t.NRF_SPIS_INT_TXBUSERROR_MASK", "NRF_SPIS_INT_TXBUSERROR_MASK"], [153, 1, 1, "c.nrf_spis_int_mask_t.NRF_SPIS_INT_TXREADY_MASK", "NRF_SPIS_INT_TXREADY_MASK"], [153, 1, 1, "c.nrf_spis_mode_t.NRF_SPIS_MODE_0", "NRF_SPIS_MODE_0"], [153, 1, 1, "c.nrf_spis_mode_t.NRF_SPIS_MODE_1", "NRF_SPIS_MODE_1"], [153, 1, 1, "c.nrf_spis_mode_t.NRF_SPIS_MODE_2", "NRF_SPIS_MODE_2"], [153, 1, 1, "c.nrf_spis_mode_t.NRF_SPIS_MODE_3", "NRF_SPIS_MODE_3"], [153, 0, 1, "c.NRF_SPIS_PIN_NOT_CONNECTED", "NRF_SPIS_PIN_NOT_CONNECTED"], [153, 1, 1, "c.nrf_spis_semstat_t.NRF_SPIS_SEMSTAT_CPU", "NRF_SPIS_SEMSTAT_CPU"], [153, 1, 1, "c.nrf_spis_semstat_t.NRF_SPIS_SEMSTAT_CPUPENDING", "NRF_SPIS_SEMSTAT_CPUPENDING"], [153, 1, 1, "c.nrf_spis_semstat_t.NRF_SPIS_SEMSTAT_FREE", "NRF_SPIS_SEMSTAT_FREE"], [153, 1, 1, "c.nrf_spis_semstat_t.NRF_SPIS_SEMSTAT_SPIS", "NRF_SPIS_SEMSTAT_SPIS"], [153, 1, 1, "c.nrf_spis_short_mask_t.NRF_SPIS_SHORT_END_ACQUIRE", "NRF_SPIS_SHORT_END_ACQUIRE"], [153, 1, 1, "c.nrf_spis_short_mask_t.NRF_SPIS_SHORT_RXMATCH0_DISABLERXMATCH0_MASK", "NRF_SPIS_SHORT_RXMATCH0_DISABLERXMATCH0_MASK"], [153, 1, 1, "c.nrf_spis_short_mask_t.NRF_SPIS_SHORT_RXMATCH0_ENABLERXMATCH1_MASK", "NRF_SPIS_SHORT_RXMATCH0_ENABLERXMATCH1_MASK"], [153, 1, 1, "c.nrf_spis_short_mask_t.NRF_SPIS_SHORT_RXMATCH1_DISABLERXMATCH1_MASK", "NRF_SPIS_SHORT_RXMATCH1_DISABLERXMATCH1_MASK"], [153, 1, 1, "c.nrf_spis_short_mask_t.NRF_SPIS_SHORT_RXMATCH1_ENABLERXMATCH2_MASK", "NRF_SPIS_SHORT_RXMATCH1_ENABLERXMATCH2_MASK"], [153, 1, 1, "c.nrf_spis_short_mask_t.NRF_SPIS_SHORT_RXMATCH2_DISABLERXMATCH2_MASK", "NRF_SPIS_SHORT_RXMATCH2_DISABLERXMATCH2_MASK"], [153, 1, 1, "c.nrf_spis_short_mask_t.NRF_SPIS_SHORT_RXMATCH2_ENABLERXMATCH3_MASK", "NRF_SPIS_SHORT_RXMATCH2_ENABLERXMATCH3_MASK"], [153, 1, 1, "c.nrf_spis_short_mask_t.NRF_SPIS_SHORT_RXMATCH3_DISABLERXMATCH3_MASK", "NRF_SPIS_SHORT_RXMATCH3_DISABLERXMATCH3_MASK"], [153, 1, 1, "c.nrf_spis_short_mask_t.NRF_SPIS_SHORT_RXMATCH3_ENABLERXMATCH0_MASK", "NRF_SPIS_SHORT_RXMATCH3_ENABLERXMATCH0_MASK"], [153, 1, 1, "c.nrf_spis_status_mask_t.NRF_SPIS_STATUS_OVERFLOW", "NRF_SPIS_STATUS_OVERFLOW"], [153, 1, 1, "c.nrf_spis_status_mask_t.NRF_SPIS_STATUS_OVERREAD", "NRF_SPIS_STATUS_OVERREAD"], [153, 1, 1, "c.nrf_spis_task_t.NRF_SPIS_TASK_ACQUIRE", "NRF_SPIS_TASK_ACQUIRE"], [153, 1, 1, "c.nrf_spis_task_t.NRF_SPIS_TASK_DISABLERXMATCH0", "NRF_SPIS_TASK_DISABLERXMATCH0"], [153, 1, 1, "c.nrf_spis_task_t.NRF_SPIS_TASK_DISABLERXMATCH1", "NRF_SPIS_TASK_DISABLERXMATCH1"], [153, 1, 1, "c.nrf_spis_task_t.NRF_SPIS_TASK_DISABLERXMATCH2", "NRF_SPIS_TASK_DISABLERXMATCH2"], [153, 1, 1, "c.nrf_spis_task_t.NRF_SPIS_TASK_DISABLERXMATCH3", "NRF_SPIS_TASK_DISABLERXMATCH3"], [153, 1, 1, "c.nrf_spis_task_t.NRF_SPIS_TASK_ENABLERXMATCH0", "NRF_SPIS_TASK_ENABLERXMATCH0"], [153, 1, 1, "c.nrf_spis_task_t.NRF_SPIS_TASK_ENABLERXMATCH1", "NRF_SPIS_TASK_ENABLERXMATCH1"], [153, 1, 1, "c.nrf_spis_task_t.NRF_SPIS_TASK_ENABLERXMATCH2", "NRF_SPIS_TASK_ENABLERXMATCH2"], [153, 1, 1, "c.nrf_spis_task_t.NRF_SPIS_TASK_ENABLERXMATCH3", "NRF_SPIS_TASK_ENABLERXMATCH3"], [153, 1, 1, "c.nrf_spis_task_t.NRF_SPIS_TASK_RELEASE", "NRF_SPIS_TASK_RELEASE"], [146, 1, 1, "c.nrf_spi_int_mask_t.NRF_SPI_ALL_INTS_MASK", "NRF_SPI_ALL_INTS_MASK"], [146, 1, 1, "c.nrf_spi_bit_order_t.NRF_SPI_BIT_ORDER_LSB_FIRST", "NRF_SPI_BIT_ORDER_LSB_FIRST"], [146, 1, 1, "c.nrf_spi_bit_order_t.NRF_SPI_BIT_ORDER_MSB_FIRST", "NRF_SPI_BIT_ORDER_MSB_FIRST"], [146, 1, 1, "c.nrf_spi_event_t.NRF_SPI_EVENT_READY", "NRF_SPI_EVENT_READY"], [146, 1, 1, "c.nrf_spi_frequency_t.NRF_SPI_FREQ_125K", "NRF_SPI_FREQ_125K"], [146, 1, 1, "c.nrf_spi_frequency_t.NRF_SPI_FREQ_1M", "NRF_SPI_FREQ_1M"], [146, 1, 1, "c.nrf_spi_frequency_t.NRF_SPI_FREQ_250K", "NRF_SPI_FREQ_250K"], [146, 1, 1, "c.nrf_spi_frequency_t.NRF_SPI_FREQ_2M", "NRF_SPI_FREQ_2M"], [146, 1, 1, "c.nrf_spi_frequency_t.NRF_SPI_FREQ_4M", "NRF_SPI_FREQ_4M"], [146, 1, 1, "c.nrf_spi_frequency_t.NRF_SPI_FREQ_500K", "NRF_SPI_FREQ_500K"], [146, 1, 1, "c.nrf_spi_frequency_t.NRF_SPI_FREQ_8M", "NRF_SPI_FREQ_8M"], [146, 0, 1, "c.NRF_SPI_INST_GET", "NRF_SPI_INST_GET"], [146, 1, 1, "c.nrf_spi_int_mask_t.NRF_SPI_INT_READY_MASK", "NRF_SPI_INT_READY_MASK"], [146, 1, 1, "c.nrf_spi_mode_t.NRF_SPI_MODE_0", "NRF_SPI_MODE_0"], [146, 1, 1, "c.nrf_spi_mode_t.NRF_SPI_MODE_1", "NRF_SPI_MODE_1"], [146, 1, 1, "c.nrf_spi_mode_t.NRF_SPI_MODE_2", "NRF_SPI_MODE_2"], [146, 1, 1, "c.nrf_spi_mode_t.NRF_SPI_MODE_3", "NRF_SPI_MODE_3"], [146, 0, 1, "c.NRF_SPI_PIN_NOT_CONNECTED", "NRF_SPI_PIN_NOT_CONNECTED"], [155, 1, 1, "c.nrf_spu_dma_t.NRF_SPU_DMA_NODMA", "NRF_SPU_DMA_NODMA"], [155, 1, 1, "c.nrf_spu_dma_t.NRF_SPU_DMA_NOSEPARATEATTRIBUTE", "NRF_SPU_DMA_NOSEPARATEATTRIBUTE"], [155, 1, 1, "c.nrf_spu_dma_t.NRF_SPU_DMA_SEPARATEATTRIBUTE", "NRF_SPU_DMA_SEPARATEATTRIBUTE"], [155, 1, 1, "c.nrf_spu_event_t.NRF_SPU_EVENT_FLASHACCERR", "NRF_SPU_EVENT_FLASHACCERR"], [155, 1, 1, "c.nrf_spu_event_t.NRF_SPU_EVENT_PERIPHACCERR", "NRF_SPU_EVENT_PERIPHACCERR"], [155, 1, 1, "c.nrf_spu_event_t.NRF_SPU_EVENT_RAMACCERR", "NRF_SPU_EVENT_RAMACCERR"], [155, 1, 1, "c.nrf_spu_feature_t.NRF_SPU_FEATURE_BELLS_BELL", "NRF_SPU_FEATURE_BELLS_BELL"], [155, 0, 1, "c.NRF_SPU_FEATURE_BELL_BELL_COUNT", "NRF_SPU_FEATURE_BELL_BELL_COUNT"], [155, 0, 1, "c.NRF_SPU_FEATURE_BELL_DOMAIN_COUNT", "NRF_SPU_FEATURE_BELL_DOMAIN_COUNT"], [155, 1, 1, "c.nrf_spu_feature_t.NRF_SPU_FEATURE_DPPI_CHANNEL", "NRF_SPU_FEATURE_DPPI_CHANNEL"], [155, 0, 1, "c.NRF_SPU_FEATURE_DPPI_CHANNEL_COUNT", "NRF_SPU_FEATURE_DPPI_CHANNEL_COUNT"], [155, 1, 1, "c.nrf_spu_feature_t.NRF_SPU_FEATURE_DPPI_CHANNEL_GROUP", "NRF_SPU_FEATURE_DPPI_CHANNEL_GROUP"], [155, 0, 1, "c.NRF_SPU_FEATURE_DPPI_CHANNEL_GROUP_COUNT", "NRF_SPU_FEATURE_DPPI_CHANNEL_GROUP_COUNT"], [155, 1, 1, "c.nrf_spu_feature_t.NRF_SPU_FEATURE_GPIOTE_CHANNEL", "NRF_SPU_FEATURE_GPIOTE_CHANNEL"], [155, 0, 1, "c.NRF_SPU_FEATURE_GPIOTE_CHANNEL_COUNT", "NRF_SPU_FEATURE_GPIOTE_CHANNEL_COUNT"], [155, 0, 1, "c.NRF_SPU_FEATURE_GPIOTE_COUNT", "NRF_SPU_FEATURE_GPIOTE_COUNT"], [155, 1, 1, "c.nrf_spu_feature_t.NRF_SPU_FEATURE_GPIOTE_INTERRUPT", "NRF_SPU_FEATURE_GPIOTE_INTERRUPT"], [155, 0, 1, "c.NRF_SPU_FEATURE_GPIOTE_INTERRUPT_COUNT", "NRF_SPU_FEATURE_GPIOTE_INTERRUPT_COUNT"], [155, 0, 1, "c.NRF_SPU_FEATURE_GPIO_COUNT", "NRF_SPU_FEATURE_GPIO_COUNT"], [155, 1, 1, "c.nrf_spu_feature_t.NRF_SPU_FEATURE_GPIO_PIN", "NRF_SPU_FEATURE_GPIO_PIN"], [155, 0, 1, "c.NRF_SPU_FEATURE_GPIO_PIN_COUNT", "NRF_SPU_FEATURE_GPIO_PIN_COUNT"], [155, 1, 1, "c.nrf_spu_feature_t.NRF_SPU_FEATURE_GRTC_CC", "NRF_SPU_FEATURE_GRTC_CC"], [155, 0, 1, "c.NRF_SPU_FEATURE_GRTC_CC_COUNT", "NRF_SPU_FEATURE_GRTC_CC_COUNT"], [155, 1, 1, "c.nrf_spu_feature_t.NRF_SPU_FEATURE_GRTC_INTERRUPT", "NRF_SPU_FEATURE_GRTC_INTERRUPT"], [155, 0, 1, "c.NRF_SPU_FEATURE_GRTC_INTERRUPT_COUNT", "NRF_SPU_FEATURE_GRTC_INTERRUPT_COUNT"], [155, 1, 1, "c.nrf_spu_feature_t.NRF_SPU_FEATURE_GRTC_SYSCOUNTER", "NRF_SPU_FEATURE_GRTC_SYSCOUNTER"], [155, 1, 1, "c.nrf_spu_feature_t.NRF_SPU_FEATURE_IPCT_CHANNEL", "NRF_SPU_FEATURE_IPCT_CHANNEL"], [155, 0, 1, "c.NRF_SPU_FEATURE_IPCT_CHANNEL_COUNT", "NRF_SPU_FEATURE_IPCT_CHANNEL_COUNT"], [155, 1, 1, "c.nrf_spu_feature_t.NRF_SPU_FEATURE_IPCT_INTERRUPT", "NRF_SPU_FEATURE_IPCT_INTERRUPT"], [155, 0, 1, "c.NRF_SPU_FEATURE_IPCT_INTERRUPT_COUNT", "NRF_SPU_FEATURE_IPCT_INTERRUPT_COUNT"], [155, 1, 1, "c.nrf_spu_feature_t.NRF_SPU_FEATURE_MRAMC_AUTODPOWERDOWN", "NRF_SPU_FEATURE_MRAMC_AUTODPOWERDOWN"], [155, 0, 1, "c.NRF_SPU_FEATURE_MRAMC_COUNT", "NRF_SPU_FEATURE_MRAMC_COUNT"], [155, 1, 1, "c.nrf_spu_feature_t.NRF_SPU_FEATURE_MRAMC_READY", "NRF_SPU_FEATURE_MRAMC_READY"], [155, 1, 1, "c.nrf_spu_feature_t.NRF_SPU_FEATURE_MRAMC_WAITSTATES", "NRF_SPU_FEATURE_MRAMC_WAITSTATES"], [155, 1, 1, "c.nrf_spu_feature_t.NRF_SPU_FEATURE_TDD", "NRF_SPU_FEATURE_TDD"], [155, 0, 1, "c.NRF_SPU_FEATURE_TDD_COUNT", "NRF_SPU_FEATURE_TDD_COUNT"], [155, 0, 1, "c.NRF_SPU_HAS_BELLS", "NRF_SPU_HAS_BELLS"], [155, 0, 1, "c.NRF_SPU_HAS_BLOCK", "NRF_SPU_HAS_BLOCK"], [155, 0, 1, "c.NRF_SPU_HAS_DOMAIN", "NRF_SPU_HAS_DOMAIN"], [155, 0, 1, "c.NRF_SPU_HAS_IPCT", "NRF_SPU_HAS_IPCT"], [155, 0, 1, "c.NRF_SPU_HAS_MEMORY", "NRF_SPU_HAS_MEMORY"], [155, 0, 1, "c.NRF_SPU_HAS_MRAMC", "NRF_SPU_HAS_MRAMC"], [155, 0, 1, "c.NRF_SPU_HAS_OWNERSHIP", "NRF_SPU_HAS_OWNERSHIP"], [155, 0, 1, "c.NRF_SPU_HAS_PERIPHERAL_ACCESS", "NRF_SPU_HAS_PERIPHERAL_ACCESS"], [155, 0, 1, "c.NRF_SPU_HAS_PERIPHERAL_ACCESS_ERROR_INFO", "NRF_SPU_HAS_PERIPHERAL_ACCESS_ERROR_INFO"], [155, 0, 1, "c.NRF_SPU_HAS_TDD", "NRF_SPU_HAS_TDD"], [155, 1, 1, "c.nrf_spu_int_mask_t.NRF_SPU_INT_FLASHACCERR_MASK", "NRF_SPU_INT_FLASHACCERR_MASK"], [155, 1, 1, "c.nrf_spu_int_mask_t.NRF_SPU_INT_PERIPHACCERR_MASK", "NRF_SPU_INT_PERIPHACCERR_MASK"], [155, 1, 1, "c.nrf_spu_int_mask_t.NRF_SPU_INT_RAMACCERR_MASK", "NRF_SPU_INT_RAMACCERR_MASK"], [155, 1, 1, "c.nrf_spu_mem_perm_t.NRF_SPU_MEM_PERM_EXECUTE", "NRF_SPU_MEM_PERM_EXECUTE"], [155, 1, 1, "c.nrf_spu_mem_perm_t.NRF_SPU_MEM_PERM_READ", "NRF_SPU_MEM_PERM_READ"], [155, 1, 1, "c.nrf_spu_mem_perm_t.NRF_SPU_MEM_PERM_WRITE", "NRF_SPU_MEM_PERM_WRITE"], [155, 1, 1, "c.nrf_spu_nsc_size_t.NRF_SPU_NSC_SIZE_1024B", "NRF_SPU_NSC_SIZE_1024B"], [155, 1, 1, "c.nrf_spu_nsc_size_t.NRF_SPU_NSC_SIZE_128B", "NRF_SPU_NSC_SIZE_128B"], [155, 1, 1, "c.nrf_spu_nsc_size_t.NRF_SPU_NSC_SIZE_2048B", "NRF_SPU_NSC_SIZE_2048B"], [155, 1, 1, "c.nrf_spu_nsc_size_t.NRF_SPU_NSC_SIZE_256B", "NRF_SPU_NSC_SIZE_256B"], [155, 1, 1, "c.nrf_spu_nsc_size_t.NRF_SPU_NSC_SIZE_32B", "NRF_SPU_NSC_SIZE_32B"], [155, 1, 1, "c.nrf_spu_nsc_size_t.NRF_SPU_NSC_SIZE_4096B", "NRF_SPU_NSC_SIZE_4096B"], [155, 1, 1, "c.nrf_spu_nsc_size_t.NRF_SPU_NSC_SIZE_512B", "NRF_SPU_NSC_SIZE_512B"], [155, 1, 1, "c.nrf_spu_nsc_size_t.NRF_SPU_NSC_SIZE_64B", "NRF_SPU_NSC_SIZE_64B"], [155, 1, 1, "c.nrf_spu_nsc_size_t.NRF_SPU_NSC_SIZE_DISABLED", "NRF_SPU_NSC_SIZE_DISABLED"], [155, 0, 1, "c.NRF_SPU_PERIPH_COUNT", "NRF_SPU_PERIPH_COUNT"], [155, 1, 1, "c.nrf_spu_securemapping_t.NRF_SPU_SECUREMAPPING_NONSECURE", "NRF_SPU_SECUREMAPPING_NONSECURE"], [155, 1, 1, "c.nrf_spu_securemapping_t.NRF_SPU_SECUREMAPPING_SECURE", "NRF_SPU_SECUREMAPPING_SECURE"], [155, 1, 1, "c.nrf_spu_securemapping_t.NRF_SPU_SECUREMAPPING_SPLIT", "NRF_SPU_SECUREMAPPING_SPLIT"], [155, 1, 1, "c.nrf_spu_securemapping_t.NRF_SPU_SECUREMAPPING_USERSELECTABLE", "NRF_SPU_SECUREMAPPING_USERSELECTABLE"], [157, 1, 1, "c.nrf_stm_devtype_major_t.NRF_STM_DEVTYPE_MAJOR_TRACE_SOURCE", "NRF_STM_DEVTYPE_MAJOR_TRACE_SOURCE"], [157, 1, 1, "c.nrf_stm_devtype_sub_t.NRF_STM_DEVTYPE_SUB_STIMULUS_TRACE", "NRF_STM_DEVTYPE_SUB_STIMULUS_TRACE"], [157, 1, 1, "c.nrf_stm_dma_sens_t.NRF_STM_DMACTLR_LT100", "NRF_STM_DMACTLR_LT100"], [157, 1, 1, "c.nrf_stm_dma_sens_t.NRF_STM_DMACTLR_LT25", "NRF_STM_DMACTLR_LT25"], [157, 1, 1, "c.nrf_stm_dma_sens_t.NRF_STM_DMACTLR_LT50", "NRF_STM_DMACTLR_LT50"], [157, 1, 1, "c.nrf_stm_dma_sens_t.NRF_STM_DMACTLR_LT75", "NRF_STM_DMACTLR_LT75"], [157, 1, 1, "c.nrf_stm_feature_t.NRF_STM_FEATURE_AFREADYHIGH", "NRF_STM_FEATURE_AFREADYHIGH"], [157, 1, 1, "c.nrf_stm_feature_t.NRF_STM_FEATURE_ASYNCPE", "NRF_STM_FEATURE_ASYNCPE"], [157, 1, 1, "c.nrf_stm_feature_t.NRF_STM_FEATURE_BUSY", "NRF_STM_FEATURE_BUSY"], [157, 1, 1, "c.nrf_stm_feature_t.NRF_STM_FEATURE_CLKON", "NRF_STM_FEATURE_CLKON"], [157, 1, 1, "c.nrf_stm_feature_t.NRF_STM_FEATURE_COMPEN", "NRF_STM_FEATURE_COMPEN"], [157, 1, 1, "c.nrf_stm_feature_t.NRF_STM_FEATURE_FIFOAF", "NRF_STM_FEATURE_FIFOAF"], [157, 1, 1, "c.nrf_stm_feature_t.NRF_STM_FEATURE_FORCETS", "NRF_STM_FEATURE_FORCETS"], [157, 1, 1, "c.nrf_stm_feature_t.NRF_STM_FEATURE_HEERR", "NRF_STM_FEATURE_HEERR"], [157, 1, 1, "c.nrf_stm_feature_t.NRF_STM_FEATURE_HEMASTR", "NRF_STM_FEATURE_HEMASTR"], [157, 1, 1, "c.nrf_stm_feature_t.NRF_STM_FEATURE_HETER", "NRF_STM_FEATURE_HETER"], [157, 1, 1, "c.nrf_stm_feature_t.NRF_STM_FEATURE_HWTEN", "NRF_STM_FEATURE_HWTEN"], [157, 1, 1, "c.nrf_stm_feature_t.NRF_STM_FEATURE_INTEGRATION", "NRF_STM_FEATURE_INTEGRATION"], [157, 1, 1, "c.nrf_stm_feature_t.NRF_STM_FEATURE_LC_LOCKED", "NRF_STM_FEATURE_LC_LOCKED"], [157, 1, 1, "c.nrf_stm_feature_t.NRF_STM_FEATURE_LC_PRESENT", "NRF_STM_FEATURE_LC_PRESENT"], [157, 1, 1, "c.nrf_stm_feature_t.NRF_STM_FEATURE_NSID", "NRF_STM_FEATURE_NSID"], [157, 1, 1, "c.nrf_stm_feature_t.NRF_STM_FEATURE_NSNID", "NRF_STM_FEATURE_NSNID"], [157, 1, 1, "c.nrf_stm_feature_t.NRF_STM_FEATURE_PRIORINVDIS", "NRF_STM_FEATURE_PRIORINVDIS"], [157, 1, 1, "c.nrf_stm_feature_t.NRF_STM_FEATURE_PRIVMASK", "NRF_STM_FEATURE_PRIVMASK"], [157, 1, 1, "c.nrf_stm_feature_t.NRF_STM_FEATURE_SID", "NRF_STM_FEATURE_SID"], [157, 1, 1, "c.nrf_stm_feature_t.NRF_STM_FEATURE_SNID", "NRF_STM_FEATURE_SNID"], [157, 1, 1, "c.nrf_stm_feature_t.NRF_STM_FEATURE_SPER", "NRF_STM_FEATURE_SPER"], [157, 1, 1, "c.nrf_stm_feature_t.NRF_STM_FEATURE_SPOVERRIDE", "NRF_STM_FEATURE_SPOVERRIDE"], [157, 1, 1, "c.nrf_stm_feature_t.NRF_STM_FEATURE_SPTER", "NRF_STM_FEATURE_SPTER"], [157, 1, 1, "c.nrf_stm_feature_t.NRF_STM_FEATURE_STM", "NRF_STM_FEATURE_STM"], [157, 1, 1, "c.nrf_stm_feature_t.NRF_STM_FEATURE_SWOEN", "NRF_STM_FEATURE_SWOEN"], [157, 1, 1, "c.nrf_stm_feature_t.NRF_STM_FEATURE_SYNCEN", "NRF_STM_FEATURE_SYNCEN"], [157, 1, 1, "c.nrf_stm_feature_t.NRF_STM_FEATURE_TSEN", "NRF_STM_FEATURE_TSEN"], [157, 1, 1, "c.nrf_stm_feature_t.NRF_STM_FEATURE_TSFREQ", "NRF_STM_FEATURE_TSFREQ"], [157, 1, 1, "c.nrf_stm_feature_t.NRF_STM_FEATURE_TSPRESCALE", "NRF_STM_FEATURE_TSPRESCALE"], [157, 1, 1, "c.nrf_stm_heidr_class_t.NRF_STM_HEIDR_CLASS_HARDWARE_EVENT_CONTROL", "NRF_STM_HEIDR_CLASS_HARDWARE_EVENT_CONTROL"], [157, 1, 1, "c.nrf_stm_input_t.NRF_STM_INPUT_AFVALIDM", "NRF_STM_INPUT_AFVALIDM"], [157, 1, 1, "c.nrf_stm_input_t.NRF_STM_INPUT_ATREADYM", "NRF_STM_INPUT_ATREADYM"], [157, 1, 1, "c.nrf_stm_lsr_type_t.NRF_STM_LSR_TYPE_32", "NRF_STM_LSR_TYPE_32"], [157, 1, 1, "c.nrf_stm_lsr_type_t.NRF_STM_LSR_TYPE_8", "NRF_STM_LSR_TYPE_8"], [157, 1, 1, "c.nrf_stm_output_t.NRF_STM_OUTPUT_AFREADYM", "NRF_STM_OUTPUT_AFREADYM"], [157, 1, 1, "c.nrf_stm_output_t.NRF_STM_OUTPUT_ASYNCOUT", "NRF_STM_OUTPUT_ASYNCOUT"], [157, 1, 1, "c.nrf_stm_output_t.NRF_STM_OUTPUT_ATBYTESM_0", "NRF_STM_OUTPUT_ATBYTESM_0"], [157, 1, 1, "c.nrf_stm_output_t.NRF_STM_OUTPUT_ATBYTESM_1", "NRF_STM_OUTPUT_ATBYTESM_1"], [157, 1, 1, "c.nrf_stm_output_t.NRF_STM_OUTPUT_ATDATAM_0", "NRF_STM_OUTPUT_ATDATAM_0"], [157, 1, 1, "c.nrf_stm_output_t.NRF_STM_OUTPUT_ATDATAM_15", "NRF_STM_OUTPUT_ATDATAM_15"], [157, 1, 1, "c.nrf_stm_output_t.NRF_STM_OUTPUT_ATDATAM_23", "NRF_STM_OUTPUT_ATDATAM_23"], [157, 1, 1, "c.nrf_stm_output_t.NRF_STM_OUTPUT_ATDATAM_31", "NRF_STM_OUTPUT_ATDATAM_31"], [157, 1, 1, "c.nrf_stm_output_t.NRF_STM_OUTPUT_ATDATAM_7", "NRF_STM_OUTPUT_ATDATAM_7"], [157, 1, 1, "c.nrf_stm_output_t.NRF_STM_OUTPUT_ATIDM_0", "NRF_STM_OUTPUT_ATIDM_0"], [157, 1, 1, "c.nrf_stm_output_t.NRF_STM_OUTPUT_ATIDM_1", "NRF_STM_OUTPUT_ATIDM_1"], [157, 1, 1, "c.nrf_stm_output_t.NRF_STM_OUTPUT_ATIDM_2", "NRF_STM_OUTPUT_ATIDM_2"], [157, 1, 1, "c.nrf_stm_output_t.NRF_STM_OUTPUT_ATIDM_3", "NRF_STM_OUTPUT_ATIDM_3"], [157, 1, 1, "c.nrf_stm_output_t.NRF_STM_OUTPUT_ATIDM_4", "NRF_STM_OUTPUT_ATIDM_4"], [157, 1, 1, "c.nrf_stm_output_t.NRF_STM_OUTPUT_ATIDM_5", "NRF_STM_OUTPUT_ATIDM_5"], [157, 1, 1, "c.nrf_stm_output_t.NRF_STM_OUTPUT_ATIDM_6", "NRF_STM_OUTPUT_ATIDM_6"], [157, 1, 1, "c.nrf_stm_output_t.NRF_STM_OUTPUT_ATVALIDM", "NRF_STM_OUTPUT_ATVALIDM"], [157, 1, 1, "c.nrf_stm_output_t.NRF_STM_OUTPUT_TRIGOUTHETE", "NRF_STM_OUTPUT_TRIGOUTHETE"], [157, 1, 1, "c.nrf_stm_output_t.NRF_STM_OUTPUT_TRIGOUTSPTE", "NRF_STM_OUTPUT_TRIGOUTSPTE"], [157, 1, 1, "c.nrf_stm_output_t.NRF_STM_OUTPUT_TRIGOUTSW", "NRF_STM_OUTPUT_TRIGOUTSW"], [157, 1, 1, "c.nrf_stm_spfeat1r_prot_t.NRF_STM_SFPEAT1R_PROT_STPV2", "NRF_STM_SFPEAT1R_PROT_STPV2"], [157, 1, 1, "c.nrf_stm_spfeat1r_syncen_t.NRF_STM_SPFEAT1R_SYNCEN_READ_AS_ONE", "NRF_STM_SPFEAT1R_SYNCEN_READ_AS_ONE"], [157, 1, 1, "c.nrf_stm_spfeat1r_ts_t.NRF_STM_SPFEAT1R_TS_ABSOLUTE", "NRF_STM_SPFEAT1R_TS_ABSOLUTE"], [157, 1, 1, "c.nrf_stm_spfeat2r_dsize_t.NRF_STM_SPFEAT2R_DSIZE_32", "NRF_STM_SPFEAT2R_DSIZE_32"], [157, 1, 1, "c.nrf_stm_spfeat2r_spcomp_t.NRF_STM_SPFEAT2R_SPCOMP_PROGRAMMABLE", "NRF_STM_SPFEAT2R_SPCOMP_PROGRAMMABLE"], [157, 1, 1, "c.nrf_stm_spfeat2r_sptrtype_t.NRF_STM_SPFEAT2R_SPTRTYPE_INVARIANT_AND_GUARANTEED", "NRF_STM_SPFEAT2R_SPTRTYPE_INVARIANT_AND_GUARANTEED"], [160, 1, 1, "c.nrf_systick_csr_flags_t.NRF_SYSTICK_CSR_CLKSOURCE_CPU", "NRF_SYSTICK_CSR_CLKSOURCE_CPU"], [160, 1, 1, "c.nrf_systick_csr_flags_t.NRF_SYSTICK_CSR_CLKSOURCE_MASK", "NRF_SYSTICK_CSR_CLKSOURCE_MASK"], [160, 1, 1, "c.nrf_systick_csr_flags_t.NRF_SYSTICK_CSR_CLKSOURCE_REF", "NRF_SYSTICK_CSR_CLKSOURCE_REF"], [160, 1, 1, "c.nrf_systick_csr_flags_t.NRF_SYSTICK_CSR_COUNTFLAG_MASK", "NRF_SYSTICK_CSR_COUNTFLAG_MASK"], [160, 1, 1, "c.nrf_systick_csr_flags_t.NRF_SYSTICK_CSR_DISABLE", "NRF_SYSTICK_CSR_DISABLE"], [160, 1, 1, "c.nrf_systick_csr_flags_t.NRF_SYSTICK_CSR_ENABLE", "NRF_SYSTICK_CSR_ENABLE"], [160, 1, 1, "c.nrf_systick_csr_flags_t.NRF_SYSTICK_CSR_ENABLE_MASK", "NRF_SYSTICK_CSR_ENABLE_MASK"], [160, 1, 1, "c.nrf_systick_csr_flags_t.NRF_SYSTICK_CSR_TICKINT_DISABLE", "NRF_SYSTICK_CSR_TICKINT_DISABLE"], [160, 1, 1, "c.nrf_systick_csr_flags_t.NRF_SYSTICK_CSR_TICKINT_ENABLE", "NRF_SYSTICK_CSR_TICKINT_ENABLE"], [160, 1, 1, "c.nrf_systick_csr_flags_t.NRF_SYSTICK_CSR_TICKINT_MASK", "NRF_SYSTICK_CSR_TICKINT_MASK"], [160, 0, 1, "c.NRF_SYSTICK_VAL_MASK", "NRF_SYSTICK_VAL_MASK"], [162, 1, 1, "c.nrf_tampc_activeshield_mask_t.NRF_TAMPC_ACTIVESHIELD_CHANNEL_0_MASK", "NRF_TAMPC_ACTIVESHIELD_CHANNEL_0_MASK"], [162, 1, 1, "c.nrf_tampc_activeshield_mask_t.NRF_TAMPC_ACTIVESHIELD_CHANNEL_1_MASK", "NRF_TAMPC_ACTIVESHIELD_CHANNEL_1_MASK"], [162, 1, 1, "c.nrf_tampc_activeshield_mask_t.NRF_TAMPC_ACTIVESHIELD_CHANNEL_2_MASK", "NRF_TAMPC_ACTIVESHIELD_CHANNEL_2_MASK"], [162, 1, 1, "c.nrf_tampc_activeshield_mask_t.NRF_TAMPC_ACTIVESHIELD_CHANNEL_3_MASK", "NRF_TAMPC_ACTIVESHIELD_CHANNEL_3_MASK"], [162, 1, 1, "c.nrf_tampc_activeshield_mask_t.NRF_TAMPC_ALL_ACTIVESHIELD_CHANNELS_MASK", "NRF_TAMPC_ALL_ACTIVESHIELD_CHANNELS_MASK"], [162, 1, 1, "c.nrf_tapmc_int_mask_t.NRF_TAMPC_ALL_INTS_MASK", "NRF_TAMPC_ALL_INTS_MASK"], [162, 1, 1, "c.nrf_tampc_debug_type_t.NRF_TAMPC_DEBUG_TYPE_DBGEN", "NRF_TAMPC_DEBUG_TYPE_DBGEN"], [162, 1, 1, "c.nrf_tampc_debug_type_t.NRF_TAMPC_DEBUG_TYPE_DEVICEEN", "NRF_TAMPC_DEBUG_TYPE_DEVICEEN"], [162, 1, 1, "c.nrf_tampc_debug_type_t.NRF_TAMPC_DEBUG_TYPE_NIDEN", "NRF_TAMPC_DEBUG_TYPE_NIDEN"], [162, 1, 1, "c.nrf_tampc_debug_type_t.NRF_TAMPC_DEBUG_TYPE_SPIDEN", "NRF_TAMPC_DEBUG_TYPE_SPIDEN"], [162, 1, 1, "c.nrf_tampc_debug_type_t.NRF_TAMPC_DEBUG_TYPE_SPNIDEN", "NRF_TAMPC_DEBUG_TYPE_SPNIDEN"], [162, 1, 1, "c.nrf_tampc_detector_t.NRF_TAMPC_DETECTOR_ACTIVE_SHIELD", "NRF_TAMPC_DETECTOR_ACTIVE_SHIELD"], [162, 1, 1, "c.nrf_tampc_detector_t.NRF_TAMPC_DETECTOR_CRACEN", "NRF_TAMPC_DETECTOR_CRACEN"], [162, 1, 1, "c.nrf_tampc_detector_t.NRF_TAMPC_DETECTOR_GLITCH_DOMAIN_FAST", "NRF_TAMPC_DETECTOR_GLITCH_DOMAIN_FAST"], [162, 1, 1, "c.nrf_tampc_detector_t.NRF_TAMPC_DETECTOR_GLITCH_DOMAIN_SLOW", "NRF_TAMPC_DETECTOR_GLITCH_DOMAIN_SLOW"], [162, 1, 1, "c.nrf_tampc_detector_t.NRF_TAMPC_DETECTOR_PROTECTED_SIGNAL", "NRF_TAMPC_DETECTOR_PROTECTED_SIGNAL"], [162, 1, 1, "c.nrf_tampc_detector_t.NRF_TAMPC_DETECTOR_TAMPER_SWITCH", "NRF_TAMPC_DETECTOR_TAMPER_SWITCH"], [162, 1, 1, "c.nrf_tampc_event_t.NRF_TAMPC_EVENT_TAMPER", "NRF_TAMPC_EVENT_TAMPER"], [162, 1, 1, "c.nrf_tampc_event_t.NRF_TAMPC_EVENT_WRITE_ERROR", "NRF_TAMPC_EVENT_WRITE_ERROR"], [162, 0, 1, "c.NRF_TAMPC_HAS_ACTIVE_SHIELD_CHANNELS", "NRF_TAMPC_HAS_ACTIVE_SHIELD_CHANNELS"], [162, 0, 1, "c.NRF_TAMPC_HAS_AP_SPIDEN_PROTECTOR", "NRF_TAMPC_HAS_AP_SPIDEN_PROTECTOR"], [162, 0, 1, "c.NRF_TAMPC_HAS_CORESIGHT", "NRF_TAMPC_HAS_CORESIGHT"], [162, 0, 1, "c.NRF_TAMPC_HAS_DETECTORS_ENABLE", "NRF_TAMPC_HAS_DETECTORS_ENABLE"], [162, 0, 1, "c.NRF_TAMPC_HAS_ERASE_PROTECTOR", "NRF_TAMPC_HAS_ERASE_PROTECTOR"], [162, 0, 1, "c.NRF_TAMPC_HAS_EVENT_WRITE_ERROR", "NRF_TAMPC_HAS_EVENT_WRITE_ERROR"], [162, 0, 1, "c.NRF_TAMPC_HAS_EXTENDED_PROTECTORS", "NRF_TAMPC_HAS_EXTENDED_PROTECTORS"], [162, 0, 1, "c.NRF_TAMPC_HAS_EXTERNAL_TAMPERSWITCH_DETECTOR", "NRF_TAMPC_HAS_EXTERNAL_TAMPERSWITCH_DETECTOR"], [162, 0, 1, "c.NRF_TAMPC_HAS_EXTERNAL_TAMPERSWITCH_PROTECTOR", "NRF_TAMPC_HAS_EXTERNAL_TAMPERSWITCH_PROTECTOR"], [162, 0, 1, "c.NRF_TAMPC_HAS_WARMBOOT", "NRF_TAMPC_HAS_WARMBOOT"], [162, 1, 1, "c.nrf_tapmc_int_mask_t.NRF_TAMPC_INT_TAMPER_MASK", "NRF_TAMPC_INT_TAMPER_MASK"], [162, 1, 1, "c.nrf_tapmc_int_mask_t.NRF_TAMPC_INT_WRITE_ERROR_MASK", "NRF_TAMPC_INT_WRITE_ERROR_MASK"], [162, 0, 1, "c.NRF_TAMPC_KEY_MASK", "NRF_TAMPC_KEY_MASK"], [162, 1, 1, "c.nrf_tampc_protect_t.NRF_TAMPC_PROTECT_ACTIVE_SHIELD", "NRF_TAMPC_PROTECT_ACTIVE_SHIELD"], [162, 1, 1, "c.nrf_tampc_protect_t.NRF_TAMPC_PROTECT_CRACEN", "NRF_TAMPC_PROTECT_CRACEN"], [162, 1, 1, "c.nrf_tampc_protect_t.NRF_TAMPC_PROTECT_ERASE_PROTECT", "NRF_TAMPC_PROTECT_ERASE_PROTECT"], [162, 1, 1, "c.nrf_tampc_protect_t.NRF_TAMPC_PROTECT_GLITCH_DOMAIN_FAST", "NRF_TAMPC_PROTECT_GLITCH_DOMAIN_FAST"], [162, 1, 1, "c.nrf_tampc_protect_t.NRF_TAMPC_PROTECT_GLITCH_DOMAIN_SLOW", "NRF_TAMPC_PROTECT_GLITCH_DOMAIN_SLOW"], [162, 1, 1, "c.nrf_tampc_protect_t.NRF_TAMPC_PROTECT_RESETEN_EXT", "NRF_TAMPC_PROTECT_RESETEN_EXT"], [162, 1, 1, "c.nrf_tampc_protect_t.NRF_TAMPC_PROTECT_RESETEN_INT", "NRF_TAMPC_PROTECT_RESETEN_INT"], [162, 1, 1, "c.nrf_tampc_protect_t.NRF_TAMPC_PROTECT_TAMPER_SWITCH", "NRF_TAMPC_PROTECT_TAMPER_SWITCH"], [162, 1, 1, "c.nrf_tampc_warmboot_mode_t.NRF_TAMPC_WARMBOOT_MODE_SYSTEMOFF", "NRF_TAMPC_WARMBOOT_MODE_SYSTEMOFF"], [162, 1, 1, "c.nrf_tampc_warmboot_mode_t.NRF_TAMPC_WARMBOOT_MODE_UNRET_IDLE", "NRF_TAMPC_WARMBOOT_MODE_UNRET_IDLE"], [21, 0, 1, "c.NRF_TASKS_HFCLKSTART", "NRF_TASKS_HFCLKSTART"], [21, 0, 1, "c.NRF_TASKS_HFCLKSTOP", "NRF_TASKS_HFCLKSTOP"], [165, 1, 1, "c.nrf_tbm_event_t.NRF_TBM_EVENT_FLUSH", "NRF_TBM_EVENT_FLUSH"], [165, 1, 1, "c.nrf_tbm_event_t.NRF_TBM_EVENT_FULL", "NRF_TBM_EVENT_FULL"], [165, 1, 1, "c.nrf_tbm_event_t.NRF_TBM_EVENT_HALFFULL", "NRF_TBM_EVENT_HALFFULL"], [165, 1, 1, "c.nrf_tbm_int_mask_t.NRF_TBM_INT_FLUSH_MASK", "NRF_TBM_INT_FLUSH_MASK"], [165, 1, 1, "c.nrf_tbm_int_mask_t.NRF_TBM_INT_FULL_MASK", "NRF_TBM_INT_FULL_MASK"], [165, 1, 1, "c.nrf_tbm_int_mask_t.NRF_TBM_INT_HALFFULL_MASK", "NRF_TBM_INT_HALFFULL_MASK"], [165, 1, 1, "c.nrf_tbm_task_t.NRF_TBM_TASK_FLUSH", "NRF_TBM_TASK_FLUSH"], [165, 1, 1, "c.nrf_tbm_task_t.NRF_TBM_TASK_START", "NRF_TBM_TASK_START"], [165, 1, 1, "c.nrf_tbm_task_t.NRF_TBM_TASK_STOP", "NRF_TBM_TASK_STOP"], [168, 1, 1, "c.nrf_tdm_align_t.NRF_TDM_ALIGN_LEFT", "NRF_TDM_ALIGN_LEFT"], [168, 1, 1, "c.nrf_tdm_align_t.NRF_TDM_ALIGN_RIGHT", "NRF_TDM_ALIGN_RIGHT"], [168, 1, 1, "c.nrf_tdm_channels_count_t.NRF_TDM_CHANNELS_COUNT_1", "NRF_TDM_CHANNELS_COUNT_1"], [168, 1, 1, "c.nrf_tdm_channels_count_t.NRF_TDM_CHANNELS_COUNT_2", "NRF_TDM_CHANNELS_COUNT_2"], [168, 1, 1, "c.nrf_tdm_channels_count_t.NRF_TDM_CHANNELS_COUNT_3", "NRF_TDM_CHANNELS_COUNT_3"], [168, 1, 1, "c.nrf_tdm_channels_count_t.NRF_TDM_CHANNELS_COUNT_4", "NRF_TDM_CHANNELS_COUNT_4"], [168, 1, 1, "c.nrf_tdm_channels_count_t.NRF_TDM_CHANNELS_COUNT_5", "NRF_TDM_CHANNELS_COUNT_5"], [168, 1, 1, "c.nrf_tdm_channels_count_t.NRF_TDM_CHANNELS_COUNT_6", "NRF_TDM_CHANNELS_COUNT_6"], [168, 1, 1, "c.nrf_tdm_channels_count_t.NRF_TDM_CHANNELS_COUNT_7", "NRF_TDM_CHANNELS_COUNT_7"], [168, 1, 1, "c.nrf_tdm_channels_count_t.NRF_TDM_CHANNELS_COUNT_8", "NRF_TDM_CHANNELS_COUNT_8"], [168, 1, 1, "c.nrf_tdm_channel_delay_t.NRF_TDM_CHANNEL_DELAY_1CK", "NRF_TDM_CHANNEL_DELAY_1CK"], [168, 1, 1, "c.nrf_tdm_channel_delay_t.NRF_TDM_CHANNEL_DELAY_2CK", "NRF_TDM_CHANNEL_DELAY_2CK"], [168, 1, 1, "c.nrf_tdm_channel_delay_t.NRF_TDM_CHANNEL_DELAY_NONE", "NRF_TDM_CHANNEL_DELAY_NONE"], [168, 1, 1, "c.nrf_tdm_channel_mask_t.NRF_TDM_CHANNEL_RX0_MASK", "NRF_TDM_CHANNEL_RX0_MASK"], [168, 1, 1, "c.nrf_tdm_channel_mask_t.NRF_TDM_CHANNEL_RX1_MASK", "NRF_TDM_CHANNEL_RX1_MASK"], [168, 1, 1, "c.nrf_tdm_channel_mask_t.NRF_TDM_CHANNEL_RX2_MASK", "NRF_TDM_CHANNEL_RX2_MASK"], [168, 1, 1, "c.nrf_tdm_channel_mask_t.NRF_TDM_CHANNEL_RX3_MASK", "NRF_TDM_CHANNEL_RX3_MASK"], [168, 1, 1, "c.nrf_tdm_channel_mask_t.NRF_TDM_CHANNEL_RX4_MASK", "NRF_TDM_CHANNEL_RX4_MASK"], [168, 1, 1, "c.nrf_tdm_channel_mask_t.NRF_TDM_CHANNEL_RX5_MASK", "NRF_TDM_CHANNEL_RX5_MASK"], [168, 1, 1, "c.nrf_tdm_channel_mask_t.NRF_TDM_CHANNEL_RX6_MASK", "NRF_TDM_CHANNEL_RX6_MASK"], [168, 1, 1, "c.nrf_tdm_channel_mask_t.NRF_TDM_CHANNEL_RX7_MASK", "NRF_TDM_CHANNEL_RX7_MASK"], [168, 1, 1, "c.nrf_tdm_channel_mask_t.NRF_TDM_CHANNEL_TX0_MASK", "NRF_TDM_CHANNEL_TX0_MASK"], [168, 1, 1, "c.nrf_tdm_channel_mask_t.NRF_TDM_CHANNEL_TX1_MASK", "NRF_TDM_CHANNEL_TX1_MASK"], [168, 1, 1, "c.nrf_tdm_channel_mask_t.NRF_TDM_CHANNEL_TX2_MASK", "NRF_TDM_CHANNEL_TX2_MASK"], [168, 1, 1, "c.nrf_tdm_channel_mask_t.NRF_TDM_CHANNEL_TX3_MASK", "NRF_TDM_CHANNEL_TX3_MASK"], [168, 1, 1, "c.nrf_tdm_channel_mask_t.NRF_TDM_CHANNEL_TX4_MASK", "NRF_TDM_CHANNEL_TX4_MASK"], [168, 1, 1, "c.nrf_tdm_channel_mask_t.NRF_TDM_CHANNEL_TX5_MASK", "NRF_TDM_CHANNEL_TX5_MASK"], [168, 1, 1, "c.nrf_tdm_channel_mask_t.NRF_TDM_CHANNEL_TX6_MASK", "NRF_TDM_CHANNEL_TX6_MASK"], [168, 1, 1, "c.nrf_tdm_channel_mask_t.NRF_TDM_CHANNEL_TX7_MASK", "NRF_TDM_CHANNEL_TX7_MASK"], [168, 1, 1, "c.nrf_tdm_event_t.NRF_TDM_EVENT_ABORTED", "NRF_TDM_EVENT_ABORTED"], [168, 1, 1, "c.nrf_tdm_event_t.NRF_TDM_EVENT_MAXCNT", "NRF_TDM_EVENT_MAXCNT"], [168, 1, 1, "c.nrf_tdm_event_t.NRF_TDM_EVENT_RXPTRUPD", "NRF_TDM_EVENT_RXPTRUPD"], [168, 1, 1, "c.nrf_tdm_event_t.NRF_TDM_EVENT_STOPPED", "NRF_TDM_EVENT_STOPPED"], [168, 1, 1, "c.nrf_tdm_event_t.NRF_TDM_EVENT_TXPTRUPD", "NRF_TDM_EVENT_TXPTRUPD"], [168, 1, 1, "c.nrf_tdm_fsync_duration_t.NRF_TDM_FSYNC_DURATION_CHANNEL", "NRF_TDM_FSYNC_DURATION_CHANNEL"], [168, 1, 1, "c.nrf_tdm_fsync_duration_t.NRF_TDM_FSYNC_DURATION_SCK", "NRF_TDM_FSYNC_DURATION_SCK"], [168, 1, 1, "c.nrf_tdm_int_mask_t.NRF_TDM_INT_ABORTED_MASK", "NRF_TDM_INT_ABORTED_MASK"], [168, 1, 1, "c.nrf_tdm_int_mask_t.NRF_TDM_INT_MAXCNT_MASK", "NRF_TDM_INT_MAXCNT_MASK"], [168, 1, 1, "c.nrf_tdm_int_mask_t.NRF_TDM_INT_RXPTRUPD_MASK_MASK", "NRF_TDM_INT_RXPTRUPD_MASK_MASK"], [168, 1, 1, "c.nrf_tdm_int_mask_t.NRF_TDM_INT_STOPPED_MASK_MASK", "NRF_TDM_INT_STOPPED_MASK_MASK"], [168, 1, 1, "c.nrf_tdm_int_mask_t.NRF_TDM_INT_TXPTRUPD_MASK_MASK", "NRF_TDM_INT_TXPTRUPD_MASK_MASK"], [168, 1, 1, "c.nrf_tdm_mck_div_t.NRF_TDM_MCK_DIV_10", "NRF_TDM_MCK_DIV_10"], [168, 1, 1, "c.nrf_tdm_mck_div_t.NRF_TDM_MCK_DIV_11", "NRF_TDM_MCK_DIV_11"], [168, 1, 1, "c.nrf_tdm_mck_div_t.NRF_TDM_MCK_DIV_125", "NRF_TDM_MCK_DIV_125"], [168, 1, 1, "c.nrf_tdm_mck_div_t.NRF_TDM_MCK_DIV_15", "NRF_TDM_MCK_DIV_15"], [168, 1, 1, "c.nrf_tdm_mck_div_t.NRF_TDM_MCK_DIV_16", "NRF_TDM_MCK_DIV_16"], [168, 1, 1, "c.nrf_tdm_mck_div_t.NRF_TDM_MCK_DIV_2", "NRF_TDM_MCK_DIV_2"], [168, 1, 1, "c.nrf_tdm_mck_div_t.NRF_TDM_MCK_DIV_21", "NRF_TDM_MCK_DIV_21"], [168, 1, 1, "c.nrf_tdm_mck_div_t.NRF_TDM_MCK_DIV_23", "NRF_TDM_MCK_DIV_23"], [168, 1, 1, "c.nrf_tdm_mck_div_t.NRF_TDM_MCK_DIV_3", "NRF_TDM_MCK_DIV_3"], [168, 1, 1, "c.nrf_tdm_mck_div_t.NRF_TDM_MCK_DIV_30", "NRF_TDM_MCK_DIV_30"], [168, 1, 1, "c.nrf_tdm_mck_div_t.NRF_TDM_MCK_DIV_31", "NRF_TDM_MCK_DIV_31"], [168, 1, 1, "c.nrf_tdm_mck_div_t.NRF_TDM_MCK_DIV_32", "NRF_TDM_MCK_DIV_32"], [168, 1, 1, "c.nrf_tdm_mck_div_t.NRF_TDM_MCK_DIV_4", "NRF_TDM_MCK_DIV_4"], [168, 1, 1, "c.nrf_tdm_mck_div_t.NRF_TDM_MCK_DIV_42", "NRF_TDM_MCK_DIV_42"], [168, 1, 1, "c.nrf_tdm_mck_div_t.NRF_TDM_MCK_DIV_5", "NRF_TDM_MCK_DIV_5"], [168, 1, 1, "c.nrf_tdm_mck_div_t.NRF_TDM_MCK_DIV_6", "NRF_TDM_MCK_DIV_6"], [168, 1, 1, "c.nrf_tdm_mck_div_t.NRF_TDM_MCK_DIV_63", "NRF_TDM_MCK_DIV_63"], [168, 1, 1, "c.nrf_tdm_mck_div_t.NRF_TDM_MCK_DIV_8", "NRF_TDM_MCK_DIV_8"], [168, 1, 1, "c.nrf_tdm_mode_t.NRF_TDM_MODE_MASTER", "NRF_TDM_MODE_MASTER"], [168, 1, 1, "c.nrf_tdm_mode_t.NRF_TDM_MODE_SLAVE", "NRF_TDM_MODE_SLAVE"], [168, 0, 1, "c.NRF_TDM_PIN_NOT_CONNECTED", "NRF_TDM_PIN_NOT_CONNECTED"], [168, 1, 1, "c.nrf_tdm_polarity_t.NRF_TDM_POLARITY_NEGEDGE", "NRF_TDM_POLARITY_NEGEDGE"], [168, 1, 1, "c.nrf_tdm_polarity_t.NRF_TDM_POLARITY_POSEDGE", "NRF_TDM_POLARITY_POSEDGE"], [168, 1, 1, "c.nrf_tdm_rxtxen_t.NRF_TDM_RXTXEN_DUPLEX", "NRF_TDM_RXTXEN_DUPLEX"], [168, 1, 1, "c.nrf_tdm_rxtxen_t.NRF_TDM_RXTXEN_RX", "NRF_TDM_RXTXEN_RX"], [168, 1, 1, "c.nrf_tdm_rxtxen_t.NRF_TDM_RXTXEN_TX", "NRF_TDM_RXTXEN_TX"], [168, 1, 1, "c.nrf_tdm_sck_div_t.NRF_TDM_SCK_DIV_10", "NRF_TDM_SCK_DIV_10"], [168, 1, 1, "c.nrf_tdm_sck_div_t.NRF_TDM_SCK_DIV_11", "NRF_TDM_SCK_DIV_11"], [168, 1, 1, "c.nrf_tdm_sck_div_t.NRF_TDM_SCK_DIV_125", "NRF_TDM_SCK_DIV_125"], [168, 1, 1, "c.nrf_tdm_sck_div_t.NRF_TDM_SCK_DIV_15", "NRF_TDM_SCK_DIV_15"], [168, 1, 1, "c.nrf_tdm_sck_div_t.NRF_TDM_SCK_DIV_16", "NRF_TDM_SCK_DIV_16"], [168, 1, 1, "c.nrf_tdm_sck_div_t.NRF_TDM_SCK_DIV_2", "NRF_TDM_SCK_DIV_2"], [168, 1, 1, "c.nrf_tdm_sck_div_t.NRF_TDM_SCK_DIV_21", "NRF_TDM_SCK_DIV_21"], [168, 1, 1, "c.nrf_tdm_sck_div_t.NRF_TDM_SCK_DIV_23", "NRF_TDM_SCK_DIV_23"], [168, 1, 1, "c.nrf_tdm_sck_div_t.NRF_TDM_SCK_DIV_3", "NRF_TDM_SCK_DIV_3"], [168, 1, 1, "c.nrf_tdm_sck_div_t.NRF_TDM_SCK_DIV_30", "NRF_TDM_SCK_DIV_30"], [168, 1, 1, "c.nrf_tdm_sck_div_t.NRF_TDM_SCK_DIV_31", "NRF_TDM_SCK_DIV_31"], [168, 1, 1, "c.nrf_tdm_sck_div_t.NRF_TDM_SCK_DIV_32", "NRF_TDM_SCK_DIV_32"], [168, 1, 1, "c.nrf_tdm_sck_div_t.NRF_TDM_SCK_DIV_4", "NRF_TDM_SCK_DIV_4"], [168, 1, 1, "c.nrf_tdm_sck_div_t.NRF_TDM_SCK_DIV_42", "NRF_TDM_SCK_DIV_42"], [168, 1, 1, "c.nrf_tdm_sck_div_t.NRF_TDM_SCK_DIV_5", "NRF_TDM_SCK_DIV_5"], [168, 1, 1, "c.nrf_tdm_sck_div_t.NRF_TDM_SCK_DIV_6", "NRF_TDM_SCK_DIV_6"], [168, 1, 1, "c.nrf_tdm_sck_div_t.NRF_TDM_SCK_DIV_63", "NRF_TDM_SCK_DIV_63"], [168, 1, 1, "c.nrf_tdm_sck_div_t.NRF_TDM_SCK_DIV_8", "NRF_TDM_SCK_DIV_8"], [168, 1, 1, "c.nrf_tdm_src_t.NRF_TDM_SRC_ACLK", "NRF_TDM_SRC_ACLK"], [168, 1, 1, "c.nrf_tdm_src_t.NRF_TDM_SRC_PCLK32M", "NRF_TDM_SRC_PCLK32M"], [168, 1, 1, "c.nrf_tdm_swidth_t.NRF_TDM_SWIDTH_16BIT", "NRF_TDM_SWIDTH_16BIT"], [168, 1, 1, "c.nrf_tdm_swidth_t.NRF_TDM_SWIDTH_16BIT_IN32BIT", "NRF_TDM_SWIDTH_16BIT_IN32BIT"], [168, 1, 1, "c.nrf_tdm_swidth_t.NRF_TDM_SWIDTH_24BIT", "NRF_TDM_SWIDTH_24BIT"], [168, 1, 1, "c.nrf_tdm_swidth_t.NRF_TDM_SWIDTH_24BIT_IN32BIT", "NRF_TDM_SWIDTH_24BIT_IN32BIT"], [168, 1, 1, "c.nrf_tdm_swidth_t.NRF_TDM_SWIDTH_32BIT", "NRF_TDM_SWIDTH_32BIT"], [168, 1, 1, "c.nrf_tdm_swidth_t.NRF_TDM_SWIDTH_8BIT", "NRF_TDM_SWIDTH_8BIT"], [168, 1, 1, "c.nrf_tdm_swidth_t.NRF_TDM_SWIDTH_8BIT_IN16BIT", "NRF_TDM_SWIDTH_8BIT_IN16BIT"], [168, 1, 1, "c.nrf_tdm_swidth_t.NRF_TDM_SWIDTH_8BIT_IN32BIT", "NRF_TDM_SWIDTH_8BIT_IN32BIT"], [168, 1, 1, "c.nrf_tdm_task_t.NRF_TDM_TASK_ABORT", "NRF_TDM_TASK_ABORT"], [168, 1, 1, "c.nrf_tdm_task_t.NRF_TDM_TASK_START", "NRF_TDM_TASK_START"], [168, 1, 1, "c.nrf_tdm_task_t.NRF_TDM_TASK_STOP", "NRF_TDM_TASK_STOP"], [171, 1, 1, "c.nrf_temp_event_t.NRF_TEMP_EVENT_DATARDY", "NRF_TEMP_EVENT_DATARDY"], [171, 0, 1, "c.NRF_TEMP_HAS_CALIBRATION", "NRF_TEMP_HAS_CALIBRATION"], [171, 1, 1, "c.nrf_temp_int_mask_t.NRF_TEMP_INT_DATARDY_MASK", "NRF_TEMP_INT_DATARDY_MASK"], [171, 1, 1, "c.nrf_temp_task_t.NRF_TEMP_TASK_START", "NRF_TEMP_TASK_START"], [171, 1, 1, "c.nrf_temp_task_t.NRF_TEMP_TASK_STOP", "NRF_TEMP_TASK_STOP"], [175, 0, 1, "c.NRF_TIMER_ALL_CHANNELS_INT_MASK", "NRF_TIMER_ALL_CHANNELS_INT_MASK"], [175, 0, 1, "c.NRF_TIMER_BASE_FREQUENCY_128MHZ", "NRF_TIMER_BASE_FREQUENCY_128MHZ"], [175, 0, 1, "c.NRF_TIMER_BASE_FREQUENCY_16MHZ", "NRF_TIMER_BASE_FREQUENCY_16MHZ"], [175, 0, 1, "c.NRF_TIMER_BASE_FREQUENCY_320MHZ", "NRF_TIMER_BASE_FREQUENCY_320MHZ"], [175, 0, 1, "c.NRF_TIMER_BASE_FREQUENCY_32MHZ", "NRF_TIMER_BASE_FREQUENCY_32MHZ"], [175, 0, 1, "c.NRF_TIMER_BASE_FREQUENCY_64MHZ", "NRF_TIMER_BASE_FREQUENCY_64MHZ"], [175, 0, 1, "c.NRF_TIMER_BASE_FREQUENCY_GET", "NRF_TIMER_BASE_FREQUENCY_GET"], [175, 1, 1, "c.nrf_timer_bit_width_t.NRF_TIMER_BIT_WIDTH_16", "NRF_TIMER_BIT_WIDTH_16"], [175, 1, 1, "c.nrf_timer_bit_width_t.NRF_TIMER_BIT_WIDTH_24", "NRF_TIMER_BIT_WIDTH_24"], [175, 1, 1, "c.nrf_timer_bit_width_t.NRF_TIMER_BIT_WIDTH_32", "NRF_TIMER_BIT_WIDTH_32"], [175, 1, 1, "c.nrf_timer_bit_width_t.NRF_TIMER_BIT_WIDTH_8", "NRF_TIMER_BIT_WIDTH_8"], [175, 1, 1, "c.nrf_timer_cc_channel_t.NRF_TIMER_CC_CHANNEL0", "NRF_TIMER_CC_CHANNEL0"], [175, 1, 1, "c.nrf_timer_cc_channel_t.NRF_TIMER_CC_CHANNEL1", "NRF_TIMER_CC_CHANNEL1"], [175, 1, 1, "c.nrf_timer_cc_channel_t.NRF_TIMER_CC_CHANNEL2", "NRF_TIMER_CC_CHANNEL2"], [175, 1, 1, "c.nrf_timer_cc_channel_t.NRF_TIMER_CC_CHANNEL3", "NRF_TIMER_CC_CHANNEL3"], [175, 1, 1, "c.nrf_timer_cc_channel_t.NRF_TIMER_CC_CHANNEL4", "NRF_TIMER_CC_CHANNEL4"], [175, 1, 1, "c.nrf_timer_cc_channel_t.NRF_TIMER_CC_CHANNEL5", "NRF_TIMER_CC_CHANNEL5"], [175, 1, 1, "c.nrf_timer_cc_channel_t.NRF_TIMER_CC_CHANNEL6", "NRF_TIMER_CC_CHANNEL6"], [175, 1, 1, "c.nrf_timer_cc_channel_t.NRF_TIMER_CC_CHANNEL7", "NRF_TIMER_CC_CHANNEL7"], [175, 0, 1, "c.NRF_TIMER_CC_CHANNEL_COUNT", "NRF_TIMER_CC_CHANNEL_COUNT"], [175, 0, 1, "c.NRF_TIMER_CC_COUNT_MAX", "NRF_TIMER_CC_COUNT_MAX"], [175, 1, 1, "c.nrf_timer_event_t.NRF_TIMER_EVENT_COMPARE0", "NRF_TIMER_EVENT_COMPARE0"], [175, 1, 1, "c.nrf_timer_event_t.NRF_TIMER_EVENT_COMPARE1", "NRF_TIMER_EVENT_COMPARE1"], [175, 1, 1, "c.nrf_timer_event_t.NRF_TIMER_EVENT_COMPARE2", "NRF_TIMER_EVENT_COMPARE2"], [175, 1, 1, "c.nrf_timer_event_t.NRF_TIMER_EVENT_COMPARE3", "NRF_TIMER_EVENT_COMPARE3"], [175, 1, 1, "c.nrf_timer_event_t.NRF_TIMER_EVENT_COMPARE4", "NRF_TIMER_EVENT_COMPARE4"], [175, 1, 1, "c.nrf_timer_event_t.NRF_TIMER_EVENT_COMPARE5", "NRF_TIMER_EVENT_COMPARE5"], [175, 1, 1, "c.nrf_timer_event_t.NRF_TIMER_EVENT_COMPARE6", "NRF_TIMER_EVENT_COMPARE6"], [175, 1, 1, "c.nrf_timer_event_t.NRF_TIMER_EVENT_COMPARE7", "NRF_TIMER_EVENT_COMPARE7"], [175, 0, 1, "c.NRF_TIMER_FREQUENCY_STATIC_CHECK", "NRF_TIMER_FREQUENCY_STATIC_CHECK"], [175, 1, 1, "c.nrf_timer_frequency_t.NRF_TIMER_FREQ_125kHz", "NRF_TIMER_FREQ_125kHz"], [175, 1, 1, "c.nrf_timer_frequency_t.NRF_TIMER_FREQ_16MHz", "NRF_TIMER_FREQ_16MHz"], [175, 1, 1, "c.nrf_timer_frequency_t.NRF_TIMER_FREQ_1MHz", "NRF_TIMER_FREQ_1MHz"], [175, 1, 1, "c.nrf_timer_frequency_t.NRF_TIMER_FREQ_250kHz", "NRF_TIMER_FREQ_250kHz"], [175, 1, 1, "c.nrf_timer_frequency_t.NRF_TIMER_FREQ_2MHz", "NRF_TIMER_FREQ_2MHz"], [175, 1, 1, "c.nrf_timer_frequency_t.NRF_TIMER_FREQ_31250Hz", "NRF_TIMER_FREQ_31250Hz"], [175, 1, 1, "c.nrf_timer_frequency_t.NRF_TIMER_FREQ_4MHz", "NRF_TIMER_FREQ_4MHz"], [175, 1, 1, "c.nrf_timer_frequency_t.NRF_TIMER_FREQ_500kHz", "NRF_TIMER_FREQ_500kHz"], [175, 1, 1, "c.nrf_timer_frequency_t.NRF_TIMER_FREQ_62500Hz", "NRF_TIMER_FREQ_62500Hz"], [175, 1, 1, "c.nrf_timer_frequency_t.NRF_TIMER_FREQ_8MHz", "NRF_TIMER_FREQ_8MHz"], [175, 0, 1, "c.NRF_TIMER_HAS_CC4", "NRF_TIMER_HAS_CC4"], [175, 0, 1, "c.NRF_TIMER_HAS_CC5", "NRF_TIMER_HAS_CC5"], [175, 0, 1, "c.NRF_TIMER_HAS_CC6", "NRF_TIMER_HAS_CC6"], [175, 0, 1, "c.NRF_TIMER_HAS_CC7", "NRF_TIMER_HAS_CC7"], [175, 0, 1, "c.NRF_TIMER_HAS_LOW_POWER_MODE", "NRF_TIMER_HAS_LOW_POWER_MODE"], [175, 0, 1, "c.NRF_TIMER_HAS_ONE_SHOT", "NRF_TIMER_HAS_ONE_SHOT"], [175, 0, 1, "c.NRF_TIMER_INST_GET", "NRF_TIMER_INST_GET"], [175, 1, 1, "c.nrf_timer_int_mask_t.NRF_TIMER_INT_COMPARE0_MASK", "NRF_TIMER_INT_COMPARE0_MASK"], [175, 1, 1, "c.nrf_timer_int_mask_t.NRF_TIMER_INT_COMPARE1_MASK", "NRF_TIMER_INT_COMPARE1_MASK"], [175, 1, 1, "c.nrf_timer_int_mask_t.NRF_TIMER_INT_COMPARE2_MASK", "NRF_TIMER_INT_COMPARE2_MASK"], [175, 1, 1, "c.nrf_timer_int_mask_t.NRF_TIMER_INT_COMPARE3_MASK", "NRF_TIMER_INT_COMPARE3_MASK"], [175, 1, 1, "c.nrf_timer_int_mask_t.NRF_TIMER_INT_COMPARE4_MASK", "NRF_TIMER_INT_COMPARE4_MASK"], [175, 1, 1, "c.nrf_timer_int_mask_t.NRF_TIMER_INT_COMPARE5_MASK", "NRF_TIMER_INT_COMPARE5_MASK"], [175, 1, 1, "c.nrf_timer_int_mask_t.NRF_TIMER_INT_COMPARE6_MASK", "NRF_TIMER_INT_COMPARE6_MASK"], [175, 1, 1, "c.nrf_timer_int_mask_t.NRF_TIMER_INT_COMPARE7_MASK", "NRF_TIMER_INT_COMPARE7_MASK"], [175, 0, 1, "c.NRF_TIMER_IS_128MHZ_TIMER", "NRF_TIMER_IS_128MHZ_TIMER"], [175, 0, 1, "c.NRF_TIMER_IS_320MHZ_TIMER", "NRF_TIMER_IS_320MHZ_TIMER"], [175, 0, 1, "c.NRF_TIMER_IS_32MHZ_TIMER", "NRF_TIMER_IS_32MHZ_TIMER"], [175, 0, 1, "c.NRF_TIMER_IS_64MHZ_TIMER", "NRF_TIMER_IS_64MHZ_TIMER"], [175, 0, 1, "c.NRF_TIMER_IS_BIT_WIDTH_VALID", "NRF_TIMER_IS_BIT_WIDTH_VALID"], [175, 1, 1, "c.nrf_timer_mode_t.NRF_TIMER_MODE_COUNTER", "NRF_TIMER_MODE_COUNTER"], [175, 1, 1, "c.nrf_timer_mode_t.NRF_TIMER_MODE_LOW_POWER_COUNTER", "NRF_TIMER_MODE_LOW_POWER_COUNTER"], [175, 1, 1, "c.nrf_timer_mode_t.NRF_TIMER_MODE_TIMER", "NRF_TIMER_MODE_TIMER"], [175, 0, 1, "c.NRF_TIMER_PRESCALER_CALCULATE", "NRF_TIMER_PRESCALER_CALCULATE"], [175, 0, 1, "c.NRF_TIMER_PRESCALER_MAX", "NRF_TIMER_PRESCALER_MAX"], [175, 1, 1, "c.nrf_timer_short_mask_t.NRF_TIMER_SHORT_COMPARE0_CLEAR_MASK", "NRF_TIMER_SHORT_COMPARE0_CLEAR_MASK"], [175, 1, 1, "c.nrf_timer_short_mask_t.NRF_TIMER_SHORT_COMPARE0_STOP_MASK", "NRF_TIMER_SHORT_COMPARE0_STOP_MASK"], [175, 1, 1, "c.nrf_timer_short_mask_t.NRF_TIMER_SHORT_COMPARE1_CLEAR_MASK", "NRF_TIMER_SHORT_COMPARE1_CLEAR_MASK"], [175, 1, 1, "c.nrf_timer_short_mask_t.NRF_TIMER_SHORT_COMPARE1_STOP_MASK", "NRF_TIMER_SHORT_COMPARE1_STOP_MASK"], [175, 1, 1, "c.nrf_timer_short_mask_t.NRF_TIMER_SHORT_COMPARE2_CLEAR_MASK", "NRF_TIMER_SHORT_COMPARE2_CLEAR_MASK"], [175, 1, 1, "c.nrf_timer_short_mask_t.NRF_TIMER_SHORT_COMPARE2_STOP_MASK", "NRF_TIMER_SHORT_COMPARE2_STOP_MASK"], [175, 1, 1, "c.nrf_timer_short_mask_t.NRF_TIMER_SHORT_COMPARE3_CLEAR_MASK", "NRF_TIMER_SHORT_COMPARE3_CLEAR_MASK"], [175, 1, 1, "c.nrf_timer_short_mask_t.NRF_TIMER_SHORT_COMPARE3_STOP_MASK", "NRF_TIMER_SHORT_COMPARE3_STOP_MASK"], [175, 1, 1, "c.nrf_timer_short_mask_t.NRF_TIMER_SHORT_COMPARE4_CLEAR_MASK", "NRF_TIMER_SHORT_COMPARE4_CLEAR_MASK"], [175, 1, 1, "c.nrf_timer_short_mask_t.NRF_TIMER_SHORT_COMPARE4_STOP_MASK", "NRF_TIMER_SHORT_COMPARE4_STOP_MASK"], [175, 1, 1, "c.nrf_timer_short_mask_t.NRF_TIMER_SHORT_COMPARE5_CLEAR_MASK", "NRF_TIMER_SHORT_COMPARE5_CLEAR_MASK"], [175, 1, 1, "c.nrf_timer_short_mask_t.NRF_TIMER_SHORT_COMPARE5_STOP_MASK", "NRF_TIMER_SHORT_COMPARE5_STOP_MASK"], [175, 1, 1, "c.nrf_timer_short_mask_t.NRF_TIMER_SHORT_COMPARE6_CLEAR_MASK", "NRF_TIMER_SHORT_COMPARE6_CLEAR_MASK"], [175, 1, 1, "c.nrf_timer_short_mask_t.NRF_TIMER_SHORT_COMPARE6_STOP_MASK", "NRF_TIMER_SHORT_COMPARE6_STOP_MASK"], [175, 1, 1, "c.nrf_timer_short_mask_t.NRF_TIMER_SHORT_COMPARE7_CLEAR_MASK", "NRF_TIMER_SHORT_COMPARE7_CLEAR_MASK"], [175, 1, 1, "c.nrf_timer_short_mask_t.NRF_TIMER_SHORT_COMPARE7_STOP_MASK", "NRF_TIMER_SHORT_COMPARE7_STOP_MASK"], [175, 1, 1, "c.nrf_timer_task_t.NRF_TIMER_TASK_CAPTURE0", "NRF_TIMER_TASK_CAPTURE0"], [175, 1, 1, "c.nrf_timer_task_t.NRF_TIMER_TASK_CAPTURE1", "NRF_TIMER_TASK_CAPTURE1"], [175, 1, 1, "c.nrf_timer_task_t.NRF_TIMER_TASK_CAPTURE2", "NRF_TIMER_TASK_CAPTURE2"], [175, 1, 1, "c.nrf_timer_task_t.NRF_TIMER_TASK_CAPTURE3", "NRF_TIMER_TASK_CAPTURE3"], [175, 1, 1, "c.nrf_timer_task_t.NRF_TIMER_TASK_CAPTURE4", "NRF_TIMER_TASK_CAPTURE4"], [175, 1, 1, "c.nrf_timer_task_t.NRF_TIMER_TASK_CAPTURE5", "NRF_TIMER_TASK_CAPTURE5"], [175, 1, 1, "c.nrf_timer_task_t.NRF_TIMER_TASK_CAPTURE6", "NRF_TIMER_TASK_CAPTURE6"], [175, 1, 1, "c.nrf_timer_task_t.NRF_TIMER_TASK_CAPTURE7", "NRF_TIMER_TASK_CAPTURE7"], [175, 1, 1, "c.nrf_timer_task_t.NRF_TIMER_TASK_CLEAR", "NRF_TIMER_TASK_CLEAR"], [175, 1, 1, "c.nrf_timer_task_t.NRF_TIMER_TASK_COUNT", "NRF_TIMER_TASK_COUNT"], [175, 1, 1, "c.nrf_timer_task_t.NRF_TIMER_TASK_SHUTDOWN", "NRF_TIMER_TASK_SHUTDOWN"], [175, 1, 1, "c.nrf_timer_task_t.NRF_TIMER_TASK_START", "NRF_TIMER_TASK_START"], [175, 1, 1, "c.nrf_timer_task_t.NRF_TIMER_TASK_STOP", "NRF_TIMER_TASK_STOP"], [182, 1, 1, "c.nrf_twim_int_mask_t.NRF_TWIM_ALL_INTS_MASK", "NRF_TWIM_ALL_INTS_MASK"], [182, 1, 1, "c.nrf_twim_short_mask_t.NRF_TWIM_ALL_SHORTS_MASK", "NRF_TWIM_ALL_SHORTS_MASK"], [182, 0, 1, "c.NRF_TWIM_DMA_RX_PATTERN_MAX_COUNT", "NRF_TWIM_DMA_RX_PATTERN_MAX_COUNT"], [182, 1, 1, "c.nrf_twim_error_t.NRF_TWIM_ERROR_ADDRESS_NACK", "NRF_TWIM_ERROR_ADDRESS_NACK"], [182, 1, 1, "c.nrf_twim_error_t.NRF_TWIM_ERROR_DATA_NACK", "NRF_TWIM_ERROR_DATA_NACK"], [182, 1, 1, "c.nrf_twim_error_t.NRF_TWIM_ERROR_OVERRUN", "NRF_TWIM_ERROR_OVERRUN"], [182, 1, 1, "c.nrf_twim_event_t.NRF_TWIM_EVENT_ENDRX", "NRF_TWIM_EVENT_ENDRX"], [182, 1, 1, "c.nrf_twim_event_t.NRF_TWIM_EVENT_ENDTX", "NRF_TWIM_EVENT_ENDTX"], [182, 1, 1, "c.nrf_twim_event_t.NRF_TWIM_EVENT_ERROR", "NRF_TWIM_EVENT_ERROR"], [182, 1, 1, "c.nrf_twim_event_t.NRF_TWIM_EVENT_LASTRX", "NRF_TWIM_EVENT_LASTRX"], [182, 1, 1, "c.nrf_twim_event_t.NRF_TWIM_EVENT_LASTTX", "NRF_TWIM_EVENT_LASTTX"], [182, 1, 1, "c.nrf_twim_event_t.NRF_TWIM_EVENT_RXBUSERROR", "NRF_TWIM_EVENT_RXBUSERROR"], [182, 1, 1, "c.nrf_twim_event_t.NRF_TWIM_EVENT_RXMATCH0", "NRF_TWIM_EVENT_RXMATCH0"], [182, 1, 1, "c.nrf_twim_event_t.NRF_TWIM_EVENT_RXMATCH1", "NRF_TWIM_EVENT_RXMATCH1"], [182, 1, 1, "c.nrf_twim_event_t.NRF_TWIM_EVENT_RXMATCH2", "NRF_TWIM_EVENT_RXMATCH2"], [182, 1, 1, "c.nrf_twim_event_t.NRF_TWIM_EVENT_RXMATCH3", "NRF_TWIM_EVENT_RXMATCH3"], [182, 1, 1, "c.nrf_twim_event_t.NRF_TWIM_EVENT_RXSTARTED", "NRF_TWIM_EVENT_RXSTARTED"], [182, 1, 1, "c.nrf_twim_event_t.NRF_TWIM_EVENT_STOPPED", "NRF_TWIM_EVENT_STOPPED"], [182, 1, 1, "c.nrf_twim_event_t.NRF_TWIM_EVENT_SUSPENDED", "NRF_TWIM_EVENT_SUSPENDED"], [182, 1, 1, "c.nrf_twim_event_t.NRF_TWIM_EVENT_TXBUSERROR", "NRF_TWIM_EVENT_TXBUSERROR"], [182, 1, 1, "c.nrf_twim_event_t.NRF_TWIM_EVENT_TXSTARTED", "NRF_TWIM_EVENT_TXSTARTED"], [182, 1, 1, "c.nrf_twim_frequency_t.NRF_TWIM_FREQ_1000K", "NRF_TWIM_FREQ_1000K"], [182, 1, 1, "c.nrf_twim_frequency_t.NRF_TWIM_FREQ_100K", "NRF_TWIM_FREQ_100K"], [182, 1, 1, "c.nrf_twim_frequency_t.NRF_TWIM_FREQ_250K", "NRF_TWIM_FREQ_250K"], [182, 1, 1, "c.nrf_twim_frequency_t.NRF_TWIM_FREQ_400K", "NRF_TWIM_FREQ_400K"], [182, 0, 1, "c.NRF_TWIM_HAS_1000_KHZ_FREQ", "NRF_TWIM_HAS_1000_KHZ_FREQ"], [182, 0, 1, "c.NRF_TWIM_HAS_ARRAY_LIST", "NRF_TWIM_HAS_ARRAY_LIST"], [182, 0, 1, "c.NRF_TWIM_HAS_BUS_ERROR_EVENTS", "NRF_TWIM_HAS_BUS_ERROR_EVENTS"], [182, 0, 1, "c.NRF_TWIM_HAS_DMA_CURRENTAMOUNT_REG", "NRF_TWIM_HAS_DMA_CURRENTAMOUNT_REG"], [182, 0, 1, "c.NRF_TWIM_HAS_DMA_REG", "NRF_TWIM_HAS_DMA_REG"], [182, 0, 1, "c.NRF_TWIM_HAS_DMA_SHORTS", "NRF_TWIM_HAS_DMA_SHORTS"], [182, 0, 1, "c.NRF_TWIM_HAS_DMA_TASKS_EVENTS", "NRF_TWIM_HAS_DMA_TASKS_EVENTS"], [182, 0, 1, "c.NRF_TWIM_INST_GET", "NRF_TWIM_INST_GET"], [182, 1, 1, "c.nrf_twim_int_mask_t.NRF_TWIM_INT_ENDRX_MASK", "NRF_TWIM_INT_ENDRX_MASK"], [182, 1, 1, "c.nrf_twim_int_mask_t.NRF_TWIM_INT_ENDTX_MASK", "NRF_TWIM_INT_ENDTX_MASK"], [182, 1, 1, "c.nrf_twim_int_mask_t.NRF_TWIM_INT_ERROR_MASK", "NRF_TWIM_INT_ERROR_MASK"], [182, 1, 1, "c.nrf_twim_int_mask_t.NRF_TWIM_INT_LASTRX_MASK", "NRF_TWIM_INT_LASTRX_MASK"], [182, 1, 1, "c.nrf_twim_int_mask_t.NRF_TWIM_INT_LASTTX_MASK", "NRF_TWIM_INT_LASTTX_MASK"], [182, 1, 1, "c.nrf_twim_int_mask_t.NRF_TWIM_INT_RXBUSERROR_MASK", "NRF_TWIM_INT_RXBUSERROR_MASK"], [182, 1, 1, "c.nrf_twim_int_mask_t.NRF_TWIM_INT_RXMATCH0_MASK", "NRF_TWIM_INT_RXMATCH0_MASK"], [182, 1, 1, "c.nrf_twim_int_mask_t.NRF_TWIM_INT_RXMATCH1_MASK", "NRF_TWIM_INT_RXMATCH1_MASK"], [182, 1, 1, "c.nrf_twim_int_mask_t.NRF_TWIM_INT_RXMATCH2_MASK", "NRF_TWIM_INT_RXMATCH2_MASK"], [182, 1, 1, "c.nrf_twim_int_mask_t.NRF_TWIM_INT_RXMATCH3_MASK", "NRF_TWIM_INT_RXMATCH3_MASK"], [182, 1, 1, "c.nrf_twim_int_mask_t.NRF_TWIM_INT_RXREADY_MASK", "NRF_TWIM_INT_RXREADY_MASK"], [182, 1, 1, "c.nrf_twim_int_mask_t.NRF_TWIM_INT_RXSTARTED_MASK", "NRF_TWIM_INT_RXSTARTED_MASK"], [182, 1, 1, "c.nrf_twim_int_mask_t.NRF_TWIM_INT_STOPPED_MASK", "NRF_TWIM_INT_STOPPED_MASK"], [182, 1, 1, "c.nrf_twim_int_mask_t.NRF_TWIM_INT_SUSPENDED_MASK", "NRF_TWIM_INT_SUSPENDED_MASK"], [182, 1, 1, "c.nrf_twim_int_mask_t.NRF_TWIM_INT_TXBUSERROR_MASK", "NRF_TWIM_INT_TXBUSERROR_MASK"], [182, 1, 1, "c.nrf_twim_int_mask_t.NRF_TWIM_INT_TXREADY_MASK", "NRF_TWIM_INT_TXREADY_MASK"], [182, 1, 1, "c.nrf_twim_int_mask_t.NRF_TWIM_INT_TXSTARTED_MASK", "NRF_TWIM_INT_TXSTARTED_MASK"], [182, 1, 1, "c.nrf_twim_short_mask_t.NRF_TWIM_SHORT_LASTRX_STARTTX_MASK", "NRF_TWIM_SHORT_LASTRX_STARTTX_MASK"], [182, 1, 1, "c.nrf_twim_short_mask_t.NRF_TWIM_SHORT_LASTRX_STOP_MASK", "NRF_TWIM_SHORT_LASTRX_STOP_MASK"], [182, 1, 1, "c.nrf_twim_short_mask_t.NRF_TWIM_SHORT_LASTTX_STARTRX_MASK", "NRF_TWIM_SHORT_LASTTX_STARTRX_MASK"], [182, 1, 1, "c.nrf_twim_short_mask_t.NRF_TWIM_SHORT_LASTTX_STOP_MASK", "NRF_TWIM_SHORT_LASTTX_STOP_MASK"], [182, 1, 1, "c.nrf_twim_short_mask_t.NRF_TWIM_SHORT_LASTTX_SUSPEND_MASK", "NRF_TWIM_SHORT_LASTTX_SUSPEND_MASK"], [182, 1, 1, "c.nrf_twim_short_mask_t.NRF_TWIM_SHORT_RXMATCH0_DISABLERXMATCH0_MASK", "NRF_TWIM_SHORT_RXMATCH0_DISABLERXMATCH0_MASK"], [182, 1, 1, "c.nrf_twim_short_mask_t.NRF_TWIM_SHORT_RXMATCH0_ENABLERXMATCH1_MASK", "NRF_TWIM_SHORT_RXMATCH0_ENABLERXMATCH1_MASK"], [182, 1, 1, "c.nrf_twim_short_mask_t.NRF_TWIM_SHORT_RXMATCH1_DISABLERXMATCH1_MASK", "NRF_TWIM_SHORT_RXMATCH1_DISABLERXMATCH1_MASK"], [182, 1, 1, "c.nrf_twim_short_mask_t.NRF_TWIM_SHORT_RXMATCH1_ENABLERXMATCH2_MASK", "NRF_TWIM_SHORT_RXMATCH1_ENABLERXMATCH2_MASK"], [182, 1, 1, "c.nrf_twim_short_mask_t.NRF_TWIM_SHORT_RXMATCH2_DISABLERXMATCH2_MASK", "NRF_TWIM_SHORT_RXMATCH2_DISABLERXMATCH2_MASK"], [182, 1, 1, "c.nrf_twim_short_mask_t.NRF_TWIM_SHORT_RXMATCH2_ENABLERXMATCH3_MASK", "NRF_TWIM_SHORT_RXMATCH2_ENABLERXMATCH3_MASK"], [182, 1, 1, "c.nrf_twim_short_mask_t.NRF_TWIM_SHORT_RXMATCH3_DISABLERXMATCH3_MASK", "NRF_TWIM_SHORT_RXMATCH3_DISABLERXMATCH3_MASK"], [182, 1, 1, "c.nrf_twim_short_mask_t.NRF_TWIM_SHORT_RXMATCH3_ENABLERXMATCH0_MASK", "NRF_TWIM_SHORT_RXMATCH3_ENABLERXMATCH0_MASK"], [182, 1, 1, "c.nrf_twim_task_t.NRF_TWIM_TASK_DISABLERXMATCH0", "NRF_TWIM_TASK_DISABLERXMATCH0"], [182, 1, 1, "c.nrf_twim_task_t.NRF_TWIM_TASK_DISABLERXMATCH1", "NRF_TWIM_TASK_DISABLERXMATCH1"], [182, 1, 1, "c.nrf_twim_task_t.NRF_TWIM_TASK_DISABLERXMATCH2", "NRF_TWIM_TASK_DISABLERXMATCH2"], [182, 1, 1, "c.nrf_twim_task_t.NRF_TWIM_TASK_DISABLERXMATCH3", "NRF_TWIM_TASK_DISABLERXMATCH3"], [182, 1, 1, "c.nrf_twim_task_t.NRF_TWIM_TASK_ENABLERXMATCH0", "NRF_TWIM_TASK_ENABLERXMATCH0"], [182, 1, 1, "c.nrf_twim_task_t.NRF_TWIM_TASK_ENABLERXMATCH1", "NRF_TWIM_TASK_ENABLERXMATCH1"], [182, 1, 1, "c.nrf_twim_task_t.NRF_TWIM_TASK_ENABLERXMATCH2", "NRF_TWIM_TASK_ENABLERXMATCH2"], [182, 1, 1, "c.nrf_twim_task_t.NRF_TWIM_TASK_ENABLERXMATCH3", "NRF_TWIM_TASK_ENABLERXMATCH3"], [182, 1, 1, "c.nrf_twim_task_t.NRF_TWIM_TASK_RESUME", "NRF_TWIM_TASK_RESUME"], [182, 1, 1, "c.nrf_twim_task_t.NRF_TWIM_TASK_STARTRX", "NRF_TWIM_TASK_STARTRX"], [182, 1, 1, "c.nrf_twim_task_t.NRF_TWIM_TASK_STARTTX", "NRF_TWIM_TASK_STARTTX"], [182, 1, 1, "c.nrf_twim_task_t.NRF_TWIM_TASK_STOP", "NRF_TWIM_TASK_STOP"], [182, 1, 1, "c.nrf_twim_task_t.NRF_TWIM_TASK_STOPRX", "NRF_TWIM_TASK_STOPRX"], [182, 1, 1, "c.nrf_twim_task_t.NRF_TWIM_TASK_STOPTX", "NRF_TWIM_TASK_STOPTX"], [182, 1, 1, "c.nrf_twim_task_t.NRF_TWIM_TASK_SUSPEND", "NRF_TWIM_TASK_SUSPEND"], [186, 1, 1, "c.nrf_twis_config_addr_mask_t.NRF_TWIS_CONFIG_ADDRESS01_MASK", "NRF_TWIS_CONFIG_ADDRESS01_MASK"], [186, 1, 1, "c.nrf_twis_config_addr_mask_t.NRF_TWIS_CONFIG_ADDRESS0_MASK", "NRF_TWIS_CONFIG_ADDRESS0_MASK"], [186, 1, 1, "c.nrf_twis_config_addr_mask_t.NRF_TWIS_CONFIG_ADDRESS1_MASK", "NRF_TWIS_CONFIG_ADDRESS1_MASK"], [186, 1, 1, "c.nrf_twis_error_t.NRF_TWIS_ERROR_DATA_NACK", "NRF_TWIS_ERROR_DATA_NACK"], [186, 1, 1, "c.nrf_twis_error_t.NRF_TWIS_ERROR_OVERFLOW", "NRF_TWIS_ERROR_OVERFLOW"], [186, 1, 1, "c.nrf_twis_error_t.NRF_TWIS_ERROR_OVERREAD", "NRF_TWIS_ERROR_OVERREAD"], [186, 1, 1, "c.nrf_twis_event_t.NRF_TWIS_EVENT_ERROR", "NRF_TWIS_EVENT_ERROR"], [186, 1, 1, "c.nrf_twis_event_t.NRF_TWIS_EVENT_READ", "NRF_TWIS_EVENT_READ"], [186, 1, 1, "c.nrf_twis_event_t.NRF_TWIS_EVENT_RXSTARTED", "NRF_TWIS_EVENT_RXSTARTED"], [186, 1, 1, "c.nrf_twis_event_t.NRF_TWIS_EVENT_STOPPED", "NRF_TWIS_EVENT_STOPPED"], [186, 1, 1, "c.nrf_twis_event_t.NRF_TWIS_EVENT_TXSTARTED", "NRF_TWIS_EVENT_TXSTARTED"], [186, 1, 1, "c.nrf_twis_event_t.NRF_TWIS_EVENT_WRITE", "NRF_TWIS_EVENT_WRITE"], [186, 0, 1, "c.NRF_TWIS_HAS_DMA_REG", "NRF_TWIS_HAS_DMA_REG"], [186, 0, 1, "c.NRF_TWIS_HAS_DMA_TASKS_EVENTS", "NRF_TWIS_HAS_DMA_TASKS_EVENTS"], [186, 0, 1, "c.NRF_TWIS_HAS_LIST_REG", "NRF_TWIS_HAS_LIST_REG"], [186, 0, 1, "c.NRF_TWIS_INST_GET", "NRF_TWIS_INST_GET"], [186, 1, 1, "c.nrf_twis_int_mask_t.NRF_TWIS_INT_ERROR_MASK", "NRF_TWIS_INT_ERROR_MASK"], [186, 1, 1, "c.nrf_twis_int_mask_t.NRF_TWIS_INT_READ_MASK", "NRF_TWIS_INT_READ_MASK"], [186, 1, 1, "c.nrf_twis_int_mask_t.NRF_TWIS_INT_RXSTARTED_MASK", "NRF_TWIS_INT_RXSTARTED_MASK"], [186, 1, 1, "c.nrf_twis_int_mask_t.NRF_TWIS_INT_STOPPED_MASK", "NRF_TWIS_INT_STOPPED_MASK"], [186, 1, 1, "c.nrf_twis_int_mask_t.NRF_TWIS_INT_TXSTARTED_MASK", "NRF_TWIS_INT_TXSTARTED_MASK"], [186, 1, 1, "c.nrf_twis_int_mask_t.NRF_TWIS_INT_WRITE_MASK", "NRF_TWIS_INT_WRITE_MASK"], [186, 0, 1, "c.NRF_TWIS_RX_MAX_COUNT_SIZE", "NRF_TWIS_RX_MAX_COUNT_SIZE"], [186, 1, 1, "c.nrf_twis_short_mask_t.NRF_TWIS_SHORT_READ_SUSPEND_MASK", "NRF_TWIS_SHORT_READ_SUSPEND_MASK"], [186, 1, 1, "c.nrf_twis_short_mask_t.NRF_TWIS_SHORT_WRITE_SUSPEND_MASK", "NRF_TWIS_SHORT_WRITE_SUSPEND_MASK"], [186, 1, 1, "c.nrf_twis_task_t.NRF_TWIS_TASK_PREPARERX", "NRF_TWIS_TASK_PREPARERX"], [186, 1, 1, "c.nrf_twis_task_t.NRF_TWIS_TASK_PREPARETX", "NRF_TWIS_TASK_PREPARETX"], [186, 1, 1, "c.nrf_twis_task_t.NRF_TWIS_TASK_RESUME", "NRF_TWIS_TASK_RESUME"], [186, 1, 1, "c.nrf_twis_task_t.NRF_TWIS_TASK_STOP", "NRF_TWIS_TASK_STOP"], [186, 1, 1, "c.nrf_twis_task_t.NRF_TWIS_TASK_SUSPEND", "NRF_TWIS_TASK_SUSPEND"], [186, 0, 1, "c.NRF_TWIS_TX_MAX_COUNT_SIZE", "NRF_TWIS_TX_MAX_COUNT_SIZE"], [179, 1, 1, "c.nrf_twi_int_mask_t.NRF_TWI_ALL_INTS_MASK", "NRF_TWI_ALL_INTS_MASK"], [179, 1, 1, "c.nrf_twi_short_mask_t.NRF_TWI_ALL_SHORTS_MASK", "NRF_TWI_ALL_SHORTS_MASK"], [179, 1, 1, "c.nrf_twi_error_t.NRF_TWI_ERROR_ADDRESS_NACK", "NRF_TWI_ERROR_ADDRESS_NACK"], [179, 1, 1, "c.nrf_twi_error_t.NRF_TWI_ERROR_DATA_NACK", "NRF_TWI_ERROR_DATA_NACK"], [179, 1, 1, "c.nrf_twi_error_t.NRF_TWI_ERROR_OVERRUN", "NRF_TWI_ERROR_OVERRUN"], [179, 1, 1, "c.nrf_twi_event_t.NRF_TWI_EVENT_BB", "NRF_TWI_EVENT_BB"], [179, 1, 1, "c.nrf_twi_event_t.NRF_TWI_EVENT_ERROR", "NRF_TWI_EVENT_ERROR"], [179, 1, 1, "c.nrf_twi_event_t.NRF_TWI_EVENT_RXDREADY", "NRF_TWI_EVENT_RXDREADY"], [179, 1, 1, "c.nrf_twi_event_t.NRF_TWI_EVENT_STOPPED", "NRF_TWI_EVENT_STOPPED"], [179, 1, 1, "c.nrf_twi_event_t.NRF_TWI_EVENT_SUSPENDED", "NRF_TWI_EVENT_SUSPENDED"], [179, 1, 1, "c.nrf_twi_event_t.NRF_TWI_EVENT_TXDSENT", "NRF_TWI_EVENT_TXDSENT"], [179, 1, 1, "c.nrf_twi_frequency_t.NRF_TWI_FREQ_100K", "NRF_TWI_FREQ_100K"], [179, 1, 1, "c.nrf_twi_frequency_t.NRF_TWI_FREQ_250K", "NRF_TWI_FREQ_250K"], [179, 1, 1, "c.nrf_twi_frequency_t.NRF_TWI_FREQ_400K", "NRF_TWI_FREQ_400K"], [179, 0, 1, "c.NRF_TWI_INST_GET", "NRF_TWI_INST_GET"], [179, 1, 1, "c.nrf_twi_int_mask_t.NRF_TWI_INT_BB_MASK", "NRF_TWI_INT_BB_MASK"], [179, 1, 1, "c.nrf_twi_int_mask_t.NRF_TWI_INT_ERROR_MASK", "NRF_TWI_INT_ERROR_MASK"], [179, 1, 1, "c.nrf_twi_int_mask_t.NRF_TWI_INT_RXDREADY_MASK", "NRF_TWI_INT_RXDREADY_MASK"], [179, 1, 1, "c.nrf_twi_int_mask_t.NRF_TWI_INT_STOPPED_MASK", "NRF_TWI_INT_STOPPED_MASK"], [179, 1, 1, "c.nrf_twi_int_mask_t.NRF_TWI_INT_SUSPENDED_MASK", "NRF_TWI_INT_SUSPENDED_MASK"], [179, 1, 1, "c.nrf_twi_int_mask_t.NRF_TWI_INT_TXDSENT_MASK", "NRF_TWI_INT_TXDSENT_MASK"], [179, 1, 1, "c.nrf_twi_short_mask_t.NRF_TWI_SHORT_BB_STOP_MASK", "NRF_TWI_SHORT_BB_STOP_MASK"], [179, 1, 1, "c.nrf_twi_short_mask_t.NRF_TWI_SHORT_BB_SUSPEND_MASK", "NRF_TWI_SHORT_BB_SUSPEND_MASK"], [179, 1, 1, "c.nrf_twi_task_t.NRF_TWI_TASK_RESUME", "NRF_TWI_TASK_RESUME"], [179, 1, 1, "c.nrf_twi_task_t.NRF_TWI_TASK_STARTRX", "NRF_TWI_TASK_STARTRX"], [179, 1, 1, "c.nrf_twi_task_t.NRF_TWI_TASK_STARTTX", "NRF_TWI_TASK_STARTTX"], [179, 1, 1, "c.nrf_twi_task_t.NRF_TWI_TASK_STOP", "NRF_TWI_TASK_STOP"], [179, 1, 1, "c.nrf_twi_task_t.NRF_TWI_TASK_SUSPEND", "NRF_TWI_TASK_SUSPEND"], [192, 0, 1, "c.NRF_UARTE_BASE_FREQUENCY_128MHZ", "NRF_UARTE_BASE_FREQUENCY_128MHZ"], [192, 0, 1, "c.NRF_UARTE_BASE_FREQUENCY_16MHZ", "NRF_UARTE_BASE_FREQUENCY_16MHZ"], [192, 0, 1, "c.NRF_UARTE_BASE_FREQUENCY_64MHZ", "NRF_UARTE_BASE_FREQUENCY_64MHZ"], [192, 0, 1, "c.NRF_UARTE_BASE_FREQUENCY_GET", "NRF_UARTE_BASE_FREQUENCY_GET"], [192, 1, 1, "c.nrf_uarte_baudrate_t.NRF_UARTE_BAUDRATE_1000000", "NRF_UARTE_BAUDRATE_1000000"], [192, 1, 1, "c.nrf_uarte_baudrate_t.NRF_UARTE_BAUDRATE_115200", "NRF_UARTE_BAUDRATE_115200"], [192, 1, 1, "c.nrf_uarte_baudrate_t.NRF_UARTE_BAUDRATE_1200", "NRF_UARTE_BAUDRATE_1200"], [192, 1, 1, "c.nrf_uarte_baudrate_t.NRF_UARTE_BAUDRATE_14400", "NRF_UARTE_BAUDRATE_14400"], [192, 1, 1, "c.nrf_uarte_baudrate_t.NRF_UARTE_BAUDRATE_19200", "NRF_UARTE_BAUDRATE_19200"], [192, 1, 1, "c.nrf_uarte_baudrate_t.NRF_UARTE_BAUDRATE_230400", "NRF_UARTE_BAUDRATE_230400"], [192, 1, 1, "c.nrf_uarte_baudrate_t.NRF_UARTE_BAUDRATE_2400", "NRF_UARTE_BAUDRATE_2400"], [192, 1, 1, "c.nrf_uarte_baudrate_t.NRF_UARTE_BAUDRATE_250000", "NRF_UARTE_BAUDRATE_250000"], [192, 1, 1, "c.nrf_uarte_baudrate_t.NRF_UARTE_BAUDRATE_28800", "NRF_UARTE_BAUDRATE_28800"], [192, 1, 1, "c.nrf_uarte_baudrate_t.NRF_UARTE_BAUDRATE_31250", "NRF_UARTE_BAUDRATE_31250"], [192, 1, 1, "c.nrf_uarte_baudrate_t.NRF_UARTE_BAUDRATE_38400", "NRF_UARTE_BAUDRATE_38400"], [192, 1, 1, "c.nrf_uarte_baudrate_t.NRF_UARTE_BAUDRATE_460800", "NRF_UARTE_BAUDRATE_460800"], [192, 1, 1, "c.nrf_uarte_baudrate_t.NRF_UARTE_BAUDRATE_4800", "NRF_UARTE_BAUDRATE_4800"], [192, 1, 1, "c.nrf_uarte_baudrate_t.NRF_UARTE_BAUDRATE_56000", "NRF_UARTE_BAUDRATE_56000"], [192, 1, 1, "c.nrf_uarte_baudrate_t.NRF_UARTE_BAUDRATE_57600", "NRF_UARTE_BAUDRATE_57600"], [192, 1, 1, "c.nrf_uarte_baudrate_t.NRF_UARTE_BAUDRATE_76800", "NRF_UARTE_BAUDRATE_76800"], [192, 1, 1, "c.nrf_uarte_baudrate_t.NRF_UARTE_BAUDRATE_921600", "NRF_UARTE_BAUDRATE_921600"], [192, 1, 1, "c.nrf_uarte_baudrate_t.NRF_UARTE_BAUDRATE_9600", "NRF_UARTE_BAUDRATE_9600"], [192, 1, 1, "c.nrf_uarte_error_mask_t.NRF_UARTE_ERROR_BREAK_MASK", "NRF_UARTE_ERROR_BREAK_MASK"], [192, 1, 1, "c.nrf_uarte_error_mask_t.NRF_UARTE_ERROR_FRAMING_MASK", "NRF_UARTE_ERROR_FRAMING_MASK"], [192, 1, 1, "c.nrf_uarte_error_mask_t.NRF_UARTE_ERROR_OVERRUN_MASK", "NRF_UARTE_ERROR_OVERRUN_MASK"], [192, 1, 1, "c.nrf_uarte_error_mask_t.NRF_UARTE_ERROR_PARITY_MASK", "NRF_UARTE_ERROR_PARITY_MASK"], [192, 1, 1, "c.nrf_uarte_event_t.NRF_UARTE_EVENT_CTS", "NRF_UARTE_EVENT_CTS"], [192, 1, 1, "c.nrf_uarte_event_t.NRF_UARTE_EVENT_ENDRX", "NRF_UARTE_EVENT_ENDRX"], [192, 1, 1, "c.nrf_uarte_event_t.NRF_UARTE_EVENT_ENDTX", "NRF_UARTE_EVENT_ENDTX"], [192, 1, 1, "c.nrf_uarte_event_t.NRF_UARTE_EVENT_ERROR", "NRF_UARTE_EVENT_ERROR"], [192, 1, 1, "c.nrf_uarte_event_t.NRF_UARTE_EVENT_NCTS", "NRF_UARTE_EVENT_NCTS"], [192, 1, 1, "c.nrf_uarte_event_t.NRF_UARTE_EVENT_RXDRDY", "NRF_UARTE_EVENT_RXDRDY"], [192, 1, 1, "c.nrf_uarte_event_t.NRF_UARTE_EVENT_RXSTARTED", "NRF_UARTE_EVENT_RXSTARTED"], [192, 1, 1, "c.nrf_uarte_event_t.NRF_UARTE_EVENT_RXTO", "NRF_UARTE_EVENT_RXTO"], [192, 1, 1, "c.nrf_uarte_event_t.NRF_UARTE_EVENT_TXDRDY", "NRF_UARTE_EVENT_TXDRDY"], [192, 1, 1, "c.nrf_uarte_event_t.NRF_UARTE_EVENT_TXSTARTED", "NRF_UARTE_EVENT_TXSTARTED"], [192, 1, 1, "c.nrf_uarte_event_t.NRF_UARTE_EVENT_TXSTOPPED", "NRF_UARTE_EVENT_TXSTOPPED"], [192, 0, 1, "c.NRF_UARTE_HAS_DMA_REG", "NRF_UARTE_HAS_DMA_REG"], [192, 0, 1, "c.NRF_UARTE_HAS_DMA_SHORTS", "NRF_UARTE_HAS_DMA_SHORTS"], [192, 0, 1, "c.NRF_UARTE_HAS_DMA_TASKS_EVENTS", "NRF_UARTE_HAS_DMA_TASKS_EVENTS"], [192, 0, 1, "c.NRF_UARTE_HAS_ENDTX_STOPTX_SHORT", "NRF_UARTE_HAS_ENDTX_STOPTX_SHORT"], [192, 1, 1, "c.nrf_uarte_hwfc_t.NRF_UARTE_HWFC_DISABLED", "NRF_UARTE_HWFC_DISABLED"], [192, 1, 1, "c.nrf_uarte_hwfc_t.NRF_UARTE_HWFC_ENABLED", "NRF_UARTE_HWFC_ENABLED"], [192, 0, 1, "c.NRF_UARTE_INST_GET", "NRF_UARTE_INST_GET"], [192, 1, 1, "c.nrf_uarte_int_mask_t.NRF_UARTE_INT_CTS_MASK", "NRF_UARTE_INT_CTS_MASK"], [192, 1, 1, "c.nrf_uarte_int_mask_t.NRF_UARTE_INT_ENDRX_MASK", "NRF_UARTE_INT_ENDRX_MASK"], [192, 1, 1, "c.nrf_uarte_int_mask_t.NRF_UARTE_INT_ENDTX_MASK", "NRF_UARTE_INT_ENDTX_MASK"], [192, 1, 1, "c.nrf_uarte_int_mask_t.NRF_UARTE_INT_ERROR_MASK", "NRF_UARTE_INT_ERROR_MASK"], [192, 1, 1, "c.nrf_uarte_int_mask_t.NRF_UARTE_INT_NCTS_MASK", "NRF_UARTE_INT_NCTS_MASK"], [192, 1, 1, "c.nrf_uarte_int_mask_t.NRF_UARTE_INT_RXDRDY_MASK", "NRF_UARTE_INT_RXDRDY_MASK"], [192, 1, 1, "c.nrf_uarte_int_mask_t.NRF_UARTE_INT_RXSTARTED_MASK", "NRF_UARTE_INT_RXSTARTED_MASK"], [192, 1, 1, "c.nrf_uarte_int_mask_t.NRF_UARTE_INT_RXTO_MASK", "NRF_UARTE_INT_RXTO_MASK"], [192, 1, 1, "c.nrf_uarte_int_mask_t.NRF_UARTE_INT_TXDRDY_MASK", "NRF_UARTE_INT_TXDRDY_MASK"], [192, 1, 1, "c.nrf_uarte_int_mask_t.NRF_UARTE_INT_TXSTARTED_MASK", "NRF_UARTE_INT_TXSTARTED_MASK"], [192, 1, 1, "c.nrf_uarte_int_mask_t.NRF_UARTE_INT_TXSTOPPED_MASK", "NRF_UARTE_INT_TXSTOPPED_MASK"], [192, 0, 1, "c.NRF_UARTE_IS_128MHZ_UARTE", "NRF_UARTE_IS_128MHZ_UARTE"], [192, 0, 1, "c.NRF_UARTE_IS_64MHZ_UARTE", "NRF_UARTE_IS_64MHZ_UARTE"], [192, 1, 1, "c.nrf_uarte_paritytype_t.NRF_UARTE_PARITYTYPE_EVEN", "NRF_UARTE_PARITYTYPE_EVEN"], [192, 1, 1, "c.nrf_uarte_paritytype_t.NRF_UARTE_PARITYTYPE_ODD", "NRF_UARTE_PARITYTYPE_ODD"], [192, 1, 1, "c.nrf_uarte_parity_t.NRF_UARTE_PARITY_EXCLUDED", "NRF_UARTE_PARITY_EXCLUDED"], [192, 1, 1, "c.nrf_uarte_parity_t.NRF_UARTE_PARITY_INCLUDED", "NRF_UARTE_PARITY_INCLUDED"], [192, 1, 1, "c.nrf_uarte_short_t.NRF_UARTE_SHORT_ENDRX_STARTRX", "NRF_UARTE_SHORT_ENDRX_STARTRX"], [192, 1, 1, "c.nrf_uarte_short_t.NRF_UARTE_SHORT_ENDRX_STOPRX", "NRF_UARTE_SHORT_ENDRX_STOPRX"], [192, 1, 1, "c.nrf_uarte_short_t.NRF_UARTE_SHORT_ENDTX_STOPTX", "NRF_UARTE_SHORT_ENDTX_STOPTX"], [192, 1, 1, "c.nrf_uarte_stop_t.NRF_UARTE_STOP_ONE", "NRF_UARTE_STOP_ONE"], [192, 1, 1, "c.nrf_uarte_stop_t.NRF_UARTE_STOP_TWO", "NRF_UARTE_STOP_TWO"], [192, 1, 1, "c.nrf_uarte_task_t.NRF_UARTE_TASK_FLUSHRX", "NRF_UARTE_TASK_FLUSHRX"], [192, 1, 1, "c.nrf_uarte_task_t.NRF_UARTE_TASK_STARTRX", "NRF_UARTE_TASK_STARTRX"], [192, 1, 1, "c.nrf_uarte_task_t.NRF_UARTE_TASK_STARTTX", "NRF_UARTE_TASK_STARTTX"], [192, 1, 1, "c.nrf_uarte_task_t.NRF_UARTE_TASK_STOPRX", "NRF_UARTE_TASK_STOPRX"], [192, 1, 1, "c.nrf_uarte_task_t.NRF_UARTE_TASK_STOPTX", "NRF_UARTE_TASK_STOPTX"], [189, 1, 1, "c.nrf_uart_baudrate_t.NRF_UART_BAUDRATE_1000000", "NRF_UART_BAUDRATE_1000000"], [189, 1, 1, "c.nrf_uart_baudrate_t.NRF_UART_BAUDRATE_115200", "NRF_UART_BAUDRATE_115200"], [189, 1, 1, "c.nrf_uart_baudrate_t.NRF_UART_BAUDRATE_1200", "NRF_UART_BAUDRATE_1200"], [189, 1, 1, "c.nrf_uart_baudrate_t.NRF_UART_BAUDRATE_14400", "NRF_UART_BAUDRATE_14400"], [189, 1, 1, "c.nrf_uart_baudrate_t.NRF_UART_BAUDRATE_19200", "NRF_UART_BAUDRATE_19200"], [189, 1, 1, "c.nrf_uart_baudrate_t.NRF_UART_BAUDRATE_230400", "NRF_UART_BAUDRATE_230400"], [189, 1, 1, "c.nrf_uart_baudrate_t.NRF_UART_BAUDRATE_2400", "NRF_UART_BAUDRATE_2400"], [189, 1, 1, "c.nrf_uart_baudrate_t.NRF_UART_BAUDRATE_250000", "NRF_UART_BAUDRATE_250000"], [189, 1, 1, "c.nrf_uart_baudrate_t.NRF_UART_BAUDRATE_28800", "NRF_UART_BAUDRATE_28800"], [189, 1, 1, "c.nrf_uart_baudrate_t.NRF_UART_BAUDRATE_31250", "NRF_UART_BAUDRATE_31250"], [189, 1, 1, "c.nrf_uart_baudrate_t.NRF_UART_BAUDRATE_38400", "NRF_UART_BAUDRATE_38400"], [189, 1, 1, "c.nrf_uart_baudrate_t.NRF_UART_BAUDRATE_460800", "NRF_UART_BAUDRATE_460800"], [189, 1, 1, "c.nrf_uart_baudrate_t.NRF_UART_BAUDRATE_4800", "NRF_UART_BAUDRATE_4800"], [189, 1, 1, "c.nrf_uart_baudrate_t.NRF_UART_BAUDRATE_56000", "NRF_UART_BAUDRATE_56000"], [189, 1, 1, "c.nrf_uart_baudrate_t.NRF_UART_BAUDRATE_57600", "NRF_UART_BAUDRATE_57600"], [189, 1, 1, "c.nrf_uart_baudrate_t.NRF_UART_BAUDRATE_76800", "NRF_UART_BAUDRATE_76800"], [189, 1, 1, "c.nrf_uart_baudrate_t.NRF_UART_BAUDRATE_921600", "NRF_UART_BAUDRATE_921600"], [189, 1, 1, "c.nrf_uart_baudrate_t.NRF_UART_BAUDRATE_9600", "NRF_UART_BAUDRATE_9600"], [189, 1, 1, "c.nrf_uart_error_mask_t.NRF_UART_ERROR_BREAK_MASK", "NRF_UART_ERROR_BREAK_MASK"], [189, 1, 1, "c.nrf_uart_error_mask_t.NRF_UART_ERROR_FRAMING_MASK", "NRF_UART_ERROR_FRAMING_MASK"], [189, 1, 1, "c.nrf_uart_error_mask_t.NRF_UART_ERROR_OVERRUN_MASK", "NRF_UART_ERROR_OVERRUN_MASK"], [189, 1, 1, "c.nrf_uart_error_mask_t.NRF_UART_ERROR_PARITY_MASK", "NRF_UART_ERROR_PARITY_MASK"], [189, 1, 1, "c.nrf_uart_event_t.NRF_UART_EVENT_CTS", "NRF_UART_EVENT_CTS"], [189, 1, 1, "c.nrf_uart_event_t.NRF_UART_EVENT_ERROR", "NRF_UART_EVENT_ERROR"], [189, 1, 1, "c.nrf_uart_event_t.NRF_UART_EVENT_NCTS", "NRF_UART_EVENT_NCTS"], [189, 1, 1, "c.nrf_uart_event_t.NRF_UART_EVENT_RXDRDY", "NRF_UART_EVENT_RXDRDY"], [189, 1, 1, "c.nrf_uart_event_t.NRF_UART_EVENT_RXTO", "NRF_UART_EVENT_RXTO"], [189, 1, 1, "c.nrf_uart_event_t.NRF_UART_EVENT_TXDRDY", "NRF_UART_EVENT_TXDRDY"], [189, 0, 1, "c.NRF_UART_HAS_PARITY_BIT", "NRF_UART_HAS_PARITY_BIT"], [189, 0, 1, "c.NRF_UART_HAS_STOP_BITS", "NRF_UART_HAS_STOP_BITS"], [189, 1, 1, "c.nrf_uart_hwfc_t.NRF_UART_HWFC_DISABLED", "NRF_UART_HWFC_DISABLED"], [189, 1, 1, "c.nrf_uart_hwfc_t.NRF_UART_HWFC_ENABLED", "NRF_UART_HWFC_ENABLED"], [189, 1, 1, "c.nrf_uart_int_mask_t.NRF_UART_INT_MASK_CTS", "NRF_UART_INT_MASK_CTS"], [189, 1, 1, "c.nrf_uart_int_mask_t.NRF_UART_INT_MASK_ERROR", "NRF_UART_INT_MASK_ERROR"], [189, 1, 1, "c.nrf_uart_int_mask_t.NRF_UART_INT_MASK_NCTS", "NRF_UART_INT_MASK_NCTS"], [189, 1, 1, "c.nrf_uart_int_mask_t.NRF_UART_INT_MASK_RXDRDY", "NRF_UART_INT_MASK_RXDRDY"], [189, 1, 1, "c.nrf_uart_int_mask_t.NRF_UART_INT_MASK_RXTO", "NRF_UART_INT_MASK_RXTO"], [189, 1, 1, "c.nrf_uart_int_mask_t.NRF_UART_INT_MASK_TXDRDY", "NRF_UART_INT_MASK_TXDRDY"], [189, 1, 1, "c.nrf_uart_paritytype_t.NRF_UART_PARITYTYPE_EVEN", "NRF_UART_PARITYTYPE_EVEN"], [189, 1, 1, "c.nrf_uart_paritytype_t.NRF_UART_PARITYTYPE_ODD", "NRF_UART_PARITYTYPE_ODD"], [189, 1, 1, "c.nrf_uart_parity_t.NRF_UART_PARITY_EXCLUDED", "NRF_UART_PARITY_EXCLUDED"], [189, 1, 1, "c.nrf_uart_parity_t.NRF_UART_PARITY_INCLUDED", "NRF_UART_PARITY_INCLUDED"], [189, 0, 1, "c.NRF_UART_PSEL_DISCONNECTED", "NRF_UART_PSEL_DISCONNECTED"], [189, 1, 1, "c.nrf_uart_stop_t.NRF_UART_STOP_ONE", "NRF_UART_STOP_ONE"], [189, 1, 1, "c.nrf_uart_stop_t.NRF_UART_STOP_TWO", "NRF_UART_STOP_TWO"], [189, 1, 1, "c.nrf_uart_task_t.NRF_UART_TASK_STARTRX", "NRF_UART_TASK_STARTRX"], [189, 1, 1, "c.nrf_uart_task_t.NRF_UART_TASK_STARTTX", "NRF_UART_TASK_STARTTX"], [189, 1, 1, "c.nrf_uart_task_t.NRF_UART_TASK_STOPRX", "NRF_UART_TASK_STOPRX"], [189, 1, 1, "c.nrf_uart_task_t.NRF_UART_TASK_STOPTX", "NRF_UART_TASK_STOPTX"], [189, 1, 1, "c.nrf_uart_task_t.NRF_UART_TASK_SUSPEND", "NRF_UART_TASK_SUSPEND"], [195, 0, 1, "c.NRF_UICR_BOOTCONF_PERM_MASK", "NRF_UICR_BOOTCONF_PERM_MASK"], [195, 1, 1, "c.nrf_uicr_boot_region_perm_mask_t.NRF_UICR_BOOT_REGION_PERM_EXECUTE_MASK", "NRF_UICR_BOOT_REGION_PERM_EXECUTE_MASK"], [195, 1, 1, "c.nrf_uicr_boot_region_perm_mask_t.NRF_UICR_BOOT_REGION_PERM_READ_MASK", "NRF_UICR_BOOT_REGION_PERM_READ_MASK"], [195, 1, 1, "c.nrf_uicr_boot_region_perm_mask_t.NRF_UICR_BOOT_REGION_PERM_SECURE_MASK", "NRF_UICR_BOOT_REGION_PERM_SECURE_MASK"], [195, 1, 1, "c.nrf_uicr_boot_region_perm_mask_t.NRF_UICR_BOOT_REGION_PERM_WRITE_MASK", "NRF_UICR_BOOT_REGION_PERM_WRITE_MASK"], [195, 0, 1, "c.NRF_UICR_DPPI_GLOBAL_COUNT", "NRF_UICR_DPPI_GLOBAL_COUNT"], [195, 0, 1, "c.NRF_UICR_DPPI_LOCAL_COUNT", "NRF_UICR_DPPI_LOCAL_COUNT"], [195, 1, 1, "c.nrf_uicr_feature_t.NRF_UICR_FEATURE_DPPI_GLOBAL_CH", "NRF_UICR_FEATURE_DPPI_GLOBAL_CH"], [195, 1, 1, "c.nrf_uicr_feature_t.NRF_UICR_FEATURE_DPPI_GLOBAL_CHG", "NRF_UICR_FEATURE_DPPI_GLOBAL_CHG"], [195, 1, 1, "c.nrf_uicr_feature_t.NRF_UICR_FEATURE_DPPI_LOCAL_CH", "NRF_UICR_FEATURE_DPPI_LOCAL_CH"], [195, 1, 1, "c.nrf_uicr_feature_t.NRF_UICR_FEATURE_DPPI_LOCAL_CHG", "NRF_UICR_FEATURE_DPPI_LOCAL_CHG"], [195, 1, 1, "c.nrf_uicr_feature_t.NRF_UICR_FEATURE_GPIO", "NRF_UICR_FEATURE_GPIO"], [195, 1, 1, "c.nrf_uicr_feature_t.NRF_UICR_FEATURE_GPIOTE_CH", "NRF_UICR_FEATURE_GPIOTE_CH"], [195, 1, 1, "c.nrf_uicr_feature_t.NRF_UICR_FEATURE_GRTC_CC", "NRF_UICR_FEATURE_GRTC_CC"], [195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_0_MASK", "NRF_UICR_FEATURE_INDEX_0_MASK"], [195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_10_MASK", "NRF_UICR_FEATURE_INDEX_10_MASK"], [195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_11_MASK", "NRF_UICR_FEATURE_INDEX_11_MASK"], [195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_12_MASK", "NRF_UICR_FEATURE_INDEX_12_MASK"], [195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_13_MASK", "NRF_UICR_FEATURE_INDEX_13_MASK"], [195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_14_MASK", "NRF_UICR_FEATURE_INDEX_14_MASK"], [195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_15_MASK", "NRF_UICR_FEATURE_INDEX_15_MASK"], [195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_16_MASK", "NRF_UICR_FEATURE_INDEX_16_MASK"], [195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_17_MASK", "NRF_UICR_FEATURE_INDEX_17_MASK"], [195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_18_MASK", "NRF_UICR_FEATURE_INDEX_18_MASK"], [195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_19_MASK", "NRF_UICR_FEATURE_INDEX_19_MASK"], [195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_1_MASK", "NRF_UICR_FEATURE_INDEX_1_MASK"], [195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_20_MASK", "NRF_UICR_FEATURE_INDEX_20_MASK"], [195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_21_MASK", "NRF_UICR_FEATURE_INDEX_21_MASK"], [195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_22_MASK", "NRF_UICR_FEATURE_INDEX_22_MASK"], [195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_23_MASK", "NRF_UICR_FEATURE_INDEX_23_MASK"], [195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_24_MASK", "NRF_UICR_FEATURE_INDEX_24_MASK"], [195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_25_MASK", "NRF_UICR_FEATURE_INDEX_25_MASK"], [195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_26_MASK", "NRF_UICR_FEATURE_INDEX_26_MASK"], [195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_27_MASK", "NRF_UICR_FEATURE_INDEX_27_MASK"], [195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_28_MASK", "NRF_UICR_FEATURE_INDEX_28_MASK"], [195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_29_MASK", "NRF_UICR_FEATURE_INDEX_29_MASK"], [195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_2_MASK", "NRF_UICR_FEATURE_INDEX_2_MASK"], [195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_30_MASK", "NRF_UICR_FEATURE_INDEX_30_MASK"], [195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_31_MASK", "NRF_UICR_FEATURE_INDEX_31_MASK"], [195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_3_MASK", "NRF_UICR_FEATURE_INDEX_3_MASK"], [195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_4_MASK", "NRF_UICR_FEATURE_INDEX_4_MASK"], [195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_5_MASK", "NRF_UICR_FEATURE_INDEX_5_MASK"], [195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_6_MASK", "NRF_UICR_FEATURE_INDEX_6_MASK"], [195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_7_MASK", "NRF_UICR_FEATURE_INDEX_7_MASK"], [195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_8_MASK", "NRF_UICR_FEATURE_INDEX_8_MASK"], [195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_9_MASK", "NRF_UICR_FEATURE_INDEX_9_MASK"], [195, 1, 1, "c.nrf_uicr_feature_t.NRF_UICR_FEATURE_IPCT_GLOBAL_CH", "NRF_UICR_FEATURE_IPCT_GLOBAL_CH"], [195, 1, 1, "c.nrf_uicr_feature_t.NRF_UICR_FEATURE_IPCT_GLOBAL_INTERRUPT", "NRF_UICR_FEATURE_IPCT_GLOBAL_INTERRUPT"], [195, 1, 1, "c.nrf_uicr_feature_t.NRF_UICR_FEATURE_IPCT_LOCAL_CH", "NRF_UICR_FEATURE_IPCT_LOCAL_CH"], [195, 1, 1, "c.nrf_uicr_feature_t.NRF_UICR_FEATURE_IPCT_LOCAL_INTERRUPT", "NRF_UICR_FEATURE_IPCT_LOCAL_INTERRUPT"], [195, 0, 1, "c.NRF_UICR_GPIOTE_CH_COUNT", "NRF_UICR_GPIOTE_CH_COUNT"], [195, 0, 1, "c.NRF_UICR_GPIO_COUNT", "NRF_UICR_GPIO_COUNT"], [195, 0, 1, "c.NRF_UICR_HAS_BOOTCONF", "NRF_UICR_HAS_BOOTCONF"], [195, 0, 1, "c.NRF_UICR_HAS_CH_LINK_DIR_EN", "NRF_UICR_HAS_CH_LINK_DIR_EN"], [195, 0, 1, "c.NRF_UICR_HAS_FEATURE_CONFIG", "NRF_UICR_HAS_FEATURE_CONFIG"], [195, 0, 1, "c.NRF_UICR_HAS_FEATURE_GPIO", "NRF_UICR_HAS_FEATURE_GPIO"], [195, 0, 1, "c.NRF_UICR_HAS_MAILBOX", "NRF_UICR_HAS_MAILBOX"], [195, 0, 1, "c.NRF_UICR_HAS_MEM_CONFIG", "NRF_UICR_HAS_MEM_CONFIG"], [195, 0, 1, "c.NRF_UICR_HAS_PERIPH_CONFIG", "NRF_UICR_HAS_PERIPH_CONFIG"], [195, 0, 1, "c.NRF_UICR_HAS_PTREXT", "NRF_UICR_HAS_PTREXT"], [195, 0, 1, "c.NRF_UICR_HAS_VTOR", "NRF_UICR_HAS_VTOR"], [195, 0, 1, "c.NRF_UICR_IPCMAP_COUNT", "NRF_UICR_IPCMAP_COUNT"], [195, 0, 1, "c.NRF_UICR_IPCT_GLOBAL_COUNT", "NRF_UICR_IPCT_GLOBAL_COUNT"], [195, 0, 1, "c.NRF_UICR_MAILBOX_COUNT", "NRF_UICR_MAILBOX_COUNT"], [195, 1, 1, "c.nrf_uicr_mem_config_perm_mask_t.NRF_UICR_MEM_CONFIG_PERM_EXECUTE_MASK", "NRF_UICR_MEM_CONFIG_PERM_EXECUTE_MASK"], [195, 1, 1, "c.nrf_uicr_mem_config_perm_mask_t.NRF_UICR_MEM_CONFIG_PERM_NONSECURE_MASK", "NRF_UICR_MEM_CONFIG_PERM_NONSECURE_MASK"], [195, 1, 1, "c.nrf_uicr_mem_config_perm_mask_t.NRF_UICR_MEM_CONFIG_PERM_READ_MASK", "NRF_UICR_MEM_CONFIG_PERM_READ_MASK"], [195, 1, 1, "c.nrf_uicr_mem_config_perm_mask_t.NRF_UICR_MEM_CONFIG_PERM_WRITE_MASK", "NRF_UICR_MEM_CONFIG_PERM_WRITE_MASK"], [195, 0, 1, "c.NRF_UICR_MEM_COUNT", "NRF_UICR_MEM_COUNT"], [195, 0, 1, "c.NRF_UICR_PERIPH_COUNT", "NRF_UICR_PERIPH_COUNT"], [197, 1, 1, "c.nrf_usbd_dpdmvalue_t.NRF_USBD_DPDMVALUE_J", "NRF_USBD_DPDMVALUE_J"], [197, 1, 1, "c.nrf_usbd_dpdmvalue_t.NRF_USBD_DPDMVALUE_RESUME", "NRF_USBD_DPDMVALUE_RESUME"], [197, 1, 1, "c.nrf_usbd_dpdmvalue_t.NRF_USBD_DPMVALUE_K", "NRF_USBD_DPMVALUE_K"], [197, 1, 1, "c.nrf_usbd_dtoggle_t.NRF_USBD_DTOGGLE_DATA0", "NRF_USBD_DTOGGLE_DATA0"], [197, 1, 1, "c.nrf_usbd_dtoggle_t.NRF_USBD_DTOGGLE_DATA1", "NRF_USBD_DTOGGLE_DATA1"], [197, 1, 1, "c.nrf_usbd_dtoggle_t.NRF_USBD_DTOGGLE_NOP", "NRF_USBD_DTOGGLE_NOP"], [197, 1, 1, "c.nrf_usbd_dataepstatus_mask_t.NRF_USBD_EPDATASTATUS_EPIN1_MASK", "NRF_USBD_EPDATASTATUS_EPIN1_MASK"], [197, 1, 1, "c.nrf_usbd_dataepstatus_mask_t.NRF_USBD_EPDATASTATUS_EPIN2_MASK", "NRF_USBD_EPDATASTATUS_EPIN2_MASK"], [197, 1, 1, "c.nrf_usbd_dataepstatus_mask_t.NRF_USBD_EPDATASTATUS_EPIN3_MASK", "NRF_USBD_EPDATASTATUS_EPIN3_MASK"], [197, 1, 1, "c.nrf_usbd_dataepstatus_mask_t.NRF_USBD_EPDATASTATUS_EPIN4_MASK", "NRF_USBD_EPDATASTATUS_EPIN4_MASK"], [197, 1, 1, "c.nrf_usbd_dataepstatus_mask_t.NRF_USBD_EPDATASTATUS_EPIN5_MASK", "NRF_USBD_EPDATASTATUS_EPIN5_MASK"], [197, 1, 1, "c.nrf_usbd_dataepstatus_mask_t.NRF_USBD_EPDATASTATUS_EPIN6_MASK", "NRF_USBD_EPDATASTATUS_EPIN6_MASK"], [197, 1, 1, "c.nrf_usbd_dataepstatus_mask_t.NRF_USBD_EPDATASTATUS_EPIN7_MASK", "NRF_USBD_EPDATASTATUS_EPIN7_MASK"], [197, 1, 1, "c.nrf_usbd_dataepstatus_mask_t.NRF_USBD_EPDATASTATUS_EPOUT1_MASK", "NRF_USBD_EPDATASTATUS_EPOUT1_MASK"], [197, 1, 1, "c.nrf_usbd_dataepstatus_mask_t.NRF_USBD_EPDATASTATUS_EPOUT2_MASK", "NRF_USBD_EPDATASTATUS_EPOUT2_MASK"], [197, 1, 1, "c.nrf_usbd_dataepstatus_mask_t.NRF_USBD_EPDATASTATUS_EPOUT3_MASK", "NRF_USBD_EPDATASTATUS_EPOUT3_MASK"], [197, 1, 1, "c.nrf_usbd_dataepstatus_mask_t.NRF_USBD_EPDATASTATUS_EPOUT4_MASK", "NRF_USBD_EPDATASTATUS_EPOUT4_MASK"], [197, 1, 1, "c.nrf_usbd_dataepstatus_mask_t.NRF_USBD_EPDATASTATUS_EPOUT5_MASK", "NRF_USBD_EPDATASTATUS_EPOUT5_MASK"], [197, 1, 1, "c.nrf_usbd_dataepstatus_mask_t.NRF_USBD_EPDATASTATUS_EPOUT6_MASK", "NRF_USBD_EPDATASTATUS_EPOUT6_MASK"], [197, 1, 1, "c.nrf_usbd_dataepstatus_mask_t.NRF_USBD_EPDATASTATUS_EPOUT7_MASK", "NRF_USBD_EPDATASTATUS_EPOUT7_MASK"], [197, 0, 1, "c.NRF_USBD_EPIN", "NRF_USBD_EPIN"], [197, 0, 1, "c.NRF_USBD_EPIN_CHECK", "NRF_USBD_EPIN_CHECK"], [197, 0, 1, "c.NRF_USBD_EPIN_CNT", "NRF_USBD_EPIN_CNT"], [197, 0, 1, "c.NRF_USBD_EPISOOUT_NO_DATA", "NRF_USBD_EPISOOUT_NO_DATA"], [197, 0, 1, "c.NRF_USBD_EPISO_CHECK", "NRF_USBD_EPISO_CHECK"], [197, 0, 1, "c.NRF_USBD_EPISO_FIRST", "NRF_USBD_EPISO_FIRST"], [197, 0, 1, "c.NRF_USBD_EPOUT", "NRF_USBD_EPOUT"], [197, 0, 1, "c.NRF_USBD_EPOUT_CHECK", "NRF_USBD_EPOUT_CHECK"], [197, 0, 1, "c.NRF_USBD_EPOUT_CNT", "NRF_USBD_EPOUT_CNT"], [197, 1, 1, "c.nrf_usbd_epstatus_mask_t.NRF_USBD_EPSTATUS_EPIN0_MASK", "NRF_USBD_EPSTATUS_EPIN0_MASK"], [197, 1, 1, "c.nrf_usbd_epstatus_mask_t.NRF_USBD_EPSTATUS_EPIN1_MASK", "NRF_USBD_EPSTATUS_EPIN1_MASK"], [197, 1, 1, "c.nrf_usbd_epstatus_mask_t.NRF_USBD_EPSTATUS_EPIN2_MASK", "NRF_USBD_EPSTATUS_EPIN2_MASK"], [197, 1, 1, "c.nrf_usbd_epstatus_mask_t.NRF_USBD_EPSTATUS_EPIN3_MASK", "NRF_USBD_EPSTATUS_EPIN3_MASK"], [197, 1, 1, "c.nrf_usbd_epstatus_mask_t.NRF_USBD_EPSTATUS_EPIN4_MASK", "NRF_USBD_EPSTATUS_EPIN4_MASK"], [197, 1, 1, "c.nrf_usbd_epstatus_mask_t.NRF_USBD_EPSTATUS_EPIN5_MASK", "NRF_USBD_EPSTATUS_EPIN5_MASK"], [197, 1, 1, "c.nrf_usbd_epstatus_mask_t.NRF_USBD_EPSTATUS_EPIN6_MASK", "NRF_USBD_EPSTATUS_EPIN6_MASK"], [197, 1, 1, "c.nrf_usbd_epstatus_mask_t.NRF_USBD_EPSTATUS_EPIN7_MASK", "NRF_USBD_EPSTATUS_EPIN7_MASK"], [197, 1, 1, "c.nrf_usbd_epstatus_mask_t.NRF_USBD_EPSTATUS_EPOUT0_MASK", "NRF_USBD_EPSTATUS_EPOUT0_MASK"], [197, 1, 1, "c.nrf_usbd_epstatus_mask_t.NRF_USBD_EPSTATUS_EPOUT1_MASK", "NRF_USBD_EPSTATUS_EPOUT1_MASK"], [197, 1, 1, "c.nrf_usbd_epstatus_mask_t.NRF_USBD_EPSTATUS_EPOUT2_MASK", "NRF_USBD_EPSTATUS_EPOUT2_MASK"], [197, 1, 1, "c.nrf_usbd_epstatus_mask_t.NRF_USBD_EPSTATUS_EPOUT3_MASK", "NRF_USBD_EPSTATUS_EPOUT3_MASK"], [197, 1, 1, "c.nrf_usbd_epstatus_mask_t.NRF_USBD_EPSTATUS_EPOUT4_MASK", "NRF_USBD_EPSTATUS_EPOUT4_MASK"], [197, 1, 1, "c.nrf_usbd_epstatus_mask_t.NRF_USBD_EPSTATUS_EPOUT5_MASK", "NRF_USBD_EPSTATUS_EPOUT5_MASK"], [197, 1, 1, "c.nrf_usbd_epstatus_mask_t.NRF_USBD_EPSTATUS_EPOUT6_MASK", "NRF_USBD_EPSTATUS_EPOUT6_MASK"], [197, 1, 1, "c.nrf_usbd_epstatus_mask_t.NRF_USBD_EPSTATUS_EPOUT7_MASK", "NRF_USBD_EPSTATUS_EPOUT7_MASK"], [197, 0, 1, "c.NRF_USBD_EP_DIR_IN", "NRF_USBD_EP_DIR_IN"], [197, 0, 1, "c.NRF_USBD_EP_DIR_Msk", "NRF_USBD_EP_DIR_Msk"], [197, 0, 1, "c.NRF_USBD_EP_DIR_OUT", "NRF_USBD_EP_DIR_OUT"], [197, 0, 1, "c.NRF_USBD_EP_NR_GET", "NRF_USBD_EP_NR_GET"], [197, 0, 1, "c.NRF_USBD_EP_VALIDATE", "NRF_USBD_EP_VALIDATE"], [197, 1, 1, "c.nrf_usbd_eventcause_mask_t.NRF_USBD_EVENTCAUSE_ISOOUTCRC_MASK", "NRF_USBD_EVENTCAUSE_ISOOUTCRC_MASK"], [197, 1, 1, "c.nrf_usbd_eventcause_mask_t.NRF_USBD_EVENTCAUSE_READY_MASK", "NRF_USBD_EVENTCAUSE_READY_MASK"], [197, 1, 1, "c.nrf_usbd_eventcause_mask_t.NRF_USBD_EVENTCAUSE_RESUME_MASK", "NRF_USBD_EVENTCAUSE_RESUME_MASK"], [197, 1, 1, "c.nrf_usbd_eventcause_mask_t.NRF_USBD_EVENTCAUSE_SUSPEND_MASK", "NRF_USBD_EVENTCAUSE_SUSPEND_MASK"], [197, 1, 1, "c.nrf_usbd_eventcause_mask_t.NRF_USBD_EVENTCAUSE_WUREQ_MASK", "NRF_USBD_EVENTCAUSE_WUREQ_MASK"], [197, 1, 1, "c.nrf_usbd_event_t.NRF_USBD_EVENT_DATAEP", "NRF_USBD_EVENT_DATAEP"], [197, 1, 1, "c.nrf_usbd_event_t.NRF_USBD_EVENT_ENDEPIN0", "NRF_USBD_EVENT_ENDEPIN0"], [197, 1, 1, "c.nrf_usbd_event_t.NRF_USBD_EVENT_ENDEPIN1", "NRF_USBD_EVENT_ENDEPIN1"], [197, 1, 1, "c.nrf_usbd_event_t.NRF_USBD_EVENT_ENDEPIN2", "NRF_USBD_EVENT_ENDEPIN2"], [197, 1, 1, "c.nrf_usbd_event_t.NRF_USBD_EVENT_ENDEPIN3", "NRF_USBD_EVENT_ENDEPIN3"], [197, 1, 1, "c.nrf_usbd_event_t.NRF_USBD_EVENT_ENDEPIN4", "NRF_USBD_EVENT_ENDEPIN4"], [197, 1, 1, "c.nrf_usbd_event_t.NRF_USBD_EVENT_ENDEPIN5", "NRF_USBD_EVENT_ENDEPIN5"], [197, 1, 1, "c.nrf_usbd_event_t.NRF_USBD_EVENT_ENDEPIN6", "NRF_USBD_EVENT_ENDEPIN6"], [197, 1, 1, "c.nrf_usbd_event_t.NRF_USBD_EVENT_ENDEPIN7", "NRF_USBD_EVENT_ENDEPIN7"], [197, 1, 1, "c.nrf_usbd_event_t.NRF_USBD_EVENT_ENDEPOUT0", "NRF_USBD_EVENT_ENDEPOUT0"], [197, 1, 1, "c.nrf_usbd_event_t.NRF_USBD_EVENT_ENDEPOUT1", "NRF_USBD_EVENT_ENDEPOUT1"], [197, 1, 1, "c.nrf_usbd_event_t.NRF_USBD_EVENT_ENDEPOUT2", "NRF_USBD_EVENT_ENDEPOUT2"], [197, 1, 1, "c.nrf_usbd_event_t.NRF_USBD_EVENT_ENDEPOUT3", "NRF_USBD_EVENT_ENDEPOUT3"], [197, 1, 1, "c.nrf_usbd_event_t.NRF_USBD_EVENT_ENDEPOUT4", "NRF_USBD_EVENT_ENDEPOUT4"], [197, 1, 1, "c.nrf_usbd_event_t.NRF_USBD_EVENT_ENDEPOUT5", "NRF_USBD_EVENT_ENDEPOUT5"], [197, 1, 1, "c.nrf_usbd_event_t.NRF_USBD_EVENT_ENDEPOUT6", "NRF_USBD_EVENT_ENDEPOUT6"], [197, 1, 1, "c.nrf_usbd_event_t.NRF_USBD_EVENT_ENDEPOUT7", "NRF_USBD_EVENT_ENDEPOUT7"], [197, 1, 1, "c.nrf_usbd_event_t.NRF_USBD_EVENT_ENDISOIN0", "NRF_USBD_EVENT_ENDISOIN0"], [197, 1, 1, "c.nrf_usbd_event_t.NRF_USBD_EVENT_ENDISOOUT0", "NRF_USBD_EVENT_ENDISOOUT0"], [197, 1, 1, "c.nrf_usbd_event_t.NRF_USBD_EVENT_EP0DATADONE", "NRF_USBD_EVENT_EP0DATADONE"], [197, 1, 1, "c.nrf_usbd_event_t.NRF_USBD_EVENT_EP0SETUP", "NRF_USBD_EVENT_EP0SETUP"], [197, 1, 1, "c.nrf_usbd_event_t.NRF_USBD_EVENT_SOF", "NRF_USBD_EVENT_SOF"], [197, 1, 1, "c.nrf_usbd_event_t.NRF_USBD_EVENT_STARTED", "NRF_USBD_EVENT_STARTED"], [197, 1, 1, "c.nrf_usbd_event_t.NRF_USBD_EVENT_USBEVENT", "NRF_USBD_EVENT_USBEVENT"], [197, 1, 1, "c.nrf_usbd_event_t.NRF_USBD_EVENT_USBRESET", "NRF_USBD_EVENT_USBRESET"], [197, 0, 1, "c.NRF_USBD_FRAMECNTR_SIZE", "NRF_USBD_FRAMECNTR_SIZE"], [197, 1, 1, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_DATAEP_MASK", "NRF_USBD_INT_DATAEP_MASK"], [197, 1, 1, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_ENDEPIN0_MASK", "NRF_USBD_INT_ENDEPIN0_MASK"], [197, 1, 1, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_ENDEPIN1_MASK", "NRF_USBD_INT_ENDEPIN1_MASK"], [197, 1, 1, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_ENDEPIN2_MASK", "NRF_USBD_INT_ENDEPIN2_MASK"], [197, 1, 1, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_ENDEPIN3_MASK", "NRF_USBD_INT_ENDEPIN3_MASK"], [197, 1, 1, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_ENDEPIN4_MASK", "NRF_USBD_INT_ENDEPIN4_MASK"], [197, 1, 1, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_ENDEPIN5_MASK", "NRF_USBD_INT_ENDEPIN5_MASK"], [197, 1, 1, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_ENDEPIN6_MASK", "NRF_USBD_INT_ENDEPIN6_MASK"], [197, 1, 1, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_ENDEPIN7_MASK", "NRF_USBD_INT_ENDEPIN7_MASK"], [197, 1, 1, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_ENDEPOUT0_MASK", "NRF_USBD_INT_ENDEPOUT0_MASK"], [197, 1, 1, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_ENDEPOUT1_MASK", "NRF_USBD_INT_ENDEPOUT1_MASK"], [197, 1, 1, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_ENDEPOUT2_MASK", "NRF_USBD_INT_ENDEPOUT2_MASK"], [197, 1, 1, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_ENDEPOUT3_MASK", "NRF_USBD_INT_ENDEPOUT3_MASK"], [197, 1, 1, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_ENDEPOUT4_MASK", "NRF_USBD_INT_ENDEPOUT4_MASK"], [197, 1, 1, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_ENDEPOUT5_MASK", "NRF_USBD_INT_ENDEPOUT5_MASK"], [197, 1, 1, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_ENDEPOUT6_MASK", "NRF_USBD_INT_ENDEPOUT6_MASK"], [197, 1, 1, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_ENDEPOUT7_MASK", "NRF_USBD_INT_ENDEPOUT7_MASK"], [197, 1, 1, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_ENDISOIN0_MASK", "NRF_USBD_INT_ENDISOIN0_MASK"], [197, 1, 1, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_ENDISOOUT0_MASK", "NRF_USBD_INT_ENDISOOUT0_MASK"], [197, 1, 1, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_EP0DATADONE_MASK", "NRF_USBD_INT_EP0DATADONE_MASK"], [197, 1, 1, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_EP0SETUP_MASK", "NRF_USBD_INT_EP0SETUP_MASK"], [197, 1, 1, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_SOF_MASK", "NRF_USBD_INT_SOF_MASK"], [197, 1, 1, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_STARTED_MASK", "NRF_USBD_INT_STARTED_MASK"], [197, 1, 1, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_USBEVENT_MASK", "NRF_USBD_INT_USBEVENT_MASK"], [197, 1, 1, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_USBRESET_MASK", "NRF_USBD_INT_USBRESET_MASK"], [197, 1, 1, "c.nrf_usbd_isoinconfig_t.NRF_USBD_ISOINCONFIG_NORESP", "NRF_USBD_ISOINCONFIG_NORESP"], [197, 1, 1, "c.nrf_usbd_isoinconfig_t.NRF_USBD_ISOINCONFIG_ZERODATA", "NRF_USBD_ISOINCONFIG_ZERODATA"], [197, 1, 1, "c.nrf_usbd_isosplit_t.NRF_USBD_ISOSPLIT_HALF", "NRF_USBD_ISOSPLIT_HALF"], [197, 1, 1, "c.nrf_usbd_isosplit_t.NRF_USBD_ISOSPLIT_ONEDIR", "NRF_USBD_ISOSPLIT_ONEDIR"], [197, 1, 1, "c.nrf_usbd_short_mask_t.NRF_USBD_SHORT_ENDEPOUT0_EP0RCVOUT_MASK", "NRF_USBD_SHORT_ENDEPOUT0_EP0RCVOUT_MASK"], [197, 1, 1, "c.nrf_usbd_short_mask_t.NRF_USBD_SHORT_ENDEPOUT0_EP0STATUS_MASK", "NRF_USBD_SHORT_ENDEPOUT0_EP0STATUS_MASK"], [197, 1, 1, "c.nrf_usbd_short_mask_t.NRF_USBD_SHORT_EP0DATADONE_EP0STATUS_MASK", "NRF_USBD_SHORT_EP0DATADONE_EP0STATUS_MASK"], [197, 1, 1, "c.nrf_usbd_short_mask_t.NRF_USBD_SHORT_EP0DATADONE_STARTEPIN0_MASK", "NRF_USBD_SHORT_EP0DATADONE_STARTEPIN0_MASK"], [197, 1, 1, "c.nrf_usbd_short_mask_t.NRF_USBD_SHORT_EP0DATADONE_STARTEPOUT0_MASK", "NRF_USBD_SHORT_EP0DATADONE_STARTEPOUT0_MASK"], [197, 1, 1, "c.nrf_usbd_task_t.NRF_USBD_TASK_DRIVEDPDM", "NRF_USBD_TASK_DRIVEDPDM"], [197, 1, 1, "c.nrf_usbd_task_t.NRF_USBD_TASK_EP0RCVOUT", "NRF_USBD_TASK_EP0RCVOUT"], [197, 1, 1, "c.nrf_usbd_task_t.NRF_USBD_TASK_EP0STALL", "NRF_USBD_TASK_EP0STALL"], [197, 1, 1, "c.nrf_usbd_task_t.NRF_USBD_TASK_EP0STATUS", "NRF_USBD_TASK_EP0STATUS"], [197, 1, 1, "c.nrf_usbd_task_t.NRF_USBD_TASK_NODRIVEDPDM", "NRF_USBD_TASK_NODRIVEDPDM"], [197, 1, 1, "c.nrf_usbd_task_t.NRF_USBD_TASK_STARTEPIN0", "NRF_USBD_TASK_STARTEPIN0"], [197, 1, 1, "c.nrf_usbd_task_t.NRF_USBD_TASK_STARTEPIN1", "NRF_USBD_TASK_STARTEPIN1"], [197, 1, 1, "c.nrf_usbd_task_t.NRF_USBD_TASK_STARTEPIN2", "NRF_USBD_TASK_STARTEPIN2"], [197, 1, 1, "c.nrf_usbd_task_t.NRF_USBD_TASK_STARTEPIN3", "NRF_USBD_TASK_STARTEPIN3"], [197, 1, 1, "c.nrf_usbd_task_t.NRF_USBD_TASK_STARTEPIN4", "NRF_USBD_TASK_STARTEPIN4"], [197, 1, 1, "c.nrf_usbd_task_t.NRF_USBD_TASK_STARTEPIN5", "NRF_USBD_TASK_STARTEPIN5"], [197, 1, 1, "c.nrf_usbd_task_t.NRF_USBD_TASK_STARTEPIN6", "NRF_USBD_TASK_STARTEPIN6"], [197, 1, 1, "c.nrf_usbd_task_t.NRF_USBD_TASK_STARTEPIN7", "NRF_USBD_TASK_STARTEPIN7"], [197, 1, 1, "c.nrf_usbd_task_t.NRF_USBD_TASK_STARTEPOUT0", "NRF_USBD_TASK_STARTEPOUT0"], [197, 1, 1, "c.nrf_usbd_task_t.NRF_USBD_TASK_STARTEPOUT1", "NRF_USBD_TASK_STARTEPOUT1"], [197, 1, 1, "c.nrf_usbd_task_t.NRF_USBD_TASK_STARTEPOUT2", "NRF_USBD_TASK_STARTEPOUT2"], [197, 1, 1, "c.nrf_usbd_task_t.NRF_USBD_TASK_STARTEPOUT3", "NRF_USBD_TASK_STARTEPOUT3"], [197, 1, 1, "c.nrf_usbd_task_t.NRF_USBD_TASK_STARTEPOUT4", "NRF_USBD_TASK_STARTEPOUT4"], [197, 1, 1, "c.nrf_usbd_task_t.NRF_USBD_TASK_STARTEPOUT5", "NRF_USBD_TASK_STARTEPOUT5"], [197, 1, 1, "c.nrf_usbd_task_t.NRF_USBD_TASK_STARTEPOUT6", "NRF_USBD_TASK_STARTEPOUT6"], [197, 1, 1, "c.nrf_usbd_task_t.NRF_USBD_TASK_STARTEPOUT7", "NRF_USBD_TASK_STARTEPOUT7"], [197, 1, 1, "c.nrf_usbd_task_t.NRF_USBD_TASK_STARTISOIN", "NRF_USBD_TASK_STARTISOIN"], [197, 1, 1, "c.nrf_usbd_task_t.NRF_USBD_TASK_STARTISOOUT", "NRF_USBD_TASK_STARTISOOUT"], [199, 1, 1, "c.nrf_usbhs_event_t.NRF_USBHS_EVENT_CORE", "NRF_USBHS_EVENT_CORE"], [199, 1, 1, "c.nrf_usbhs_int_mask_t.NRF_USBHS_INT_USBCORE_MASK", "NRF_USBHS_INT_USBCORE_MASK"], [199, 1, 1, "c.nrf_usbhs_task_t.NRF_USBHS_TASK_START", "NRF_USBHS_TASK_START"], [202, 1, 1, "c.nrf_usbreg_event_t.NRF_USBREG_EVENT_USBDETECTED", "NRF_USBREG_EVENT_USBDETECTED"], [202, 1, 1, "c.nrf_usbreg_event_t.NRF_USBREG_EVENT_USBPWRRDY", "NRF_USBREG_EVENT_USBPWRRDY"], [202, 1, 1, "c.nrf_usbreg_event_t.NRF_USBREG_EVENT_USBREMOVED", "NRF_USBREG_EVENT_USBREMOVED"], [202, 1, 1, "c.nrf_usbreg_int_mask_t.NRF_USBREG_INT_USBDETECTED", "NRF_USBREG_INT_USBDETECTED"], [202, 1, 1, "c.nrf_usbreg_int_mask_t.NRF_USBREG_INT_USBPWRRDY", "NRF_USBREG_INT_USBPWRRDY"], [202, 1, 1, "c.nrf_usbreg_int_mask_t.NRF_USBREG_INT_USBREMOVED", "NRF_USBREG_INT_USBREMOVED"], [202, 1, 1, "c.nrf_usbreg_status_mask_t.NRF_USBREG_STATUS_OUTPUTRDY_MASK", "NRF_USBREG_STATUS_OUTPUTRDY_MASK"], [202, 1, 1, "c.nrf_usbreg_status_mask_t.NRF_USBREG_STATUS_VBUSDETECT_MASK", "NRF_USBREG_STATUS_VBUSDETECT_MASK"], [249, 1, 1, "c.nrf_vdma_attributes_t.NRF_VDMA_ATTRIBUTE_BUFFER_FILL", "NRF_VDMA_ATTRIBUTE_BUFFER_FILL"], [249, 1, 1, "c.nrf_vdma_attributes_t.NRF_VDMA_ATTRIBUTE_BYTE_SWAP", "NRF_VDMA_ATTRIBUTE_BYTE_SWAP"], [249, 1, 1, "c.nrf_vdma_attributes_t.NRF_VDMA_ATTRIBUTE_CRC", "NRF_VDMA_ATTRIBUTE_CRC"], [249, 1, 1, "c.nrf_vdma_attributes_t.NRF_VDMA_ATTRIBUTE_FIXED_ATTR", "NRF_VDMA_ATTRIBUTE_FIXED_ATTR"], [249, 1, 1, "c.nrf_vdma_attributes_t.NRF_VDMA_ATTRIBUTE_JOB_LIST", "NRF_VDMA_ATTRIBUTE_JOB_LIST"], [249, 1, 1, "c.nrf_vdma_attributes_t.NRF_VDMA_ATTRIBUTE_PLAIN_DATA", "NRF_VDMA_ATTRIBUTE_PLAIN_DATA"], [249, 1, 1, "c.nrf_vdma_attributes_t.NRF_VDMA_ATTRIBUTE_PLAIN_DATA_BUF_WRITE", "NRF_VDMA_ATTRIBUTE_PLAIN_DATA_BUF_WRITE"], [249, 1, 1, "c.nrf_vdma_attributes_t.NRF_VDMA_ATTRIBUTE_STATIC_ADDR", "NRF_VDMA_ATTRIBUTE_STATIC_ADDR"], [249, 0, 1, "c.NRF_VDMA_BUFFER_SIZE_MASK", "NRF_VDMA_BUFFER_SIZE_MASK"], [249, 1, 1, "c.nrf_vdma_ext_attribute_t.NRF_VDMA_EXT_ATTRIBUTE_EVENT_ENABLE", "NRF_VDMA_EXT_ATTRIBUTE_EVENT_ENABLE"], [249, 1, 1, "c.nrf_vdma_ext_attribute_t.NRF_VDMA_EXT_ATTRIBUTE_PERIPHERAL_MODE", "NRF_VDMA_EXT_ATTRIBUTE_PERIPHERAL_MODE"], [249, 0, 1, "c.NRF_VDMA_JOB_ELEMENT", "NRF_VDMA_JOB_ELEMENT"], [249, 0, 1, "c.NRF_VDMA_REDUCED_JOB_INIT_ELEMENT", "NRF_VDMA_REDUCED_JOB_INIT_ELEMENT"], [249, 0, 1, "c.NRF_VDMA_REDUCED_JOB_SIZE", "NRF_VDMA_REDUCED_JOB_SIZE"], [203, 1, 1, "c.nrf_vmc_power_t.NRF_VMC_POWER_S0", "NRF_VMC_POWER_S0"], [203, 1, 1, "c.nrf_vmc_power_t.NRF_VMC_POWER_S1", "NRF_VMC_POWER_S1"], [203, 1, 1, "c.nrf_vmc_power_t.NRF_VMC_POWER_S10", "NRF_VMC_POWER_S10"], [203, 1, 1, "c.nrf_vmc_power_t.NRF_VMC_POWER_S11", "NRF_VMC_POWER_S11"], [203, 1, 1, "c.nrf_vmc_power_t.NRF_VMC_POWER_S12", "NRF_VMC_POWER_S12"], [203, 1, 1, "c.nrf_vmc_power_t.NRF_VMC_POWER_S13", "NRF_VMC_POWER_S13"], [203, 1, 1, "c.nrf_vmc_power_t.NRF_VMC_POWER_S14", "NRF_VMC_POWER_S14"], [203, 1, 1, "c.nrf_vmc_power_t.NRF_VMC_POWER_S15", "NRF_VMC_POWER_S15"], [203, 1, 1, "c.nrf_vmc_power_t.NRF_VMC_POWER_S2", "NRF_VMC_POWER_S2"], [203, 1, 1, "c.nrf_vmc_power_t.NRF_VMC_POWER_S3", "NRF_VMC_POWER_S3"], [203, 1, 1, "c.nrf_vmc_power_t.NRF_VMC_POWER_S4", "NRF_VMC_POWER_S4"], [203, 1, 1, "c.nrf_vmc_power_t.NRF_VMC_POWER_S5", "NRF_VMC_POWER_S5"], [203, 1, 1, "c.nrf_vmc_power_t.NRF_VMC_POWER_S6", "NRF_VMC_POWER_S6"], [203, 1, 1, "c.nrf_vmc_power_t.NRF_VMC_POWER_S7", "NRF_VMC_POWER_S7"], [203, 1, 1, "c.nrf_vmc_power_t.NRF_VMC_POWER_S8", "NRF_VMC_POWER_S8"], [203, 1, 1, "c.nrf_vmc_power_t.NRF_VMC_POWER_S9", "NRF_VMC_POWER_S9"], [203, 1, 1, "c.nrf_vmc_retention_t.NRF_VMC_RETENTION_S0", "NRF_VMC_RETENTION_S0"], [203, 1, 1, "c.nrf_vmc_retention_t.NRF_VMC_RETENTION_S1", "NRF_VMC_RETENTION_S1"], [203, 1, 1, "c.nrf_vmc_retention_t.NRF_VMC_RETENTION_S10", "NRF_VMC_RETENTION_S10"], [203, 1, 1, "c.nrf_vmc_retention_t.NRF_VMC_RETENTION_S11", "NRF_VMC_RETENTION_S11"], [203, 1, 1, "c.nrf_vmc_retention_t.NRF_VMC_RETENTION_S12", "NRF_VMC_RETENTION_S12"], [203, 1, 1, "c.nrf_vmc_retention_t.NRF_VMC_RETENTION_S13", "NRF_VMC_RETENTION_S13"], [203, 1, 1, "c.nrf_vmc_retention_t.NRF_VMC_RETENTION_S14", "NRF_VMC_RETENTION_S14"], [203, 1, 1, "c.nrf_vmc_retention_t.NRF_VMC_RETENTION_S15", "NRF_VMC_RETENTION_S15"], [203, 1, 1, "c.nrf_vmc_retention_t.NRF_VMC_RETENTION_S2", "NRF_VMC_RETENTION_S2"], [203, 1, 1, "c.nrf_vmc_retention_t.NRF_VMC_RETENTION_S3", "NRF_VMC_RETENTION_S3"], [203, 1, 1, "c.nrf_vmc_retention_t.NRF_VMC_RETENTION_S4", "NRF_VMC_RETENTION_S4"], [203, 1, 1, "c.nrf_vmc_retention_t.NRF_VMC_RETENTION_S5", "NRF_VMC_RETENTION_S5"], [203, 1, 1, "c.nrf_vmc_retention_t.NRF_VMC_RETENTION_S6", "NRF_VMC_RETENTION_S6"], [203, 1, 1, "c.nrf_vmc_retention_t.NRF_VMC_RETENTION_S7", "NRF_VMC_RETENTION_S7"], [203, 1, 1, "c.nrf_vmc_retention_t.NRF_VMC_RETENTION_S8", "NRF_VMC_RETENTION_S8"], [203, 1, 1, "c.nrf_vmc_retention_t.NRF_VMC_RETENTION_S9", "NRF_VMC_RETENTION_S9"], [210, 0, 1, "c.NRF_VPR_ALL_CHANNELS_INT_MASK", "NRF_VPR_ALL_CHANNELS_INT_MASK"], [205, 0, 1, "c.NRF_VPR_CLIC_INT_TO_PRIO", "NRF_VPR_CLIC_INT_TO_PRIO"], [205, 0, 1, "c.NRF_VPR_CLIC_IRQ_COUNT", "NRF_VPR_CLIC_IRQ_COUNT"], [205, 1, 1, "c.nrf_vpr_clic_mode_t.NRF_VPR_CLIC_MODE_M", "NRF_VPR_CLIC_MODE_M"], [205, 1, 1, "c.nrf_vpr_clic_priority_t.NRF_VPR_CLIC_PRIORITY_LEVEL0", "NRF_VPR_CLIC_PRIORITY_LEVEL0"], [205, 1, 1, "c.nrf_vpr_clic_priority_t.NRF_VPR_CLIC_PRIORITY_LEVEL1", "NRF_VPR_CLIC_PRIORITY_LEVEL1"], [205, 1, 1, "c.nrf_vpr_clic_priority_t.NRF_VPR_CLIC_PRIORITY_LEVEL2", "NRF_VPR_CLIC_PRIORITY_LEVEL2"], [205, 1, 1, "c.nrf_vpr_clic_priority_t.NRF_VPR_CLIC_PRIORITY_LEVEL3", "NRF_VPR_CLIC_PRIORITY_LEVEL3"], [205, 1, 1, "c.nrf_vpr_clic_priv_t.NRF_VPR_CLIC_PRIV_MACHINE", "NRF_VPR_CLIC_PRIV_MACHINE"], [205, 1, 1, "c.nrf_vpr_clic_trigger_t.NRF_VPR_CLIC_TRIGGER_EDGE_POS", "NRF_VPR_CLIC_TRIGGER_EDGE_POS"], [206, 1, 1, "c.nrf_vpr_csr_int_threshold_t.NRF_VPR_CSR_INT_THRESHOLD_DISABLED", "NRF_VPR_CSR_INT_THRESHOLD_DISABLED"], [206, 1, 1, "c.nrf_vpr_csr_int_threshold_t.NRF_VPR_CSR_INT_THRESHOLD_LEVEL0", "NRF_VPR_CSR_INT_THRESHOLD_LEVEL0"], [206, 1, 1, "c.nrf_vpr_csr_int_threshold_t.NRF_VPR_CSR_INT_THRESHOLD_LEVEL1", "NRF_VPR_CSR_INT_THRESHOLD_LEVEL1"], [206, 1, 1, "c.nrf_vpr_csr_int_threshold_t.NRF_VPR_CSR_INT_THRESHOLD_LEVEL2", "NRF_VPR_CSR_INT_THRESHOLD_LEVEL2"], [206, 1, 1, "c.nrf_vpr_csr_int_threshold_t.NRF_VPR_CSR_INT_THRESHOLD_LEVEL3", "NRF_VPR_CSR_INT_THRESHOLD_LEVEL3"], [206, 0, 1, "c.NRF_VPR_CSR_NORDIC_KEY_MASK", "NRF_VPR_CSR_NORDIC_KEY_MASK"], [206, 1, 1, "c.nrf_vpr_csr_sleep_state_t.NRF_VPR_CSR_SLEEP_STATE_DEEP_SLEEP", "NRF_VPR_CSR_SLEEP_STATE_DEEP_SLEEP"], [206, 1, 1, "c.nrf_vpr_csr_sleep_state_t.NRF_VPR_CSR_SLEEP_STATE_HIBERNATE", "NRF_VPR_CSR_SLEEP_STATE_HIBERNATE"], [206, 1, 1, "c.nrf_vpr_csr_sleep_state_t.NRF_VPR_CSR_SLEEP_STATE_RESET", "NRF_VPR_CSR_SLEEP_STATE_RESET"], [206, 1, 1, "c.nrf_vpr_csr_sleep_state_t.NRF_VPR_CSR_SLEEP_STATE_SLEEP", "NRF_VPR_CSR_SLEEP_STATE_SLEEP"], [206, 1, 1, "c.nrf_vpr_csr_sleep_state_t.NRF_VPR_CSR_SLEEP_STATE_WAIT", "NRF_VPR_CSR_SLEEP_STATE_WAIT"], [206, 1, 1, "c.nrf_vpr_csr_trap_cause_t.NRF_VPR_CSR_TRAP_CAUSE_BREAKPOINT", "NRF_VPR_CSR_TRAP_CAUSE_BREAKPOINT"], [206, 1, 1, "c.nrf_vpr_csr_trap_cause_t.NRF_VPR_CSR_TRAP_CAUSE_ECALL_M", "NRF_VPR_CSR_TRAP_CAUSE_ECALL_M"], [206, 1, 1, "c.nrf_vpr_csr_trap_cause_t.NRF_VPR_CSR_TRAP_CAUSE_INSTR_ACCESS_FAULT", "NRF_VPR_CSR_TRAP_CAUSE_INSTR_ACCESS_FAULT"], [206, 1, 1, "c.nrf_vpr_csr_trap_cause_t.NRF_VPR_CSR_TRAP_CAUSE_INSTR_ADDR_MISALIGNED", "NRF_VPR_CSR_TRAP_CAUSE_INSTR_ADDR_MISALIGNED"], [206, 1, 1, "c.nrf_vpr_csr_trap_cause_t.NRF_VPR_CSR_TRAP_CAUSE_INSTR_ILLEGAL", "NRF_VPR_CSR_TRAP_CAUSE_INSTR_ILLEGAL"], [206, 1, 1, "c.nrf_vpr_csr_trap_cause_t.NRF_VPR_CSR_TRAP_CAUSE_LOAD_ACCESS_FAULT", "NRF_VPR_CSR_TRAP_CAUSE_LOAD_ACCESS_FAULT"], [206, 1, 1, "c.nrf_vpr_csr_trap_cause_t.NRF_VPR_CSR_TRAP_CAUSE_LOAD_ADDR_MISALIGNED", "NRF_VPR_CSR_TRAP_CAUSE_LOAD_ADDR_MISALIGNED"], [206, 1, 1, "c.nrf_vpr_csr_trap_cause_t.NRF_VPR_CSR_TRAP_CAUSE_LOAD_TIMEOUT_FAULT", "NRF_VPR_CSR_TRAP_CAUSE_LOAD_TIMEOUT_FAULT"], [206, 1, 1, "c.nrf_vpr_csr_trap_cause_t.NRF_VPR_CSR_TRAP_CAUSE_STACKING_BUS_FAULT", "NRF_VPR_CSR_TRAP_CAUSE_STACKING_BUS_FAULT"], [206, 1, 1, "c.nrf_vpr_csr_trap_cause_t.NRF_VPR_CSR_TRAP_CAUSE_STACKING_UNALIGNED", "NRF_VPR_CSR_TRAP_CAUSE_STACKING_UNALIGNED"], [206, 1, 1, "c.nrf_vpr_csr_trap_cause_t.NRF_VPR_CSR_TRAP_CAUSE_STACKING_UNALIGNED_EX", "NRF_VPR_CSR_TRAP_CAUSE_STACKING_UNALIGNED_EX"], [206, 1, 1, "c.nrf_vpr_csr_trap_cause_t.NRF_VPR_CSR_TRAP_CAUSE_STORE_ACCESS_FAULT", "NRF_VPR_CSR_TRAP_CAUSE_STORE_ACCESS_FAULT"], [206, 1, 1, "c.nrf_vpr_csr_trap_cause_t.NRF_VPR_CSR_TRAP_CAUSE_STORE_ADDR_MISALIGNED", "NRF_VPR_CSR_TRAP_CAUSE_STORE_ADDR_MISALIGNED"], [206, 1, 1, "c.nrf_vpr_csr_trap_cause_t.NRF_VPR_CSR_TRAP_CAUSE_STORE_TIMEOUT_FAULT", "NRF_VPR_CSR_TRAP_CAUSE_STORE_TIMEOUT_FAULT"], [206, 1, 1, "c.nrf_vpr_csr_trap_cause_t.NRF_VPR_CSR_TRAP_CAUSE_UNSTACKING_BUS_FAULT", "NRF_VPR_CSR_TRAP_CAUSE_UNSTACKING_BUS_FAULT"], [206, 1, 1, "c.nrf_vpr_csr_trap_cause_t.NRF_VPR_CSR_TRAP_CAUSE_UNSTACKING_UNALIGNED", "NRF_VPR_CSR_TRAP_CAUSE_UNSTACKING_UNALIGNED"], [206, 1, 1, "c.nrf_vpr_csr_trap_cause_t.NRF_VPR_CSR_TRAP_CAUSE_VECTOR_FAULT", "NRF_VPR_CSR_TRAP_CAUSE_VECTOR_FAULT"], [207, 0, 1, "c.NRF_VPR_CSR_VEVIF_EVENT_TASK_COUNT", "NRF_VPR_CSR_VEVIF_EVENT_TASK_COUNT"], [208, 1, 1, "c.nrf_vpr_csr_vio_mode_in_t.NRF_VPR_CSR_VIO_MODE_IN_CONTINUOUS", "NRF_VPR_CSR_VIO_MODE_IN_CONTINUOUS"], [208, 1, 1, "c.nrf_vpr_csr_vio_mode_in_t.NRF_VPR_CSR_VIO_MODE_IN_EVENT", "NRF_VPR_CSR_VIO_MODE_IN_EVENT"], [208, 1, 1, "c.nrf_vpr_csr_vio_out_shift_t.NRF_VPR_CSR_VIO_OUT_SHIFT_1", "NRF_VPR_CSR_VIO_OUT_SHIFT_1"], [208, 1, 1, "c.nrf_vpr_csr_vio_out_shift_t.NRF_VPR_CSR_VIO_OUT_SHIFT_16", "NRF_VPR_CSR_VIO_OUT_SHIFT_16"], [208, 1, 1, "c.nrf_vpr_csr_vio_out_shift_t.NRF_VPR_CSR_VIO_OUT_SHIFT_2", "NRF_VPR_CSR_VIO_OUT_SHIFT_2"], [208, 1, 1, "c.nrf_vpr_csr_vio_out_shift_t.NRF_VPR_CSR_VIO_OUT_SHIFT_4", "NRF_VPR_CSR_VIO_OUT_SHIFT_4"], [208, 1, 1, "c.nrf_vpr_csr_vio_out_shift_t.NRF_VPR_CSR_VIO_OUT_SHIFT_8", "NRF_VPR_CSR_VIO_OUT_SHIFT_8"], [209, 1, 1, "c.nrf_vpr_csr_vtim_count_t.NRF_VPR_CSR_VTIM_COUNT_RELOAD", "NRF_VPR_CSR_VTIM_COUNT_RELOAD"], [209, 1, 1, "c.nrf_vpr_csr_vtim_count_t.NRF_VPR_CSR_VTIM_COUNT_STOP", "NRF_VPR_CSR_VTIM_COUNT_STOP"], [209, 1, 1, "c.nrf_vpr_csr_vtim_count_t.NRF_VPR_CSR_VTIM_COUNT_TRIGGER_COMBINED", "NRF_VPR_CSR_VTIM_COUNT_TRIGGER_COMBINED"], [209, 1, 1, "c.nrf_vpr_csr_vtim_count_t.NRF_VPR_CSR_VTIM_COUNT_WRAP", "NRF_VPR_CSR_VTIM_COUNT_WRAP"], [210, 1, 1, "c.nrf_vpr_dmcontrol_t.NRF_VPR_DMCONTROL_DMACTIVE", "NRF_VPR_DMCONTROL_DMACTIVE"], [210, 1, 1, "c.nrf_vpr_dmcontrol_mask_t.NRF_VPR_DMCONTROL_DMACTIVE_MASK", "NRF_VPR_DMCONTROL_DMACTIVE_MASK"], [210, 1, 1, "c.nrf_vpr_dmcontrol_t.NRF_VPR_DMCONTROL_NDMRESET", "NRF_VPR_DMCONTROL_NDMRESET"], [210, 1, 1, "c.nrf_vpr_dmcontrol_mask_t.NRF_VPR_DMCONTROL_NDMRESET_MASK", "NRF_VPR_DMCONTROL_NDMRESET_MASK"], [210, 0, 1, "c.NRF_VPR_EVENTS_TRIGGERED_COUNT", "NRF_VPR_EVENTS_TRIGGERED_COUNT"], [210, 0, 1, "c.NRF_VPR_EVENTS_TRIGGERED_MAX", "NRF_VPR_EVENTS_TRIGGERED_MAX"], [210, 0, 1, "c.NRF_VPR_EVENTS_TRIGGERED_MIN", "NRF_VPR_EVENTS_TRIGGERED_MIN"], [210, 1, 1, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_0", "NRF_VPR_EVENT_TRIGGERED_0"], [210, 1, 1, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_1", "NRF_VPR_EVENT_TRIGGERED_1"], [210, 1, 1, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_10", "NRF_VPR_EVENT_TRIGGERED_10"], [210, 1, 1, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_11", "NRF_VPR_EVENT_TRIGGERED_11"], [210, 1, 1, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_12", "NRF_VPR_EVENT_TRIGGERED_12"], [210, 1, 1, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_13", "NRF_VPR_EVENT_TRIGGERED_13"], [210, 1, 1, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_14", "NRF_VPR_EVENT_TRIGGERED_14"], [210, 1, 1, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_15", "NRF_VPR_EVENT_TRIGGERED_15"], [210, 1, 1, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_16", "NRF_VPR_EVENT_TRIGGERED_16"], [210, 1, 1, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_17", "NRF_VPR_EVENT_TRIGGERED_17"], [210, 1, 1, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_18", "NRF_VPR_EVENT_TRIGGERED_18"], [210, 1, 1, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_19", "NRF_VPR_EVENT_TRIGGERED_19"], [210, 1, 1, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_2", "NRF_VPR_EVENT_TRIGGERED_2"], [210, 1, 1, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_20", "NRF_VPR_EVENT_TRIGGERED_20"], [210, 1, 1, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_21", "NRF_VPR_EVENT_TRIGGERED_21"], [210, 1, 1, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_22", "NRF_VPR_EVENT_TRIGGERED_22"], [210, 1, 1, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_3", "NRF_VPR_EVENT_TRIGGERED_3"], [210, 1, 1, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_4", "NRF_VPR_EVENT_TRIGGERED_4"], [210, 1, 1, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_5", "NRF_VPR_EVENT_TRIGGERED_5"], [210, 1, 1, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_6", "NRF_VPR_EVENT_TRIGGERED_6"], [210, 1, 1, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_7", "NRF_VPR_EVENT_TRIGGERED_7"], [210, 1, 1, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_8", "NRF_VPR_EVENT_TRIGGERED_8"], [210, 1, 1, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_9", "NRF_VPR_EVENT_TRIGGERED_9"], [210, 1, 1, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_0_MASK", "NRF_VPR_INT_TRIGGERED_0_MASK"], [210, 1, 1, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_10_MASK", "NRF_VPR_INT_TRIGGERED_10_MASK"], [210, 1, 1, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_11_MASK", "NRF_VPR_INT_TRIGGERED_11_MASK"], [210, 1, 1, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_12_MASK", "NRF_VPR_INT_TRIGGERED_12_MASK"], [210, 1, 1, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_13_MASK", "NRF_VPR_INT_TRIGGERED_13_MASK"], [210, 1, 1, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_14_MASK", "NRF_VPR_INT_TRIGGERED_14_MASK"], [210, 1, 1, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_15_MASK", "NRF_VPR_INT_TRIGGERED_15_MASK"], [210, 1, 1, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_16_MASK", "NRF_VPR_INT_TRIGGERED_16_MASK"], [210, 1, 1, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_17_MASK", "NRF_VPR_INT_TRIGGERED_17_MASK"], [210, 1, 1, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_18_MASK", "NRF_VPR_INT_TRIGGERED_18_MASK"], [210, 1, 1, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_19_MASK", "NRF_VPR_INT_TRIGGERED_19_MASK"], [210, 1, 1, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_1_MASK", "NRF_VPR_INT_TRIGGERED_1_MASK"], [210, 1, 1, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_20_MASK", "NRF_VPR_INT_TRIGGERED_20_MASK"], [210, 1, 1, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_21_MASK", "NRF_VPR_INT_TRIGGERED_21_MASK"], [210, 1, 1, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_22_MASK", "NRF_VPR_INT_TRIGGERED_22_MASK"], [210, 1, 1, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_2_MASK", "NRF_VPR_INT_TRIGGERED_2_MASK"], [210, 1, 1, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_3_MASK", "NRF_VPR_INT_TRIGGERED_3_MASK"], [210, 1, 1, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_4_MASK", "NRF_VPR_INT_TRIGGERED_4_MASK"], [210, 1, 1, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_5_MASK", "NRF_VPR_INT_TRIGGERED_5_MASK"], [210, 1, 1, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_6_MASK", "NRF_VPR_INT_TRIGGERED_6_MASK"], [210, 1, 1, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_7_MASK", "NRF_VPR_INT_TRIGGERED_7_MASK"], [210, 1, 1, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_8_MASK", "NRF_VPR_INT_TRIGGERED_8_MASK"], [210, 1, 1, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_9_MASK", "NRF_VPR_INT_TRIGGERED_9_MASK"], [210, 0, 1, "c.NRF_VPR_TASKS_TRIGGER_MAX", "NRF_VPR_TASKS_TRIGGER_MAX"], [210, 0, 1, "c.NRF_VPR_TASKS_TRIGGER_MIN", "NRF_VPR_TASKS_TRIGGER_MIN"], [210, 1, 1, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_0", "NRF_VPR_TASK_TRIGGER_0"], [210, 1, 1, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_1", "NRF_VPR_TASK_TRIGGER_1"], [210, 1, 1, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_10", "NRF_VPR_TASK_TRIGGER_10"], [210, 1, 1, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_11", "NRF_VPR_TASK_TRIGGER_11"], [210, 1, 1, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_12", "NRF_VPR_TASK_TRIGGER_12"], [210, 1, 1, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_13", "NRF_VPR_TASK_TRIGGER_13"], [210, 1, 1, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_14", "NRF_VPR_TASK_TRIGGER_14"], [210, 1, 1, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_15", "NRF_VPR_TASK_TRIGGER_15"], [210, 1, 1, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_16", "NRF_VPR_TASK_TRIGGER_16"], [210, 1, 1, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_17", "NRF_VPR_TASK_TRIGGER_17"], [210, 1, 1, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_18", "NRF_VPR_TASK_TRIGGER_18"], [210, 1, 1, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_19", "NRF_VPR_TASK_TRIGGER_19"], [210, 1, 1, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_2", "NRF_VPR_TASK_TRIGGER_2"], [210, 1, 1, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_20", "NRF_VPR_TASK_TRIGGER_20"], [210, 1, 1, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_21", "NRF_VPR_TASK_TRIGGER_21"], [210, 1, 1, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_22", "NRF_VPR_TASK_TRIGGER_22"], [210, 1, 1, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_3", "NRF_VPR_TASK_TRIGGER_3"], [210, 1, 1, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_4", "NRF_VPR_TASK_TRIGGER_4"], [210, 1, 1, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_5", "NRF_VPR_TASK_TRIGGER_5"], [210, 1, 1, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_6", "NRF_VPR_TASK_TRIGGER_6"], [210, 1, 1, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_7", "NRF_VPR_TASK_TRIGGER_7"], [210, 1, 1, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_8", "NRF_VPR_TASK_TRIGGER_8"], [210, 1, 1, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_9", "NRF_VPR_TASK_TRIGGER_9"], [210, 0, 1, "c.NRF_VPR_TASK_TRIGGER_ALL_MASK", "NRF_VPR_TASK_TRIGGER_ALL_MASK"], [216, 1, 1, "c.nrf_wdt_behaviour_mask_t.NRF_WDT_BEHAVIOUR_RUN_HALT_MASK", "NRF_WDT_BEHAVIOUR_RUN_HALT_MASK"], [216, 1, 1, "c.nrf_wdt_behaviour_mask_t.NRF_WDT_BEHAVIOUR_RUN_SLEEP_MASK", "NRF_WDT_BEHAVIOUR_RUN_SLEEP_MASK"], [216, 1, 1, "c.nrf_wdt_behaviour_mask_t.NRF_WDT_BEHAVIOUR_STOP_ENABLE_MASK", "NRF_WDT_BEHAVIOUR_STOP_ENABLE_MASK"], [216, 0, 1, "c.NRF_WDT_CHANNEL_NUMBER", "NRF_WDT_CHANNEL_NUMBER"], [216, 1, 1, "c.nrf_wdt_event_t.NRF_WDT_EVENT_STOPPED", "NRF_WDT_EVENT_STOPPED"], [216, 1, 1, "c.nrf_wdt_event_t.NRF_WDT_EVENT_TIMEOUT", "NRF_WDT_EVENT_TIMEOUT"], [216, 0, 1, "c.NRF_WDT_HAS_NMI", "NRF_WDT_HAS_NMI"], [216, 0, 1, "c.NRF_WDT_HAS_STOP", "NRF_WDT_HAS_STOP"], [216, 0, 1, "c.NRF_WDT_INST_GET", "NRF_WDT_INST_GET"], [216, 1, 1, "c.nrf_wdt_int_mask_t.NRF_WDT_INT_STOPPED_MASK", "NRF_WDT_INT_STOPPED_MASK"], [216, 1, 1, "c.nrf_wdt_int_mask_t.NRF_WDT_INT_TIMEOUT_MASK", "NRF_WDT_INT_TIMEOUT_MASK"], [216, 1, 1, "c.nrf_wdt_rr_register_t.NRF_WDT_RR0", "NRF_WDT_RR0"], [216, 1, 1, "c.nrf_wdt_rr_register_mask_t.NRF_WDT_RR0_MASK", "NRF_WDT_RR0_MASK"], [216, 1, 1, "c.nrf_wdt_rr_register_t.NRF_WDT_RR1", "NRF_WDT_RR1"], [216, 1, 1, "c.nrf_wdt_rr_register_mask_t.NRF_WDT_RR1_MASK", "NRF_WDT_RR1_MASK"], [216, 1, 1, "c.nrf_wdt_rr_register_t.NRF_WDT_RR2", "NRF_WDT_RR2"], [216, 1, 1, "c.nrf_wdt_rr_register_mask_t.NRF_WDT_RR2_MASK", "NRF_WDT_RR2_MASK"], [216, 1, 1, "c.nrf_wdt_rr_register_t.NRF_WDT_RR3", "NRF_WDT_RR3"], [216, 1, 1, "c.nrf_wdt_rr_register_mask_t.NRF_WDT_RR3_MASK", "NRF_WDT_RR3_MASK"], [216, 1, 1, "c.nrf_wdt_rr_register_t.NRF_WDT_RR4", "NRF_WDT_RR4"], [216, 1, 1, "c.nrf_wdt_rr_register_mask_t.NRF_WDT_RR4_MASK", "NRF_WDT_RR4_MASK"], [216, 1, 1, "c.nrf_wdt_rr_register_t.NRF_WDT_RR5", "NRF_WDT_RR5"], [216, 1, 1, "c.nrf_wdt_rr_register_mask_t.NRF_WDT_RR5_MASK", "NRF_WDT_RR5_MASK"], [216, 1, 1, "c.nrf_wdt_rr_register_t.NRF_WDT_RR6", "NRF_WDT_RR6"], [216, 1, 1, "c.nrf_wdt_rr_register_mask_t.NRF_WDT_RR6_MASK", "NRF_WDT_RR6_MASK"], [216, 1, 1, "c.nrf_wdt_rr_register_t.NRF_WDT_RR7", "NRF_WDT_RR7"], [216, 1, 1, "c.nrf_wdt_rr_register_mask_t.NRF_WDT_RR7_MASK", "NRF_WDT_RR7_MASK"], [216, 0, 1, "c.NRF_WDT_RR_VALUE", "NRF_WDT_RR_VALUE"], [216, 1, 1, "c.nrf_wdt_task_t.NRF_WDT_TASK_START", "NRF_WDT_TASK_START"], [216, 1, 1, "c.nrf_wdt_task_t.NRF_WDT_TASK_STOP", "NRF_WDT_TASK_STOP"], [98, 0, 1, "c.OSCILLATORS_HFXO_CAP_CALCULATE", "OSCILLATORS_HFXO_CAP_CALCULATE"], [98, 0, 1, "c.OSCILLATORS_LFXO_CAP_CALCULATE", "OSCILLATORS_LFXO_CAP_CALCULATE"], [175, 0, 1, "c.TIMER_BIT_WIDTH_MAX", "TIMER_BIT_WIDTH_MAX"], [175, 0, 1, "c.TIMER_MAX_SIZE", "TIMER_MAX_SIZE"], [2, 2, 1, "c.nrf_aar_addr_pointer_get", "nrf_aar_addr_pointer_get"], [2, 2, 1, "c.nrf_aar_addr_pointer_set", "nrf_aar_addr_pointer_set"], [2, 2, 1, "c.nrf_aar_disable", "nrf_aar_disable"], [2, 2, 1, "c.nrf_aar_enable", "nrf_aar_enable"], [2, 2, 1, "c.nrf_aar_error_get", "nrf_aar_error_get"], [2, 4, 1, "c.nrf_aar_error_t", "nrf_aar_error_t"], [2, 2, 1, "c.nrf_aar_event_address_get", "nrf_aar_event_address_get"], [2, 2, 1, "c.nrf_aar_event_check", "nrf_aar_event_check"], [2, 2, 1, "c.nrf_aar_event_clear", "nrf_aar_event_clear"], [2, 4, 1, "c.nrf_aar_event_t", "nrf_aar_event_t"], [2, 2, 1, "c.nrf_aar_in_ptr_get", "nrf_aar_in_ptr_get"], [2, 2, 1, "c.nrf_aar_in_ptr_set", "nrf_aar_in_ptr_set"], [2, 2, 1, "c.nrf_aar_int_disable", "nrf_aar_int_disable"], [2, 2, 1, "c.nrf_aar_int_enable", "nrf_aar_int_enable"], [2, 2, 1, "c.nrf_aar_int_enable_check", "nrf_aar_int_enable_check"], [2, 4, 1, "c.nrf_aar_int_mask_t", "nrf_aar_int_mask_t"], [2, 2, 1, "c.nrf_aar_irk_number_get", "nrf_aar_irk_number_get"], [2, 2, 1, "c.nrf_aar_irk_number_set", "nrf_aar_irk_number_set"], [2, 2, 1, "c.nrf_aar_irk_pointer_get", "nrf_aar_irk_pointer_get"], [2, 2, 1, "c.nrf_aar_irk_pointer_set", "nrf_aar_irk_pointer_set"], [2, 2, 1, "c.nrf_aar_maxresolved_get", "nrf_aar_maxresolved_get"], [2, 2, 1, "c.nrf_aar_maxresolved_set", "nrf_aar_maxresolved_set"], [2, 2, 1, "c.nrf_aar_out_amount_get", "nrf_aar_out_amount_get"], [2, 2, 1, "c.nrf_aar_out_ptr_get", "nrf_aar_out_ptr_get"], [2, 2, 1, "c.nrf_aar_out_ptr_set", "nrf_aar_out_ptr_set"], [2, 2, 1, "c.nrf_aar_publish_clear", "nrf_aar_publish_clear"], [2, 2, 1, "c.nrf_aar_publish_set", "nrf_aar_publish_set"], [2, 2, 1, "c.nrf_aar_resolution_status_get", "nrf_aar_resolution_status_get"], [2, 2, 1, "c.nrf_aar_scratch_pointer_get", "nrf_aar_scratch_pointer_get"], [2, 2, 1, "c.nrf_aar_scratch_pointer_set", "nrf_aar_scratch_pointer_set"], [2, 2, 1, "c.nrf_aar_subscribe_clear", "nrf_aar_subscribe_clear"], [2, 2, 1, "c.nrf_aar_subscribe_set", "nrf_aar_subscribe_set"], [2, 2, 1, "c.nrf_aar_task_address_get", "nrf_aar_task_address_get"], [2, 4, 1, "c.nrf_aar_task_t", "nrf_aar_task_t"], [2, 2, 1, "c.nrf_aar_task_trigger", "nrf_aar_task_trigger"], [4, 4, 1, "c.nrf_acl_perm_t", "nrf_acl_perm_t"], [4, 2, 1, "c.nrf_acl_region_address_get", "nrf_acl_region_address_get"], [4, 2, 1, "c.nrf_acl_region_perm_get", "nrf_acl_region_perm_get"], [4, 2, 1, "c.nrf_acl_region_set", "nrf_acl_region_set"], [4, 2, 1, "c.nrf_acl_region_size_get", "nrf_acl_region_size_get"], [7, 2, 1, "c.nrf_adc_busy_check", "nrf_adc_busy_check"], [7, 4, 1, "c.nrf_adc_config_extref_t", "nrf_adc_config_extref_t"], [7, 4, 1, "c.nrf_adc_config_input_t", "nrf_adc_config_input_t"], [7, 4, 1, "c.nrf_adc_config_reference_t", "nrf_adc_config_reference_t"], [7, 4, 1, "c.nrf_adc_config_resolution_t", "nrf_adc_config_resolution_t"], [7, 4, 1, "c.nrf_adc_config_scaling_t", "nrf_adc_config_scaling_t"], [7, 5, 1, "c.nrf_adc_config_t", "nrf_adc_config_t"], [7, 2, 1, "c.nrf_adc_disable", "nrf_adc_disable"], [7, 2, 1, "c.nrf_adc_enable", "nrf_adc_enable"], [7, 2, 1, "c.nrf_adc_enable_check", "nrf_adc_enable_check"], [7, 2, 1, "c.nrf_adc_event_address_get", "nrf_adc_event_address_get"], [7, 2, 1, "c.nrf_adc_event_check", "nrf_adc_event_check"], [7, 2, 1, "c.nrf_adc_event_clear", "nrf_adc_event_clear"], [7, 4, 1, "c.nrf_adc_event_t", "nrf_adc_event_t"], [7, 2, 1, "c.nrf_adc_init", "nrf_adc_init"], [7, 2, 1, "c.nrf_adc_int_disable", "nrf_adc_int_disable"], [7, 2, 1, "c.nrf_adc_int_enable", "nrf_adc_int_enable"], [7, 2, 1, "c.nrf_adc_int_enable_check", "nrf_adc_int_enable_check"], [7, 4, 1, "c.nrf_adc_int_mask_t", "nrf_adc_int_mask_t"], [7, 2, 1, "c.nrf_adc_result_get", "nrf_adc_result_get"], [7, 2, 1, "c.nrf_adc_task_address_get", "nrf_adc_task_address_get"], [7, 4, 1, "c.nrf_adc_task_t", "nrf_adc_task_t"], [7, 2, 1, "c.nrf_adc_task_trigger", "nrf_adc_task_trigger"], [7, 7, 1, "c.nrf_adc_value_t", "nrf_adc_value_t"], [243, 2, 1, "c.nrf_apb_interconnect_by_idx_global_get", "nrf_apb_interconnect_by_idx_global_get"], [9, 2, 1, "c.nrf_auxpll_config_get", "nrf_auxpll_config_get"], [9, 2, 1, "c.nrf_auxpll_config_set", "nrf_auxpll_config_set"], [9, 5, 1, "c.nrf_auxpll_config_t", "nrf_auxpll_config_t"], [9, 2, 1, "c.nrf_auxpll_ctrl_freqinc_get", "nrf_auxpll_ctrl_freqinc_get"], [9, 2, 1, "c.nrf_auxpll_ctrl_freqinc_period_get", "nrf_auxpll_ctrl_freqinc_period_get"], [9, 2, 1, "c.nrf_auxpll_ctrl_freqinc_period_set", "nrf_auxpll_ctrl_freqinc_period_set"], [9, 2, 1, "c.nrf_auxpll_ctrl_freqinc_set", "nrf_auxpll_ctrl_freqinc_set"], [9, 2, 1, "c.nrf_auxpll_ctrl_frequency_get", "nrf_auxpll_ctrl_frequency_get"], [9, 2, 1, "c.nrf_auxpll_ctrl_frequency_set", "nrf_auxpll_ctrl_frequency_set"], [9, 2, 1, "c.nrf_auxpll_ctrl_mode_get", "nrf_auxpll_ctrl_mode_get"], [9, 2, 1, "c.nrf_auxpll_ctrl_mode_set", "nrf_auxpll_ctrl_mode_set"], [9, 4, 1, "c.nrf_auxpll_ctrl_mode_t", "nrf_auxpll_ctrl_mode_t"], [9, 2, 1, "c.nrf_auxpll_ctrl_outsel_get", "nrf_auxpll_ctrl_outsel_get"], [9, 2, 1, "c.nrf_auxpll_ctrl_outsel_set", "nrf_auxpll_ctrl_outsel_set"], [9, 4, 1, "c.nrf_auxpll_ctrl_outsel_t", "nrf_auxpll_ctrl_outsel_t"], [9, 4, 1, "c.nrf_auxpll_divider_range_t", "nrf_auxpll_divider_range_t"], [9, 2, 1, "c.nrf_auxpll_event_address_get", "nrf_auxpll_event_address_get"], [9, 2, 1, "c.nrf_auxpll_event_check", "nrf_auxpll_event_check"], [9, 2, 1, "c.nrf_auxpll_event_clear", "nrf_auxpll_event_clear"], [9, 4, 1, "c.nrf_auxpll_event_t", "nrf_auxpll_event_t"], [9, 2, 1, "c.nrf_auxpll_int_disable", "nrf_auxpll_int_disable"], [9, 2, 1, "c.nrf_auxpll_int_enable", "nrf_auxpll_int_enable"], [9, 2, 1, "c.nrf_auxpll_int_enable_check", "nrf_auxpll_int_enable_check"], [9, 4, 1, "c.nrf_auxpll_int_mask_t", "nrf_auxpll_int_mask_t"], [9, 2, 1, "c.nrf_auxpll_int_pending_check", "nrf_auxpll_int_pending_check"], [9, 2, 1, "c.nrf_auxpll_lock", "nrf_auxpll_lock"], [9, 2, 1, "c.nrf_auxpll_lock_check", "nrf_auxpll_lock_check"], [9, 2, 1, "c.nrf_auxpll_status_get", "nrf_auxpll_status_get"], [9, 4, 1, "c.nrf_auxpll_status_mask_t", "nrf_auxpll_status_mask_t"], [9, 2, 1, "c.nrf_auxpll_task_address_get", "nrf_auxpll_task_address_get"], [9, 4, 1, "c.nrf_auxpll_task_t", "nrf_auxpll_task_t"], [9, 2, 1, "c.nrf_auxpll_task_trigger", "nrf_auxpll_task_trigger"], [9, 2, 1, "c.nrf_auxpll_trim_ctune_get", "nrf_auxpll_trim_ctune_get"], [9, 2, 1, "c.nrf_auxpll_trim_ctune_set", "nrf_auxpll_trim_ctune_set"], [9, 2, 1, "c.nrf_auxpll_unlock", "nrf_auxpll_unlock"], [11, 2, 1, "c.nrf_bellboard_event_address_get", "nrf_bellboard_event_address_get"], [11, 2, 1, "c.nrf_bellboard_event_check", "nrf_bellboard_event_check"], [11, 2, 1, "c.nrf_bellboard_event_clear", "nrf_bellboard_event_clear"], [11, 4, 1, "c.nrf_bellboard_event_t", "nrf_bellboard_event_t"], [11, 2, 1, "c.nrf_bellboard_int_disable", "nrf_bellboard_int_disable"], [11, 2, 1, "c.nrf_bellboard_int_enable", "nrf_bellboard_int_enable"], [11, 2, 1, "c.nrf_bellboard_int_enable_check", "nrf_bellboard_int_enable_check"], [11, 4, 1, "c.nrf_bellboard_int_mask_t", "nrf_bellboard_int_mask_t"], [11, 2, 1, "c.nrf_bellboard_int_pending_get", "nrf_bellboard_int_pending_get"], [11, 2, 1, "c.nrf_bellboard_task_address_get", "nrf_bellboard_task_address_get"], [11, 4, 1, "c.nrf_bellboard_task_t", "nrf_bellboard_task_t"], [11, 2, 1, "c.nrf_bellboard_task_trigger", "nrf_bellboard_task_trigger"], [11, 2, 1, "c.nrf_bellboard_trigger_task_get", "nrf_bellboard_trigger_task_get"], [11, 2, 1, "c.nrf_bellboard_triggered_event_get", "nrf_bellboard_triggered_event_get"], [233, 2, 1, "c.nrf_bitmask_bit_clear", "nrf_bitmask_bit_clear"], [233, 2, 1, "c.nrf_bitmask_bit_is_set", "nrf_bitmask_bit_is_set"], [233, 2, 1, "c.nrf_bitmask_bit_set", "nrf_bitmask_bit_set"], [233, 2, 1, "c.nrf_bitmask_masks_and", "nrf_bitmask_masks_and"], [233, 2, 1, "c.nrf_bitmask_masks_or", "nrf_bitmask_masks_or"], [14, 2, 1, "c.nrf_bprot_nvm_blocks_protection_enable", "nrf_bprot_nvm_blocks_protection_enable"], [14, 2, 1, "c.nrf_bprot_nvm_protection_in_debug_set", "nrf_bprot_nvm_protection_in_debug_set"], [16, 2, 1, "c.nrf_cache_busy_check", "nrf_cache_busy_check"], [16, 2, 1, "c.nrf_cache_data_get", "nrf_cache_data_get"], [16, 2, 1, "c.nrf_cache_data_hit_counter_get", "nrf_cache_data_hit_counter_get"], [16, 2, 1, "c.nrf_cache_data_miss_counter_get", "nrf_cache_data_miss_counter_get"], [16, 2, 1, "c.nrf_cache_data_unit_validity_check", "nrf_cache_data_unit_validity_check"], [16, 2, 1, "c.nrf_cache_disable", "nrf_cache_disable"], [16, 2, 1, "c.nrf_cache_enable", "nrf_cache_enable"], [16, 2, 1, "c.nrf_cache_enable_check", "nrf_cache_enable_check"], [16, 2, 1, "c.nrf_cache_erase", "nrf_cache_erase"], [16, 2, 1, "c.nrf_cache_erase_status_check", "nrf_cache_erase_status_check"], [16, 2, 1, "c.nrf_cache_erase_status_clear", "nrf_cache_erase_status_clear"], [16, 2, 1, "c.nrf_cache_instruction_hit_counter_get", "nrf_cache_instruction_hit_counter_get"], [16, 2, 1, "c.nrf_cache_instruction_miss_counter_get", "nrf_cache_instruction_miss_counter_get"], [16, 2, 1, "c.nrf_cache_invalidate", "nrf_cache_invalidate"], [16, 2, 1, "c.nrf_cache_is_data_unit_dirty_check", "nrf_cache_is_data_unit_dirty_check"], [16, 2, 1, "c.nrf_cache_line_validity_check", "nrf_cache_line_validity_check"], [16, 2, 1, "c.nrf_cache_lineaddr_get", "nrf_cache_lineaddr_get"], [16, 2, 1, "c.nrf_cache_lineaddr_set", "nrf_cache_lineaddr_set"], [16, 2, 1, "c.nrf_cache_mru_get", "nrf_cache_mru_get"], [16, 2, 1, "c.nrf_cache_profiling_counters_clear", "nrf_cache_profiling_counters_clear"], [16, 2, 1, "c.nrf_cache_profiling_set", "nrf_cache_profiling_set"], [16, 2, 1, "c.nrf_cache_ram_mode_check", "nrf_cache_ram_mode_check"], [16, 2, 1, "c.nrf_cache_ram_mode_set", "nrf_cache_ram_mode_set"], [16, 2, 1, "c.nrf_cache_ramsize_get", "nrf_cache_ramsize_get"], [16, 2, 1, "c.nrf_cache_ramsize_set", "nrf_cache_ramsize_set"], [16, 4, 1, "c.nrf_cache_ramsize_t", "nrf_cache_ramsize_t"], [16, 2, 1, "c.nrf_cache_read_lock_enable", "nrf_cache_read_lock_enable"], [16, 4, 1, "c.nrf_cache_region_t", "nrf_cache_region_t"], [16, 2, 1, "c.nrf_cache_tag_get", "nrf_cache_tag_get"], [16, 2, 1, "c.nrf_cache_task_address_get", "nrf_cache_task_address_get"], [16, 4, 1, "c.nrf_cache_task_t", "nrf_cache_task_t"], [16, 2, 1, "c.nrf_cache_task_trigger", "nrf_cache_task_trigger"], [16, 2, 1, "c.nrf_cache_update_lock_set", "nrf_cache_update_lock_set"], [18, 2, 1, "c.nrf_ccm_adatamask_get", "nrf_ccm_adatamask_get"], [18, 2, 1, "c.nrf_ccm_adatamask_set", "nrf_ccm_adatamask_set"], [18, 5, 1, "c.nrf_ccm_cnf_t", "nrf_ccm_cnf_t"], [18, 2, 1, "c.nrf_ccm_cnfptr_get", "nrf_ccm_cnfptr_get"], [18, 2, 1, "c.nrf_ccm_cnfptr_set", "nrf_ccm_cnfptr_set"], [18, 5, 1, "c.nrf_ccm_config_t", "nrf_ccm_config_t"], [18, 2, 1, "c.nrf_ccm_configure", "nrf_ccm_configure"], [18, 2, 1, "c.nrf_ccm_datarate_override_get", "nrf_ccm_datarate_override_get"], [18, 2, 1, "c.nrf_ccm_datarate_override_set", "nrf_ccm_datarate_override_set"], [18, 4, 1, "c.nrf_ccm_datarate_t", "nrf_ccm_datarate_t"], [18, 2, 1, "c.nrf_ccm_disable", "nrf_ccm_disable"], [18, 2, 1, "c.nrf_ccm_enable", "nrf_ccm_enable"], [18, 4, 1, "c.nrf_ccm_error_t", "nrf_ccm_error_t"], [18, 2, 1, "c.nrf_ccm_errorstatus_get", "nrf_ccm_errorstatus_get"], [18, 2, 1, "c.nrf_ccm_event_address_get", "nrf_ccm_event_address_get"], [18, 2, 1, "c.nrf_ccm_event_check", "nrf_ccm_event_check"], [18, 2, 1, "c.nrf_ccm_event_clear", "nrf_ccm_event_clear"], [18, 4, 1, "c.nrf_ccm_event_t", "nrf_ccm_event_t"], [18, 2, 1, "c.nrf_ccm_headermask_get", "nrf_ccm_headermask_get"], [18, 2, 1, "c.nrf_ccm_headermask_set", "nrf_ccm_headermask_set"], [18, 2, 1, "c.nrf_ccm_in_amount_get", "nrf_ccm_in_amount_get"], [18, 2, 1, "c.nrf_ccm_in_ptr_get", "nrf_ccm_in_ptr_get"], [18, 2, 1, "c.nrf_ccm_in_ptr_set", "nrf_ccm_in_ptr_set"], [18, 2, 1, "c.nrf_ccm_inptr_get", "nrf_ccm_inptr_get"], [18, 2, 1, "c.nrf_ccm_inptr_set", "nrf_ccm_inptr_set"], [18, 2, 1, "c.nrf_ccm_int_disable", "nrf_ccm_int_disable"], [18, 2, 1, "c.nrf_ccm_int_enable", "nrf_ccm_int_enable"], [18, 2, 1, "c.nrf_ccm_int_enable_check", "nrf_ccm_int_enable_check"], [18, 4, 1, "c.nrf_ccm_int_mask_t", "nrf_ccm_int_mask_t"], [18, 2, 1, "c.nrf_ccm_key_get", "nrf_ccm_key_get"], [18, 2, 1, "c.nrf_ccm_key_set", "nrf_ccm_key_set"], [18, 4, 1, "c.nrf_ccm_length_t", "nrf_ccm_length_t"], [18, 4, 1, "c.nrf_ccm_maclen_t", "nrf_ccm_maclen_t"], [18, 2, 1, "c.nrf_ccm_macstatus_get", "nrf_ccm_macstatus_get"], [18, 2, 1, "c.nrf_ccm_maxpacketsize_set", "nrf_ccm_maxpacketsize_set"], [18, 2, 1, "c.nrf_ccm_micstatus_get", "nrf_ccm_micstatus_get"], [18, 4, 1, "c.nrf_ccm_mode_t", "nrf_ccm_mode_t"], [18, 2, 1, "c.nrf_ccm_nonce_get", "nrf_ccm_nonce_get"], [18, 2, 1, "c.nrf_ccm_nonce_set", "nrf_ccm_nonce_set"], [18, 2, 1, "c.nrf_ccm_out_amount_get", "nrf_ccm_out_amount_get"], [18, 2, 1, "c.nrf_ccm_out_ptr_get", "nrf_ccm_out_ptr_get"], [18, 2, 1, "c.nrf_ccm_out_ptr_set", "nrf_ccm_out_ptr_set"], [18, 2, 1, "c.nrf_ccm_outptr_get", "nrf_ccm_outptr_get"], [18, 2, 1, "c.nrf_ccm_outptr_set", "nrf_ccm_outptr_set"], [18, 4, 1, "c.nrf_ccm_protocol_t", "nrf_ccm_protocol_t"], [18, 2, 1, "c.nrf_ccm_publish_clear", "nrf_ccm_publish_clear"], [18, 2, 1, "c.nrf_ccm_publish_set", "nrf_ccm_publish_set"], [18, 2, 1, "c.nrf_ccm_scratchptr_get", "nrf_ccm_scratchptr_get"], [18, 2, 1, "c.nrf_ccm_scratchptr_set", "nrf_ccm_scratchptr_set"], [18, 4, 1, "c.nrf_ccm_short_mask_t", "nrf_ccm_short_mask_t"], [18, 2, 1, "c.nrf_ccm_shorts_disable", "nrf_ccm_shorts_disable"], [18, 2, 1, "c.nrf_ccm_shorts_enable", "nrf_ccm_shorts_enable"], [18, 2, 1, "c.nrf_ccm_shorts_set", "nrf_ccm_shorts_set"], [18, 2, 1, "c.nrf_ccm_subscribe_clear", "nrf_ccm_subscribe_clear"], [18, 2, 1, "c.nrf_ccm_subscribe_set", "nrf_ccm_subscribe_set"], [18, 2, 1, "c.nrf_ccm_task_address_get", "nrf_ccm_task_address_get"], [18, 4, 1, "c.nrf_ccm_task_t", "nrf_ccm_task_t"], [18, 2, 1, "c.nrf_ccm_task_trigger", "nrf_ccm_task_trigger"], [21, 2, 1, "c.nrf_clock_alwaysrun_active_get", "nrf_clock_alwaysrun_active_get"], [21, 2, 1, "c.nrf_clock_alwaysrun_get", "nrf_clock_alwaysrun_get"], [21, 2, 1, "c.nrf_clock_alwaysrun_set", "nrf_clock_alwaysrun_set"], [21, 2, 1, "c.nrf_clock_cal_timer_timeout_set", "nrf_clock_cal_timer_timeout_set"], [21, 4, 1, "c.nrf_clock_domain_t", "nrf_clock_domain_t"], [21, 2, 1, "c.nrf_clock_event_address_get", "nrf_clock_event_address_get"], [21, 2, 1, "c.nrf_clock_event_check", "nrf_clock_event_check"], [21, 2, 1, "c.nrf_clock_event_clear", "nrf_clock_event_clear"], [21, 4, 1, "c.nrf_clock_event_t", "nrf_clock_event_t"], [21, 2, 1, "c.nrf_clock_hf_is_running", "nrf_clock_hf_is_running"], [21, 2, 1, "c.nrf_clock_hf_src_get", "nrf_clock_hf_src_get"], [21, 2, 1, "c.nrf_clock_hf_src_set", "nrf_clock_hf_src_set"], [21, 2, 1, "c.nrf_clock_hf_start_task_status_get", "nrf_clock_hf_start_task_status_get"], [21, 2, 1, "c.nrf_clock_hfclk192m_div_get", "nrf_clock_hfclk192m_div_get"], [21, 2, 1, "c.nrf_clock_hfclk192m_div_set", "nrf_clock_hfclk192m_div_set"], [21, 2, 1, "c.nrf_clock_hfclk192m_src_get", "nrf_clock_hfclk192m_src_get"], [21, 2, 1, "c.nrf_clock_hfclk192m_src_set", "nrf_clock_hfclk192m_src_set"], [21, 4, 1, "c.nrf_clock_hfclk_div_t", "nrf_clock_hfclk_div_t"], [21, 4, 1, "c.nrf_clock_hfclk_t", "nrf_clock_hfclk_t"], [21, 2, 1, "c.nrf_clock_hfclkaudio_config_get", "nrf_clock_hfclkaudio_config_get"], [21, 2, 1, "c.nrf_clock_hfclkaudio_config_set", "nrf_clock_hfclkaudio_config_set"], [21, 2, 1, "c.nrf_clock_int_disable", "nrf_clock_int_disable"], [21, 2, 1, "c.nrf_clock_int_enable", "nrf_clock_int_enable"], [21, 2, 1, "c.nrf_clock_int_enable_check", "nrf_clock_int_enable_check"], [21, 4, 1, "c.nrf_clock_int_mask_t", "nrf_clock_int_mask_t"], [21, 2, 1, "c.nrf_clock_is_running", "nrf_clock_is_running"], [21, 2, 1, "c.nrf_clock_lf_actv_src_get", "nrf_clock_lf_actv_src_get"], [21, 2, 1, "c.nrf_clock_lf_is_running", "nrf_clock_lf_is_running"], [21, 2, 1, "c.nrf_clock_lf_src_get", "nrf_clock_lf_src_get"], [21, 2, 1, "c.nrf_clock_lf_src_set", "nrf_clock_lf_src_set"], [21, 2, 1, "c.nrf_clock_lf_srccopy_get", "nrf_clock_lf_srccopy_get"], [21, 2, 1, "c.nrf_clock_lf_start_task_status_get", "nrf_clock_lf_start_task_status_get"], [21, 4, 1, "c.nrf_clock_lfclk_t", "nrf_clock_lfclk_t"], [21, 2, 1, "c.nrf_clock_publish_clear", "nrf_clock_publish_clear"], [21, 2, 1, "c.nrf_clock_publish_set", "nrf_clock_publish_set"], [21, 2, 1, "c.nrf_clock_start_task_check", "nrf_clock_start_task_check"], [21, 4, 1, "c.nrf_clock_start_task_status_t", "nrf_clock_start_task_status_t"], [21, 2, 1, "c.nrf_clock_subscribe_clear", "nrf_clock_subscribe_clear"], [21, 2, 1, "c.nrf_clock_subscribe_set", "nrf_clock_subscribe_set"], [21, 2, 1, "c.nrf_clock_task_address_get", "nrf_clock_task_address_get"], [21, 4, 1, "c.nrf_clock_task_t", "nrf_clock_task_t"], [21, 2, 1, "c.nrf_clock_task_trigger", "nrf_clock_task_trigger"], [24, 2, 1, "c.nrf_comp_disable", "nrf_comp_disable"], [24, 2, 1, "c.nrf_comp_enable", "nrf_comp_enable"], [24, 2, 1, "c.nrf_comp_enable_check", "nrf_comp_enable_check"], [24, 2, 1, "c.nrf_comp_event_address_get", "nrf_comp_event_address_get"], [24, 2, 1, "c.nrf_comp_event_check", "nrf_comp_event_check"], [24, 2, 1, "c.nrf_comp_event_clear", "nrf_comp_event_clear"], [24, 4, 1, "c.nrf_comp_event_t", "nrf_comp_event_t"], [24, 2, 1, "c.nrf_comp_ext_ref_set", "nrf_comp_ext_ref_set"], [24, 7, 1, "c.nrf_comp_ext_ref_t", "nrf_comp_ext_ref_t"], [24, 4, 1, "c.nrf_comp_hyst_t", "nrf_comp_hyst_t"], [24, 2, 1, "c.nrf_comp_hysteresis_set", "nrf_comp_hysteresis_set"], [24, 2, 1, "c.nrf_comp_input_select", "nrf_comp_input_select"], [24, 7, 1, "c.nrf_comp_input_t", "nrf_comp_input_t"], [24, 2, 1, "c.nrf_comp_int_disable", "nrf_comp_int_disable"], [24, 2, 1, "c.nrf_comp_int_enable", "nrf_comp_int_enable"], [24, 2, 1, "c.nrf_comp_int_enable_check", "nrf_comp_int_enable_check"], [24, 4, 1, "c.nrf_comp_int_mask_t", "nrf_comp_int_mask_t"], [24, 2, 1, "c.nrf_comp_isource_set", "nrf_comp_isource_set"], [24, 2, 1, "c.nrf_comp_main_mode_set", "nrf_comp_main_mode_set"], [24, 4, 1, "c.nrf_comp_main_mode_t", "nrf_comp_main_mode_t"], [24, 5, 1, "c.nrf_comp_ref_conf_t", "nrf_comp_ref_conf_t"], [24, 2, 1, "c.nrf_comp_ref_set", "nrf_comp_ref_set"], [24, 4, 1, "c.nrf_comp_ref_t", "nrf_comp_ref_t"], [24, 2, 1, "c.nrf_comp_result_get", "nrf_comp_result_get"], [24, 4, 1, "c.nrf_comp_short_mask_t", "nrf_comp_short_mask_t"], [24, 2, 1, "c.nrf_comp_shorts_disable", "nrf_comp_shorts_disable"], [24, 2, 1, "c.nrf_comp_shorts_enable", "nrf_comp_shorts_enable"], [24, 4, 1, "c.nrf_comp_sp_mode_t", "nrf_comp_sp_mode_t"], [24, 2, 1, "c.nrf_comp_speed_mode_set", "nrf_comp_speed_mode_set"], [24, 2, 1, "c.nrf_comp_task_address_get", "nrf_comp_task_address_get"], [24, 4, 1, "c.nrf_comp_task_t", "nrf_comp_task_t"], [24, 2, 1, "c.nrf_comp_task_trigger", "nrf_comp_task_trigger"], [24, 2, 1, "c.nrf_comp_th_set", "nrf_comp_th_set"], [24, 5, 1, "c.nrf_comp_th_t", "nrf_comp_th_t"], [27, 2, 1, "c.nrf_cracen_event_address_get", "nrf_cracen_event_address_get"], [27, 2, 1, "c.nrf_cracen_event_check", "nrf_cracen_event_check"], [27, 2, 1, "c.nrf_cracen_event_clear", "nrf_cracen_event_clear"], [27, 4, 1, "c.nrf_cracen_event_t", "nrf_cracen_event_t"], [27, 2, 1, "c.nrf_cracen_int_disable", "nrf_cracen_int_disable"], [27, 2, 1, "c.nrf_cracen_int_enable", "nrf_cracen_int_enable"], [27, 2, 1, "c.nrf_cracen_int_enable_check", "nrf_cracen_int_enable_check"], [27, 4, 1, "c.nrf_cracen_int_mask_t", "nrf_cracen_int_mask_t"], [27, 2, 1, "c.nrf_cracen_module_disable", "nrf_cracen_module_disable"], [27, 2, 1, "c.nrf_cracen_module_enable", "nrf_cracen_module_enable"], [27, 2, 1, "c.nrf_cracen_module_get", "nrf_cracen_module_get"], [27, 4, 1, "c.nrf_cracen_module_mask_t", "nrf_cracen_module_mask_t"], [27, 2, 1, "c.nrf_cracen_seed_set", "nrf_cracen_seed_set"], [27, 2, 1, "c.nrf_cracen_seedram_lock_check", "nrf_cracen_seedram_lock_check"], [27, 2, 1, "c.nrf_cracen_seedram_lock_enable_set", "nrf_cracen_seedram_lock_enable_set"], [29, 4, 1, "c.nrf_ctrlap_bootmode_t", "nrf_ctrlap_bootmode_t"], [29, 2, 1, "c.nrf_ctrlap_event_address_get", "nrf_ctrlap_event_address_get"], [29, 2, 1, "c.nrf_ctrlap_event_check", "nrf_ctrlap_event_check"], [29, 2, 1, "c.nrf_ctrlap_event_clear", "nrf_ctrlap_event_clear"], [29, 4, 1, "c.nrf_ctrlap_event_t", "nrf_ctrlap_event_t"], [29, 2, 1, "c.nrf_ctrlap_info_get", "nrf_ctrlap_info_get"], [29, 2, 1, "c.nrf_ctrlap_info_set", "nrf_ctrlap_info_set"], [29, 5, 1, "c.nrf_ctrlap_info_t", "nrf_ctrlap_info_t"], [29, 2, 1, "c.nrf_ctrlap_int_disable", "nrf_ctrlap_int_disable"], [29, 2, 1, "c.nrf_ctrlap_int_enable", "nrf_ctrlap_int_enable"], [29, 2, 1, "c.nrf_ctrlap_int_enable_check", "nrf_ctrlap_int_enable_check"], [29, 4, 1, "c.nrf_ctrlap_int_mask_t", "nrf_ctrlap_int_mask_t"], [29, 2, 1, "c.nrf_ctrlap_int_pending_get", "nrf_ctrlap_int_pending_get"], [29, 2, 1, "c.nrf_ctrlap_mailbox_bootmode_get", "nrf_ctrlap_mailbox_bootmode_get"], [29, 2, 1, "c.nrf_ctrlap_mailbox_rxdata_get", "nrf_ctrlap_mailbox_rxdata_get"], [29, 2, 1, "c.nrf_ctrlap_mailbox_rxstatus_pending_check", "nrf_ctrlap_mailbox_rxstatus_pending_check"], [29, 2, 1, "c.nrf_ctrlap_mailbox_txdata_get", "nrf_ctrlap_mailbox_txdata_get"], [29, 2, 1, "c.nrf_ctrlap_mailbox_txdata_set", "nrf_ctrlap_mailbox_txdata_set"], [29, 2, 1, "c.nrf_ctrlap_mailbox_txstatus_pending_check", "nrf_ctrlap_mailbox_txstatus_pending_check"], [31, 2, 1, "c.nrf_dcnf_cpuid_get", "nrf_dcnf_cpuid_get"], [34, 2, 1, "c.nrf_dppi_channel_check", "nrf_dppi_channel_check"], [34, 4, 1, "c.nrf_dppi_channel_group_t", "nrf_dppi_channel_group_t"], [34, 2, 1, "c.nrf_dppi_channel_number_get", "nrf_dppi_channel_number_get"], [34, 2, 1, "c.nrf_dppi_channels_disable", "nrf_dppi_channels_disable"], [34, 2, 1, "c.nrf_dppi_channels_disable_all", "nrf_dppi_channels_disable_all"], [34, 2, 1, "c.nrf_dppi_channels_enable", "nrf_dppi_channels_enable"], [34, 2, 1, "c.nrf_dppi_channels_group_set", "nrf_dppi_channels_group_set"], [34, 2, 1, "c.nrf_dppi_channels_include_in_group", "nrf_dppi_channels_include_in_group"], [34, 2, 1, "c.nrf_dppi_channels_remove_from_group", "nrf_dppi_channels_remove_from_group"], [34, 2, 1, "c.nrf_dppi_group_clear", "nrf_dppi_group_clear"], [34, 2, 1, "c.nrf_dppi_group_disable", "nrf_dppi_group_disable"], [34, 2, 1, "c.nrf_dppi_group_disable_task_get", "nrf_dppi_group_disable_task_get"], [34, 2, 1, "c.nrf_dppi_group_enable", "nrf_dppi_group_enable"], [34, 2, 1, "c.nrf_dppi_group_enable_task_get", "nrf_dppi_group_enable_task_get"], [34, 2, 1, "c.nrf_dppi_group_number_get", "nrf_dppi_group_number_get"], [34, 2, 1, "c.nrf_dppi_subscribe_clear", "nrf_dppi_subscribe_clear"], [34, 2, 1, "c.nrf_dppi_subscribe_set", "nrf_dppi_subscribe_set"], [34, 2, 1, "c.nrf_dppi_task_address_get", "nrf_dppi_task_address_get"], [34, 4, 1, "c.nrf_dppi_task_t", "nrf_dppi_task_t"], [34, 2, 1, "c.nrf_dppi_task_trigger", "nrf_dppi_task_trigger"], [37, 2, 1, "c.nrf_ecb_data_pointer_get", "nrf_ecb_data_pointer_get"], [37, 2, 1, "c.nrf_ecb_data_pointer_set", "nrf_ecb_data_pointer_set"], [37, 2, 1, "c.nrf_ecb_event_address_get", "nrf_ecb_event_address_get"], [37, 2, 1, "c.nrf_ecb_event_check", "nrf_ecb_event_check"], [37, 2, 1, "c.nrf_ecb_event_clear", "nrf_ecb_event_clear"], [37, 4, 1, "c.nrf_ecb_event_t", "nrf_ecb_event_t"], [37, 2, 1, "c.nrf_ecb_in_amount_get", "nrf_ecb_in_amount_get"], [37, 2, 1, "c.nrf_ecb_in_ptr_get", "nrf_ecb_in_ptr_get"], [37, 2, 1, "c.nrf_ecb_in_ptr_set", "nrf_ecb_in_ptr_set"], [37, 2, 1, "c.nrf_ecb_int_disable", "nrf_ecb_int_disable"], [37, 2, 1, "c.nrf_ecb_int_enable", "nrf_ecb_int_enable"], [37, 2, 1, "c.nrf_ecb_int_enable_check", "nrf_ecb_int_enable_check"], [37, 4, 1, "c.nrf_ecb_int_mask_t", "nrf_ecb_int_mask_t"], [37, 2, 1, "c.nrf_ecb_key_set", "nrf_ecb_key_set"], [37, 2, 1, "c.nrf_ecb_out_amount_get", "nrf_ecb_out_amount_get"], [37, 2, 1, "c.nrf_ecb_out_ptr_get", "nrf_ecb_out_ptr_get"], [37, 2, 1, "c.nrf_ecb_out_ptr_set", "nrf_ecb_out_ptr_set"], [37, 2, 1, "c.nrf_ecb_publish_clear", "nrf_ecb_publish_clear"], [37, 2, 1, "c.nrf_ecb_publish_set", "nrf_ecb_publish_set"], [37, 2, 1, "c.nrf_ecb_subscribe_clear", "nrf_ecb_subscribe_clear"], [37, 2, 1, "c.nrf_ecb_subscribe_set", "nrf_ecb_subscribe_set"], [37, 2, 1, "c.nrf_ecb_task_address_get", "nrf_ecb_task_address_get"], [37, 4, 1, "c.nrf_ecb_task_t", "nrf_ecb_task_t"], [37, 2, 1, "c.nrf_ecb_task_trigger", "nrf_ecb_task_trigger"], [40, 2, 1, "c.nrf_egu_channel_count", "nrf_egu_channel_count"], [40, 2, 1, "c.nrf_egu_channel_int_get", "nrf_egu_channel_int_get"], [40, 2, 1, "c.nrf_egu_event_address_get", "nrf_egu_event_address_get"], [40, 2, 1, "c.nrf_egu_event_check", "nrf_egu_event_check"], [40, 2, 1, "c.nrf_egu_event_clear", "nrf_egu_event_clear"], [40, 4, 1, "c.nrf_egu_event_t", "nrf_egu_event_t"], [40, 2, 1, "c.nrf_egu_int_disable", "nrf_egu_int_disable"], [40, 2, 1, "c.nrf_egu_int_enable", "nrf_egu_int_enable"], [40, 2, 1, "c.nrf_egu_int_enable_check", "nrf_egu_int_enable_check"], [40, 4, 1, "c.nrf_egu_int_mask_t", "nrf_egu_int_mask_t"], [40, 2, 1, "c.nrf_egu_publish_clear", "nrf_egu_publish_clear"], [40, 2, 1, "c.nrf_egu_publish_set", "nrf_egu_publish_set"], [40, 2, 1, "c.nrf_egu_subscribe_clear", "nrf_egu_subscribe_clear"], [40, 2, 1, "c.nrf_egu_subscribe_set", "nrf_egu_subscribe_set"], [40, 2, 1, "c.nrf_egu_task_address_get", "nrf_egu_task_address_get"], [40, 4, 1, "c.nrf_egu_task_t", "nrf_egu_task_t"], [40, 2, 1, "c.nrf_egu_task_trigger", "nrf_egu_task_trigger"], [40, 2, 1, "c.nrf_egu_trigger_task_get", "nrf_egu_trigger_task_get"], [40, 2, 1, "c.nrf_egu_triggered_event_get", "nrf_egu_triggered_event_get"], [42, 5, 1, "c.nrf_exmif_config_t", "nrf_exmif_config_t"], [42, 2, 1, "c.nrf_exmif_device_config", "nrf_exmif_device_config"], [42, 2, 1, "c.nrf_exmif_device_disable", "nrf_exmif_device_disable"], [42, 2, 1, "c.nrf_exmif_device_enable", "nrf_exmif_device_enable"], [42, 2, 1, "c.nrf_exmif_locked_access_set", "nrf_exmif_locked_access_set"], [42, 2, 1, "c.nrf_exmif_reset_set", "nrf_exmif_reset_set"], [42, 2, 1, "c.nrf_exmif_task_address_get", "nrf_exmif_task_address_get"], [42, 4, 1, "c.nrf_exmif_task_t", "nrf_exmif_task_t"], [42, 2, 1, "c.nrf_exmif_task_trigger", "nrf_exmif_task_trigger"], [44, 2, 1, "c.nrf_ficr_codepagesize_get", "nrf_ficr_codepagesize_get"], [44, 2, 1, "c.nrf_ficr_codesize_get", "nrf_ficr_codesize_get"], [44, 2, 1, "c.nrf_ficr_deviceid_get", "nrf_ficr_deviceid_get"], [44, 2, 1, "c.nrf_ficr_nfc_tagheader_get", "nrf_ficr_nfc_tagheader_get"], [45, 2, 1, "c.nrf_fpu_event_check", "nrf_fpu_event_check"], [45, 2, 1, "c.nrf_fpu_event_clear", "nrf_fpu_event_clear"], [45, 4, 1, "c.nrf_fpu_event_t", "nrf_fpu_event_t"], [45, 2, 1, "c.nrf_fpu_int_disable", "nrf_fpu_int_disable"], [45, 2, 1, "c.nrf_fpu_int_enable", "nrf_fpu_int_enable"], [45, 2, 1, "c.nrf_fpu_int_enable_check", "nrf_fpu_int_enable_check"], [45, 4, 1, "c.nrf_fpu_int_mask_t", "nrf_fpu_int_mask_t"], [47, 2, 1, "c.nrf_glitchdet_enable_check", "nrf_glitchdet_enable_check"], [47, 2, 1, "c.nrf_glitchdet_enable_set", "nrf_glitchdet_enable_set"], [47, 2, 1, "c.nrf_glitchdet_mode_get", "nrf_glitchdet_mode_get"], [47, 2, 1, "c.nrf_glitchdet_mode_set", "nrf_glitchdet_mode_set"], [47, 4, 1, "c.nrf_glitchdet_mode_t", "nrf_glitchdet_mode_t"], [48, 2, 1, "c.nrf_gpio_cfg", "nrf_gpio_cfg"], [48, 2, 1, "c.nrf_gpio_cfg_default", "nrf_gpio_cfg_default"], [48, 2, 1, "c.nrf_gpio_cfg_input", "nrf_gpio_cfg_input"], [48, 2, 1, "c.nrf_gpio_cfg_output", "nrf_gpio_cfg_output"], [48, 2, 1, "c.nrf_gpio_cfg_sense_input", "nrf_gpio_cfg_sense_input"], [48, 2, 1, "c.nrf_gpio_cfg_sense_set", "nrf_gpio_cfg_sense_set"], [48, 2, 1, "c.nrf_gpio_cfg_watcher", "nrf_gpio_cfg_watcher"], [48, 2, 1, "c.nrf_gpio_input_disconnect", "nrf_gpio_input_disconnect"], [48, 2, 1, "c.nrf_gpio_latches_read", "nrf_gpio_latches_read"], [48, 2, 1, "c.nrf_gpio_latches_read_and_clear", "nrf_gpio_latches_read_and_clear"], [48, 2, 1, "c.nrf_gpio_pin_clear", "nrf_gpio_pin_clear"], [48, 2, 1, "c.nrf_gpio_pin_clock_check", "nrf_gpio_pin_clock_check"], [48, 2, 1, "c.nrf_gpio_pin_clock_set", "nrf_gpio_pin_clock_set"], [48, 2, 1, "c.nrf_gpio_pin_control_select", "nrf_gpio_pin_control_select"], [48, 2, 1, "c.nrf_gpio_pin_dir_get", "nrf_gpio_pin_dir_get"], [48, 2, 1, "c.nrf_gpio_pin_dir_set", "nrf_gpio_pin_dir_set"], [48, 4, 1, "c.nrf_gpio_pin_dir_t", "nrf_gpio_pin_dir_t"], [48, 4, 1, "c.nrf_gpio_pin_drive_t", "nrf_gpio_pin_drive_t"], [48, 2, 1, "c.nrf_gpio_pin_input_get", "nrf_gpio_pin_input_get"], [48, 4, 1, "c.nrf_gpio_pin_input_t", "nrf_gpio_pin_input_t"], [48, 2, 1, "c.nrf_gpio_pin_latch_clear", "nrf_gpio_pin_latch_clear"], [48, 2, 1, "c.nrf_gpio_pin_latch_get", "nrf_gpio_pin_latch_get"], [48, 2, 1, "c.nrf_gpio_pin_out_read", "nrf_gpio_pin_out_read"], [48, 2, 1, "c.nrf_gpio_pin_port_decode", "nrf_gpio_pin_port_decode"], [48, 2, 1, "c.nrf_gpio_pin_port_number_extract", "nrf_gpio_pin_port_number_extract"], [48, 2, 1, "c.nrf_gpio_pin_present_check", "nrf_gpio_pin_present_check"], [48, 2, 1, "c.nrf_gpio_pin_pull_get", "nrf_gpio_pin_pull_get"], [48, 4, 1, "c.nrf_gpio_pin_pull_t", "nrf_gpio_pin_pull_t"], [48, 2, 1, "c.nrf_gpio_pin_read", "nrf_gpio_pin_read"], [48, 4, 1, "c.nrf_gpio_pin_sel_t", "nrf_gpio_pin_sel_t"], [48, 2, 1, "c.nrf_gpio_pin_sense_get", "nrf_gpio_pin_sense_get"], [48, 4, 1, "c.nrf_gpio_pin_sense_t", "nrf_gpio_pin_sense_t"], [48, 2, 1, "c.nrf_gpio_pin_set", "nrf_gpio_pin_set"], [48, 2, 1, "c.nrf_gpio_pin_toggle", "nrf_gpio_pin_toggle"], [48, 2, 1, "c.nrf_gpio_pin_write", "nrf_gpio_pin_write"], [48, 2, 1, "c.nrf_gpio_port_detect_latch_check", "nrf_gpio_port_detect_latch_check"], [48, 2, 1, "c.nrf_gpio_port_detect_latch_set", "nrf_gpio_port_detect_latch_set"], [48, 2, 1, "c.nrf_gpio_port_dir_input_set", "nrf_gpio_port_dir_input_set"], [48, 2, 1, "c.nrf_gpio_port_dir_output_set", "nrf_gpio_port_dir_output_set"], [48, 2, 1, "c.nrf_gpio_port_dir_read", "nrf_gpio_port_dir_read"], [48, 2, 1, "c.nrf_gpio_port_dir_write", "nrf_gpio_port_dir_write"], [48, 2, 1, "c.nrf_gpio_port_impedance_get", "nrf_gpio_port_impedance_get"], [48, 4, 1, "c.nrf_gpio_port_impedance_mask_t", "nrf_gpio_port_impedance_mask_t"], [48, 2, 1, "c.nrf_gpio_port_impedance_set", "nrf_gpio_port_impedance_set"], [48, 2, 1, "c.nrf_gpio_port_in_read", "nrf_gpio_port_in_read"], [48, 2, 1, "c.nrf_gpio_port_out_clear", "nrf_gpio_port_out_clear"], [48, 2, 1, "c.nrf_gpio_port_out_read", "nrf_gpio_port_out_read"], [48, 2, 1, "c.nrf_gpio_port_out_set", "nrf_gpio_port_out_set"], [48, 2, 1, "c.nrf_gpio_port_out_write", "nrf_gpio_port_out_write"], [48, 2, 1, "c.nrf_gpio_port_retain_get", "nrf_gpio_port_retain_get"], [48, 2, 1, "c.nrf_gpio_port_retain_set", "nrf_gpio_port_retain_set"], [48, 2, 1, "c.nrf_gpio_ports_read", "nrf_gpio_ports_read"], [48, 2, 1, "c.nrf_gpio_range_cfg_input", "nrf_gpio_range_cfg_input"], [48, 2, 1, "c.nrf_gpio_range_cfg_output", "nrf_gpio_range_cfg_output"], [48, 2, 1, "c.nrf_gpio_reconfigure", "nrf_gpio_reconfigure"], [48, 4, 1, "c.nrf_gpio_retain_mask_t", "nrf_gpio_retain_mask_t"], [52, 2, 1, "c.nrf_gpiote_clr_task_get", "nrf_gpiote_clr_task_get"], [52, 2, 1, "c.nrf_gpiote_event_address_get", "nrf_gpiote_event_address_get"], [52, 2, 1, "c.nrf_gpiote_event_check", "nrf_gpiote_event_check"], [52, 2, 1, "c.nrf_gpiote_event_clear", "nrf_gpiote_event_clear"], [52, 2, 1, "c.nrf_gpiote_event_configure", "nrf_gpiote_event_configure"], [52, 2, 1, "c.nrf_gpiote_event_disable", "nrf_gpiote_event_disable"], [52, 2, 1, "c.nrf_gpiote_event_enable", "nrf_gpiote_event_enable"], [52, 2, 1, "c.nrf_gpiote_event_pin_get", "nrf_gpiote_event_pin_get"], [52, 2, 1, "c.nrf_gpiote_event_polarity_get", "nrf_gpiote_event_polarity_get"], [52, 4, 1, "c.nrf_gpiote_event_t", "nrf_gpiote_event_t"], [52, 2, 1, "c.nrf_gpiote_in_event_get", "nrf_gpiote_in_event_get"], [52, 2, 1, "c.nrf_gpiote_int_disable", "nrf_gpiote_int_disable"], [52, 2, 1, "c.nrf_gpiote_int_enable", "nrf_gpiote_int_enable"], [52, 2, 1, "c.nrf_gpiote_int_enable_check", "nrf_gpiote_int_enable_check"], [52, 2, 1, "c.nrf_gpiote_int_group_disable", "nrf_gpiote_int_group_disable"], [52, 2, 1, "c.nrf_gpiote_int_group_enable", "nrf_gpiote_int_group_enable"], [52, 2, 1, "c.nrf_gpiote_int_group_enable_check", "nrf_gpiote_int_group_enable_check"], [52, 4, 1, "c.nrf_gpiote_int_t", "nrf_gpiote_int_t"], [52, 2, 1, "c.nrf_gpiote_latency_get", "nrf_gpiote_latency_get"], [52, 2, 1, "c.nrf_gpiote_latency_set", "nrf_gpiote_latency_set"], [52, 4, 1, "c.nrf_gpiote_latency_t", "nrf_gpiote_latency_t"], [52, 2, 1, "c.nrf_gpiote_out_task_get", "nrf_gpiote_out_task_get"], [52, 4, 1, "c.nrf_gpiote_outinit_t", "nrf_gpiote_outinit_t"], [52, 4, 1, "c.nrf_gpiote_polarity_t", "nrf_gpiote_polarity_t"], [52, 2, 1, "c.nrf_gpiote_publish_clear", "nrf_gpiote_publish_clear"], [52, 2, 1, "c.nrf_gpiote_publish_set", "nrf_gpiote_publish_set"], [52, 2, 1, "c.nrf_gpiote_set_task_get", "nrf_gpiote_set_task_get"], [52, 2, 1, "c.nrf_gpiote_subscribe_clear", "nrf_gpiote_subscribe_clear"], [52, 2, 1, "c.nrf_gpiote_subscribe_set", "nrf_gpiote_subscribe_set"], [52, 2, 1, "c.nrf_gpiote_task_address_get", "nrf_gpiote_task_address_get"], [52, 2, 1, "c.nrf_gpiote_task_configure", "nrf_gpiote_task_configure"], [52, 2, 1, "c.nrf_gpiote_task_disable", "nrf_gpiote_task_disable"], [52, 2, 1, "c.nrf_gpiote_task_enable", "nrf_gpiote_task_enable"], [52, 2, 1, "c.nrf_gpiote_task_force", "nrf_gpiote_task_force"], [52, 4, 1, "c.nrf_gpiote_task_t", "nrf_gpiote_task_t"], [52, 2, 1, "c.nrf_gpiote_task_trigger", "nrf_gpiote_task_trigger"], [52, 2, 1, "c.nrf_gpiote_te_default", "nrf_gpiote_te_default"], [52, 2, 1, "c.nrf_gpiote_te_is_enabled", "nrf_gpiote_te_is_enabled"], [56, 4, 1, "c.nrf_grtc_cc_add_reference_t", "nrf_grtc_cc_add_reference_t"], [56, 2, 1, "c.nrf_grtc_clkout_divider_get", "nrf_grtc_clkout_divider_get"], [56, 2, 1, "c.nrf_grtc_clkout_divider_set", "nrf_grtc_clkout_divider_set"], [56, 2, 1, "c.nrf_grtc_clkout_enable_check", "nrf_grtc_clkout_enable_check"], [56, 2, 1, "c.nrf_grtc_clkout_set", "nrf_grtc_clkout_set"], [56, 4, 1, "c.nrf_grtc_clkout_t", "nrf_grtc_clkout_t"], [56, 2, 1, "c.nrf_grtc_clksel_get", "nrf_grtc_clksel_get"], [56, 2, 1, "c.nrf_grtc_clksel_set", "nrf_grtc_clksel_set"], [56, 4, 1, "c.nrf_grtc_clksel_t", "nrf_grtc_clksel_t"], [56, 2, 1, "c.nrf_grtc_event_address_get", "nrf_grtc_event_address_get"], [56, 2, 1, "c.nrf_grtc_event_check", "nrf_grtc_event_check"], [56, 2, 1, "c.nrf_grtc_event_clear", "nrf_grtc_event_clear"], [56, 2, 1, "c.nrf_grtc_event_disable", "nrf_grtc_event_disable"], [56, 2, 1, "c.nrf_grtc_event_enable", "nrf_grtc_event_enable"], [56, 4, 1, "c.nrf_grtc_event_t", "nrf_grtc_event_t"], [56, 2, 1, "c.nrf_grtc_int_disable", "nrf_grtc_int_disable"], [56, 2, 1, "c.nrf_grtc_int_enable", "nrf_grtc_int_enable"], [56, 2, 1, "c.nrf_grtc_int_enable_check", "nrf_grtc_int_enable_check"], [56, 4, 1, "c.nrf_grtc_int_mask_t", "nrf_grtc_int_mask_t"], [56, 2, 1, "c.nrf_grtc_int_pending_get", "nrf_grtc_int_pending_get"], [56, 2, 1, "c.nrf_grtc_publish_clear", "nrf_grtc_publish_clear"], [56, 2, 1, "c.nrf_grtc_publish_set", "nrf_grtc_publish_set"], [56, 2, 1, "c.nrf_grtc_pwm_compare_get", "nrf_grtc_pwm_compare_get"], [56, 2, 1, "c.nrf_grtc_pwm_compare_set", "nrf_grtc_pwm_compare_set"], [56, 2, 1, "c.nrf_grtc_rt_counter_cc_get", "nrf_grtc_rt_counter_cc_get"], [56, 2, 1, "c.nrf_grtc_rt_counter_cc_set", "nrf_grtc_rt_counter_cc_set"], [56, 2, 1, "c.nrf_grtc_rt_counter_high_get", "nrf_grtc_rt_counter_high_get"], [56, 2, 1, "c.nrf_grtc_rt_counter_low_get", "nrf_grtc_rt_counter_low_get"], [56, 4, 1, "c.nrf_grtc_short_mask_t", "nrf_grtc_short_mask_t"], [56, 2, 1, "c.nrf_grtc_shorts_disable", "nrf_grtc_shorts_disable"], [56, 2, 1, "c.nrf_grtc_shorts_enable", "nrf_grtc_shorts_enable"], [56, 2, 1, "c.nrf_grtc_shorts_set", "nrf_grtc_shorts_set"], [56, 2, 1, "c.nrf_grtc_subscribe_clear", "nrf_grtc_subscribe_clear"], [56, 2, 1, "c.nrf_grtc_subscribe_set", "nrf_grtc_subscribe_set"], [56, 2, 1, "c.nrf_grtc_sys_counter_active_check", "nrf_grtc_sys_counter_active_check"], [56, 2, 1, "c.nrf_grtc_sys_counter_active_set", "nrf_grtc_sys_counter_active_set"], [56, 2, 1, "c.nrf_grtc_sys_counter_active_state_request_check", "nrf_grtc_sys_counter_active_state_request_check"], [56, 2, 1, "c.nrf_grtc_sys_counter_active_state_request_get", "nrf_grtc_sys_counter_active_state_request_get"], [56, 2, 1, "c.nrf_grtc_sys_counter_active_state_request_set", "nrf_grtc_sys_counter_active_state_request_set"], [56, 2, 1, "c.nrf_grtc_sys_counter_auto_mode_check", "nrf_grtc_sys_counter_auto_mode_check"], [56, 2, 1, "c.nrf_grtc_sys_counter_auto_mode_set", "nrf_grtc_sys_counter_auto_mode_set"], [56, 2, 1, "c.nrf_grtc_sys_counter_capture_task_get", "nrf_grtc_sys_counter_capture_task_get"], [56, 2, 1, "c.nrf_grtc_sys_counter_cc_add_set", "nrf_grtc_sys_counter_cc_add_set"], [56, 2, 1, "c.nrf_grtc_sys_counter_cc_enable_check", "nrf_grtc_sys_counter_cc_enable_check"], [56, 2, 1, "c.nrf_grtc_sys_counter_cc_get", "nrf_grtc_sys_counter_cc_get"], [56, 2, 1, "c.nrf_grtc_sys_counter_cc_set", "nrf_grtc_sys_counter_cc_set"], [56, 2, 1, "c.nrf_grtc_sys_counter_check", "nrf_grtc_sys_counter_check"], [56, 2, 1, "c.nrf_grtc_sys_counter_compare_event_disable", "nrf_grtc_sys_counter_compare_event_disable"], [56, 2, 1, "c.nrf_grtc_sys_counter_compare_event_enable", "nrf_grtc_sys_counter_compare_event_enable"], [56, 2, 1, "c.nrf_grtc_sys_counter_compare_event_get", "nrf_grtc_sys_counter_compare_event_get"], [56, 2, 1, "c.nrf_grtc_sys_counter_get", "nrf_grtc_sys_counter_get"], [56, 2, 1, "c.nrf_grtc_sys_counter_high_get", "nrf_grtc_sys_counter_high_get"], [56, 2, 1, "c.nrf_grtc_sys_counter_interval_get", "nrf_grtc_sys_counter_interval_get"], [56, 2, 1, "c.nrf_grtc_sys_counter_interval_set", "nrf_grtc_sys_counter_interval_set"], [56, 2, 1, "c.nrf_grtc_sys_counter_low_get", "nrf_grtc_sys_counter_low_get"], [56, 2, 1, "c.nrf_grtc_sys_counter_overflow_check", "nrf_grtc_sys_counter_overflow_check"], [56, 2, 1, "c.nrf_grtc_sys_counter_set", "nrf_grtc_sys_counter_set"], [56, 2, 1, "c.nrf_grtc_task_address_get", "nrf_grtc_task_address_get"], [56, 4, 1, "c.nrf_grtc_task_t", "nrf_grtc_task_t"], [56, 2, 1, "c.nrf_grtc_task_trigger", "nrf_grtc_task_trigger"], [56, 2, 1, "c.nrf_grtc_timeout_get", "nrf_grtc_timeout_get"], [56, 2, 1, "c.nrf_grtc_timeout_set", "nrf_grtc_timeout_set"], [56, 2, 1, "c.nrf_grtc_waketime_get", "nrf_grtc_waketime_get"], [56, 2, 1, "c.nrf_grtc_waketime_set", "nrf_grtc_waketime_set"], [59, 2, 1, "c.nrf_hsfll_clkctrl_dither_init_set", "nrf_hsfll_clkctrl_dither_init_set"], [59, 2, 1, "c.nrf_hsfll_clkctrl_dithering_get", "nrf_hsfll_clkctrl_dithering_get"], [59, 2, 1, "c.nrf_hsfll_clkctrl_dithering_set", "nrf_hsfll_clkctrl_dithering_set"], [59, 2, 1, "c.nrf_hsfll_clkctrl_mode_get", "nrf_hsfll_clkctrl_mode_get"], [59, 2, 1, "c.nrf_hsfll_clkctrl_mode_set", "nrf_hsfll_clkctrl_mode_set"], [59, 2, 1, "c.nrf_hsfll_clkctrl_mult_get", "nrf_hsfll_clkctrl_mult_get"], [59, 2, 1, "c.nrf_hsfll_clkctrl_mult_set", "nrf_hsfll_clkctrl_mult_set"], [59, 2, 1, "c.nrf_hsfll_clkctrl_overridelocked_enable_set", "nrf_hsfll_clkctrl_overridelocked_enable_set"], [59, 2, 1, "c.nrf_hsfll_clkctrl_retainfinetrim_enable_set", "nrf_hsfll_clkctrl_retainfinetrim_enable_set"], [59, 2, 1, "c.nrf_hsfll_clkctrl_sleep_get", "nrf_hsfll_clkctrl_sleep_get"], [59, 2, 1, "c.nrf_hsfll_clkctrl_sleep_set", "nrf_hsfll_clkctrl_sleep_set"], [59, 5, 1, "c.nrf_hsfll_clkctrl_t", "nrf_hsfll_clkctrl_t"], [59, 5, 1, "c.nrf_hsfll_dithering_t", "nrf_hsfll_dithering_t"], [59, 2, 1, "c.nrf_hsfll_event_address_get", "nrf_hsfll_event_address_get"], [59, 2, 1, "c.nrf_hsfll_event_check", "nrf_hsfll_event_check"], [59, 2, 1, "c.nrf_hsfll_event_clear", "nrf_hsfll_event_clear"], [59, 4, 1, "c.nrf_hsfll_event_t", "nrf_hsfll_event_t"], [59, 2, 1, "c.nrf_hsfll_freqm_done_check", "nrf_hsfll_freqm_done_check"], [59, 2, 1, "c.nrf_hsfll_freqm_error_get", "nrf_hsfll_freqm_error_get"], [59, 5, 1, "c.nrf_hsfll_freqm_error_t", "nrf_hsfll_freqm_error_t"], [59, 2, 1, "c.nrf_hsfll_freqm_meas_get", "nrf_hsfll_freqm_meas_get"], [59, 2, 1, "c.nrf_hsfll_mirror_lock_set", "nrf_hsfll_mirror_lock_set"], [59, 4, 1, "c.nrf_hsfll_mode_ctrl_t", "nrf_hsfll_mode_ctrl_t"], [59, 4, 1, "c.nrf_hsfll_mode_status_t", "nrf_hsfll_mode_status_t"], [59, 5, 1, "c.nrf_hsfll_sleep_t", "nrf_hsfll_sleep_t"], [59, 2, 1, "c.nrf_hsfll_status_clk_get", "nrf_hsfll_status_clk_get"], [59, 5, 1, "c.nrf_hsfll_status_clk_t", "nrf_hsfll_status_clk_t"], [59, 2, 1, "c.nrf_hsfll_task_address_get", "nrf_hsfll_task_address_get"], [59, 4, 1, "c.nrf_hsfll_task_t", "nrf_hsfll_task_t"], [59, 2, 1, "c.nrf_hsfll_task_trigger", "nrf_hsfll_task_trigger"], [59, 2, 1, "c.nrf_hsfll_trim_get", "nrf_hsfll_trim_get"], [59, 2, 1, "c.nrf_hsfll_trim_set", "nrf_hsfll_trim_set"], [59, 5, 1, "c.nrf_hsfll_trim_t", "nrf_hsfll_trim_t"], [61, 4, 1, "c.nrf_i2s_align_t", "nrf_i2s_align_t"], [61, 4, 1, "c.nrf_i2s_channels_t", "nrf_i2s_channels_t"], [61, 2, 1, "c.nrf_i2s_clk_configure", "nrf_i2s_clk_configure"], [61, 4, 1, "c.nrf_i2s_clksrc_t", "nrf_i2s_clksrc_t"], [61, 5, 1, "c.nrf_i2s_config_t", "nrf_i2s_config_t"], [61, 2, 1, "c.nrf_i2s_configure", "nrf_i2s_configure"], [61, 2, 1, "c.nrf_i2s_disable", "nrf_i2s_disable"], [61, 2, 1, "c.nrf_i2s_enable", "nrf_i2s_enable"], [61, 2, 1, "c.nrf_i2s_event_address_get", "nrf_i2s_event_address_get"], [61, 2, 1, "c.nrf_i2s_event_check", "nrf_i2s_event_check"], [61, 2, 1, "c.nrf_i2s_event_clear", "nrf_i2s_event_clear"], [61, 4, 1, "c.nrf_i2s_event_t", "nrf_i2s_event_t"], [61, 4, 1, "c.nrf_i2s_format_t", "nrf_i2s_format_t"], [61, 2, 1, "c.nrf_i2s_int_disable", "nrf_i2s_int_disable"], [61, 2, 1, "c.nrf_i2s_int_enable", "nrf_i2s_int_enable"], [61, 2, 1, "c.nrf_i2s_int_enable_check", "nrf_i2s_int_enable_check"], [61, 4, 1, "c.nrf_i2s_int_mask_t", "nrf_i2s_int_mask_t"], [61, 2, 1, "c.nrf_i2s_lrck_pin_get", "nrf_i2s_lrck_pin_get"], [61, 2, 1, "c.nrf_i2s_mck_pin_get", "nrf_i2s_mck_pin_get"], [61, 4, 1, "c.nrf_i2s_mck_t", "nrf_i2s_mck_t"], [61, 4, 1, "c.nrf_i2s_mode_t", "nrf_i2s_mode_t"], [61, 2, 1, "c.nrf_i2s_pins_set", "nrf_i2s_pins_set"], [61, 5, 1, "c.nrf_i2s_pins_t", "nrf_i2s_pins_t"], [61, 2, 1, "c.nrf_i2s_publish_clear", "nrf_i2s_publish_clear"], [61, 2, 1, "c.nrf_i2s_publish_set", "nrf_i2s_publish_set"], [61, 4, 1, "c.nrf_i2s_ratio_t", "nrf_i2s_ratio_t"], [61, 2, 1, "c.nrf_i2s_rx_buffer_get", "nrf_i2s_rx_buffer_get"], [61, 2, 1, "c.nrf_i2s_rx_buffer_set", "nrf_i2s_rx_buffer_set"], [61, 2, 1, "c.nrf_i2s_sck_pin_get", "nrf_i2s_sck_pin_get"], [61, 2, 1, "c.nrf_i2s_sdin_pin_get", "nrf_i2s_sdin_pin_get"], [61, 2, 1, "c.nrf_i2s_sdout_pin_get", "nrf_i2s_sdout_pin_get"], [61, 2, 1, "c.nrf_i2s_subscribe_clear", "nrf_i2s_subscribe_clear"], [61, 2, 1, "c.nrf_i2s_subscribe_set", "nrf_i2s_subscribe_set"], [61, 4, 1, "c.nrf_i2s_swidth_t", "nrf_i2s_swidth_t"], [61, 2, 1, "c.nrf_i2s_task_address_get", "nrf_i2s_task_address_get"], [61, 4, 1, "c.nrf_i2s_task_t", "nrf_i2s_task_t"], [61, 2, 1, "c.nrf_i2s_task_trigger", "nrf_i2s_task_trigger"], [61, 2, 1, "c.nrf_i2s_transfer_set", "nrf_i2s_transfer_set"], [61, 2, 1, "c.nrf_i2s_tx_buffer_get", "nrf_i2s_tx_buffer_get"], [61, 2, 1, "c.nrf_i2s_tx_buffer_set", "nrf_i2s_tx_buffer_set"], [67, 4, 1, "c.nrf_ipc_channel_t", "nrf_ipc_channel_t"], [67, 2, 1, "c.nrf_ipc_event_address_get", "nrf_ipc_event_address_get"], [67, 2, 1, "c.nrf_ipc_event_check", "nrf_ipc_event_check"], [67, 2, 1, "c.nrf_ipc_event_clear", "nrf_ipc_event_clear"], [67, 4, 1, "c.nrf_ipc_event_t", "nrf_ipc_event_t"], [67, 2, 1, "c.nrf_ipc_gpmem_get", "nrf_ipc_gpmem_get"], [67, 2, 1, "c.nrf_ipc_gpmem_set", "nrf_ipc_gpmem_set"], [67, 2, 1, "c.nrf_ipc_int_disable", "nrf_ipc_int_disable"], [67, 2, 1, "c.nrf_ipc_int_enable", "nrf_ipc_int_enable"], [67, 2, 1, "c.nrf_ipc_int_enable_check", "nrf_ipc_int_enable_check"], [67, 4, 1, "c.nrf_ipc_int_mask_t", "nrf_ipc_int_mask_t"], [67, 2, 1, "c.nrf_ipc_int_pending_get", "nrf_ipc_int_pending_get"], [67, 2, 1, "c.nrf_ipc_publish_clear", "nrf_ipc_publish_clear"], [67, 2, 1, "c.nrf_ipc_publish_set", "nrf_ipc_publish_set"], [67, 2, 1, "c.nrf_ipc_receive_config_get", "nrf_ipc_receive_config_get"], [67, 2, 1, "c.nrf_ipc_receive_config_set", "nrf_ipc_receive_config_set"], [67, 2, 1, "c.nrf_ipc_receive_event_get", "nrf_ipc_receive_event_get"], [67, 2, 1, "c.nrf_ipc_send_config_get", "nrf_ipc_send_config_get"], [67, 2, 1, "c.nrf_ipc_send_config_set", "nrf_ipc_send_config_set"], [67, 2, 1, "c.nrf_ipc_send_task_get", "nrf_ipc_send_task_get"], [67, 2, 1, "c.nrf_ipc_subscribe_clear", "nrf_ipc_subscribe_clear"], [67, 2, 1, "c.nrf_ipc_subscribe_set", "nrf_ipc_subscribe_set"], [67, 2, 1, "c.nrf_ipc_task_address_get", "nrf_ipc_task_address_get"], [67, 4, 1, "c.nrf_ipc_task_t", "nrf_ipc_task_t"], [67, 2, 1, "c.nrf_ipc_task_trigger", "nrf_ipc_task_trigger"], [69, 2, 1, "c.nrf_ipct_ack_task_get", "nrf_ipct_ack_task_get"], [69, 2, 1, "c.nrf_ipct_acked_event_get", "nrf_ipct_acked_event_get"], [69, 2, 1, "c.nrf_ipct_event_address_get", "nrf_ipct_event_address_get"], [69, 2, 1, "c.nrf_ipct_event_check", "nrf_ipct_event_check"], [69, 2, 1, "c.nrf_ipct_event_clear", "nrf_ipct_event_clear"], [69, 4, 1, "c.nrf_ipct_event_t", "nrf_ipct_event_t"], [69, 2, 1, "c.nrf_ipct_int_disable", "nrf_ipct_int_disable"], [69, 2, 1, "c.nrf_ipct_int_enable", "nrf_ipct_int_enable"], [69, 2, 1, "c.nrf_ipct_int_enable_check", "nrf_ipct_int_enable_check"], [69, 4, 1, "c.nrf_ipct_int_mask_t", "nrf_ipct_int_mask_t"], [69, 2, 1, "c.nrf_ipct_int_pending_get", "nrf_ipct_int_pending_get"], [69, 2, 1, "c.nrf_ipct_overflow_send_get", "nrf_ipct_overflow_send_get"], [69, 2, 1, "c.nrf_ipct_publish_clear", "nrf_ipct_publish_clear"], [69, 2, 1, "c.nrf_ipct_publish_set", "nrf_ipct_publish_set"], [69, 2, 1, "c.nrf_ipct_receive_event_get", "nrf_ipct_receive_event_get"], [69, 2, 1, "c.nrf_ipct_send_task_get", "nrf_ipct_send_task_get"], [69, 4, 1, "c.nrf_ipct_short_mask_t", "nrf_ipct_short_mask_t"], [69, 2, 1, "c.nrf_ipct_shorts_disable", "nrf_ipct_shorts_disable"], [69, 2, 1, "c.nrf_ipct_shorts_enable", "nrf_ipct_shorts_enable"], [69, 2, 1, "c.nrf_ipct_shorts_set", "nrf_ipct_shorts_set"], [69, 2, 1, "c.nrf_ipct_subscribe_clear", "nrf_ipct_subscribe_clear"], [69, 2, 1, "c.nrf_ipct_subscribe_set", "nrf_ipct_subscribe_set"], [69, 2, 1, "c.nrf_ipct_task_address_get", "nrf_ipct_task_address_get"], [69, 4, 1, "c.nrf_ipct_task_t", "nrf_ipct_task_t"], [69, 2, 1, "c.nrf_ipct_task_trigger", "nrf_ipct_task_trigger"], [24, 4, 1, "c.nrf_isource_t", "nrf_isource_t"], [71, 2, 1, "c.nrf_kmu_event_address_get", "nrf_kmu_event_address_get"], [71, 2, 1, "c.nrf_kmu_event_check", "nrf_kmu_event_check"], [71, 2, 1, "c.nrf_kmu_event_clear", "nrf_kmu_event_clear"], [71, 4, 1, "c.nrf_kmu_event_t", "nrf_kmu_event_t"], [71, 2, 1, "c.nrf_kmu_int_disable", "nrf_kmu_int_disable"], [71, 2, 1, "c.nrf_kmu_int_enable", "nrf_kmu_int_enable"], [71, 2, 1, "c.nrf_kmu_int_enable_check", "nrf_kmu_int_enable_check"], [71, 4, 1, "c.nrf_kmu_int_mask_t", "nrf_kmu_int_mask_t"], [71, 2, 1, "c.nrf_kmu_intpend_get", "nrf_kmu_intpend_get"], [71, 2, 1, "c.nrf_kmu_keyslot_get", "nrf_kmu_keyslot_get"], [71, 2, 1, "c.nrf_kmu_keyslot_set", "nrf_kmu_keyslot_set"], [71, 2, 1, "c.nrf_kmu_metadata_get", "nrf_kmu_metadata_get"], [71, 2, 1, "c.nrf_kmu_metadata_set", "nrf_kmu_metadata_set"], [71, 2, 1, "c.nrf_kmu_src_get", "nrf_kmu_src_get"], [71, 2, 1, "c.nrf_kmu_src_set", "nrf_kmu_src_set"], [71, 2, 1, "c.nrf_kmu_status_get", "nrf_kmu_status_get"], [71, 4, 1, "c.nrf_kmu_status_t", "nrf_kmu_status_t"], [71, 2, 1, "c.nrf_kmu_task_address_get", "nrf_kmu_task_address_get"], [71, 4, 1, "c.nrf_kmu_task_t", "nrf_kmu_task_t"], [71, 2, 1, "c.nrf_kmu_task_trigger", "nrf_kmu_task_trigger"], [74, 5, 1, "c.nrf_lpcomp_config_t", "nrf_lpcomp_config_t"], [74, 2, 1, "c.nrf_lpcomp_configure", "nrf_lpcomp_configure"], [74, 4, 1, "c.nrf_lpcomp_detect_t", "nrf_lpcomp_detect_t"], [74, 2, 1, "c.nrf_lpcomp_detection_set", "nrf_lpcomp_detection_set"], [74, 2, 1, "c.nrf_lpcomp_disable", "nrf_lpcomp_disable"], [74, 2, 1, "c.nrf_lpcomp_enable", "nrf_lpcomp_enable"], [74, 2, 1, "c.nrf_lpcomp_enable_check", "nrf_lpcomp_enable_check"], [74, 2, 1, "c.nrf_lpcomp_event_address_get", "nrf_lpcomp_event_address_get"], [74, 2, 1, "c.nrf_lpcomp_event_check", "nrf_lpcomp_event_check"], [74, 2, 1, "c.nrf_lpcomp_event_clear", "nrf_lpcomp_event_clear"], [74, 4, 1, "c.nrf_lpcomp_event_t", "nrf_lpcomp_event_t"], [74, 2, 1, "c.nrf_lpcomp_ext_ref_set", "nrf_lpcomp_ext_ref_set"], [74, 7, 1, "c.nrf_lpcomp_ext_ref_t", "nrf_lpcomp_ext_ref_t"], [74, 4, 1, "c.nrf_lpcomp_hyst_t", "nrf_lpcomp_hyst_t"], [74, 2, 1, "c.nrf_lpcomp_hysteresis_set", "nrf_lpcomp_hysteresis_set"], [74, 2, 1, "c.nrf_lpcomp_input_select", "nrf_lpcomp_input_select"], [74, 7, 1, "c.nrf_lpcomp_input_t", "nrf_lpcomp_input_t"], [74, 2, 1, "c.nrf_lpcomp_int_disable", "nrf_lpcomp_int_disable"], [74, 2, 1, "c.nrf_lpcomp_int_enable", "nrf_lpcomp_int_enable"], [74, 2, 1, "c.nrf_lpcomp_int_enable_check", "nrf_lpcomp_int_enable_check"], [74, 4, 1, "c.nrf_lpcomp_int_mask_t", "nrf_lpcomp_int_mask_t"], [74, 2, 1, "c.nrf_lpcomp_publish_clear", "nrf_lpcomp_publish_clear"], [74, 2, 1, "c.nrf_lpcomp_publish_set", "nrf_lpcomp_publish_set"], [74, 2, 1, "c.nrf_lpcomp_ref_set", "nrf_lpcomp_ref_set"], [74, 4, 1, "c.nrf_lpcomp_ref_t", "nrf_lpcomp_ref_t"], [74, 2, 1, "c.nrf_lpcomp_result_get", "nrf_lpcomp_result_get"], [74, 4, 1, "c.nrf_lpcomp_short_mask_t", "nrf_lpcomp_short_mask_t"], [74, 2, 1, "c.nrf_lpcomp_shorts_disable", "nrf_lpcomp_shorts_disable"], [74, 2, 1, "c.nrf_lpcomp_shorts_enable", "nrf_lpcomp_shorts_enable"], [74, 2, 1, "c.nrf_lpcomp_shorts_set", "nrf_lpcomp_shorts_set"], [74, 2, 1, "c.nrf_lpcomp_subscribe_clear", "nrf_lpcomp_subscribe_clear"], [74, 2, 1, "c.nrf_lpcomp_subscribe_set", "nrf_lpcomp_subscribe_set"], [74, 2, 1, "c.nrf_lpcomp_task_address_get", "nrf_lpcomp_task_address_get"], [74, 4, 1, "c.nrf_lpcomp_task_t", "nrf_lpcomp_task_t"], [74, 2, 1, "c.nrf_lpcomp_task_trigger", "nrf_lpcomp_task_trigger"], [77, 2, 1, "c.nrf_lrcconf_axi_waitstates_get", "nrf_lrcconf_axi_waitstates_get"], [77, 2, 1, "c.nrf_lrcconf_axi_waitstates_set", "nrf_lrcconf_axi_waitstates_set"], [77, 4, 1, "c.nrf_lrcconf_clk_src_t", "nrf_lrcconf_clk_src_t"], [77, 2, 1, "c.nrf_lrcconf_clkstart_task_get", "nrf_lrcconf_clkstart_task_get"], [77, 2, 1, "c.nrf_lrcconf_clkstarted_event_get", "nrf_lrcconf_clkstarted_event_get"], [77, 2, 1, "c.nrf_lrcconf_clkstop_task_get", "nrf_lrcconf_clkstop_task_get"], [77, 2, 1, "c.nrf_lrcconf_clock_always_run_check", "nrf_lrcconf_clock_always_run_check"], [77, 2, 1, "c.nrf_lrcconf_clock_always_run_force_set", "nrf_lrcconf_clock_always_run_force_set"], [77, 2, 1, "c.nrf_lrcconf_clock_run_status_check", "nrf_lrcconf_clock_run_status_check"], [77, 2, 1, "c.nrf_lrcconf_clock_source_get", "nrf_lrcconf_clock_source_get"], [77, 2, 1, "c.nrf_lrcconf_clock_source_set", "nrf_lrcconf_clock_source_set"], [77, 2, 1, "c.nrf_lrcconf_constlatstat_check", "nrf_lrcconf_constlatstat_check"], [77, 2, 1, "c.nrf_lrcconf_event_address_get", "nrf_lrcconf_event_address_get"], [77, 2, 1, "c.nrf_lrcconf_event_check", "nrf_lrcconf_event_check"], [77, 2, 1, "c.nrf_lrcconf_event_clear", "nrf_lrcconf_event_clear"], [77, 4, 1, "c.nrf_lrcconf_event_t", "nrf_lrcconf_event_t"], [77, 4, 1, "c.nrf_lrcconf_power_domain_mask_t", "nrf_lrcconf_power_domain_mask_t"], [77, 2, 1, "c.nrf_lrcconf_power_domain_on_get", "nrf_lrcconf_power_domain_on_get"], [77, 2, 1, "c.nrf_lrcconf_poweron_force_check", "nrf_lrcconf_poweron_force_check"], [77, 2, 1, "c.nrf_lrcconf_poweron_force_set", "nrf_lrcconf_poweron_force_set"], [77, 2, 1, "c.nrf_lrcconf_retain_check", "nrf_lrcconf_retain_check"], [77, 2, 1, "c.nrf_lrcconf_retain_set", "nrf_lrcconf_retain_set"], [77, 2, 1, "c.nrf_lrcconf_task_address_get", "nrf_lrcconf_task_address_get"], [77, 4, 1, "c.nrf_lrcconf_task_t", "nrf_lrcconf_task_t"], [77, 2, 1, "c.nrf_lrcconf_task_trigger", "nrf_lrcconf_task_trigger"], [79, 2, 1, "c.nrf_memconf_bitline_address_get", "nrf_memconf_bitline_address_get"], [79, 2, 1, "c.nrf_memconf_bitline_address_set", "nrf_memconf_bitline_address_set"], [79, 2, 1, "c.nrf_memconf_bitline_enable_check", "nrf_memconf_bitline_enable_check"], [79, 2, 1, "c.nrf_memconf_bitline_enable_set", "nrf_memconf_bitline_enable_set"], [79, 2, 1, "c.nrf_memconf_memtrim_get", "nrf_memconf_memtrim_get"], [79, 2, 1, "c.nrf_memconf_memtrim_set", "nrf_memconf_memtrim_set"], [79, 2, 1, "c.nrf_memconf_ramblock_control_enable_check", "nrf_memconf_ramblock_control_enable_check"], [79, 2, 1, "c.nrf_memconf_ramblock_control_enable_set", "nrf_memconf_ramblock_control_enable_set"], [79, 2, 1, "c.nrf_memconf_ramblock_control_mask_enable_set", "nrf_memconf_ramblock_control_mask_enable_set"], [79, 2, 1, "c.nrf_memconf_ramblock_ret2_enable_check", "nrf_memconf_ramblock_ret2_enable_check"], [79, 2, 1, "c.nrf_memconf_ramblock_ret2_enable_set", "nrf_memconf_ramblock_ret2_enable_set"], [79, 2, 1, "c.nrf_memconf_ramblock_ret_enable_check", "nrf_memconf_ramblock_ret_enable_check"], [79, 2, 1, "c.nrf_memconf_ramblock_ret_enable_set", "nrf_memconf_ramblock_ret_enable_set"], [79, 2, 1, "c.nrf_memconf_ramblock_ret_mask_enable_set", "nrf_memconf_ramblock_ret_mask_enable_set"], [79, 2, 1, "c.nrf_memconf_rettrim_get", "nrf_memconf_rettrim_get"], [79, 2, 1, "c.nrf_memconf_rettrim_set", "nrf_memconf_rettrim_set"], [81, 4, 1, "c.nrf_mpc_errorsource_t", "nrf_mpc_errorsource_t"], [81, 2, 1, "c.nrf_mpc_event_address_get", "nrf_mpc_event_address_get"], [81, 2, 1, "c.nrf_mpc_event_check", "nrf_mpc_event_check"], [81, 2, 1, "c.nrf_mpc_event_clear", "nrf_mpc_event_clear"], [81, 4, 1, "c.nrf_mpc_event_t", "nrf_mpc_event_t"], [81, 2, 1, "c.nrf_mpc_globalslave_lock_check", "nrf_mpc_globalslave_lock_check"], [81, 2, 1, "c.nrf_mpc_globalslave_lock_enable", "nrf_mpc_globalslave_lock_enable"], [81, 2, 1, "c.nrf_mpc_globalslave_masterport_get", "nrf_mpc_globalslave_masterport_get"], [81, 2, 1, "c.nrf_mpc_globalslave_masterport_set", "nrf_mpc_globalslave_masterport_set"], [81, 2, 1, "c.nrf_mpc_int_disable", "nrf_mpc_int_disable"], [81, 2, 1, "c.nrf_mpc_int_enable", "nrf_mpc_int_enable"], [81, 2, 1, "c.nrf_mpc_int_enable_check", "nrf_mpc_int_enable_check"], [81, 4, 1, "c.nrf_mpc_int_mask_t", "nrf_mpc_int_mask_t"], [81, 4, 1, "c.nrf_mpc_masterport_mask_t", "nrf_mpc_masterport_mask_t"], [81, 2, 1, "c.nrf_mpc_memaccerr_address_get", "nrf_mpc_memaccerr_address_get"], [81, 2, 1, "c.nrf_mpc_memaccerr_info_errorsource_get", "nrf_mpc_memaccerr_info_errorsource_get"], [81, 2, 1, "c.nrf_mpc_memaccerr_info_masterport_get", "nrf_mpc_memaccerr_info_masterport_get"], [81, 2, 1, "c.nrf_mpc_memaccerr_info_ownerid_get", "nrf_mpc_memaccerr_info_ownerid_get"], [81, 2, 1, "c.nrf_mpc_memaccerr_info_perm_get", "nrf_mpc_memaccerr_info_perm_get"], [81, 2, 1, "c.nrf_mpc_override_config_get", "nrf_mpc_override_config_get"], [81, 2, 1, "c.nrf_mpc_override_config_set", "nrf_mpc_override_config_set"], [81, 5, 1, "c.nrf_mpc_override_config_t", "nrf_mpc_override_config_t"], [81, 2, 1, "c.nrf_mpc_override_endaddr_get", "nrf_mpc_override_endaddr_get"], [81, 2, 1, "c.nrf_mpc_override_endaddr_set", "nrf_mpc_override_endaddr_set"], [81, 2, 1, "c.nrf_mpc_override_masterport_get", "nrf_mpc_override_masterport_get"], [81, 2, 1, "c.nrf_mpc_override_masterport_set", "nrf_mpc_override_masterport_set"], [81, 2, 1, "c.nrf_mpc_override_offset_get", "nrf_mpc_override_offset_get"], [81, 2, 1, "c.nrf_mpc_override_offset_set", "nrf_mpc_override_offset_set"], [81, 2, 1, "c.nrf_mpc_override_ownerid_get", "nrf_mpc_override_ownerid_get"], [81, 2, 1, "c.nrf_mpc_override_ownerid_set", "nrf_mpc_override_ownerid_set"], [81, 2, 1, "c.nrf_mpc_override_perm_get", "nrf_mpc_override_perm_get"], [81, 2, 1, "c.nrf_mpc_override_perm_set", "nrf_mpc_override_perm_set"], [81, 2, 1, "c.nrf_mpc_override_permmask_get", "nrf_mpc_override_permmask_get"], [81, 2, 1, "c.nrf_mpc_override_permmask_set", "nrf_mpc_override_permmask_set"], [81, 2, 1, "c.nrf_mpc_override_startaddr_get", "nrf_mpc_override_startaddr_get"], [81, 2, 1, "c.nrf_mpc_override_startaddr_set", "nrf_mpc_override_startaddr_set"], [81, 4, 1, "c.nrf_mpc_permission_mask_t", "nrf_mpc_permission_mask_t"], [81, 2, 1, "c.nrf_mpc_region_addrmask_get", "nrf_mpc_region_addrmask_get"], [81, 2, 1, "c.nrf_mpc_region_addrmask_set", "nrf_mpc_region_addrmask_set"], [81, 2, 1, "c.nrf_mpc_region_config_get", "nrf_mpc_region_config_get"], [81, 2, 1, "c.nrf_mpc_region_config_set", "nrf_mpc_region_config_set"], [81, 5, 1, "c.nrf_mpc_region_config_t", "nrf_mpc_region_config_t"], [81, 2, 1, "c.nrf_mpc_region_masterport_get", "nrf_mpc_region_masterport_get"], [81, 2, 1, "c.nrf_mpc_region_masterport_set", "nrf_mpc_region_masterport_set"], [81, 2, 1, "c.nrf_mpc_region_startaddr_get", "nrf_mpc_region_startaddr_get"], [81, 2, 1, "c.nrf_mpc_region_startaddr_set", "nrf_mpc_region_startaddr_set"], [81, 2, 1, "c.nrf_mpc_rtchoke_delay_get", "nrf_mpc_rtchoke_delay_get"], [81, 2, 1, "c.nrf_mpc_rtchoke_delay_set", "nrf_mpc_rtchoke_delay_set"], [81, 2, 1, "c.nrf_mpc_rtchoke_readaccess_get", "nrf_mpc_rtchoke_readaccess_get"], [81, 2, 1, "c.nrf_mpc_rtchoke_readaccess_set", "nrf_mpc_rtchoke_readaccess_set"], [81, 2, 1, "c.nrf_mpc_rtchoke_writeaccess_get", "nrf_mpc_rtchoke_writeaccess_get"], [81, 2, 1, "c.nrf_mpc_rtchoke_writeaccess_set", "nrf_mpc_rtchoke_writeaccess_set"], [83, 2, 1, "c.nrf_mpu_nvm_blocks_protection_enable", "nrf_mpu_nvm_blocks_protection_enable"], [83, 2, 1, "c.nrf_mpu_nvm_protection_in_debug_set", "nrf_mpu_nvm_protection_in_debug_set"], [83, 2, 1, "c.nrf_mpu_region0_peripherals_get", "nrf_mpu_region0_peripherals_get"], [83, 2, 1, "c.nrf_mpu_region0_peripherals_set", "nrf_mpu_region0_peripherals_set"], [83, 2, 1, "c.nrf_mpu_region0_ram_size_set", "nrf_mpu_region0_ram_size_set"], [85, 2, 1, "c.nrf_mutex_lock", "nrf_mutex_lock"], [85, 2, 1, "c.nrf_mutex_unlock", "nrf_mutex_unlock"], [87, 2, 1, "c.nrf_mvdma_activity_check", "nrf_mvdma_activity_check"], [87, 2, 1, "c.nrf_mvdma_aximode_set", "nrf_mvdma_aximode_set"], [87, 4, 1, "c.nrf_mvdma_aximode_t", "nrf_mvdma_aximode_t"], [87, 2, 1, "c.nrf_mvdma_crc_result_get", "nrf_mvdma_crc_result_get"], [87, 2, 1, "c.nrf_mvdma_event_address_get", "nrf_mvdma_event_address_get"], [87, 2, 1, "c.nrf_mvdma_event_check", "nrf_mvdma_event_check"], [87, 2, 1, "c.nrf_mvdma_event_clear", "nrf_mvdma_event_clear"], [87, 4, 1, "c.nrf_mvdma_event_t", "nrf_mvdma_event_t"], [87, 2, 1, "c.nrf_mvdma_fifo_status_get", "nrf_mvdma_fifo_status_get"], [87, 4, 1, "c.nrf_mvdma_fifo_status_t", "nrf_mvdma_fifo_status_t"], [87, 2, 1, "c.nrf_mvdma_int_disable", "nrf_mvdma_int_disable"], [87, 2, 1, "c.nrf_mvdma_int_enable", "nrf_mvdma_int_enable"], [87, 2, 1, "c.nrf_mvdma_int_enable_check", "nrf_mvdma_int_enable_check"], [87, 4, 1, "c.nrf_mvdma_int_mask_t", "nrf_mvdma_int_mask_t"], [87, 2, 1, "c.nrf_mvdma_int_pending_get", "nrf_mvdma_int_pending_get"], [87, 2, 1, "c.nrf_mvdma_last_sink_address_get", "nrf_mvdma_last_sink_address_get"], [87, 2, 1, "c.nrf_mvdma_last_source_address_get", "nrf_mvdma_last_source_address_get"], [87, 2, 1, "c.nrf_mvdma_mode_set", "nrf_mvdma_mode_set"], [87, 4, 1, "c.nrf_mvdma_mode_t", "nrf_mvdma_mode_t"], [87, 2, 1, "c.nrf_mvdma_publish_clear", "nrf_mvdma_publish_clear"], [87, 2, 1, "c.nrf_mvdma_publish_set", "nrf_mvdma_publish_set"], [87, 2, 1, "c.nrf_mvdma_sink_error_get", "nrf_mvdma_sink_error_get"], [87, 4, 1, "c.nrf_mvdma_sink_error_t", "nrf_mvdma_sink_error_t"], [87, 2, 1, "c.nrf_mvdma_sink_job_count_get", "nrf_mvdma_sink_job_count_get"], [87, 2, 1, "c.nrf_mvdma_sink_list_ptr_get", "nrf_mvdma_sink_list_ptr_get"], [87, 2, 1, "c.nrf_mvdma_sink_list_ptr_set", "nrf_mvdma_sink_list_ptr_set"], [87, 2, 1, "c.nrf_mvdma_source_error_get", "nrf_mvdma_source_error_get"], [87, 4, 1, "c.nrf_mvdma_source_error_t", "nrf_mvdma_source_error_t"], [87, 2, 1, "c.nrf_mvdma_source_job_count_get", "nrf_mvdma_source_job_count_get"], [87, 2, 1, "c.nrf_mvdma_source_list_ptr_get", "nrf_mvdma_source_list_ptr_get"], [87, 2, 1, "c.nrf_mvdma_source_list_ptr_set", "nrf_mvdma_source_list_ptr_set"], [87, 2, 1, "c.nrf_mvdma_start_task_get", "nrf_mvdma_start_task_get"], [87, 2, 1, "c.nrf_mvdma_subscribe_clear", "nrf_mvdma_subscribe_clear"], [87, 2, 1, "c.nrf_mvdma_subscribe_set", "nrf_mvdma_subscribe_set"], [87, 2, 1, "c.nrf_mvdma_task_address_get", "nrf_mvdma_task_address_get"], [87, 4, 1, "c.nrf_mvdma_task_t", "nrf_mvdma_task_t"], [87, 2, 1, "c.nrf_mvdma_task_trigger", "nrf_mvdma_task_trigger"], [90, 2, 1, "c.nrf_mwu_event_address_get", "nrf_mwu_event_address_get"], [90, 2, 1, "c.nrf_mwu_event_check", "nrf_mwu_event_check"], [90, 2, 1, "c.nrf_mwu_event_clear", "nrf_mwu_event_clear"], [90, 4, 1, "c.nrf_mwu_event_t", "nrf_mwu_event_t"], [90, 2, 1, "c.nrf_mwu_int_disable", "nrf_mwu_int_disable"], [90, 2, 1, "c.nrf_mwu_int_enable", "nrf_mwu_int_enable"], [90, 2, 1, "c.nrf_mwu_int_enable_check", "nrf_mwu_int_enable_check"], [90, 4, 1, "c.nrf_mwu_int_mask_t", "nrf_mwu_int_mask_t"], [90, 2, 1, "c.nrf_mwu_nmi_disable", "nrf_mwu_nmi_disable"], [90, 2, 1, "c.nrf_mwu_nmi_enable", "nrf_mwu_nmi_enable"], [90, 2, 1, "c.nrf_mwu_nmi_enable_check", "nrf_mwu_nmi_enable_check"], [90, 2, 1, "c.nrf_mwu_region_watch_disable", "nrf_mwu_region_watch_disable"], [90, 2, 1, "c.nrf_mwu_region_watch_enable", "nrf_mwu_region_watch_enable"], [90, 2, 1, "c.nrf_mwu_region_watch_get", "nrf_mwu_region_watch_get"], [90, 4, 1, "c.nrf_mwu_region_watch_t", "nrf_mwu_region_watch_t"], [90, 2, 1, "c.nrf_mwu_subregions_configure", "nrf_mwu_subregions_configure"], [90, 2, 1, "c.nrf_mwu_subregions_read_accesses_clear", "nrf_mwu_subregions_read_accesses_clear"], [90, 2, 1, "c.nrf_mwu_subregions_read_accesses_get", "nrf_mwu_subregions_read_accesses_get"], [90, 2, 1, "c.nrf_mwu_subregions_write_accesses_clear", "nrf_mwu_subregions_write_accesses_clear"], [90, 2, 1, "c.nrf_mwu_subregions_write_accesses_get", "nrf_mwu_subregions_write_accesses_get"], [90, 2, 1, "c.nrf_mwu_user_region_range_set", "nrf_mwu_user_region_range_set"], [93, 2, 1, "c.nrf_nfct_autocolres_disable", "nrf_nfct_autocolres_disable"], [93, 2, 1, "c.nrf_nfct_autocolres_enable", "nrf_nfct_autocolres_enable"], [93, 2, 1, "c.nrf_nfct_autocolres_is_enabled", "nrf_nfct_autocolres_is_enabled"], [93, 2, 1, "c.nrf_nfct_bias_config_get", "nrf_nfct_bias_config_get"], [93, 2, 1, "c.nrf_nfct_bias_config_set", "nrf_nfct_bias_config_set"], [93, 5, 1, "c.nrf_nfct_bias_config_t", "nrf_nfct_bias_config_t"], [93, 2, 1, "c.nrf_nfct_error_status_clear", "nrf_nfct_error_status_clear"], [93, 2, 1, "c.nrf_nfct_error_status_get", "nrf_nfct_error_status_get"], [93, 4, 1, "c.nrf_nfct_error_status_t", "nrf_nfct_error_status_t"], [93, 2, 1, "c.nrf_nfct_event_address_get", "nrf_nfct_event_address_get"], [93, 2, 1, "c.nrf_nfct_event_check", "nrf_nfct_event_check"], [93, 2, 1, "c.nrf_nfct_event_clear", "nrf_nfct_event_clear"], [93, 4, 1, "c.nrf_nfct_event_t", "nrf_nfct_event_t"], [93, 4, 1, "c.nrf_nfct_field_state_t", "nrf_nfct_field_state_t"], [93, 2, 1, "c.nrf_nfct_field_status_get", "nrf_nfct_field_status_get"], [93, 2, 1, "c.nrf_nfct_frame_delay_max_get", "nrf_nfct_frame_delay_max_get"], [93, 2, 1, "c.nrf_nfct_frame_delay_max_set", "nrf_nfct_frame_delay_max_set"], [93, 2, 1, "c.nrf_nfct_frame_delay_min_get", "nrf_nfct_frame_delay_min_get"], [93, 2, 1, "c.nrf_nfct_frame_delay_min_set", "nrf_nfct_frame_delay_min_set"], [93, 2, 1, "c.nrf_nfct_frame_delay_mode_get", "nrf_nfct_frame_delay_mode_get"], [93, 2, 1, "c.nrf_nfct_frame_delay_mode_set", "nrf_nfct_frame_delay_mode_set"], [93, 4, 1, "c.nrf_nfct_frame_delay_mode_t", "nrf_nfct_frame_delay_mode_t"], [93, 2, 1, "c.nrf_nfct_int_disable", "nrf_nfct_int_disable"], [93, 2, 1, "c.nrf_nfct_int_enable", "nrf_nfct_int_enable"], [93, 2, 1, "c.nrf_nfct_int_enable_check", "nrf_nfct_int_enable_check"], [93, 2, 1, "c.nrf_nfct_int_enable_get", "nrf_nfct_int_enable_get"], [93, 4, 1, "c.nrf_nfct_int_mask_t", "nrf_nfct_int_mask_t"], [93, 2, 1, "c.nrf_nfct_max_rxtx_length_get", "nrf_nfct_max_rxtx_length_get"], [93, 2, 1, "c.nrf_nfct_mod_ctrl_pin_get", "nrf_nfct_mod_ctrl_pin_get"], [93, 2, 1, "c.nrf_nfct_mod_ctrl_pin_set", "nrf_nfct_mod_ctrl_pin_set"], [93, 4, 1, "c.nrf_nfct_modulation_ctrl_t", "nrf_nfct_modulation_ctrl_t"], [93, 2, 1, "c.nrf_nfct_modulation_output_get", "nrf_nfct_modulation_output_get"], [93, 2, 1, "c.nrf_nfct_modulation_output_set", "nrf_nfct_modulation_output_set"], [93, 2, 1, "c.nrf_nfct_nfcid1_get", "nrf_nfct_nfcid1_get"], [93, 2, 1, "c.nrf_nfct_nfcid1_set", "nrf_nfct_nfcid1_set"], [93, 2, 1, "c.nrf_nfct_pad_config_enable_check", "nrf_nfct_pad_config_enable_check"], [93, 2, 1, "c.nrf_nfct_pad_config_enable_set", "nrf_nfct_pad_config_enable_set"], [93, 2, 1, "c.nrf_nfct_rx_bits_get", "nrf_nfct_rx_bits_get"], [93, 2, 1, "c.nrf_nfct_rx_frame_config_get", "nrf_nfct_rx_frame_config_get"], [93, 2, 1, "c.nrf_nfct_rx_frame_config_set", "nrf_nfct_rx_frame_config_set"], [93, 4, 1, "c.nrf_nfct_rx_frame_config_t", "nrf_nfct_rx_frame_config_t"], [93, 2, 1, "c.nrf_nfct_rx_frame_status_clear", "nrf_nfct_rx_frame_status_clear"], [93, 2, 1, "c.nrf_nfct_rx_frame_status_get", "nrf_nfct_rx_frame_status_get"], [93, 4, 1, "c.nrf_nfct_rx_frame_status_t", "nrf_nfct_rx_frame_status_t"], [93, 2, 1, "c.nrf_nfct_rxtx_buffer_get", "nrf_nfct_rxtx_buffer_get"], [93, 2, 1, "c.nrf_nfct_rxtx_buffer_set", "nrf_nfct_rxtx_buffer_set"], [93, 2, 1, "c.nrf_nfct_selres_cascade_check", "nrf_nfct_selres_cascade_check"], [93, 2, 1, "c.nrf_nfct_selres_get", "nrf_nfct_selres_get"], [93, 2, 1, "c.nrf_nfct_selres_protocol_get", "nrf_nfct_selres_protocol_get"], [93, 2, 1, "c.nrf_nfct_selres_protocol_set", "nrf_nfct_selres_protocol_set"], [93, 4, 1, "c.nrf_nfct_selres_protocol_t", "nrf_nfct_selres_protocol_t"], [93, 2, 1, "c.nrf_nfct_selres_set", "nrf_nfct_selres_set"], [93, 2, 1, "c.nrf_nfct_sensres_bit_frame_sdd_get", "nrf_nfct_sensres_bit_frame_sdd_get"], [93, 2, 1, "c.nrf_nfct_sensres_bit_frame_sdd_set", "nrf_nfct_sensres_bit_frame_sdd_set"], [93, 4, 1, "c.nrf_nfct_sensres_bit_frame_sdd_t", "nrf_nfct_sensres_bit_frame_sdd_t"], [93, 2, 1, "c.nrf_nfct_sensres_nfcid1_size_get", "nrf_nfct_sensres_nfcid1_size_get"], [93, 2, 1, "c.nrf_nfct_sensres_nfcid1_size_set", "nrf_nfct_sensres_nfcid1_size_set"], [93, 4, 1, "c.nrf_nfct_sensres_nfcid1_size_t", "nrf_nfct_sensres_nfcid1_size_t"], [93, 2, 1, "c.nrf_nfct_sensres_platform_config_get", "nrf_nfct_sensres_platform_config_get"], [93, 2, 1, "c.nrf_nfct_sensres_platform_config_set", "nrf_nfct_sensres_platform_config_set"], [93, 4, 1, "c.nrf_nfct_sensres_platform_config_t", "nrf_nfct_sensres_platform_config_t"], [93, 4, 1, "c.nrf_nfct_short_mask_t", "nrf_nfct_short_mask_t"], [93, 2, 1, "c.nrf_nfct_shorts_disable", "nrf_nfct_shorts_disable"], [93, 2, 1, "c.nrf_nfct_shorts_enable", "nrf_nfct_shorts_enable"], [93, 2, 1, "c.nrf_nfct_shorts_get", "nrf_nfct_shorts_get"], [93, 2, 1, "c.nrf_nfct_shorts_set", "nrf_nfct_shorts_set"], [93, 2, 1, "c.nrf_nfct_sleep_state_get", "nrf_nfct_sleep_state_get"], [93, 4, 1, "c.nrf_nfct_sleep_state_t", "nrf_nfct_sleep_state_t"], [93, 2, 1, "c.nrf_nfct_tag_state_get", "nrf_nfct_tag_state_get"], [93, 4, 1, "c.nrf_nfct_tag_state_t", "nrf_nfct_tag_state_t"], [93, 2, 1, "c.nrf_nfct_task_address_get", "nrf_nfct_task_address_get"], [93, 4, 1, "c.nrf_nfct_task_t", "nrf_nfct_task_t"], [93, 2, 1, "c.nrf_nfct_task_trigger", "nrf_nfct_task_trigger"], [93, 2, 1, "c.nrf_nfct_tx_bits_get", "nrf_nfct_tx_bits_get"], [93, 2, 1, "c.nrf_nfct_tx_bits_set", "nrf_nfct_tx_bits_set"], [93, 2, 1, "c.nrf_nfct_tx_frame_config_get", "nrf_nfct_tx_frame_config_get"], [93, 2, 1, "c.nrf_nfct_tx_frame_config_set", "nrf_nfct_tx_frame_config_set"], [93, 4, 1, "c.nrf_nfct_tx_frame_config_t", "nrf_nfct_tx_frame_config_t"], [96, 2, 1, "c.nrf_nvmc_buffer_read", "nrf_nvmc_buffer_read"], [96, 2, 1, "c.nrf_nvmc_byte_read", "nrf_nvmc_byte_read"], [96, 2, 1, "c.nrf_nvmc_erase_all_start", "nrf_nvmc_erase_all_start"], [96, 2, 1, "c.nrf_nvmc_halfword_read", "nrf_nvmc_halfword_read"], [96, 2, 1, "c.nrf_nvmc_mode_set", "nrf_nvmc_mode_set"], [96, 4, 1, "c.nrf_nvmc_mode_t", "nrf_nvmc_mode_t"], [96, 2, 1, "c.nrf_nvmc_nonsecure_mode_set", "nrf_nvmc_nonsecure_mode_set"], [96, 4, 1, "c.nrf_nvmc_ns_mode_t", "nrf_nvmc_ns_mode_t"], [96, 2, 1, "c.nrf_nvmc_page_erase_start", "nrf_nvmc_page_erase_start"], [96, 2, 1, "c.nrf_nvmc_page_partial_erase_start", "nrf_nvmc_page_partial_erase_start"], [96, 2, 1, "c.nrf_nvmc_partial_erase_duration_get", "nrf_nvmc_partial_erase_duration_get"], [96, 2, 1, "c.nrf_nvmc_partial_erase_duration_set", "nrf_nvmc_partial_erase_duration_set"], [96, 2, 1, "c.nrf_nvmc_ready_check", "nrf_nvmc_ready_check"], [96, 2, 1, "c.nrf_nvmc_uicr_erase_start", "nrf_nvmc_uicr_erase_start"], [96, 2, 1, "c.nrf_nvmc_word_read", "nrf_nvmc_word_read"], [96, 2, 1, "c.nrf_nvmc_word_write", "nrf_nvmc_word_write"], [96, 2, 1, "c.nrf_nvmc_write_ready_check", "nrf_nvmc_write_ready_check"], [98, 2, 1, "c.nrf_oscillators_hfxo_cap_set", "nrf_oscillators_hfxo_cap_set"], [98, 2, 1, "c.nrf_oscillators_hfxo_clock_quality_get", "nrf_oscillators_hfxo_clock_quality_get"], [98, 4, 1, "c.nrf_oscillators_hfxo_clock_quality_t", "nrf_oscillators_hfxo_clock_quality_t"], [98, 2, 1, "c.nrf_oscillators_lfxo_bypass_set", "nrf_oscillators_lfxo_bypass_set"], [98, 2, 1, "c.nrf_oscillators_lfxo_cap_set", "nrf_oscillators_lfxo_cap_set"], [98, 7, 1, "c.nrf_oscillators_lfxo_cap_t", "nrf_oscillators_lfxo_cap_t"], [98, 2, 1, "c.nrf_oscillators_pll_freq_get", "nrf_oscillators_pll_freq_get"], [98, 2, 1, "c.nrf_oscillators_pll_freq_set", "nrf_oscillators_pll_freq_set"], [98, 4, 1, "c.nrf_oscillators_pll_freq_t", "nrf_oscillators_pll_freq_t"], [100, 2, 1, "c.nrf_pdm_buffer_get", "nrf_pdm_buffer_get"], [100, 2, 1, "c.nrf_pdm_buffer_set", "nrf_pdm_buffer_set"], [100, 2, 1, "c.nrf_pdm_clk_pin_get", "nrf_pdm_clk_pin_get"], [100, 2, 1, "c.nrf_pdm_clock_get", "nrf_pdm_clock_get"], [100, 2, 1, "c.nrf_pdm_clock_set", "nrf_pdm_clock_set"], [100, 2, 1, "c.nrf_pdm_din_pin_get", "nrf_pdm_din_pin_get"], [100, 2, 1, "c.nrf_pdm_disable", "nrf_pdm_disable"], [100, 4, 1, "c.nrf_pdm_edge_t", "nrf_pdm_edge_t"], [100, 2, 1, "c.nrf_pdm_enable", "nrf_pdm_enable"], [100, 2, 1, "c.nrf_pdm_enable_check", "nrf_pdm_enable_check"], [100, 2, 1, "c.nrf_pdm_event_address_get", "nrf_pdm_event_address_get"], [100, 2, 1, "c.nrf_pdm_event_check", "nrf_pdm_event_check"], [100, 2, 1, "c.nrf_pdm_event_clear", "nrf_pdm_event_clear"], [100, 4, 1, "c.nrf_pdm_event_t", "nrf_pdm_event_t"], [100, 4, 1, "c.nrf_pdm_freq_t", "nrf_pdm_freq_t"], [100, 2, 1, "c.nrf_pdm_gain_get", "nrf_pdm_gain_get"], [100, 2, 1, "c.nrf_pdm_gain_set", "nrf_pdm_gain_set"], [100, 7, 1, "c.nrf_pdm_gain_t", "nrf_pdm_gain_t"], [100, 2, 1, "c.nrf_pdm_int_disable", "nrf_pdm_int_disable"], [100, 2, 1, "c.nrf_pdm_int_enable", "nrf_pdm_int_enable"], [100, 2, 1, "c.nrf_pdm_int_enable_check", "nrf_pdm_int_enable_check"], [100, 4, 1, "c.nrf_pdm_int_mask_t", "nrf_pdm_int_mask_t"], [100, 2, 1, "c.nrf_pdm_mclksrc_configure", "nrf_pdm_mclksrc_configure"], [100, 4, 1, "c.nrf_pdm_mclksrc_t", "nrf_pdm_mclksrc_t"], [100, 2, 1, "c.nrf_pdm_mode_get", "nrf_pdm_mode_get"], [100, 2, 1, "c.nrf_pdm_mode_set", "nrf_pdm_mode_set"], [100, 4, 1, "c.nrf_pdm_mode_t", "nrf_pdm_mode_t"], [100, 2, 1, "c.nrf_pdm_psel_connect", "nrf_pdm_psel_connect"], [100, 2, 1, "c.nrf_pdm_psel_disconnect", "nrf_pdm_psel_disconnect"], [100, 2, 1, "c.nrf_pdm_publish_clear", "nrf_pdm_publish_clear"], [100, 2, 1, "c.nrf_pdm_publish_set", "nrf_pdm_publish_set"], [100, 2, 1, "c.nrf_pdm_ratio_set", "nrf_pdm_ratio_set"], [100, 4, 1, "c.nrf_pdm_ratio_t", "nrf_pdm_ratio_t"], [100, 2, 1, "c.nrf_pdm_subscribe_clear", "nrf_pdm_subscribe_clear"], [100, 2, 1, "c.nrf_pdm_subscribe_set", "nrf_pdm_subscribe_set"], [100, 2, 1, "c.nrf_pdm_task_address_get", "nrf_pdm_task_address_get"], [100, 4, 1, "c.nrf_pdm_task_t", "nrf_pdm_task_t"], [100, 2, 1, "c.nrf_pdm_task_trigger", "nrf_pdm_task_trigger"], [104, 2, 1, "c.nrf_power_abb_busy_check", "nrf_power_abb_busy_check"], [104, 2, 1, "c.nrf_power_abb_config_get", "nrf_power_abb_config_get"], [104, 2, 1, "c.nrf_power_abb_config_set", "nrf_power_abb_config_set"], [104, 5, 1, "c.nrf_power_abb_config_t", "nrf_power_abb_config_t"], [104, 2, 1, "c.nrf_power_abb_force_lock_check", "nrf_power_abb_force_lock_check"], [104, 2, 1, "c.nrf_power_abb_force_lock_set", "nrf_power_abb_force_lock_set"], [104, 2, 1, "c.nrf_power_bils_check", "nrf_power_bils_check"], [104, 2, 1, "c.nrf_power_bils_set", "nrf_power_bils_set"], [104, 2, 1, "c.nrf_power_dcdcen_get", "nrf_power_dcdcen_get"], [104, 2, 1, "c.nrf_power_dcdcen_set", "nrf_power_dcdcen_set"], [104, 2, 1, "c.nrf_power_dcdcen_vddh_get", "nrf_power_dcdcen_vddh_get"], [104, 2, 1, "c.nrf_power_dcdcen_vddh_set", "nrf_power_dcdcen_vddh_set"], [104, 2, 1, "c.nrf_power_event_address_get", "nrf_power_event_address_get"], [104, 2, 1, "c.nrf_power_event_check", "nrf_power_event_check"], [104, 2, 1, "c.nrf_power_event_clear", "nrf_power_event_clear"], [104, 2, 1, "c.nrf_power_event_get_and_clear", "nrf_power_event_get_and_clear"], [104, 4, 1, "c.nrf_power_event_t", "nrf_power_event_t"], [104, 2, 1, "c.nrf_power_gpregret_get", "nrf_power_gpregret_get"], [104, 2, 1, "c.nrf_power_gpregret_set", "nrf_power_gpregret_set"], [104, 2, 1, "c.nrf_power_int_disable", "nrf_power_int_disable"], [104, 2, 1, "c.nrf_power_int_enable", "nrf_power_int_enable"], [104, 2, 1, "c.nrf_power_int_enable_check", "nrf_power_int_enable_check"], [104, 2, 1, "c.nrf_power_int_enable_get", "nrf_power_int_enable_get"], [104, 4, 1, "c.nrf_power_int_mask_t", "nrf_power_int_mask_t"], [104, 2, 1, "c.nrf_power_mainregstatus_get", "nrf_power_mainregstatus_get"], [104, 4, 1, "c.nrf_power_mainregstatus_t", "nrf_power_mainregstatus_t"], [104, 4, 1, "c.nrf_power_onoffram_mask_t", "nrf_power_onoffram_mask_t"], [104, 4, 1, "c.nrf_power_onoffram_t", "nrf_power_onoffram_t"], [104, 4, 1, "c.nrf_power_op_point_t", "nrf_power_op_point_t"], [104, 4, 1, "c.nrf_power_override_value_t", "nrf_power_override_value_t"], [104, 2, 1, "c.nrf_power_pmic_check", "nrf_power_pmic_check"], [104, 2, 1, "c.nrf_power_pmic_set", "nrf_power_pmic_set"], [104, 4, 1, "c.nrf_power_pof_thr_t", "nrf_power_pof_thr_t"], [104, 4, 1, "c.nrf_power_pof_thrvddh_t", "nrf_power_pof_thrvddh_t"], [104, 2, 1, "c.nrf_power_pofcon_get", "nrf_power_pofcon_get"], [104, 2, 1, "c.nrf_power_pofcon_set", "nrf_power_pofcon_set"], [104, 2, 1, "c.nrf_power_pofcon_vddh_get", "nrf_power_pofcon_vddh_get"], [104, 2, 1, "c.nrf_power_pofcon_vddh_set", "nrf_power_pofcon_vddh_set"], [104, 2, 1, "c.nrf_power_powerstatus_get", "nrf_power_powerstatus_get"], [104, 2, 1, "c.nrf_power_publish_clear", "nrf_power_publish_clear"], [104, 2, 1, "c.nrf_power_publish_set", "nrf_power_publish_set"], [104, 4, 1, "c.nrf_power_ramblock_mask_t", "nrf_power_ramblock_mask_t"], [104, 4, 1, "c.nrf_power_ramblock_t", "nrf_power_ramblock_t"], [104, 2, 1, "c.nrf_power_rampower_mask_get", "nrf_power_rampower_mask_get"], [104, 2, 1, "c.nrf_power_rampower_mask_off", "nrf_power_rampower_mask_off"], [104, 2, 1, "c.nrf_power_rampower_mask_on", "nrf_power_rampower_mask_on"], [104, 4, 1, "c.nrf_power_rampower_mask_t", "nrf_power_rampower_mask_t"], [104, 4, 1, "c.nrf_power_rampower_t", "nrf_power_rampower_t"], [104, 2, 1, "c.nrf_power_ramstatus_get", "nrf_power_ramstatus_get"], [104, 2, 1, "c.nrf_power_resetreas_clear", "nrf_power_resetreas_clear"], [104, 2, 1, "c.nrf_power_resetreas_get", "nrf_power_resetreas_get"], [104, 4, 1, "c.nrf_power_resetreas_mask_t", "nrf_power_resetreas_mask_t"], [104, 2, 1, "c.nrf_power_sem_status_get", "nrf_power_sem_status_get"], [104, 2, 1, "c.nrf_power_subscribe_clear", "nrf_power_subscribe_clear"], [104, 2, 1, "c.nrf_power_subscribe_set", "nrf_power_subscribe_set"], [104, 2, 1, "c.nrf_power_task_address_get", "nrf_power_task_address_get"], [104, 4, 1, "c.nrf_power_task_t", "nrf_power_task_t"], [104, 2, 1, "c.nrf_power_task_trigger", "nrf_power_task_trigger"], [104, 2, 1, "c.nrf_power_ulp_mode_check", "nrf_power_ulp_mode_check"], [104, 2, 1, "c.nrf_power_ulp_mode_set", "nrf_power_ulp_mode_set"], [104, 2, 1, "c.nrf_power_ulv_mode_check", "nrf_power_ulv_mode_check"], [104, 2, 1, "c.nrf_power_ulv_mode_set", "nrf_power_ulv_mode_set"], [104, 2, 1, "c.nrf_power_usbregstatus_get", "nrf_power_usbregstatus_get"], [104, 4, 1, "c.nrf_power_usbregstatus_mask_t", "nrf_power_usbregstatus_mask_t"], [104, 2, 1, "c.nrf_power_usbregstatus_outrdy_get", "nrf_power_usbregstatus_outrdy_get"], [104, 2, 1, "c.nrf_power_usbregstatus_vbusdet_get", "nrf_power_usbregstatus_vbusdet_get"], [104, 2, 1, "c.nrf_power_vreg_disable", "nrf_power_vreg_disable"], [104, 2, 1, "c.nrf_power_vreg_enable", "nrf_power_vreg_enable"], [104, 2, 1, "c.nrf_power_vreg_enable_check", "nrf_power_vreg_enable_check"], [104, 4, 1, "c.nrf_power_vreg_mask_t", "nrf_power_vreg_mask_t"], [107, 2, 1, "c.nrf_ppi_channel_and_fork_endpoint_setup", "nrf_ppi_channel_and_fork_endpoint_setup"], [107, 2, 1, "c.nrf_ppi_channel_disable", "nrf_ppi_channel_disable"], [107, 2, 1, "c.nrf_ppi_channel_enable", "nrf_ppi_channel_enable"], [107, 2, 1, "c.nrf_ppi_channel_enable_get", "nrf_ppi_channel_enable_get"], [107, 4, 1, "c.nrf_ppi_channel_enable_t", "nrf_ppi_channel_enable_t"], [107, 2, 1, "c.nrf_ppi_channel_endpoint_setup", "nrf_ppi_channel_endpoint_setup"], [107, 4, 1, "c.nrf_ppi_channel_group_t", "nrf_ppi_channel_group_t"], [107, 2, 1, "c.nrf_ppi_channel_include_in_group", "nrf_ppi_channel_include_in_group"], [107, 4, 1, "c.nrf_ppi_channel_include_t", "nrf_ppi_channel_include_t"], [107, 2, 1, "c.nrf_ppi_channel_remove_from_group", "nrf_ppi_channel_remove_from_group"], [107, 4, 1, "c.nrf_ppi_channel_t", "nrf_ppi_channel_t"], [107, 2, 1, "c.nrf_ppi_channels_disable", "nrf_ppi_channels_disable"], [107, 2, 1, "c.nrf_ppi_channels_disable_all", "nrf_ppi_channels_disable_all"], [107, 2, 1, "c.nrf_ppi_channels_enable", "nrf_ppi_channels_enable"], [107, 2, 1, "c.nrf_ppi_channels_group_set", "nrf_ppi_channels_group_set"], [107, 2, 1, "c.nrf_ppi_channels_include_in_group", "nrf_ppi_channels_include_in_group"], [107, 2, 1, "c.nrf_ppi_channels_remove_from_group", "nrf_ppi_channels_remove_from_group"], [107, 2, 1, "c.nrf_ppi_event_endpoint_setup", "nrf_ppi_event_endpoint_setup"], [107, 2, 1, "c.nrf_ppi_fork_endpoint_setup", "nrf_ppi_fork_endpoint_setup"], [107, 2, 1, "c.nrf_ppi_group_clear", "nrf_ppi_group_clear"], [107, 2, 1, "c.nrf_ppi_group_disable", "nrf_ppi_group_disable"], [107, 2, 1, "c.nrf_ppi_group_disable_task_get", "nrf_ppi_group_disable_task_get"], [107, 2, 1, "c.nrf_ppi_group_enable", "nrf_ppi_group_enable"], [107, 2, 1, "c.nrf_ppi_group_enable_task_get", "nrf_ppi_group_enable_task_get"], [107, 2, 1, "c.nrf_ppi_task_address_get", "nrf_ppi_task_address_get"], [107, 2, 1, "c.nrf_ppi_task_endpoint_setup", "nrf_ppi_task_endpoint_setup"], [107, 2, 1, "c.nrf_ppi_task_group_disable_address_get", "nrf_ppi_task_group_disable_address_get"], [107, 2, 1, "c.nrf_ppi_task_group_enable_address_get", "nrf_ppi_task_group_enable_address_get"], [107, 4, 1, "c.nrf_ppi_task_t", "nrf_ppi_task_t"], [107, 2, 1, "c.nrf_ppi_task_trigger", "nrf_ppi_task_trigger"], [109, 4, 1, "c.nrf_ppib_event_t", "nrf_ppib_event_t"], [109, 2, 1, "c.nrf_ppib_overflow_check", "nrf_ppib_overflow_check"], [109, 2, 1, "c.nrf_ppib_overflow_get_and_clear", "nrf_ppib_overflow_get_and_clear"], [109, 2, 1, "c.nrf_ppib_publish_clear", "nrf_ppib_publish_clear"], [109, 2, 1, "c.nrf_ppib_publish_set", "nrf_ppib_publish_set"], [109, 2, 1, "c.nrf_ppib_receive_event_get", "nrf_ppib_receive_event_get"], [109, 4, 1, "c.nrf_ppib_send_mask_t", "nrf_ppib_send_mask_t"], [109, 2, 1, "c.nrf_ppib_send_task_get", "nrf_ppib_send_task_get"], [109, 2, 1, "c.nrf_ppib_subscribe_clear", "nrf_ppib_subscribe_clear"], [109, 2, 1, "c.nrf_ppib_subscribe_set", "nrf_ppib_subscribe_set"], [109, 4, 1, "c.nrf_ppib_task_t", "nrf_ppib_task_t"], [112, 4, 1, "c.nrf_pwm_clk_t", "nrf_pwm_clk_t"], [112, 2, 1, "c.nrf_pwm_configure", "nrf_pwm_configure"], [112, 4, 1, "c.nrf_pwm_dec_load_t", "nrf_pwm_dec_load_t"], [112, 4, 1, "c.nrf_pwm_dec_step_t", "nrf_pwm_dec_step_t"], [112, 2, 1, "c.nrf_pwm_decoder_set", "nrf_pwm_decoder_set"], [112, 2, 1, "c.nrf_pwm_disable", "nrf_pwm_disable"], [112, 2, 1, "c.nrf_pwm_enable", "nrf_pwm_enable"], [112, 2, 1, "c.nrf_pwm_enable_check", "nrf_pwm_enable_check"], [112, 2, 1, "c.nrf_pwm_event_address_get", "nrf_pwm_event_address_get"], [112, 2, 1, "c.nrf_pwm_event_check", "nrf_pwm_event_check"], [112, 2, 1, "c.nrf_pwm_event_clear", "nrf_pwm_event_clear"], [112, 4, 1, "c.nrf_pwm_event_t", "nrf_pwm_event_t"], [112, 2, 1, "c.nrf_pwm_int_disable", "nrf_pwm_int_disable"], [112, 2, 1, "c.nrf_pwm_int_enable", "nrf_pwm_int_enable"], [112, 2, 1, "c.nrf_pwm_int_enable_check", "nrf_pwm_int_enable_check"], [112, 4, 1, "c.nrf_pwm_int_mask_t", "nrf_pwm_int_mask_t"], [112, 2, 1, "c.nrf_pwm_int_set", "nrf_pwm_int_set"], [112, 2, 1, "c.nrf_pwm_loop_set", "nrf_pwm_loop_set"], [112, 4, 1, "c.nrf_pwm_mode_t", "nrf_pwm_mode_t"], [112, 2, 1, "c.nrf_pwm_pin_get", "nrf_pwm_pin_get"], [112, 2, 1, "c.nrf_pwm_pins_set", "nrf_pwm_pins_set"], [112, 2, 1, "c.nrf_pwm_publish_clear", "nrf_pwm_publish_clear"], [112, 2, 1, "c.nrf_pwm_publish_set", "nrf_pwm_publish_set"], [112, 2, 1, "c.nrf_pwm_seq_cnt_set", "nrf_pwm_seq_cnt_set"], [112, 2, 1, "c.nrf_pwm_seq_end_delay_set", "nrf_pwm_seq_end_delay_set"], [112, 2, 1, "c.nrf_pwm_seq_ptr_set", "nrf_pwm_seq_ptr_set"], [112, 2, 1, "c.nrf_pwm_seq_refresh_set", "nrf_pwm_seq_refresh_set"], [112, 2, 1, "c.nrf_pwm_seqend_event_get", "nrf_pwm_seqend_event_get"], [112, 2, 1, "c.nrf_pwm_seqstart_task_get", "nrf_pwm_seqstart_task_get"], [112, 2, 1, "c.nrf_pwm_sequence_set", "nrf_pwm_sequence_set"], [112, 5, 1, "c.nrf_pwm_sequence_t", "nrf_pwm_sequence_t"], [112, 4, 1, "c.nrf_pwm_short_mask_t", "nrf_pwm_short_mask_t"], [112, 2, 1, "c.nrf_pwm_shorts_disable", "nrf_pwm_shorts_disable"], [112, 2, 1, "c.nrf_pwm_shorts_enable", "nrf_pwm_shorts_enable"], [112, 2, 1, "c.nrf_pwm_shorts_set", "nrf_pwm_shorts_set"], [112, 2, 1, "c.nrf_pwm_subscribe_clear", "nrf_pwm_subscribe_clear"], [112, 2, 1, "c.nrf_pwm_subscribe_set", "nrf_pwm_subscribe_set"], [112, 2, 1, "c.nrf_pwm_task_address_get", "nrf_pwm_task_address_get"], [112, 4, 1, "c.nrf_pwm_task_t", "nrf_pwm_task_t"], [112, 2, 1, "c.nrf_pwm_task_trigger", "nrf_pwm_task_trigger"], [112, 7, 1, "c.nrf_pwm_values_common_t", "nrf_pwm_values_common_t"], [112, 5, 1, "c.nrf_pwm_values_grouped_t", "nrf_pwm_values_grouped_t"], [112, 5, 1, "c.nrf_pwm_values_individual_t", "nrf_pwm_values_individual_t"], [112, 8, 1, "c.nrf_pwm_values_t", "nrf_pwm_values_t"], [112, 5, 1, "c.nrf_pwm_values_wave_form_t", "nrf_pwm_values_wave_form_t"], [116, 2, 1, "c.nrf_qdec_acc_get", "nrf_qdec_acc_get"], [116, 2, 1, "c.nrf_qdec_accdbl_get", "nrf_qdec_accdbl_get"], [116, 2, 1, "c.nrf_qdec_accdblread_get", "nrf_qdec_accdblread_get"], [116, 2, 1, "c.nrf_qdec_accread_get", "nrf_qdec_accread_get"], [116, 2, 1, "c.nrf_qdec_dbfen_disable", "nrf_qdec_dbfen_disable"], [116, 2, 1, "c.nrf_qdec_dbfen_enable", "nrf_qdec_dbfen_enable"], [116, 2, 1, "c.nrf_qdec_dbfen_get", "nrf_qdec_dbfen_get"], [116, 4, 1, "c.nrf_qdec_dbfen_t", "nrf_qdec_dbfen_t"], [116, 2, 1, "c.nrf_qdec_disable", "nrf_qdec_disable"], [116, 2, 1, "c.nrf_qdec_enable", "nrf_qdec_enable"], [116, 2, 1, "c.nrf_qdec_enable_get", "nrf_qdec_enable_get"], [116, 4, 1, "c.nrf_qdec_enable_t", "nrf_qdec_enable_t"], [116, 2, 1, "c.nrf_qdec_event_address_get", "nrf_qdec_event_address_get"], [116, 2, 1, "c.nrf_qdec_event_check", "nrf_qdec_event_check"], [116, 2, 1, "c.nrf_qdec_event_clear", "nrf_qdec_event_clear"], [116, 4, 1, "c.nrf_qdec_event_t", "nrf_qdec_event_t"], [116, 2, 1, "c.nrf_qdec_int_disable", "nrf_qdec_int_disable"], [116, 2, 1, "c.nrf_qdec_int_enable", "nrf_qdec_int_enable"], [116, 2, 1, "c.nrf_qdec_int_enable_check", "nrf_qdec_int_enable_check"], [116, 4, 1, "c.nrf_qdec_int_mask_t", "nrf_qdec_int_mask_t"], [116, 2, 1, "c.nrf_qdec_led_pin_get", "nrf_qdec_led_pin_get"], [116, 2, 1, "c.nrf_qdec_ledpol_get", "nrf_qdec_ledpol_get"], [116, 2, 1, "c.nrf_qdec_ledpol_set", "nrf_qdec_ledpol_set"], [116, 4, 1, "c.nrf_qdec_ledpol_t", "nrf_qdec_ledpol_t"], [116, 2, 1, "c.nrf_qdec_ledpre_get", "nrf_qdec_ledpre_get"], [116, 2, 1, "c.nrf_qdec_ledpre_set", "nrf_qdec_ledpre_set"], [116, 2, 1, "c.nrf_qdec_phase_a_pin_get", "nrf_qdec_phase_a_pin_get"], [116, 2, 1, "c.nrf_qdec_phase_b_pin_get", "nrf_qdec_phase_b_pin_get"], [116, 2, 1, "c.nrf_qdec_pins_set", "nrf_qdec_pins_set"], [116, 2, 1, "c.nrf_qdec_reportper_get", "nrf_qdec_reportper_get"], [116, 2, 1, "c.nrf_qdec_reportper_set", "nrf_qdec_reportper_set"], [116, 4, 1, "c.nrf_qdec_reportper_t", "nrf_qdec_reportper_t"], [116, 2, 1, "c.nrf_qdec_reportper_to_value", "nrf_qdec_reportper_to_value"], [116, 2, 1, "c.nrf_qdec_sample_get", "nrf_qdec_sample_get"], [116, 2, 1, "c.nrf_qdec_sampleper_get", "nrf_qdec_sampleper_get"], [116, 2, 1, "c.nrf_qdec_sampleper_set", "nrf_qdec_sampleper_set"], [116, 4, 1, "c.nrf_qdec_sampleper_t", "nrf_qdec_sampleper_t"], [116, 2, 1, "c.nrf_qdec_sampleper_to_value", "nrf_qdec_sampleper_to_value"], [116, 4, 1, "c.nrf_qdec_short_mask_t", "nrf_qdec_short_mask_t"], [116, 2, 1, "c.nrf_qdec_shorts_disable", "nrf_qdec_shorts_disable"], [116, 2, 1, "c.nrf_qdec_shorts_enable", "nrf_qdec_shorts_enable"], [116, 2, 1, "c.nrf_qdec_task_address_get", "nrf_qdec_task_address_get"], [116, 4, 1, "c.nrf_qdec_task_t", "nrf_qdec_task_t"], [116, 2, 1, "c.nrf_qdec_task_trigger", "nrf_qdec_task_trigger"], [120, 5, 1, "c.nrf_qspi_addrconfig_conf_t", "nrf_qspi_addrconfig_conf_t"], [120, 4, 1, "c.nrf_qspi_addrconfig_mode_t", "nrf_qspi_addrconfig_mode_t"], [120, 2, 1, "c.nrf_qspi_addrconfig_set", "nrf_qspi_addrconfig_set"], [120, 4, 1, "c.nrf_qspi_addrmode_t", "nrf_qspi_addrmode_t"], [120, 2, 1, "c.nrf_qspi_busy_check", "nrf_qspi_busy_check"], [120, 5, 1, "c.nrf_qspi_cinstr_conf_t", "nrf_qspi_cinstr_conf_t"], [120, 4, 1, "c.nrf_qspi_cinstr_len_t", "nrf_qspi_cinstr_len_t"], [120, 2, 1, "c.nrf_qspi_cinstr_long_transfer_continue", "nrf_qspi_cinstr_long_transfer_continue"], [120, 2, 1, "c.nrf_qspi_cinstr_long_transfer_is_ongoing", "nrf_qspi_cinstr_long_transfer_is_ongoing"], [120, 2, 1, "c.nrf_qspi_cinstr_long_transfer_start", "nrf_qspi_cinstr_long_transfer_start"], [120, 2, 1, "c.nrf_qspi_cinstr_transfer_start", "nrf_qspi_cinstr_transfer_start"], [120, 2, 1, "c.nrf_qspi_cinstrdata_get", "nrf_qspi_cinstrdata_get"], [120, 2, 1, "c.nrf_qspi_cinstrdata_set", "nrf_qspi_cinstrdata_set"], [120, 2, 1, "c.nrf_qspi_disable", "nrf_qspi_disable"], [120, 2, 1, "c.nrf_qspi_dma_encryption_configure", "nrf_qspi_dma_encryption_configure"], [120, 2, 1, "c.nrf_qspi_dma_encryption_set", "nrf_qspi_dma_encryption_set"], [120, 2, 1, "c.nrf_qspi_enable", "nrf_qspi_enable"], [120, 5, 1, "c.nrf_qspi_encryption_t", "nrf_qspi_encryption_t"], [120, 2, 1, "c.nrf_qspi_erase_len_get", "nrf_qspi_erase_len_get"], [120, 4, 1, "c.nrf_qspi_erase_len_t", "nrf_qspi_erase_len_t"], [120, 2, 1, "c.nrf_qspi_erase_ptr_get", "nrf_qspi_erase_ptr_get"], [120, 2, 1, "c.nrf_qspi_erase_ptr_set", "nrf_qspi_erase_ptr_set"], [120, 2, 1, "c.nrf_qspi_event_address_get", "nrf_qspi_event_address_get"], [120, 2, 1, "c.nrf_qspi_event_check", "nrf_qspi_event_check"], [120, 2, 1, "c.nrf_qspi_event_clear", "nrf_qspi_event_clear"], [120, 4, 1, "c.nrf_qspi_event_t", "nrf_qspi_event_t"], [120, 4, 1, "c.nrf_qspi_frequency_t", "nrf_qspi_frequency_t"], [120, 2, 1, "c.nrf_qspi_ifconfig0_raw_get", "nrf_qspi_ifconfig0_raw_get"], [120, 2, 1, "c.nrf_qspi_ifconfig0_raw_set", "nrf_qspi_ifconfig0_raw_set"], [120, 2, 1, "c.nrf_qspi_ifconfig0_set", "nrf_qspi_ifconfig0_set"], [120, 2, 1, "c.nrf_qspi_ifconfig1_set", "nrf_qspi_ifconfig1_set"], [120, 2, 1, "c.nrf_qspi_iftiming_set", "nrf_qspi_iftiming_set"], [120, 2, 1, "c.nrf_qspi_int_disable", "nrf_qspi_int_disable"], [120, 2, 1, "c.nrf_qspi_int_enable", "nrf_qspi_int_enable"], [120, 2, 1, "c.nrf_qspi_int_enable_check", "nrf_qspi_int_enable_check"], [120, 4, 1, "c.nrf_qspi_int_mask_t", "nrf_qspi_int_mask_t"], [120, 5, 1, "c.nrf_qspi_phy_conf_t", "nrf_qspi_phy_conf_t"], [120, 2, 1, "c.nrf_qspi_pins_get", "nrf_qspi_pins_get"], [120, 2, 1, "c.nrf_qspi_pins_set", "nrf_qspi_pins_set"], [120, 5, 1, "c.nrf_qspi_pins_t", "nrf_qspi_pins_t"], [120, 5, 1, "c.nrf_qspi_prot_conf_t", "nrf_qspi_prot_conf_t"], [120, 2, 1, "c.nrf_qspi_read_buffer_set", "nrf_qspi_read_buffer_set"], [120, 4, 1, "c.nrf_qspi_readoc_t", "nrf_qspi_readoc_t"], [120, 4, 1, "c.nrf_qspi_spi_mode_t", "nrf_qspi_spi_mode_t"], [120, 2, 1, "c.nrf_qspi_sreg_get", "nrf_qspi_sreg_get"], [120, 2, 1, "c.nrf_qspi_status_reg_get", "nrf_qspi_status_reg_get"], [120, 2, 1, "c.nrf_qspi_task_address_get", "nrf_qspi_task_address_get"], [120, 4, 1, "c.nrf_qspi_task_t", "nrf_qspi_task_t"], [120, 2, 1, "c.nrf_qspi_task_trigger", "nrf_qspi_task_trigger"], [120, 2, 1, "c.nrf_qspi_write_buffer_set", "nrf_qspi_write_buffer_set"], [120, 4, 1, "c.nrf_qspi_writeoc_t", "nrf_qspi_writeoc_t"], [120, 2, 1, "c.nrf_qspi_xip_encryption_configure", "nrf_qspi_xip_encryption_configure"], [120, 2, 1, "c.nrf_qspi_xip_encryption_set", "nrf_qspi_xip_encryption_set"], [120, 2, 1, "c.nrf_qspi_xip_offset_set", "nrf_qspi_xip_offset_set"], [120, 2, 1, "c.nrf_qspi_xip_set", "nrf_qspi_xip_set"], [122, 2, 1, "c.nrf_radio_base0_get", "nrf_radio_base0_get"], [122, 2, 1, "c.nrf_radio_base0_set", "nrf_radio_base0_set"], [122, 2, 1, "c.nrf_radio_base1_get", "nrf_radio_base1_get"], [122, 2, 1, "c.nrf_radio_base1_set", "nrf_radio_base1_set"], [122, 2, 1, "c.nrf_radio_bcc_get", "nrf_radio_bcc_get"], [122, 2, 1, "c.nrf_radio_bcc_set", "nrf_radio_bcc_set"], [122, 2, 1, "c.nrf_radio_cca_configure", "nrf_radio_cca_configure"], [122, 4, 1, "c.nrf_radio_cca_mode_t", "nrf_radio_cca_mode_t"], [122, 2, 1, "c.nrf_radio_cistat_get", "nrf_radio_cistat_get"], [122, 4, 1, "c.nrf_radio_crc_addr_t", "nrf_radio_crc_addr_t"], [122, 2, 1, "c.nrf_radio_crc_configure", "nrf_radio_crc_configure"], [122, 2, 1, "c.nrf_radio_crc_status_check", "nrf_radio_crc_status_check"], [122, 2, 1, "c.nrf_radio_crcinit_get", "nrf_radio_crcinit_get"], [122, 2, 1, "c.nrf_radio_crcinit_set", "nrf_radio_crcinit_set"], [122, 2, 1, "c.nrf_radio_cte_rfu_get", "nrf_radio_cte_rfu_get"], [122, 2, 1, "c.nrf_radio_cte_time_get", "nrf_radio_cte_time_get"], [122, 2, 1, "c.nrf_radio_cte_type_get", "nrf_radio_cte_type_get"], [122, 5, 1, "c.nrf_radio_cteinline_conf_t", "nrf_radio_cteinline_conf_t"], [122, 2, 1, "c.nrf_radio_cteinline_configure", "nrf_radio_cteinline_configure"], [122, 4, 1, "c.nrf_radio_cteinline_rx_mode_t", "nrf_radio_cteinline_rx_mode_t"], [122, 4, 1, "c.nrf_radio_cteinline_time_range_t", "nrf_radio_cteinline_time_range_t"], [122, 2, 1, "c.nrf_radio_dab_get", "nrf_radio_dab_get"], [122, 2, 1, "c.nrf_radio_dab_set", "nrf_radio_dab_set"], [122, 2, 1, "c.nrf_radio_dacnf_ena_get", "nrf_radio_dacnf_ena_get"], [122, 2, 1, "c.nrf_radio_dacnf_set", "nrf_radio_dacnf_set"], [122, 2, 1, "c.nrf_radio_dacnf_txadd_get", "nrf_radio_dacnf_txadd_get"], [122, 2, 1, "c.nrf_radio_dai_get", "nrf_radio_dai_get"], [122, 2, 1, "c.nrf_radio_dap_get", "nrf_radio_dap_get"], [122, 2, 1, "c.nrf_radio_dap_set", "nrf_radio_dap_set"], [122, 2, 1, "c.nrf_radio_datawhiteiv_get", "nrf_radio_datawhiteiv_get"], [122, 2, 1, "c.nrf_radio_datawhiteiv_set", "nrf_radio_datawhiteiv_set"], [122, 2, 1, "c.nrf_radio_dfe_amount_get", "nrf_radio_dfe_amount_get"], [122, 2, 1, "c.nrf_radio_dfe_buffer_set", "nrf_radio_dfe_buffer_set"], [122, 2, 1, "c.nrf_radio_dfe_current_amount_get", "nrf_radio_dfe_current_amount_get"], [122, 4, 1, "c.nrf_radio_dfe_op_mode_t", "nrf_radio_dfe_op_mode_t"], [122, 2, 1, "c.nrf_radio_dfe_pattern_add", "nrf_radio_dfe_pattern_add"], [122, 2, 1, "c.nrf_radio_dfe_pattern_clear", "nrf_radio_dfe_pattern_clear"], [122, 2, 1, "c.nrf_radio_dfe_pattern_cnt_get", "nrf_radio_dfe_pattern_cnt_get"], [122, 2, 1, "c.nrf_radio_dfe_pattern_pin_set", "nrf_radio_dfe_pattern_pin_set"], [122, 2, 1, "c.nrf_radio_dfe_patterns_add", "nrf_radio_dfe_patterns_add"], [122, 2, 1, "c.nrf_radio_dfe_sample_state_get", "nrf_radio_dfe_sample_state_get"], [122, 4, 1, "c.nrf_radio_dfe_sample_state_t", "nrf_radio_dfe_sample_state_t"], [122, 2, 1, "c.nrf_radio_dfe_switch_state_get", "nrf_radio_dfe_switch_state_get"], [122, 4, 1, "c.nrf_radio_dfe_switch_state_t", "nrf_radio_dfe_switch_state_t"], [122, 5, 1, "c.nrf_radio_dfectrl_conf_t", "nrf_radio_dfectrl_conf_t"], [122, 2, 1, "c.nrf_radio_dfectrl_configure", "nrf_radio_dfectrl_configure"], [122, 4, 1, "c.nrf_radio_dfectrl_extension_t", "nrf_radio_dfectrl_extension_t"], [122, 4, 1, "c.nrf_radio_dfectrl_sample_spacing_t", "nrf_radio_dfectrl_sample_spacing_t"], [122, 4, 1, "c.nrf_radio_dfectrl_sample_type_t", "nrf_radio_dfectrl_sample_type_t"], [122, 4, 1, "c.nrf_radio_dfectrl_switch_spacing_t", "nrf_radio_dfectrl_switch_spacing_t"], [122, 2, 1, "c.nrf_radio_ed_cca_period_set", "nrf_radio_ed_cca_period_set"], [122, 2, 1, "c.nrf_radio_ed_loop_count_set", "nrf_radio_ed_loop_count_set"], [122, 2, 1, "c.nrf_radio_ed_sample_get", "nrf_radio_ed_sample_get"], [122, 2, 1, "c.nrf_radio_event_address_get", "nrf_radio_event_address_get"], [122, 2, 1, "c.nrf_radio_event_check", "nrf_radio_event_check"], [122, 2, 1, "c.nrf_radio_event_clear", "nrf_radio_event_clear"], [122, 4, 1, "c.nrf_radio_event_t", "nrf_radio_event_t"], [122, 2, 1, "c.nrf_radio_fast_ramp_up_check", "nrf_radio_fast_ramp_up_check"], [122, 2, 1, "c.nrf_radio_fast_ramp_up_enable_set", "nrf_radio_fast_ramp_up_enable_set"], [122, 2, 1, "c.nrf_radio_frequency_get", "nrf_radio_frequency_get"], [122, 2, 1, "c.nrf_radio_frequency_set", "nrf_radio_frequency_set"], [122, 2, 1, "c.nrf_radio_ifs_get", "nrf_radio_ifs_get"], [122, 2, 1, "c.nrf_radio_ifs_set", "nrf_radio_ifs_set"], [122, 2, 1, "c.nrf_radio_int_disable", "nrf_radio_int_disable"], [122, 2, 1, "c.nrf_radio_int_enable", "nrf_radio_int_enable"], [122, 2, 1, "c.nrf_radio_int_enable_check", "nrf_radio_int_enable_check"], [122, 4, 1, "c.nrf_radio_int_mask_t", "nrf_radio_int_mask_t"], [122, 2, 1, "c.nrf_radio_mhmu_pattern_mask_get", "nrf_radio_mhmu_pattern_mask_get"], [122, 2, 1, "c.nrf_radio_mhmu_pattern_mask_set", "nrf_radio_mhmu_pattern_mask_set"], [122, 2, 1, "c.nrf_radio_mhmu_search_pattern_get", "nrf_radio_mhmu_search_pattern_get"], [122, 2, 1, "c.nrf_radio_mhmu_search_pattern_set", "nrf_radio_mhmu_search_pattern_set"], [122, 2, 1, "c.nrf_radio_mode_get", "nrf_radio_mode_get"], [122, 2, 1, "c.nrf_radio_mode_set", "nrf_radio_mode_set"], [122, 4, 1, "c.nrf_radio_mode_t", "nrf_radio_mode_t"], [122, 2, 1, "c.nrf_radio_modecnf0_dtx_get", "nrf_radio_modecnf0_dtx_get"], [122, 2, 1, "c.nrf_radio_modecnf0_ru_get", "nrf_radio_modecnf0_ru_get"], [122, 2, 1, "c.nrf_radio_modecnf0_set", "nrf_radio_modecnf0_set"], [122, 5, 1, "c.nrf_radio_packet_conf_t", "nrf_radio_packet_conf_t"], [122, 2, 1, "c.nrf_radio_packet_configure", "nrf_radio_packet_configure"], [122, 2, 1, "c.nrf_radio_packetptr_get", "nrf_radio_packetptr_get"], [122, 2, 1, "c.nrf_radio_packetptr_set", "nrf_radio_packetptr_set"], [122, 2, 1, "c.nrf_radio_pdustat_get", "nrf_radio_pdustat_get"], [122, 2, 1, "c.nrf_radio_power_set", "nrf_radio_power_set"], [122, 4, 1, "c.nrf_radio_preamble_length_t", "nrf_radio_preamble_length_t"], [122, 2, 1, "c.nrf_radio_prefix0_get", "nrf_radio_prefix0_get"], [122, 2, 1, "c.nrf_radio_prefix0_set", "nrf_radio_prefix0_set"], [122, 2, 1, "c.nrf_radio_prefix1_get", "nrf_radio_prefix1_get"], [122, 2, 1, "c.nrf_radio_prefix1_set", "nrf_radio_prefix1_set"], [122, 2, 1, "c.nrf_radio_publish_clear", "nrf_radio_publish_clear"], [122, 2, 1, "c.nrf_radio_publish_set", "nrf_radio_publish_set"], [122, 2, 1, "c.nrf_radio_rssi_sample_get", "nrf_radio_rssi_sample_get"], [122, 2, 1, "c.nrf_radio_rxaddresses_get", "nrf_radio_rxaddresses_get"], [122, 2, 1, "c.nrf_radio_rxaddresses_set", "nrf_radio_rxaddresses_set"], [122, 2, 1, "c.nrf_radio_rxcrc_get", "nrf_radio_rxcrc_get"], [122, 2, 1, "c.nrf_radio_rxmatch_get", "nrf_radio_rxmatch_get"], [122, 2, 1, "c.nrf_radio_sfd_get", "nrf_radio_sfd_get"], [122, 2, 1, "c.nrf_radio_sfd_set", "nrf_radio_sfd_set"], [122, 4, 1, "c.nrf_radio_short_mask_t", "nrf_radio_short_mask_t"], [122, 2, 1, "c.nrf_radio_shorts_disable", "nrf_radio_shorts_disable"], [122, 2, 1, "c.nrf_radio_shorts_enable", "nrf_radio_shorts_enable"], [122, 2, 1, "c.nrf_radio_shorts_get", "nrf_radio_shorts_get"], [122, 2, 1, "c.nrf_radio_shorts_set", "nrf_radio_shorts_set"], [122, 2, 1, "c.nrf_radio_state_get", "nrf_radio_state_get"], [122, 4, 1, "c.nrf_radio_state_t", "nrf_radio_state_t"], [122, 2, 1, "c.nrf_radio_subscribe_clear", "nrf_radio_subscribe_clear"], [122, 2, 1, "c.nrf_radio_subscribe_set", "nrf_radio_subscribe_set"], [122, 2, 1, "c.nrf_radio_task_address_get", "nrf_radio_task_address_get"], [122, 4, 1, "c.nrf_radio_task_t", "nrf_radio_task_t"], [122, 2, 1, "c.nrf_radio_task_trigger", "nrf_radio_task_trigger"], [122, 2, 1, "c.nrf_radio_txaddress_get", "nrf_radio_txaddress_get"], [122, 2, 1, "c.nrf_radio_txaddress_set", "nrf_radio_txaddress_set"], [122, 2, 1, "c.nrf_radio_txpower_get", "nrf_radio_txpower_get"], [122, 2, 1, "c.nrf_radio_txpower_set", "nrf_radio_txpower_set"], [122, 4, 1, "c.nrf_radio_txpower_t", "nrf_radio_txpower_t"], [124, 2, 1, "c.nrf_ramc_event_address_get", "nrf_ramc_event_address_get"], [124, 2, 1, "c.nrf_ramc_event_check", "nrf_ramc_event_check"], [124, 2, 1, "c.nrf_ramc_event_clear", "nrf_ramc_event_clear"], [124, 4, 1, "c.nrf_ramc_event_t", "nrf_ramc_event_t"], [124, 2, 1, "c.nrf_ramc_secbase_get", "nrf_ramc_secbase_get"], [124, 2, 1, "c.nrf_ramc_secbase_set", "nrf_ramc_secbase_set"], [124, 2, 1, "c.nrf_ramc_secenable_check", "nrf_ramc_secenable_check"], [124, 2, 1, "c.nrf_ramc_secenable_set", "nrf_ramc_secenable_set"], [124, 2, 1, "c.nrf_ramc_waitstates_get", "nrf_ramc_waitstates_get"], [124, 2, 1, "c.nrf_ramc_waitstates_set", "nrf_ramc_waitstates_set"], [126, 2, 1, "c.nrf_regulators_elv_mode_allow_get", "nrf_regulators_elv_mode_allow_get"], [126, 4, 1, "c.nrf_regulators_elv_mode_allow_mask_t", "nrf_regulators_elv_mode_allow_mask_t"], [126, 2, 1, "c.nrf_regulators_elv_mode_allow_set", "nrf_regulators_elv_mode_allow_set"], [126, 2, 1, "c.nrf_regulators_inductor_check", "nrf_regulators_inductor_check"], [126, 2, 1, "c.nrf_regulators_main_status_get", "nrf_regulators_main_status_get"], [126, 4, 1, "c.nrf_regulators_main_status_t", "nrf_regulators_main_status_t"], [126, 2, 1, "c.nrf_regulators_pof_below_thr_check", "nrf_regulators_pof_below_thr_check"], [126, 2, 1, "c.nrf_regulators_pof_config_get", "nrf_regulators_pof_config_get"], [126, 2, 1, "c.nrf_regulators_pof_config_set", "nrf_regulators_pof_config_set"], [126, 5, 1, "c.nrf_regulators_pof_config_t", "nrf_regulators_pof_config_t"], [126, 4, 1, "c.nrf_regulators_pof_thr_t", "nrf_regulators_pof_thr_t"], [126, 4, 1, "c.nrf_regulators_pof_thr_vddh_t", "nrf_regulators_pof_thr_vddh_t"], [126, 2, 1, "c.nrf_regulators_system_off", "nrf_regulators_system_off"], [126, 2, 1, "c.nrf_regulators_vreg_enable_check", "nrf_regulators_vreg_enable_check"], [126, 2, 1, "c.nrf_regulators_vreg_enable_set", "nrf_regulators_vreg_enable_set"], [126, 4, 1, "c.nrf_regulators_vreg_t", "nrf_regulators_vreg_t"], [127, 2, 1, "c.nrf_reset_network_force_off", "nrf_reset_network_force_off"], [127, 2, 1, "c.nrf_reset_resetreas_clear", "nrf_reset_resetreas_clear"], [127, 2, 1, "c.nrf_reset_resetreas_get", "nrf_reset_resetreas_get"], [127, 4, 1, "c.nrf_reset_resetreas_mask_t", "nrf_reset_resetreas_mask_t"], [128, 2, 1, "c.nrf_resetinfo_error_address_get", "nrf_resetinfo_error_address_get"], [128, 2, 1, "c.nrf_resetinfo_error_address_set", "nrf_resetinfo_error_address_set"], [128, 2, 1, "c.nrf_resetinfo_error_status_get", "nrf_resetinfo_error_status_get"], [128, 2, 1, "c.nrf_resetinfo_error_status_set", "nrf_resetinfo_error_status_set"], [128, 2, 1, "c.nrf_resetinfo_mask_lockup_check", "nrf_resetinfo_mask_lockup_check"], [128, 2, 1, "c.nrf_resetinfo_mask_lockup_set", "nrf_resetinfo_mask_lockup_set"], [128, 2, 1, "c.nrf_resetinfo_resetreas_global_get", "nrf_resetinfo_resetreas_global_get"], [128, 4, 1, "c.nrf_resetinfo_resetreas_global_mask_t", "nrf_resetinfo_resetreas_global_mask_t"], [128, 2, 1, "c.nrf_resetinfo_resetreas_global_set", "nrf_resetinfo_resetreas_global_set"], [128, 2, 1, "c.nrf_resetinfo_resetreas_local_get", "nrf_resetinfo_resetreas_local_get"], [128, 4, 1, "c.nrf_resetinfo_resetreas_local_mask_t", "nrf_resetinfo_resetreas_local_mask_t"], [128, 2, 1, "c.nrf_resetinfo_resetreas_local_set", "nrf_resetinfo_resetreas_local_set"], [128, 2, 1, "c.nrf_resetinfo_restore_valid_check", "nrf_resetinfo_restore_valid_check"], [128, 2, 1, "c.nrf_resetinfo_restore_valid_set", "nrf_resetinfo_restore_valid_set"], [131, 2, 1, "c.nrf_rng_error_correction_disable", "nrf_rng_error_correction_disable"], [131, 2, 1, "c.nrf_rng_error_correction_enable", "nrf_rng_error_correction_enable"], [131, 2, 1, "c.nrf_rng_event_address_get", "nrf_rng_event_address_get"], [131, 2, 1, "c.nrf_rng_event_check", "nrf_rng_event_check"], [131, 2, 1, "c.nrf_rng_event_clear", "nrf_rng_event_clear"], [131, 4, 1, "c.nrf_rng_event_t", "nrf_rng_event_t"], [131, 2, 1, "c.nrf_rng_int_disable", "nrf_rng_int_disable"], [131, 2, 1, "c.nrf_rng_int_enable", "nrf_rng_int_enable"], [131, 2, 1, "c.nrf_rng_int_enable_check", "nrf_rng_int_enable_check"], [131, 4, 1, "c.nrf_rng_int_mask_t", "nrf_rng_int_mask_t"], [131, 2, 1, "c.nrf_rng_publish_clear", "nrf_rng_publish_clear"], [131, 2, 1, "c.nrf_rng_publish_set", "nrf_rng_publish_set"], [131, 2, 1, "c.nrf_rng_random_value_get", "nrf_rng_random_value_get"], [131, 4, 1, "c.nrf_rng_short_mask_t", "nrf_rng_short_mask_t"], [131, 2, 1, "c.nrf_rng_shorts_disable", "nrf_rng_shorts_disable"], [131, 2, 1, "c.nrf_rng_shorts_enable", "nrf_rng_shorts_enable"], [131, 2, 1, "c.nrf_rng_subscribe_clear", "nrf_rng_subscribe_clear"], [131, 2, 1, "c.nrf_rng_subscribe_set", "nrf_rng_subscribe_set"], [131, 2, 1, "c.nrf_rng_task_address_get", "nrf_rng_task_address_get"], [131, 4, 1, "c.nrf_rng_task_t", "nrf_rng_task_t"], [131, 2, 1, "c.nrf_rng_task_trigger", "nrf_rng_task_trigger"], [134, 2, 1, "c.nrf_rramc_config_get", "nrf_rramc_config_get"], [134, 2, 1, "c.nrf_rramc_config_set", "nrf_rramc_config_set"], [134, 5, 1, "c.nrf_rramc_config_t", "nrf_rramc_config_t"], [134, 2, 1, "c.nrf_rramc_empty_buffer_check", "nrf_rramc_empty_buffer_check"], [134, 2, 1, "c.nrf_rramc_erase_all_check", "nrf_rramc_erase_all_check"], [134, 2, 1, "c.nrf_rramc_erase_all_set", "nrf_rramc_erase_all_set"], [134, 2, 1, "c.nrf_rramc_error_access_addr_get", "nrf_rramc_error_access_addr_get"], [134, 2, 1, "c.nrf_rramc_event_address_get", "nrf_rramc_event_address_get"], [134, 2, 1, "c.nrf_rramc_event_check", "nrf_rramc_event_check"], [134, 2, 1, "c.nrf_rramc_event_clear", "nrf_rramc_event_clear"], [134, 4, 1, "c.nrf_rramc_event_t", "nrf_rramc_event_t"], [134, 2, 1, "c.nrf_rramc_int_disable", "nrf_rramc_int_disable"], [134, 2, 1, "c.nrf_rramc_int_enable", "nrf_rramc_int_enable"], [134, 2, 1, "c.nrf_rramc_int_enable_check", "nrf_rramc_int_enable_check"], [134, 4, 1, "c.nrf_rramc_int_mask_t", "nrf_rramc_int_mask_t"], [134, 2, 1, "c.nrf_rramc_int_pending_get", "nrf_rramc_int_pending_get"], [134, 2, 1, "c.nrf_rramc_power_config_get", "nrf_rramc_power_config_get"], [134, 2, 1, "c.nrf_rramc_power_config_set", "nrf_rramc_power_config_set"], [134, 5, 1, "c.nrf_rramc_power_t", "nrf_rramc_power_t"], [134, 2, 1, "c.nrf_rramc_publish_clear", "nrf_rramc_publish_clear"], [134, 2, 1, "c.nrf_rramc_publish_set", "nrf_rramc_publish_set"], [134, 2, 1, "c.nrf_rramc_ready_check", "nrf_rramc_ready_check"], [134, 2, 1, "c.nrf_rramc_ready_next_timeout_get", "nrf_rramc_ready_next_timeout_get"], [134, 2, 1, "c.nrf_rramc_ready_next_timeout_set", "nrf_rramc_ready_next_timeout_set"], [134, 5, 1, "c.nrf_rramc_ready_next_timeout_t", "nrf_rramc_ready_next_timeout_t"], [134, 2, 1, "c.nrf_rramc_region_config_get", "nrf_rramc_region_config_get"], [134, 2, 1, "c.nrf_rramc_region_config_set", "nrf_rramc_region_config_set"], [134, 5, 1, "c.nrf_rramc_region_config_t", "nrf_rramc_region_config_t"], [134, 4, 1, "c.nrf_rramc_region_perm_mask_t", "nrf_rramc_region_perm_mask_t"], [134, 2, 1, "c.nrf_rramc_subscribe_clear", "nrf_rramc_subscribe_clear"], [134, 2, 1, "c.nrf_rramc_subscribe_set", "nrf_rramc_subscribe_set"], [134, 2, 1, "c.nrf_rramc_task_address_get", "nrf_rramc_task_address_get"], [134, 4, 1, "c.nrf_rramc_task_t", "nrf_rramc_task_t"], [134, 2, 1, "c.nrf_rramc_task_trigger", "nrf_rramc_task_trigger"], [134, 2, 1, "c.nrf_rramc_write_ready_check", "nrf_rramc_write_ready_check"], [138, 2, 1, "c.nrf_rtc_capture_task_get", "nrf_rtc_capture_task_get"], [138, 2, 1, "c.nrf_rtc_cc_get", "nrf_rtc_cc_get"], [138, 2, 1, "c.nrf_rtc_cc_set", "nrf_rtc_cc_set"], [138, 2, 1, "c.nrf_rtc_compare_event_get", "nrf_rtc_compare_event_get"], [138, 2, 1, "c.nrf_rtc_counter_get", "nrf_rtc_counter_get"], [138, 2, 1, "c.nrf_rtc_event_address_get", "nrf_rtc_event_address_get"], [138, 2, 1, "c.nrf_rtc_event_check", "nrf_rtc_event_check"], [138, 2, 1, "c.nrf_rtc_event_clear", "nrf_rtc_event_clear"], [138, 2, 1, "c.nrf_rtc_event_disable", "nrf_rtc_event_disable"], [138, 2, 1, "c.nrf_rtc_event_enable", "nrf_rtc_event_enable"], [138, 4, 1, "c.nrf_rtc_event_t", "nrf_rtc_event_t"], [138, 2, 1, "c.nrf_rtc_int_disable", "nrf_rtc_int_disable"], [138, 2, 1, "c.nrf_rtc_int_enable", "nrf_rtc_int_enable"], [138, 2, 1, "c.nrf_rtc_int_enable_check", "nrf_rtc_int_enable_check"], [138, 4, 1, "c.nrf_rtc_int_t", "nrf_rtc_int_t"], [138, 2, 1, "c.nrf_rtc_prescaler_get", "nrf_rtc_prescaler_get"], [138, 2, 1, "c.nrf_rtc_prescaler_set", "nrf_rtc_prescaler_set"], [138, 2, 1, "c.nrf_rtc_publish_clear", "nrf_rtc_publish_clear"], [138, 2, 1, "c.nrf_rtc_publish_set", "nrf_rtc_publish_set"], [138, 2, 1, "c.nrf_rtc_subscribe_clear", "nrf_rtc_subscribe_clear"], [138, 2, 1, "c.nrf_rtc_subscribe_set", "nrf_rtc_subscribe_set"], [138, 2, 1, "c.nrf_rtc_task_address_get", "nrf_rtc_task_address_get"], [138, 4, 1, "c.nrf_rtc_task_t", "nrf_rtc_task_t"], [138, 2, 1, "c.nrf_rtc_task_trigger", "nrf_rtc_task_trigger"], [142, 4, 1, "c.nrf_saadc_acqtime_t", "nrf_saadc_acqtime_t"], [142, 2, 1, "c.nrf_saadc_amount_get", "nrf_saadc_amount_get"], [142, 2, 1, "c.nrf_saadc_buffer_init", "nrf_saadc_buffer_init"], [142, 2, 1, "c.nrf_saadc_buffer_pointer_get", "nrf_saadc_buffer_pointer_get"], [142, 2, 1, "c.nrf_saadc_buffer_pointer_set", "nrf_saadc_buffer_pointer_set"], [142, 2, 1, "c.nrf_saadc_burst_set", "nrf_saadc_burst_set"], [142, 4, 1, "c.nrf_saadc_burst_t", "nrf_saadc_burst_t"], [142, 2, 1, "c.nrf_saadc_busy_check", "nrf_saadc_busy_check"], [142, 5, 1, "c.nrf_saadc_channel_config_t", "nrf_saadc_channel_config_t"], [142, 2, 1, "c.nrf_saadc_channel_init", "nrf_saadc_channel_init"], [142, 2, 1, "c.nrf_saadc_channel_input_set", "nrf_saadc_channel_input_set"], [142, 2, 1, "c.nrf_saadc_channel_limits_set", "nrf_saadc_channel_limits_set"], [142, 2, 1, "c.nrf_saadc_channel_pos_input_set", "nrf_saadc_channel_pos_input_set"], [142, 5, 1, "c.nrf_saadc_config_t", "nrf_saadc_config_t"], [142, 2, 1, "c.nrf_saadc_continuous_mode_disable", "nrf_saadc_continuous_mode_disable"], [142, 2, 1, "c.nrf_saadc_continuous_mode_enable", "nrf_saadc_continuous_mode_enable"], [142, 2, 1, "c.nrf_saadc_continuous_mode_enable_check", "nrf_saadc_continuous_mode_enable_check"], [142, 2, 1, "c.nrf_saadc_disable", "nrf_saadc_disable"], [142, 2, 1, "c.nrf_saadc_enable", "nrf_saadc_enable"], [142, 2, 1, "c.nrf_saadc_enable_check", "nrf_saadc_enable_check"], [142, 2, 1, "c.nrf_saadc_event_address_get", "nrf_saadc_event_address_get"], [142, 2, 1, "c.nrf_saadc_event_check", "nrf_saadc_event_check"], [142, 2, 1, "c.nrf_saadc_event_clear", "nrf_saadc_event_clear"], [142, 4, 1, "c.nrf_saadc_event_t", "nrf_saadc_event_t"], [142, 4, 1, "c.nrf_saadc_gain_t", "nrf_saadc_gain_t"], [142, 7, 1, "c.nrf_saadc_input_t", "nrf_saadc_input_t"], [142, 2, 1, "c.nrf_saadc_int_disable", "nrf_saadc_int_disable"], [142, 2, 1, "c.nrf_saadc_int_enable", "nrf_saadc_int_enable"], [142, 2, 1, "c.nrf_saadc_int_enable_check", "nrf_saadc_int_enable_check"], [142, 4, 1, "c.nrf_saadc_int_mask_t", "nrf_saadc_int_mask_t"], [142, 2, 1, "c.nrf_saadc_int_set", "nrf_saadc_int_set"], [142, 2, 1, "c.nrf_saadc_limit_event_get", "nrf_saadc_limit_event_get"], [142, 2, 1, "c.nrf_saadc_limit_int_get", "nrf_saadc_limit_int_get"], [142, 4, 1, "c.nrf_saadc_limit_t", "nrf_saadc_limit_t"], [142, 2, 1, "c.nrf_saadc_linearity_calibration_coeff_get", "nrf_saadc_linearity_calibration_coeff_get"], [142, 2, 1, "c.nrf_saadc_linearity_calibration_coeff_set", "nrf_saadc_linearity_calibration_coeff_set"], [142, 4, 1, "c.nrf_saadc_mode_t", "nrf_saadc_mode_t"], [142, 2, 1, "c.nrf_saadc_oversample_get", "nrf_saadc_oversample_get"], [142, 2, 1, "c.nrf_saadc_oversample_sample_count_get", "nrf_saadc_oversample_sample_count_get"], [142, 2, 1, "c.nrf_saadc_oversample_set", "nrf_saadc_oversample_set"], [142, 4, 1, "c.nrf_saadc_oversample_t", "nrf_saadc_oversample_t"], [142, 2, 1, "c.nrf_saadc_publish_clear", "nrf_saadc_publish_clear"], [142, 2, 1, "c.nrf_saadc_publish_set", "nrf_saadc_publish_set"], [142, 4, 1, "c.nrf_saadc_reference_t", "nrf_saadc_reference_t"], [142, 4, 1, "c.nrf_saadc_resistor_t", "nrf_saadc_resistor_t"], [142, 2, 1, "c.nrf_saadc_resolution_get", "nrf_saadc_resolution_get"], [142, 2, 1, "c.nrf_saadc_resolution_set", "nrf_saadc_resolution_set"], [142, 4, 1, "c.nrf_saadc_resolution_t", "nrf_saadc_resolution_t"], [142, 2, 1, "c.nrf_saadc_subscribe_clear", "nrf_saadc_subscribe_clear"], [142, 2, 1, "c.nrf_saadc_subscribe_set", "nrf_saadc_subscribe_set"], [142, 2, 1, "c.nrf_saadc_task_address_get", "nrf_saadc_task_address_get"], [142, 4, 1, "c.nrf_saadc_task_t", "nrf_saadc_task_t"], [142, 2, 1, "c.nrf_saadc_task_trigger", "nrf_saadc_task_trigger"], [142, 2, 1, "c.nrf_saadc_value_max_get", "nrf_saadc_value_max_get"], [142, 2, 1, "c.nrf_saadc_value_min_get", "nrf_saadc_value_min_get"], [142, 7, 1, "c.nrf_saadc_value_t", "nrf_saadc_value_t"], [146, 4, 1, "c.nrf_spi_bit_order_t", "nrf_spi_bit_order_t"], [146, 2, 1, "c.nrf_spi_configure", "nrf_spi_configure"], [146, 2, 1, "c.nrf_spi_disable", "nrf_spi_disable"], [146, 2, 1, "c.nrf_spi_enable", "nrf_spi_enable"], [146, 2, 1, "c.nrf_spi_event_address_get", "nrf_spi_event_address_get"], [146, 2, 1, "c.nrf_spi_event_check", "nrf_spi_event_check"], [146, 2, 1, "c.nrf_spi_event_clear", "nrf_spi_event_clear"], [146, 4, 1, "c.nrf_spi_event_t", "nrf_spi_event_t"], [146, 2, 1, "c.nrf_spi_frequency_set", "nrf_spi_frequency_set"], [146, 4, 1, "c.nrf_spi_frequency_t", "nrf_spi_frequency_t"], [146, 2, 1, "c.nrf_spi_int_disable", "nrf_spi_int_disable"], [146, 2, 1, "c.nrf_spi_int_enable", "nrf_spi_int_enable"], [146, 2, 1, "c.nrf_spi_int_enable_check", "nrf_spi_int_enable_check"], [146, 4, 1, "c.nrf_spi_int_mask_t", "nrf_spi_int_mask_t"], [146, 2, 1, "c.nrf_spi_miso_pin_get", "nrf_spi_miso_pin_get"], [146, 4, 1, "c.nrf_spi_mode_t", "nrf_spi_mode_t"], [146, 2, 1, "c.nrf_spi_mosi_pin_get", "nrf_spi_mosi_pin_get"], [146, 2, 1, "c.nrf_spi_pins_set", "nrf_spi_pins_set"], [146, 2, 1, "c.nrf_spi_rxd_get", "nrf_spi_rxd_get"], [146, 2, 1, "c.nrf_spi_sck_pin_get", "nrf_spi_sck_pin_get"], [146, 2, 1, "c.nrf_spi_txd_set", "nrf_spi_txd_set"], [149, 4, 1, "c.nrf_spim_bit_order_t", "nrf_spim_bit_order_t"], [149, 2, 1, "c.nrf_spim_configure", "nrf_spim_configure"], [149, 2, 1, "c.nrf_spim_csn_configure", "nrf_spim_csn_configure"], [149, 2, 1, "c.nrf_spim_csn_pin_get", "nrf_spim_csn_pin_get"], [149, 4, 1, "c.nrf_spim_csn_pol_t", "nrf_spim_csn_pol_t"], [149, 2, 1, "c.nrf_spim_dcx_cnt_set", "nrf_spim_dcx_cnt_set"], [149, 2, 1, "c.nrf_spim_dcx_pin_get", "nrf_spim_dcx_pin_get"], [149, 2, 1, "c.nrf_spim_dcx_pin_set", "nrf_spim_dcx_pin_set"], [149, 2, 1, "c.nrf_spim_disable", "nrf_spim_disable"], [149, 2, 1, "c.nrf_spim_enable", "nrf_spim_enable"], [149, 2, 1, "c.nrf_spim_enable_check", "nrf_spim_enable_check"], [149, 2, 1, "c.nrf_spim_event_address_get", "nrf_spim_event_address_get"], [149, 2, 1, "c.nrf_spim_event_check", "nrf_spim_event_check"], [149, 2, 1, "c.nrf_spim_event_clear", "nrf_spim_event_clear"], [149, 4, 1, "c.nrf_spim_event_t", "nrf_spim_event_t"], [149, 2, 1, "c.nrf_spim_frequency_get", "nrf_spim_frequency_get"], [149, 2, 1, "c.nrf_spim_frequency_set", "nrf_spim_frequency_set"], [149, 4, 1, "c.nrf_spim_frequency_t", "nrf_spim_frequency_t"], [149, 2, 1, "c.nrf_spim_iftiming_set", "nrf_spim_iftiming_set"], [149, 2, 1, "c.nrf_spim_int_disable", "nrf_spim_int_disable"], [149, 2, 1, "c.nrf_spim_int_enable", "nrf_spim_int_enable"], [149, 2, 1, "c.nrf_spim_int_enable_check", "nrf_spim_int_enable_check"], [149, 4, 1, "c.nrf_spim_int_mask_t", "nrf_spim_int_mask_t"], [149, 2, 1, "c.nrf_spim_miso_pin_get", "nrf_spim_miso_pin_get"], [149, 4, 1, "c.nrf_spim_mode_t", "nrf_spim_mode_t"], [149, 2, 1, "c.nrf_spim_mosi_pin_get", "nrf_spim_mosi_pin_get"], [149, 2, 1, "c.nrf_spim_orc_set", "nrf_spim_orc_set"], [149, 2, 1, "c.nrf_spim_pins_set", "nrf_spim_pins_set"], [149, 2, 1, "c.nrf_spim_prescaler_get", "nrf_spim_prescaler_get"], [149, 2, 1, "c.nrf_spim_prescaler_set", "nrf_spim_prescaler_set"], [149, 2, 1, "c.nrf_spim_publish_clear", "nrf_spim_publish_clear"], [149, 2, 1, "c.nrf_spim_publish_set", "nrf_spim_publish_set"], [149, 2, 1, "c.nrf_spim_rx_amount_get", "nrf_spim_rx_amount_get"], [149, 2, 1, "c.nrf_spim_rx_buffer_set", "nrf_spim_rx_buffer_set"], [149, 2, 1, "c.nrf_spim_rx_list_disable", "nrf_spim_rx_list_disable"], [149, 2, 1, "c.nrf_spim_rx_list_enable", "nrf_spim_rx_list_enable"], [149, 2, 1, "c.nrf_spim_rx_maxcnt_get", "nrf_spim_rx_maxcnt_get"], [149, 2, 1, "c.nrf_spim_rx_pattern_match_candidate_get", "nrf_spim_rx_pattern_match_candidate_get"], [149, 2, 1, "c.nrf_spim_rx_pattern_match_candidate_set", "nrf_spim_rx_pattern_match_candidate_set"], [149, 2, 1, "c.nrf_spim_rx_pattern_match_enable_check", "nrf_spim_rx_pattern_match_enable_check"], [149, 2, 1, "c.nrf_spim_rx_pattern_match_enable_set", "nrf_spim_rx_pattern_match_enable_set"], [149, 2, 1, "c.nrf_spim_rx_pattern_match_one_shot_check", "nrf_spim_rx_pattern_match_one_shot_check"], [149, 2, 1, "c.nrf_spim_rx_pattern_match_one_shot_disable", "nrf_spim_rx_pattern_match_one_shot_disable"], [149, 2, 1, "c.nrf_spim_rx_pattern_match_one_shot_enable", "nrf_spim_rx_pattern_match_one_shot_enable"], [149, 2, 1, "c.nrf_spim_rx_terminate_on_bus_error_check", "nrf_spim_rx_terminate_on_bus_error_check"], [149, 2, 1, "c.nrf_spim_rx_terminate_on_bus_error_disable", "nrf_spim_rx_terminate_on_bus_error_disable"], [149, 2, 1, "c.nrf_spim_rx_terminate_on_bus_error_enable", "nrf_spim_rx_terminate_on_bus_error_enable"], [149, 2, 1, "c.nrf_spim_sck_pin_get", "nrf_spim_sck_pin_get"], [149, 4, 1, "c.nrf_spim_short_mask_t", "nrf_spim_short_mask_t"], [149, 2, 1, "c.nrf_spim_shorts_disable", "nrf_spim_shorts_disable"], [149, 2, 1, "c.nrf_spim_shorts_enable", "nrf_spim_shorts_enable"], [149, 2, 1, "c.nrf_spim_shorts_get", "nrf_spim_shorts_get"], [149, 2, 1, "c.nrf_spim_stallstat_rx_clear", "nrf_spim_stallstat_rx_clear"], [149, 2, 1, "c.nrf_spim_stallstat_rx_get", "nrf_spim_stallstat_rx_get"], [149, 2, 1, "c.nrf_spim_stallstat_tx_clear", "nrf_spim_stallstat_tx_clear"], [149, 2, 1, "c.nrf_spim_stallstat_tx_get", "nrf_spim_stallstat_tx_get"], [149, 2, 1, "c.nrf_spim_subscribe_clear", "nrf_spim_subscribe_clear"], [149, 2, 1, "c.nrf_spim_subscribe_set", "nrf_spim_subscribe_set"], [149, 2, 1, "c.nrf_spim_task_address_get", "nrf_spim_task_address_get"], [149, 4, 1, "c.nrf_spim_task_t", "nrf_spim_task_t"], [149, 2, 1, "c.nrf_spim_task_trigger", "nrf_spim_task_trigger"], [149, 2, 1, "c.nrf_spim_tx_amount_get", "nrf_spim_tx_amount_get"], [149, 2, 1, "c.nrf_spim_tx_buffer_set", "nrf_spim_tx_buffer_set"], [149, 2, 1, "c.nrf_spim_tx_list_disable", "nrf_spim_tx_list_disable"], [149, 2, 1, "c.nrf_spim_tx_list_enable", "nrf_spim_tx_list_enable"], [149, 2, 1, "c.nrf_spim_tx_maxcnt_get", "nrf_spim_tx_maxcnt_get"], [149, 2, 1, "c.nrf_spim_tx_terminate_on_bus_error_check", "nrf_spim_tx_terminate_on_bus_error_check"], [149, 2, 1, "c.nrf_spim_tx_terminate_on_bus_error_disable", "nrf_spim_tx_terminate_on_bus_error_disable"], [149, 2, 1, "c.nrf_spim_tx_terminate_on_bus_error_enable", "nrf_spim_tx_terminate_on_bus_error_enable"], [153, 4, 1, "c.nrf_spis_bit_order_t", "nrf_spis_bit_order_t"], [153, 2, 1, "c.nrf_spis_configure", "nrf_spis_configure"], [153, 2, 1, "c.nrf_spis_csn_pin_get", "nrf_spis_csn_pin_get"], [153, 2, 1, "c.nrf_spis_def_set", "nrf_spis_def_set"], [153, 2, 1, "c.nrf_spis_disable", "nrf_spis_disable"], [153, 2, 1, "c.nrf_spis_enable", "nrf_spis_enable"], [153, 2, 1, "c.nrf_spis_enable_check", "nrf_spis_enable_check"], [153, 2, 1, "c.nrf_spis_event_address_get", "nrf_spis_event_address_get"], [153, 2, 1, "c.nrf_spis_event_check", "nrf_spis_event_check"], [153, 2, 1, "c.nrf_spis_event_clear", "nrf_spis_event_clear"], [153, 4, 1, "c.nrf_spis_event_t", "nrf_spis_event_t"], [153, 2, 1, "c.nrf_spis_int_disable", "nrf_spis_int_disable"], [153, 2, 1, "c.nrf_spis_int_enable", "nrf_spis_int_enable"], [153, 2, 1, "c.nrf_spis_int_enable_check", "nrf_spis_int_enable_check"], [153, 4, 1, "c.nrf_spis_int_mask_t", "nrf_spis_int_mask_t"], [153, 2, 1, "c.nrf_spis_miso_pin_get", "nrf_spis_miso_pin_get"], [153, 4, 1, "c.nrf_spis_mode_t", "nrf_spis_mode_t"], [153, 2, 1, "c.nrf_spis_mosi_pin_get", "nrf_spis_mosi_pin_get"], [153, 2, 1, "c.nrf_spis_orc_set", "nrf_spis_orc_set"], [153, 2, 1, "c.nrf_spis_pins_set", "nrf_spis_pins_set"], [153, 2, 1, "c.nrf_spis_publish_clear", "nrf_spis_publish_clear"], [153, 2, 1, "c.nrf_spis_publish_set", "nrf_spis_publish_set"], [153, 2, 1, "c.nrf_spis_rx_amount_get", "nrf_spis_rx_amount_get"], [153, 2, 1, "c.nrf_spis_rx_buffer_set", "nrf_spis_rx_buffer_set"], [153, 2, 1, "c.nrf_spis_rx_list_disable", "nrf_spis_rx_list_disable"], [153, 2, 1, "c.nrf_spis_rx_list_enable", "nrf_spis_rx_list_enable"], [153, 2, 1, "c.nrf_spis_rx_pattern_match_candidate_get", "nrf_spis_rx_pattern_match_candidate_get"], [153, 2, 1, "c.nrf_spis_rx_pattern_match_candidate_set", "nrf_spis_rx_pattern_match_candidate_set"], [153, 2, 1, "c.nrf_spis_rx_pattern_match_enable_check", "nrf_spis_rx_pattern_match_enable_check"], [153, 2, 1, "c.nrf_spis_rx_pattern_match_enable_set", "nrf_spis_rx_pattern_match_enable_set"], [153, 2, 1, "c.nrf_spis_rx_pattern_match_one_shot_check", "nrf_spis_rx_pattern_match_one_shot_check"], [153, 2, 1, "c.nrf_spis_rx_pattern_match_one_shot_disable", "nrf_spis_rx_pattern_match_one_shot_disable"], [153, 2, 1, "c.nrf_spis_rx_pattern_match_one_shot_enable", "nrf_spis_rx_pattern_match_one_shot_enable"], [153, 2, 1, "c.nrf_spis_rx_terminate_on_bus_error_check", "nrf_spis_rx_terminate_on_bus_error_check"], [153, 2, 1, "c.nrf_spis_rx_terminate_on_bus_error_disable", "nrf_spis_rx_terminate_on_bus_error_disable"], [153, 2, 1, "c.nrf_spis_rx_terminate_on_bus_error_enable", "nrf_spis_rx_terminate_on_bus_error_enable"], [153, 2, 1, "c.nrf_spis_sck_pin_get", "nrf_spis_sck_pin_get"], [153, 2, 1, "c.nrf_spis_semaphore_status_get", "nrf_spis_semaphore_status_get"], [153, 4, 1, "c.nrf_spis_semstat_t", "nrf_spis_semstat_t"], [153, 4, 1, "c.nrf_spis_short_mask_t", "nrf_spis_short_mask_t"], [153, 2, 1, "c.nrf_spis_shorts_disable", "nrf_spis_shorts_disable"], [153, 2, 1, "c.nrf_spis_shorts_enable", "nrf_spis_shorts_enable"], [153, 2, 1, "c.nrf_spis_status_get", "nrf_spis_status_get"], [153, 4, 1, "c.nrf_spis_status_mask_t", "nrf_spis_status_mask_t"], [153, 2, 1, "c.nrf_spis_subscribe_clear", "nrf_spis_subscribe_clear"], [153, 2, 1, "c.nrf_spis_subscribe_set", "nrf_spis_subscribe_set"], [153, 2, 1, "c.nrf_spis_task_address_get", "nrf_spis_task_address_get"], [153, 4, 1, "c.nrf_spis_task_t", "nrf_spis_task_t"], [153, 2, 1, "c.nrf_spis_task_trigger", "nrf_spis_task_trigger"], [153, 2, 1, "c.nrf_spis_tx_amount_get", "nrf_spis_tx_amount_get"], [153, 2, 1, "c.nrf_spis_tx_buffer_set", "nrf_spis_tx_buffer_set"], [153, 2, 1, "c.nrf_spis_tx_list_disable", "nrf_spis_tx_list_disable"], [153, 2, 1, "c.nrf_spis_tx_list_enable", "nrf_spis_tx_list_enable"], [153, 2, 1, "c.nrf_spis_tx_terminate_on_bus_error_check", "nrf_spis_tx_terminate_on_bus_error_check"], [153, 2, 1, "c.nrf_spis_tx_terminate_on_bus_error_disable", "nrf_spis_tx_terminate_on_bus_error_disable"], [153, 2, 1, "c.nrf_spis_tx_terminate_on_bus_error_enable", "nrf_spis_tx_terminate_on_bus_error_enable"], [155, 4, 1, "c.nrf_spu_dma_t", "nrf_spu_dma_t"], [155, 2, 1, "c.nrf_spu_dppi_config_set", "nrf_spu_dppi_config_set"], [155, 2, 1, "c.nrf_spu_event_check", "nrf_spu_event_check"], [155, 2, 1, "c.nrf_spu_event_clear", "nrf_spu_event_clear"], [155, 4, 1, "c.nrf_spu_event_t", "nrf_spu_event_t"], [155, 2, 1, "c.nrf_spu_extdomain_set", "nrf_spu_extdomain_set"], [155, 2, 1, "c.nrf_spu_feature_block_enable", "nrf_spu_feature_block_enable"], [155, 2, 1, "c.nrf_spu_feature_block_get", "nrf_spu_feature_block_get"], [155, 2, 1, "c.nrf_spu_feature_lock_enable", "nrf_spu_feature_lock_enable"], [155, 2, 1, "c.nrf_spu_feature_lock_get", "nrf_spu_feature_lock_get"], [155, 2, 1, "c.nrf_spu_feature_ownerid_get", "nrf_spu_feature_ownerid_get"], [155, 2, 1, "c.nrf_spu_feature_ownerid_set", "nrf_spu_feature_ownerid_set"], [155, 2, 1, "c.nrf_spu_feature_secattr_get", "nrf_spu_feature_secattr_get"], [155, 2, 1, "c.nrf_spu_feature_secattr_set", "nrf_spu_feature_secattr_set"], [155, 4, 1, "c.nrf_spu_feature_t", "nrf_spu_feature_t"], [155, 2, 1, "c.nrf_spu_flashnsc_set", "nrf_spu_flashnsc_set"], [155, 2, 1, "c.nrf_spu_flashregion_set", "nrf_spu_flashregion_set"], [155, 2, 1, "c.nrf_spu_gpio_config_set", "nrf_spu_gpio_config_set"], [155, 2, 1, "c.nrf_spu_int_disable", "nrf_spu_int_disable"], [155, 2, 1, "c.nrf_spu_int_enable", "nrf_spu_int_enable"], [155, 2, 1, "c.nrf_spu_int_enable_check", "nrf_spu_int_enable_check"], [155, 4, 1, "c.nrf_spu_int_mask_t", "nrf_spu_int_mask_t"], [155, 4, 1, "c.nrf_spu_mem_perm_t", "nrf_spu_mem_perm_t"], [155, 4, 1, "c.nrf_spu_nsc_size_t", "nrf_spu_nsc_size_t"], [155, 2, 1, "c.nrf_spu_periph_perm_block_enable", "nrf_spu_periph_perm_block_enable"], [155, 2, 1, "c.nrf_spu_periph_perm_block_get", "nrf_spu_periph_perm_block_get"], [155, 2, 1, "c.nrf_spu_periph_perm_dma_get", "nrf_spu_periph_perm_dma_get"], [155, 2, 1, "c.nrf_spu_periph_perm_dmasec_get", "nrf_spu_periph_perm_dmasec_get"], [155, 2, 1, "c.nrf_spu_periph_perm_dmasec_set", "nrf_spu_periph_perm_dmasec_set"], [155, 2, 1, "c.nrf_spu_periph_perm_lock_enable", "nrf_spu_periph_perm_lock_enable"], [155, 2, 1, "c.nrf_spu_periph_perm_lock_get", "nrf_spu_periph_perm_lock_get"], [155, 2, 1, "c.nrf_spu_periph_perm_ownerid_get", "nrf_spu_periph_perm_ownerid_get"], [155, 2, 1, "c.nrf_spu_periph_perm_ownerid_set", "nrf_spu_periph_perm_ownerid_set"], [155, 2, 1, "c.nrf_spu_periph_perm_ownerprog_get", "nrf_spu_periph_perm_ownerprog_get"], [155, 2, 1, "c.nrf_spu_periph_perm_present_get", "nrf_spu_periph_perm_present_get"], [155, 2, 1, "c.nrf_spu_periph_perm_secattr_get", "nrf_spu_periph_perm_secattr_get"], [155, 2, 1, "c.nrf_spu_periph_perm_secattr_set", "nrf_spu_periph_perm_secattr_set"], [155, 2, 1, "c.nrf_spu_periph_perm_securemapping_get", "nrf_spu_periph_perm_securemapping_get"], [155, 2, 1, "c.nrf_spu_periphaccerr_address_get", "nrf_spu_periphaccerr_address_get"], [155, 2, 1, "c.nrf_spu_periphaccerr_ownerid_get", "nrf_spu_periphaccerr_ownerid_get"], [155, 2, 1, "c.nrf_spu_peripheral_set", "nrf_spu_peripheral_set"], [155, 2, 1, "c.nrf_spu_publish_clear", "nrf_spu_publish_clear"], [155, 2, 1, "c.nrf_spu_publish_set", "nrf_spu_publish_set"], [155, 2, 1, "c.nrf_spu_ramnsc_set", "nrf_spu_ramnsc_set"], [155, 2, 1, "c.nrf_spu_ramregion_set", "nrf_spu_ramregion_set"], [155, 4, 1, "c.nrf_spu_securemapping_t", "nrf_spu_securemapping_t"], [155, 2, 1, "c.nrf_spu_tz_is_available", "nrf_spu_tz_is_available"], [157, 2, 1, "c.nrf_stm_devid_numsp_get", "nrf_stm_devid_numsp_get"], [157, 2, 1, "c.nrf_stm_devtype_major_get", "nrf_stm_devtype_major_get"], [157, 4, 1, "c.nrf_stm_devtype_major_t", "nrf_stm_devtype_major_t"], [157, 2, 1, "c.nrf_stm_devtype_sub_get", "nrf_stm_devtype_sub_get"], [157, 4, 1, "c.nrf_stm_devtype_sub_t", "nrf_stm_devtype_sub_t"], [157, 4, 1, "c.nrf_stm_dma_sens_t", "nrf_stm_dma_sens_t"], [157, 2, 1, "c.nrf_stm_dmactlr_sens_get", "nrf_stm_dmactlr_sens_get"], [157, 2, 1, "c.nrf_stm_dmactlr_sens_set", "nrf_stm_dmactlr_sens_set"], [157, 2, 1, "c.nrf_stm_feature_check", "nrf_stm_feature_check"], [157, 2, 1, "c.nrf_stm_feature_set", "nrf_stm_feature_set"], [157, 4, 1, "c.nrf_stm_feature_t", "nrf_stm_feature_t"], [157, 2, 1, "c.nrf_stm_hefeat1r_numhe_get", "nrf_stm_hefeat1r_numhe_get"], [157, 2, 1, "c.nrf_stm_heidr_class_get", "nrf_stm_heidr_class_get"], [157, 4, 1, "c.nrf_stm_heidr_class_t", "nrf_stm_heidr_class_t"], [157, 2, 1, "c.nrf_stm_heidr_classrev_get", "nrf_stm_heidr_classrev_get"], [157, 2, 1, "c.nrf_stm_heidr_vendspec_get", "nrf_stm_heidr_vendspec_get"], [157, 2, 1, "c.nrf_stm_hemastr_get", "nrf_stm_hemastr_get"], [157, 2, 1, "c.nrf_stm_input_check", "nrf_stm_input_check"], [157, 4, 1, "c.nrf_stm_input_t", "nrf_stm_input_t"], [157, 2, 1, "c.nrf_stm_lar_access_set", "nrf_stm_lar_access_set"], [157, 2, 1, "c.nrf_stm_lsr_type_get", "nrf_stm_lsr_type_get"], [157, 4, 1, "c.nrf_stm_lsr_type_t", "nrf_stm_lsr_type_t"], [157, 2, 1, "c.nrf_stm_output_set", "nrf_stm_output_set"], [157, 4, 1, "c.nrf_stm_output_t", "nrf_stm_output_t"], [157, 2, 1, "c.nrf_stm_spfeat1r_prot_get", "nrf_stm_spfeat1r_prot_get"], [157, 4, 1, "c.nrf_stm_spfeat1r_prot_t", "nrf_stm_spfeat1r_prot_t"], [157, 2, 1, "c.nrf_stm_spfeat1r_syncen_get", "nrf_stm_spfeat1r_syncen_get"], [157, 4, 1, "c.nrf_stm_spfeat1r_syncen_t", "nrf_stm_spfeat1r_syncen_t"], [157, 2, 1, "c.nrf_stm_spfeat1r_tracebus_get", "nrf_stm_spfeat1r_tracebus_get"], [157, 2, 1, "c.nrf_stm_spfeat1r_trigctl_get", "nrf_stm_spfeat1r_trigctl_get"], [157, 2, 1, "c.nrf_stm_spfeat1r_ts_get", "nrf_stm_spfeat1r_ts_get"], [157, 4, 1, "c.nrf_stm_spfeat1r_ts_t", "nrf_stm_spfeat1r_ts_t"], [157, 2, 1, "c.nrf_stm_spfeat2r_dsize_get", "nrf_stm_spfeat2r_dsize_get"], [157, 4, 1, "c.nrf_stm_spfeat2r_dsize_t", "nrf_stm_spfeat2r_dsize_t"], [157, 2, 1, "c.nrf_stm_spfeat2r_spcomp_get", "nrf_stm_spfeat2r_spcomp_get"], [157, 4, 1, "c.nrf_stm_spfeat2r_spcomp_t", "nrf_stm_spfeat2r_spcomp_t"], [157, 2, 1, "c.nrf_stm_spfeat2r_sptrtype_get", "nrf_stm_spfeat2r_sptrtype_get"], [157, 4, 1, "c.nrf_stm_spfeat2r_sptrtype_t", "nrf_stm_spfeat2r_sptrtype_t"], [157, 2, 1, "c.nrf_stm_spfeat3r_nummast_get", "nrf_stm_spfeat3r_nummast_get"], [157, 2, 1, "c.nrf_stm_tcsr_traceid_get", "nrf_stm_tcsr_traceid_get"], [157, 2, 1, "c.nrf_stm_tcsr_traceid_set", "nrf_stm_tcsr_traceid_set"], [160, 2, 1, "c.nrf_systick_calib_get", "nrf_systick_calib_get"], [160, 4, 1, "c.nrf_systick_csr_flags_t", "nrf_systick_csr_flags_t"], [160, 2, 1, "c.nrf_systick_csr_get", "nrf_systick_csr_get"], [160, 2, 1, "c.nrf_systick_csr_set", "nrf_systick_csr_set"], [160, 2, 1, "c.nrf_systick_load_get", "nrf_systick_load_get"], [160, 2, 1, "c.nrf_systick_load_set", "nrf_systick_load_set"], [160, 2, 1, "c.nrf_systick_val_clear", "nrf_systick_val_clear"], [160, 2, 1, "c.nrf_systick_val_get", "nrf_systick_val_get"], [162, 2, 1, "c.nrf_tampc_activeshield_channel_disable", "nrf_tampc_activeshield_channel_disable"], [162, 2, 1, "c.nrf_tampc_activeshield_channel_enable", "nrf_tampc_activeshield_channel_enable"], [162, 2, 1, "c.nrf_tampc_activeshield_channel_enable_check", "nrf_tampc_activeshield_channel_enable_check"], [162, 4, 1, "c.nrf_tampc_activeshield_mask_t", "nrf_tampc_activeshield_mask_t"], [162, 2, 1, "c.nrf_tampc_ap_ctrl_lock_get", "nrf_tampc_ap_ctrl_lock_get"], [162, 2, 1, "c.nrf_tampc_ap_ctrl_lock_set", "nrf_tampc_ap_ctrl_lock_set"], [162, 2, 1, "c.nrf_tampc_ap_ctrl_value_get", "nrf_tampc_ap_ctrl_value_get"], [162, 2, 1, "c.nrf_tampc_ap_ctrl_value_set", "nrf_tampc_ap_ctrl_value_set"], [162, 2, 1, "c.nrf_tampc_coresight_ctrl_fault_get", "nrf_tampc_coresight_ctrl_fault_get"], [162, 2, 1, "c.nrf_tampc_coresight_ctrl_fault_set", "nrf_tampc_coresight_ctrl_fault_set"], [162, 2, 1, "c.nrf_tampc_coresight_ctrl_lock_get", "nrf_tampc_coresight_ctrl_lock_get"], [162, 2, 1, "c.nrf_tampc_coresight_ctrl_lock_set", "nrf_tampc_coresight_ctrl_lock_set"], [162, 2, 1, "c.nrf_tampc_coresight_ctrl_value_get", "nrf_tampc_coresight_ctrl_value_get"], [162, 2, 1, "c.nrf_tampc_coresight_ctrl_value_set", "nrf_tampc_coresight_ctrl_value_set"], [162, 4, 1, "c.nrf_tampc_debug_type_t", "nrf_tampc_debug_type_t"], [162, 2, 1, "c.nrf_tampc_detector_status_check", "nrf_tampc_detector_status_check"], [162, 2, 1, "c.nrf_tampc_detector_status_clear", "nrf_tampc_detector_status_clear"], [162, 4, 1, "c.nrf_tampc_detector_t", "nrf_tampc_detector_t"], [162, 2, 1, "c.nrf_tampc_domain_ctrl_lock_get", "nrf_tampc_domain_ctrl_lock_get"], [162, 2, 1, "c.nrf_tampc_domain_ctrl_lock_set", "nrf_tampc_domain_ctrl_lock_set"], [162, 2, 1, "c.nrf_tampc_domain_ctrl_value_get", "nrf_tampc_domain_ctrl_value_get"], [162, 2, 1, "c.nrf_tampc_domain_ctrl_value_set", "nrf_tampc_domain_ctrl_value_set"], [162, 2, 1, "c.nrf_tampc_event_address_get", "nrf_tampc_event_address_get"], [162, 2, 1, "c.nrf_tampc_event_check", "nrf_tampc_event_check"], [162, 2, 1, "c.nrf_tampc_event_clear", "nrf_tampc_event_clear"], [162, 4, 1, "c.nrf_tampc_event_t", "nrf_tampc_event_t"], [162, 2, 1, "c.nrf_tampc_int_disable", "nrf_tampc_int_disable"], [162, 2, 1, "c.nrf_tampc_int_enable", "nrf_tampc_int_enable"], [162, 2, 1, "c.nrf_tampc_int_enable_check", "nrf_tampc_int_enable_check"], [162, 2, 1, "c.nrf_tampc_int_pending_get", "nrf_tampc_int_pending_get"], [162, 4, 1, "c.nrf_tampc_protect_t", "nrf_tampc_protect_t"], [162, 2, 1, "c.nrf_tampc_protector_ctrl_lock_get", "nrf_tampc_protector_ctrl_lock_get"], [162, 2, 1, "c.nrf_tampc_protector_ctrl_lock_set", "nrf_tampc_protector_ctrl_lock_set"], [162, 2, 1, "c.nrf_tampc_protector_ctrl_value_get", "nrf_tampc_protector_ctrl_value_get"], [162, 2, 1, "c.nrf_tampc_protector_ctrl_value_set", "nrf_tampc_protector_ctrl_value_set"], [162, 2, 1, "c.nrf_tampc_protector_status_check", "nrf_tampc_protector_status_check"], [162, 2, 1, "c.nrf_tampc_protector_status_clear", "nrf_tampc_protector_status_clear"], [162, 2, 1, "c.nrf_tampc_warmboot_ctrl_fault_get", "nrf_tampc_warmboot_ctrl_fault_get"], [162, 2, 1, "c.nrf_tampc_warmboot_ctrl_fault_set", "nrf_tampc_warmboot_ctrl_fault_set"], [162, 2, 1, "c.nrf_tampc_warmboot_ctrl_lock_get", "nrf_tampc_warmboot_ctrl_lock_get"], [162, 2, 1, "c.nrf_tampc_warmboot_ctrl_lock_set", "nrf_tampc_warmboot_ctrl_lock_set"], [162, 2, 1, "c.nrf_tampc_warmboot_ctrl_value_get", "nrf_tampc_warmboot_ctrl_value_get"], [162, 2, 1, "c.nrf_tampc_warmboot_ctrl_value_set", "nrf_tampc_warmboot_ctrl_value_set"], [162, 4, 1, "c.nrf_tampc_warmboot_mode_t", "nrf_tampc_warmboot_mode_t"], [162, 2, 1, "c.nrf_tampc_warmboot_status_check", "nrf_tampc_warmboot_status_check"], [162, 2, 1, "c.nrf_tampc_warmboot_status_clear", "nrf_tampc_warmboot_status_clear"], [162, 4, 1, "c.nrf_tapmc_int_mask_t", "nrf_tapmc_int_mask_t"], [165, 2, 1, "c.nrf_tbm_buffersize_set", "nrf_tbm_buffersize_set"], [165, 2, 1, "c.nrf_tbm_count_get", "nrf_tbm_count_get"], [165, 2, 1, "c.nrf_tbm_event_check", "nrf_tbm_event_check"], [165, 2, 1, "c.nrf_tbm_event_clear", "nrf_tbm_event_clear"], [165, 4, 1, "c.nrf_tbm_event_t", "nrf_tbm_event_t"], [165, 2, 1, "c.nrf_tbm_int_disable", "nrf_tbm_int_disable"], [165, 2, 1, "c.nrf_tbm_int_enable", "nrf_tbm_int_enable"], [165, 2, 1, "c.nrf_tbm_int_enable_check", "nrf_tbm_int_enable_check"], [165, 4, 1, "c.nrf_tbm_int_mask_t", "nrf_tbm_int_mask_t"], [165, 2, 1, "c.nrf_tbm_int_pending_get", "nrf_tbm_int_pending_get"], [165, 2, 1, "c.nrf_tbm_int_set", "nrf_tbm_int_set"], [165, 4, 1, "c.nrf_tbm_task_t", "nrf_tbm_task_t"], [165, 2, 1, "c.nrf_tbm_task_trigger", "nrf_tbm_task_trigger"], [168, 4, 1, "c.nrf_tdm_align_t", "nrf_tdm_align_t"], [168, 4, 1, "c.nrf_tdm_channel_delay_t", "nrf_tdm_channel_delay_t"], [168, 4, 1, "c.nrf_tdm_channel_mask_t", "nrf_tdm_channel_mask_t"], [168, 4, 1, "c.nrf_tdm_channels_count_t", "nrf_tdm_channels_count_t"], [168, 5, 1, "c.nrf_tdm_config_t", "nrf_tdm_config_t"], [168, 2, 1, "c.nrf_tdm_configure", "nrf_tdm_configure"], [168, 2, 1, "c.nrf_tdm_current_rx_transfer_amount_get", "nrf_tdm_current_rx_transfer_amount_get"], [168, 2, 1, "c.nrf_tdm_current_tx_transfer_amount_get", "nrf_tdm_current_tx_transfer_amount_get"], [168, 2, 1, "c.nrf_tdm_disable", "nrf_tdm_disable"], [168, 2, 1, "c.nrf_tdm_enable", "nrf_tdm_enable"], [168, 2, 1, "c.nrf_tdm_enable_check", "nrf_tdm_enable_check"], [168, 2, 1, "c.nrf_tdm_event_address_get", "nrf_tdm_event_address_get"], [168, 2, 1, "c.nrf_tdm_event_check", "nrf_tdm_event_check"], [168, 2, 1, "c.nrf_tdm_event_clear", "nrf_tdm_event_clear"], [168, 4, 1, "c.nrf_tdm_event_t", "nrf_tdm_event_t"], [168, 4, 1, "c.nrf_tdm_fsync_duration_t", "nrf_tdm_fsync_duration_t"], [168, 2, 1, "c.nrf_tdm_fsync_pin_get", "nrf_tdm_fsync_pin_get"], [168, 2, 1, "c.nrf_tdm_int_disable", "nrf_tdm_int_disable"], [168, 2, 1, "c.nrf_tdm_int_enable", "nrf_tdm_int_enable"], [168, 2, 1, "c.nrf_tdm_int_enable_check", "nrf_tdm_int_enable_check"], [168, 4, 1, "c.nrf_tdm_int_mask_t", "nrf_tdm_int_mask_t"], [168, 2, 1, "c.nrf_tdm_last_rx_transfer_amount_get", "nrf_tdm_last_rx_transfer_amount_get"], [168, 2, 1, "c.nrf_tdm_last_tx_transfer_amount_get", "nrf_tdm_last_tx_transfer_amount_get"], [168, 2, 1, "c.nrf_tdm_mck_configure", "nrf_tdm_mck_configure"], [168, 4, 1, "c.nrf_tdm_mck_div_t", "nrf_tdm_mck_div_t"], [168, 2, 1, "c.nrf_tdm_mck_pin_get", "nrf_tdm_mck_pin_get"], [168, 2, 1, "c.nrf_tdm_mck_set", "nrf_tdm_mck_set"], [168, 4, 1, "c.nrf_tdm_mode_t", "nrf_tdm_mode_t"], [168, 2, 1, "c.nrf_tdm_pins_set", "nrf_tdm_pins_set"], [168, 5, 1, "c.nrf_tdm_pins_t", "nrf_tdm_pins_t"], [168, 4, 1, "c.nrf_tdm_polarity_t", "nrf_tdm_polarity_t"], [168, 2, 1, "c.nrf_tdm_publish_clear", "nrf_tdm_publish_clear"], [168, 2, 1, "c.nrf_tdm_publish_set", "nrf_tdm_publish_set"], [168, 2, 1, "c.nrf_tdm_rx_buffer_get", "nrf_tdm_rx_buffer_get"], [168, 2, 1, "c.nrf_tdm_rx_buffer_set", "nrf_tdm_rx_buffer_set"], [168, 2, 1, "c.nrf_tdm_rx_count_set", "nrf_tdm_rx_count_set"], [168, 4, 1, "c.nrf_tdm_rxtxen_t", "nrf_tdm_rxtxen_t"], [168, 2, 1, "c.nrf_tdm_sck_configure", "nrf_tdm_sck_configure"], [168, 4, 1, "c.nrf_tdm_sck_div_t", "nrf_tdm_sck_div_t"], [168, 2, 1, "c.nrf_tdm_sck_pin_get", "nrf_tdm_sck_pin_get"], [168, 2, 1, "c.nrf_tdm_sdin_pin_get", "nrf_tdm_sdin_pin_get"], [168, 2, 1, "c.nrf_tdm_sdout_pin_get", "nrf_tdm_sdout_pin_get"], [168, 4, 1, "c.nrf_tdm_src_t", "nrf_tdm_src_t"], [168, 2, 1, "c.nrf_tdm_subscribe_clear", "nrf_tdm_subscribe_clear"], [168, 2, 1, "c.nrf_tdm_subscribe_set", "nrf_tdm_subscribe_set"], [168, 4, 1, "c.nrf_tdm_swidth_t", "nrf_tdm_swidth_t"], [168, 2, 1, "c.nrf_tdm_task_address_get", "nrf_tdm_task_address_get"], [168, 4, 1, "c.nrf_tdm_task_t", "nrf_tdm_task_t"], [168, 2, 1, "c.nrf_tdm_task_trigger", "nrf_tdm_task_trigger"], [168, 2, 1, "c.nrf_tdm_transfer_direction_set", "nrf_tdm_transfer_direction_set"], [168, 2, 1, "c.nrf_tdm_tx_buffer_get", "nrf_tdm_tx_buffer_get"], [168, 2, 1, "c.nrf_tdm_tx_buffer_set", "nrf_tdm_tx_buffer_set"], [168, 2, 1, "c.nrf_tdm_tx_count_set", "nrf_tdm_tx_count_set"], [171, 2, 1, "c.nrf_temp_calibration_coeff_get", "nrf_temp_calibration_coeff_get"], [171, 2, 1, "c.nrf_temp_calibration_coeff_set", "nrf_temp_calibration_coeff_set"], [171, 2, 1, "c.nrf_temp_event_address_get", "nrf_temp_event_address_get"], [171, 2, 1, "c.nrf_temp_event_check", "nrf_temp_event_check"], [171, 2, 1, "c.nrf_temp_event_clear", "nrf_temp_event_clear"], [171, 4, 1, "c.nrf_temp_event_t", "nrf_temp_event_t"], [171, 2, 1, "c.nrf_temp_int_disable", "nrf_temp_int_disable"], [171, 2, 1, "c.nrf_temp_int_enable", "nrf_temp_int_enable"], [171, 2, 1, "c.nrf_temp_int_enable_check", "nrf_temp_int_enable_check"], [171, 4, 1, "c.nrf_temp_int_mask_t", "nrf_temp_int_mask_t"], [171, 2, 1, "c.nrf_temp_publish_clear", "nrf_temp_publish_clear"], [171, 2, 1, "c.nrf_temp_publish_set", "nrf_temp_publish_set"], [171, 2, 1, "c.nrf_temp_result_get", "nrf_temp_result_get"], [171, 2, 1, "c.nrf_temp_subscribe_clear", "nrf_temp_subscribe_clear"], [171, 2, 1, "c.nrf_temp_subscribe_set", "nrf_temp_subscribe_set"], [171, 2, 1, "c.nrf_temp_task_address_get", "nrf_temp_task_address_get"], [171, 4, 1, "c.nrf_temp_task_t", "nrf_temp_task_t"], [171, 2, 1, "c.nrf_temp_task_trigger", "nrf_temp_task_trigger"], [175, 2, 1, "c.nrf_timer_bit_width_get", "nrf_timer_bit_width_get"], [175, 2, 1, "c.nrf_timer_bit_width_set", "nrf_timer_bit_width_set"], [175, 4, 1, "c.nrf_timer_bit_width_t", "nrf_timer_bit_width_t"], [175, 2, 1, "c.nrf_timer_capture_task_get", "nrf_timer_capture_task_get"], [175, 4, 1, "c.nrf_timer_cc_channel_t", "nrf_timer_cc_channel_t"], [175, 2, 1, "c.nrf_timer_cc_get", "nrf_timer_cc_get"], [175, 2, 1, "c.nrf_timer_cc_set", "nrf_timer_cc_set"], [175, 2, 1, "c.nrf_timer_compare_event_get", "nrf_timer_compare_event_get"], [175, 2, 1, "c.nrf_timer_compare_int_get", "nrf_timer_compare_int_get"], [175, 2, 1, "c.nrf_timer_event_address_get", "nrf_timer_event_address_get"], [175, 2, 1, "c.nrf_timer_event_check", "nrf_timer_event_check"], [175, 2, 1, "c.nrf_timer_event_clear", "nrf_timer_event_clear"], [175, 4, 1, "c.nrf_timer_event_t", "nrf_timer_event_t"], [175, 4, 1, "c.nrf_timer_frequency_t", "nrf_timer_frequency_t"], [175, 2, 1, "c.nrf_timer_int_disable", "nrf_timer_int_disable"], [175, 2, 1, "c.nrf_timer_int_enable", "nrf_timer_int_enable"], [175, 2, 1, "c.nrf_timer_int_enable_check", "nrf_timer_int_enable_check"], [175, 4, 1, "c.nrf_timer_int_mask_t", "nrf_timer_int_mask_t"], [175, 2, 1, "c.nrf_timer_mode_get", "nrf_timer_mode_get"], [175, 2, 1, "c.nrf_timer_mode_set", "nrf_timer_mode_set"], [175, 4, 1, "c.nrf_timer_mode_t", "nrf_timer_mode_t"], [175, 2, 1, "c.nrf_timer_ms_to_ticks", "nrf_timer_ms_to_ticks"], [175, 2, 1, "c.nrf_timer_one_shot_disable", "nrf_timer_one_shot_disable"], [175, 2, 1, "c.nrf_timer_one_shot_enable", "nrf_timer_one_shot_enable"], [175, 2, 1, "c.nrf_timer_prescaler_get", "nrf_timer_prescaler_get"], [175, 2, 1, "c.nrf_timer_prescaler_set", "nrf_timer_prescaler_set"], [175, 2, 1, "c.nrf_timer_publish_clear", "nrf_timer_publish_clear"], [175, 2, 1, "c.nrf_timer_publish_set", "nrf_timer_publish_set"], [175, 2, 1, "c.nrf_timer_short_compare_clear_get", "nrf_timer_short_compare_clear_get"], [175, 2, 1, "c.nrf_timer_short_compare_stop_get", "nrf_timer_short_compare_stop_get"], [175, 4, 1, "c.nrf_timer_short_mask_t", "nrf_timer_short_mask_t"], [175, 2, 1, "c.nrf_timer_shorts_disable", "nrf_timer_shorts_disable"], [175, 2, 1, "c.nrf_timer_shorts_enable", "nrf_timer_shorts_enable"], [175, 2, 1, "c.nrf_timer_shorts_set", "nrf_timer_shorts_set"], [175, 2, 1, "c.nrf_timer_subscribe_clear", "nrf_timer_subscribe_clear"], [175, 2, 1, "c.nrf_timer_subscribe_set", "nrf_timer_subscribe_set"], [175, 2, 1, "c.nrf_timer_task_address_get", "nrf_timer_task_address_get"], [175, 4, 1, "c.nrf_timer_task_t", "nrf_timer_task_t"], [175, 2, 1, "c.nrf_timer_task_trigger", "nrf_timer_task_trigger"], [175, 2, 1, "c.nrf_timer_us_to_ticks", "nrf_timer_us_to_ticks"], [179, 2, 1, "c.nrf_twi_address_set", "nrf_twi_address_set"], [179, 2, 1, "c.nrf_twi_disable", "nrf_twi_disable"], [179, 2, 1, "c.nrf_twi_enable", "nrf_twi_enable"], [179, 4, 1, "c.nrf_twi_error_t", "nrf_twi_error_t"], [179, 2, 1, "c.nrf_twi_errorsrc_get_and_clear", "nrf_twi_errorsrc_get_and_clear"], [179, 2, 1, "c.nrf_twi_event_address_get", "nrf_twi_event_address_get"], [179, 2, 1, "c.nrf_twi_event_check", "nrf_twi_event_check"], [179, 2, 1, "c.nrf_twi_event_clear", "nrf_twi_event_clear"], [179, 4, 1, "c.nrf_twi_event_t", "nrf_twi_event_t"], [179, 2, 1, "c.nrf_twi_frequency_set", "nrf_twi_frequency_set"], [179, 4, 1, "c.nrf_twi_frequency_t", "nrf_twi_frequency_t"], [179, 2, 1, "c.nrf_twi_int_disable", "nrf_twi_int_disable"], [179, 2, 1, "c.nrf_twi_int_enable", "nrf_twi_int_enable"], [179, 2, 1, "c.nrf_twi_int_enable_check", "nrf_twi_int_enable_check"], [179, 4, 1, "c.nrf_twi_int_mask_t", "nrf_twi_int_mask_t"], [179, 2, 1, "c.nrf_twi_pins_set", "nrf_twi_pins_set"], [179, 2, 1, "c.nrf_twi_rxd_get", "nrf_twi_rxd_get"], [179, 2, 1, "c.nrf_twi_scl_pin_get", "nrf_twi_scl_pin_get"], [179, 2, 1, "c.nrf_twi_sda_pin_get", "nrf_twi_sda_pin_get"], [179, 4, 1, "c.nrf_twi_short_mask_t", "nrf_twi_short_mask_t"], [179, 2, 1, "c.nrf_twi_shorts_disable", "nrf_twi_shorts_disable"], [179, 2, 1, "c.nrf_twi_shorts_enable", "nrf_twi_shorts_enable"], [179, 2, 1, "c.nrf_twi_shorts_set", "nrf_twi_shorts_set"], [179, 2, 1, "c.nrf_twi_task_address_get", "nrf_twi_task_address_get"], [179, 4, 1, "c.nrf_twi_task_t", "nrf_twi_task_t"], [179, 2, 1, "c.nrf_twi_task_trigger", "nrf_twi_task_trigger"], [179, 2, 1, "c.nrf_twi_txd_set", "nrf_twi_txd_set"], [182, 2, 1, "c.nrf_twim_address_get", "nrf_twim_address_get"], [182, 2, 1, "c.nrf_twim_address_set", "nrf_twim_address_set"], [182, 2, 1, "c.nrf_twim_disable", "nrf_twim_disable"], [182, 2, 1, "c.nrf_twim_enable", "nrf_twim_enable"], [182, 4, 1, "c.nrf_twim_error_t", "nrf_twim_error_t"], [182, 2, 1, "c.nrf_twim_errorsrc_get_and_clear", "nrf_twim_errorsrc_get_and_clear"], [182, 2, 1, "c.nrf_twim_event_address_get", "nrf_twim_event_address_get"], [182, 2, 1, "c.nrf_twim_event_check", "nrf_twim_event_check"], [182, 2, 1, "c.nrf_twim_event_clear", "nrf_twim_event_clear"], [182, 4, 1, "c.nrf_twim_event_t", "nrf_twim_event_t"], [182, 2, 1, "c.nrf_twim_frequency_set", "nrf_twim_frequency_set"], [182, 4, 1, "c.nrf_twim_frequency_t", "nrf_twim_frequency_t"], [182, 2, 1, "c.nrf_twim_int_disable", "nrf_twim_int_disable"], [182, 2, 1, "c.nrf_twim_int_enable", "nrf_twim_int_enable"], [182, 2, 1, "c.nrf_twim_int_enable_check", "nrf_twim_int_enable_check"], [182, 4, 1, "c.nrf_twim_int_mask_t", "nrf_twim_int_mask_t"], [182, 2, 1, "c.nrf_twim_pins_set", "nrf_twim_pins_set"], [182, 2, 1, "c.nrf_twim_publish_clear", "nrf_twim_publish_clear"], [182, 2, 1, "c.nrf_twim_publish_set", "nrf_twim_publish_set"], [182, 2, 1, "c.nrf_twim_rx_buffer_set", "nrf_twim_rx_buffer_set"], [182, 2, 1, "c.nrf_twim_rx_list_disable", "nrf_twim_rx_list_disable"], [182, 2, 1, "c.nrf_twim_rx_list_enable", "nrf_twim_rx_list_enable"], [182, 2, 1, "c.nrf_twim_rx_pattern_match_candidate_get", "nrf_twim_rx_pattern_match_candidate_get"], [182, 2, 1, "c.nrf_twim_rx_pattern_match_candidate_set", "nrf_twim_rx_pattern_match_candidate_set"], [182, 2, 1, "c.nrf_twim_rx_pattern_match_enable_check", "nrf_twim_rx_pattern_match_enable_check"], [182, 2, 1, "c.nrf_twim_rx_pattern_match_enable_set", "nrf_twim_rx_pattern_match_enable_set"], [182, 2, 1, "c.nrf_twim_rx_pattern_match_one_shot_check", "nrf_twim_rx_pattern_match_one_shot_check"], [182, 2, 1, "c.nrf_twim_rx_pattern_match_one_shot_disable", "nrf_twim_rx_pattern_match_one_shot_disable"], [182, 2, 1, "c.nrf_twim_rx_pattern_match_one_shot_enable", "nrf_twim_rx_pattern_match_one_shot_enable"], [182, 2, 1, "c.nrf_twim_rx_terminate_on_bus_error_check", "nrf_twim_rx_terminate_on_bus_error_check"], [182, 2, 1, "c.nrf_twim_rx_terminate_on_bus_error_enable_set", "nrf_twim_rx_terminate_on_bus_error_enable_set"], [182, 2, 1, "c.nrf_twim_rxd_amount_get", "nrf_twim_rxd_amount_get"], [182, 2, 1, "c.nrf_twim_rxd_curr_amount_get", "nrf_twim_rxd_curr_amount_get"], [182, 2, 1, "c.nrf_twim_scl_pin_get", "nrf_twim_scl_pin_get"], [182, 2, 1, "c.nrf_twim_sda_pin_get", "nrf_twim_sda_pin_get"], [182, 4, 1, "c.nrf_twim_short_mask_t", "nrf_twim_short_mask_t"], [182, 2, 1, "c.nrf_twim_shorts_disable", "nrf_twim_shorts_disable"], [182, 2, 1, "c.nrf_twim_shorts_enable", "nrf_twim_shorts_enable"], [182, 2, 1, "c.nrf_twim_shorts_get", "nrf_twim_shorts_get"], [182, 2, 1, "c.nrf_twim_shorts_set", "nrf_twim_shorts_set"], [182, 2, 1, "c.nrf_twim_subscribe_clear", "nrf_twim_subscribe_clear"], [182, 2, 1, "c.nrf_twim_subscribe_set", "nrf_twim_subscribe_set"], [182, 2, 1, "c.nrf_twim_task_address_get", "nrf_twim_task_address_get"], [182, 4, 1, "c.nrf_twim_task_t", "nrf_twim_task_t"], [182, 2, 1, "c.nrf_twim_task_trigger", "nrf_twim_task_trigger"], [182, 2, 1, "c.nrf_twim_tx_buffer_set", "nrf_twim_tx_buffer_set"], [182, 2, 1, "c.nrf_twim_tx_list_disable", "nrf_twim_tx_list_disable"], [182, 2, 1, "c.nrf_twim_tx_list_enable", "nrf_twim_tx_list_enable"], [182, 2, 1, "c.nrf_twim_tx_terminate_on_bus_error_check", "nrf_twim_tx_terminate_on_bus_error_check"], [182, 2, 1, "c.nrf_twim_tx_terminate_on_bus_error_enable_set", "nrf_twim_tx_terminate_on_bus_error_enable_set"], [182, 2, 1, "c.nrf_twim_txd_amount_get", "nrf_twim_txd_amount_get"], [182, 2, 1, "c.nrf_twim_txd_curr_amount_get", "nrf_twim_txd_curr_amount_get"], [186, 2, 1, "c.nrf_twis_address_get", "nrf_twis_address_get"], [186, 2, 1, "c.nrf_twis_address_set", "nrf_twis_address_set"], [186, 7, 1, "c.nrf_twis_address_t", "nrf_twis_address_t"], [186, 4, 1, "c.nrf_twis_config_addr_mask_t", "nrf_twis_config_addr_mask_t"], [186, 2, 1, "c.nrf_twis_config_address_get", "nrf_twis_config_address_get"], [186, 2, 1, "c.nrf_twis_config_address_set", "nrf_twis_config_address_set"], [186, 2, 1, "c.nrf_twis_disable", "nrf_twis_disable"], [186, 2, 1, "c.nrf_twis_enable", "nrf_twis_enable"], [186, 2, 1, "c.nrf_twis_enable_check", "nrf_twis_enable_check"], [186, 2, 1, "c.nrf_twis_error_source_get_and_clear", "nrf_twis_error_source_get_and_clear"], [186, 4, 1, "c.nrf_twis_error_t", "nrf_twis_error_t"], [186, 2, 1, "c.nrf_twis_event_address_get", "nrf_twis_event_address_get"], [186, 2, 1, "c.nrf_twis_event_check", "nrf_twis_event_check"], [186, 2, 1, "c.nrf_twis_event_clear", "nrf_twis_event_clear"], [186, 2, 1, "c.nrf_twis_event_get_and_clear", "nrf_twis_event_get_and_clear"], [186, 4, 1, "c.nrf_twis_event_t", "nrf_twis_event_t"], [186, 2, 1, "c.nrf_twis_int_disable", "nrf_twis_int_disable"], [186, 2, 1, "c.nrf_twis_int_enable", "nrf_twis_int_enable"], [186, 2, 1, "c.nrf_twis_int_enable_check", "nrf_twis_int_enable_check"], [186, 4, 1, "c.nrf_twis_int_mask_t", "nrf_twis_int_mask_t"], [186, 2, 1, "c.nrf_twis_match_get", "nrf_twis_match_get"], [186, 2, 1, "c.nrf_twis_orc_get", "nrf_twis_orc_get"], [186, 2, 1, "c.nrf_twis_orc_set", "nrf_twis_orc_set"], [186, 2, 1, "c.nrf_twis_pins_set", "nrf_twis_pins_set"], [186, 2, 1, "c.nrf_twis_publish_clear", "nrf_twis_publish_clear"], [186, 2, 1, "c.nrf_twis_publish_set", "nrf_twis_publish_set"], [186, 2, 1, "c.nrf_twis_rx_amount_get", "nrf_twis_rx_amount_get"], [186, 2, 1, "c.nrf_twis_rx_buffer_get", "nrf_twis_rx_buffer_get"], [186, 2, 1, "c.nrf_twis_rx_buffer_set", "nrf_twis_rx_buffer_set"], [186, 2, 1, "c.nrf_twis_rx_list_disable", "nrf_twis_rx_list_disable"], [186, 2, 1, "c.nrf_twis_rx_list_enable", "nrf_twis_rx_list_enable"], [186, 2, 1, "c.nrf_twis_rx_prepare", "nrf_twis_rx_prepare"], [186, 2, 1, "c.nrf_twis_scl_pin_get", "nrf_twis_scl_pin_get"], [186, 2, 1, "c.nrf_twis_sda_pin_get", "nrf_twis_sda_pin_get"], [186, 4, 1, "c.nrf_twis_short_mask_t", "nrf_twis_short_mask_t"], [186, 2, 1, "c.nrf_twis_shorts_disable", "nrf_twis_shorts_disable"], [186, 2, 1, "c.nrf_twis_shorts_enable", "nrf_twis_shorts_enable"], [186, 2, 1, "c.nrf_twis_shorts_get", "nrf_twis_shorts_get"], [186, 2, 1, "c.nrf_twis_subscribe_clear", "nrf_twis_subscribe_clear"], [186, 2, 1, "c.nrf_twis_subscribe_set", "nrf_twis_subscribe_set"], [186, 2, 1, "c.nrf_twis_task_address_get", "nrf_twis_task_address_get"], [186, 4, 1, "c.nrf_twis_task_t", "nrf_twis_task_t"], [186, 2, 1, "c.nrf_twis_task_trigger", "nrf_twis_task_trigger"], [186, 2, 1, "c.nrf_twis_tx_amount_get", "nrf_twis_tx_amount_get"], [186, 2, 1, "c.nrf_twis_tx_buffer_get", "nrf_twis_tx_buffer_get"], [186, 2, 1, "c.nrf_twis_tx_buffer_set", "nrf_twis_tx_buffer_set"], [186, 2, 1, "c.nrf_twis_tx_list_disable", "nrf_twis_tx_list_disable"], [186, 2, 1, "c.nrf_twis_tx_list_enable", "nrf_twis_tx_list_enable"], [186, 2, 1, "c.nrf_twis_tx_prepare", "nrf_twis_tx_prepare"], [189, 2, 1, "c.nrf_uart_baudrate_set", "nrf_uart_baudrate_set"], [189, 4, 1, "c.nrf_uart_baudrate_t", "nrf_uart_baudrate_t"], [189, 5, 1, "c.nrf_uart_config_t", "nrf_uart_config_t"], [189, 2, 1, "c.nrf_uart_configure", "nrf_uart_configure"], [189, 2, 1, "c.nrf_uart_cts_pin_get", "nrf_uart_cts_pin_get"], [189, 2, 1, "c.nrf_uart_disable", "nrf_uart_disable"], [189, 2, 1, "c.nrf_uart_enable", "nrf_uart_enable"], [189, 4, 1, "c.nrf_uart_error_mask_t", "nrf_uart_error_mask_t"], [189, 2, 1, "c.nrf_uart_errorsrc_get_and_clear", "nrf_uart_errorsrc_get_and_clear"], [189, 2, 1, "c.nrf_uart_event_address_get", "nrf_uart_event_address_get"], [189, 2, 1, "c.nrf_uart_event_check", "nrf_uart_event_check"], [189, 2, 1, "c.nrf_uart_event_clear", "nrf_uart_event_clear"], [189, 4, 1, "c.nrf_uart_event_t", "nrf_uart_event_t"], [189, 2, 1, "c.nrf_uart_hwfc_pins_disconnect", "nrf_uart_hwfc_pins_disconnect"], [189, 2, 1, "c.nrf_uart_hwfc_pins_set", "nrf_uart_hwfc_pins_set"], [189, 4, 1, "c.nrf_uart_hwfc_t", "nrf_uart_hwfc_t"], [189, 2, 1, "c.nrf_uart_int_disable", "nrf_uart_int_disable"], [189, 2, 1, "c.nrf_uart_int_enable", "nrf_uart_int_enable"], [189, 2, 1, "c.nrf_uart_int_enable_check", "nrf_uart_int_enable_check"], [189, 4, 1, "c.nrf_uart_int_mask_t", "nrf_uart_int_mask_t"], [189, 4, 1, "c.nrf_uart_parity_t", "nrf_uart_parity_t"], [189, 4, 1, "c.nrf_uart_paritytype_t", "nrf_uart_paritytype_t"], [189, 2, 1, "c.nrf_uart_rts_pin_get", "nrf_uart_rts_pin_get"], [189, 2, 1, "c.nrf_uart_rx_pin_get", "nrf_uart_rx_pin_get"], [189, 2, 1, "c.nrf_uart_rxd_get", "nrf_uart_rxd_get"], [189, 4, 1, "c.nrf_uart_stop_t", "nrf_uart_stop_t"], [189, 2, 1, "c.nrf_uart_task_address_get", "nrf_uart_task_address_get"], [189, 4, 1, "c.nrf_uart_task_t", "nrf_uart_task_t"], [189, 2, 1, "c.nrf_uart_task_trigger", "nrf_uart_task_trigger"], [189, 2, 1, "c.nrf_uart_tx_pin_get", "nrf_uart_tx_pin_get"], [189, 2, 1, "c.nrf_uart_txd_set", "nrf_uart_txd_set"], [189, 2, 1, "c.nrf_uart_txrx_pins_disconnect", "nrf_uart_txrx_pins_disconnect"], [189, 2, 1, "c.nrf_uart_txrx_pins_set", "nrf_uart_txrx_pins_set"], [192, 2, 1, "c.nrf_uarte_baudrate_set", "nrf_uarte_baudrate_set"], [192, 4, 1, "c.nrf_uarte_baudrate_t", "nrf_uarte_baudrate_t"], [192, 5, 1, "c.nrf_uarte_config_t", "nrf_uarte_config_t"], [192, 2, 1, "c.nrf_uarte_configure", "nrf_uarte_configure"], [192, 2, 1, "c.nrf_uarte_cts_pin_get", "nrf_uarte_cts_pin_get"], [192, 2, 1, "c.nrf_uarte_disable", "nrf_uarte_disable"], [192, 2, 1, "c.nrf_uarte_enable", "nrf_uarte_enable"], [192, 2, 1, "c.nrf_uarte_enable_check", "nrf_uarte_enable_check"], [192, 4, 1, "c.nrf_uarte_error_mask_t", "nrf_uarte_error_mask_t"], [192, 2, 1, "c.nrf_uarte_errorsrc_get_and_clear", "nrf_uarte_errorsrc_get_and_clear"], [192, 2, 1, "c.nrf_uarte_event_address_get", "nrf_uarte_event_address_get"], [192, 2, 1, "c.nrf_uarte_event_check", "nrf_uarte_event_check"], [192, 2, 1, "c.nrf_uarte_event_clear", "nrf_uarte_event_clear"], [192, 4, 1, "c.nrf_uarte_event_t", "nrf_uarte_event_t"], [192, 2, 1, "c.nrf_uarte_hwfc_pins_disconnect", "nrf_uarte_hwfc_pins_disconnect"], [192, 2, 1, "c.nrf_uarte_hwfc_pins_set", "nrf_uarte_hwfc_pins_set"], [192, 4, 1, "c.nrf_uarte_hwfc_t", "nrf_uarte_hwfc_t"], [192, 2, 1, "c.nrf_uarte_int_disable", "nrf_uarte_int_disable"], [192, 2, 1, "c.nrf_uarte_int_enable", "nrf_uarte_int_enable"], [192, 2, 1, "c.nrf_uarte_int_enable_check", "nrf_uarte_int_enable_check"], [192, 4, 1, "c.nrf_uarte_int_mask_t", "nrf_uarte_int_mask_t"], [192, 4, 1, "c.nrf_uarte_parity_t", "nrf_uarte_parity_t"], [192, 4, 1, "c.nrf_uarte_paritytype_t", "nrf_uarte_paritytype_t"], [192, 2, 1, "c.nrf_uarte_publish_clear", "nrf_uarte_publish_clear"], [192, 2, 1, "c.nrf_uarte_publish_set", "nrf_uarte_publish_set"], [192, 2, 1, "c.nrf_uarte_rts_pin_get", "nrf_uarte_rts_pin_get"], [192, 2, 1, "c.nrf_uarte_rx_amount_get", "nrf_uarte_rx_amount_get"], [192, 2, 1, "c.nrf_uarte_rx_buffer_get", "nrf_uarte_rx_buffer_get"], [192, 2, 1, "c.nrf_uarte_rx_buffer_set", "nrf_uarte_rx_buffer_set"], [192, 2, 1, "c.nrf_uarte_rx_pin_get", "nrf_uarte_rx_pin_get"], [192, 4, 1, "c.nrf_uarte_short_t", "nrf_uarte_short_t"], [192, 2, 1, "c.nrf_uarte_shorts_disable", "nrf_uarte_shorts_disable"], [192, 2, 1, "c.nrf_uarte_shorts_enable", "nrf_uarte_shorts_enable"], [192, 2, 1, "c.nrf_uarte_shorts_get", "nrf_uarte_shorts_get"], [192, 2, 1, "c.nrf_uarte_shorts_set", "nrf_uarte_shorts_set"], [192, 4, 1, "c.nrf_uarte_stop_t", "nrf_uarte_stop_t"], [192, 2, 1, "c.nrf_uarte_subscribe_clear", "nrf_uarte_subscribe_clear"], [192, 2, 1, "c.nrf_uarte_subscribe_set", "nrf_uarte_subscribe_set"], [192, 2, 1, "c.nrf_uarte_task_address_get", "nrf_uarte_task_address_get"], [192, 4, 1, "c.nrf_uarte_task_t", "nrf_uarte_task_t"], [192, 2, 1, "c.nrf_uarte_task_trigger", "nrf_uarte_task_trigger"], [192, 2, 1, "c.nrf_uarte_tx_amount_get", "nrf_uarte_tx_amount_get"], [192, 2, 1, "c.nrf_uarte_tx_buffer_get", "nrf_uarte_tx_buffer_get"], [192, 2, 1, "c.nrf_uarte_tx_buffer_set", "nrf_uarte_tx_buffer_set"], [192, 2, 1, "c.nrf_uarte_tx_pin_get", "nrf_uarte_tx_pin_get"], [192, 2, 1, "c.nrf_uarte_txrx_pins_disconnect", "nrf_uarte_txrx_pins_disconnect"], [192, 2, 1, "c.nrf_uarte_txrx_pins_set", "nrf_uarte_txrx_pins_set"], [195, 2, 1, "c.nrf_uicr_boot_region_config_get", "nrf_uicr_boot_region_config_get"], [195, 2, 1, "c.nrf_uicr_boot_region_config_set", "nrf_uicr_boot_region_config_set"], [195, 5, 1, "c.nrf_uicr_boot_region_config_t", "nrf_uicr_boot_region_config_t"], [195, 4, 1, "c.nrf_uicr_boot_region_perm_mask_t", "nrf_uicr_boot_region_perm_mask_t"], [195, 5, 1, "c.nrf_uicr_dppi_link_t", "nrf_uicr_dppi_link_t"], [195, 4, 1, "c.nrf_uicr_feature_index_mask_t", "nrf_uicr_feature_index_mask_t"], [195, 2, 1, "c.nrf_uicr_feature_link_get", "nrf_uicr_feature_link_get"], [195, 2, 1, "c.nrf_uicr_feature_own_get", "nrf_uicr_feature_own_get"], [195, 2, 1, "c.nrf_uicr_feature_secure_get", "nrf_uicr_feature_secure_get"], [195, 4, 1, "c.nrf_uicr_feature_t", "nrf_uicr_feature_t"], [195, 2, 1, "c.nrf_uicr_gpio_ctrlsel_get", "nrf_uicr_gpio_ctrlsel_get"], [195, 2, 1, "c.nrf_uicr_gpio_instance_get", "nrf_uicr_gpio_instance_get"], [195, 2, 1, "c.nrf_uicr_initnsvtor_get", "nrf_uicr_initnsvtor_get"], [195, 2, 1, "c.nrf_uicr_initsvtor_get", "nrf_uicr_initsvtor_get"], [195, 2, 1, "c.nrf_uicr_ipcmap_config_get", "nrf_uicr_ipcmap_config_get"], [195, 5, 1, "c.nrf_uicr_ipcmap_config_t", "nrf_uicr_ipcmap_config_t"], [195, 5, 1, "c.nrf_uicr_ipcmap_pair_t", "nrf_uicr_ipcmap_pair_t"], [195, 2, 1, "c.nrf_uicr_mailbox_address_get", "nrf_uicr_mailbox_address_get"], [195, 2, 1, "c.nrf_uicr_mailbox_config_get", "nrf_uicr_mailbox_config_get"], [195, 5, 1, "c.nrf_uicr_mailbox_config_t", "nrf_uicr_mailbox_config_t"], [195, 2, 1, "c.nrf_uicr_mem_config_get", "nrf_uicr_mem_config_get"], [195, 4, 1, "c.nrf_uicr_mem_config_perm_mask_t", "nrf_uicr_mem_config_perm_mask_t"], [195, 5, 1, "c.nrf_uicr_mem_config_t", "nrf_uicr_mem_config_t"], [195, 2, 1, "c.nrf_uicr_mem_size_get", "nrf_uicr_mem_size_get"], [195, 2, 1, "c.nrf_uicr_periph_config_get", "nrf_uicr_periph_config_get"], [195, 5, 1, "c.nrf_uicr_periph_config_t", "nrf_uicr_periph_config_t"], [195, 2, 1, "c.nrf_uicr_ptrextuicr_get", "nrf_uicr_ptrextuicr_get"], [197, 4, 1, "c.nrf_usbd_dataepstatus_mask_t", "nrf_usbd_dataepstatus_mask_t"], [197, 2, 1, "c.nrf_usbd_disable", "nrf_usbd_disable"], [197, 2, 1, "c.nrf_usbd_dpdmvalue_set", "nrf_usbd_dpdmvalue_set"], [197, 4, 1, "c.nrf_usbd_dpdmvalue_t", "nrf_usbd_dpdmvalue_t"], [197, 2, 1, "c.nrf_usbd_dtoggle_get", "nrf_usbd_dtoggle_get"], [197, 2, 1, "c.nrf_usbd_dtoggle_set", "nrf_usbd_dtoggle_set"], [197, 4, 1, "c.nrf_usbd_dtoggle_t", "nrf_usbd_dtoggle_t"], [197, 2, 1, "c.nrf_usbd_enable", "nrf_usbd_enable"], [197, 2, 1, "c.nrf_usbd_ep_all_disable", "nrf_usbd_ep_all_disable"], [197, 2, 1, "c.nrf_usbd_ep_amount_get", "nrf_usbd_ep_amount_get"], [197, 2, 1, "c.nrf_usbd_ep_default_config", "nrf_usbd_ep_default_config"], [197, 2, 1, "c.nrf_usbd_ep_disable", "nrf_usbd_ep_disable"], [197, 2, 1, "c.nrf_usbd_ep_easydma_set", "nrf_usbd_ep_easydma_set"], [197, 2, 1, "c.nrf_usbd_ep_enable", "nrf_usbd_ep_enable"], [197, 2, 1, "c.nrf_usbd_ep_enable_check", "nrf_usbd_ep_enable_check"], [197, 2, 1, "c.nrf_usbd_ep_is_stall", "nrf_usbd_ep_is_stall"], [197, 2, 1, "c.nrf_usbd_ep_stall", "nrf_usbd_ep_stall"], [197, 2, 1, "c.nrf_usbd_ep_unstall", "nrf_usbd_ep_unstall"], [197, 2, 1, "c.nrf_usbd_epdatastatus_clear", "nrf_usbd_epdatastatus_clear"], [197, 2, 1, "c.nrf_usbd_epdatastatus_get", "nrf_usbd_epdatastatus_get"], [197, 2, 1, "c.nrf_usbd_epdatastatus_get_and_clear", "nrf_usbd_epdatastatus_get_and_clear"], [197, 2, 1, "c.nrf_usbd_episoout_size_get", "nrf_usbd_episoout_size_get"], [197, 2, 1, "c.nrf_usbd_epout_clear", "nrf_usbd_epout_clear"], [197, 2, 1, "c.nrf_usbd_epout_size_get", "nrf_usbd_epout_size_get"], [197, 2, 1, "c.nrf_usbd_epstatus_clear", "nrf_usbd_epstatus_clear"], [197, 2, 1, "c.nrf_usbd_epstatus_get", "nrf_usbd_epstatus_get"], [197, 2, 1, "c.nrf_usbd_epstatus_get_and_clear", "nrf_usbd_epstatus_get_and_clear"], [197, 4, 1, "c.nrf_usbd_epstatus_mask_t", "nrf_usbd_epstatus_mask_t"], [197, 2, 1, "c.nrf_usbd_event_address_get", "nrf_usbd_event_address_get"], [197, 2, 1, "c.nrf_usbd_event_check", "nrf_usbd_event_check"], [197, 2, 1, "c.nrf_usbd_event_clear", "nrf_usbd_event_clear"], [197, 2, 1, "c.nrf_usbd_event_get_and_clear", "nrf_usbd_event_get_and_clear"], [197, 4, 1, "c.nrf_usbd_event_t", "nrf_usbd_event_t"], [197, 2, 1, "c.nrf_usbd_eventcause_clear", "nrf_usbd_eventcause_clear"], [197, 2, 1, "c.nrf_usbd_eventcause_get", "nrf_usbd_eventcause_get"], [197, 2, 1, "c.nrf_usbd_eventcause_get_and_clear", "nrf_usbd_eventcause_get_and_clear"], [197, 4, 1, "c.nrf_usbd_eventcause_mask_t", "nrf_usbd_eventcause_mask_t"], [197, 2, 1, "c.nrf_usbd_framecntr_get", "nrf_usbd_framecntr_get"], [197, 2, 1, "c.nrf_usbd_halted_get", "nrf_usbd_halted_get"], [197, 2, 1, "c.nrf_usbd_int_disable", "nrf_usbd_int_disable"], [197, 2, 1, "c.nrf_usbd_int_enable", "nrf_usbd_int_enable"], [197, 2, 1, "c.nrf_usbd_int_enable_check", "nrf_usbd_int_enable_check"], [197, 2, 1, "c.nrf_usbd_int_enable_get", "nrf_usbd_int_enable_get"], [197, 4, 1, "c.nrf_usbd_int_mask_t", "nrf_usbd_int_mask_t"], [197, 2, 1, "c.nrf_usbd_isoinconfig_get", "nrf_usbd_isoinconfig_get"], [197, 2, 1, "c.nrf_usbd_isoinconfig_set", "nrf_usbd_isoinconfig_set"], [197, 4, 1, "c.nrf_usbd_isoinconfig_t", "nrf_usbd_isoinconfig_t"], [197, 2, 1, "c.nrf_usbd_isosplit_get", "nrf_usbd_isosplit_get"], [197, 2, 1, "c.nrf_usbd_isosplit_set", "nrf_usbd_isosplit_set"], [197, 4, 1, "c.nrf_usbd_isosplit_t", "nrf_usbd_isosplit_t"], [197, 2, 1, "c.nrf_usbd_lowpower_check", "nrf_usbd_lowpower_check"], [197, 2, 1, "c.nrf_usbd_lowpower_disable", "nrf_usbd_lowpower_disable"], [197, 2, 1, "c.nrf_usbd_lowpower_enable", "nrf_usbd_lowpower_enable"], [197, 2, 1, "c.nrf_usbd_pullup_check", "nrf_usbd_pullup_check"], [197, 2, 1, "c.nrf_usbd_pullup_disable", "nrf_usbd_pullup_disable"], [197, 2, 1, "c.nrf_usbd_pullup_enable", "nrf_usbd_pullup_enable"], [197, 2, 1, "c.nrf_usbd_setup_bmrequesttype_get", "nrf_usbd_setup_bmrequesttype_get"], [197, 2, 1, "c.nrf_usbd_setup_brequest_get", "nrf_usbd_setup_brequest_get"], [197, 2, 1, "c.nrf_usbd_setup_windex_get", "nrf_usbd_setup_windex_get"], [197, 2, 1, "c.nrf_usbd_setup_wlength_get", "nrf_usbd_setup_wlength_get"], [197, 2, 1, "c.nrf_usbd_setup_wvalue_get", "nrf_usbd_setup_wvalue_get"], [197, 4, 1, "c.nrf_usbd_short_mask_t", "nrf_usbd_short_mask_t"], [197, 2, 1, "c.nrf_usbd_shorts_disable", "nrf_usbd_shorts_disable"], [197, 2, 1, "c.nrf_usbd_shorts_enable", "nrf_usbd_shorts_enable"], [197, 2, 1, "c.nrf_usbd_shorts_get", "nrf_usbd_shorts_get"], [197, 2, 1, "c.nrf_usbd_task_address_get", "nrf_usbd_task_address_get"], [197, 4, 1, "c.nrf_usbd_task_t", "nrf_usbd_task_t"], [197, 2, 1, "c.nrf_usbd_task_trigger", "nrf_usbd_task_trigger"], [199, 2, 1, "c.nrf_usbhs_disable", "nrf_usbhs_disable"], [199, 2, 1, "c.nrf_usbhs_enable", "nrf_usbhs_enable"], [199, 2, 1, "c.nrf_usbhs_event_address_get", "nrf_usbhs_event_address_get"], [199, 2, 1, "c.nrf_usbhs_event_check", "nrf_usbhs_event_check"], [199, 2, 1, "c.nrf_usbhs_event_clear", "nrf_usbhs_event_clear"], [199, 2, 1, "c.nrf_usbhs_event_get_and_clear", "nrf_usbhs_event_get_and_clear"], [199, 4, 1, "c.nrf_usbhs_event_t", "nrf_usbhs_event_t"], [199, 2, 1, "c.nrf_usbhs_int_disable", "nrf_usbhs_int_disable"], [199, 2, 1, "c.nrf_usbhs_int_enable", "nrf_usbhs_int_enable"], [199, 2, 1, "c.nrf_usbhs_int_enable_check", "nrf_usbhs_int_enable_check"], [199, 2, 1, "c.nrf_usbhs_int_enable_get", "nrf_usbhs_int_enable_get"], [199, 4, 1, "c.nrf_usbhs_int_mask_t", "nrf_usbhs_int_mask_t"], [199, 2, 1, "c.nrf_usbhs_task_address_get", "nrf_usbhs_task_address_get"], [199, 4, 1, "c.nrf_usbhs_task_t", "nrf_usbhs_task_t"], [199, 2, 1, "c.nrf_usbhs_task_trigger", "nrf_usbhs_task_trigger"], [202, 2, 1, "c.nrf_usbreg_event_check", "nrf_usbreg_event_check"], [202, 2, 1, "c.nrf_usbreg_event_clear", "nrf_usbreg_event_clear"], [202, 4, 1, "c.nrf_usbreg_event_t", "nrf_usbreg_event_t"], [202, 2, 1, "c.nrf_usbreg_int_disable", "nrf_usbreg_int_disable"], [202, 2, 1, "c.nrf_usbreg_int_enable", "nrf_usbreg_int_enable"], [202, 2, 1, "c.nrf_usbreg_int_enable_check", "nrf_usbreg_int_enable_check"], [202, 4, 1, "c.nrf_usbreg_int_mask_t", "nrf_usbreg_int_mask_t"], [202, 2, 1, "c.nrf_usbreg_status_get", "nrf_usbreg_status_get"], [202, 4, 1, "c.nrf_usbreg_status_mask_t", "nrf_usbreg_status_mask_t"], [249, 4, 1, "c.nrf_vdma_attributes_t", "nrf_vdma_attributes_t"], [249, 4, 1, "c.nrf_vdma_ext_attribute_t", "nrf_vdma_ext_attribute_t"], [249, 2, 1, "c.nrf_vdma_job_buffer_get", "nrf_vdma_job_buffer_get"], [249, 2, 1, "c.nrf_vdma_job_fill", "nrf_vdma_job_fill"], [249, 2, 1, "c.nrf_vdma_job_link", "nrf_vdma_job_link"], [249, 2, 1, "c.nrf_vdma_job_reduced_fill", "nrf_vdma_job_reduced_fill"], [249, 2, 1, "c.nrf_vdma_job_reduced_init", "nrf_vdma_job_reduced_init"], [249, 7, 1, "c.nrf_vdma_job_reduced_t", "nrf_vdma_job_reduced_t"], [249, 2, 1, "c.nrf_vdma_job_size_get", "nrf_vdma_job_size_get"], [249, 5, 1, "c.nrf_vdma_job_t", "nrf_vdma_job_t"], [249, 2, 1, "c.nrf_vdma_job_terminate", "nrf_vdma_job_terminate"], [203, 4, 1, "c.nrf_vmc_power_t", "nrf_vmc_power_t"], [203, 2, 1, "c.nrf_vmc_ram_block_clear", "nrf_vmc_ram_block_clear"], [203, 2, 1, "c.nrf_vmc_ram_block_config", "nrf_vmc_ram_block_config"], [203, 2, 1, "c.nrf_vmc_ram_block_power_all_set", "nrf_vmc_ram_block_power_all_set"], [203, 2, 1, "c.nrf_vmc_ram_block_power_clear", "nrf_vmc_ram_block_power_clear"], [203, 2, 1, "c.nrf_vmc_ram_block_power_mask_get", "nrf_vmc_ram_block_power_mask_get"], [203, 2, 1, "c.nrf_vmc_ram_block_power_set", "nrf_vmc_ram_block_power_set"], [203, 2, 1, "c.nrf_vmc_ram_block_retention_all_set", "nrf_vmc_ram_block_retention_all_set"], [203, 2, 1, "c.nrf_vmc_ram_block_retention_clear", "nrf_vmc_ram_block_retention_clear"], [203, 2, 1, "c.nrf_vmc_ram_block_retention_mask_get", "nrf_vmc_ram_block_retention_mask_get"], [203, 2, 1, "c.nrf_vmc_ram_block_retention_set", "nrf_vmc_ram_block_retention_set"], [203, 4, 1, "c.nrf_vmc_retention_t", "nrf_vmc_retention_t"], [205, 5, 1, "c.nrf_vpr_clic_attr_t", "nrf_vpr_clic_attr_t"], [205, 2, 1, "c.nrf_vpr_clic_config_get", "nrf_vpr_clic_config_get"], [205, 5, 1, "c.nrf_vpr_clic_config_t", "nrf_vpr_clic_config_t"], [205, 2, 1, "c.nrf_vpr_clic_info_get", "nrf_vpr_clic_info_get"], [205, 5, 1, "c.nrf_vpr_clic_info_t", "nrf_vpr_clic_info_t"], [205, 2, 1, "c.nrf_vpr_clic_int_attr_get", "nrf_vpr_clic_int_attr_get"], [205, 2, 1, "c.nrf_vpr_clic_int_enable_check", "nrf_vpr_clic_int_enable_check"], [205, 2, 1, "c.nrf_vpr_clic_int_enable_set", "nrf_vpr_clic_int_enable_set"], [205, 2, 1, "c.nrf_vpr_clic_int_pending_check", "nrf_vpr_clic_int_pending_check"], [205, 2, 1, "c.nrf_vpr_clic_int_pending_clear", "nrf_vpr_clic_int_pending_clear"], [205, 2, 1, "c.nrf_vpr_clic_int_pending_set", "nrf_vpr_clic_int_pending_set"], [205, 2, 1, "c.nrf_vpr_clic_int_priority_get", "nrf_vpr_clic_int_priority_get"], [205, 2, 1, "c.nrf_vpr_clic_int_priority_set", "nrf_vpr_clic_int_priority_set"], [205, 4, 1, "c.nrf_vpr_clic_mode_t", "nrf_vpr_clic_mode_t"], [205, 4, 1, "c.nrf_vpr_clic_priority_t", "nrf_vpr_clic_priority_t"], [205, 4, 1, "c.nrf_vpr_clic_priv_t", "nrf_vpr_clic_priv_t"], [205, 4, 1, "c.nrf_vpr_clic_trigger_t", "nrf_vpr_clic_trigger_t"], [210, 2, 1, "c.nrf_vpr_cpurun_get", "nrf_vpr_cpurun_get"], [210, 2, 1, "c.nrf_vpr_cpurun_set", "nrf_vpr_cpurun_set"], [206, 2, 1, "c.nrf_vpr_csr_clic_round_robin_check", "nrf_vpr_csr_clic_round_robin_check"], [206, 2, 1, "c.nrf_vpr_csr_clic_round_robin_set", "nrf_vpr_csr_clic_round_robin_set"], [206, 2, 1, "c.nrf_vpr_csr_cnt_irq_enable_check", "nrf_vpr_csr_cnt_irq_enable_check"], [206, 2, 1, "c.nrf_vpr_csr_cnt_irq_enable_set", "nrf_vpr_csr_cnt_irq_enable_set"], [206, 4, 1, "c.nrf_vpr_csr_int_threshold_t", "nrf_vpr_csr_int_threshold_t"], [206, 2, 1, "c.nrf_vpr_csr_machine_cycle_counter_enable_check", "nrf_vpr_csr_machine_cycle_counter_enable_check"], [206, 2, 1, "c.nrf_vpr_csr_machine_cycle_counter_enable_set", "nrf_vpr_csr_machine_cycle_counter_enable_set"], [206, 2, 1, "c.nrf_vpr_csr_machine_cycle_counter_get", "nrf_vpr_csr_machine_cycle_counter_get"], [206, 2, 1, "c.nrf_vpr_csr_machine_exception_pc_get", "nrf_vpr_csr_machine_exception_pc_get"], [206, 2, 1, "c.nrf_vpr_csr_machine_instruction_counter_enable_check", "nrf_vpr_csr_machine_instruction_counter_enable_check"], [206, 2, 1, "c.nrf_vpr_csr_machine_instruction_counter_enable_set", "nrf_vpr_csr_machine_instruction_counter_enable_set"], [206, 2, 1, "c.nrf_vpr_csr_machine_instruction_counter_get", "nrf_vpr_csr_machine_instruction_counter_get"], [206, 2, 1, "c.nrf_vpr_csr_machine_interrupt_threshold_get", "nrf_vpr_csr_machine_interrupt_threshold_get"], [206, 2, 1, "c.nrf_vpr_csr_machine_interrupt_threshold_set", "nrf_vpr_csr_machine_interrupt_threshold_set"], [206, 2, 1, "c.nrf_vpr_csr_machine_interrupts_check", "nrf_vpr_csr_machine_interrupts_check"], [206, 2, 1, "c.nrf_vpr_csr_machine_interrupts_disable", "nrf_vpr_csr_machine_interrupts_disable"], [206, 2, 1, "c.nrf_vpr_csr_machine_interrupts_enable", "nrf_vpr_csr_machine_interrupts_enable"], [206, 2, 1, "c.nrf_vpr_csr_machine_trap_cause_code_get", "nrf_vpr_csr_machine_trap_cause_code_get"], [206, 2, 1, "c.nrf_vpr_csr_machine_trap_interrupt_check", "nrf_vpr_csr_machine_trap_interrupt_check"], [206, 2, 1, "c.nrf_vpr_csr_machine_trap_value_get", "nrf_vpr_csr_machine_trap_value_get"], [206, 2, 1, "c.nrf_vpr_csr_machine_trap_vector_table_addr_get", "nrf_vpr_csr_machine_trap_vector_table_addr_get"], [206, 2, 1, "c.nrf_vpr_csr_machine_trap_vector_table_addr_set", "nrf_vpr_csr_machine_trap_vector_table_addr_set"], [206, 2, 1, "c.nrf_vpr_csr_return_to_sleep_check", "nrf_vpr_csr_return_to_sleep_check"], [206, 2, 1, "c.nrf_vpr_csr_return_to_sleep_set", "nrf_vpr_csr_return_to_sleep_set"], [206, 2, 1, "c.nrf_vpr_csr_rtperiph_enable_check", "nrf_vpr_csr_rtperiph_enable_check"], [206, 2, 1, "c.nrf_vpr_csr_rtperiph_enable_set", "nrf_vpr_csr_rtperiph_enable_set"], [206, 2, 1, "c.nrf_vpr_csr_sleep_state_get", "nrf_vpr_csr_sleep_state_get"], [206, 2, 1, "c.nrf_vpr_csr_sleep_state_set", "nrf_vpr_csr_sleep_state_set"], [206, 4, 1, "c.nrf_vpr_csr_sleep_state_t", "nrf_vpr_csr_sleep_state_t"], [206, 2, 1, "c.nrf_vpr_csr_stack_on_sleep_check", "nrf_vpr_csr_stack_on_sleep_check"], [206, 2, 1, "c.nrf_vpr_csr_stack_on_sleep_set", "nrf_vpr_csr_stack_on_sleep_set"], [206, 4, 1, "c.nrf_vpr_csr_trap_cause_t", "nrf_vpr_csr_trap_cause_t"], [206, 2, 1, "c.nrf_vpr_csr_unrecoverable_return_check", "nrf_vpr_csr_unrecoverable_return_check"], [206, 2, 1, "c.nrf_vpr_csr_unrecoverable_return_set", "nrf_vpr_csr_unrecoverable_return_set"], [207, 2, 1, "c.nrf_vpr_csr_vevif_events_buffered_dirty_check", "nrf_vpr_csr_vevif_events_buffered_dirty_check"], [207, 2, 1, "c.nrf_vpr_csr_vevif_events_buffered_set", "nrf_vpr_csr_vevif_events_buffered_set"], [207, 2, 1, "c.nrf_vpr_csr_vevif_events_get", "nrf_vpr_csr_vevif_events_get"], [207, 2, 1, "c.nrf_vpr_csr_vevif_events_set", "nrf_vpr_csr_vevif_events_set"], [207, 2, 1, "c.nrf_vpr_csr_vevif_events_trigger", "nrf_vpr_csr_vevif_events_trigger"], [207, 2, 1, "c.nrf_vpr_csr_vevif_int_disable", "nrf_vpr_csr_vevif_int_disable"], [207, 2, 1, "c.nrf_vpr_csr_vevif_int_enable", "nrf_vpr_csr_vevif_int_enable"], [207, 2, 1, "c.nrf_vpr_csr_vevif_int_enable_check", "nrf_vpr_csr_vevif_int_enable_check"], [207, 2, 1, "c.nrf_vpr_csr_vevif_publish_get", "nrf_vpr_csr_vevif_publish_get"], [207, 2, 1, "c.nrf_vpr_csr_vevif_publish_set", "nrf_vpr_csr_vevif_publish_set"], [207, 2, 1, "c.nrf_vpr_csr_vevif_subscribe_get", "nrf_vpr_csr_vevif_subscribe_get"], [207, 2, 1, "c.nrf_vpr_csr_vevif_subscribe_set", "nrf_vpr_csr_vevif_subscribe_set"], [207, 2, 1, "c.nrf_vpr_csr_vevif_tasks_clear", "nrf_vpr_csr_vevif_tasks_clear"], [207, 2, 1, "c.nrf_vpr_csr_vevif_tasks_get", "nrf_vpr_csr_vevif_tasks_get"], [207, 2, 1, "c.nrf_vpr_csr_vevif_tasks_set", "nrf_vpr_csr_vevif_tasks_set"], [208, 2, 1, "c.nrf_vpr_csr_vio_dir_buffered_dirty_check", "nrf_vpr_csr_vio_dir_buffered_dirty_check"], [208, 2, 1, "c.nrf_vpr_csr_vio_dir_buffered_get", "nrf_vpr_csr_vio_dir_buffered_get"], [208, 2, 1, "c.nrf_vpr_csr_vio_dir_buffered_set", "nrf_vpr_csr_vio_dir_buffered_set"], [208, 2, 1, "c.nrf_vpr_csr_vio_dir_buffered_toggle_set", "nrf_vpr_csr_vio_dir_buffered_toggle_set"], [208, 2, 1, "c.nrf_vpr_csr_vio_dir_get", "nrf_vpr_csr_vio_dir_get"], [208, 2, 1, "c.nrf_vpr_csr_vio_dir_set", "nrf_vpr_csr_vio_dir_set"], [208, 2, 1, "c.nrf_vpr_csr_vio_dir_toggle_set", "nrf_vpr_csr_vio_dir_toggle_set"], [208, 2, 1, "c.nrf_vpr_csr_vio_dirout_buffered_dirty_check", "nrf_vpr_csr_vio_dirout_buffered_dirty_check"], [208, 2, 1, "c.nrf_vpr_csr_vio_dirout_buffered_get", "nrf_vpr_csr_vio_dirout_buffered_get"], [208, 2, 1, "c.nrf_vpr_csr_vio_dirout_buffered_set", "nrf_vpr_csr_vio_dirout_buffered_set"], [208, 2, 1, "c.nrf_vpr_csr_vio_dirout_get", "nrf_vpr_csr_vio_dirout_get"], [208, 2, 1, "c.nrf_vpr_csr_vio_dirout_set", "nrf_vpr_csr_vio_dirout_set"], [208, 2, 1, "c.nrf_vpr_csr_vio_dirout_toggle_buffered_set", "nrf_vpr_csr_vio_dirout_toggle_buffered_set"], [208, 2, 1, "c.nrf_vpr_csr_vio_dirout_toggle_set", "nrf_vpr_csr_vio_dirout_toggle_set"], [208, 2, 1, "c.nrf_vpr_csr_vio_in_get", "nrf_vpr_csr_vio_in_get"], [208, 2, 1, "c.nrf_vpr_csr_vio_mode_in_get", "nrf_vpr_csr_vio_mode_in_get"], [208, 2, 1, "c.nrf_vpr_csr_vio_mode_in_set", "nrf_vpr_csr_vio_mode_in_set"], [208, 4, 1, "c.nrf_vpr_csr_vio_mode_in_t", "nrf_vpr_csr_vio_mode_in_t"], [208, 2, 1, "c.nrf_vpr_csr_vio_mode_out_get", "nrf_vpr_csr_vio_mode_out_get"], [208, 2, 1, "c.nrf_vpr_csr_vio_mode_out_set", "nrf_vpr_csr_vio_mode_out_set"], [208, 5, 1, "c.nrf_vpr_csr_vio_mode_out_t", "nrf_vpr_csr_vio_mode_out_t"], [208, 2, 1, "c.nrf_vpr_csr_vio_out_buffered_dirty_check", "nrf_vpr_csr_vio_out_buffered_dirty_check"], [208, 2, 1, "c.nrf_vpr_csr_vio_out_buffered_get", "nrf_vpr_csr_vio_out_buffered_get"], [208, 2, 1, "c.nrf_vpr_csr_vio_out_buffered_set", "nrf_vpr_csr_vio_out_buffered_set"], [208, 2, 1, "c.nrf_vpr_csr_vio_out_combined_dirty_check", "nrf_vpr_csr_vio_out_combined_dirty_check"], [208, 2, 1, "c.nrf_vpr_csr_vio_out_combined_set", "nrf_vpr_csr_vio_out_combined_set"], [208, 2, 1, "c.nrf_vpr_csr_vio_out_combined_toggle_set", "nrf_vpr_csr_vio_out_combined_toggle_set"], [208, 2, 1, "c.nrf_vpr_csr_vio_out_get", "nrf_vpr_csr_vio_out_get"], [208, 2, 1, "c.nrf_vpr_csr_vio_out_set", "nrf_vpr_csr_vio_out_set"], [208, 4, 1, "c.nrf_vpr_csr_vio_out_shift_t", "nrf_vpr_csr_vio_out_shift_t"], [208, 2, 1, "c.nrf_vpr_csr_vio_out_toggle_buffered_set", "nrf_vpr_csr_vio_out_toggle_buffered_set"], [208, 2, 1, "c.nrf_vpr_csr_vio_out_toggle_set", "nrf_vpr_csr_vio_out_toggle_set"], [209, 2, 1, "c.nrf_vpr_csr_vtim_combined_counter_add_set", "nrf_vpr_csr_vtim_combined_counter_add_set"], [209, 2, 1, "c.nrf_vpr_csr_vtim_combined_counter_get", "nrf_vpr_csr_vtim_combined_counter_get"], [209, 2, 1, "c.nrf_vpr_csr_vtim_combined_counter_set", "nrf_vpr_csr_vtim_combined_counter_set"], [209, 2, 1, "c.nrf_vpr_csr_vtim_combined_counter_top_get", "nrf_vpr_csr_vtim_combined_counter_top_get"], [209, 2, 1, "c.nrf_vpr_csr_vtim_combined_counter_top_set", "nrf_vpr_csr_vtim_combined_counter_top_set"], [209, 2, 1, "c.nrf_vpr_csr_vtim_combined_wait_trigger", "nrf_vpr_csr_vtim_combined_wait_trigger"], [209, 2, 1, "c.nrf_vpr_csr_vtim_count_mode_set", "nrf_vpr_csr_vtim_count_mode_set"], [209, 4, 1, "c.nrf_vpr_csr_vtim_count_t", "nrf_vpr_csr_vtim_count_t"], [209, 2, 1, "c.nrf_vpr_csr_vtim_simple_counter_add_set", "nrf_vpr_csr_vtim_simple_counter_add_set"], [209, 2, 1, "c.nrf_vpr_csr_vtim_simple_counter_get", "nrf_vpr_csr_vtim_simple_counter_get"], [209, 2, 1, "c.nrf_vpr_csr_vtim_simple_counter_set", "nrf_vpr_csr_vtim_simple_counter_set"], [209, 2, 1, "c.nrf_vpr_csr_vtim_simple_counter_top_get", "nrf_vpr_csr_vtim_simple_counter_top_get"], [209, 2, 1, "c.nrf_vpr_csr_vtim_simple_counter_top_set", "nrf_vpr_csr_vtim_simple_counter_top_set"], [209, 2, 1, "c.nrf_vpr_csr_vtim_simple_wait_set", "nrf_vpr_csr_vtim_simple_wait_set"], [209, 2, 1, "c.nrf_vpr_cst_vtim_count_mode_get", "nrf_vpr_cst_vtim_count_mode_get"], [210, 2, 1, "c.nrf_vpr_debugif_dmcontrol_get", "nrf_vpr_debugif_dmcontrol_get"], [210, 2, 1, "c.nrf_vpr_debugif_dmcontrol_mask_set", "nrf_vpr_debugif_dmcontrol_mask_set"], [210, 2, 1, "c.nrf_vpr_debugif_dmcontrol_set", "nrf_vpr_debugif_dmcontrol_set"], [210, 4, 1, "c.nrf_vpr_dmcontrol_mask_t", "nrf_vpr_dmcontrol_mask_t"], [210, 4, 1, "c.nrf_vpr_dmcontrol_t", "nrf_vpr_dmcontrol_t"], [210, 2, 1, "c.nrf_vpr_event_address_get", "nrf_vpr_event_address_get"], [210, 2, 1, "c.nrf_vpr_event_check", "nrf_vpr_event_check"], [210, 2, 1, "c.nrf_vpr_event_clear", "nrf_vpr_event_clear"], [210, 4, 1, "c.nrf_vpr_event_t", "nrf_vpr_event_t"], [210, 2, 1, "c.nrf_vpr_initpc_get", "nrf_vpr_initpc_get"], [210, 2, 1, "c.nrf_vpr_initpc_set", "nrf_vpr_initpc_set"], [210, 2, 1, "c.nrf_vpr_int_disable", "nrf_vpr_int_disable"], [210, 2, 1, "c.nrf_vpr_int_enable", "nrf_vpr_int_enable"], [210, 2, 1, "c.nrf_vpr_int_enable_check", "nrf_vpr_int_enable_check"], [210, 4, 1, "c.nrf_vpr_int_mask_t", "nrf_vpr_int_mask_t"], [210, 2, 1, "c.nrf_vpr_task_address_get", "nrf_vpr_task_address_get"], [210, 4, 1, "c.nrf_vpr_task_t", "nrf_vpr_task_t"], [210, 2, 1, "c.nrf_vpr_task_trigger", "nrf_vpr_task_trigger"], [210, 2, 1, "c.nrf_vpr_trigger_task_get", "nrf_vpr_trigger_task_get"], [210, 2, 1, "c.nrf_vpr_triggered_event_get", "nrf_vpr_triggered_event_get"], [214, 2, 1, "c.nrf_vreqctrl_radio_high_voltage_check", "nrf_vreqctrl_radio_high_voltage_check"], [214, 2, 1, "c.nrf_vreqctrl_radio_high_voltage_set", "nrf_vreqctrl_radio_high_voltage_set"], [216, 4, 1, "c.nrf_wdt_behaviour_mask_t", "nrf_wdt_behaviour_mask_t"], [216, 2, 1, "c.nrf_wdt_behaviour_set", "nrf_wdt_behaviour_set"], [216, 2, 1, "c.nrf_wdt_event_address_get", "nrf_wdt_event_address_get"], [216, 2, 1, "c.nrf_wdt_event_check", "nrf_wdt_event_check"], [216, 2, 1, "c.nrf_wdt_event_clear", "nrf_wdt_event_clear"], [216, 4, 1, "c.nrf_wdt_event_t", "nrf_wdt_event_t"], [216, 2, 1, "c.nrf_wdt_int_disable", "nrf_wdt_int_disable"], [216, 2, 1, "c.nrf_wdt_int_enable", "nrf_wdt_int_enable"], [216, 2, 1, "c.nrf_wdt_int_enable_check", "nrf_wdt_int_enable_check"], [216, 4, 1, "c.nrf_wdt_int_mask_t", "nrf_wdt_int_mask_t"], [216, 2, 1, "c.nrf_wdt_nmi_int_disable", "nrf_wdt_nmi_int_disable"], [216, 2, 1, "c.nrf_wdt_nmi_int_enable", "nrf_wdt_nmi_int_enable"], [216, 2, 1, "c.nrf_wdt_nmi_int_enable_check", "nrf_wdt_nmi_int_enable_check"], [216, 2, 1, "c.nrf_wdt_publish_clear", "nrf_wdt_publish_clear"], [216, 2, 1, "c.nrf_wdt_publish_set", "nrf_wdt_publish_set"], [216, 2, 1, "c.nrf_wdt_reload_request_disable", "nrf_wdt_reload_request_disable"], [216, 2, 1, "c.nrf_wdt_reload_request_enable", "nrf_wdt_reload_request_enable"], [216, 2, 1, "c.nrf_wdt_reload_request_enable_check", "nrf_wdt_reload_request_enable_check"], [216, 2, 1, "c.nrf_wdt_reload_request_set", "nrf_wdt_reload_request_set"], [216, 2, 1, "c.nrf_wdt_reload_value_get", "nrf_wdt_reload_value_get"], [216, 2, 1, "c.nrf_wdt_reload_value_set", "nrf_wdt_reload_value_set"], [216, 2, 1, "c.nrf_wdt_request_status_check", "nrf_wdt_request_status_check"], [216, 2, 1, "c.nrf_wdt_request_status_get", "nrf_wdt_request_status_get"], [216, 4, 1, "c.nrf_wdt_rr_register_mask_t", "nrf_wdt_rr_register_mask_t"], [216, 4, 1, "c.nrf_wdt_rr_register_t", "nrf_wdt_rr_register_t"], [216, 2, 1, "c.nrf_wdt_started_check", "nrf_wdt_started_check"], [216, 2, 1, "c.nrf_wdt_subscribe_clear", "nrf_wdt_subscribe_clear"], [216, 2, 1, "c.nrf_wdt_subscribe_set", "nrf_wdt_subscribe_set"], [216, 2, 1, "c.nrf_wdt_task_address_get", "nrf_wdt_task_address_get"], [216, 2, 1, "c.nrf_wdt_task_stop_enable_set", "nrf_wdt_task_stop_enable_set"], [216, 4, 1, "c.nrf_wdt_task_t", "nrf_wdt_task_t"], [216, 2, 1, "c.nrf_wdt_task_trigger", "nrf_wdt_task_trigger"], [6, 2, 1, "c.nrfx_adc_all_channels_disable", "nrfx_adc_all_channels_disable"], [6, 2, 1, "c.nrfx_adc_buffer_convert", "nrfx_adc_buffer_convert"], [6, 2, 1, "c.nrfx_adc_channel_disable", "nrfx_adc_channel_disable"], [6, 2, 1, "c.nrfx_adc_channel_enable", "nrfx_adc_channel_enable"], [6, 5, 1, "c.nrfx_adc_channel_s", "nrfx_adc_channel_s"], [6, 7, 1, "c.nrfx_adc_channel_t", "nrfx_adc_channel_t"], [6, 5, 1, "c.nrfx_adc_config_t", "nrfx_adc_config_t"], [6, 5, 1, "c.nrfx_adc_done_evt_t", "nrfx_adc_done_evt_t"], [6, 7, 1, "c.nrfx_adc_event_handler_t", "nrfx_adc_event_handler_t"], [6, 5, 1, "c.nrfx_adc_evt_t", "nrfx_adc_evt_t"], [6, 4, 1, "c.nrfx_adc_evt_type_t", "nrfx_adc_evt_type_t"], [6, 2, 1, "c.nrfx_adc_init", "nrfx_adc_init"], [6, 2, 1, "c.nrfx_adc_init_check", "nrfx_adc_init_check"], [6, 2, 1, "c.nrfx_adc_is_busy", "nrfx_adc_is_busy"], [6, 2, 1, "c.nrfx_adc_sample", "nrfx_adc_sample"], [6, 2, 1, "c.nrfx_adc_sample_convert", "nrfx_adc_sample_convert"], [6, 5, 1, "c.nrfx_adc_sample_evt_t", "nrfx_adc_sample_evt_t"], [6, 2, 1, "c.nrfx_adc_start_task_get", "nrfx_adc_start_task_get"], [6, 2, 1, "c.nrfx_adc_uninit", "nrfx_adc_uninit"], [232, 2, 1, "c.nrfx_atomic_flag_clear", "nrfx_atomic_flag_clear"], [232, 2, 1, "c.nrfx_atomic_flag_clear_fetch", "nrfx_atomic_flag_clear_fetch"], [232, 2, 1, "c.nrfx_atomic_flag_set", "nrfx_atomic_flag_set"], [232, 2, 1, "c.nrfx_atomic_flag_set_fetch", "nrfx_atomic_flag_set_fetch"], [232, 7, 1, "c.nrfx_atomic_flag_t", "nrfx_atomic_flag_t"], [240, 0, 1, "c.nrfx_atomic_t", "nrfx_atomic_t"], [232, 2, 1, "c.nrfx_atomic_u32_add", "nrfx_atomic_u32_add"], [232, 2, 1, "c.nrfx_atomic_u32_and", "nrfx_atomic_u32_and"], [232, 2, 1, "c.nrfx_atomic_u32_cmp_exch", "nrfx_atomic_u32_cmp_exch"], [232, 2, 1, "c.nrfx_atomic_u32_fetch_add", "nrfx_atomic_u32_fetch_add"], [232, 2, 1, "c.nrfx_atomic_u32_fetch_and", "nrfx_atomic_u32_fetch_and"], [232, 2, 1, "c.nrfx_atomic_u32_fetch_or", "nrfx_atomic_u32_fetch_or"], [232, 2, 1, "c.nrfx_atomic_u32_fetch_store", "nrfx_atomic_u32_fetch_store"], [232, 2, 1, "c.nrfx_atomic_u32_fetch_sub", "nrfx_atomic_u32_fetch_sub"], [232, 2, 1, "c.nrfx_atomic_u32_fetch_sub_hs", "nrfx_atomic_u32_fetch_sub_hs"], [232, 2, 1, "c.nrfx_atomic_u32_fetch_xor", "nrfx_atomic_u32_fetch_xor"], [232, 2, 1, "c.nrfx_atomic_u32_or", "nrfx_atomic_u32_or"], [232, 2, 1, "c.nrfx_atomic_u32_store", "nrfx_atomic_u32_store"], [232, 2, 1, "c.nrfx_atomic_u32_sub", "nrfx_atomic_u32_sub"], [232, 2, 1, "c.nrfx_atomic_u32_sub_hs", "nrfx_atomic_u32_sub_hs"], [232, 7, 1, "c.nrfx_atomic_u32_t", "nrfx_atomic_u32_t"], [232, 2, 1, "c.nrfx_atomic_u32_xor", "nrfx_atomic_u32_xor"], [10, 7, 1, "c.nrfx_bellboard_event_handler_t", "nrfx_bellboard_event_handler_t"], [10, 2, 1, "c.nrfx_bellboard_init", "nrfx_bellboard_init"], [10, 2, 1, "c.nrfx_bellboard_init_check", "nrfx_bellboard_init_check"], [10, 2, 1, "c.nrfx_bellboard_int_disable", "nrfx_bellboard_int_disable"], [10, 2, 1, "c.nrfx_bellboard_int_enable", "nrfx_bellboard_int_enable"], [10, 5, 1, "c.nrfx_bellboard_t", "nrfx_bellboard_t"], [10, 2, 1, "c.nrfx_bellboard_uninit", "nrfx_bellboard_uninit"], [234, 2, 1, "c.nrfx_bitpos_to_event", "nrfx_bitpos_to_event"], [20, 2, 1, "c.nrfx_clock_calibration_start", "nrfx_clock_calibration_start"], [20, 2, 1, "c.nrfx_clock_calibration_timer_start", "nrfx_clock_calibration_timer_start"], [20, 2, 1, "c.nrfx_clock_calibration_timer_stop", "nrfx_clock_calibration_timer_stop"], [20, 2, 1, "c.nrfx_clock_disable", "nrfx_clock_disable"], [20, 2, 1, "c.nrfx_clock_divider_get", "nrfx_clock_divider_get"], [20, 2, 1, "c.nrfx_clock_divider_set", "nrfx_clock_divider_set"], [20, 2, 1, "c.nrfx_clock_enable", "nrfx_clock_enable"], [20, 2, 1, "c.nrfx_clock_event_address_get", "nrfx_clock_event_address_get"], [20, 7, 1, "c.nrfx_clock_event_handler_t", "nrfx_clock_event_handler_t"], [20, 4, 1, "c.nrfx_clock_evt_type_t", "nrfx_clock_evt_type_t"], [20, 2, 1, "c.nrfx_clock_hfclk_is_running", "nrfx_clock_hfclk_is_running"], [20, 2, 1, "c.nrfx_clock_hfclk_start", "nrfx_clock_hfclk_start"], [20, 2, 1, "c.nrfx_clock_hfclk_stop", "nrfx_clock_hfclk_stop"], [20, 2, 1, "c.nrfx_clock_hfclkaudio_config_get", "nrfx_clock_hfclkaudio_config_get"], [20, 2, 1, "c.nrfx_clock_hfclkaudio_config_set", "nrfx_clock_hfclkaudio_config_set"], [20, 2, 1, "c.nrfx_clock_init", "nrfx_clock_init"], [20, 2, 1, "c.nrfx_clock_init_check", "nrfx_clock_init_check"], [20, 2, 1, "c.nrfx_clock_is_calibrating", "nrfx_clock_is_calibrating"], [20, 2, 1, "c.nrfx_clock_is_running", "nrfx_clock_is_running"], [20, 2, 1, "c.nrfx_clock_lfclk_is_running", "nrfx_clock_lfclk_is_running"], [20, 2, 1, "c.nrfx_clock_lfclk_start", "nrfx_clock_lfclk_start"], [20, 2, 1, "c.nrfx_clock_lfclk_stop", "nrfx_clock_lfclk_stop"], [20, 2, 1, "c.nrfx_clock_start", "nrfx_clock_start"], [20, 2, 1, "c.nrfx_clock_stop", "nrfx_clock_stop"], [20, 2, 1, "c.nrfx_clock_task_address_get", "nrfx_clock_task_address_get"], [20, 2, 1, "c.nrfx_clock_uninit", "nrfx_clock_uninit"], [23, 5, 1, "c.nrfx_comp_config_t", "nrfx_comp_config_t"], [23, 2, 1, "c.nrfx_comp_event_address_get", "nrfx_comp_event_address_get"], [23, 7, 1, "c.nrfx_comp_event_handler_t", "nrfx_comp_event_handler_t"], [23, 4, 1, "c.nrfx_comp_evt_en_mask_t", "nrfx_comp_evt_en_mask_t"], [23, 2, 1, "c.nrfx_comp_init", "nrfx_comp_init"], [23, 2, 1, "c.nrfx_comp_init_check", "nrfx_comp_init_check"], [23, 2, 1, "c.nrfx_comp_pin_select", "nrfx_comp_pin_select"], [23, 2, 1, "c.nrfx_comp_reconfigure", "nrfx_comp_reconfigure"], [23, 2, 1, "c.nrfx_comp_sample", "nrfx_comp_sample"], [23, 4, 1, "c.nrfx_comp_short_mask_t", "nrfx_comp_short_mask_t"], [23, 2, 1, "c.nrfx_comp_start", "nrfx_comp_start"], [23, 2, 1, "c.nrfx_comp_stop", "nrfx_comp_stop"], [23, 2, 1, "c.nrfx_comp_task_address_get", "nrfx_comp_task_address_get"], [23, 2, 1, "c.nrfx_comp_uninit", "nrfx_comp_uninit"], [237, 2, 1, "c.nrfx_coredep_delay_us", "nrfx_coredep_delay_us"], [33, 2, 1, "c.nrfx_dppi_channel_alloc", "nrfx_dppi_channel_alloc"], [33, 2, 1, "c.nrfx_dppi_channel_disable", "nrfx_dppi_channel_disable"], [33, 2, 1, "c.nrfx_dppi_channel_enable", "nrfx_dppi_channel_enable"], [33, 2, 1, "c.nrfx_dppi_channel_free", "nrfx_dppi_channel_free"], [33, 2, 1, "c.nrfx_dppi_channel_include_in_group", "nrfx_dppi_channel_include_in_group"], [33, 2, 1, "c.nrfx_dppi_channel_remove_from_group", "nrfx_dppi_channel_remove_from_group"], [33, 2, 1, "c.nrfx_dppi_free", "nrfx_dppi_free"], [33, 2, 1, "c.nrfx_dppi_group_alloc", "nrfx_dppi_group_alloc"], [33, 2, 1, "c.nrfx_dppi_group_clear", "nrfx_dppi_group_clear"], [33, 2, 1, "c.nrfx_dppi_group_disable", "nrfx_dppi_group_disable"], [33, 2, 1, "c.nrfx_dppi_group_enable", "nrfx_dppi_group_enable"], [33, 2, 1, "c.nrfx_dppi_group_free", "nrfx_dppi_group_free"], [234, 4, 1, "c.nrfx_drv_state_t", "nrfx_drv_state_t"], [39, 2, 1, "c.nrfx_egu_event_address_get", "nrfx_egu_event_address_get"], [39, 7, 1, "c.nrfx_egu_event_handler_t", "nrfx_egu_event_handler_t"], [39, 2, 1, "c.nrfx_egu_init", "nrfx_egu_init"], [39, 2, 1, "c.nrfx_egu_init_check", "nrfx_egu_init_check"], [39, 2, 1, "c.nrfx_egu_int_disable", "nrfx_egu_int_disable"], [39, 2, 1, "c.nrfx_egu_int_enable", "nrfx_egu_int_enable"], [39, 5, 1, "c.nrfx_egu_t", "nrfx_egu_t"], [39, 2, 1, "c.nrfx_egu_task_address_get", "nrfx_egu_task_address_get"], [39, 2, 1, "c.nrfx_egu_trigger", "nrfx_egu_trigger"], [39, 2, 1, "c.nrfx_egu_uninit", "nrfx_egu_uninit"], [238, 4, 1, "c.nrfx_err_t", "nrfx_err_t"], [234, 2, 1, "c.nrfx_event_to_bitpos", "nrfx_event_to_bitpos"], [239, 2, 1, "c.nrfx_flag32_alloc", "nrfx_flag32_alloc"], [239, 2, 1, "c.nrfx_flag32_free", "nrfx_flag32_free"], [239, 2, 1, "c.nrfx_flag32_init", "nrfx_flag32_init"], [239, 2, 1, "c.nrfx_flag32_is_allocated", "nrfx_flag32_is_allocated"], [234, 2, 1, "c.nrfx_get_irq_number", "nrfx_get_irq_number"], [51, 2, 1, "c.nrfx_gpiote_channel_alloc", "nrfx_gpiote_channel_alloc"], [51, 2, 1, "c.nrfx_gpiote_channel_free", "nrfx_gpiote_channel_free"], [51, 2, 1, "c.nrfx_gpiote_channel_get", "nrfx_gpiote_channel_get"], [51, 2, 1, "c.nrfx_gpiote_channels_number_get", "nrfx_gpiote_channels_number_get"], [51, 2, 1, "c.nrfx_gpiote_clr_task_address_get", "nrfx_gpiote_clr_task_address_get"], [51, 2, 1, "c.nrfx_gpiote_clr_task_get", "nrfx_gpiote_clr_task_get"], [51, 2, 1, "c.nrfx_gpiote_clr_task_trigger", "nrfx_gpiote_clr_task_trigger"], [51, 2, 1, "c.nrfx_gpiote_global_callback_set", "nrfx_gpiote_global_callback_set"], [51, 5, 1, "c.nrfx_gpiote_handler_config_t", "nrfx_gpiote_handler_config_t"], [51, 2, 1, "c.nrfx_gpiote_in_event_address_get", "nrfx_gpiote_in_event_address_get"], [51, 2, 1, "c.nrfx_gpiote_in_event_get", "nrfx_gpiote_in_event_get"], [51, 2, 1, "c.nrfx_gpiote_in_is_set", "nrfx_gpiote_in_is_set"], [51, 2, 1, "c.nrfx_gpiote_init", "nrfx_gpiote_init"], [51, 2, 1, "c.nrfx_gpiote_init_check", "nrfx_gpiote_init_check"], [51, 5, 1, "c.nrfx_gpiote_input_config_t", "nrfx_gpiote_input_config_t"], [51, 2, 1, "c.nrfx_gpiote_input_configure", "nrfx_gpiote_input_configure"], [51, 5, 1, "c.nrfx_gpiote_input_pin_config_t", "nrfx_gpiote_input_pin_config_t"], [51, 7, 1, "c.nrfx_gpiote_interrupt_handler_t", "nrfx_gpiote_interrupt_handler_t"], [51, 2, 1, "c.nrfx_gpiote_latency_get", "nrfx_gpiote_latency_get"], [51, 2, 1, "c.nrfx_gpiote_latency_set", "nrfx_gpiote_latency_set"], [51, 2, 1, "c.nrfx_gpiote_out_clear", "nrfx_gpiote_out_clear"], [51, 2, 1, "c.nrfx_gpiote_out_set", "nrfx_gpiote_out_set"], [51, 2, 1, "c.nrfx_gpiote_out_task_address_get", "nrfx_gpiote_out_task_address_get"], [51, 2, 1, "c.nrfx_gpiote_out_task_disable", "nrfx_gpiote_out_task_disable"], [51, 2, 1, "c.nrfx_gpiote_out_task_enable", "nrfx_gpiote_out_task_enable"], [51, 2, 1, "c.nrfx_gpiote_out_task_force", "nrfx_gpiote_out_task_force"], [51, 2, 1, "c.nrfx_gpiote_out_task_get", "nrfx_gpiote_out_task_get"], [51, 2, 1, "c.nrfx_gpiote_out_task_trigger", "nrfx_gpiote_out_task_trigger"], [51, 2, 1, "c.nrfx_gpiote_out_toggle", "nrfx_gpiote_out_toggle"], [51, 5, 1, "c.nrfx_gpiote_output_config_t", "nrfx_gpiote_output_config_t"], [51, 2, 1, "c.nrfx_gpiote_output_configure", "nrfx_gpiote_output_configure"], [51, 7, 1, "c.nrfx_gpiote_pin_t", "nrfx_gpiote_pin_t"], [51, 2, 1, "c.nrfx_gpiote_pin_uninit", "nrfx_gpiote_pin_uninit"], [51, 2, 1, "c.nrfx_gpiote_set_task_address_get", "nrfx_gpiote_set_task_address_get"], [51, 2, 1, "c.nrfx_gpiote_set_task_get", "nrfx_gpiote_set_task_get"], [51, 2, 1, "c.nrfx_gpiote_set_task_trigger", "nrfx_gpiote_set_task_trigger"], [51, 5, 1, "c.nrfx_gpiote_t", "nrfx_gpiote_t"], [51, 5, 1, "c.nrfx_gpiote_task_config_t", "nrfx_gpiote_task_config_t"], [51, 5, 1, "c.nrfx_gpiote_trigger_config_t", "nrfx_gpiote_trigger_config_t"], [51, 2, 1, "c.nrfx_gpiote_trigger_disable", "nrfx_gpiote_trigger_disable"], [51, 2, 1, "c.nrfx_gpiote_trigger_enable", "nrfx_gpiote_trigger_enable"], [51, 4, 1, "c.nrfx_gpiote_trigger_t", "nrfx_gpiote_trigger_t"], [51, 2, 1, "c.nrfx_gpiote_uninit", "nrfx_gpiote_uninit"], [241, 2, 1, "c.nrfx_gppi_channel_alloc", "nrfx_gppi_channel_alloc"], [241, 2, 1, "c.nrfx_gppi_channel_check", "nrfx_gppi_channel_check"], [241, 2, 1, "c.nrfx_gppi_channel_endpoints_clear", "nrfx_gppi_channel_endpoints_clear"], [241, 2, 1, "c.nrfx_gppi_channel_endpoints_setup", "nrfx_gppi_channel_endpoints_setup"], [241, 2, 1, "c.nrfx_gppi_channel_free", "nrfx_gppi_channel_free"], [241, 4, 1, "c.nrfx_gppi_channel_group_t", "nrfx_gppi_channel_group_t"], [241, 2, 1, "c.nrfx_gppi_channels_disable", "nrfx_gppi_channels_disable"], [241, 2, 1, "c.nrfx_gppi_channels_disable_all", "nrfx_gppi_channels_disable_all"], [241, 2, 1, "c.nrfx_gppi_channels_enable", "nrfx_gppi_channels_enable"], [241, 2, 1, "c.nrfx_gppi_channels_group_set", "nrfx_gppi_channels_group_set"], [241, 2, 1, "c.nrfx_gppi_channels_include_in_group", "nrfx_gppi_channels_include_in_group"], [241, 2, 1, "c.nrfx_gppi_channels_remove_from_group", "nrfx_gppi_channels_remove_from_group"], [241, 2, 1, "c.nrfx_gppi_event_endpoint_clear", "nrfx_gppi_event_endpoint_clear"], [241, 2, 1, "c.nrfx_gppi_event_endpoint_setup", "nrfx_gppi_event_endpoint_setup"], [241, 2, 1, "c.nrfx_gppi_fork_endpoint_clear", "nrfx_gppi_fork_endpoint_clear"], [241, 2, 1, "c.nrfx_gppi_fork_endpoint_setup", "nrfx_gppi_fork_endpoint_setup"], [241, 2, 1, "c.nrfx_gppi_group_alloc", "nrfx_gppi_group_alloc"], [241, 2, 1, "c.nrfx_gppi_group_clear", "nrfx_gppi_group_clear"], [241, 2, 1, "c.nrfx_gppi_group_disable", "nrfx_gppi_group_disable"], [241, 2, 1, "c.nrfx_gppi_group_disable_task_get", "nrfx_gppi_group_disable_task_get"], [241, 2, 1, "c.nrfx_gppi_group_enable", "nrfx_gppi_group_enable"], [241, 2, 1, "c.nrfx_gppi_group_enable_task_get", "nrfx_gppi_group_enable_task_get"], [241, 2, 1, "c.nrfx_gppi_group_free", "nrfx_gppi_group_free"], [241, 2, 1, "c.nrfx_gppi_task_address_get", "nrfx_gppi_task_address_get"], [241, 2, 1, "c.nrfx_gppi_task_endpoint_clear", "nrfx_gppi_task_endpoint_clear"], [241, 2, 1, "c.nrfx_gppi_task_endpoint_setup", "nrfx_gppi_task_endpoint_setup"], [241, 4, 1, "c.nrfx_gppi_task_t", "nrfx_gppi_task_t"], [241, 2, 1, "c.nrfx_gppi_task_trigger", "nrfx_gppi_task_trigger"], [55, 2, 1, "c.nrfx_grtc_action_perform", "nrfx_grtc_action_perform"], [55, 4, 1, "c.nrfx_grtc_action_t", "nrfx_grtc_action_t"], [55, 2, 1, "c.nrfx_grtc_active_request_set", "nrfx_grtc_active_request_set"], [55, 2, 1, "c.nrfx_grtc_capture_task_address_get", "nrfx_grtc_capture_task_address_get"], [55, 7, 1, "c.nrfx_grtc_cc_handler_t", "nrfx_grtc_cc_handler_t"], [55, 4, 1, "c.nrfx_grtc_cc_relative_reference_t", "nrfx_grtc_cc_relative_reference_t"], [55, 2, 1, "c.nrfx_grtc_channel_alloc", "nrfx_grtc_channel_alloc"], [55, 2, 1, "c.nrfx_grtc_channel_free", "nrfx_grtc_channel_free"], [55, 5, 1, "c.nrfx_grtc_channel_t", "nrfx_grtc_channel_t"], [55, 2, 1, "c.nrfx_grtc_clock_source_set", "nrfx_grtc_clock_source_set"], [55, 2, 1, "c.nrfx_grtc_event_address_get", "nrfx_grtc_event_address_get"], [55, 2, 1, "c.nrfx_grtc_event_compare_address_get", "nrfx_grtc_event_compare_address_get"], [55, 2, 1, "c.nrfx_grtc_init", "nrfx_grtc_init"], [55, 2, 1, "c.nrfx_grtc_init_check", "nrfx_grtc_init_check"], [55, 2, 1, "c.nrfx_grtc_is_channel_used", "nrfx_grtc_is_channel_used"], [55, 7, 1, "c.nrfx_grtc_rtcomparesync_handler_t", "nrfx_grtc_rtcomparesync_handler_t"], [55, 2, 1, "c.nrfx_grtc_rtcomparesync_int_disable", "nrfx_grtc_rtcomparesync_int_disable"], [55, 2, 1, "c.nrfx_grtc_rtcomparesync_int_enable", "nrfx_grtc_rtcomparesync_int_enable"], [55, 2, 1, "c.nrfx_grtc_rtcounter_cc_absolute_set", "nrfx_grtc_rtcounter_cc_absolute_set"], [55, 2, 1, "c.nrfx_grtc_rtcounter_cc_disable", "nrfx_grtc_rtcounter_cc_disable"], [55, 2, 1, "c.nrfx_grtc_rtcounter_cc_int_disable", "nrfx_grtc_rtcounter_cc_int_disable"], [55, 2, 1, "c.nrfx_grtc_rtcounter_cc_int_enable", "nrfx_grtc_rtcounter_cc_int_enable"], [55, 2, 1, "c.nrfx_grtc_rtcounter_get", "nrfx_grtc_rtcounter_get"], [55, 5, 1, "c.nrfx_grtc_rtcounter_handler_data_t", "nrfx_grtc_rtcounter_handler_data_t"], [55, 5, 1, "c.nrfx_grtc_sleep_config_t", "nrfx_grtc_sleep_config_t"], [55, 2, 1, "c.nrfx_grtc_sleep_configuration_get", "nrfx_grtc_sleep_configuration_get"], [55, 2, 1, "c.nrfx_grtc_sleep_configure", "nrfx_grtc_sleep_configure"], [55, 2, 1, "c.nrfx_grtc_sys_counter_cc_enable_check", "nrfx_grtc_sys_counter_cc_enable_check"], [55, 2, 1, "c.nrfx_grtc_syscounter_capture", "nrfx_grtc_syscounter_capture"], [55, 2, 1, "c.nrfx_grtc_syscounter_cc_absolute_set", "nrfx_grtc_syscounter_cc_absolute_set"], [55, 2, 1, "c.nrfx_grtc_syscounter_cc_disable", "nrfx_grtc_syscounter_cc_disable"], [55, 2, 1, "c.nrfx_grtc_syscounter_cc_int_disable", "nrfx_grtc_syscounter_cc_int_disable"], [55, 2, 1, "c.nrfx_grtc_syscounter_cc_int_enable", "nrfx_grtc_syscounter_cc_int_enable"], [55, 2, 1, "c.nrfx_grtc_syscounter_cc_int_enable_check", "nrfx_grtc_syscounter_cc_int_enable_check"], [55, 2, 1, "c.nrfx_grtc_syscounter_cc_relative_set", "nrfx_grtc_syscounter_cc_relative_set"], [55, 2, 1, "c.nrfx_grtc_syscounter_cc_value_read", "nrfx_grtc_syscounter_cc_value_read"], [55, 2, 1, "c.nrfx_grtc_syscounter_compare_event_check", "nrfx_grtc_syscounter_compare_event_check"], [55, 2, 1, "c.nrfx_grtc_syscounter_get", "nrfx_grtc_syscounter_get"], [55, 2, 1, "c.nrfx_grtc_syscounter_start", "nrfx_grtc_syscounter_start"], [55, 7, 1, "c.nrfx_grtc_syscountervalid_handler_t", "nrfx_grtc_syscountervalid_handler_t"], [55, 2, 1, "c.nrfx_grtc_syscountervalid_int_disable", "nrfx_grtc_syscountervalid_int_disable"], [55, 2, 1, "c.nrfx_grtc_syscountervalid_int_enable", "nrfx_grtc_syscountervalid_int_enable"], [55, 2, 1, "c.nrfx_grtc_task_address_get", "nrfx_grtc_task_address_get"], [55, 2, 1, "c.nrfx_grtc_uninit", "nrfx_grtc_uninit"], [60, 7, 1, "c.nrfx_i2s_buffers_t", "nrfx_i2s_buffers_t"], [60, 5, 1, "c.nrfx_i2s_config_t", "nrfx_i2s_config_t"], [60, 7, 1, "c.nrfx_i2s_data_handler_t", "nrfx_i2s_data_handler_t"], [60, 2, 1, "c.nrfx_i2s_init", "nrfx_i2s_init"], [60, 2, 1, "c.nrfx_i2s_init_check", "nrfx_i2s_init_check"], [60, 2, 1, "c.nrfx_i2s_next_buffers_set", "nrfx_i2s_next_buffers_set"], [60, 2, 1, "c.nrfx_i2s_start", "nrfx_i2s_start"], [60, 2, 1, "c.nrfx_i2s_stop", "nrfx_i2s_stop"], [60, 5, 1, "c.nrfx_i2s_t", "nrfx_i2s_t"], [60, 2, 1, "c.nrfx_i2s_uninit", "nrfx_i2s_uninit"], [243, 2, 1, "c.nrfx_interconnect_apb_domain_get", "nrfx_interconnect_apb_domain_get"], [243, 2, 1, "c.nrfx_interconnect_apb_get", "nrfx_interconnect_apb_get"], [243, 2, 1, "c.nrfx_interconnect_apb_global_num_of_get", "nrfx_interconnect_apb_global_num_of_get"], [243, 2, 1, "c.nrfx_interconnect_apb_main_get", "nrfx_interconnect_apb_main_get"], [243, 5, 1, "c.nrfx_interconnect_apb_t", "nrfx_interconnect_apb_t"], [244, 2, 1, "c.nrfx_interconnect_ipct_domain_get", "nrfx_interconnect_ipct_domain_get"], [244, 2, 1, "c.nrfx_interconnect_ipct_get", "nrfx_interconnect_ipct_get"], [244, 2, 1, "c.nrfx_interconnect_ipct_global_by_idx_get", "nrfx_interconnect_ipct_global_by_idx_get"], [244, 2, 1, "c.nrfx_interconnect_ipct_global_num_of_get", "nrfx_interconnect_ipct_global_num_of_get"], [244, 5, 1, "c.nrfx_interconnect_ipct_t", "nrfx_interconnect_ipct_t"], [66, 2, 1, "c.nrfx_ipc_config_load", "nrfx_ipc_config_load"], [66, 5, 1, "c.nrfx_ipc_config_t", "nrfx_ipc_config_t"], [66, 2, 1, "c.nrfx_ipc_gpmem_get", "nrfx_ipc_gpmem_get"], [66, 2, 1, "c.nrfx_ipc_gpmem_set", "nrfx_ipc_gpmem_set"], [66, 7, 1, "c.nrfx_ipc_handler_t", "nrfx_ipc_handler_t"], [66, 2, 1, "c.nrfx_ipc_init", "nrfx_ipc_init"], [66, 2, 1, "c.nrfx_ipc_init_check", "nrfx_ipc_init_check"], [66, 2, 1, "c.nrfx_ipc_receive_config_set", "nrfx_ipc_receive_config_set"], [66, 2, 1, "c.nrfx_ipc_receive_event_channel_assign", "nrfx_ipc_receive_event_channel_assign"], [66, 2, 1, "c.nrfx_ipc_receive_event_disable", "nrfx_ipc_receive_event_disable"], [66, 2, 1, "c.nrfx_ipc_receive_event_enable", "nrfx_ipc_receive_event_enable"], [66, 2, 1, "c.nrfx_ipc_receive_event_group_disable", "nrfx_ipc_receive_event_group_disable"], [66, 2, 1, "c.nrfx_ipc_receive_event_group_enable", "nrfx_ipc_receive_event_group_enable"], [66, 2, 1, "c.nrfx_ipc_send_config_set", "nrfx_ipc_send_config_set"], [66, 2, 1, "c.nrfx_ipc_send_task_channel_assign", "nrfx_ipc_send_task_channel_assign"], [66, 2, 1, "c.nrfx_ipc_signal", "nrfx_ipc_signal"], [66, 2, 1, "c.nrfx_ipc_uninit", "nrfx_ipc_uninit"], [234, 7, 1, "c.nrfx_irq_handler_t", "nrfx_irq_handler_t"], [234, 2, 1, "c.nrfx_is_in_ram", "nrfx_is_in_ram"], [234, 2, 1, "c.nrfx_is_word_aligned", "nrfx_is_word_aligned"], [73, 5, 1, "c.nrfx_lpcomp_config_t", "nrfx_lpcomp_config_t"], [73, 2, 1, "c.nrfx_lpcomp_disable", "nrfx_lpcomp_disable"], [73, 2, 1, "c.nrfx_lpcomp_enable", "nrfx_lpcomp_enable"], [73, 7, 1, "c.nrfx_lpcomp_event_handler_t", "nrfx_lpcomp_event_handler_t"], [73, 2, 1, "c.nrfx_lpcomp_init", "nrfx_lpcomp_init"], [73, 2, 1, "c.nrfx_lpcomp_init_check", "nrfx_lpcomp_init_check"], [73, 2, 1, "c.nrfx_lpcomp_uninit", "nrfx_lpcomp_uninit"], [92, 4, 1, "c.nrfx_nfct_active_state_t", "nrfx_nfct_active_state_t"], [92, 2, 1, "c.nrfx_nfct_autocolres_disable", "nrfx_nfct_autocolres_disable"], [92, 2, 1, "c.nrfx_nfct_autocolres_enable", "nrfx_nfct_autocolres_enable"], [92, 2, 1, "c.nrfx_nfct_bits_tx", "nrfx_nfct_bits_tx"], [92, 5, 1, "c.nrfx_nfct_config_t", "nrfx_nfct_config_t"], [92, 5, 1, "c.nrfx_nfct_data_desc_t", "nrfx_nfct_data_desc_t"], [92, 2, 1, "c.nrfx_nfct_disable", "nrfx_nfct_disable"], [92, 2, 1, "c.nrfx_nfct_enable", "nrfx_nfct_enable"], [92, 4, 1, "c.nrfx_nfct_error_t", "nrfx_nfct_error_t"], [92, 5, 1, "c.nrfx_nfct_evt_error_t", "nrfx_nfct_evt_error_t"], [92, 4, 1, "c.nrfx_nfct_evt_id_t", "nrfx_nfct_evt_id_t"], [92, 5, 1, "c.nrfx_nfct_evt_rx_frameend_t", "nrfx_nfct_evt_rx_frameend_t"], [92, 5, 1, "c.nrfx_nfct_evt_t", "nrfx_nfct_evt_t"], [92, 5, 1, "c.nrfx_nfct_evt_tx_framestart_t", "nrfx_nfct_evt_tx_framestart_t"], [92, 2, 1, "c.nrfx_nfct_field_check", "nrfx_nfct_field_check"], [92, 7, 1, "c.nrfx_nfct_handler_t", "nrfx_nfct_handler_t"], [92, 2, 1, "c.nrfx_nfct_init", "nrfx_nfct_init"], [92, 2, 1, "c.nrfx_nfct_init_check", "nrfx_nfct_init_check"], [92, 2, 1, "c.nrfx_nfct_init_substate_force", "nrfx_nfct_init_substate_force"], [92, 2, 1, "c.nrfx_nfct_nfcid1_default_bytes_get", "nrfx_nfct_nfcid1_default_bytes_get"], [92, 5, 1, "c.nrfx_nfct_nfcid1_t", "nrfx_nfct_nfcid1_t"], [92, 4, 1, "c.nrfx_nfct_param_id_t", "nrfx_nfct_param_id_t"], [92, 5, 1, "c.nrfx_nfct_param_t", "nrfx_nfct_param_t"], [92, 2, 1, "c.nrfx_nfct_parameter_set", "nrfx_nfct_parameter_set"], [92, 2, 1, "c.nrfx_nfct_rx", "nrfx_nfct_rx"], [92, 2, 1, "c.nrfx_nfct_state_force", "nrfx_nfct_state_force"], [92, 4, 1, "c.nrfx_nfct_state_t", "nrfx_nfct_state_t"], [92, 2, 1, "c.nrfx_nfct_tx", "nrfx_nfct_tx"], [92, 2, 1, "c.nrfx_nfct_uninit", "nrfx_nfct_uninit"], [95, 2, 1, "c.nrfx_nvmc_all_erase", "nrfx_nvmc_all_erase"], [95, 2, 1, "c.nrfx_nvmc_byte_writable_check", "nrfx_nvmc_byte_writable_check"], [95, 2, 1, "c.nrfx_nvmc_byte_write", "nrfx_nvmc_byte_write"], [95, 2, 1, "c.nrfx_nvmc_bytes_write", "nrfx_nvmc_bytes_write"], [95, 2, 1, "c.nrfx_nvmc_flash_page_count_get", "nrfx_nvmc_flash_page_count_get"], [95, 2, 1, "c.nrfx_nvmc_flash_page_size_get", "nrfx_nvmc_flash_page_size_get"], [95, 2, 1, "c.nrfx_nvmc_flash_size_get", "nrfx_nvmc_flash_size_get"], [95, 2, 1, "c.nrfx_nvmc_halfword_writable_check", "nrfx_nvmc_halfword_writable_check"], [95, 2, 1, "c.nrfx_nvmc_halfword_write", "nrfx_nvmc_halfword_write"], [95, 2, 1, "c.nrfx_nvmc_icache_disable", "nrfx_nvmc_icache_disable"], [95, 2, 1, "c.nrfx_nvmc_icache_enable", "nrfx_nvmc_icache_enable"], [95, 2, 1, "c.nrfx_nvmc_otp_halfword_read", "nrfx_nvmc_otp_halfword_read"], [95, 2, 1, "c.nrfx_nvmc_page_erase", "nrfx_nvmc_page_erase"], [95, 2, 1, "c.nrfx_nvmc_page_partial_erase_continue", "nrfx_nvmc_page_partial_erase_continue"], [95, 2, 1, "c.nrfx_nvmc_page_partial_erase_init", "nrfx_nvmc_page_partial_erase_init"], [95, 2, 1, "c.nrfx_nvmc_uicr_erase", "nrfx_nvmc_uicr_erase"], [95, 2, 1, "c.nrfx_nvmc_uicr_word_read", "nrfx_nvmc_uicr_word_read"], [95, 2, 1, "c.nrfx_nvmc_word_writable_check", "nrfx_nvmc_word_writable_check"], [95, 2, 1, "c.nrfx_nvmc_word_write", "nrfx_nvmc_word_write"], [95, 2, 1, "c.nrfx_nvmc_words_write", "nrfx_nvmc_words_write"], [95, 2, 1, "c.nrfx_nvmc_write_done_check", "nrfx_nvmc_write_done_check"], [99, 2, 1, "c.nrfx_pdm_buffer_set", "nrfx_pdm_buffer_set"], [99, 5, 1, "c.nrfx_pdm_config_t", "nrfx_pdm_config_t"], [99, 2, 1, "c.nrfx_pdm_enable_check", "nrfx_pdm_enable_check"], [99, 4, 1, "c.nrfx_pdm_error_t", "nrfx_pdm_error_t"], [99, 7, 1, "c.nrfx_pdm_event_handler_t", "nrfx_pdm_event_handler_t"], [99, 5, 1, "c.nrfx_pdm_evt_t", "nrfx_pdm_evt_t"], [99, 2, 1, "c.nrfx_pdm_init", "nrfx_pdm_init"], [99, 2, 1, "c.nrfx_pdm_init_check", "nrfx_pdm_init_check"], [99, 2, 1, "c.nrfx_pdm_reconfigure", "nrfx_pdm_reconfigure"], [99, 2, 1, "c.nrfx_pdm_start", "nrfx_pdm_start"], [99, 2, 1, "c.nrfx_pdm_stop", "nrfx_pdm_stop"], [99, 2, 1, "c.nrfx_pdm_task_address_get", "nrfx_pdm_task_address_get"], [99, 2, 1, "c.nrfx_pdm_uninit", "nrfx_pdm_uninit"], [103, 5, 1, "c.nrfx_power_config_t", "nrfx_power_config_t"], [103, 2, 1, "c.nrfx_power_constlat_mode_free", "nrfx_power_constlat_mode_free"], [103, 2, 1, "c.nrfx_power_constlat_mode_request", "nrfx_power_constlat_mode_request"], [103, 2, 1, "c.nrfx_power_init", "nrfx_power_init"], [103, 2, 1, "c.nrfx_power_init_check", "nrfx_power_init_check"], [103, 2, 1, "c.nrfx_power_mode_get", "nrfx_power_mode_get"], [103, 4, 1, "c.nrfx_power_mode_t", "nrfx_power_mode_t"], [103, 2, 1, "c.nrfx_power_pof_disable", "nrfx_power_pof_disable"], [103, 2, 1, "c.nrfx_power_pof_enable", "nrfx_power_pof_enable"], [103, 2, 1, "c.nrfx_power_pof_handler_get", "nrfx_power_pof_handler_get"], [103, 2, 1, "c.nrfx_power_pof_init", "nrfx_power_pof_init"], [103, 2, 1, "c.nrfx_power_pof_uninit", "nrfx_power_pof_uninit"], [103, 5, 1, "c.nrfx_power_pofwarn_config_t", "nrfx_power_pofwarn_config_t"], [103, 7, 1, "c.nrfx_power_pofwarn_event_handler_t", "nrfx_power_pofwarn_event_handler_t"], [103, 7, 1, "c.nrfx_power_sleep_event_handler_t", "nrfx_power_sleep_event_handler_t"], [103, 4, 1, "c.nrfx_power_sleep_evt_t", "nrfx_power_sleep_evt_t"], [103, 5, 1, "c.nrfx_power_sleepevt_config_t", "nrfx_power_sleepevt_config_t"], [103, 2, 1, "c.nrfx_power_sleepevt_disable", "nrfx_power_sleepevt_disable"], [103, 2, 1, "c.nrfx_power_sleepevt_enable", "nrfx_power_sleepevt_enable"], [103, 2, 1, "c.nrfx_power_sleepevt_init", "nrfx_power_sleepevt_init"], [103, 2, 1, "c.nrfx_power_sleepevt_uninit", "nrfx_power_sleepevt_uninit"], [103, 2, 1, "c.nrfx_power_uninit", "nrfx_power_uninit"], [103, 7, 1, "c.nrfx_power_usb_event_handler_t", "nrfx_power_usb_event_handler_t"], [103, 4, 1, "c.nrfx_power_usb_evt_t", "nrfx_power_usb_evt_t"], [103, 2, 1, "c.nrfx_power_usb_handler_get", "nrfx_power_usb_handler_get"], [103, 4, 1, "c.nrfx_power_usb_state_t", "nrfx_power_usb_state_t"], [103, 5, 1, "c.nrfx_power_usbevt_config_t", "nrfx_power_usbevt_config_t"], [103, 2, 1, "c.nrfx_power_usbevt_disable", "nrfx_power_usbevt_disable"], [103, 2, 1, "c.nrfx_power_usbevt_enable", "nrfx_power_usbevt_enable"], [103, 2, 1, "c.nrfx_power_usbevt_init", "nrfx_power_usbevt_init"], [103, 2, 1, "c.nrfx_power_usbevt_uninit", "nrfx_power_usbevt_uninit"], [103, 2, 1, "c.nrfx_power_usbstatus_get", "nrfx_power_usbstatus_get"], [106, 2, 1, "c.nrfx_ppi_channel_alloc", "nrfx_ppi_channel_alloc"], [106, 2, 1, "c.nrfx_ppi_channel_assign", "nrfx_ppi_channel_assign"], [106, 2, 1, "c.nrfx_ppi_channel_disable", "nrfx_ppi_channel_disable"], [106, 2, 1, "c.nrfx_ppi_channel_enable", "nrfx_ppi_channel_enable"], [106, 2, 1, "c.nrfx_ppi_channel_fork_assign", "nrfx_ppi_channel_fork_assign"], [106, 2, 1, "c.nrfx_ppi_channel_free", "nrfx_ppi_channel_free"], [106, 2, 1, "c.nrfx_ppi_channel_include_in_group", "nrfx_ppi_channel_include_in_group"], [106, 2, 1, "c.nrfx_ppi_channel_remove_from_group", "nrfx_ppi_channel_remove_from_group"], [106, 2, 1, "c.nrfx_ppi_channel_to_mask", "nrfx_ppi_channel_to_mask"], [106, 2, 1, "c.nrfx_ppi_channels_include_in_group", "nrfx_ppi_channels_include_in_group"], [106, 2, 1, "c.nrfx_ppi_channels_remove_from_group", "nrfx_ppi_channels_remove_from_group"], [106, 2, 1, "c.nrfx_ppi_free_all", "nrfx_ppi_free_all"], [106, 2, 1, "c.nrfx_ppi_group_alloc", "nrfx_ppi_group_alloc"], [106, 2, 1, "c.nrfx_ppi_group_clear", "nrfx_ppi_group_clear"], [106, 2, 1, "c.nrfx_ppi_group_disable", "nrfx_ppi_group_disable"], [106, 2, 1, "c.nrfx_ppi_group_enable", "nrfx_ppi_group_enable"], [106, 2, 1, "c.nrfx_ppi_group_free", "nrfx_ppi_group_free"], [106, 2, 1, "c.nrfx_ppi_task_address_get", "nrfx_ppi_task_address_get"], [106, 2, 1, "c.nrfx_ppi_task_group_disable_address_get", "nrfx_ppi_task_group_disable_address_get"], [106, 2, 1, "c.nrfx_ppi_task_group_enable_address_get", "nrfx_ppi_task_group_enable_address_get"], [246, 2, 1, "c.nrfx_prs_acquire", "nrfx_prs_acquire"], [246, 2, 1, "c.nrfx_prs_release", "nrfx_prs_release"], [111, 2, 1, "c.nrfx_pwm_complex_playback", "nrfx_pwm_complex_playback"], [111, 5, 1, "c.nrfx_pwm_config_t", "nrfx_pwm_config_t"], [111, 2, 1, "c.nrfx_pwm_event_address_get", "nrfx_pwm_event_address_get"], [111, 4, 1, "c.nrfx_pwm_evt_type_t", "nrfx_pwm_evt_type_t"], [111, 4, 1, "c.nrfx_pwm_flag_t", "nrfx_pwm_flag_t"], [111, 7, 1, "c.nrfx_pwm_handler_t", "nrfx_pwm_handler_t"], [111, 2, 1, "c.nrfx_pwm_init", "nrfx_pwm_init"], [111, 2, 1, "c.nrfx_pwm_init_check", "nrfx_pwm_init_check"], [111, 2, 1, "c.nrfx_pwm_reconfigure", "nrfx_pwm_reconfigure"], [111, 2, 1, "c.nrfx_pwm_sequence_update", "nrfx_pwm_sequence_update"], [111, 2, 1, "c.nrfx_pwm_simple_playback", "nrfx_pwm_simple_playback"], [111, 2, 1, "c.nrfx_pwm_step", "nrfx_pwm_step"], [111, 2, 1, "c.nrfx_pwm_stop", "nrfx_pwm_stop"], [111, 2, 1, "c.nrfx_pwm_stopped_check", "nrfx_pwm_stopped_check"], [111, 5, 1, "c.nrfx_pwm_t", "nrfx_pwm_t"], [111, 2, 1, "c.nrfx_pwm_task_address_get", "nrfx_pwm_task_address_get"], [111, 2, 1, "c.nrfx_pwm_uninit", "nrfx_pwm_uninit"], [115, 2, 1, "c.nrfx_qdec_accumulators_read", "nrfx_qdec_accumulators_read"], [115, 5, 1, "c.nrfx_qdec_config_t", "nrfx_qdec_config_t"], [115, 2, 1, "c.nrfx_qdec_disable", "nrfx_qdec_disable"], [115, 2, 1, "c.nrfx_qdec_enable", "nrfx_qdec_enable"], [115, 2, 1, "c.nrfx_qdec_event_address_get", "nrfx_qdec_event_address_get"], [115, 7, 1, "c.nrfx_qdec_event_handler_t", "nrfx_qdec_event_handler_t"], [115, 5, 1, "c.nrfx_qdec_event_t", "nrfx_qdec_event_t"], [115, 2, 1, "c.nrfx_qdec_init", "nrfx_qdec_init"], [115, 2, 1, "c.nrfx_qdec_init_check", "nrfx_qdec_init_check"], [115, 2, 1, "c.nrfx_qdec_reconfigure", "nrfx_qdec_reconfigure"], [115, 5, 1, "c.nrfx_qdec_report_data_evt_t", "nrfx_qdec_report_data_evt_t"], [115, 5, 1, "c.nrfx_qdec_sample_data_evt_t", "nrfx_qdec_sample_data_evt_t"], [115, 5, 1, "c.nrfx_qdec_t", "nrfx_qdec_t"], [115, 2, 1, "c.nrfx_qdec_task_address_get", "nrfx_qdec_task_address_get"], [115, 2, 1, "c.nrfx_qdec_uninit", "nrfx_qdec_uninit"], [119, 2, 1, "c.nrfx_qspi_activate", "nrfx_qspi_activate"], [119, 2, 1, "c.nrfx_qspi_chip_erase", "nrfx_qspi_chip_erase"], [119, 2, 1, "c.nrfx_qspi_cinstr_quick_send", "nrfx_qspi_cinstr_quick_send"], [119, 2, 1, "c.nrfx_qspi_cinstr_xfer", "nrfx_qspi_cinstr_xfer"], [119, 5, 1, "c.nrfx_qspi_config_t", "nrfx_qspi_config_t"], [119, 2, 1, "c.nrfx_qspi_deactivate", "nrfx_qspi_deactivate"], [119, 2, 1, "c.nrfx_qspi_dma_encrypt", "nrfx_qspi_dma_encrypt"], [119, 2, 1, "c.nrfx_qspi_erase", "nrfx_qspi_erase"], [119, 2, 1, "c.nrfx_qspi_event_extended_get", "nrfx_qspi_event_extended_get"], [119, 5, 1, "c.nrfx_qspi_evt_ext_erase_t", "nrfx_qspi_evt_ext_erase_t"], [119, 5, 1, "c.nrfx_qspi_evt_ext_t", "nrfx_qspi_evt_ext_t"], [119, 4, 1, "c.nrfx_qspi_evt_ext_type_t", "nrfx_qspi_evt_ext_type_t"], [119, 5, 1, "c.nrfx_qspi_evt_ext_xfer_t", "nrfx_qspi_evt_ext_xfer_t"], [119, 4, 1, "c.nrfx_qspi_evt_t", "nrfx_qspi_evt_t"], [119, 7, 1, "c.nrfx_qspi_handler_t", "nrfx_qspi_handler_t"], [119, 2, 1, "c.nrfx_qspi_init", "nrfx_qspi_init"], [119, 2, 1, "c.nrfx_qspi_init_check", "nrfx_qspi_init_check"], [119, 2, 1, "c.nrfx_qspi_lfm_start", "nrfx_qspi_lfm_start"], [119, 2, 1, "c.nrfx_qspi_lfm_xfer", "nrfx_qspi_lfm_xfer"], [119, 2, 1, "c.nrfx_qspi_mem_busy_check", "nrfx_qspi_mem_busy_check"], [119, 2, 1, "c.nrfx_qspi_read", "nrfx_qspi_read"], [119, 2, 1, "c.nrfx_qspi_reconfigure", "nrfx_qspi_reconfigure"], [119, 2, 1, "c.nrfx_qspi_timeout_signal", "nrfx_qspi_timeout_signal"], [119, 2, 1, "c.nrfx_qspi_uninit", "nrfx_qspi_uninit"], [119, 2, 1, "c.nrfx_qspi_write", "nrfx_qspi_write"], [119, 2, 1, "c.nrfx_qspi_xfer_buffered_check", "nrfx_qspi_xfer_buffered_check"], [119, 2, 1, "c.nrfx_qspi_xip_encrypt", "nrfx_qspi_xip_encrypt"], [247, 2, 1, "c.nrfx_ram_ctrl_power_enable_set", "nrfx_ram_ctrl_power_enable_set"], [247, 2, 1, "c.nrfx_ram_ctrl_retention_enable_set", "nrfx_ram_ctrl_retention_enable_set"], [247, 2, 1, "c.nrfx_ram_ctrl_section_power_mask_enable_set", "nrfx_ram_ctrl_section_power_mask_enable_set"], [247, 2, 1, "c.nrfx_ram_ctrl_section_retention_mask_enable_set", "nrfx_ram_ctrl_section_retention_mask_enable_set"], [248, 2, 1, "c.nrfx_reset_reason_clear", "nrfx_reset_reason_clear"], [248, 2, 1, "c.nrfx_reset_reason_get", "nrfx_reset_reason_get"], [248, 4, 1, "c.nrfx_reset_reason_mask_t", "nrfx_reset_reason_mask_t"], [130, 5, 1, "c.nrfx_rng_config_t", "nrfx_rng_config_t"], [130, 7, 1, "c.nrfx_rng_evt_handler_t", "nrfx_rng_evt_handler_t"], [130, 2, 1, "c.nrfx_rng_init", "nrfx_rng_init"], [130, 2, 1, "c.nrfx_rng_init_check", "nrfx_rng_init_check"], [130, 2, 1, "c.nrfx_rng_start", "nrfx_rng_start"], [130, 2, 1, "c.nrfx_rng_stop", "nrfx_rng_stop"], [130, 2, 1, "c.nrfx_rng_uninit", "nrfx_rng_uninit"], [133, 2, 1, "c.nrfx_rramc_all_erase", "nrfx_rramc_all_erase"], [133, 2, 1, "c.nrfx_rramc_buffer_read", "nrfx_rramc_buffer_read"], [133, 2, 1, "c.nrfx_rramc_byte_read", "nrfx_rramc_byte_read"], [133, 2, 1, "c.nrfx_rramc_byte_write", "nrfx_rramc_byte_write"], [133, 2, 1, "c.nrfx_rramc_bytes_write", "nrfx_rramc_bytes_write"], [133, 5, 1, "c.nrfx_rramc_config_t", "nrfx_rramc_config_t"], [133, 7, 1, "c.nrfx_rramc_evt_handler_t", "nrfx_rramc_evt_handler_t"], [133, 2, 1, "c.nrfx_rramc_init", "nrfx_rramc_init"], [133, 2, 1, "c.nrfx_rramc_memory_size_get", "nrfx_rramc_memory_size_get"], [133, 2, 1, "c.nrfx_rramc_otp_word_read", "nrfx_rramc_otp_word_read"], [133, 2, 1, "c.nrfx_rramc_otp_word_write", "nrfx_rramc_otp_word_write"], [133, 2, 1, "c.nrfx_rramc_ready_check", "nrfx_rramc_ready_check"], [133, 2, 1, "c.nrfx_rramc_reconfigure", "nrfx_rramc_reconfigure"], [133, 2, 1, "c.nrfx_rramc_uninit", "nrfx_rramc_uninit"], [133, 2, 1, "c.nrfx_rramc_word_read", "nrfx_rramc_word_read"], [133, 2, 1, "c.nrfx_rramc_word_write", "nrfx_rramc_word_write"], [133, 2, 1, "c.nrfx_rramc_words_write", "nrfx_rramc_words_write"], [133, 2, 1, "c.nrfx_rramc_write_enable_check", "nrfx_rramc_write_enable_check"], [133, 2, 1, "c.nrfx_rramc_write_enable_set", "nrfx_rramc_write_enable_set"], [137, 2, 1, "c.nrfx_rtc_cc_disable", "nrfx_rtc_cc_disable"], [137, 2, 1, "c.nrfx_rtc_cc_set", "nrfx_rtc_cc_set"], [137, 5, 1, "c.nrfx_rtc_config_t", "nrfx_rtc_config_t"], [137, 2, 1, "c.nrfx_rtc_counter_clear", "nrfx_rtc_counter_clear"], [137, 2, 1, "c.nrfx_rtc_counter_get", "nrfx_rtc_counter_get"], [137, 2, 1, "c.nrfx_rtc_disable", "nrfx_rtc_disable"], [137, 2, 1, "c.nrfx_rtc_enable", "nrfx_rtc_enable"], [137, 2, 1, "c.nrfx_rtc_event_address_get", "nrfx_rtc_event_address_get"], [137, 7, 1, "c.nrfx_rtc_handler_t", "nrfx_rtc_handler_t"], [137, 2, 1, "c.nrfx_rtc_init", "nrfx_rtc_init"], [137, 2, 1, "c.nrfx_rtc_init_check", "nrfx_rtc_init_check"], [137, 2, 1, "c.nrfx_rtc_int_disable", "nrfx_rtc_int_disable"], [137, 2, 1, "c.nrfx_rtc_int_enable", "nrfx_rtc_int_enable"], [137, 4, 1, "c.nrfx_rtc_int_type_t", "nrfx_rtc_int_type_t"], [137, 2, 1, "c.nrfx_rtc_max_ticks_get", "nrfx_rtc_max_ticks_get"], [137, 2, 1, "c.nrfx_rtc_overflow_disable", "nrfx_rtc_overflow_disable"], [137, 2, 1, "c.nrfx_rtc_overflow_enable", "nrfx_rtc_overflow_enable"], [137, 5, 1, "c.nrfx_rtc_t", "nrfx_rtc_t"], [137, 2, 1, "c.nrfx_rtc_task_address_get", "nrfx_rtc_task_address_get"], [137, 2, 1, "c.nrfx_rtc_tick_disable", "nrfx_rtc_tick_disable"], [137, 2, 1, "c.nrfx_rtc_tick_enable", "nrfx_rtc_tick_enable"], [137, 2, 1, "c.nrfx_rtc_uninit", "nrfx_rtc_uninit"], [141, 2, 1, "c.nrfx_saadc_abort", "nrfx_saadc_abort"], [141, 5, 1, "c.nrfx_saadc_adv_config_t", "nrfx_saadc_adv_config_t"], [141, 2, 1, "c.nrfx_saadc_advanced_mode_set", "nrfx_saadc_advanced_mode_set"], [141, 2, 1, "c.nrfx_saadc_buffer_set", "nrfx_saadc_buffer_set"], [141, 2, 1, "c.nrfx_saadc_channel_config", "nrfx_saadc_channel_config"], [141, 5, 1, "c.nrfx_saadc_channel_t", "nrfx_saadc_channel_t"], [141, 2, 1, "c.nrfx_saadc_channels_config", "nrfx_saadc_channels_config"], [141, 2, 1, "c.nrfx_saadc_channels_configured_get", "nrfx_saadc_channels_configured_get"], [141, 2, 1, "c.nrfx_saadc_channels_deconfig", "nrfx_saadc_channels_deconfig"], [141, 5, 1, "c.nrfx_saadc_done_evt_t", "nrfx_saadc_done_evt_t"], [141, 7, 1, "c.nrfx_saadc_event_handler_t", "nrfx_saadc_event_handler_t"], [141, 5, 1, "c.nrfx_saadc_evt_t", "nrfx_saadc_evt_t"], [141, 4, 1, "c.nrfx_saadc_evt_type_t", "nrfx_saadc_evt_type_t"], [141, 2, 1, "c.nrfx_saadc_init", "nrfx_saadc_init"], [141, 2, 1, "c.nrfx_saadc_init_check", "nrfx_saadc_init_check"], [141, 5, 1, "c.nrfx_saadc_limit_evt_t", "nrfx_saadc_limit_evt_t"], [141, 2, 1, "c.nrfx_saadc_limits_set", "nrfx_saadc_limits_set"], [141, 2, 1, "c.nrfx_saadc_mode_trigger", "nrfx_saadc_mode_trigger"], [141, 2, 1, "c.nrfx_saadc_offset_calibrate", "nrfx_saadc_offset_calibrate"], [141, 2, 1, "c.nrfx_saadc_simple_mode_set", "nrfx_saadc_simple_mode_set"], [141, 2, 1, "c.nrfx_saadc_uninit", "nrfx_saadc_uninit"], [145, 2, 1, "c.nrfx_spi_abort", "nrfx_spi_abort"], [145, 5, 1, "c.nrfx_spi_config_t", "nrfx_spi_config_t"], [145, 7, 1, "c.nrfx_spi_evt_handler_t", "nrfx_spi_evt_handler_t"], [145, 5, 1, "c.nrfx_spi_evt_t", "nrfx_spi_evt_t"], [145, 4, 1, "c.nrfx_spi_evt_type_t", "nrfx_spi_evt_type_t"], [145, 2, 1, "c.nrfx_spi_init", "nrfx_spi_init"], [145, 2, 1, "c.nrfx_spi_init_check", "nrfx_spi_init_check"], [145, 2, 1, "c.nrfx_spi_reconfigure", "nrfx_spi_reconfigure"], [145, 5, 1, "c.nrfx_spi_t", "nrfx_spi_t"], [145, 2, 1, "c.nrfx_spi_uninit", "nrfx_spi_uninit"], [145, 2, 1, "c.nrfx_spi_xfer", "nrfx_spi_xfer"], [145, 5, 1, "c.nrfx_spi_xfer_desc_t", "nrfx_spi_xfer_desc_t"], [148, 2, 1, "c.nrfx_spim_abort", "nrfx_spim_abort"], [148, 5, 1, "c.nrfx_spim_config_t", "nrfx_spim_config_t"], [148, 2, 1, "c.nrfx_spim_end_event_address_get", "nrfx_spim_end_event_address_get"], [148, 7, 1, "c.nrfx_spim_evt_handler_t", "nrfx_spim_evt_handler_t"], [148, 5, 1, "c.nrfx_spim_evt_t", "nrfx_spim_evt_t"], [148, 4, 1, "c.nrfx_spim_evt_type_t", "nrfx_spim_evt_type_t"], [148, 2, 1, "c.nrfx_spim_init", "nrfx_spim_init"], [148, 2, 1, "c.nrfx_spim_init_check", "nrfx_spim_init_check"], [148, 2, 1, "c.nrfx_spim_reconfigure", "nrfx_spim_reconfigure"], [148, 2, 1, "c.nrfx_spim_start_task_address_get", "nrfx_spim_start_task_address_get"], [148, 5, 1, "c.nrfx_spim_t", "nrfx_spim_t"], [148, 2, 1, "c.nrfx_spim_uninit", "nrfx_spim_uninit"], [148, 2, 1, "c.nrfx_spim_xfer", "nrfx_spim_xfer"], [148, 2, 1, "c.nrfx_spim_xfer_dcx", "nrfx_spim_xfer_dcx"], [148, 7, 1, "c.nrfx_spim_xfer_desc_t", "nrfx_spim_xfer_desc_t"], [152, 2, 1, "c.nrfx_spis_buffers_set", "nrfx_spis_buffers_set"], [152, 5, 1, "c.nrfx_spis_config_t", "nrfx_spis_config_t"], [152, 7, 1, "c.nrfx_spis_event_handler_t", "nrfx_spis_event_handler_t"], [152, 5, 1, "c.nrfx_spis_evt_t", "nrfx_spis_evt_t"], [152, 4, 1, "c.nrfx_spis_evt_type_t", "nrfx_spis_evt_type_t"], [152, 2, 1, "c.nrfx_spis_init", "nrfx_spis_init"], [152, 2, 1, "c.nrfx_spis_init_check", "nrfx_spis_init_check"], [152, 2, 1, "c.nrfx_spis_reconfigure", "nrfx_spis_reconfigure"], [152, 5, 1, "c.nrfx_spis_t", "nrfx_spis_t"], [152, 2, 1, "c.nrfx_spis_uninit", "nrfx_spis_uninit"], [159, 2, 1, "c.nrfx_systick_delay_ms", "nrfx_systick_delay_ms"], [159, 2, 1, "c.nrfx_systick_delay_ticks", "nrfx_systick_delay_ticks"], [159, 2, 1, "c.nrfx_systick_delay_us", "nrfx_systick_delay_us"], [159, 2, 1, "c.nrfx_systick_get", "nrfx_systick_get"], [159, 2, 1, "c.nrfx_systick_init", "nrfx_systick_init"], [159, 5, 1, "c.nrfx_systick_state_t", "nrfx_systick_state_t"], [159, 2, 1, "c.nrfx_systick_test", "nrfx_systick_test"], [164, 5, 1, "c.nrfx_tbm_config_t", "nrfx_tbm_config_t"], [164, 2, 1, "c.nrfx_tbm_count_get", "nrfx_tbm_count_get"], [164, 7, 1, "c.nrfx_tbm_event_handler_t", "nrfx_tbm_event_handler_t"], [164, 2, 1, "c.nrfx_tbm_init", "nrfx_tbm_init"], [164, 2, 1, "c.nrfx_tbm_init_check", "nrfx_tbm_init_check"], [164, 2, 1, "c.nrfx_tbm_start", "nrfx_tbm_start"], [164, 2, 1, "c.nrfx_tbm_stop", "nrfx_tbm_stop"], [164, 2, 1, "c.nrfx_tbm_uninit", "nrfx_tbm_uninit"], [170, 2, 1, "c.nrfx_temp_calculate", "nrfx_temp_calculate"], [170, 5, 1, "c.nrfx_temp_config_t", "nrfx_temp_config_t"], [170, 7, 1, "c.nrfx_temp_data_handler_t", "nrfx_temp_data_handler_t"], [170, 2, 1, "c.nrfx_temp_init", "nrfx_temp_init"], [170, 2, 1, "c.nrfx_temp_init_check", "nrfx_temp_init_check"], [170, 2, 1, "c.nrfx_temp_measure", "nrfx_temp_measure"], [170, 2, 1, "c.nrfx_temp_result_get", "nrfx_temp_result_get"], [170, 2, 1, "c.nrfx_temp_uninit", "nrfx_temp_uninit"], [174, 2, 1, "c.nrfx_timer_capture", "nrfx_timer_capture"], [174, 2, 1, "c.nrfx_timer_capture_get", "nrfx_timer_capture_get"], [174, 2, 1, "c.nrfx_timer_capture_task_address_get", "nrfx_timer_capture_task_address_get"], [174, 2, 1, "c.nrfx_timer_clear", "nrfx_timer_clear"], [174, 2, 1, "c.nrfx_timer_compare", "nrfx_timer_compare"], [174, 2, 1, "c.nrfx_timer_compare_event_address_get", "nrfx_timer_compare_event_address_get"], [174, 2, 1, "c.nrfx_timer_compare_int_disable", "nrfx_timer_compare_int_disable"], [174, 2, 1, "c.nrfx_timer_compare_int_enable", "nrfx_timer_compare_int_enable"], [174, 5, 1, "c.nrfx_timer_config_t", "nrfx_timer_config_t"], [174, 2, 1, "c.nrfx_timer_disable", "nrfx_timer_disable"], [174, 2, 1, "c.nrfx_timer_enable", "nrfx_timer_enable"], [174, 2, 1, "c.nrfx_timer_event_address_get", "nrfx_timer_event_address_get"], [174, 7, 1, "c.nrfx_timer_event_handler_t", "nrfx_timer_event_handler_t"], [174, 2, 1, "c.nrfx_timer_extended_compare", "nrfx_timer_extended_compare"], [174, 2, 1, "c.nrfx_timer_increment", "nrfx_timer_increment"], [174, 2, 1, "c.nrfx_timer_init", "nrfx_timer_init"], [174, 2, 1, "c.nrfx_timer_init_check", "nrfx_timer_init_check"], [174, 2, 1, "c.nrfx_timer_is_enabled", "nrfx_timer_is_enabled"], [174, 2, 1, "c.nrfx_timer_ms_to_ticks", "nrfx_timer_ms_to_ticks"], [174, 2, 1, "c.nrfx_timer_pause", "nrfx_timer_pause"], [174, 2, 1, "c.nrfx_timer_reconfigure", "nrfx_timer_reconfigure"], [174, 2, 1, "c.nrfx_timer_resume", "nrfx_timer_resume"], [174, 5, 1, "c.nrfx_timer_t", "nrfx_timer_t"], [174, 2, 1, "c.nrfx_timer_task_address_get", "nrfx_timer_task_address_get"], [174, 2, 1, "c.nrfx_timer_uninit", "nrfx_timer_uninit"], [174, 2, 1, "c.nrfx_timer_us_to_ticks", "nrfx_timer_us_to_ticks"], [178, 2, 1, "c.nrfx_twi_bus_recover", "nrfx_twi_bus_recover"], [178, 5, 1, "c.nrfx_twi_config_t", "nrfx_twi_config_t"], [178, 2, 1, "c.nrfx_twi_data_count_get", "nrfx_twi_data_count_get"], [178, 2, 1, "c.nrfx_twi_disable", "nrfx_twi_disable"], [178, 2, 1, "c.nrfx_twi_enable", "nrfx_twi_enable"], [178, 7, 1, "c.nrfx_twi_evt_handler_t", "nrfx_twi_evt_handler_t"], [178, 5, 1, "c.nrfx_twi_evt_t", "nrfx_twi_evt_t"], [178, 4, 1, "c.nrfx_twi_evt_type_t", "nrfx_twi_evt_type_t"], [178, 2, 1, "c.nrfx_twi_init", "nrfx_twi_init"], [178, 2, 1, "c.nrfx_twi_init_check", "nrfx_twi_init_check"], [178, 2, 1, "c.nrfx_twi_is_busy", "nrfx_twi_is_busy"], [178, 2, 1, "c.nrfx_twi_reconfigure", "nrfx_twi_reconfigure"], [178, 2, 1, "c.nrfx_twi_stopped_event_get", "nrfx_twi_stopped_event_get"], [178, 5, 1, "c.nrfx_twi_t", "nrfx_twi_t"], [178, 2, 1, "c.nrfx_twi_uninit", "nrfx_twi_uninit"], [178, 2, 1, "c.nrfx_twi_xfer", "nrfx_twi_xfer"], [178, 5, 1, "c.nrfx_twi_xfer_desc_t", "nrfx_twi_xfer_desc_t"], [178, 4, 1, "c.nrfx_twi_xfer_type_t", "nrfx_twi_xfer_type_t"], [181, 2, 1, "c.nrfx_twim_bus_recover", "nrfx_twim_bus_recover"], [181, 5, 1, "c.nrfx_twim_config_t", "nrfx_twim_config_t"], [181, 2, 1, "c.nrfx_twim_disable", "nrfx_twim_disable"], [181, 2, 1, "c.nrfx_twim_enable", "nrfx_twim_enable"], [181, 7, 1, "c.nrfx_twim_evt_handler_t", "nrfx_twim_evt_handler_t"], [181, 5, 1, "c.nrfx_twim_evt_t", "nrfx_twim_evt_t"], [181, 4, 1, "c.nrfx_twim_evt_type_t", "nrfx_twim_evt_type_t"], [181, 2, 1, "c.nrfx_twim_init", "nrfx_twim_init"], [181, 2, 1, "c.nrfx_twim_init_check", "nrfx_twim_init_check"], [181, 2, 1, "c.nrfx_twim_is_busy", "nrfx_twim_is_busy"], [181, 2, 1, "c.nrfx_twim_reconfigure", "nrfx_twim_reconfigure"], [181, 2, 1, "c.nrfx_twim_start_task_address_get", "nrfx_twim_start_task_address_get"], [181, 2, 1, "c.nrfx_twim_stopped_event_address_get", "nrfx_twim_stopped_event_address_get"], [181, 5, 1, "c.nrfx_twim_t", "nrfx_twim_t"], [181, 2, 1, "c.nrfx_twim_uninit", "nrfx_twim_uninit"], [181, 2, 1, "c.nrfx_twim_xfer", "nrfx_twim_xfer"], [181, 5, 1, "c.nrfx_twim_xfer_desc_t", "nrfx_twim_xfer_desc_t"], [181, 4, 1, "c.nrfx_twim_xfer_type_t", "nrfx_twim_xfer_type_t"], [185, 5, 1, "c.nrfx_twis_config_t", "nrfx_twis_config_t"], [185, 2, 1, "c.nrfx_twis_disable", "nrfx_twis_disable"], [185, 2, 1, "c.nrfx_twis_enable", "nrfx_twis_enable"], [185, 2, 1, "c.nrfx_twis_error_get_and_clear", "nrfx_twis_error_get_and_clear"], [185, 4, 1, "c.nrfx_twis_error_t", "nrfx_twis_error_t"], [185, 7, 1, "c.nrfx_twis_event_handler_t", "nrfx_twis_event_handler_t"], [185, 5, 1, "c.nrfx_twis_evt_t", "nrfx_twis_evt_t"], [185, 4, 1, "c.nrfx_twis_evt_type_t", "nrfx_twis_evt_type_t"], [185, 2, 1, "c.nrfx_twis_init", "nrfx_twis_init"], [185, 2, 1, "c.nrfx_twis_init_check", "nrfx_twis_init_check"], [185, 2, 1, "c.nrfx_twis_is_busy", "nrfx_twis_is_busy"], [185, 2, 1, "c.nrfx_twis_is_pending_rx", "nrfx_twis_is_pending_rx"], [185, 2, 1, "c.nrfx_twis_is_pending_tx", "nrfx_twis_is_pending_tx"], [185, 2, 1, "c.nrfx_twis_is_waiting_rx_buff", "nrfx_twis_is_waiting_rx_buff"], [185, 2, 1, "c.nrfx_twis_is_waiting_tx_buff", "nrfx_twis_is_waiting_tx_buff"], [185, 2, 1, "c.nrfx_twis_reconfigure", "nrfx_twis_reconfigure"], [185, 2, 1, "c.nrfx_twis_rx_amount", "nrfx_twis_rx_amount"], [185, 2, 1, "c.nrfx_twis_rx_prepare", "nrfx_twis_rx_prepare"], [185, 5, 1, "c.nrfx_twis_t", "nrfx_twis_t"], [185, 2, 1, "c.nrfx_twis_tx_amount", "nrfx_twis_tx_amount"], [185, 2, 1, "c.nrfx_twis_tx_prepare", "nrfx_twis_tx_prepare"], [185, 2, 1, "c.nrfx_twis_uninit", "nrfx_twis_uninit"], [188, 5, 1, "c.nrfx_uart_config_t", "nrfx_uart_config_t"], [188, 5, 1, "c.nrfx_uart_error_evt_t", "nrfx_uart_error_evt_t"], [188, 2, 1, "c.nrfx_uart_errorsrc_get", "nrfx_uart_errorsrc_get"], [188, 2, 1, "c.nrfx_uart_event_address_get", "nrfx_uart_event_address_get"], [188, 7, 1, "c.nrfx_uart_event_handler_t", "nrfx_uart_event_handler_t"], [188, 5, 1, "c.nrfx_uart_event_t", "nrfx_uart_event_t"], [188, 4, 1, "c.nrfx_uart_evt_type_t", "nrfx_uart_evt_type_t"], [188, 2, 1, "c.nrfx_uart_init", "nrfx_uart_init"], [188, 2, 1, "c.nrfx_uart_init_check", "nrfx_uart_init_check"], [188, 2, 1, "c.nrfx_uart_reconfigure", "nrfx_uart_reconfigure"], [188, 2, 1, "c.nrfx_uart_rx", "nrfx_uart_rx"], [188, 2, 1, "c.nrfx_uart_rx_abort", "nrfx_uart_rx_abort"], [188, 2, 1, "c.nrfx_uart_rx_disable", "nrfx_uart_rx_disable"], [188, 2, 1, "c.nrfx_uart_rx_enable", "nrfx_uart_rx_enable"], [188, 2, 1, "c.nrfx_uart_rx_ready", "nrfx_uart_rx_ready"], [188, 5, 1, "c.nrfx_uart_t", "nrfx_uart_t"], [188, 2, 1, "c.nrfx_uart_task_address_get", "nrfx_uart_task_address_get"], [188, 2, 1, "c.nrfx_uart_tx", "nrfx_uart_tx"], [188, 2, 1, "c.nrfx_uart_tx_abort", "nrfx_uart_tx_abort"], [188, 2, 1, "c.nrfx_uart_tx_in_progress", "nrfx_uart_tx_in_progress"], [188, 2, 1, "c.nrfx_uart_uninit", "nrfx_uart_uninit"], [188, 5, 1, "c.nrfx_uart_xfer_evt_t", "nrfx_uart_xfer_evt_t"], [191, 5, 1, "c.nrfx_uarte_config_t", "nrfx_uarte_config_t"], [191, 5, 1, "c.nrfx_uarte_error_evt_t", "nrfx_uarte_error_evt_t"], [191, 2, 1, "c.nrfx_uarte_errorsrc_get", "nrfx_uarte_errorsrc_get"], [191, 2, 1, "c.nrfx_uarte_event_address_get", "nrfx_uarte_event_address_get"], [191, 7, 1, "c.nrfx_uarte_event_handler_t", "nrfx_uarte_event_handler_t"], [191, 5, 1, "c.nrfx_uarte_event_t", "nrfx_uarte_event_t"], [191, 4, 1, "c.nrfx_uarte_evt_type_t", "nrfx_uarte_evt_type_t"], [191, 2, 1, "c.nrfx_uarte_init", "nrfx_uarte_init"], [191, 2, 1, "c.nrfx_uarte_init_check", "nrfx_uarte_init_check"], [191, 2, 1, "c.nrfx_uarte_int_trigger", "nrfx_uarte_int_trigger"], [191, 2, 1, "c.nrfx_uarte_reconfigure", "nrfx_uarte_reconfigure"], [191, 2, 1, "c.nrfx_uarte_rx", "nrfx_uarte_rx"], [191, 2, 1, "c.nrfx_uarte_rx_abort", "nrfx_uarte_rx_abort"], [191, 2, 1, "c.nrfx_uarte_rx_buffer_set", "nrfx_uarte_rx_buffer_set"], [191, 5, 1, "c.nrfx_uarte_rx_cache_t", "nrfx_uarte_rx_cache_t"], [191, 5, 1, "c.nrfx_uarte_rx_disabled_evt_t", "nrfx_uarte_rx_disabled_evt_t"], [191, 2, 1, "c.nrfx_uarte_rx_enable", "nrfx_uarte_rx_enable"], [191, 5, 1, "c.nrfx_uarte_rx_evt_t", "nrfx_uarte_rx_evt_t"], [191, 2, 1, "c.nrfx_uarte_rx_new_data_check", "nrfx_uarte_rx_new_data_check"], [191, 2, 1, "c.nrfx_uarte_rx_ready", "nrfx_uarte_rx_ready"], [191, 2, 1, "c.nrfx_uarte_rxdrdy_disable", "nrfx_uarte_rxdrdy_disable"], [191, 2, 1, "c.nrfx_uarte_rxdrdy_enable", "nrfx_uarte_rxdrdy_enable"], [191, 5, 1, "c.nrfx_uarte_t", "nrfx_uarte_t"], [191, 2, 1, "c.nrfx_uarte_task_address_get", "nrfx_uarte_task_address_get"], [191, 2, 1, "c.nrfx_uarte_tx", "nrfx_uarte_tx"], [191, 2, 1, "c.nrfx_uarte_tx_abort", "nrfx_uarte_tx_abort"], [191, 5, 1, "c.nrfx_uarte_tx_evt_t", "nrfx_uarte_tx_evt_t"], [191, 2, 1, "c.nrfx_uarte_tx_in_progress", "nrfx_uarte_tx_in_progress"], [191, 2, 1, "c.nrfx_uarte_uninit", "nrfx_uarte_uninit"], [196, 2, 1, "c.nrfx_usbd_active_irq_config", "nrfx_usbd_active_irq_config"], [196, 2, 1, "c.nrfx_usbd_bus_suspend_check", "nrfx_usbd_bus_suspend_check"], [196, 7, 1, "c.nrfx_usbd_consumer_t", "nrfx_usbd_consumer_t"], [196, 8, 1, "c.nrfx_usbd_data_ptr_t", "nrfx_usbd_data_ptr_t"], [196, 2, 1, "c.nrfx_usbd_disable", "nrfx_usbd_disable"], [196, 2, 1, "c.nrfx_usbd_enable", "nrfx_usbd_enable"], [196, 2, 1, "c.nrfx_usbd_ep_abort", "nrfx_usbd_ep_abort"], [196, 2, 1, "c.nrfx_usbd_ep_default_config", "nrfx_usbd_ep_default_config"], [196, 2, 1, "c.nrfx_usbd_ep_disable", "nrfx_usbd_ep_disable"], [196, 2, 1, "c.nrfx_usbd_ep_dtoggle_clear", "nrfx_usbd_ep_dtoggle_clear"], [196, 2, 1, "c.nrfx_usbd_ep_enable", "nrfx_usbd_ep_enable"], [196, 2, 1, "c.nrfx_usbd_ep_enable_check", "nrfx_usbd_ep_enable_check"], [196, 2, 1, "c.nrfx_usbd_ep_handled_transfer", "nrfx_usbd_ep_handled_transfer"], [196, 2, 1, "c.nrfx_usbd_ep_is_busy", "nrfx_usbd_ep_is_busy"], [196, 2, 1, "c.nrfx_usbd_ep_max_packet_size_get", "nrfx_usbd_ep_max_packet_size_get"], [196, 2, 1, "c.nrfx_usbd_ep_max_packet_size_set", "nrfx_usbd_ep_max_packet_size_set"], [196, 2, 1, "c.nrfx_usbd_ep_stall", "nrfx_usbd_ep_stall"], [196, 2, 1, "c.nrfx_usbd_ep_stall_check", "nrfx_usbd_ep_stall_check"], [196, 2, 1, "c.nrfx_usbd_ep_stall_clear", "nrfx_usbd_ep_stall_clear"], [196, 2, 1, "c.nrfx_usbd_ep_status_get", "nrfx_usbd_ep_status_get"], [196, 4, 1, "c.nrfx_usbd_ep_status_t", "nrfx_usbd_ep_status_t"], [196, 4, 1, "c.nrfx_usbd_ep_t", "nrfx_usbd_ep_t"], [196, 2, 1, "c.nrfx_usbd_ep_transfer", "nrfx_usbd_ep_transfer"], [196, 5, 1, "c.nrfx_usbd_ep_transfer_t", "nrfx_usbd_ep_transfer_t"], [196, 2, 1, "c.nrfx_usbd_epout_size_get", "nrfx_usbd_epout_size_get"], [196, 7, 1, "c.nrfx_usbd_event_handler_t", "nrfx_usbd_event_handler_t"], [196, 4, 1, "c.nrfx_usbd_event_type_t", "nrfx_usbd_event_type_t"], [196, 5, 1, "c.nrfx_usbd_evt_t", "nrfx_usbd_evt_t"], [196, 2, 1, "c.nrfx_usbd_feeder_buffer_get", "nrfx_usbd_feeder_buffer_get"], [196, 7, 1, "c.nrfx_usbd_feeder_t", "nrfx_usbd_feeder_t"], [196, 2, 1, "c.nrfx_usbd_force_bus_wakeup", "nrfx_usbd_force_bus_wakeup"], [196, 5, 1, "c.nrfx_usbd_handler_desc_t", "nrfx_usbd_handler_desc_t"], [196, 8, 1, "c.nrfx_usbd_handler_t", "nrfx_usbd_handler_t"], [196, 2, 1, "c.nrfx_usbd_init", "nrfx_usbd_init"], [196, 2, 1, "c.nrfx_usbd_init_check", "nrfx_usbd_init_check"], [196, 2, 1, "c.nrfx_usbd_is_enabled", "nrfx_usbd_is_enabled"], [196, 2, 1, "c.nrfx_usbd_is_initialized", "nrfx_usbd_is_initialized"], [196, 2, 1, "c.nrfx_usbd_is_started", "nrfx_usbd_is_started"], [196, 2, 1, "c.nrfx_usbd_last_setup_dir_get", "nrfx_usbd_last_setup_dir_get"], [196, 2, 1, "c.nrfx_usbd_setup_clear", "nrfx_usbd_setup_clear"], [196, 2, 1, "c.nrfx_usbd_setup_data_clear", "nrfx_usbd_setup_data_clear"], [196, 2, 1, "c.nrfx_usbd_setup_get", "nrfx_usbd_setup_get"], [196, 2, 1, "c.nrfx_usbd_setup_stall", "nrfx_usbd_setup_stall"], [196, 5, 1, "c.nrfx_usbd_setup_t", "nrfx_usbd_setup_t"], [196, 2, 1, "c.nrfx_usbd_start", "nrfx_usbd_start"], [196, 2, 1, "c.nrfx_usbd_stop", "nrfx_usbd_stop"], [196, 2, 1, "c.nrfx_usbd_suspend", "nrfx_usbd_suspend"], [196, 2, 1, "c.nrfx_usbd_suspend_check", "nrfx_usbd_suspend_check"], [196, 2, 1, "c.nrfx_usbd_suspend_irq_config", "nrfx_usbd_suspend_irq_config"], [196, 4, 1, "c.nrfx_usbd_transfer_flags_t", "nrfx_usbd_transfer_flags_t"], [196, 2, 1, "c.nrfx_usbd_transfer_out_drop", "nrfx_usbd_transfer_out_drop"], [196, 5, 1, "c.nrfx_usbd_transfer_t", "nrfx_usbd_transfer_t"], [196, 2, 1, "c.nrfx_usbd_uninit", "nrfx_usbd_uninit"], [196, 2, 1, "c.nrfx_usbd_wakeup_req", "nrfx_usbd_wakeup_req"], [201, 5, 1, "c.nrfx_usbreg_config_t", "nrfx_usbreg_config_t"], [201, 2, 1, "c.nrfx_usbreg_disable", "nrfx_usbreg_disable"], [201, 2, 1, "c.nrfx_usbreg_enable", "nrfx_usbreg_enable"], [201, 7, 1, "c.nrfx_usbreg_event_handler_t", "nrfx_usbreg_event_handler_t"], [201, 4, 1, "c.nrfx_usbreg_evt_t", "nrfx_usbreg_evt_t"], [201, 2, 1, "c.nrfx_usbreg_handler_get", "nrfx_usbreg_handler_get"], [201, 2, 1, "c.nrfx_usbreg_init", "nrfx_usbreg_init"], [201, 2, 1, "c.nrfx_usbreg_init_check", "nrfx_usbreg_init_check"], [201, 4, 1, "c.nrfx_usbreg_state_t", "nrfx_usbreg_state_t"], [201, 2, 1, "c.nrfx_usbreg_uninit", "nrfx_usbreg_uninit"], [201, 2, 1, "c.nrfx_usbreg_usbstatus_get", "nrfx_usbreg_usbstatus_get"], [213, 7, 1, "c.nrfx_vevif_event_handler_t", "nrfx_vevif_event_handler_t"], [213, 2, 1, "c.nrfx_vevif_init", "nrfx_vevif_init"], [213, 2, 1, "c.nrfx_vevif_init_check", "nrfx_vevif_init_check"], [213, 2, 1, "c.nrfx_vevif_int_disable", "nrfx_vevif_int_disable"], [213, 2, 1, "c.nrfx_vevif_int_enable", "nrfx_vevif_int_enable"], [213, 2, 1, "c.nrfx_vevif_uninit", "nrfx_vevif_uninit"], [215, 2, 1, "c.nrfx_wdt_channel_alloc", "nrfx_wdt_channel_alloc"], [215, 2, 1, "c.nrfx_wdt_channel_feed", "nrfx_wdt_channel_feed"], [215, 7, 1, "c.nrfx_wdt_channel_id", "nrfx_wdt_channel_id"], [215, 2, 1, "c.nrfx_wdt_channels_free", "nrfx_wdt_channels_free"], [215, 5, 1, "c.nrfx_wdt_config_t", "nrfx_wdt_config_t"], [215, 2, 1, "c.nrfx_wdt_enable", "nrfx_wdt_enable"], [215, 2, 1, "c.nrfx_wdt_event_address_get", "nrfx_wdt_event_address_get"], [215, 7, 1, "c.nrfx_wdt_event_handler_t", "nrfx_wdt_event_handler_t"], [215, 2, 1, "c.nrfx_wdt_feed", "nrfx_wdt_feed"], [215, 2, 1, "c.nrfx_wdt_init", "nrfx_wdt_init"], [215, 2, 1, "c.nrfx_wdt_init_check", "nrfx_wdt_init_check"], [215, 2, 1, "c.nrfx_wdt_reconfigure", "nrfx_wdt_reconfigure"], [215, 2, 1, "c.nrfx_wdt_stop", "nrfx_wdt_stop"], [215, 5, 1, "c.nrfx_wdt_t", "nrfx_wdt_t"], [215, 2, 1, "c.nrfx_wdt_task_address_get", "nrfx_wdt_task_address_get"], [215, 2, 1, "c.nrfx_wdt_uninit", "nrfx_wdt_uninit"], [12, 2, 1, "c.nrfy_bellboard_event_address_get", "nrfy_bellboard_event_address_get"], [12, 2, 1, "c.nrfy_bellboard_event_check", "nrfy_bellboard_event_check"], [12, 2, 1, "c.nrfy_bellboard_event_clear", "nrfy_bellboard_event_clear"], [12, 2, 1, "c.nrfy_bellboard_events_process", "nrfy_bellboard_events_process"], [12, 2, 1, "c.nrfy_bellboard_int_disable", "nrfy_bellboard_int_disable"], [12, 2, 1, "c.nrfy_bellboard_int_enable", "nrfy_bellboard_int_enable"], [12, 2, 1, "c.nrfy_bellboard_int_enable_check", "nrfy_bellboard_int_enable_check"], [12, 2, 1, "c.nrfy_bellboard_int_init", "nrfy_bellboard_int_init"], [12, 2, 1, "c.nrfy_bellboard_int_pending_get", "nrfy_bellboard_int_pending_get"], [12, 2, 1, "c.nrfy_bellboard_int_uninit", "nrfy_bellboard_int_uninit"], [12, 2, 1, "c.nrfy_bellboard_task_address_get", "nrfy_bellboard_task_address_get"], [12, 2, 1, "c.nrfy_bellboard_task_trigger", "nrfy_bellboard_task_trigger"], [25, 5, 1, "c.nrfy_comp_config_t", "nrfy_comp_config_t"], [25, 2, 1, "c.nrfy_comp_disable", "nrfy_comp_disable"], [25, 2, 1, "c.nrfy_comp_enable", "nrfy_comp_enable"], [25, 2, 1, "c.nrfy_comp_enable_check", "nrfy_comp_enable_check"], [25, 2, 1, "c.nrfy_comp_event_address_get", "nrfy_comp_event_address_get"], [25, 2, 1, "c.nrfy_comp_event_check", "nrfy_comp_event_check"], [25, 2, 1, "c.nrfy_comp_event_clear", "nrfy_comp_event_clear"], [25, 2, 1, "c.nrfy_comp_events_process", "nrfy_comp_events_process"], [25, 2, 1, "c.nrfy_comp_ext_ref_set", "nrfy_comp_ext_ref_set"], [25, 2, 1, "c.nrfy_comp_hysteresis_set", "nrfy_comp_hysteresis_set"], [25, 2, 1, "c.nrfy_comp_input_select", "nrfy_comp_input_select"], [25, 2, 1, "c.nrfy_comp_int_disable", "nrfy_comp_int_disable"], [25, 2, 1, "c.nrfy_comp_int_enable", "nrfy_comp_int_enable"], [25, 2, 1, "c.nrfy_comp_int_enable_check", "nrfy_comp_int_enable_check"], [25, 2, 1, "c.nrfy_comp_int_init", "nrfy_comp_int_init"], [25, 2, 1, "c.nrfy_comp_int_uninit", "nrfy_comp_int_uninit"], [25, 2, 1, "c.nrfy_comp_isource_set", "nrfy_comp_isource_set"], [25, 2, 1, "c.nrfy_comp_main_mode_set", "nrfy_comp_main_mode_set"], [25, 2, 1, "c.nrfy_comp_periph_configure", "nrfy_comp_periph_configure"], [25, 2, 1, "c.nrfy_comp_ref_set", "nrfy_comp_ref_set"], [25, 2, 1, "c.nrfy_comp_result_get", "nrfy_comp_result_get"], [25, 2, 1, "c.nrfy_comp_sample", "nrfy_comp_sample"], [25, 2, 1, "c.nrfy_comp_shorts_disable", "nrfy_comp_shorts_disable"], [25, 2, 1, "c.nrfy_comp_shorts_enable", "nrfy_comp_shorts_enable"], [25, 2, 1, "c.nrfy_comp_speed_mode_set", "nrfy_comp_speed_mode_set"], [25, 2, 1, "c.nrfy_comp_task_address_get", "nrfy_comp_task_address_get"], [25, 2, 1, "c.nrfy_comp_task_trigger", "nrfy_comp_task_trigger"], [25, 2, 1, "c.nrfy_comp_th_set", "nrfy_comp_th_set"], [35, 2, 1, "c.nrfy_dppi_channel_check", "nrfy_dppi_channel_check"], [35, 2, 1, "c.nrfy_dppi_channel_number_get", "nrfy_dppi_channel_number_get"], [35, 2, 1, "c.nrfy_dppi_channels_disable", "nrfy_dppi_channels_disable"], [35, 2, 1, "c.nrfy_dppi_channels_disable_all", "nrfy_dppi_channels_disable_all"], [35, 2, 1, "c.nrfy_dppi_channels_enable", "nrfy_dppi_channels_enable"], [35, 2, 1, "c.nrfy_dppi_channels_group_set", "nrfy_dppi_channels_group_set"], [35, 2, 1, "c.nrfy_dppi_channels_include_in_group", "nrfy_dppi_channels_include_in_group"], [35, 2, 1, "c.nrfy_dppi_channels_remove_from_group", "nrfy_dppi_channels_remove_from_group"], [35, 2, 1, "c.nrfy_dppi_channels_set", "nrfy_dppi_channels_set"], [35, 2, 1, "c.nrfy_dppi_group_clear", "nrfy_dppi_group_clear"], [35, 2, 1, "c.nrfy_dppi_group_disable", "nrfy_dppi_group_disable"], [35, 2, 1, "c.nrfy_dppi_group_disable_task_get", "nrfy_dppi_group_disable_task_get"], [35, 2, 1, "c.nrfy_dppi_group_enable", "nrfy_dppi_group_enable"], [35, 2, 1, "c.nrfy_dppi_group_enable_task_get", "nrfy_dppi_group_enable_task_get"], [35, 2, 1, "c.nrfy_dppi_group_number_get", "nrfy_dppi_group_number_get"], [35, 2, 1, "c.nrfy_dppi_subscribe_clear", "nrfy_dppi_subscribe_clear"], [35, 2, 1, "c.nrfy_dppi_subscribe_set", "nrfy_dppi_subscribe_set"], [35, 2, 1, "c.nrfy_dppi_task_address_get", "nrfy_dppi_task_address_get"], [35, 2, 1, "c.nrfy_dppi_task_trigger", "nrfy_dppi_task_trigger"], [49, 2, 1, "c.nrfy_gpio_cfg", "nrfy_gpio_cfg"], [49, 2, 1, "c.nrfy_gpio_cfg_default", "nrfy_gpio_cfg_default"], [49, 2, 1, "c.nrfy_gpio_cfg_input", "nrfy_gpio_cfg_input"], [49, 2, 1, "c.nrfy_gpio_cfg_output", "nrfy_gpio_cfg_output"], [49, 2, 1, "c.nrfy_gpio_cfg_sense_input", "nrfy_gpio_cfg_sense_input"], [49, 2, 1, "c.nrfy_gpio_cfg_sense_set", "nrfy_gpio_cfg_sense_set"], [49, 2, 1, "c.nrfy_gpio_cfg_watcher", "nrfy_gpio_cfg_watcher"], [49, 2, 1, "c.nrfy_gpio_input_disconnect", "nrfy_gpio_input_disconnect"], [49, 2, 1, "c.nrfy_gpio_pin_clear", "nrfy_gpio_pin_clear"], [49, 2, 1, "c.nrfy_gpio_pin_dir_get", "nrfy_gpio_pin_dir_get"], [49, 2, 1, "c.nrfy_gpio_pin_dir_set", "nrfy_gpio_pin_dir_set"], [49, 2, 1, "c.nrfy_gpio_pin_input_get", "nrfy_gpio_pin_input_get"], [49, 2, 1, "c.nrfy_gpio_pin_out_read", "nrfy_gpio_pin_out_read"], [49, 2, 1, "c.nrfy_gpio_pin_port_number_extract", "nrfy_gpio_pin_port_number_extract"], [49, 2, 1, "c.nrfy_gpio_pin_present_check", "nrfy_gpio_pin_present_check"], [49, 2, 1, "c.nrfy_gpio_pin_pull_get", "nrfy_gpio_pin_pull_get"], [49, 2, 1, "c.nrfy_gpio_pin_read", "nrfy_gpio_pin_read"], [49, 2, 1, "c.nrfy_gpio_pin_sense_get", "nrfy_gpio_pin_sense_get"], [49, 2, 1, "c.nrfy_gpio_pin_set", "nrfy_gpio_pin_set"], [49, 2, 1, "c.nrfy_gpio_pin_toggle", "nrfy_gpio_pin_toggle"], [49, 2, 1, "c.nrfy_gpio_pin_write", "nrfy_gpio_pin_write"], [49, 2, 1, "c.nrfy_gpio_port_dir_input_set", "nrfy_gpio_port_dir_input_set"], [49, 2, 1, "c.nrfy_gpio_port_dir_output_set", "nrfy_gpio_port_dir_output_set"], [49, 2, 1, "c.nrfy_gpio_port_dir_read", "nrfy_gpio_port_dir_read"], [49, 2, 1, "c.nrfy_gpio_port_dir_write", "nrfy_gpio_port_dir_write"], [49, 2, 1, "c.nrfy_gpio_port_in_read", "nrfy_gpio_port_in_read"], [49, 2, 1, "c.nrfy_gpio_port_out_clear", "nrfy_gpio_port_out_clear"], [49, 2, 1, "c.nrfy_gpio_port_out_read", "nrfy_gpio_port_out_read"], [49, 2, 1, "c.nrfy_gpio_port_out_set", "nrfy_gpio_port_out_set"], [49, 2, 1, "c.nrfy_gpio_port_out_write", "nrfy_gpio_port_out_write"], [49, 2, 1, "c.nrfy_gpio_ports_read", "nrfy_gpio_ports_read"], [49, 2, 1, "c.nrfy_gpio_range_cfg_input", "nrfy_gpio_range_cfg_input"], [49, 2, 1, "c.nrfy_gpio_range_cfg_output", "nrfy_gpio_range_cfg_output"], [49, 2, 1, "c.nrfy_gpio_reconfigure", "nrfy_gpio_reconfigure"], [53, 2, 1, "c.nrfy_gpiote_clr_task_get", "nrfy_gpiote_clr_task_get"], [53, 2, 1, "c.nrfy_gpiote_event_address_get", "nrfy_gpiote_event_address_get"], [53, 2, 1, "c.nrfy_gpiote_event_check", "nrfy_gpiote_event_check"], [53, 2, 1, "c.nrfy_gpiote_event_clear", "nrfy_gpiote_event_clear"], [53, 2, 1, "c.nrfy_gpiote_event_configure", "nrfy_gpiote_event_configure"], [53, 2, 1, "c.nrfy_gpiote_event_disable", "nrfy_gpiote_event_disable"], [53, 2, 1, "c.nrfy_gpiote_event_enable", "nrfy_gpiote_event_enable"], [53, 2, 1, "c.nrfy_gpiote_event_pin_get", "nrfy_gpiote_event_pin_get"], [53, 2, 1, "c.nrfy_gpiote_event_polarity_get", "nrfy_gpiote_event_polarity_get"], [53, 2, 1, "c.nrfy_gpiote_events_process", "nrfy_gpiote_events_process"], [53, 2, 1, "c.nrfy_gpiote_in_event_get", "nrfy_gpiote_in_event_get"], [53, 2, 1, "c.nrfy_gpiote_int_disable", "nrfy_gpiote_int_disable"], [53, 2, 1, "c.nrfy_gpiote_int_enable", "nrfy_gpiote_int_enable"], [53, 2, 1, "c.nrfy_gpiote_int_enable_check", "nrfy_gpiote_int_enable_check"], [53, 2, 1, "c.nrfy_gpiote_int_init", "nrfy_gpiote_int_init"], [53, 2, 1, "c.nrfy_gpiote_latency_get", "nrfy_gpiote_latency_get"], [53, 2, 1, "c.nrfy_gpiote_latency_set", "nrfy_gpiote_latency_set"], [53, 2, 1, "c.nrfy_gpiote_out_task_get", "nrfy_gpiote_out_task_get"], [53, 2, 1, "c.nrfy_gpiote_publish_clear", "nrfy_gpiote_publish_clear"], [53, 2, 1, "c.nrfy_gpiote_publish_set", "nrfy_gpiote_publish_set"], [53, 2, 1, "c.nrfy_gpiote_set_task_get", "nrfy_gpiote_set_task_get"], [53, 2, 1, "c.nrfy_gpiote_subscribe_clear", "nrfy_gpiote_subscribe_clear"], [53, 2, 1, "c.nrfy_gpiote_subscribe_set", "nrfy_gpiote_subscribe_set"], [53, 2, 1, "c.nrfy_gpiote_task_address_get", "nrfy_gpiote_task_address_get"], [53, 2, 1, "c.nrfy_gpiote_task_configure", "nrfy_gpiote_task_configure"], [53, 2, 1, "c.nrfy_gpiote_task_disable", "nrfy_gpiote_task_disable"], [53, 2, 1, "c.nrfy_gpiote_task_enable", "nrfy_gpiote_task_enable"], [53, 2, 1, "c.nrfy_gpiote_task_force", "nrfy_gpiote_task_force"], [53, 2, 1, "c.nrfy_gpiote_task_trigger", "nrfy_gpiote_task_trigger"], [53, 2, 1, "c.nrfy_gpiote_te_default", "nrfy_gpiote_te_default"], [53, 2, 1, "c.nrfy_gpiote_te_is_enabled", "nrfy_gpiote_te_is_enabled"], [57, 2, 1, "c.nrfy_grtc_clkout_divider_get", "nrfy_grtc_clkout_divider_get"], [57, 2, 1, "c.nrfy_grtc_clkout_divider_set", "nrfy_grtc_clkout_divider_set"], [57, 2, 1, "c.nrfy_grtc_clkout_enable_check", "nrfy_grtc_clkout_enable_check"], [57, 2, 1, "c.nrfy_grtc_clkout_set", "nrfy_grtc_clkout_set"], [57, 2, 1, "c.nrfy_grtc_clksel_get", "nrfy_grtc_clksel_get"], [57, 2, 1, "c.nrfy_grtc_clksel_set", "nrfy_grtc_clksel_set"], [57, 2, 1, "c.nrfy_grtc_event_address_get", "nrfy_grtc_event_address_get"], [57, 2, 1, "c.nrfy_grtc_event_check", "nrfy_grtc_event_check"], [57, 2, 1, "c.nrfy_grtc_event_clear", "nrfy_grtc_event_clear"], [57, 2, 1, "c.nrfy_grtc_events_process", "nrfy_grtc_events_process"], [57, 2, 1, "c.nrfy_grtc_int_disable", "nrfy_grtc_int_disable"], [57, 2, 1, "c.nrfy_grtc_int_enable", "nrfy_grtc_int_enable"], [57, 2, 1, "c.nrfy_grtc_int_enable_check", "nrfy_grtc_int_enable_check"], [57, 2, 1, "c.nrfy_grtc_int_init", "nrfy_grtc_int_init"], [57, 2, 1, "c.nrfy_grtc_int_pending_get", "nrfy_grtc_int_pending_get"], [57, 2, 1, "c.nrfy_grtc_int_uninit", "nrfy_grtc_int_uninit"], [57, 2, 1, "c.nrfy_grtc_prepare", "nrfy_grtc_prepare"], [57, 2, 1, "c.nrfy_grtc_publish_clear", "nrfy_grtc_publish_clear"], [57, 2, 1, "c.nrfy_grtc_publish_set", "nrfy_grtc_publish_set"], [57, 2, 1, "c.nrfy_grtc_pwm_compare_get", "nrfy_grtc_pwm_compare_get"], [57, 2, 1, "c.nrfy_grtc_pwm_compare_set", "nrfy_grtc_pwm_compare_set"], [57, 2, 1, "c.nrfy_grtc_rt_counter_cc_get", "nrfy_grtc_rt_counter_cc_get"], [57, 2, 1, "c.nrfy_grtc_rt_counter_cc_set", "nrfy_grtc_rt_counter_cc_set"], [57, 2, 1, "c.nrfy_grtc_rt_counter_get", "nrfy_grtc_rt_counter_get"], [57, 2, 1, "c.nrfy_grtc_shorts_disable", "nrfy_grtc_shorts_disable"], [57, 2, 1, "c.nrfy_grtc_shorts_enable", "nrfy_grtc_shorts_enable"], [57, 2, 1, "c.nrfy_grtc_shorts_set", "nrfy_grtc_shorts_set"], [57, 2, 1, "c.nrfy_grtc_subscribe_clear", "nrfy_grtc_subscribe_clear"], [57, 2, 1, "c.nrfy_grtc_subscribe_set", "nrfy_grtc_subscribe_set"], [57, 2, 1, "c.nrfy_grtc_sys_conter_ready_check", "nrfy_grtc_sys_conter_ready_check"], [57, 2, 1, "c.nrfy_grtc_sys_counter_active_check", "nrfy_grtc_sys_counter_active_check"], [57, 2, 1, "c.nrfy_grtc_sys_counter_active_set", "nrfy_grtc_sys_counter_active_set"], [57, 2, 1, "c.nrfy_grtc_sys_counter_active_state_request_check", "nrfy_grtc_sys_counter_active_state_request_check"], [57, 2, 1, "c.nrfy_grtc_sys_counter_active_state_request_get", "nrfy_grtc_sys_counter_active_state_request_get"], [57, 2, 1, "c.nrfy_grtc_sys_counter_active_state_request_set", "nrfy_grtc_sys_counter_active_state_request_set"], [57, 2, 1, "c.nrfy_grtc_sys_counter_auto_mode_check", "nrfy_grtc_sys_counter_auto_mode_check"], [57, 2, 1, "c.nrfy_grtc_sys_counter_auto_mode_set", "nrfy_grtc_sys_counter_auto_mode_set"], [57, 2, 1, "c.nrfy_grtc_sys_counter_capture_subscribe_clear", "nrfy_grtc_sys_counter_capture_subscribe_clear"], [57, 2, 1, "c.nrfy_grtc_sys_counter_capture_subscribe_set", "nrfy_grtc_sys_counter_capture_subscribe_set"], [57, 2, 1, "c.nrfy_grtc_sys_counter_capture_task_get", "nrfy_grtc_sys_counter_capture_task_get"], [57, 2, 1, "c.nrfy_grtc_sys_counter_cc_add_set", "nrfy_grtc_sys_counter_cc_add_set"], [57, 2, 1, "c.nrfy_grtc_sys_counter_cc_enable_check", "nrfy_grtc_sys_counter_cc_enable_check"], [57, 2, 1, "c.nrfy_grtc_sys_counter_cc_get", "nrfy_grtc_sys_counter_cc_get"], [57, 2, 1, "c.nrfy_grtc_sys_counter_cc_set", "nrfy_grtc_sys_counter_cc_set"], [57, 2, 1, "c.nrfy_grtc_sys_counter_check", "nrfy_grtc_sys_counter_check"], [57, 2, 1, "c.nrfy_grtc_sys_counter_compare_event_check", "nrfy_grtc_sys_counter_compare_event_check"], [57, 2, 1, "c.nrfy_grtc_sys_counter_compare_event_clear", "nrfy_grtc_sys_counter_compare_event_clear"], [57, 2, 1, "c.nrfy_grtc_sys_counter_compare_event_disable", "nrfy_grtc_sys_counter_compare_event_disable"], [57, 2, 1, "c.nrfy_grtc_sys_counter_compare_event_enable", "nrfy_grtc_sys_counter_compare_event_enable"], [57, 2, 1, "c.nrfy_grtc_sys_counter_compare_event_get", "nrfy_grtc_sys_counter_compare_event_get"], [57, 2, 1, "c.nrfy_grtc_sys_counter_compare_event_int_clear_enable", "nrfy_grtc_sys_counter_compare_event_int_clear_enable"], [57, 2, 1, "c.nrfy_grtc_sys_counter_compare_publish_clear", "nrfy_grtc_sys_counter_compare_publish_clear"], [57, 2, 1, "c.nrfy_grtc_sys_counter_compare_publish_set", "nrfy_grtc_sys_counter_compare_publish_set"], [57, 2, 1, "c.nrfy_grtc_sys_counter_get", "nrfy_grtc_sys_counter_get"], [57, 2, 1, "c.nrfy_grtc_sys_counter_interval_get", "nrfy_grtc_sys_counter_interval_get"], [57, 2, 1, "c.nrfy_grtc_sys_counter_interval_set", "nrfy_grtc_sys_counter_interval_set"], [57, 2, 1, "c.nrfy_grtc_sys_counter_overflow_check", "nrfy_grtc_sys_counter_overflow_check"], [57, 2, 1, "c.nrfy_grtc_sys_counter_set", "nrfy_grtc_sys_counter_set"], [57, 2, 1, "c.nrfy_grtc_sys_counter_start", "nrfy_grtc_sys_counter_start"], [57, 2, 1, "c.nrfy_grtc_task_address_get", "nrfy_grtc_task_address_get"], [57, 2, 1, "c.nrfy_grtc_task_trigger", "nrfy_grtc_task_trigger"], [57, 2, 1, "c.nrfy_grtc_timeout_get", "nrfy_grtc_timeout_get"], [57, 2, 1, "c.nrfy_grtc_timeout_set", "nrfy_grtc_timeout_set"], [57, 2, 1, "c.nrfy_grtc_waketime_get", "nrfy_grtc_waketime_get"], [57, 2, 1, "c.nrfy_grtc_waketime_set", "nrfy_grtc_waketime_set"], [62, 2, 1, "c.nrfy_i2s_abort", "nrfy_i2s_abort"], [62, 2, 1, "c.nrfy_i2s_buffers_set", "nrfy_i2s_buffers_set"], [62, 5, 1, "c.nrfy_i2s_buffers_t", "nrfy_i2s_buffers_t"], [62, 5, 1, "c.nrfy_i2s_config_t", "nrfy_i2s_config_t"], [62, 2, 1, "c.nrfy_i2s_configure", "nrfy_i2s_configure"], [62, 2, 1, "c.nrfy_i2s_disable", "nrfy_i2s_disable"], [62, 2, 1, "c.nrfy_i2s_enable", "nrfy_i2s_enable"], [62, 2, 1, "c.nrfy_i2s_event_address_get", "nrfy_i2s_event_address_get"], [62, 2, 1, "c.nrfy_i2s_event_check", "nrfy_i2s_event_check"], [62, 2, 1, "c.nrfy_i2s_event_clear", "nrfy_i2s_event_clear"], [62, 2, 1, "c.nrfy_i2s_events_process", "nrfy_i2s_events_process"], [62, 2, 1, "c.nrfy_i2s_int_disable", "nrfy_i2s_int_disable"], [62, 2, 1, "c.nrfy_i2s_int_enable", "nrfy_i2s_int_enable"], [62, 2, 1, "c.nrfy_i2s_int_enable_check", "nrfy_i2s_int_enable_check"], [62, 2, 1, "c.nrfy_i2s_int_init", "nrfy_i2s_int_init"], [62, 2, 1, "c.nrfy_i2s_int_uninit", "nrfy_i2s_int_uninit"], [62, 2, 1, "c.nrfy_i2s_lrck_pin_get", "nrfy_i2s_lrck_pin_get"], [62, 2, 1, "c.nrfy_i2s_mck_pin_get", "nrfy_i2s_mck_pin_get"], [62, 2, 1, "c.nrfy_i2s_periph_configure", "nrfy_i2s_periph_configure"], [62, 2, 1, "c.nrfy_i2s_pins_get", "nrfy_i2s_pins_get"], [62, 2, 1, "c.nrfy_i2s_pins_set", "nrfy_i2s_pins_set"], [62, 2, 1, "c.nrfy_i2s_publish_clear", "nrfy_i2s_publish_clear"], [62, 2, 1, "c.nrfy_i2s_publish_set", "nrfy_i2s_publish_set"], [62, 2, 1, "c.nrfy_i2s_rx_buffer_get", "nrfy_i2s_rx_buffer_get"], [62, 2, 1, "c.nrfy_i2s_rx_buffer_set", "nrfy_i2s_rx_buffer_set"], [62, 2, 1, "c.nrfy_i2s_sck_pin_get", "nrfy_i2s_sck_pin_get"], [62, 2, 1, "c.nrfy_i2s_sdin_pin_get", "nrfy_i2s_sdin_pin_get"], [62, 2, 1, "c.nrfy_i2s_sdout_pin_get", "nrfy_i2s_sdout_pin_get"], [62, 2, 1, "c.nrfy_i2s_subscribe_clear", "nrfy_i2s_subscribe_clear"], [62, 2, 1, "c.nrfy_i2s_subscribe_set", "nrfy_i2s_subscribe_set"], [62, 2, 1, "c.nrfy_i2s_task_address_get", "nrfy_i2s_task_address_get"], [62, 2, 1, "c.nrfy_i2s_task_trigger", "nrfy_i2s_task_trigger"], [62, 2, 1, "c.nrfy_i2s_transfer_set", "nrfy_i2s_transfer_set"], [62, 2, 1, "c.nrfy_i2s_tx_buffer_get", "nrfy_i2s_tx_buffer_get"], [62, 2, 1, "c.nrfy_i2s_tx_buffer_set", "nrfy_i2s_tx_buffer_set"], [62, 5, 1, "c.nrfy_i2s_xfer_desc_t", "nrfy_i2s_xfer_desc_t"], [62, 2, 1, "c.nrfy_i2s_xfer_start", "nrfy_i2s_xfer_start"], [75, 5, 1, "c.nrfy_lpcomp_config_t", "nrfy_lpcomp_config_t"], [75, 2, 1, "c.nrfy_lpcomp_configure", "nrfy_lpcomp_configure"], [75, 2, 1, "c.nrfy_lpcomp_detection_set", "nrfy_lpcomp_detection_set"], [75, 2, 1, "c.nrfy_lpcomp_disable", "nrfy_lpcomp_disable"], [75, 2, 1, "c.nrfy_lpcomp_enable", "nrfy_lpcomp_enable"], [75, 2, 1, "c.nrfy_lpcomp_event_address_get", "nrfy_lpcomp_event_address_get"], [75, 2, 1, "c.nrfy_lpcomp_event_check", "nrfy_lpcomp_event_check"], [75, 2, 1, "c.nrfy_lpcomp_event_clear", "nrfy_lpcomp_event_clear"], [75, 2, 1, "c.nrfy_lpcomp_events_process", "nrfy_lpcomp_events_process"], [75, 2, 1, "c.nrfy_lpcomp_ext_ref_set", "nrfy_lpcomp_ext_ref_set"], [75, 2, 1, "c.nrfy_lpcomp_hysteresis_set", "nrfy_lpcomp_hysteresis_set"], [75, 2, 1, "c.nrfy_lpcomp_input_select", "nrfy_lpcomp_input_select"], [75, 2, 1, "c.nrfy_lpcomp_int_disable", "nrfy_lpcomp_int_disable"], [75, 2, 1, "c.nrfy_lpcomp_int_enable", "nrfy_lpcomp_int_enable"], [75, 2, 1, "c.nrfy_lpcomp_int_enable_check", "nrfy_lpcomp_int_enable_check"], [75, 2, 1, "c.nrfy_lpcomp_int_init", "nrfy_lpcomp_int_init"], [75, 2, 1, "c.nrfy_lpcomp_int_uninit", "nrfy_lpcomp_int_uninit"], [75, 2, 1, "c.nrfy_lpcomp_periph_configure", "nrfy_lpcomp_periph_configure"], [75, 2, 1, "c.nrfy_lpcomp_ref_set", "nrfy_lpcomp_ref_set"], [75, 2, 1, "c.nrfy_lpcomp_result_get", "nrfy_lpcomp_result_get"], [75, 2, 1, "c.nrfy_lpcomp_sample_check", "nrfy_lpcomp_sample_check"], [75, 2, 1, "c.nrfy_lpcomp_shorts_disable", "nrfy_lpcomp_shorts_disable"], [75, 2, 1, "c.nrfy_lpcomp_shorts_enable", "nrfy_lpcomp_shorts_enable"], [75, 2, 1, "c.nrfy_lpcomp_task_address_get", "nrfy_lpcomp_task_address_get"], [75, 2, 1, "c.nrfy_lpcomp_task_trigger", "nrfy_lpcomp_task_trigger"], [88, 2, 1, "c.nrfy_mvdma_abort", "nrfy_mvdma_abort"], [88, 2, 1, "c.nrfy_mvdma_activity_check", "nrfy_mvdma_activity_check"], [88, 2, 1, "c.nrfy_mvdma_aximode_set", "nrfy_mvdma_aximode_set"], [88, 2, 1, "c.nrfy_mvdma_crc_result_get", "nrfy_mvdma_crc_result_get"], [88, 2, 1, "c.nrfy_mvdma_event_address_get", "nrfy_mvdma_event_address_get"], [88, 2, 1, "c.nrfy_mvdma_event_check", "nrfy_mvdma_event_check"], [88, 2, 1, "c.nrfy_mvdma_event_clear", "nrfy_mvdma_event_clear"], [88, 2, 1, "c.nrfy_mvdma_events_process", "nrfy_mvdma_events_process"], [88, 2, 1, "c.nrfy_mvdma_fifo_status_get", "nrfy_mvdma_fifo_status_get"], [88, 2, 1, "c.nrfy_mvdma_int_disable", "nrfy_mvdma_int_disable"], [88, 2, 1, "c.nrfy_mvdma_int_enable", "nrfy_mvdma_int_enable"], [88, 2, 1, "c.nrfy_mvdma_int_enable_check", "nrfy_mvdma_int_enable_check"], [88, 2, 1, "c.nrfy_mvdma_int_init", "nrfy_mvdma_int_init"], [88, 2, 1, "c.nrfy_mvdma_int_pending_get", "nrfy_mvdma_int_pending_get"], [88, 2, 1, "c.nrfy_mvdma_int_uninit", "nrfy_mvdma_int_uninit"], [88, 2, 1, "c.nrfy_mvdma_job_list_set", "nrfy_mvdma_job_list_set"], [88, 2, 1, "c.nrfy_mvdma_last_sink_address_get", "nrfy_mvdma_last_sink_address_get"], [88, 2, 1, "c.nrfy_mvdma_last_source_address_get", "nrfy_mvdma_last_source_address_get"], [88, 5, 1, "c.nrfy_mvdma_list_desc_t", "nrfy_mvdma_list_desc_t"], [88, 5, 1, "c.nrfy_mvdma_list_request_t", "nrfy_mvdma_list_request_t"], [88, 2, 1, "c.nrfy_mvdma_mode_set", "nrfy_mvdma_mode_set"], [88, 2, 1, "c.nrfy_mvdma_multi_job_list_get", "nrfy_mvdma_multi_job_list_get"], [88, 2, 1, "c.nrfy_mvdma_multi_job_list_set", "nrfy_mvdma_multi_job_list_set"], [88, 2, 1, "c.nrfy_mvdma_multi_start", "nrfy_mvdma_multi_start"], [88, 2, 1, "c.nrfy_mvdma_publish_clear", "nrfy_mvdma_publish_clear"], [88, 2, 1, "c.nrfy_mvdma_publish_set", "nrfy_mvdma_publish_set"], [88, 2, 1, "c.nrfy_mvdma_reset", "nrfy_mvdma_reset"], [88, 2, 1, "c.nrfy_mvdma_sink_error_get", "nrfy_mvdma_sink_error_get"], [88, 2, 1, "c.nrfy_mvdma_sink_job_count_get", "nrfy_mvdma_sink_job_count_get"], [88, 2, 1, "c.nrfy_mvdma_sink_job_description_get", "nrfy_mvdma_sink_job_description_get"], [88, 2, 1, "c.nrfy_mvdma_sink_list_ptr_get", "nrfy_mvdma_sink_list_ptr_get"], [88, 2, 1, "c.nrfy_mvdma_sink_list_ptr_set", "nrfy_mvdma_sink_list_ptr_set"], [88, 2, 1, "c.nrfy_mvdma_source_error_get", "nrfy_mvdma_source_error_get"], [88, 2, 1, "c.nrfy_mvdma_source_job_count_get", "nrfy_mvdma_source_job_count_get"], [88, 2, 1, "c.nrfy_mvdma_source_job_description_get", "nrfy_mvdma_source_job_description_get"], [88, 2, 1, "c.nrfy_mvdma_source_list_ptr_get", "nrfy_mvdma_source_list_ptr_get"], [88, 2, 1, "c.nrfy_mvdma_source_list_ptr_set", "nrfy_mvdma_source_list_ptr_set"], [88, 2, 1, "c.nrfy_mvdma_start", "nrfy_mvdma_start"], [88, 2, 1, "c.nrfy_mvdma_start_task_get", "nrfy_mvdma_start_task_get"], [88, 2, 1, "c.nrfy_mvdma_subscribe_clear", "nrfy_mvdma_subscribe_clear"], [88, 2, 1, "c.nrfy_mvdma_subscribe_set", "nrfy_mvdma_subscribe_set"], [88, 2, 1, "c.nrfy_mvdma_task_address_get", "nrfy_mvdma_task_address_get"], [88, 2, 1, "c.nrfy_mvdma_task_trigger", "nrfy_mvdma_task_trigger"], [101, 2, 1, "c.nrfy_pdm_abort", "nrfy_pdm_abort"], [101, 2, 1, "c.nrfy_pdm_buffer_get", "nrfy_pdm_buffer_get"], [101, 2, 1, "c.nrfy_pdm_buffer_set", "nrfy_pdm_buffer_set"], [101, 5, 1, "c.nrfy_pdm_buffer_t", "nrfy_pdm_buffer_t"], [101, 2, 1, "c.nrfy_pdm_clock_get", "nrfy_pdm_clock_get"], [101, 2, 1, "c.nrfy_pdm_clock_set", "nrfy_pdm_clock_set"], [101, 5, 1, "c.nrfy_pdm_config_t", "nrfy_pdm_config_t"], [101, 2, 1, "c.nrfy_pdm_disable", "nrfy_pdm_disable"], [101, 2, 1, "c.nrfy_pdm_enable", "nrfy_pdm_enable"], [101, 2, 1, "c.nrfy_pdm_enable_check", "nrfy_pdm_enable_check"], [101, 2, 1, "c.nrfy_pdm_event_address_get", "nrfy_pdm_event_address_get"], [101, 2, 1, "c.nrfy_pdm_event_check", "nrfy_pdm_event_check"], [101, 2, 1, "c.nrfy_pdm_event_clear", "nrfy_pdm_event_clear"], [101, 2, 1, "c.nrfy_pdm_events_process", "nrfy_pdm_events_process"], [101, 2, 1, "c.nrfy_pdm_gain_get", "nrfy_pdm_gain_get"], [101, 2, 1, "c.nrfy_pdm_gain_set", "nrfy_pdm_gain_set"], [101, 2, 1, "c.nrfy_pdm_int_disable", "nrfy_pdm_int_disable"], [101, 2, 1, "c.nrfy_pdm_int_enable", "nrfy_pdm_int_enable"], [101, 2, 1, "c.nrfy_pdm_int_enable_check", "nrfy_pdm_int_enable_check"], [101, 2, 1, "c.nrfy_pdm_int_init", "nrfy_pdm_int_init"], [101, 2, 1, "c.nrfy_pdm_int_uninit", "nrfy_pdm_int_uninit"], [101, 2, 1, "c.nrfy_pdm_mode_get", "nrfy_pdm_mode_get"], [101, 2, 1, "c.nrfy_pdm_mode_set", "nrfy_pdm_mode_set"], [101, 2, 1, "c.nrfy_pdm_periph_configure", "nrfy_pdm_periph_configure"], [101, 2, 1, "c.nrfy_pdm_pin_disconnect", "nrfy_pdm_pin_disconnect"], [101, 2, 1, "c.nrfy_pdm_pins_get", "nrfy_pdm_pins_get"], [101, 2, 1, "c.nrfy_pdm_pins_set", "nrfy_pdm_pins_set"], [101, 5, 1, "c.nrfy_pdm_pins_t", "nrfy_pdm_pins_t"], [101, 2, 1, "c.nrfy_pdm_publish_clear", "nrfy_pdm_publish_clear"], [101, 2, 1, "c.nrfy_pdm_publish_set", "nrfy_pdm_publish_set"], [101, 2, 1, "c.nrfy_pdm_start", "nrfy_pdm_start"], [101, 2, 1, "c.nrfy_pdm_subscribe_clear", "nrfy_pdm_subscribe_clear"], [101, 2, 1, "c.nrfy_pdm_subscribe_set", "nrfy_pdm_subscribe_set"], [101, 2, 1, "c.nrfy_pdm_task_address_get", "nrfy_pdm_task_address_get"], [101, 2, 1, "c.nrfy_pdm_task_trigger", "nrfy_pdm_task_trigger"], [113, 2, 1, "c.nrfy_pwm_abort", "nrfy_pwm_abort"], [113, 5, 1, "c.nrfy_pwm_config_t", "nrfy_pwm_config_t"], [113, 2, 1, "c.nrfy_pwm_configure", "nrfy_pwm_configure"], [113, 2, 1, "c.nrfy_pwm_decoder_set", "nrfy_pwm_decoder_set"], [113, 2, 1, "c.nrfy_pwm_disable", "nrfy_pwm_disable"], [113, 2, 1, "c.nrfy_pwm_enable", "nrfy_pwm_enable"], [113, 2, 1, "c.nrfy_pwm_enable_check", "nrfy_pwm_enable_check"], [113, 2, 1, "c.nrfy_pwm_event_address_get", "nrfy_pwm_event_address_get"], [113, 2, 1, "c.nrfy_pwm_event_check", "nrfy_pwm_event_check"], [113, 2, 1, "c.nrfy_pwm_event_clear", "nrfy_pwm_event_clear"], [113, 2, 1, "c.nrfy_pwm_events_process", "nrfy_pwm_events_process"], [113, 2, 1, "c.nrfy_pwm_int_disable", "nrfy_pwm_int_disable"], [113, 2, 1, "c.nrfy_pwm_int_enable", "nrfy_pwm_int_enable"], [113, 2, 1, "c.nrfy_pwm_int_enable_check", "nrfy_pwm_int_enable_check"], [113, 2, 1, "c.nrfy_pwm_int_init", "nrfy_pwm_int_init"], [113, 2, 1, "c.nrfy_pwm_int_set", "nrfy_pwm_int_set"], [113, 2, 1, "c.nrfy_pwm_int_uninit", "nrfy_pwm_int_uninit"], [113, 2, 1, "c.nrfy_pwm_loop_set", "nrfy_pwm_loop_set"], [113, 2, 1, "c.nrfy_pwm_periph_configure", "nrfy_pwm_periph_configure"], [113, 2, 1, "c.nrfy_pwm_pin_get", "nrfy_pwm_pin_get"], [113, 2, 1, "c.nrfy_pwm_pins_set", "nrfy_pwm_pins_set"], [113, 2, 1, "c.nrfy_pwm_publish_clear", "nrfy_pwm_publish_clear"], [113, 2, 1, "c.nrfy_pwm_publish_set", "nrfy_pwm_publish_set"], [113, 2, 1, "c.nrfy_pwm_seqend_event_get", "nrfy_pwm_seqend_event_get"], [113, 2, 1, "c.nrfy_pwm_seqstart_task_get", "nrfy_pwm_seqstart_task_get"], [113, 2, 1, "c.nrfy_pwm_sequence_set", "nrfy_pwm_sequence_set"], [113, 2, 1, "c.nrfy_pwm_shorts_disable", "nrfy_pwm_shorts_disable"], [113, 2, 1, "c.nrfy_pwm_shorts_enable", "nrfy_pwm_shorts_enable"], [113, 2, 1, "c.nrfy_pwm_shorts_set", "nrfy_pwm_shorts_set"], [113, 2, 1, "c.nrfy_pwm_start", "nrfy_pwm_start"], [113, 2, 1, "c.nrfy_pwm_subscribe_clear", "nrfy_pwm_subscribe_clear"], [113, 2, 1, "c.nrfy_pwm_subscribe_set", "nrfy_pwm_subscribe_set"], [113, 2, 1, "c.nrfy_pwm_task_address_get", "nrfy_pwm_task_address_get"], [113, 2, 1, "c.nrfy_pwm_task_trigger", "nrfy_pwm_task_trigger"], [117, 2, 1, "c.nrfy_qdec_a_pin_get", "nrfy_qdec_a_pin_get"], [117, 2, 1, "c.nrfy_qdec_acc_get", "nrfy_qdec_acc_get"], [117, 2, 1, "c.nrfy_qdec_accdbl_get", "nrfy_qdec_accdbl_get"], [117, 2, 1, "c.nrfy_qdec_accdblread_get", "nrfy_qdec_accdblread_get"], [117, 2, 1, "c.nrfy_qdec_accread_get", "nrfy_qdec_accread_get"], [117, 2, 1, "c.nrfy_qdec_accumulators_read", "nrfy_qdec_accumulators_read"], [117, 2, 1, "c.nrfy_qdec_b_pin_get", "nrfy_qdec_b_pin_get"], [117, 5, 1, "c.nrfy_qdec_config_t", "nrfy_qdec_config_t"], [117, 2, 1, "c.nrfy_qdec_dbfen_disable", "nrfy_qdec_dbfen_disable"], [117, 2, 1, "c.nrfy_qdec_dbfen_enable", "nrfy_qdec_dbfen_enable"], [117, 2, 1, "c.nrfy_qdec_dbfen_get", "nrfy_qdec_dbfen_get"], [117, 2, 1, "c.nrfy_qdec_disable", "nrfy_qdec_disable"], [117, 2, 1, "c.nrfy_qdec_enable", "nrfy_qdec_enable"], [117, 2, 1, "c.nrfy_qdec_enable_get", "nrfy_qdec_enable_get"], [117, 2, 1, "c.nrfy_qdec_event_address_get", "nrfy_qdec_event_address_get"], [117, 2, 1, "c.nrfy_qdec_event_check", "nrfy_qdec_event_check"], [117, 2, 1, "c.nrfy_qdec_event_clear", "nrfy_qdec_event_clear"], [117, 2, 1, "c.nrfy_qdec_events_process", "nrfy_qdec_events_process"], [117, 2, 1, "c.nrfy_qdec_int_disable", "nrfy_qdec_int_disable"], [117, 2, 1, "c.nrfy_qdec_int_enable", "nrfy_qdec_int_enable"], [117, 2, 1, "c.nrfy_qdec_int_enable_check", "nrfy_qdec_int_enable_check"], [117, 2, 1, "c.nrfy_qdec_int_init", "nrfy_qdec_int_init"], [117, 2, 1, "c.nrfy_qdec_int_uninit", "nrfy_qdec_int_uninit"], [117, 2, 1, "c.nrfy_qdec_led_pin_get", "nrfy_qdec_led_pin_get"], [117, 2, 1, "c.nrfy_qdec_ledpol_get", "nrfy_qdec_ledpol_get"], [117, 2, 1, "c.nrfy_qdec_ledpol_set", "nrfy_qdec_ledpol_set"], [117, 2, 1, "c.nrfy_qdec_ledpre_get", "nrfy_qdec_ledpre_get"], [117, 2, 1, "c.nrfy_qdec_ledpre_set", "nrfy_qdec_ledpre_set"], [117, 2, 1, "c.nrfy_qdec_periph_configure", "nrfy_qdec_periph_configure"], [117, 2, 1, "c.nrfy_qdec_pins_get", "nrfy_qdec_pins_get"], [117, 2, 1, "c.nrfy_qdec_pins_set", "nrfy_qdec_pins_set"], [117, 5, 1, "c.nrfy_qdec_pins_t", "nrfy_qdec_pins_t"], [117, 2, 1, "c.nrfy_qdec_reportper_get", "nrfy_qdec_reportper_get"], [117, 2, 1, "c.nrfy_qdec_reportper_set", "nrfy_qdec_reportper_set"], [117, 2, 1, "c.nrfy_qdec_reportper_to_value", "nrfy_qdec_reportper_to_value"], [117, 2, 1, "c.nrfy_qdec_sample_get", "nrfy_qdec_sample_get"], [117, 2, 1, "c.nrfy_qdec_sampleper_get", "nrfy_qdec_sampleper_get"], [117, 2, 1, "c.nrfy_qdec_sampleper_set", "nrfy_qdec_sampleper_set"], [117, 2, 1, "c.nrfy_qdec_sampleper_to_value", "nrfy_qdec_sampleper_to_value"], [117, 2, 1, "c.nrfy_qdec_shorts_disable", "nrfy_qdec_shorts_disable"], [117, 2, 1, "c.nrfy_qdec_shorts_enable", "nrfy_qdec_shorts_enable"], [117, 2, 1, "c.nrfy_qdec_task_address_get", "nrfy_qdec_task_address_get"], [117, 2, 1, "c.nrfy_qdec_task_trigger", "nrfy_qdec_task_trigger"], [135, 2, 1, "c.nrfy_rramc_buffer_read", "nrfy_rramc_buffer_read"], [135, 2, 1, "c.nrfy_rramc_byte_read", "nrfy_rramc_byte_read"], [135, 2, 1, "c.nrfy_rramc_byte_write", "nrfy_rramc_byte_write"], [135, 2, 1, "c.nrfy_rramc_bytes_write", "nrfy_rramc_bytes_write"], [135, 2, 1, "c.nrfy_rramc_config_get", "nrfy_rramc_config_get"], [135, 2, 1, "c.nrfy_rramc_config_set", "nrfy_rramc_config_set"], [135, 5, 1, "c.nrfy_rramc_config_t", "nrfy_rramc_config_t"], [135, 2, 1, "c.nrfy_rramc_configure", "nrfy_rramc_configure"], [135, 2, 1, "c.nrfy_rramc_empty_buffer_check", "nrfy_rramc_empty_buffer_check"], [135, 2, 1, "c.nrfy_rramc_erase_all_check", "nrfy_rramc_erase_all_check"], [135, 2, 1, "c.nrfy_rramc_erase_all_set", "nrfy_rramc_erase_all_set"], [135, 2, 1, "c.nrfy_rramc_error_access_addr_get", "nrfy_rramc_error_access_addr_get"], [135, 2, 1, "c.nrfy_rramc_event_address_get", "nrfy_rramc_event_address_get"], [135, 2, 1, "c.nrfy_rramc_event_check", "nrfy_rramc_event_check"], [135, 2, 1, "c.nrfy_rramc_event_clear", "nrfy_rramc_event_clear"], [135, 2, 1, "c.nrfy_rramc_events_process", "nrfy_rramc_events_process"], [135, 2, 1, "c.nrfy_rramc_int_disable", "nrfy_rramc_int_disable"], [135, 2, 1, "c.nrfy_rramc_int_enable", "nrfy_rramc_int_enable"], [135, 2, 1, "c.nrfy_rramc_int_enable_check", "nrfy_rramc_int_enable_check"], [135, 2, 1, "c.nrfy_rramc_int_init", "nrfy_rramc_int_init"], [135, 2, 1, "c.nrfy_rramc_int_uninit", "nrfy_rramc_int_uninit"], [135, 2, 1, "c.nrfy_rramc_otp_word_read", "nrfy_rramc_otp_word_read"], [135, 2, 1, "c.nrfy_rramc_otp_word_write", "nrfy_rramc_otp_word_write"], [135, 2, 1, "c.nrfy_rramc_power_config_get", "nrfy_rramc_power_config_get"], [135, 2, 1, "c.nrfy_rramc_power_config_set", "nrfy_rramc_power_config_set"], [135, 2, 1, "c.nrfy_rramc_publish_clear", "nrfy_rramc_publish_clear"], [135, 2, 1, "c.nrfy_rramc_publish_set", "nrfy_rramc_publish_set"], [135, 2, 1, "c.nrfy_rramc_ready_check", "nrfy_rramc_ready_check"], [135, 2, 1, "c.nrfy_rramc_ready_next_timeout_get", "nrfy_rramc_ready_next_timeout_get"], [135, 2, 1, "c.nrfy_rramc_ready_next_timeout_set", "nrfy_rramc_ready_next_timeout_set"], [135, 2, 1, "c.nrfy_rramc_subscribe_clear", "nrfy_rramc_subscribe_clear"], [135, 2, 1, "c.nrfy_rramc_subscribe_set", "nrfy_rramc_subscribe_set"], [135, 2, 1, "c.nrfy_rramc_task_address_get", "nrfy_rramc_task_address_get"], [135, 2, 1, "c.nrfy_rramc_task_trigger", "nrfy_rramc_task_trigger"], [135, 2, 1, "c.nrfy_rramc_word_read", "nrfy_rramc_word_read"], [135, 2, 1, "c.nrfy_rramc_word_write", "nrfy_rramc_word_write"], [135, 2, 1, "c.nrfy_rramc_words_write", "nrfy_rramc_words_write"], [135, 2, 1, "c.nrfy_rramc_write_ready_check", "nrfy_rramc_write_ready_check"], [139, 2, 1, "c.nrfy_rtc_capture_task_get", "nrfy_rtc_capture_task_get"], [139, 2, 1, "c.nrfy_rtc_cc_get", "nrfy_rtc_cc_get"], [139, 2, 1, "c.nrfy_rtc_cc_set", "nrfy_rtc_cc_set"], [139, 2, 1, "c.nrfy_rtc_compare_event_get", "nrfy_rtc_compare_event_get"], [139, 5, 1, "c.nrfy_rtc_config_t", "nrfy_rtc_config_t"], [139, 2, 1, "c.nrfy_rtc_counter_get", "nrfy_rtc_counter_get"], [139, 2, 1, "c.nrfy_rtc_event_address_get", "nrfy_rtc_event_address_get"], [139, 2, 1, "c.nrfy_rtc_event_check", "nrfy_rtc_event_check"], [139, 2, 1, "c.nrfy_rtc_event_clear", "nrfy_rtc_event_clear"], [139, 2, 1, "c.nrfy_rtc_event_disable", "nrfy_rtc_event_disable"], [139, 2, 1, "c.nrfy_rtc_event_enable", "nrfy_rtc_event_enable"], [139, 2, 1, "c.nrfy_rtc_event_int_clear_enable", "nrfy_rtc_event_int_clear_enable"], [139, 2, 1, "c.nrfy_rtc_event_int_disable", "nrfy_rtc_event_int_disable"], [139, 2, 1, "c.nrfy_rtc_events_process", "nrfy_rtc_events_process"], [139, 2, 1, "c.nrfy_rtc_int_disable", "nrfy_rtc_int_disable"], [139, 2, 1, "c.nrfy_rtc_int_enable", "nrfy_rtc_int_enable"], [139, 2, 1, "c.nrfy_rtc_int_enable_check", "nrfy_rtc_int_enable_check"], [139, 2, 1, "c.nrfy_rtc_int_init", "nrfy_rtc_int_init"], [139, 2, 1, "c.nrfy_rtc_int_uninit", "nrfy_rtc_int_uninit"], [139, 2, 1, "c.nrfy_rtc_periph_configure", "nrfy_rtc_periph_configure"], [139, 2, 1, "c.nrfy_rtc_prescaler_get", "nrfy_rtc_prescaler_get"], [139, 2, 1, "c.nrfy_rtc_prescaler_set", "nrfy_rtc_prescaler_set"], [139, 2, 1, "c.nrfy_rtc_publish_clear", "nrfy_rtc_publish_clear"], [139, 2, 1, "c.nrfy_rtc_publish_set", "nrfy_rtc_publish_set"], [139, 2, 1, "c.nrfy_rtc_stop", "nrfy_rtc_stop"], [139, 2, 1, "c.nrfy_rtc_subscribe_clear", "nrfy_rtc_subscribe_clear"], [139, 2, 1, "c.nrfy_rtc_subscribe_set", "nrfy_rtc_subscribe_set"], [139, 2, 1, "c.nrfy_rtc_task_address_get", "nrfy_rtc_task_address_get"], [139, 2, 1, "c.nrfy_rtc_task_trigger", "nrfy_rtc_task_trigger"], [143, 2, 1, "c.nrfy_saadc_abort", "nrfy_saadc_abort"], [143, 2, 1, "c.nrfy_saadc_amount_get", "nrfy_saadc_amount_get"], [143, 2, 1, "c.nrfy_saadc_buffer_init", "nrfy_saadc_buffer_init"], [143, 2, 1, "c.nrfy_saadc_buffer_latch", "nrfy_saadc_buffer_latch"], [143, 2, 1, "c.nrfy_saadc_buffer_pointer_get", "nrfy_saadc_buffer_pointer_get"], [143, 2, 1, "c.nrfy_saadc_buffer_pointer_set", "nrfy_saadc_buffer_pointer_set"], [143, 2, 1, "c.nrfy_saadc_buffer_set", "nrfy_saadc_buffer_set"], [143, 5, 1, "c.nrfy_saadc_buffer_t", "nrfy_saadc_buffer_t"], [143, 2, 1, "c.nrfy_saadc_burst_set", "nrfy_saadc_burst_set"], [143, 2, 1, "c.nrfy_saadc_busy_check", "nrfy_saadc_busy_check"], [143, 2, 1, "c.nrfy_saadc_calibrate", "nrfy_saadc_calibrate"], [143, 2, 1, "c.nrfy_saadc_channel_configure", "nrfy_saadc_channel_configure"], [143, 2, 1, "c.nrfy_saadc_channel_init", "nrfy_saadc_channel_init"], [143, 2, 1, "c.nrfy_saadc_channel_input_set", "nrfy_saadc_channel_input_set"], [143, 5, 1, "c.nrfy_saadc_channel_input_t", "nrfy_saadc_channel_input_t"], [143, 2, 1, "c.nrfy_saadc_channel_limits_set", "nrfy_saadc_channel_limits_set"], [143, 2, 1, "c.nrfy_saadc_channel_pos_input_set", "nrfy_saadc_channel_pos_input_set"], [143, 5, 1, "c.nrfy_saadc_config_t", "nrfy_saadc_config_t"], [143, 2, 1, "c.nrfy_saadc_continuous_mode_disable", "nrfy_saadc_continuous_mode_disable"], [143, 2, 1, "c.nrfy_saadc_continuous_mode_enable", "nrfy_saadc_continuous_mode_enable"], [143, 2, 1, "c.nrfy_saadc_continuous_mode_enable_check", "nrfy_saadc_continuous_mode_enable_check"], [143, 2, 1, "c.nrfy_saadc_disable", "nrfy_saadc_disable"], [143, 2, 1, "c.nrfy_saadc_enable", "nrfy_saadc_enable"], [143, 2, 1, "c.nrfy_saadc_enable_check", "nrfy_saadc_enable_check"], [143, 2, 1, "c.nrfy_saadc_event_address_get", "nrfy_saadc_event_address_get"], [143, 2, 1, "c.nrfy_saadc_event_check", "nrfy_saadc_event_check"], [143, 2, 1, "c.nrfy_saadc_event_clear", "nrfy_saadc_event_clear"], [143, 2, 1, "c.nrfy_saadc_events_process", "nrfy_saadc_events_process"], [143, 2, 1, "c.nrfy_saadc_int_disable", "nrfy_saadc_int_disable"], [143, 2, 1, "c.nrfy_saadc_int_enable", "nrfy_saadc_int_enable"], [143, 2, 1, "c.nrfy_saadc_int_enable_check", "nrfy_saadc_int_enable_check"], [143, 2, 1, "c.nrfy_saadc_int_init", "nrfy_saadc_int_init"], [143, 2, 1, "c.nrfy_saadc_int_set", "nrfy_saadc_int_set"], [143, 2, 1, "c.nrfy_saadc_int_uninit", "nrfy_saadc_int_uninit"], [143, 2, 1, "c.nrfy_saadc_limit_event_get", "nrfy_saadc_limit_event_get"], [143, 2, 1, "c.nrfy_saadc_limit_int_get", "nrfy_saadc_limit_int_get"], [143, 2, 1, "c.nrfy_saadc_oversample_get", "nrfy_saadc_oversample_get"], [143, 2, 1, "c.nrfy_saadc_oversample_sample_count_get", "nrfy_saadc_oversample_sample_count_get"], [143, 2, 1, "c.nrfy_saadc_oversample_set", "nrfy_saadc_oversample_set"], [143, 2, 1, "c.nrfy_saadc_periph_configure", "nrfy_saadc_periph_configure"], [143, 2, 1, "c.nrfy_saadc_publish_clear", "nrfy_saadc_publish_clear"], [143, 2, 1, "c.nrfy_saadc_publish_set", "nrfy_saadc_publish_set"], [143, 2, 1, "c.nrfy_saadc_resolution_get", "nrfy_saadc_resolution_get"], [143, 2, 1, "c.nrfy_saadc_resolution_set", "nrfy_saadc_resolution_set"], [143, 2, 1, "c.nrfy_saadc_sample_start", "nrfy_saadc_sample_start"], [143, 2, 1, "c.nrfy_saadc_stop", "nrfy_saadc_stop"], [143, 2, 1, "c.nrfy_saadc_subscribe_clear", "nrfy_saadc_subscribe_clear"], [143, 2, 1, "c.nrfy_saadc_subscribe_set", "nrfy_saadc_subscribe_set"], [143, 2, 1, "c.nrfy_saadc_task_address_get", "nrfy_saadc_task_address_get"], [143, 2, 1, "c.nrfy_saadc_task_trigger", "nrfy_saadc_task_trigger"], [143, 2, 1, "c.nrfy_saadc_value_max_get", "nrfy_saadc_value_max_get"], [143, 2, 1, "c.nrfy_saadc_value_min_get", "nrfy_saadc_value_min_get"], [150, 2, 1, "c.nrfy_spim_abort", "nrfy_spim_abort"], [150, 2, 1, "c.nrfy_spim_buffers_set", "nrfy_spim_buffers_set"], [150, 5, 1, "c.nrfy_spim_config_t", "nrfy_spim_config_t"], [150, 2, 1, "c.nrfy_spim_configure", "nrfy_spim_configure"], [150, 2, 1, "c.nrfy_spim_csn_configure", "nrfy_spim_csn_configure"], [150, 2, 1, "c.nrfy_spim_csn_pin_get", "nrfy_spim_csn_pin_get"], [150, 2, 1, "c.nrfy_spim_dcx_cnt_set", "nrfy_spim_dcx_cnt_set"], [150, 2, 1, "c.nrfy_spim_dcx_pin_get", "nrfy_spim_dcx_pin_get"], [150, 2, 1, "c.nrfy_spim_dcx_pin_set", "nrfy_spim_dcx_pin_set"], [150, 2, 1, "c.nrfy_spim_disable", "nrfy_spim_disable"], [150, 2, 1, "c.nrfy_spim_enable", "nrfy_spim_enable"], [150, 2, 1, "c.nrfy_spim_event_address_get", "nrfy_spim_event_address_get"], [150, 2, 1, "c.nrfy_spim_event_check", "nrfy_spim_event_check"], [150, 2, 1, "c.nrfy_spim_event_clear", "nrfy_spim_event_clear"], [150, 2, 1, "c.nrfy_spim_events_process", "nrfy_spim_events_process"], [150, 5, 1, "c.nrfy_spim_ext_config_t", "nrfy_spim_ext_config_t"], [150, 2, 1, "c.nrfy_spim_ext_pins_get", "nrfy_spim_ext_pins_get"], [150, 5, 1, "c.nrfy_spim_ext_pins_t", "nrfy_spim_ext_pins_t"], [150, 2, 1, "c.nrfy_spim_frequency_set", "nrfy_spim_frequency_set"], [150, 2, 1, "c.nrfy_spim_iftiming_set", "nrfy_spim_iftiming_set"], [150, 2, 1, "c.nrfy_spim_int_disable", "nrfy_spim_int_disable"], [150, 2, 1, "c.nrfy_spim_int_enable", "nrfy_spim_int_enable"], [150, 2, 1, "c.nrfy_spim_int_enable_check", "nrfy_spim_int_enable_check"], [150, 2, 1, "c.nrfy_spim_int_init", "nrfy_spim_int_init"], [150, 2, 1, "c.nrfy_spim_int_uninit", "nrfy_spim_int_uninit"], [150, 2, 1, "c.nrfy_spim_miso_pin_get", "nrfy_spim_miso_pin_get"], [150, 2, 1, "c.nrfy_spim_mosi_pin_get", "nrfy_spim_mosi_pin_get"], [150, 2, 1, "c.nrfy_spim_orc_set", "nrfy_spim_orc_set"], [150, 2, 1, "c.nrfy_spim_periph_configure", "nrfy_spim_periph_configure"], [150, 2, 1, "c.nrfy_spim_pins_get", "nrfy_spim_pins_get"], [150, 2, 1, "c.nrfy_spim_pins_set", "nrfy_spim_pins_set"], [150, 5, 1, "c.nrfy_spim_pins_t", "nrfy_spim_pins_t"], [150, 2, 1, "c.nrfy_spim_prescaler_get", "nrfy_spim_prescaler_get"], [150, 2, 1, "c.nrfy_spim_prescaler_set", "nrfy_spim_prescaler_set"], [150, 2, 1, "c.nrfy_spim_publish_clear", "nrfy_spim_publish_clear"], [150, 2, 1, "c.nrfy_spim_publish_set", "nrfy_spim_publish_set"], [150, 2, 1, "c.nrfy_spim_rx_amount_get", "nrfy_spim_rx_amount_get"], [150, 2, 1, "c.nrfy_spim_rx_buffer_set", "nrfy_spim_rx_buffer_set"], [150, 2, 1, "c.nrfy_spim_rx_list_set", "nrfy_spim_rx_list_set"], [150, 2, 1, "c.nrfy_spim_rx_maxcnt_get", "nrfy_spim_rx_maxcnt_get"], [150, 2, 1, "c.nrfy_spim_sck_pin_get", "nrfy_spim_sck_pin_get"], [150, 2, 1, "c.nrfy_spim_shorts_disable", "nrfy_spim_shorts_disable"], [150, 2, 1, "c.nrfy_spim_shorts_enable", "nrfy_spim_shorts_enable"], [150, 2, 1, "c.nrfy_spim_shorts_get", "nrfy_spim_shorts_get"], [150, 2, 1, "c.nrfy_spim_stallstat_rx_clear", "nrfy_spim_stallstat_rx_clear"], [150, 2, 1, "c.nrfy_spim_stallstat_rx_get", "nrfy_spim_stallstat_rx_get"], [150, 2, 1, "c.nrfy_spim_stallstat_tx_clear", "nrfy_spim_stallstat_tx_clear"], [150, 2, 1, "c.nrfy_spim_stallstat_tx_get", "nrfy_spim_stallstat_tx_get"], [150, 2, 1, "c.nrfy_spim_subscribe_clear", "nrfy_spim_subscribe_clear"], [150, 2, 1, "c.nrfy_spim_subscribe_set", "nrfy_spim_subscribe_set"], [150, 2, 1, "c.nrfy_spim_task_address_get", "nrfy_spim_task_address_get"], [150, 2, 1, "c.nrfy_spim_task_trigger", "nrfy_spim_task_trigger"], [150, 2, 1, "c.nrfy_spim_tx_amount_get", "nrfy_spim_tx_amount_get"], [150, 2, 1, "c.nrfy_spim_tx_buffer_set", "nrfy_spim_tx_buffer_set"], [150, 2, 1, "c.nrfy_spim_tx_list_set", "nrfy_spim_tx_list_set"], [150, 2, 1, "c.nrfy_spim_tx_maxcnt_get", "nrfy_spim_tx_maxcnt_get"], [150, 5, 1, "c.nrfy_spim_xfer_desc_t", "nrfy_spim_xfer_desc_t"], [150, 2, 1, "c.nrfy_spim_xfer_start", "nrfy_spim_xfer_start"], [166, 2, 1, "c.nrfy_tbm_configure", "nrfy_tbm_configure"], [166, 2, 1, "c.nrfy_tbm_count_get", "nrfy_tbm_count_get"], [166, 2, 1, "c.nrfy_tbm_event_check", "nrfy_tbm_event_check"], [166, 2, 1, "c.nrfy_tbm_event_clear", "nrfy_tbm_event_clear"], [166, 2, 1, "c.nrfy_tbm_events_process", "nrfy_tbm_events_process"], [166, 2, 1, "c.nrfy_tbm_int_disable", "nrfy_tbm_int_disable"], [166, 2, 1, "c.nrfy_tbm_int_enable", "nrfy_tbm_int_enable"], [166, 2, 1, "c.nrfy_tbm_int_enable_check", "nrfy_tbm_int_enable_check"], [166, 2, 1, "c.nrfy_tbm_int_init", "nrfy_tbm_int_init"], [166, 2, 1, "c.nrfy_tbm_int_uninit", "nrfy_tbm_int_uninit"], [166, 2, 1, "c.nrfy_tbm_task_trigger", "nrfy_tbm_task_trigger"], [172, 2, 1, "c.nrfy_temp_calibration_coeff_get", "nrfy_temp_calibration_coeff_get"], [172, 2, 1, "c.nrfy_temp_calibration_coeff_set", "nrfy_temp_calibration_coeff_set"], [172, 2, 1, "c.nrfy_temp_event_address_get", "nrfy_temp_event_address_get"], [172, 2, 1, "c.nrfy_temp_event_check", "nrfy_temp_event_check"], [172, 2, 1, "c.nrfy_temp_event_clear", "nrfy_temp_event_clear"], [172, 2, 1, "c.nrfy_temp_int_disable", "nrfy_temp_int_disable"], [172, 2, 1, "c.nrfy_temp_int_enable", "nrfy_temp_int_enable"], [172, 2, 1, "c.nrfy_temp_int_enable_check", "nrfy_temp_int_enable_check"], [172, 2, 1, "c.nrfy_temp_int_init", "nrfy_temp_int_init"], [172, 2, 1, "c.nrfy_temp_int_uninit", "nrfy_temp_int_uninit"], [172, 2, 1, "c.nrfy_temp_publish_clear", "nrfy_temp_publish_clear"], [172, 2, 1, "c.nrfy_temp_publish_set", "nrfy_temp_publish_set"], [172, 2, 1, "c.nrfy_temp_result_get", "nrfy_temp_result_get"], [172, 2, 1, "c.nrfy_temp_subscribe_clear", "nrfy_temp_subscribe_clear"], [172, 2, 1, "c.nrfy_temp_subscribe_set", "nrfy_temp_subscribe_set"], [172, 2, 1, "c.nrfy_temp_task_address_get", "nrfy_temp_task_address_get"], [172, 2, 1, "c.nrfy_temp_task_trigger", "nrfy_temp_task_trigger"], [176, 2, 1, "c.nrfy_timer_bit_width_get", "nrfy_timer_bit_width_get"], [176, 2, 1, "c.nrfy_timer_bit_width_set", "nrfy_timer_bit_width_set"], [176, 2, 1, "c.nrfy_timer_capture_get", "nrfy_timer_capture_get"], [176, 2, 1, "c.nrfy_timer_capture_task_get", "nrfy_timer_capture_task_get"], [176, 2, 1, "c.nrfy_timer_cc_get", "nrfy_timer_cc_get"], [176, 2, 1, "c.nrfy_timer_cc_set", "nrfy_timer_cc_set"], [176, 2, 1, "c.nrfy_timer_compare_event_get", "nrfy_timer_compare_event_get"], [176, 2, 1, "c.nrfy_timer_compare_int_get", "nrfy_timer_compare_int_get"], [176, 5, 1, "c.nrfy_timer_config_t", "nrfy_timer_config_t"], [176, 2, 1, "c.nrfy_timer_event_address_get", "nrfy_timer_event_address_get"], [176, 2, 1, "c.nrfy_timer_event_check", "nrfy_timer_event_check"], [176, 2, 1, "c.nrfy_timer_event_clear", "nrfy_timer_event_clear"], [176, 2, 1, "c.nrfy_timer_events_process", "nrfy_timer_events_process"], [176, 2, 1, "c.nrfy_timer_int_disable", "nrfy_timer_int_disable"], [176, 2, 1, "c.nrfy_timer_int_enable", "nrfy_timer_int_enable"], [176, 2, 1, "c.nrfy_timer_int_enable_check", "nrfy_timer_int_enable_check"], [176, 2, 1, "c.nrfy_timer_int_init", "nrfy_timer_int_init"], [176, 2, 1, "c.nrfy_timer_int_uninit", "nrfy_timer_int_uninit"], [176, 2, 1, "c.nrfy_timer_mode_get", "nrfy_timer_mode_get"], [176, 2, 1, "c.nrfy_timer_mode_set", "nrfy_timer_mode_set"], [176, 2, 1, "c.nrfy_timer_one_shot_disable", "nrfy_timer_one_shot_disable"], [176, 2, 1, "c.nrfy_timer_one_shot_enable", "nrfy_timer_one_shot_enable"], [176, 2, 1, "c.nrfy_timer_periph_configure", "nrfy_timer_periph_configure"], [176, 2, 1, "c.nrfy_timer_prescaler_get", "nrfy_timer_prescaler_get"], [176, 2, 1, "c.nrfy_timer_prescaler_set", "nrfy_timer_prescaler_set"], [176, 2, 1, "c.nrfy_timer_publish_clear", "nrfy_timer_publish_clear"], [176, 2, 1, "c.nrfy_timer_publish_set", "nrfy_timer_publish_set"], [176, 2, 1, "c.nrfy_timer_shorts_disable", "nrfy_timer_shorts_disable"], [176, 2, 1, "c.nrfy_timer_shorts_enable", "nrfy_timer_shorts_enable"], [176, 2, 1, "c.nrfy_timer_shorts_set", "nrfy_timer_shorts_set"], [176, 2, 1, "c.nrfy_timer_subscribe_clear", "nrfy_timer_subscribe_clear"], [176, 2, 1, "c.nrfy_timer_subscribe_set", "nrfy_timer_subscribe_set"], [176, 2, 1, "c.nrfy_timer_task_address_get", "nrfy_timer_task_address_get"], [176, 2, 1, "c.nrfy_timer_task_trigger", "nrfy_timer_task_trigger"], [183, 2, 1, "c.nrfy_twim_abort", "nrfy_twim_abort"], [183, 2, 1, "c.nrfy_twim_address_set", "nrfy_twim_address_set"], [183, 5, 1, "c.nrfy_twim_config_t", "nrfy_twim_config_t"], [183, 2, 1, "c.nrfy_twim_disable", "nrfy_twim_disable"], [183, 2, 1, "c.nrfy_twim_enable", "nrfy_twim_enable"], [183, 2, 1, "c.nrfy_twim_errorsrc_get_and_clear", "nrfy_twim_errorsrc_get_and_clear"], [183, 2, 1, "c.nrfy_twim_event_address_get", "nrfy_twim_event_address_get"], [183, 2, 1, "c.nrfy_twim_event_check", "nrfy_twim_event_check"], [183, 2, 1, "c.nrfy_twim_event_clear", "nrfy_twim_event_clear"], [183, 2, 1, "c.nrfy_twim_events_process", "nrfy_twim_events_process"], [183, 2, 1, "c.nrfy_twim_frequency_set", "nrfy_twim_frequency_set"], [183, 2, 1, "c.nrfy_twim_int_disable", "nrfy_twim_int_disable"], [183, 2, 1, "c.nrfy_twim_int_enable", "nrfy_twim_int_enable"], [183, 2, 1, "c.nrfy_twim_int_enable_check", "nrfy_twim_int_enable_check"], [183, 2, 1, "c.nrfy_twim_int_init", "nrfy_twim_int_init"], [183, 2, 1, "c.nrfy_twim_int_uninit", "nrfy_twim_int_uninit"], [183, 2, 1, "c.nrfy_twim_periph_configure", "nrfy_twim_periph_configure"], [183, 2, 1, "c.nrfy_twim_pins_get", "nrfy_twim_pins_get"], [183, 2, 1, "c.nrfy_twim_pins_set", "nrfy_twim_pins_set"], [183, 5, 1, "c.nrfy_twim_pins_t", "nrfy_twim_pins_t"], [183, 2, 1, "c.nrfy_twim_publish_clear", "nrfy_twim_publish_clear"], [183, 2, 1, "c.nrfy_twim_publish_set", "nrfy_twim_publish_set"], [183, 2, 1, "c.nrfy_twim_rx_buffer_set", "nrfy_twim_rx_buffer_set"], [183, 2, 1, "c.nrfy_twim_rx_list_disable", "nrfy_twim_rx_list_disable"], [183, 2, 1, "c.nrfy_twim_rx_list_enable", "nrfy_twim_rx_list_enable"], [183, 2, 1, "c.nrfy_twim_rx_list_set", "nrfy_twim_rx_list_set"], [183, 2, 1, "c.nrfy_twim_rx_start", "nrfy_twim_rx_start"], [183, 2, 1, "c.nrfy_twim_rxd_amount_get", "nrfy_twim_rxd_amount_get"], [183, 2, 1, "c.nrfy_twim_scl_pin_get", "nrfy_twim_scl_pin_get"], [183, 2, 1, "c.nrfy_twim_sda_pin_get", "nrfy_twim_sda_pin_get"], [183, 2, 1, "c.nrfy_twim_shorts_disable", "nrfy_twim_shorts_disable"], [183, 2, 1, "c.nrfy_twim_shorts_enable", "nrfy_twim_shorts_enable"], [183, 2, 1, "c.nrfy_twim_shorts_get", "nrfy_twim_shorts_get"], [183, 2, 1, "c.nrfy_twim_shorts_set", "nrfy_twim_shorts_set"], [183, 2, 1, "c.nrfy_twim_stop", "nrfy_twim_stop"], [183, 2, 1, "c.nrfy_twim_subscribe_clear", "nrfy_twim_subscribe_clear"], [183, 2, 1, "c.nrfy_twim_subscribe_set", "nrfy_twim_subscribe_set"], [183, 2, 1, "c.nrfy_twim_task_address_get", "nrfy_twim_task_address_get"], [183, 2, 1, "c.nrfy_twim_task_trigger", "nrfy_twim_task_trigger"], [183, 2, 1, "c.nrfy_twim_tx_buffer_set", "nrfy_twim_tx_buffer_set"], [183, 2, 1, "c.nrfy_twim_tx_list_disable", "nrfy_twim_tx_list_disable"], [183, 2, 1, "c.nrfy_twim_tx_list_enable", "nrfy_twim_tx_list_enable"], [183, 2, 1, "c.nrfy_twim_tx_list_set", "nrfy_twim_tx_list_set"], [183, 2, 1, "c.nrfy_twim_tx_start", "nrfy_twim_tx_start"], [183, 2, 1, "c.nrfy_twim_txd_amount_get", "nrfy_twim_txd_amount_get"], [183, 5, 1, "c.nrfy_twim_xfer_desc_t", "nrfy_twim_xfer_desc_t"], [193, 2, 1, "c.nrfy_uarte_baudrate_set", "nrfy_uarte_baudrate_set"], [193, 5, 1, "c.nrfy_uarte_buffer_t", "nrfy_uarte_buffer_t"], [193, 5, 1, "c.nrfy_uarte_config_t", "nrfy_uarte_config_t"], [193, 2, 1, "c.nrfy_uarte_configure", "nrfy_uarte_configure"], [193, 2, 1, "c.nrfy_uarte_cts_pin_get", "nrfy_uarte_cts_pin_get"], [193, 2, 1, "c.nrfy_uarte_disable", "nrfy_uarte_disable"], [193, 2, 1, "c.nrfy_uarte_enable", "nrfy_uarte_enable"], [193, 2, 1, "c.nrfy_uarte_enable_check", "nrfy_uarte_enable_check"], [193, 2, 1, "c.nrfy_uarte_errorsrc_get_and_clear", "nrfy_uarte_errorsrc_get_and_clear"], [193, 2, 1, "c.nrfy_uarte_event_address_get", "nrfy_uarte_event_address_get"], [193, 2, 1, "c.nrfy_uarte_event_check", "nrfy_uarte_event_check"], [193, 2, 1, "c.nrfy_uarte_event_clear", "nrfy_uarte_event_clear"], [193, 2, 1, "c.nrfy_uarte_events_process", "nrfy_uarte_events_process"], [193, 2, 1, "c.nrfy_uarte_hwfc_pins_disconnect", "nrfy_uarte_hwfc_pins_disconnect"], [193, 2, 1, "c.nrfy_uarte_hwfc_pins_set", "nrfy_uarte_hwfc_pins_set"], [193, 2, 1, "c.nrfy_uarte_int_disable", "nrfy_uarte_int_disable"], [193, 2, 1, "c.nrfy_uarte_int_enable", "nrfy_uarte_int_enable"], [193, 2, 1, "c.nrfy_uarte_int_enable_check", "nrfy_uarte_int_enable_check"], [193, 2, 1, "c.nrfy_uarte_int_init", "nrfy_uarte_int_init"], [193, 2, 1, "c.nrfy_uarte_int_uninit", "nrfy_uarte_int_uninit"], [193, 2, 1, "c.nrfy_uarte_periph_configure", "nrfy_uarte_periph_configure"], [193, 2, 1, "c.nrfy_uarte_pins_disconnect", "nrfy_uarte_pins_disconnect"], [193, 2, 1, "c.nrfy_uarte_pins_get", "nrfy_uarte_pins_get"], [193, 5, 1, "c.nrfy_uarte_pins_t", "nrfy_uarte_pins_t"], [193, 2, 1, "c.nrfy_uarte_publish_clear", "nrfy_uarte_publish_clear"], [193, 2, 1, "c.nrfy_uarte_publish_set", "nrfy_uarte_publish_set"], [193, 2, 1, "c.nrfy_uarte_rts_pin_get", "nrfy_uarte_rts_pin_get"], [193, 2, 1, "c.nrfy_uarte_rx_amount_get", "nrfy_uarte_rx_amount_get"], [193, 2, 1, "c.nrfy_uarte_rx_buffer_set", "nrfy_uarte_rx_buffer_set"], [193, 2, 1, "c.nrfy_uarte_rx_pin_get", "nrfy_uarte_rx_pin_get"], [193, 2, 1, "c.nrfy_uarte_rx_start", "nrfy_uarte_rx_start"], [193, 2, 1, "c.nrfy_uarte_shorts_disable", "nrfy_uarte_shorts_disable"], [193, 2, 1, "c.nrfy_uarte_shorts_enable", "nrfy_uarte_shorts_enable"], [193, 2, 1, "c.nrfy_uarte_shorts_get", "nrfy_uarte_shorts_get"], [193, 2, 1, "c.nrfy_uarte_shorts_set", "nrfy_uarte_shorts_set"], [193, 2, 1, "c.nrfy_uarte_stop", "nrfy_uarte_stop"], [193, 2, 1, "c.nrfy_uarte_subscribe_clear", "nrfy_uarte_subscribe_clear"], [193, 2, 1, "c.nrfy_uarte_subscribe_set", "nrfy_uarte_subscribe_set"], [193, 2, 1, "c.nrfy_uarte_task_address_get", "nrfy_uarte_task_address_get"], [193, 2, 1, "c.nrfy_uarte_task_trigger", "nrfy_uarte_task_trigger"], [193, 2, 1, "c.nrfy_uarte_tx_abort", "nrfy_uarte_tx_abort"], [193, 2, 1, "c.nrfy_uarte_tx_amount_get", "nrfy_uarte_tx_amount_get"], [193, 2, 1, "c.nrfy_uarte_tx_buffer_get", "nrfy_uarte_tx_buffer_get"], [193, 2, 1, "c.nrfy_uarte_tx_buffer_set", "nrfy_uarte_tx_buffer_set"], [193, 2, 1, "c.nrfy_uarte_tx_pin_get", "nrfy_uarte_tx_pin_get"], [193, 2, 1, "c.nrfy_uarte_tx_start", "nrfy_uarte_tx_start"], [193, 2, 1, "c.nrfy_uarte_txrx_pins_disconnect", "nrfy_uarte_txrx_pins_disconnect"], [193, 2, 1, "c.nrfy_uarte_txrx_pins_set", "nrfy_uarte_txrx_pins_set"], [211, 2, 1, "c.nrfy_vpr_cpurun_get", "nrfy_vpr_cpurun_get"], [211, 2, 1, "c.nrfy_vpr_cpurun_set", "nrfy_vpr_cpurun_set"], [211, 2, 1, "c.nrfy_vpr_debugif_dmcontrol_get", "nrfy_vpr_debugif_dmcontrol_get"], [211, 2, 1, "c.nrfy_vpr_debugif_dmcontrol_set", "nrfy_vpr_debugif_dmcontrol_set"], [211, 2, 1, "c.nrfy_vpr_event_address_get", "nrfy_vpr_event_address_get"], [211, 2, 1, "c.nrfy_vpr_event_check", "nrfy_vpr_event_check"], [211, 2, 1, "c.nrfy_vpr_event_clear", "nrfy_vpr_event_clear"], [211, 2, 1, "c.nrfy_vpr_initpc_get", "nrfy_vpr_initpc_get"], [211, 2, 1, "c.nrfy_vpr_initpc_set", "nrfy_vpr_initpc_set"], [211, 2, 1, "c.nrfy_vpr_int_disable", "nrfy_vpr_int_disable"], [211, 2, 1, "c.nrfy_vpr_int_enable", "nrfy_vpr_int_enable"], [211, 2, 1, "c.nrfy_vpr_int_enable_check", "nrfy_vpr_int_enable_check"], [211, 2, 1, "c.nrfy_vpr_task_address_get", "nrfy_vpr_task_address_get"], [211, 2, 1, "c.nrfy_vpr_task_trigger", "nrfy_vpr_task_trigger"], [211, 2, 1, "c.nrfy_vpr_trigger_task_get", "nrfy_vpr_trigger_task_get"], [211, 2, 1, "c.nrfy_vpr_triggered_event_get", "nrfy_vpr_triggered_event_get"], [217, 2, 1, "c.nrfy_wdt_behaviour_set", "nrfy_wdt_behaviour_set"], [217, 5, 1, "c.nrfy_wdt_config_t", "nrfy_wdt_config_t"], [217, 2, 1, "c.nrfy_wdt_event_address_get", "nrfy_wdt_event_address_get"], [217, 2, 1, "c.nrfy_wdt_event_check", "nrfy_wdt_event_check"], [217, 2, 1, "c.nrfy_wdt_event_clear", "nrfy_wdt_event_clear"], [217, 2, 1, "c.nrfy_wdt_events_process", "nrfy_wdt_events_process"], [217, 2, 1, "c.nrfy_wdt_int_disable", "nrfy_wdt_int_disable"], [217, 2, 1, "c.nrfy_wdt_int_enable", "nrfy_wdt_int_enable"], [217, 2, 1, "c.nrfy_wdt_int_enable_check", "nrfy_wdt_int_enable_check"], [217, 2, 1, "c.nrfy_wdt_int_init", "nrfy_wdt_int_init"], [217, 2, 1, "c.nrfy_wdt_int_uninit", "nrfy_wdt_int_uninit"], [217, 2, 1, "c.nrfy_wdt_periph_configure", "nrfy_wdt_periph_configure"], [217, 2, 1, "c.nrfy_wdt_publish_clear", "nrfy_wdt_publish_clear"], [217, 2, 1, "c.nrfy_wdt_publish_set", "nrfy_wdt_publish_set"], [217, 2, 1, "c.nrfy_wdt_reload_request_disable", "nrfy_wdt_reload_request_disable"], [217, 2, 1, "c.nrfy_wdt_reload_request_enable", "nrfy_wdt_reload_request_enable"], [217, 2, 1, "c.nrfy_wdt_reload_request_enable_check", "nrfy_wdt_reload_request_enable_check"], [217, 2, 1, "c.nrfy_wdt_reload_request_set", "nrfy_wdt_reload_request_set"], [217, 2, 1, "c.nrfy_wdt_reload_value_get", "nrfy_wdt_reload_value_get"], [217, 2, 1, "c.nrfy_wdt_reload_value_set", "nrfy_wdt_reload_value_set"], [217, 2, 1, "c.nrfy_wdt_request_status_check", "nrfy_wdt_request_status_check"], [217, 2, 1, "c.nrfy_wdt_request_status_get", "nrfy_wdt_request_status_get"], [217, 2, 1, "c.nrfy_wdt_started_check", "nrfy_wdt_started_check"], [217, 2, 1, "c.nrfy_wdt_subscribe_clear", "nrfy_wdt_subscribe_clear"], [217, 2, 1, "c.nrfy_wdt_subscribe_set", "nrfy_wdt_subscribe_set"], [217, 2, 1, "c.nrfy_wdt_task_address_get", "nrfy_wdt_task_address_get"], [217, 2, 1, "c.nrfy_wdt_task_stop_enable_set", "nrfy_wdt_task_stop_enable_set"], [217, 2, 1, "c.nrfy_wdt_task_trigger", "nrfy_wdt_task_trigger"]], "nrf_aar_addr_pointer_get": [[2, 3, 1, "c.nrf_aar_addr_pointer_get", "p_reg"]], "nrf_aar_addr_pointer_set": [[2, 3, 1, "c.nrf_aar_addr_pointer_set", "addr_ptr"], [2, 3, 1, "c.nrf_aar_addr_pointer_set", "p_reg"]], "nrf_aar_disable": [[2, 3, 1, "c.nrf_aar_disable", "p_reg"]], "nrf_aar_enable": [[2, 3, 1, "c.nrf_aar_enable", "p_reg"]], "nrf_aar_error_get": [[2, 3, 1, "c.nrf_aar_error_get", "p_reg"]], "nrf_aar_error_t": [[2, 1, 1, "c.nrf_aar_error_t.NRF_AAR_ERROR_DMA_ERROR", "NRF_AAR_ERROR_DMA_ERROR"], [2, 1, 1, "c.nrf_aar_error_t.NRF_AAR_ERROR_NO_ERROR", "NRF_AAR_ERROR_NO_ERROR"], [2, 1, 1, "c.nrf_aar_error_t.NRF_AAR_ERROR_PREMATURE_INPTR_END", "NRF_AAR_ERROR_PREMATURE_INPTR_END"], [2, 1, 1, "c.nrf_aar_error_t.NRF_AAR_ERROR_PREMATURE_OUTPTR_END", "NRF_AAR_ERROR_PREMATURE_OUTPTR_END"]], "nrf_aar_event_address_get": [[2, 3, 1, "c.nrf_aar_event_address_get", "event"], [2, 3, 1, "c.nrf_aar_event_address_get", "p_reg"]], "nrf_aar_event_check": [[2, 3, 1, "c.nrf_aar_event_check", "event"], [2, 3, 1, "c.nrf_aar_event_check", "p_reg"]], "nrf_aar_event_clear": [[2, 3, 1, "c.nrf_aar_event_clear", "event"], [2, 3, 1, "c.nrf_aar_event_clear", "p_reg"]], "nrf_aar_event_t": [[2, 1, 1, "c.nrf_aar_event_t.NRF_AAR_EVENT_END", "NRF_AAR_EVENT_END"], [2, 1, 1, "c.nrf_aar_event_t.NRF_AAR_EVENT_ERROR", "NRF_AAR_EVENT_ERROR"], [2, 1, 1, "c.nrf_aar_event_t.NRF_AAR_EVENT_NOTRESOLVED", "NRF_AAR_EVENT_NOTRESOLVED"], [2, 1, 1, "c.nrf_aar_event_t.NRF_AAR_EVENT_RESOLVED", "NRF_AAR_EVENT_RESOLVED"]], "nrf_aar_in_ptr_get": [[2, 3, 1, "c.nrf_aar_in_ptr_get", "p_reg"]], "nrf_aar_in_ptr_set": [[2, 3, 1, "c.nrf_aar_in_ptr_set", "p_job"], [2, 3, 1, "c.nrf_aar_in_ptr_set", "p_reg"]], "nrf_aar_int_disable": [[2, 3, 1, "c.nrf_aar_int_disable", "mask"], [2, 3, 1, "c.nrf_aar_int_disable", "p_reg"]], "nrf_aar_int_enable": [[2, 3, 1, "c.nrf_aar_int_enable", "mask"], [2, 3, 1, "c.nrf_aar_int_enable", "p_reg"]], "nrf_aar_int_enable_check": [[2, 3, 1, "c.nrf_aar_int_enable_check", "mask"], [2, 3, 1, "c.nrf_aar_int_enable_check", "p_reg"]], "nrf_aar_int_mask_t": [[2, 1, 1, "c.nrf_aar_int_mask_t.NRF_AAR_INT_END_MASK", "NRF_AAR_INT_END_MASK"], [2, 1, 1, "c.nrf_aar_int_mask_t.NRF_AAR_INT_ERROR_MASK", "NRF_AAR_INT_ERROR_MASK"], [2, 1, 1, "c.nrf_aar_int_mask_t.NRF_AAR_INT_NOTRESOLVED_MASK", "NRF_AAR_INT_NOTRESOLVED_MASK"], [2, 1, 1, "c.nrf_aar_int_mask_t.NRF_AAR_INT_RESOLVED_MASK", "NRF_AAR_INT_RESOLVED_MASK"]], "nrf_aar_irk_number_get": [[2, 3, 1, "c.nrf_aar_irk_number_get", "p_reg"]], "nrf_aar_irk_number_set": [[2, 3, 1, "c.nrf_aar_irk_number_set", "irk_num"], [2, 3, 1, "c.nrf_aar_irk_number_set", "p_reg"]], "nrf_aar_irk_pointer_get": [[2, 3, 1, "c.nrf_aar_irk_pointer_get", "p_reg"]], "nrf_aar_irk_pointer_set": [[2, 3, 1, "c.nrf_aar_irk_pointer_set", "irk_ptr"], [2, 3, 1, "c.nrf_aar_irk_pointer_set", "p_reg"]], "nrf_aar_maxresolved_get": [[2, 3, 1, "c.nrf_aar_maxresolved_get", "p_reg"]], "nrf_aar_maxresolved_set": [[2, 3, 1, "c.nrf_aar_maxresolved_set", "maxresolved"], [2, 3, 1, "c.nrf_aar_maxresolved_set", "p_reg"]], "nrf_aar_out_amount_get": [[2, 3, 1, "c.nrf_aar_out_amount_get", "p_reg"]], "nrf_aar_out_ptr_get": [[2, 3, 1, "c.nrf_aar_out_ptr_get", "p_reg"]], "nrf_aar_out_ptr_set": [[2, 3, 1, "c.nrf_aar_out_ptr_set", "p_job"], [2, 3, 1, "c.nrf_aar_out_ptr_set", "p_reg"]], "nrf_aar_publish_clear": [[2, 3, 1, "c.nrf_aar_publish_clear", "event"], [2, 3, 1, "c.nrf_aar_publish_clear", "p_reg"]], "nrf_aar_publish_set": [[2, 3, 1, "c.nrf_aar_publish_set", "channel"], [2, 3, 1, "c.nrf_aar_publish_set", "event"], [2, 3, 1, "c.nrf_aar_publish_set", "p_reg"]], "nrf_aar_resolution_status_get": [[2, 3, 1, "c.nrf_aar_resolution_status_get", "p_reg"]], "nrf_aar_scratch_pointer_get": [[2, 3, 1, "c.nrf_aar_scratch_pointer_get", "p_reg"]], "nrf_aar_scratch_pointer_set": [[2, 3, 1, "c.nrf_aar_scratch_pointer_set", "p_reg"], [2, 3, 1, "c.nrf_aar_scratch_pointer_set", "scratch_ptr"]], "nrf_aar_subscribe_clear": [[2, 3, 1, "c.nrf_aar_subscribe_clear", "p_reg"], [2, 3, 1, "c.nrf_aar_subscribe_clear", "task"]], "nrf_aar_subscribe_set": [[2, 3, 1, "c.nrf_aar_subscribe_set", "channel"], [2, 3, 1, "c.nrf_aar_subscribe_set", "p_reg"], [2, 3, 1, "c.nrf_aar_subscribe_set", "task"]], "nrf_aar_task_address_get": [[2, 3, 1, "c.nrf_aar_task_address_get", "p_reg"], [2, 3, 1, "c.nrf_aar_task_address_get", "task"]], "nrf_aar_task_t": [[2, 1, 1, "c.nrf_aar_task_t.NRF_AAR_TASK_START", "NRF_AAR_TASK_START"], [2, 1, 1, "c.nrf_aar_task_t.NRF_AAR_TASK_STOP", "NRF_AAR_TASK_STOP"]], "nrf_aar_task_trigger": [[2, 3, 1, "c.nrf_aar_task_trigger", "p_reg"], [2, 3, 1, "c.nrf_aar_task_trigger", "task"]], "nrf_acl_perm_t": [[4, 1, 1, "c.nrf_acl_perm_t.NRF_ACL_PERM_NO_READ_NO_WRITE", "NRF_ACL_PERM_NO_READ_NO_WRITE"], [4, 1, 1, "c.nrf_acl_perm_t.NRF_ACL_PERM_NO_READ_WRITE", "NRF_ACL_PERM_NO_READ_WRITE"], [4, 1, 1, "c.nrf_acl_perm_t.NRF_ACL_PERM_READ_NO_WRITE", "NRF_ACL_PERM_READ_NO_WRITE"]], "nrf_acl_region_address_get": [[4, 3, 1, "c.nrf_acl_region_address_get", "p_reg"], [4, 3, 1, "c.nrf_acl_region_address_get", "region_id"]], "nrf_acl_region_perm_get": [[4, 3, 1, "c.nrf_acl_region_perm_get", "p_reg"], [4, 3, 1, "c.nrf_acl_region_perm_get", "region_id"]], "nrf_acl_region_set": [[4, 3, 1, "c.nrf_acl_region_set", "address"], [4, 3, 1, "c.nrf_acl_region_set", "p_reg"], [4, 3, 1, "c.nrf_acl_region_set", "perm"], [4, 3, 1, "c.nrf_acl_region_set", "region_id"], [4, 3, 1, "c.nrf_acl_region_set", "size"]], "nrf_acl_region_size_get": [[4, 3, 1, "c.nrf_acl_region_size_get", "p_reg"], [4, 3, 1, "c.nrf_acl_region_size_get", "region_id"]], "nrf_adc_busy_check": [[7, 3, 1, "c.nrf_adc_busy_check", "p_reg"]], "nrf_adc_config_extref_t": [[7, 1, 1, "c.nrf_adc_config_extref_t.NRF_ADC_CONFIG_EXTREFSEL_AREF0", "NRF_ADC_CONFIG_EXTREFSEL_AREF0"], [7, 1, 1, "c.nrf_adc_config_extref_t.NRF_ADC_CONFIG_EXTREFSEL_AREF1", "NRF_ADC_CONFIG_EXTREFSEL_AREF1"], [7, 1, 1, "c.nrf_adc_config_extref_t.NRF_ADC_CONFIG_EXTREFSEL_NONE", "NRF_ADC_CONFIG_EXTREFSEL_NONE"]], "nrf_adc_config_input_t": [[7, 1, 1, "c.nrf_adc_config_input_t.NRF_ADC_CONFIG_INPUT_0", "NRF_ADC_CONFIG_INPUT_0"], [7, 1, 1, "c.nrf_adc_config_input_t.NRF_ADC_CONFIG_INPUT_1", "NRF_ADC_CONFIG_INPUT_1"], [7, 1, 1, "c.nrf_adc_config_input_t.NRF_ADC_CONFIG_INPUT_2", "NRF_ADC_CONFIG_INPUT_2"], [7, 1, 1, "c.nrf_adc_config_input_t.NRF_ADC_CONFIG_INPUT_3", "NRF_ADC_CONFIG_INPUT_3"], [7, 1, 1, "c.nrf_adc_config_input_t.NRF_ADC_CONFIG_INPUT_4", "NRF_ADC_CONFIG_INPUT_4"], [7, 1, 1, "c.nrf_adc_config_input_t.NRF_ADC_CONFIG_INPUT_5", "NRF_ADC_CONFIG_INPUT_5"], [7, 1, 1, "c.nrf_adc_config_input_t.NRF_ADC_CONFIG_INPUT_6", "NRF_ADC_CONFIG_INPUT_6"], [7, 1, 1, "c.nrf_adc_config_input_t.NRF_ADC_CONFIG_INPUT_7", "NRF_ADC_CONFIG_INPUT_7"], [7, 1, 1, "c.nrf_adc_config_input_t.NRF_ADC_CONFIG_INPUT_DISABLED", "NRF_ADC_CONFIG_INPUT_DISABLED"]], "nrf_adc_config_reference_t": [[7, 1, 1, "c.nrf_adc_config_reference_t.NRF_ADC_CONFIG_REF_EXT", "NRF_ADC_CONFIG_REF_EXT"], [7, 1, 1, "c.nrf_adc_config_reference_t.NRF_ADC_CONFIG_REF_SUPPLY_ONE_HALF", "NRF_ADC_CONFIG_REF_SUPPLY_ONE_HALF"], [7, 1, 1, "c.nrf_adc_config_reference_t.NRF_ADC_CONFIG_REF_SUPPLY_ONE_THIRD", "NRF_ADC_CONFIG_REF_SUPPLY_ONE_THIRD"], [7, 1, 1, "c.nrf_adc_config_reference_t.NRF_ADC_CONFIG_REF_VBG", "NRF_ADC_CONFIG_REF_VBG"]], "nrf_adc_config_resolution_t": [[7, 1, 1, "c.nrf_adc_config_resolution_t.NRF_ADC_CONFIG_RES_10BIT", "NRF_ADC_CONFIG_RES_10BIT"], [7, 1, 1, "c.nrf_adc_config_resolution_t.NRF_ADC_CONFIG_RES_8BIT", "NRF_ADC_CONFIG_RES_8BIT"], [7, 1, 1, "c.nrf_adc_config_resolution_t.NRF_ADC_CONFIG_RES_9BIT", "NRF_ADC_CONFIG_RES_9BIT"]], "nrf_adc_config_scaling_t": [[7, 1, 1, "c.nrf_adc_config_scaling_t.NRF_ADC_CONFIG_SCALING_INPUT_FULL_SCALE", "NRF_ADC_CONFIG_SCALING_INPUT_FULL_SCALE"], [7, 1, 1, "c.nrf_adc_config_scaling_t.NRF_ADC_CONFIG_SCALING_INPUT_ONE_THIRD", "NRF_ADC_CONFIG_SCALING_INPUT_ONE_THIRD"], [7, 1, 1, "c.nrf_adc_config_scaling_t.NRF_ADC_CONFIG_SCALING_INPUT_TWO_THIRDS", "NRF_ADC_CONFIG_SCALING_INPUT_TWO_THIRDS"], [7, 1, 1, "c.nrf_adc_config_scaling_t.NRF_ADC_CONFIG_SCALING_SUPPLY_ONE_THIRD", "NRF_ADC_CONFIG_SCALING_SUPPLY_ONE_THIRD"], [7, 1, 1, "c.nrf_adc_config_scaling_t.NRF_ADC_CONFIG_SCALING_SUPPLY_TWO_THIRDS", "NRF_ADC_CONFIG_SCALING_SUPPLY_TWO_THIRDS"]], "nrf_adc_config_t": [[7, 6, 1, "c.nrf_adc_config_t.extref", "extref"], [7, 6, 1, "c.nrf_adc_config_t.input", "input"], [7, 6, 1, "c.nrf_adc_config_t.reference", "reference"], [7, 6, 1, "c.nrf_adc_config_t.resolution", "resolution"], [7, 6, 1, "c.nrf_adc_config_t.scaling", "scaling"]], "nrf_adc_disable": [[7, 3, 1, "c.nrf_adc_disable", "p_reg"]], "nrf_adc_enable": [[7, 3, 1, "c.nrf_adc_enable", "p_reg"]], "nrf_adc_enable_check": [[7, 3, 1, "c.nrf_adc_enable_check", "p_reg"]], "nrf_adc_event_address_get": [[7, 3, 1, "c.nrf_adc_event_address_get", "event"], [7, 3, 1, "c.nrf_adc_event_address_get", "p_reg"]], "nrf_adc_event_check": [[7, 3, 1, "c.nrf_adc_event_check", "event"], [7, 3, 1, "c.nrf_adc_event_check", "p_reg"]], "nrf_adc_event_clear": [[7, 3, 1, "c.nrf_adc_event_clear", "event"], [7, 3, 1, "c.nrf_adc_event_clear", "p_reg"]], "nrf_adc_event_t": [[7, 1, 1, "c.nrf_adc_event_t.NRF_ADC_EVENT_END", "NRF_ADC_EVENT_END"]], "nrf_adc_init": [[7, 3, 1, "c.nrf_adc_init", "p_config"], [7, 3, 1, "c.nrf_adc_init", "p_reg"]], "nrf_adc_int_disable": [[7, 3, 1, "c.nrf_adc_int_disable", "mask"], [7, 3, 1, "c.nrf_adc_int_disable", "p_reg"]], "nrf_adc_int_enable": [[7, 3, 1, "c.nrf_adc_int_enable", "mask"], [7, 3, 1, "c.nrf_adc_int_enable", "p_reg"]], "nrf_adc_int_enable_check": [[7, 3, 1, "c.nrf_adc_int_enable_check", "mask"], [7, 3, 1, "c.nrf_adc_int_enable_check", "p_reg"]], "nrf_adc_int_mask_t": [[7, 1, 1, "c.nrf_adc_int_mask_t.NRF_ADC_INT_END_MASK", "NRF_ADC_INT_END_MASK"]], "nrf_adc_result_get": [[7, 3, 1, "c.nrf_adc_result_get", "p_reg"]], "nrf_adc_task_address_get": [[7, 3, 1, "c.nrf_adc_task_address_get", "p_reg"], [7, 3, 1, "c.nrf_adc_task_address_get", "task"]], "nrf_adc_task_t": [[7, 1, 1, "c.nrf_adc_task_t.NRF_ADC_TASK_START", "NRF_ADC_TASK_START"], [7, 1, 1, "c.nrf_adc_task_t.NRF_ADC_TASK_STOP", "NRF_ADC_TASK_STOP"]], "nrf_adc_task_trigger": [[7, 3, 1, "c.nrf_adc_task_trigger", "p_reg"], [7, 3, 1, "c.nrf_adc_task_trigger", "task"]], "nrf_apb_interconnect_by_idx_global_get": [[243, 3, 1, "c.nrf_apb_interconnect_by_idx_global_get", "idx"]], "nrf_auxpll_config_get": [[9, 3, 1, "c.nrf_auxpll_config_get", "p_cfg"], [9, 3, 1, "c.nrf_auxpll_config_get", "p_reg"]], "nrf_auxpll_config_set": [[9, 3, 1, "c.nrf_auxpll_config_set", "p_cfg"], [9, 3, 1, "c.nrf_auxpll_config_set", "p_reg"]], "nrf_auxpll_config_t": [[9, 6, 1, "c.nrf_auxpll_config_t.current_tune", "current_tune"], [9, 6, 1, "c.nrf_auxpll_config_t.dither_off", "dither_off"], [9, 6, 1, "c.nrf_auxpll_config_t.outdrive", "outdrive"], [9, 6, 1, "c.nrf_auxpll_config_t.range", "range"], [9, 6, 1, "c.nrf_auxpll_config_t.sdm_off", "sdm_off"]], "nrf_auxpll_ctrl_freqinc_get": [[9, 3, 1, "c.nrf_auxpll_ctrl_freqinc_get", "p_reg"]], "nrf_auxpll_ctrl_freqinc_period_get": [[9, 3, 1, "c.nrf_auxpll_ctrl_freqinc_period_get", "p_reg"]], "nrf_auxpll_ctrl_freqinc_period_set": [[9, 3, 1, "c.nrf_auxpll_ctrl_freqinc_period_set", "p_reg"], [9, 3, 1, "c.nrf_auxpll_ctrl_freqinc_period_set", "value"]], "nrf_auxpll_ctrl_freqinc_set": [[9, 3, 1, "c.nrf_auxpll_ctrl_freqinc_set", "p_reg"], [9, 3, 1, "c.nrf_auxpll_ctrl_freqinc_set", "value"]], "nrf_auxpll_ctrl_frequency_get": [[9, 3, 1, "c.nrf_auxpll_ctrl_frequency_get", "p_reg"]], "nrf_auxpll_ctrl_frequency_set": [[9, 3, 1, "c.nrf_auxpll_ctrl_frequency_set", "p_reg"], [9, 3, 1, "c.nrf_auxpll_ctrl_frequency_set", "value"]], "nrf_auxpll_ctrl_mode_get": [[9, 3, 1, "c.nrf_auxpll_ctrl_mode_get", "p_reg"]], "nrf_auxpll_ctrl_mode_set": [[9, 3, 1, "c.nrf_auxpll_ctrl_mode_set", "p_reg"], [9, 3, 1, "c.nrf_auxpll_ctrl_mode_set", "value"]], "nrf_auxpll_ctrl_mode_t": [[9, 1, 1, "c.nrf_auxpll_ctrl_mode_t.NRF_AUXPLL_CTRL_MODE_AUTO", "NRF_AUXPLL_CTRL_MODE_AUTO"], [9, 1, 1, "c.nrf_auxpll_ctrl_mode_t.NRF_AUXPLL_CTRL_MODE_FREERUN", "NRF_AUXPLL_CTRL_MODE_FREERUN"], [9, 1, 1, "c.nrf_auxpll_ctrl_mode_t.NRF_AUXPLL_CTRL_MODE_LOCKED", "NRF_AUXPLL_CTRL_MODE_LOCKED"]], "nrf_auxpll_ctrl_outsel_get": [[9, 3, 1, "c.nrf_auxpll_ctrl_outsel_get", "p_reg"]], "nrf_auxpll_ctrl_outsel_set": [[9, 3, 1, "c.nrf_auxpll_ctrl_outsel_set", "p_reg"], [9, 3, 1, "c.nrf_auxpll_ctrl_outsel_set", "value"]], "nrf_auxpll_ctrl_outsel_t": [[9, 1, 1, "c.nrf_auxpll_ctrl_outsel_t.NRF_AUXPLL_CTRL_OUTSEL_DIV_1", "NRF_AUXPLL_CTRL_OUTSEL_DIV_1"], [9, 1, 1, "c.nrf_auxpll_ctrl_outsel_t.NRF_AUXPLL_CTRL_OUTSEL_DIV_12", "NRF_AUXPLL_CTRL_OUTSEL_DIV_12"], [9, 1, 1, "c.nrf_auxpll_ctrl_outsel_t.NRF_AUXPLL_CTRL_OUTSEL_DIV_16", "NRF_AUXPLL_CTRL_OUTSEL_DIV_16"], [9, 1, 1, "c.nrf_auxpll_ctrl_outsel_t.NRF_AUXPLL_CTRL_OUTSEL_DIV_2", "NRF_AUXPLL_CTRL_OUTSEL_DIV_2"], [9, 1, 1, "c.nrf_auxpll_ctrl_outsel_t.NRF_AUXPLL_CTRL_OUTSEL_DIV_3", "NRF_AUXPLL_CTRL_OUTSEL_DIV_3"], [9, 1, 1, "c.nrf_auxpll_ctrl_outsel_t.NRF_AUXPLL_CTRL_OUTSEL_DIV_4", "NRF_AUXPLL_CTRL_OUTSEL_DIV_4"], [9, 1, 1, "c.nrf_auxpll_ctrl_outsel_t.NRF_AUXPLL_CTRL_OUTSEL_DIV_6", "NRF_AUXPLL_CTRL_OUTSEL_DIV_6"], [9, 1, 1, "c.nrf_auxpll_ctrl_outsel_t.NRF_AUXPLL_CTRL_OUTSEL_DIV_8", "NRF_AUXPLL_CTRL_OUTSEL_DIV_8"], [9, 1, 1, "c.nrf_auxpll_ctrl_outsel_t.NRF_AUXPLL_CTRL_OUTSEL_DIV_DISABLED", "NRF_AUXPLL_CTRL_OUTSEL_DIV_DISABLED"]], "nrf_auxpll_divider_range_t": [[9, 1, 1, "c.nrf_auxpll_divider_range_t.NRF_AUXPLL_DIVIDER_RANGE_HIGH", "NRF_AUXPLL_DIVIDER_RANGE_HIGH"], [9, 1, 1, "c.nrf_auxpll_divider_range_t.NRF_AUXPLL_DIVIDER_RANGE_LOW", "NRF_AUXPLL_DIVIDER_RANGE_LOW"], [9, 1, 1, "c.nrf_auxpll_divider_range_t.NRF_AUXPLL_DIVIDER_RANGE_MAX", "NRF_AUXPLL_DIVIDER_RANGE_MAX"], [9, 1, 1, "c.nrf_auxpll_divider_range_t.NRF_AUXPLL_DIVIDER_RANGE_MID", "NRF_AUXPLL_DIVIDER_RANGE_MID"]], "nrf_auxpll_event_address_get": [[9, 3, 1, "c.nrf_auxpll_event_address_get", "event"], [9, 3, 1, "c.nrf_auxpll_event_address_get", "p_reg"]], "nrf_auxpll_event_check": [[9, 3, 1, "c.nrf_auxpll_event_check", "event"], [9, 3, 1, "c.nrf_auxpll_event_check", "p_reg"]], "nrf_auxpll_event_clear": [[9, 3, 1, "c.nrf_auxpll_event_clear", "event"], [9, 3, 1, "c.nrf_auxpll_event_clear", "p_reg"]], "nrf_auxpll_event_t": [[9, 1, 1, "c.nrf_auxpll_event_t.NRF_AUXPLL_EVENT_LOCKED", "NRF_AUXPLL_EVENT_LOCKED"], [9, 1, 1, "c.nrf_auxpll_event_t.NRF_AUXPLL_EVENT_STARTED", "NRF_AUXPLL_EVENT_STARTED"], [9, 1, 1, "c.nrf_auxpll_event_t.NRF_AUXPLL_EVENT_STOPPED", "NRF_AUXPLL_EVENT_STOPPED"]], "nrf_auxpll_int_disable": [[9, 3, 1, "c.nrf_auxpll_int_disable", "mask"], [9, 3, 1, "c.nrf_auxpll_int_disable", "p_reg"]], "nrf_auxpll_int_enable": [[9, 3, 1, "c.nrf_auxpll_int_enable", "mask"], [9, 3, 1, "c.nrf_auxpll_int_enable", "p_reg"]], "nrf_auxpll_int_enable_check": [[9, 3, 1, "c.nrf_auxpll_int_enable_check", "mask"], [9, 3, 1, "c.nrf_auxpll_int_enable_check", "p_reg"]], "nrf_auxpll_int_mask_t": [[9, 1, 1, "c.nrf_auxpll_int_mask_t.NRF_AUXPLL_INT_LOCKED_MASK", "NRF_AUXPLL_INT_LOCKED_MASK"], [9, 1, 1, "c.nrf_auxpll_int_mask_t.NRF_AUXPLL_INT_STARTED_MASK", "NRF_AUXPLL_INT_STARTED_MASK"], [9, 1, 1, "c.nrf_auxpll_int_mask_t.NRF_AUXPLL_INT_STOPPED_MASK", "NRF_AUXPLL_INT_STOPPED_MASK"]], "nrf_auxpll_int_pending_check": [[9, 3, 1, "c.nrf_auxpll_int_pending_check", "mask"], [9, 3, 1, "c.nrf_auxpll_int_pending_check", "p_reg"]], "nrf_auxpll_lock": [[9, 3, 1, "c.nrf_auxpll_lock", "p_reg"]], "nrf_auxpll_lock_check": [[9, 3, 1, "c.nrf_auxpll_lock_check", "p_reg"]], "nrf_auxpll_status_get": [[9, 3, 1, "c.nrf_auxpll_status_get", "p_reg"]], "nrf_auxpll_status_mask_t": [[9, 1, 1, "c.nrf_auxpll_status_mask_t.MRF_AUXPLL_STATUS_FREQUENCY_ACTUAL_MASK", "MRF_AUXPLL_STATUS_FREQUENCY_ACTUAL_MASK"], [9, 1, 1, "c.nrf_auxpll_status_mask_t.NRF_AUXPLL_STATUS_MODE_MASK", "NRF_AUXPLL_STATUS_MODE_MASK"], [9, 1, 1, "c.nrf_auxpll_status_mask_t.NRF_AUXPLL_STATUS_PLL_RUNNING_MASK", "NRF_AUXPLL_STATUS_PLL_RUNNING_MASK"]], "nrf_auxpll_task_address_get": [[9, 3, 1, "c.nrf_auxpll_task_address_get", "p_reg"], [9, 3, 1, "c.nrf_auxpll_task_address_get", "task"]], "nrf_auxpll_task_t": [[9, 1, 1, "c.nrf_auxpll_task_t.NRF_AUXPLL_TASK_FREQ_INC_START", "NRF_AUXPLL_TASK_FREQ_INC_START"], [9, 1, 1, "c.nrf_auxpll_task_t.NRF_AUXPLL_TASK_FREQ_INC_STOP", "NRF_AUXPLL_TASK_FREQ_INC_STOP"], [9, 1, 1, "c.nrf_auxpll_task_t.NRF_AUXPLL_TASK_FREQ_NEW_BASE", "NRF_AUXPLL_TASK_FREQ_NEW_BASE"], [9, 1, 1, "c.nrf_auxpll_task_t.NRF_AUXPLL_TASK_FREQ_NEW_FINE", "NRF_AUXPLL_TASK_FREQ_NEW_FINE"], [9, 1, 1, "c.nrf_auxpll_task_t.NRF_AUXPLL_TASK_START", "NRF_AUXPLL_TASK_START"], [9, 1, 1, "c.nrf_auxpll_task_t.NRF_AUXPLL_TASK_STOP", "NRF_AUXPLL_TASK_STOP"]], "nrf_auxpll_task_trigger": [[9, 3, 1, "c.nrf_auxpll_task_trigger", "p_reg"], [9, 3, 1, "c.nrf_auxpll_task_trigger", "task"]], "nrf_auxpll_trim_ctune_get": [[9, 3, 1, "c.nrf_auxpll_trim_ctune_get", "p_reg"]], "nrf_auxpll_trim_ctune_set": [[9, 3, 1, "c.nrf_auxpll_trim_ctune_set", "p_reg"], [9, 3, 1, "c.nrf_auxpll_trim_ctune_set", "value"]], "nrf_auxpll_unlock": [[9, 3, 1, "c.nrf_auxpll_unlock", "p_reg"]], "nrf_bellboard_event_address_get": [[11, 3, 1, "c.nrf_bellboard_event_address_get", "event"], [11, 3, 1, "c.nrf_bellboard_event_address_get", "p_reg"]], "nrf_bellboard_event_check": [[11, 3, 1, "c.nrf_bellboard_event_check", "event"], [11, 3, 1, "c.nrf_bellboard_event_check", "p_reg"]], "nrf_bellboard_event_clear": [[11, 3, 1, "c.nrf_bellboard_event_clear", "event"], [11, 3, 1, "c.nrf_bellboard_event_clear", "p_reg"]], "nrf_bellboard_event_t": [[11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_0", "NRF_BELLBOARD_EVENT_TRIGGERED_0"], [11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_1", "NRF_BELLBOARD_EVENT_TRIGGERED_1"], [11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_10", "NRF_BELLBOARD_EVENT_TRIGGERED_10"], [11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_11", "NRF_BELLBOARD_EVENT_TRIGGERED_11"], [11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_12", "NRF_BELLBOARD_EVENT_TRIGGERED_12"], [11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_13", "NRF_BELLBOARD_EVENT_TRIGGERED_13"], [11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_14", "NRF_BELLBOARD_EVENT_TRIGGERED_14"], [11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_15", "NRF_BELLBOARD_EVENT_TRIGGERED_15"], [11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_16", "NRF_BELLBOARD_EVENT_TRIGGERED_16"], [11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_17", "NRF_BELLBOARD_EVENT_TRIGGERED_17"], [11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_18", "NRF_BELLBOARD_EVENT_TRIGGERED_18"], [11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_19", "NRF_BELLBOARD_EVENT_TRIGGERED_19"], [11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_2", "NRF_BELLBOARD_EVENT_TRIGGERED_2"], [11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_20", "NRF_BELLBOARD_EVENT_TRIGGERED_20"], [11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_21", "NRF_BELLBOARD_EVENT_TRIGGERED_21"], [11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_22", "NRF_BELLBOARD_EVENT_TRIGGERED_22"], [11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_23", "NRF_BELLBOARD_EVENT_TRIGGERED_23"], [11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_24", "NRF_BELLBOARD_EVENT_TRIGGERED_24"], [11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_25", "NRF_BELLBOARD_EVENT_TRIGGERED_25"], [11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_26", "NRF_BELLBOARD_EVENT_TRIGGERED_26"], [11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_27", "NRF_BELLBOARD_EVENT_TRIGGERED_27"], [11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_28", "NRF_BELLBOARD_EVENT_TRIGGERED_28"], [11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_29", "NRF_BELLBOARD_EVENT_TRIGGERED_29"], [11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_3", "NRF_BELLBOARD_EVENT_TRIGGERED_3"], [11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_30", "NRF_BELLBOARD_EVENT_TRIGGERED_30"], [11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_31", "NRF_BELLBOARD_EVENT_TRIGGERED_31"], [11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_4", "NRF_BELLBOARD_EVENT_TRIGGERED_4"], [11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_5", "NRF_BELLBOARD_EVENT_TRIGGERED_5"], [11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_6", "NRF_BELLBOARD_EVENT_TRIGGERED_6"], [11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_7", "NRF_BELLBOARD_EVENT_TRIGGERED_7"], [11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_8", "NRF_BELLBOARD_EVENT_TRIGGERED_8"], [11, 1, 1, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_9", "NRF_BELLBOARD_EVENT_TRIGGERED_9"]], "nrf_bellboard_int_disable": [[11, 3, 1, "c.nrf_bellboard_int_disable", "group_idx"], [11, 3, 1, "c.nrf_bellboard_int_disable", "mask"], [11, 3, 1, "c.nrf_bellboard_int_disable", "p_reg"]], "nrf_bellboard_int_enable": [[11, 3, 1, "c.nrf_bellboard_int_enable", "group_idx"], [11, 3, 1, "c.nrf_bellboard_int_enable", "mask"], [11, 3, 1, "c.nrf_bellboard_int_enable", "p_reg"]], "nrf_bellboard_int_enable_check": [[11, 3, 1, "c.nrf_bellboard_int_enable_check", "group_idx"], [11, 3, 1, "c.nrf_bellboard_int_enable_check", "mask"], [11, 3, 1, "c.nrf_bellboard_int_enable_check", "p_reg"]], "nrf_bellboard_int_mask_t": [[11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_0_MASK", "NRF_BELLBOARD_INT_TRIGGERED_0_MASK"], [11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_10_MASK", "NRF_BELLBOARD_INT_TRIGGERED_10_MASK"], [11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_11_MASK", "NRF_BELLBOARD_INT_TRIGGERED_11_MASK"], [11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_12_MASK", "NRF_BELLBOARD_INT_TRIGGERED_12_MASK"], [11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_13_MASK", "NRF_BELLBOARD_INT_TRIGGERED_13_MASK"], [11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_14_MASK", "NRF_BELLBOARD_INT_TRIGGERED_14_MASK"], [11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_15_MASK", "NRF_BELLBOARD_INT_TRIGGERED_15_MASK"], [11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_16_MASK", "NRF_BELLBOARD_INT_TRIGGERED_16_MASK"], [11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_17_MASK", "NRF_BELLBOARD_INT_TRIGGERED_17_MASK"], [11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_18_MASK", "NRF_BELLBOARD_INT_TRIGGERED_18_MASK"], [11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_19_MASK", "NRF_BELLBOARD_INT_TRIGGERED_19_MASK"], [11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_1_MASK", "NRF_BELLBOARD_INT_TRIGGERED_1_MASK"], [11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_20_MASK", "NRF_BELLBOARD_INT_TRIGGERED_20_MASK"], [11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_21_MASK", "NRF_BELLBOARD_INT_TRIGGERED_21_MASK"], [11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_22_MASK", "NRF_BELLBOARD_INT_TRIGGERED_22_MASK"], [11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_23_MASK", "NRF_BELLBOARD_INT_TRIGGERED_23_MASK"], [11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_24_MASK", "NRF_BELLBOARD_INT_TRIGGERED_24_MASK"], [11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_25_MASK", "NRF_BELLBOARD_INT_TRIGGERED_25_MASK"], [11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_26_MASK", "NRF_BELLBOARD_INT_TRIGGERED_26_MASK"], [11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_27_MASK", "NRF_BELLBOARD_INT_TRIGGERED_27_MASK"], [11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_28_MASK", "NRF_BELLBOARD_INT_TRIGGERED_28_MASK"], [11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_29_MASK", "NRF_BELLBOARD_INT_TRIGGERED_29_MASK"], [11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_2_MASK", "NRF_BELLBOARD_INT_TRIGGERED_2_MASK"], [11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_30_MASK", "NRF_BELLBOARD_INT_TRIGGERED_30_MASK"], [11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_31_MASK", "NRF_BELLBOARD_INT_TRIGGERED_31_MASK"], [11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_3_MASK", "NRF_BELLBOARD_INT_TRIGGERED_3_MASK"], [11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_4_MASK", "NRF_BELLBOARD_INT_TRIGGERED_4_MASK"], [11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_5_MASK", "NRF_BELLBOARD_INT_TRIGGERED_5_MASK"], [11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_6_MASK", "NRF_BELLBOARD_INT_TRIGGERED_6_MASK"], [11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_7_MASK", "NRF_BELLBOARD_INT_TRIGGERED_7_MASK"], [11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_8_MASK", "NRF_BELLBOARD_INT_TRIGGERED_8_MASK"], [11, 1, 1, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_9_MASK", "NRF_BELLBOARD_INT_TRIGGERED_9_MASK"]], "nrf_bellboard_int_pending_get": [[11, 3, 1, "c.nrf_bellboard_int_pending_get", "group_idx"], [11, 3, 1, "c.nrf_bellboard_int_pending_get", "p_reg"]], "nrf_bellboard_task_address_get": [[11, 3, 1, "c.nrf_bellboard_task_address_get", "p_reg"], [11, 3, 1, "c.nrf_bellboard_task_address_get", "task"]], "nrf_bellboard_task_t": [[11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_0", "NRF_BELLBOARD_TASK_TRIGGER_0"], [11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_1", "NRF_BELLBOARD_TASK_TRIGGER_1"], [11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_10", "NRF_BELLBOARD_TASK_TRIGGER_10"], [11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_11", "NRF_BELLBOARD_TASK_TRIGGER_11"], [11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_12", "NRF_BELLBOARD_TASK_TRIGGER_12"], [11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_13", "NRF_BELLBOARD_TASK_TRIGGER_13"], [11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_14", "NRF_BELLBOARD_TASK_TRIGGER_14"], [11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_15", "NRF_BELLBOARD_TASK_TRIGGER_15"], [11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_16", "NRF_BELLBOARD_TASK_TRIGGER_16"], [11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_17", "NRF_BELLBOARD_TASK_TRIGGER_17"], [11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_18", "NRF_BELLBOARD_TASK_TRIGGER_18"], [11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_19", "NRF_BELLBOARD_TASK_TRIGGER_19"], [11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_2", "NRF_BELLBOARD_TASK_TRIGGER_2"], [11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_20", "NRF_BELLBOARD_TASK_TRIGGER_20"], [11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_21", "NRF_BELLBOARD_TASK_TRIGGER_21"], [11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_22", "NRF_BELLBOARD_TASK_TRIGGER_22"], [11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_23", "NRF_BELLBOARD_TASK_TRIGGER_23"], [11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_24", "NRF_BELLBOARD_TASK_TRIGGER_24"], [11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_25", "NRF_BELLBOARD_TASK_TRIGGER_25"], [11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_26", "NRF_BELLBOARD_TASK_TRIGGER_26"], [11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_27", "NRF_BELLBOARD_TASK_TRIGGER_27"], [11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_28", "NRF_BELLBOARD_TASK_TRIGGER_28"], [11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_29", "NRF_BELLBOARD_TASK_TRIGGER_29"], [11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_3", "NRF_BELLBOARD_TASK_TRIGGER_3"], [11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_30", "NRF_BELLBOARD_TASK_TRIGGER_30"], [11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_31", "NRF_BELLBOARD_TASK_TRIGGER_31"], [11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_4", "NRF_BELLBOARD_TASK_TRIGGER_4"], [11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_5", "NRF_BELLBOARD_TASK_TRIGGER_5"], [11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_6", "NRF_BELLBOARD_TASK_TRIGGER_6"], [11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_7", "NRF_BELLBOARD_TASK_TRIGGER_7"], [11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_8", "NRF_BELLBOARD_TASK_TRIGGER_8"], [11, 1, 1, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_9", "NRF_BELLBOARD_TASK_TRIGGER_9"]], "nrf_bellboard_task_trigger": [[11, 3, 1, "c.nrf_bellboard_task_trigger", "p_reg"], [11, 3, 1, "c.nrf_bellboard_task_trigger", "task"]], "nrf_bellboard_trigger_task_get": [[11, 3, 1, "c.nrf_bellboard_trigger_task_get", "index"]], "nrf_bellboard_triggered_event_get": [[11, 3, 1, "c.nrf_bellboard_triggered_event_get", "index"]], "nrf_bitmask_bit_clear": [[233, 3, 1, "c.nrf_bitmask_bit_clear", "bit"], [233, 3, 1, "c.nrf_bitmask_bit_clear", "p_mask"]], "nrf_bitmask_bit_is_set": [[233, 3, 1, "c.nrf_bitmask_bit_is_set", "bit"], [233, 3, 1, "c.nrf_bitmask_bit_is_set", "p_mask"]], "nrf_bitmask_bit_set": [[233, 3, 1, "c.nrf_bitmask_bit_set", "bit"], [233, 3, 1, "c.nrf_bitmask_bit_set", "p_mask"]], "nrf_bitmask_masks_and": [[233, 3, 1, "c.nrf_bitmask_masks_and", "length"], [233, 3, 1, "c.nrf_bitmask_masks_and", "p_mask1"], [233, 3, 1, "c.nrf_bitmask_masks_and", "p_mask2"], [233, 3, 1, "c.nrf_bitmask_masks_and", "p_out_mask"]], "nrf_bitmask_masks_or": [[233, 3, 1, "c.nrf_bitmask_masks_or", "length"], [233, 3, 1, "c.nrf_bitmask_masks_or", "p_mask1"], [233, 3, 1, "c.nrf_bitmask_masks_or", "p_mask2"], [233, 3, 1, "c.nrf_bitmask_masks_or", "p_out_mask"]], "nrf_bprot_nvm_blocks_protection_enable": [[14, 3, 1, "c.nrf_bprot_nvm_blocks_protection_enable", "block_mask"], [14, 3, 1, "c.nrf_bprot_nvm_blocks_protection_enable", "group_idx"], [14, 3, 1, "c.nrf_bprot_nvm_blocks_protection_enable", "p_reg"]], "nrf_bprot_nvm_protection_in_debug_set": [[14, 3, 1, "c.nrf_bprot_nvm_protection_in_debug_set", "enable"], [14, 3, 1, "c.nrf_bprot_nvm_protection_in_debug_set", "p_reg"]], "nrf_cache_busy_check": [[16, 3, 1, "c.nrf_cache_busy_check", "p_reg"]], "nrf_cache_data_get": [[16, 3, 1, "c.nrf_cache_data_get", "p_reg"], [16, 3, 1, "c.nrf_cache_data_get", "set"], [16, 3, 1, "c.nrf_cache_data_get", "way"], [16, 3, 1, "c.nrf_cache_data_get", "word"]], "nrf_cache_data_hit_counter_get": [[16, 3, 1, "c.nrf_cache_data_hit_counter_get", "p_reg"], [16, 3, 1, "c.nrf_cache_data_hit_counter_get", "region"]], "nrf_cache_data_miss_counter_get": [[16, 3, 1, "c.nrf_cache_data_miss_counter_get", "p_reg"], [16, 3, 1, "c.nrf_cache_data_miss_counter_get", "region"]], "nrf_cache_data_unit_validity_check": [[16, 3, 1, "c.nrf_cache_data_unit_validity_check", "p_reg"], [16, 3, 1, "c.nrf_cache_data_unit_validity_check", "set"], [16, 3, 1, "c.nrf_cache_data_unit_validity_check", "way"], [16, 3, 1, "c.nrf_cache_data_unit_validity_check", "word"]], "nrf_cache_disable": [[16, 3, 1, "c.nrf_cache_disable", "p_reg"]], "nrf_cache_enable": [[16, 3, 1, "c.nrf_cache_enable", "p_reg"]], "nrf_cache_enable_check": [[16, 3, 1, "c.nrf_cache_enable_check", "p_reg"]], "nrf_cache_erase": [[16, 3, 1, "c.nrf_cache_erase", "p_reg"]], "nrf_cache_erase_status_check": [[16, 3, 1, "c.nrf_cache_erase_status_check", "p_reg"]], "nrf_cache_erase_status_clear": [[16, 3, 1, "c.nrf_cache_erase_status_clear", "p_reg"]], "nrf_cache_instruction_hit_counter_get": [[16, 3, 1, "c.nrf_cache_instruction_hit_counter_get", "p_reg"], [16, 3, 1, "c.nrf_cache_instruction_hit_counter_get", "region"]], "nrf_cache_instruction_miss_counter_get": [[16, 3, 1, "c.nrf_cache_instruction_miss_counter_get", "p_reg"], [16, 3, 1, "c.nrf_cache_instruction_miss_counter_get", "region"]], "nrf_cache_invalidate": [[16, 3, 1, "c.nrf_cache_invalidate", "p_reg"]], "nrf_cache_is_data_unit_dirty_check": [[16, 3, 1, "c.nrf_cache_is_data_unit_dirty_check", "p_reg"], [16, 3, 1, "c.nrf_cache_is_data_unit_dirty_check", "set"], [16, 3, 1, "c.nrf_cache_is_data_unit_dirty_check", "way"], [16, 3, 1, "c.nrf_cache_is_data_unit_dirty_check", "word"]], "nrf_cache_line_validity_check": [[16, 3, 1, "c.nrf_cache_line_validity_check", "p_reg"], [16, 3, 1, "c.nrf_cache_line_validity_check", "set"], [16, 3, 1, "c.nrf_cache_line_validity_check", "way"]], "nrf_cache_lineaddr_get": [[16, 3, 1, "c.nrf_cache_lineaddr_get", "p_reg"]], "nrf_cache_lineaddr_set": [[16, 3, 1, "c.nrf_cache_lineaddr_set", "addr"], [16, 3, 1, "c.nrf_cache_lineaddr_set", "p_reg"]], "nrf_cache_mru_get": [[16, 3, 1, "c.nrf_cache_mru_get", "p_reg"], [16, 3, 1, "c.nrf_cache_mru_get", "set"]], "nrf_cache_profiling_counters_clear": [[16, 3, 1, "c.nrf_cache_profiling_counters_clear", "p_reg"]], "nrf_cache_profiling_set": [[16, 3, 1, "c.nrf_cache_profiling_set", "enable"], [16, 3, 1, "c.nrf_cache_profiling_set", "p_reg"]], "nrf_cache_ram_mode_check": [[16, 3, 1, "c.nrf_cache_ram_mode_check", "p_reg"]], "nrf_cache_ram_mode_set": [[16, 3, 1, "c.nrf_cache_ram_mode_set", "enable"], [16, 3, 1, "c.nrf_cache_ram_mode_set", "p_reg"]], "nrf_cache_ramsize_get": [[16, 3, 1, "c.nrf_cache_ramsize_get", "p_reg"]], "nrf_cache_ramsize_set": [[16, 3, 1, "c.nrf_cache_ramsize_set", "p_reg"], [16, 3, 1, "c.nrf_cache_ramsize_set", "ramsize"]], "nrf_cache_ramsize_t": [[16, 1, 1, "c.nrf_cache_ramsize_t.NRF_CACHE_RAMSIZE_ALL", "NRF_CACHE_RAMSIZE_ALL"], [16, 1, 1, "c.nrf_cache_ramsize_t.NRF_CACHE_RAMSIZE_HALF", "NRF_CACHE_RAMSIZE_HALF"], [16, 1, 1, "c.nrf_cache_ramsize_t.NRF_CACHE_RAMSIZE_NONE", "NRF_CACHE_RAMSIZE_NONE"], [16, 1, 1, "c.nrf_cache_ramsize_t.NRF_CACHE_RAMSIZE_QUARTER", "NRF_CACHE_RAMSIZE_QUARTER"]], "nrf_cache_read_lock_enable": [[16, 3, 1, "c.nrf_cache_read_lock_enable", "p_reg"]], "nrf_cache_region_t": [[16, 1, 1, "c.nrf_cache_region_t.NRF_CACHE_REGION_FLASH", "NRF_CACHE_REGION_FLASH"], [16, 1, 1, "c.nrf_cache_region_t.NRF_CACHE_REGION_XIP", "NRF_CACHE_REGION_XIP"]], "nrf_cache_tag_get": [[16, 3, 1, "c.nrf_cache_tag_get", "p_reg"], [16, 3, 1, "c.nrf_cache_tag_get", "set"], [16, 3, 1, "c.nrf_cache_tag_get", "way"]], "nrf_cache_task_address_get": [[16, 3, 1, "c.nrf_cache_task_address_get", "p_reg"], [16, 3, 1, "c.nrf_cache_task_address_get", "task"]], "nrf_cache_task_t": [[16, 1, 1, "c.nrf_cache_task_t.NRF_CACHE_TASK_CLEANCACHE", "NRF_CACHE_TASK_CLEANCACHE"], [16, 1, 1, "c.nrf_cache_task_t.NRF_CACHE_TASK_CLEANLINE", "NRF_CACHE_TASK_CLEANLINE"], [16, 1, 1, "c.nrf_cache_task_t.NRF_CACHE_TASK_ERASE", "NRF_CACHE_TASK_ERASE"], [16, 1, 1, "c.nrf_cache_task_t.NRF_CACHE_TASK_FLUSHCACHE", "NRF_CACHE_TASK_FLUSHCACHE"], [16, 1, 1, "c.nrf_cache_task_t.NRF_CACHE_TASK_FLUSHLINE", "NRF_CACHE_TASK_FLUSHLINE"], [16, 1, 1, "c.nrf_cache_task_t.NRF_CACHE_TASK_INVALIDATECACHE", "NRF_CACHE_TASK_INVALIDATECACHE"], [16, 1, 1, "c.nrf_cache_task_t.NRF_CACHE_TASK_INVALIDATELINE", "NRF_CACHE_TASK_INVALIDATELINE"], [16, 1, 1, "c.nrf_cache_task_t.NRF_CACHE_TASK_RESTORE", "NRF_CACHE_TASK_RESTORE"], [16, 1, 1, "c.nrf_cache_task_t.NRF_CACHE_TASK_SAVE", "NRF_CACHE_TASK_SAVE"]], "nrf_cache_task_trigger": [[16, 3, 1, "c.nrf_cache_task_trigger", "p_reg"], [16, 3, 1, "c.nrf_cache_task_trigger", "task"]], "nrf_cache_update_lock_set": [[16, 3, 1, "c.nrf_cache_update_lock_set", "enable"], [16, 3, 1, "c.nrf_cache_update_lock_set", "p_reg"]], "nrf_ccm_adatamask_get": [[18, 3, 1, "c.nrf_ccm_adatamask_get", "p_reg"]], "nrf_ccm_adatamask_set": [[18, 3, 1, "c.nrf_ccm_adatamask_set", "adata_msk"], [18, 3, 1, "c.nrf_ccm_adatamask_set", "p_reg"]], "nrf_ccm_cnf_t": [[18, 6, 1, "c.nrf_ccm_cnf_t.iv", "iv"], [18, 6, 1, "c.nrf_ccm_cnf_t.key", "key"], [18, 6, 1, "c.nrf_ccm_cnf_t.pktctr", "pktctr"]], "nrf_ccm_cnfptr_get": [[18, 3, 1, "c.nrf_ccm_cnfptr_get", "p_reg"]], "nrf_ccm_cnfptr_set": [[18, 3, 1, "c.nrf_ccm_cnfptr_set", "p_data"], [18, 3, 1, "c.nrf_ccm_cnfptr_set", "p_reg"]], "nrf_ccm_config_t": [[18, 6, 1, "c.nrf_ccm_config_t.datarate", "datarate"], [18, 6, 1, "c.nrf_ccm_config_t.length", "length"], [18, 6, 1, "c.nrf_ccm_config_t.mac_length", "mac_length"], [18, 6, 1, "c.nrf_ccm_config_t.mode", "mode"], [18, 6, 1, "c.nrf_ccm_config_t.protocol", "protocol"]], "nrf_ccm_configure": [[18, 3, 1, "c.nrf_ccm_configure", "p_config"], [18, 3, 1, "c.nrf_ccm_configure", "p_reg"]], "nrf_ccm_datarate_override_get": [[18, 3, 1, "c.nrf_ccm_datarate_override_get", "p_reg"]], "nrf_ccm_datarate_override_set": [[18, 3, 1, "c.nrf_ccm_datarate_override_set", "datarate"], [18, 3, 1, "c.nrf_ccm_datarate_override_set", "p_reg"]], "nrf_ccm_datarate_t": [[18, 1, 1, "c.nrf_ccm_datarate_t.NRF_CCM_DATARATE_125K", "NRF_CCM_DATARATE_125K"], [18, 1, 1, "c.nrf_ccm_datarate_t.NRF_CCM_DATARATE_1M", "NRF_CCM_DATARATE_1M"], [18, 1, 1, "c.nrf_ccm_datarate_t.NRF_CCM_DATARATE_250K", "NRF_CCM_DATARATE_250K"], [18, 1, 1, "c.nrf_ccm_datarate_t.NRF_CCM_DATARATE_2M", "NRF_CCM_DATARATE_2M"], [18, 1, 1, "c.nrf_ccm_datarate_t.NRF_CCM_DATARATE_4M", "NRF_CCM_DATARATE_4M"], [18, 1, 1, "c.nrf_ccm_datarate_t.NRF_CCM_DATARATE_500K", "NRF_CCM_DATARATE_500K"]], "nrf_ccm_disable": [[18, 3, 1, "c.nrf_ccm_disable", "p_reg"]], "nrf_ccm_enable": [[18, 3, 1, "c.nrf_ccm_enable", "p_reg"]], "nrf_ccm_error_t": [[18, 1, 1, "c.nrf_ccm_error_t.NRF_CCM_ERROR_ENCRYPTION_TOO_SLOW", "NRF_CCM_ERROR_ENCRYPTION_TOO_SLOW"], [18, 1, 1, "c.nrf_ccm_error_t.NRF_CCM_ERROR_NO_ERROR", "NRF_CCM_ERROR_NO_ERROR"], [18, 1, 1, "c.nrf_ccm_error_t.NRF_CCM_ERROR_PREMATURE_INPTR_END", "NRF_CCM_ERROR_PREMATURE_INPTR_END"], [18, 1, 1, "c.nrf_ccm_error_t.NRF_CCM_ERROR_PREMATURE_OUTPTR_END", "NRF_CCM_ERROR_PREMATURE_OUTPTR_END"]], "nrf_ccm_errorstatus_get": [[18, 3, 1, "c.nrf_ccm_errorstatus_get", "p_reg"]], "nrf_ccm_event_address_get": [[18, 3, 1, "c.nrf_ccm_event_address_get", "event"], [18, 3, 1, "c.nrf_ccm_event_address_get", "p_reg"]], "nrf_ccm_event_check": [[18, 3, 1, "c.nrf_ccm_event_check", "event"], [18, 3, 1, "c.nrf_ccm_event_check", "p_reg"]], "nrf_ccm_event_clear": [[18, 3, 1, "c.nrf_ccm_event_clear", "event"], [18, 3, 1, "c.nrf_ccm_event_clear", "p_reg"]], "nrf_ccm_event_t": [[18, 1, 1, "c.nrf_ccm_event_t.NRF_CCM_EVENT_END", "NRF_CCM_EVENT_END"], [18, 1, 1, "c.nrf_ccm_event_t.NRF_CCM_EVENT_ENDCRYPT", "NRF_CCM_EVENT_ENDCRYPT"], [18, 1, 1, "c.nrf_ccm_event_t.NRF_CCM_EVENT_ENDKSGEN", "NRF_CCM_EVENT_ENDKSGEN"], [18, 1, 1, "c.nrf_ccm_event_t.NRF_CCM_EVENT_ERROR", "NRF_CCM_EVENT_ERROR"]], "nrf_ccm_headermask_get": [[18, 3, 1, "c.nrf_ccm_headermask_get", "p_reg"]], "nrf_ccm_headermask_set": [[18, 3, 1, "c.nrf_ccm_headermask_set", "header_msk"], [18, 3, 1, "c.nrf_ccm_headermask_set", "p_reg"]], "nrf_ccm_in_amount_get": [[18, 3, 1, "c.nrf_ccm_in_amount_get", "p_reg"]], "nrf_ccm_in_ptr_get": [[18, 3, 1, "c.nrf_ccm_in_ptr_get", "p_reg"]], "nrf_ccm_in_ptr_set": [[18, 3, 1, "c.nrf_ccm_in_ptr_set", "p_job"], [18, 3, 1, "c.nrf_ccm_in_ptr_set", "p_reg"]], "nrf_ccm_inptr_get": [[18, 3, 1, "c.nrf_ccm_inptr_get", "p_reg"]], "nrf_ccm_inptr_set": [[18, 3, 1, "c.nrf_ccm_inptr_set", "p_data"], [18, 3, 1, "c.nrf_ccm_inptr_set", "p_reg"]], "nrf_ccm_int_disable": [[18, 3, 1, "c.nrf_ccm_int_disable", "mask"], [18, 3, 1, "c.nrf_ccm_int_disable", "p_reg"]], "nrf_ccm_int_enable": [[18, 3, 1, "c.nrf_ccm_int_enable", "mask"], [18, 3, 1, "c.nrf_ccm_int_enable", "p_reg"]], "nrf_ccm_int_enable_check": [[18, 3, 1, "c.nrf_ccm_int_enable_check", "mask"], [18, 3, 1, "c.nrf_ccm_int_enable_check", "p_reg"]], "nrf_ccm_int_mask_t": [[18, 1, 1, "c.nrf_ccm_int_mask_t.NRF_CCM_INT_ENDCRYPT_MASK", "NRF_CCM_INT_ENDCRYPT_MASK"], [18, 1, 1, "c.nrf_ccm_int_mask_t.NRF_CCM_INT_ENDKSGEN_MASK", "NRF_CCM_INT_ENDKSGEN_MASK"], [18, 1, 1, "c.nrf_ccm_int_mask_t.NRF_CCM_INT_END_MASK", "NRF_CCM_INT_END_MASK"], [18, 1, 1, "c.nrf_ccm_int_mask_t.NRF_CCM_INT_ERROR_MASK", "NRF_CCM_INT_ERROR_MASK"]], "nrf_ccm_key_get": [[18, 3, 1, "c.nrf_ccm_key_get", "p_reg"]], "nrf_ccm_key_set": [[18, 3, 1, "c.nrf_ccm_key_set", "p_key"], [18, 3, 1, "c.nrf_ccm_key_set", "p_reg"]], "nrf_ccm_length_t": [[18, 1, 1, "c.nrf_ccm_length_t.NRF_CCM_LENGTH_DEFAULT", "NRF_CCM_LENGTH_DEFAULT"], [18, 1, 1, "c.nrf_ccm_length_t.NRF_CCM_LENGTH_EXTENDED", "NRF_CCM_LENGTH_EXTENDED"]], "nrf_ccm_maclen_t": [[18, 1, 1, "c.nrf_ccm_maclen_t.NRF_CCM_MODE_MACLEN_M0", "NRF_CCM_MODE_MACLEN_M0"], [18, 1, 1, "c.nrf_ccm_maclen_t.NRF_CCM_MODE_MACLEN_M10", "NRF_CCM_MODE_MACLEN_M10"], [18, 1, 1, "c.nrf_ccm_maclen_t.NRF_CCM_MODE_MACLEN_M12", "NRF_CCM_MODE_MACLEN_M12"], [18, 1, 1, "c.nrf_ccm_maclen_t.NRF_CCM_MODE_MACLEN_M14", "NRF_CCM_MODE_MACLEN_M14"], [18, 1, 1, "c.nrf_ccm_maclen_t.NRF_CCM_MODE_MACLEN_M16", "NRF_CCM_MODE_MACLEN_M16"], [18, 1, 1, "c.nrf_ccm_maclen_t.NRF_CCM_MODE_MACLEN_M4", "NRF_CCM_MODE_MACLEN_M4"], [18, 1, 1, "c.nrf_ccm_maclen_t.NRF_CCM_MODE_MACLEN_M6", "NRF_CCM_MODE_MACLEN_M6"], [18, 1, 1, "c.nrf_ccm_maclen_t.NRF_CCM_MODE_MACLEN_M8", "NRF_CCM_MODE_MACLEN_M8"]], "nrf_ccm_macstatus_get": [[18, 3, 1, "c.nrf_ccm_macstatus_get", "p_reg"]], "nrf_ccm_maxpacketsize_set": [[18, 3, 1, "c.nrf_ccm_maxpacketsize_set", "p_reg"], [18, 3, 1, "c.nrf_ccm_maxpacketsize_set", "size"]], "nrf_ccm_micstatus_get": [[18, 3, 1, "c.nrf_ccm_micstatus_get", "p_reg"]], "nrf_ccm_mode_t": [[18, 1, 1, "c.nrf_ccm_mode_t.NRF_CCM_MODE_DECRYPTION", "NRF_CCM_MODE_DECRYPTION"], [18, 1, 1, "c.nrf_ccm_mode_t.NRF_CCM_MODE_ENCRYPTION", "NRF_CCM_MODE_ENCRYPTION"], [18, 1, 1, "c.nrf_ccm_mode_t.NRF_CCM_MODE_FAST_DECRYPTION", "NRF_CCM_MODE_FAST_DECRYPTION"]], "nrf_ccm_nonce_get": [[18, 3, 1, "c.nrf_ccm_nonce_get", "p_reg"]], "nrf_ccm_nonce_set": [[18, 3, 1, "c.nrf_ccm_nonce_set", "p_nonce"], [18, 3, 1, "c.nrf_ccm_nonce_set", "p_reg"]], "nrf_ccm_out_amount_get": [[18, 3, 1, "c.nrf_ccm_out_amount_get", "p_reg"]], "nrf_ccm_out_ptr_get": [[18, 3, 1, "c.nrf_ccm_out_ptr_get", "p_reg"]], "nrf_ccm_out_ptr_set": [[18, 3, 1, "c.nrf_ccm_out_ptr_set", "p_job"], [18, 3, 1, "c.nrf_ccm_out_ptr_set", "p_reg"]], "nrf_ccm_outptr_get": [[18, 3, 1, "c.nrf_ccm_outptr_get", "p_reg"]], "nrf_ccm_outptr_set": [[18, 3, 1, "c.nrf_ccm_outptr_set", "p_data"], [18, 3, 1, "c.nrf_ccm_outptr_set", "p_reg"]], "nrf_ccm_protocol_t": [[18, 1, 1, "c.nrf_ccm_protocol_t.NRF_CCM_MODE_PROTOCOL_BLE", "NRF_CCM_MODE_PROTOCOL_BLE"], [18, 1, 1, "c.nrf_ccm_protocol_t.NRF_CCM_MODE_PROTOCOL_IEEE802154", "NRF_CCM_MODE_PROTOCOL_IEEE802154"]], "nrf_ccm_publish_clear": [[18, 3, 1, "c.nrf_ccm_publish_clear", "event"], [18, 3, 1, "c.nrf_ccm_publish_clear", "p_reg"]], "nrf_ccm_publish_set": [[18, 3, 1, "c.nrf_ccm_publish_set", "channel"], [18, 3, 1, "c.nrf_ccm_publish_set", "event"], [18, 3, 1, "c.nrf_ccm_publish_set", "p_reg"]], "nrf_ccm_scratchptr_get": [[18, 3, 1, "c.nrf_ccm_scratchptr_get", "p_reg"]], "nrf_ccm_scratchptr_set": [[18, 3, 1, "c.nrf_ccm_scratchptr_set", "p_area"], [18, 3, 1, "c.nrf_ccm_scratchptr_set", "p_reg"]], "nrf_ccm_short_mask_t": [[18, 1, 1, "c.nrf_ccm_short_mask_t.NRF_CCM_SHORT_ENDKSGEN_CRYPT_MASK", "NRF_CCM_SHORT_ENDKSGEN_CRYPT_MASK"]], "nrf_ccm_shorts_disable": [[18, 3, 1, "c.nrf_ccm_shorts_disable", "mask"], [18, 3, 1, "c.nrf_ccm_shorts_disable", "p_reg"]], "nrf_ccm_shorts_enable": [[18, 3, 1, "c.nrf_ccm_shorts_enable", "mask"], [18, 3, 1, "c.nrf_ccm_shorts_enable", "p_reg"]], "nrf_ccm_shorts_set": [[18, 3, 1, "c.nrf_ccm_shorts_set", "mask"], [18, 3, 1, "c.nrf_ccm_shorts_set", "p_reg"]], "nrf_ccm_subscribe_clear": [[18, 3, 1, "c.nrf_ccm_subscribe_clear", "p_reg"], [18, 3, 1, "c.nrf_ccm_subscribe_clear", "task"]], "nrf_ccm_subscribe_set": [[18, 3, 1, "c.nrf_ccm_subscribe_set", "channel"], [18, 3, 1, "c.nrf_ccm_subscribe_set", "p_reg"], [18, 3, 1, "c.nrf_ccm_subscribe_set", "task"]], "nrf_ccm_task_address_get": [[18, 3, 1, "c.nrf_ccm_task_address_get", "p_reg"], [18, 3, 1, "c.nrf_ccm_task_address_get", "task"]], "nrf_ccm_task_t": [[18, 1, 1, "c.nrf_ccm_task_t.NRF_CCM_TASK_CRYPT", "NRF_CCM_TASK_CRYPT"], [18, 1, 1, "c.nrf_ccm_task_t.NRF_CCM_TASK_KSGEN", "NRF_CCM_TASK_KSGEN"], [18, 1, 1, "c.nrf_ccm_task_t.NRF_CCM_TASK_RATEOVERRIDE", "NRF_CCM_TASK_RATEOVERRIDE"], [18, 1, 1, "c.nrf_ccm_task_t.NRF_CCM_TASK_START", "NRF_CCM_TASK_START"], [18, 1, 1, "c.nrf_ccm_task_t.NRF_CCM_TASK_STOP", "NRF_CCM_TASK_STOP"]], "nrf_ccm_task_trigger": [[18, 3, 1, "c.nrf_ccm_task_trigger", "p_reg"], [18, 3, 1, "c.nrf_ccm_task_trigger", "task"]], "nrf_clock_alwaysrun_active_get": [[21, 3, 1, "c.nrf_clock_alwaysrun_active_get", "domain"], [21, 3, 1, "c.nrf_clock_alwaysrun_active_get", "p_reg"]], "nrf_clock_alwaysrun_get": [[21, 3, 1, "c.nrf_clock_alwaysrun_get", "domain"], [21, 3, 1, "c.nrf_clock_alwaysrun_get", "p_reg"]], "nrf_clock_alwaysrun_set": [[21, 3, 1, "c.nrf_clock_alwaysrun_set", "alwaysrun"], [21, 3, 1, "c.nrf_clock_alwaysrun_set", "domain"], [21, 3, 1, "c.nrf_clock_alwaysrun_set", "p_reg"]], "nrf_clock_cal_timer_timeout_set": [[21, 3, 1, "c.nrf_clock_cal_timer_timeout_set", "interval"], [21, 3, 1, "c.nrf_clock_cal_timer_timeout_set", "p_reg"]], "nrf_clock_domain_t": [[21, 1, 1, "c.nrf_clock_domain_t.NRF_CLOCK_DOMAIN_HFCLK", "NRF_CLOCK_DOMAIN_HFCLK"], [21, 1, 1, "c.nrf_clock_domain_t.NRF_CLOCK_DOMAIN_HFCLK192M", "NRF_CLOCK_DOMAIN_HFCLK192M"], [21, 1, 1, "c.nrf_clock_domain_t.NRF_CLOCK_DOMAIN_HFCLKAUDIO", "NRF_CLOCK_DOMAIN_HFCLKAUDIO"], [21, 1, 1, "c.nrf_clock_domain_t.NRF_CLOCK_DOMAIN_LFCLK", "NRF_CLOCK_DOMAIN_LFCLK"]], "nrf_clock_event_address_get": [[21, 3, 1, "c.nrf_clock_event_address_get", "event"], [21, 3, 1, "c.nrf_clock_event_address_get", "p_reg"]], "nrf_clock_event_check": [[21, 3, 1, "c.nrf_clock_event_check", "event"], [21, 3, 1, "c.nrf_clock_event_check", "p_reg"]], "nrf_clock_event_clear": [[21, 3, 1, "c.nrf_clock_event_clear", "event"], [21, 3, 1, "c.nrf_clock_event_clear", "p_reg"]], "nrf_clock_event_t": [[21, 1, 1, "c.nrf_clock_event_t.NRF_CLOCK_EVENT_CTSTARTED", "NRF_CLOCK_EVENT_CTSTARTED"], [21, 1, 1, "c.nrf_clock_event_t.NRF_CLOCK_EVENT_CTSTOPPED", "NRF_CLOCK_EVENT_CTSTOPPED"], [21, 1, 1, "c.nrf_clock_event_t.NRF_CLOCK_EVENT_CTTO", "NRF_CLOCK_EVENT_CTTO"], [21, 1, 1, "c.nrf_clock_event_t.NRF_CLOCK_EVENT_DONE", "NRF_CLOCK_EVENT_DONE"], [21, 1, 1, "c.nrf_clock_event_t.NRF_CLOCK_EVENT_HFCLK192MSTARTED", "NRF_CLOCK_EVENT_HFCLK192MSTARTED"], [21, 1, 1, "c.nrf_clock_event_t.NRF_CLOCK_EVENT_HFCLKSTARTED", "NRF_CLOCK_EVENT_HFCLKSTARTED"], [21, 1, 1, "c.nrf_clock_event_t.NRF_CLOCK_EVENT_LFCLKSTARTED", "NRF_CLOCK_EVENT_LFCLKSTARTED"], [21, 1, 1, "c.nrf_clock_event_t.NRF_CLOCK_EVENT_PLLSTARTED", "NRF_CLOCK_EVENT_PLLSTARTED"]], "nrf_clock_hf_is_running": [[21, 3, 1, "c.nrf_clock_hf_is_running", "clk_src"], [21, 3, 1, "c.nrf_clock_hf_is_running", "p_reg"]], "nrf_clock_hf_src_get": [[21, 3, 1, "c.nrf_clock_hf_src_get", "p_reg"]], "nrf_clock_hf_src_set": [[21, 3, 1, "c.nrf_clock_hf_src_set", "p_reg"], [21, 3, 1, "c.nrf_clock_hf_src_set", "source"]], "nrf_clock_hf_start_task_status_get": [[21, 3, 1, "c.nrf_clock_hf_start_task_status_get", "p_reg"]], "nrf_clock_hfclk192m_div_get": [[21, 3, 1, "c.nrf_clock_hfclk192m_div_get", "p_reg"]], "nrf_clock_hfclk192m_div_set": [[21, 3, 1, "c.nrf_clock_hfclk192m_div_set", "divider"], [21, 3, 1, "c.nrf_clock_hfclk192m_div_set", "p_reg"]], "nrf_clock_hfclk192m_src_get": [[21, 3, 1, "c.nrf_clock_hfclk192m_src_get", "p_reg"]], "nrf_clock_hfclk192m_src_set": [[21, 3, 1, "c.nrf_clock_hfclk192m_src_set", "p_reg"], [21, 3, 1, "c.nrf_clock_hfclk192m_src_set", "source"]], "nrf_clock_hfclk_div_t": [[21, 1, 1, "c.nrf_clock_hfclk_div_t.NRF_CLOCK_HFCLK_DIV_1", "NRF_CLOCK_HFCLK_DIV_1"], [21, 1, 1, "c.nrf_clock_hfclk_div_t.NRF_CLOCK_HFCLK_DIV_2", "NRF_CLOCK_HFCLK_DIV_2"], [21, 1, 1, "c.nrf_clock_hfclk_div_t.NRF_CLOCK_HFCLK_DIV_4", "NRF_CLOCK_HFCLK_DIV_4"]], "nrf_clock_hfclk_t": [[21, 1, 1, "c.nrf_clock_hfclk_t.NRF_CLOCK_HFCLK_HIGH_ACCURACY", "NRF_CLOCK_HFCLK_HIGH_ACCURACY"], [21, 1, 1, "c.nrf_clock_hfclk_t.NRF_CLOCK_HFCLK_LOW_ACCURACY", "NRF_CLOCK_HFCLK_LOW_ACCURACY"]], "nrf_clock_hfclkaudio_config_get": [[21, 3, 1, "c.nrf_clock_hfclkaudio_config_get", "p_reg"]], "nrf_clock_hfclkaudio_config_set": [[21, 3, 1, "c.nrf_clock_hfclkaudio_config_set", "freq_value"], [21, 3, 1, "c.nrf_clock_hfclkaudio_config_set", "p_reg"]], "nrf_clock_int_disable": [[21, 3, 1, "c.nrf_clock_int_disable", "mask"], [21, 3, 1, "c.nrf_clock_int_disable", "p_reg"]], "nrf_clock_int_enable": [[21, 3, 1, "c.nrf_clock_int_enable", "mask"], [21, 3, 1, "c.nrf_clock_int_enable", "p_reg"]], "nrf_clock_int_enable_check": [[21, 3, 1, "c.nrf_clock_int_enable_check", "mask"], [21, 3, 1, "c.nrf_clock_int_enable_check", "p_reg"]], "nrf_clock_int_mask_t": [[21, 1, 1, "c.nrf_clock_int_mask_t.NRFX_CLOCK_INT_PLL_STARTED_MASK", "NRFX_CLOCK_INT_PLL_STARTED_MASK"], [21, 1, 1, "c.nrf_clock_int_mask_t.NRF_CLOCK_INT_CTSTARTED_MASK", "NRF_CLOCK_INT_CTSTARTED_MASK"], [21, 1, 1, "c.nrf_clock_int_mask_t.NRF_CLOCK_INT_CTSTOPPED_MASK", "NRF_CLOCK_INT_CTSTOPPED_MASK"], [21, 1, 1, "c.nrf_clock_int_mask_t.NRF_CLOCK_INT_CTTO_MASK", "NRF_CLOCK_INT_CTTO_MASK"], [21, 1, 1, "c.nrf_clock_int_mask_t.NRF_CLOCK_INT_DONE_MASK", "NRF_CLOCK_INT_DONE_MASK"], [21, 1, 1, "c.nrf_clock_int_mask_t.NRF_CLOCK_INT_HF192M_STARTED_MASK", "NRF_CLOCK_INT_HF192M_STARTED_MASK"], [21, 1, 1, "c.nrf_clock_int_mask_t.NRF_CLOCK_INT_HF_STARTED_MASK", "NRF_CLOCK_INT_HF_STARTED_MASK"], [21, 1, 1, "c.nrf_clock_int_mask_t.NRF_CLOCK_INT_LF_STARTED_MASK", "NRF_CLOCK_INT_LF_STARTED_MASK"]], "nrf_clock_is_running": [[21, 3, 1, "c.nrf_clock_is_running", "domain"], [21, 3, 1, "c.nrf_clock_is_running", "p_clk_src"], [21, 3, 1, "c.nrf_clock_is_running", "p_reg"]], "nrf_clock_lf_actv_src_get": [[21, 3, 1, "c.nrf_clock_lf_actv_src_get", "p_reg"]], "nrf_clock_lf_is_running": [[21, 3, 1, "c.nrf_clock_lf_is_running", "p_reg"]], "nrf_clock_lf_src_get": [[21, 3, 1, "c.nrf_clock_lf_src_get", "p_reg"]], "nrf_clock_lf_src_set": [[21, 3, 1, "c.nrf_clock_lf_src_set", "p_reg"], [21, 3, 1, "c.nrf_clock_lf_src_set", "source"]], "nrf_clock_lf_srccopy_get": [[21, 3, 1, "c.nrf_clock_lf_srccopy_get", "p_reg"]], "nrf_clock_lf_start_task_status_get": [[21, 3, 1, "c.nrf_clock_lf_start_task_status_get", "p_reg"]], "nrf_clock_lfclk_t": [[21, 1, 1, "c.nrf_clock_lfclk_t.NRF_CLOCK_LFCLK_LFULP", "NRF_CLOCK_LFCLK_LFULP"], [21, 1, 1, "c.nrf_clock_lfclk_t.NRF_CLOCK_LFCLK_RC", "NRF_CLOCK_LFCLK_RC"], [21, 1, 1, "c.nrf_clock_lfclk_t.NRF_CLOCK_LFCLK_SYNTH", "NRF_CLOCK_LFCLK_SYNTH"], [21, 1, 1, "c.nrf_clock_lfclk_t.NRF_CLOCK_LFCLK_XTAL", "NRF_CLOCK_LFCLK_XTAL"], [21, 1, 1, "c.nrf_clock_lfclk_t.NRF_CLOCK_LFCLK_XTAL_FULL_SWING", "NRF_CLOCK_LFCLK_XTAL_FULL_SWING"], [21, 1, 1, "c.nrf_clock_lfclk_t.NRF_CLOCK_LFCLK_XTAL_LOW_SWING", "NRF_CLOCK_LFCLK_XTAL_LOW_SWING"]], "nrf_clock_publish_clear": [[21, 3, 1, "c.nrf_clock_publish_clear", "event"], [21, 3, 1, "c.nrf_clock_publish_clear", "p_reg"]], "nrf_clock_publish_set": [[21, 3, 1, "c.nrf_clock_publish_set", "channel"], [21, 3, 1, "c.nrf_clock_publish_set", "event"], [21, 3, 1, "c.nrf_clock_publish_set", "p_reg"]], "nrf_clock_start_task_check": [[21, 3, 1, "c.nrf_clock_start_task_check", "domain"], [21, 3, 1, "c.nrf_clock_start_task_check", "p_reg"]], "nrf_clock_start_task_status_t": [[21, 1, 1, "c.nrf_clock_start_task_status_t.NRF_CLOCK_START_TASK_NOT_TRIGGERED", "NRF_CLOCK_START_TASK_NOT_TRIGGERED"], [21, 1, 1, "c.nrf_clock_start_task_status_t.NRF_CLOCK_START_TASK_TRIGGERED", "NRF_CLOCK_START_TASK_TRIGGERED"]], "nrf_clock_subscribe_clear": [[21, 3, 1, "c.nrf_clock_subscribe_clear", "p_reg"], [21, 3, 1, "c.nrf_clock_subscribe_clear", "task"]], "nrf_clock_subscribe_set": [[21, 3, 1, "c.nrf_clock_subscribe_set", "channel"], [21, 3, 1, "c.nrf_clock_subscribe_set", "p_reg"], [21, 3, 1, "c.nrf_clock_subscribe_set", "task"]], "nrf_clock_task_address_get": [[21, 3, 1, "c.nrf_clock_task_address_get", "p_reg"], [21, 3, 1, "c.nrf_clock_task_address_get", "task"]], "nrf_clock_task_t": [[21, 1, 1, "c.nrf_clock_task_t.NRF_CLOCK_TASK_CAL", "NRF_CLOCK_TASK_CAL"], [21, 1, 1, "c.nrf_clock_task_t.NRF_CLOCK_TASK_CTSTART", "NRF_CLOCK_TASK_CTSTART"], [21, 1, 1, "c.nrf_clock_task_t.NRF_CLOCK_TASK_CTSTOP", "NRF_CLOCK_TASK_CTSTOP"], [21, 1, 1, "c.nrf_clock_task_t.NRF_CLOCK_TASK_HFCLK192MSTART", "NRF_CLOCK_TASK_HFCLK192MSTART"], [21, 1, 1, "c.nrf_clock_task_t.NRF_CLOCK_TASK_HFCLK192MSTOP", "NRF_CLOCK_TASK_HFCLK192MSTOP"], [21, 1, 1, "c.nrf_clock_task_t.NRF_CLOCK_TASK_HFCLKAUDIOSTOP", "NRF_CLOCK_TASK_HFCLKAUDIOSTOP"], [21, 1, 1, "c.nrf_clock_task_t.NRF_CLOCK_TASK_HFCLKSTART", "NRF_CLOCK_TASK_HFCLKSTART"], [21, 1, 1, "c.nrf_clock_task_t.NRF_CLOCK_TASK_HFCLKSTOP", "NRF_CLOCK_TASK_HFCLKSTOP"], [21, 1, 1, "c.nrf_clock_task_t.NRF_CLOCK_TASK_LFCLKSTART", "NRF_CLOCK_TASK_LFCLKSTART"], [21, 1, 1, "c.nrf_clock_task_t.NRF_CLOCK_TASK_LFCLKSTOP", "NRF_CLOCK_TASK_LFCLKSTOP"], [21, 1, 1, "c.nrf_clock_task_t.NRF_CLOCK_TASK_PLLSTART", "NRF_CLOCK_TASK_PLLSTART"], [21, 1, 1, "c.nrf_clock_task_t.NRF_CLOCK_TASK_PLLSTOP", "NRF_CLOCK_TASK_PLLSTOP"]], "nrf_clock_task_trigger": [[21, 3, 1, "c.nrf_clock_task_trigger", "p_reg"], [21, 3, 1, "c.nrf_clock_task_trigger", "task"]], "nrf_comp_disable": [[24, 3, 1, "c.nrf_comp_disable", "p_reg"]], "nrf_comp_enable": [[24, 3, 1, "c.nrf_comp_enable", "p_reg"]], "nrf_comp_enable_check": [[24, 3, 1, "c.nrf_comp_enable_check", "p_reg"]], "nrf_comp_event_address_get": [[24, 3, 1, "c.nrf_comp_event_address_get", "event"], [24, 3, 1, "c.nrf_comp_event_address_get", "p_reg"]], "nrf_comp_event_check": [[24, 3, 1, "c.nrf_comp_event_check", "event"], [24, 3, 1, "c.nrf_comp_event_check", "p_reg"]], "nrf_comp_event_clear": [[24, 3, 1, "c.nrf_comp_event_clear", "event"], [24, 3, 1, "c.nrf_comp_event_clear", "p_reg"]], "nrf_comp_event_t": [[24, 1, 1, "c.nrf_comp_event_t.NRF_COMP_EVENT_CROSS", "NRF_COMP_EVENT_CROSS"], [24, 1, 1, "c.nrf_comp_event_t.NRF_COMP_EVENT_DOWN", "NRF_COMP_EVENT_DOWN"], [24, 1, 1, "c.nrf_comp_event_t.NRF_COMP_EVENT_READY", "NRF_COMP_EVENT_READY"], [24, 1, 1, "c.nrf_comp_event_t.NRF_COMP_EVENT_UP", "NRF_COMP_EVENT_UP"]], "nrf_comp_ext_ref_set": [[24, 3, 1, "c.nrf_comp_ext_ref_set", "ext_ref"], [24, 3, 1, "c.nrf_comp_ext_ref_set", "p_reg"]], "nrf_comp_hyst_t": [[24, 1, 1, "c.nrf_comp_hyst_t.NRF_COMP_HYST_40MV", "NRF_COMP_HYST_40MV"], [24, 1, 1, "c.nrf_comp_hyst_t.NRF_COMP_HYST_50MV", "NRF_COMP_HYST_50MV"], [24, 1, 1, "c.nrf_comp_hyst_t.NRF_COMP_HYST_NO_HYST", "NRF_COMP_HYST_NO_HYST"]], "nrf_comp_hysteresis_set": [[24, 3, 1, "c.nrf_comp_hysteresis_set", "hyst"], [24, 3, 1, "c.nrf_comp_hysteresis_set", "p_reg"]], "nrf_comp_input_select": [[24, 3, 1, "c.nrf_comp_input_select", "input"], [24, 3, 1, "c.nrf_comp_input_select", "p_reg"]], "nrf_comp_int_disable": [[24, 3, 1, "c.nrf_comp_int_disable", "mask"], [24, 3, 1, "c.nrf_comp_int_disable", "p_reg"]], "nrf_comp_int_enable": [[24, 3, 1, "c.nrf_comp_int_enable", "mask"], [24, 3, 1, "c.nrf_comp_int_enable", "p_reg"]], "nrf_comp_int_enable_check": [[24, 3, 1, "c.nrf_comp_int_enable_check", "mask"], [24, 3, 1, "c.nrf_comp_int_enable_check", "p_reg"]], "nrf_comp_int_mask_t": [[24, 1, 1, "c.nrf_comp_int_mask_t.NRF_COMP_INT_CROSS_MASK", "NRF_COMP_INT_CROSS_MASK"], [24, 1, 1, "c.nrf_comp_int_mask_t.NRF_COMP_INT_DOWN_MASK", "NRF_COMP_INT_DOWN_MASK"], [24, 1, 1, "c.nrf_comp_int_mask_t.NRF_COMP_INT_READY_MASK", "NRF_COMP_INT_READY_MASK"], [24, 1, 1, "c.nrf_comp_int_mask_t.NRF_COMP_INT_UP_MASK", "NRF_COMP_INT_UP_MASK"]], "nrf_comp_isource_set": [[24, 3, 1, "c.nrf_comp_isource_set", "isource"], [24, 3, 1, "c.nrf_comp_isource_set", "p_reg"]], "nrf_comp_main_mode_set": [[24, 3, 1, "c.nrf_comp_main_mode_set", "main_mode"], [24, 3, 1, "c.nrf_comp_main_mode_set", "p_reg"]], "nrf_comp_main_mode_t": [[24, 1, 1, "c.nrf_comp_main_mode_t.NRF_COMP_MAIN_MODE_DIFF", "NRF_COMP_MAIN_MODE_DIFF"], [24, 1, 1, "c.nrf_comp_main_mode_t.NRF_COMP_MAIN_MODE_SE", "NRF_COMP_MAIN_MODE_SE"]], "nrf_comp_ref_conf_t": [[24, 6, 1, "c.nrf_comp_ref_conf_t.external", "external"], [24, 6, 1, "c.nrf_comp_ref_conf_t.reference", "reference"]], "nrf_comp_ref_set": [[24, 3, 1, "c.nrf_comp_ref_set", "p_reg"], [24, 3, 1, "c.nrf_comp_ref_set", "reference"]], "nrf_comp_ref_t": [[24, 1, 1, "c.nrf_comp_ref_t.NRF_COMP_REF_AREF", "NRF_COMP_REF_AREF"], [24, 1, 1, "c.nrf_comp_ref_t.NRF_COMP_REF_AVDDAO1V8", "NRF_COMP_REF_AVDDAO1V8"], [24, 1, 1, "c.nrf_comp_ref_t.NRF_COMP_REF_INT_1V2", "NRF_COMP_REF_INT_1V2"], [24, 1, 1, "c.nrf_comp_ref_t.NRF_COMP_REF_INT_1V8", "NRF_COMP_REF_INT_1V8"], [24, 1, 1, "c.nrf_comp_ref_t.NRF_COMP_REF_INT_2V4", "NRF_COMP_REF_INT_2V4"], [24, 1, 1, "c.nrf_comp_ref_t.NRF_COMP_REF_VDD", "NRF_COMP_REF_VDD"]], "nrf_comp_result_get": [[24, 3, 1, "c.nrf_comp_result_get", "p_reg"]], "nrf_comp_short_mask_t": [[24, 1, 1, "c.nrf_comp_short_mask_t.NRF_COMP_SHORT_STOP_CROSS_MASK", "NRF_COMP_SHORT_STOP_CROSS_MASK"], [24, 1, 1, "c.nrf_comp_short_mask_t.NRF_COMP_SHORT_STOP_DOWN_MASK", "NRF_COMP_SHORT_STOP_DOWN_MASK"], [24, 1, 1, "c.nrf_comp_short_mask_t.NRF_COMP_SHORT_STOP_UP_MASK", "NRF_COMP_SHORT_STOP_UP_MASK"]], "nrf_comp_shorts_disable": [[24, 3, 1, "c.nrf_comp_shorts_disable", "mask"], [24, 3, 1, "c.nrf_comp_shorts_disable", "p_reg"]], "nrf_comp_shorts_enable": [[24, 3, 1, "c.nrf_comp_shorts_enable", "mask"], [24, 3, 1, "c.nrf_comp_shorts_enable", "p_reg"]], "nrf_comp_sp_mode_t": [[24, 1, 1, "c.nrf_comp_sp_mode_t.NRF_COMP_SP_MODE_HIGH", "NRF_COMP_SP_MODE_HIGH"], [24, 1, 1, "c.nrf_comp_sp_mode_t.NRF_COMP_SP_MODE_LOW", "NRF_COMP_SP_MODE_LOW"], [24, 1, 1, "c.nrf_comp_sp_mode_t.NRF_COMP_SP_MODE_NORMAL", "NRF_COMP_SP_MODE_NORMAL"]], "nrf_comp_speed_mode_set": [[24, 3, 1, "c.nrf_comp_speed_mode_set", "p_reg"], [24, 3, 1, "c.nrf_comp_speed_mode_set", "speed_mode"]], "nrf_comp_task_address_get": [[24, 3, 1, "c.nrf_comp_task_address_get", "p_reg"], [24, 3, 1, "c.nrf_comp_task_address_get", "task"]], "nrf_comp_task_t": [[24, 1, 1, "c.nrf_comp_task_t.NRF_COMP_TASK_SAMPLE", "NRF_COMP_TASK_SAMPLE"], [24, 1, 1, "c.nrf_comp_task_t.NRF_COMP_TASK_START", "NRF_COMP_TASK_START"], [24, 1, 1, "c.nrf_comp_task_t.NRF_COMP_TASK_STOP", "NRF_COMP_TASK_STOP"]], "nrf_comp_task_trigger": [[24, 3, 1, "c.nrf_comp_task_trigger", "p_reg"], [24, 3, 1, "c.nrf_comp_task_trigger", "task"]], "nrf_comp_th_set": [[24, 3, 1, "c.nrf_comp_th_set", "p_reg"], [24, 3, 1, "c.nrf_comp_th_set", "threshold"]], "nrf_comp_th_t": [[24, 6, 1, "c.nrf_comp_th_t.th_down", "th_down"], [24, 6, 1, "c.nrf_comp_th_t.th_up", "th_up"]], "nrf_cracen_event_address_get": [[27, 3, 1, "c.nrf_cracen_event_address_get", "event"], [27, 3, 1, "c.nrf_cracen_event_address_get", "p_reg"]], "nrf_cracen_event_check": [[27, 3, 1, "c.nrf_cracen_event_check", "event"], [27, 3, 1, "c.nrf_cracen_event_check", "p_reg"]], "nrf_cracen_event_clear": [[27, 3, 1, "c.nrf_cracen_event_clear", "event"], [27, 3, 1, "c.nrf_cracen_event_clear", "p_reg"]], "nrf_cracen_event_t": [[27, 1, 1, "c.nrf_cracen_event_t.NRF_CRACEN_EVENT_CRYPTOMASTER", "NRF_CRACEN_EVENT_CRYPTOMASTER"], [27, 1, 1, "c.nrf_cracen_event_t.NRF_CRACEN_EVENT_PKE_IKG", "NRF_CRACEN_EVENT_PKE_IKG"], [27, 1, 1, "c.nrf_cracen_event_t.NRF_CRACEN_EVENT_RNG", "NRF_CRACEN_EVENT_RNG"]], "nrf_cracen_int_disable": [[27, 3, 1, "c.nrf_cracen_int_disable", "mask"], [27, 3, 1, "c.nrf_cracen_int_disable", "p_reg"]], "nrf_cracen_int_enable": [[27, 3, 1, "c.nrf_cracen_int_enable", "mask"], [27, 3, 1, "c.nrf_cracen_int_enable", "p_reg"]], "nrf_cracen_int_enable_check": [[27, 3, 1, "c.nrf_cracen_int_enable_check", "mask"], [27, 3, 1, "c.nrf_cracen_int_enable_check", "p_reg"]], "nrf_cracen_int_mask_t": [[27, 1, 1, "c.nrf_cracen_int_mask_t.NRF_CRACEN_INT_CRYPTOMASTER_MASK", "NRF_CRACEN_INT_CRYPTOMASTER_MASK"], [27, 1, 1, "c.nrf_cracen_int_mask_t.NRF_CRACEN_INT_PKE_IKG_MASK", "NRF_CRACEN_INT_PKE_IKG_MASK"], [27, 1, 1, "c.nrf_cracen_int_mask_t.NRF_CRACEN_INT_RNG_MASK", "NRF_CRACEN_INT_RNG_MASK"]], "nrf_cracen_module_disable": [[27, 3, 1, "c.nrf_cracen_module_disable", "modules"], [27, 3, 1, "c.nrf_cracen_module_disable", "p_reg"]], "nrf_cracen_module_enable": [[27, 3, 1, "c.nrf_cracen_module_enable", "modules"], [27, 3, 1, "c.nrf_cracen_module_enable", "p_reg"]], "nrf_cracen_module_get": [[27, 3, 1, "c.nrf_cracen_module_get", "p_reg"]], "nrf_cracen_module_mask_t": [[27, 1, 1, "c.nrf_cracen_module_mask_t.NRF_CRACEN_MODULE_CRYPTOMASTER_MASK", "NRF_CRACEN_MODULE_CRYPTOMASTER_MASK"], [27, 1, 1, "c.nrf_cracen_module_mask_t.NRF_CRACEN_MODULE_PKE_IKG_MASK", "NRF_CRACEN_MODULE_PKE_IKG_MASK"], [27, 1, 1, "c.nrf_cracen_module_mask_t.NRF_CRACEN_MODULE_RNG_MASK", "NRF_CRACEN_MODULE_RNG_MASK"]], "nrf_cracen_seed_set": [[27, 3, 1, "c.nrf_cracen_seed_set", "idx"], [27, 3, 1, "c.nrf_cracen_seed_set", "p_reg"], [27, 3, 1, "c.nrf_cracen_seed_set", "value"]], "nrf_cracen_seedram_lock_check": [[27, 3, 1, "c.nrf_cracen_seedram_lock_check", "p_reg"]], "nrf_cracen_seedram_lock_enable_set": [[27, 3, 1, "c.nrf_cracen_seedram_lock_enable_set", "enable"], [27, 3, 1, "c.nrf_cracen_seedram_lock_enable_set", "p_reg"]], "nrf_ctrlap_bootmode_t": [[29, 1, 1, "c.nrf_ctrlap_bootmode_t.NRF_CTRLAP_MODE_NORMAL", "NRF_CTRLAP_MODE_NORMAL"], [29, 1, 1, "c.nrf_ctrlap_bootmode_t.NRF_CTRLAP_MODE_ROM_OPERATION", "NRF_CTRLAP_MODE_ROM_OPERATION"]], "nrf_ctrlap_event_address_get": [[29, 3, 1, "c.nrf_ctrlap_event_address_get", "event"], [29, 3, 1, "c.nrf_ctrlap_event_address_get", "p_reg"]], "nrf_ctrlap_event_check": [[29, 3, 1, "c.nrf_ctrlap_event_check", "event"], [29, 3, 1, "c.nrf_ctrlap_event_check", "p_reg"]], "nrf_ctrlap_event_clear": [[29, 3, 1, "c.nrf_ctrlap_event_clear", "event"], [29, 3, 1, "c.nrf_ctrlap_event_clear", "p_reg"]], "nrf_ctrlap_event_t": [[29, 1, 1, "c.nrf_ctrlap_event_t.NRF_CTRLAP_EVENT_RXREADY", "NRF_CTRLAP_EVENT_RXREADY"], [29, 1, 1, "c.nrf_ctrlap_event_t.NRF_CTRLAP_EVENT_TXDONE", "NRF_CTRLAP_EVENT_TXDONE"]], "nrf_ctrlap_info_get": [[29, 3, 1, "c.nrf_ctrlap_info_get", "p_data"], [29, 3, 1, "c.nrf_ctrlap_info_get", "p_reg"]], "nrf_ctrlap_info_set": [[29, 3, 1, "c.nrf_ctrlap_info_set", "p_data"], [29, 3, 1, "c.nrf_ctrlap_info_set", "p_reg"]], "nrf_ctrlap_info_t": [[29, 6, 1, "c.nrf_ctrlap_info_t.hw_revision", "hw_revision"], [29, 6, 1, "c.nrf_ctrlap_info_t.partno", "partno"], [29, 6, 1, "c.nrf_ctrlap_info_t.ready", "ready"]], "nrf_ctrlap_int_disable": [[29, 3, 1, "c.nrf_ctrlap_int_disable", "mask"], [29, 3, 1, "c.nrf_ctrlap_int_disable", "p_reg"]], "nrf_ctrlap_int_enable": [[29, 3, 1, "c.nrf_ctrlap_int_enable", "mask"], [29, 3, 1, "c.nrf_ctrlap_int_enable", "p_reg"]], "nrf_ctrlap_int_enable_check": [[29, 3, 1, "c.nrf_ctrlap_int_enable_check", "mask"], [29, 3, 1, "c.nrf_ctrlap_int_enable_check", "p_reg"]], "nrf_ctrlap_int_mask_t": [[29, 1, 1, "c.nrf_ctrlap_int_mask_t.NRF_CTRLAP_INT_RXREADY_MASK", "NRF_CTRLAP_INT_RXREADY_MASK"], [29, 1, 1, "c.nrf_ctrlap_int_mask_t.NRF_CTRLAP_INT_TXDONE_MASK", "NRF_CTRLAP_INT_TXDONE_MASK"]], "nrf_ctrlap_int_pending_get": [[29, 3, 1, "c.nrf_ctrlap_int_pending_get", "p_reg"]], "nrf_ctrlap_mailbox_bootmode_get": [[29, 3, 1, "c.nrf_ctrlap_mailbox_bootmode_get", "p_reg"]], "nrf_ctrlap_mailbox_rxdata_get": [[29, 3, 1, "c.nrf_ctrlap_mailbox_rxdata_get", "p_reg"]], "nrf_ctrlap_mailbox_rxstatus_pending_check": [[29, 3, 1, "c.nrf_ctrlap_mailbox_rxstatus_pending_check", "p_reg"]], "nrf_ctrlap_mailbox_txdata_get": [[29, 3, 1, "c.nrf_ctrlap_mailbox_txdata_get", "p_reg"]], "nrf_ctrlap_mailbox_txdata_set": [[29, 3, 1, "c.nrf_ctrlap_mailbox_txdata_set", "data"], [29, 3, 1, "c.nrf_ctrlap_mailbox_txdata_set", "p_reg"]], "nrf_ctrlap_mailbox_txstatus_pending_check": [[29, 3, 1, "c.nrf_ctrlap_mailbox_txstatus_pending_check", "p_reg"]], "nrf_dcnf_cpuid_get": [[31, 3, 1, "c.nrf_dcnf_cpuid_get", "p_reg"]], "nrf_dppi_channel_check": [[34, 3, 1, "c.nrf_dppi_channel_check", "channel"], [34, 3, 1, "c.nrf_dppi_channel_check", "p_reg"]], "nrf_dppi_channel_group_t": [[34, 1, 1, "c.nrf_dppi_channel_group_t.NRF_DPPI_CHANNEL_GROUP0", "NRF_DPPI_CHANNEL_GROUP0"], [34, 1, 1, "c.nrf_dppi_channel_group_t.NRF_DPPI_CHANNEL_GROUP1", "NRF_DPPI_CHANNEL_GROUP1"], [34, 1, 1, "c.nrf_dppi_channel_group_t.NRF_DPPI_CHANNEL_GROUP2", "NRF_DPPI_CHANNEL_GROUP2"], [34, 1, 1, "c.nrf_dppi_channel_group_t.NRF_DPPI_CHANNEL_GROUP3", "NRF_DPPI_CHANNEL_GROUP3"], [34, 1, 1, "c.nrf_dppi_channel_group_t.NRF_DPPI_CHANNEL_GROUP4", "NRF_DPPI_CHANNEL_GROUP4"], [34, 1, 1, "c.nrf_dppi_channel_group_t.NRF_DPPI_CHANNEL_GROUP5", "NRF_DPPI_CHANNEL_GROUP5"]], "nrf_dppi_channel_number_get": [[34, 3, 1, "c.nrf_dppi_channel_number_get", "p_reg"]], "nrf_dppi_channels_disable": [[34, 3, 1, "c.nrf_dppi_channels_disable", "mask"], [34, 3, 1, "c.nrf_dppi_channels_disable", "p_reg"]], "nrf_dppi_channels_disable_all": [[34, 3, 1, "c.nrf_dppi_channels_disable_all", "p_reg"]], "nrf_dppi_channels_enable": [[34, 3, 1, "c.nrf_dppi_channels_enable", "mask"], [34, 3, 1, "c.nrf_dppi_channels_enable", "p_reg"]], "nrf_dppi_channels_group_set": [[34, 3, 1, "c.nrf_dppi_channels_group_set", "channel_group"], [34, 3, 1, "c.nrf_dppi_channels_group_set", "channel_mask"], [34, 3, 1, "c.nrf_dppi_channels_group_set", "p_reg"]], "nrf_dppi_channels_include_in_group": [[34, 3, 1, "c.nrf_dppi_channels_include_in_group", "channel_group"], [34, 3, 1, "c.nrf_dppi_channels_include_in_group", "channel_mask"], [34, 3, 1, "c.nrf_dppi_channels_include_in_group", "p_reg"]], "nrf_dppi_channels_remove_from_group": [[34, 3, 1, "c.nrf_dppi_channels_remove_from_group", "channel_group"], [34, 3, 1, "c.nrf_dppi_channels_remove_from_group", "channel_mask"], [34, 3, 1, "c.nrf_dppi_channels_remove_from_group", "p_reg"]], "nrf_dppi_group_clear": [[34, 3, 1, "c.nrf_dppi_group_clear", "group"], [34, 3, 1, "c.nrf_dppi_group_clear", "p_reg"]], "nrf_dppi_group_disable": [[34, 3, 1, "c.nrf_dppi_group_disable", "group"], [34, 3, 1, "c.nrf_dppi_group_disable", "p_reg"]], "nrf_dppi_group_disable_task_get": [[34, 3, 1, "c.nrf_dppi_group_disable_task_get", "index"]], "nrf_dppi_group_enable": [[34, 3, 1, "c.nrf_dppi_group_enable", "group"], [34, 3, 1, "c.nrf_dppi_group_enable", "p_reg"]], "nrf_dppi_group_enable_task_get": [[34, 3, 1, "c.nrf_dppi_group_enable_task_get", "index"]], "nrf_dppi_group_number_get": [[34, 3, 1, "c.nrf_dppi_group_number_get", "p_reg"]], "nrf_dppi_subscribe_clear": [[34, 3, 1, "c.nrf_dppi_subscribe_clear", "p_reg"], [34, 3, 1, "c.nrf_dppi_subscribe_clear", "task"]], "nrf_dppi_subscribe_set": [[34, 3, 1, "c.nrf_dppi_subscribe_set", "channel"], [34, 3, 1, "c.nrf_dppi_subscribe_set", "p_reg"], [34, 3, 1, "c.nrf_dppi_subscribe_set", "task"]], "nrf_dppi_task_address_get": [[34, 3, 1, "c.nrf_dppi_task_address_get", "p_reg"], [34, 3, 1, "c.nrf_dppi_task_address_get", "task"]], "nrf_dppi_task_t": [[34, 1, 1, "c.nrf_dppi_task_t.NRF_DPPI_TASK_CHG0_DIS", "NRF_DPPI_TASK_CHG0_DIS"], [34, 1, 1, "c.nrf_dppi_task_t.NRF_DPPI_TASK_CHG0_EN", "NRF_DPPI_TASK_CHG0_EN"], [34, 1, 1, "c.nrf_dppi_task_t.NRF_DPPI_TASK_CHG1_DIS", "NRF_DPPI_TASK_CHG1_DIS"], [34, 1, 1, "c.nrf_dppi_task_t.NRF_DPPI_TASK_CHG1_EN", "NRF_DPPI_TASK_CHG1_EN"], [34, 1, 1, "c.nrf_dppi_task_t.NRF_DPPI_TASK_CHG2_DIS", "NRF_DPPI_TASK_CHG2_DIS"], [34, 1, 1, "c.nrf_dppi_task_t.NRF_DPPI_TASK_CHG2_EN", "NRF_DPPI_TASK_CHG2_EN"], [34, 1, 1, "c.nrf_dppi_task_t.NRF_DPPI_TASK_CHG3_DIS", "NRF_DPPI_TASK_CHG3_DIS"], [34, 1, 1, "c.nrf_dppi_task_t.NRF_DPPI_TASK_CHG3_EN", "NRF_DPPI_TASK_CHG3_EN"], [34, 1, 1, "c.nrf_dppi_task_t.NRF_DPPI_TASK_CHG4_DIS", "NRF_DPPI_TASK_CHG4_DIS"], [34, 1, 1, "c.nrf_dppi_task_t.NRF_DPPI_TASK_CHG4_EN", "NRF_DPPI_TASK_CHG4_EN"], [34, 1, 1, "c.nrf_dppi_task_t.NRF_DPPI_TASK_CHG5_DIS", "NRF_DPPI_TASK_CHG5_DIS"], [34, 1, 1, "c.nrf_dppi_task_t.NRF_DPPI_TASK_CHG5_EN", "NRF_DPPI_TASK_CHG5_EN"]], "nrf_dppi_task_trigger": [[34, 3, 1, "c.nrf_dppi_task_trigger", "dppi_task"], [34, 3, 1, "c.nrf_dppi_task_trigger", "p_reg"]], "nrf_ecb_data_pointer_get": [[37, 3, 1, "c.nrf_ecb_data_pointer_get", "p_reg"]], "nrf_ecb_data_pointer_set": [[37, 3, 1, "c.nrf_ecb_data_pointer_set", "p_buffer"], [37, 3, 1, "c.nrf_ecb_data_pointer_set", "p_reg"]], "nrf_ecb_event_address_get": [[37, 3, 1, "c.nrf_ecb_event_address_get", "event"], [37, 3, 1, "c.nrf_ecb_event_address_get", "p_reg"]], "nrf_ecb_event_check": [[37, 3, 1, "c.nrf_ecb_event_check", "event"], [37, 3, 1, "c.nrf_ecb_event_check", "p_reg"]], "nrf_ecb_event_clear": [[37, 3, 1, "c.nrf_ecb_event_clear", "event"], [37, 3, 1, "c.nrf_ecb_event_clear", "p_reg"]], "nrf_ecb_event_t": [[37, 1, 1, "c.nrf_ecb_event_t.NRF_ECB_EVENT_END", "NRF_ECB_EVENT_END"], [37, 1, 1, "c.nrf_ecb_event_t.NRF_ECB_EVENT_ENDECB", "NRF_ECB_EVENT_ENDECB"], [37, 1, 1, "c.nrf_ecb_event_t.NRF_ECB_EVENT_ERROR", "NRF_ECB_EVENT_ERROR"], [37, 1, 1, "c.nrf_ecb_event_t.NRF_ECB_EVENT_ERRORECB", "NRF_ECB_EVENT_ERRORECB"]], "nrf_ecb_in_amount_get": [[37, 3, 1, "c.nrf_ecb_in_amount_get", "p_reg"]], "nrf_ecb_in_ptr_get": [[37, 3, 1, "c.nrf_ecb_in_ptr_get", "p_reg"]], "nrf_ecb_in_ptr_set": [[37, 3, 1, "c.nrf_ecb_in_ptr_set", "p_job"], [37, 3, 1, "c.nrf_ecb_in_ptr_set", "p_reg"]], "nrf_ecb_int_disable": [[37, 3, 1, "c.nrf_ecb_int_disable", "mask"], [37, 3, 1, "c.nrf_ecb_int_disable", "p_reg"]], "nrf_ecb_int_enable": [[37, 3, 1, "c.nrf_ecb_int_enable", "mask"], [37, 3, 1, "c.nrf_ecb_int_enable", "p_reg"]], "nrf_ecb_int_enable_check": [[37, 3, 1, "c.nrf_ecb_int_enable_check", "mask"], [37, 3, 1, "c.nrf_ecb_int_enable_check", "p_reg"]], "nrf_ecb_int_mask_t": [[37, 1, 1, "c.nrf_ecb_int_mask_t.NRF_ECB_INT_ENDECB_MASK", "NRF_ECB_INT_ENDECB_MASK"], [37, 1, 1, "c.nrf_ecb_int_mask_t.NRF_ECB_INT_END_MASK", "NRF_ECB_INT_END_MASK"], [37, 1, 1, "c.nrf_ecb_int_mask_t.NRF_ECB_INT_ERRORECB_MASK", "NRF_ECB_INT_ERRORECB_MASK"], [37, 1, 1, "c.nrf_ecb_int_mask_t.NRF_ECB_INT_ERROR_MASK", "NRF_ECB_INT_ERROR_MASK"]], "nrf_ecb_key_set": [[37, 3, 1, "c.nrf_ecb_key_set", "p_key"], [37, 3, 1, "c.nrf_ecb_key_set", "p_reg"]], "nrf_ecb_out_amount_get": [[37, 3, 1, "c.nrf_ecb_out_amount_get", "p_reg"]], "nrf_ecb_out_ptr_get": [[37, 3, 1, "c.nrf_ecb_out_ptr_get", "p_reg"]], "nrf_ecb_out_ptr_set": [[37, 3, 1, "c.nrf_ecb_out_ptr_set", "p_job"], [37, 3, 1, "c.nrf_ecb_out_ptr_set", "p_reg"]], "nrf_ecb_publish_clear": [[37, 3, 1, "c.nrf_ecb_publish_clear", "event"], [37, 3, 1, "c.nrf_ecb_publish_clear", "p_reg"]], "nrf_ecb_publish_set": [[37, 3, 1, "c.nrf_ecb_publish_set", "channel"], [37, 3, 1, "c.nrf_ecb_publish_set", "event"], [37, 3, 1, "c.nrf_ecb_publish_set", "p_reg"]], "nrf_ecb_subscribe_clear": [[37, 3, 1, "c.nrf_ecb_subscribe_clear", "p_reg"], [37, 3, 1, "c.nrf_ecb_subscribe_clear", "task"]], "nrf_ecb_subscribe_set": [[37, 3, 1, "c.nrf_ecb_subscribe_set", "channel"], [37, 3, 1, "c.nrf_ecb_subscribe_set", "p_reg"], [37, 3, 1, "c.nrf_ecb_subscribe_set", "task"]], "nrf_ecb_task_address_get": [[37, 3, 1, "c.nrf_ecb_task_address_get", "p_reg"], [37, 3, 1, "c.nrf_ecb_task_address_get", "task"]], "nrf_ecb_task_t": [[37, 1, 1, "c.nrf_ecb_task_t.NRF_ECB_TASK_START", "NRF_ECB_TASK_START"], [37, 1, 1, "c.nrf_ecb_task_t.NRF_ECB_TASK_STARTECB", "NRF_ECB_TASK_STARTECB"], [37, 1, 1, "c.nrf_ecb_task_t.NRF_ECB_TASK_STOP", "NRF_ECB_TASK_STOP"], [37, 1, 1, "c.nrf_ecb_task_t.NRF_ECB_TASK_STOPECB", "NRF_ECB_TASK_STOPECB"]], "nrf_ecb_task_trigger": [[37, 3, 1, "c.nrf_ecb_task_trigger", "p_reg"], [37, 3, 1, "c.nrf_ecb_task_trigger", "task"]], "nrf_egu_channel_count": [[40, 3, 1, "c.nrf_egu_channel_count", "p_reg"]], "nrf_egu_channel_int_get": [[40, 3, 1, "c.nrf_egu_channel_int_get", "channel"]], "nrf_egu_event_address_get": [[40, 3, 1, "c.nrf_egu_event_address_get", "egu_event"], [40, 3, 1, "c.nrf_egu_event_address_get", "p_reg"]], "nrf_egu_event_check": [[40, 3, 1, "c.nrf_egu_event_check", "egu_event"], [40, 3, 1, "c.nrf_egu_event_check", "p_reg"]], "nrf_egu_event_clear": [[40, 3, 1, "c.nrf_egu_event_clear", "egu_event"], [40, 3, 1, "c.nrf_egu_event_clear", "p_reg"]], "nrf_egu_event_t": [[40, 1, 1, "c.nrf_egu_event_t.NRF_EGU_EVENT_TRIGGERED0", "NRF_EGU_EVENT_TRIGGERED0"], [40, 1, 1, "c.nrf_egu_event_t.NRF_EGU_EVENT_TRIGGERED1", "NRF_EGU_EVENT_TRIGGERED1"], [40, 1, 1, "c.nrf_egu_event_t.NRF_EGU_EVENT_TRIGGERED10", "NRF_EGU_EVENT_TRIGGERED10"], [40, 1, 1, "c.nrf_egu_event_t.NRF_EGU_EVENT_TRIGGERED11", "NRF_EGU_EVENT_TRIGGERED11"], [40, 1, 1, "c.nrf_egu_event_t.NRF_EGU_EVENT_TRIGGERED12", "NRF_EGU_EVENT_TRIGGERED12"], [40, 1, 1, "c.nrf_egu_event_t.NRF_EGU_EVENT_TRIGGERED13", "NRF_EGU_EVENT_TRIGGERED13"], [40, 1, 1, "c.nrf_egu_event_t.NRF_EGU_EVENT_TRIGGERED14", "NRF_EGU_EVENT_TRIGGERED14"], [40, 1, 1, "c.nrf_egu_event_t.NRF_EGU_EVENT_TRIGGERED15", "NRF_EGU_EVENT_TRIGGERED15"], [40, 1, 1, "c.nrf_egu_event_t.NRF_EGU_EVENT_TRIGGERED2", "NRF_EGU_EVENT_TRIGGERED2"], [40, 1, 1, "c.nrf_egu_event_t.NRF_EGU_EVENT_TRIGGERED3", "NRF_EGU_EVENT_TRIGGERED3"], [40, 1, 1, "c.nrf_egu_event_t.NRF_EGU_EVENT_TRIGGERED4", "NRF_EGU_EVENT_TRIGGERED4"], [40, 1, 1, "c.nrf_egu_event_t.NRF_EGU_EVENT_TRIGGERED5", "NRF_EGU_EVENT_TRIGGERED5"], [40, 1, 1, "c.nrf_egu_event_t.NRF_EGU_EVENT_TRIGGERED6", "NRF_EGU_EVENT_TRIGGERED6"], [40, 1, 1, "c.nrf_egu_event_t.NRF_EGU_EVENT_TRIGGERED7", "NRF_EGU_EVENT_TRIGGERED7"], [40, 1, 1, "c.nrf_egu_event_t.NRF_EGU_EVENT_TRIGGERED8", "NRF_EGU_EVENT_TRIGGERED8"], [40, 1, 1, "c.nrf_egu_event_t.NRF_EGU_EVENT_TRIGGERED9", "NRF_EGU_EVENT_TRIGGERED9"]], "nrf_egu_int_disable": [[40, 3, 1, "c.nrf_egu_int_disable", "mask"], [40, 3, 1, "c.nrf_egu_int_disable", "p_reg"]], "nrf_egu_int_enable": [[40, 3, 1, "c.nrf_egu_int_enable", "mask"], [40, 3, 1, "c.nrf_egu_int_enable", "p_reg"]], "nrf_egu_int_enable_check": [[40, 3, 1, "c.nrf_egu_int_enable_check", "mask"], [40, 3, 1, "c.nrf_egu_int_enable_check", "p_reg"]], "nrf_egu_int_mask_t": [[40, 1, 1, "c.nrf_egu_int_mask_t.NRF_EGU_INT_ALL", "NRF_EGU_INT_ALL"], [40, 1, 1, "c.nrf_egu_int_mask_t.NRF_EGU_INT_TRIGGERED0", "NRF_EGU_INT_TRIGGERED0"], [40, 1, 1, "c.nrf_egu_int_mask_t.NRF_EGU_INT_TRIGGERED1", "NRF_EGU_INT_TRIGGERED1"], [40, 1, 1, "c.nrf_egu_int_mask_t.NRF_EGU_INT_TRIGGERED10", "NRF_EGU_INT_TRIGGERED10"], [40, 1, 1, "c.nrf_egu_int_mask_t.NRF_EGU_INT_TRIGGERED11", "NRF_EGU_INT_TRIGGERED11"], [40, 1, 1, "c.nrf_egu_int_mask_t.NRF_EGU_INT_TRIGGERED12", "NRF_EGU_INT_TRIGGERED12"], [40, 1, 1, "c.nrf_egu_int_mask_t.NRF_EGU_INT_TRIGGERED13", "NRF_EGU_INT_TRIGGERED13"], [40, 1, 1, "c.nrf_egu_int_mask_t.NRF_EGU_INT_TRIGGERED14", "NRF_EGU_INT_TRIGGERED14"], [40, 1, 1, "c.nrf_egu_int_mask_t.NRF_EGU_INT_TRIGGERED15", "NRF_EGU_INT_TRIGGERED15"], [40, 1, 1, "c.nrf_egu_int_mask_t.NRF_EGU_INT_TRIGGERED2", "NRF_EGU_INT_TRIGGERED2"], [40, 1, 1, "c.nrf_egu_int_mask_t.NRF_EGU_INT_TRIGGERED3", "NRF_EGU_INT_TRIGGERED3"], [40, 1, 1, "c.nrf_egu_int_mask_t.NRF_EGU_INT_TRIGGERED4", "NRF_EGU_INT_TRIGGERED4"], [40, 1, 1, "c.nrf_egu_int_mask_t.NRF_EGU_INT_TRIGGERED5", "NRF_EGU_INT_TRIGGERED5"], [40, 1, 1, "c.nrf_egu_int_mask_t.NRF_EGU_INT_TRIGGERED6", "NRF_EGU_INT_TRIGGERED6"], [40, 1, 1, "c.nrf_egu_int_mask_t.NRF_EGU_INT_TRIGGERED7", "NRF_EGU_INT_TRIGGERED7"], [40, 1, 1, "c.nrf_egu_int_mask_t.NRF_EGU_INT_TRIGGERED8", "NRF_EGU_INT_TRIGGERED8"], [40, 1, 1, "c.nrf_egu_int_mask_t.NRF_EGU_INT_TRIGGERED9", "NRF_EGU_INT_TRIGGERED9"]], "nrf_egu_publish_clear": [[40, 3, 1, "c.nrf_egu_publish_clear", "event"], [40, 3, 1, "c.nrf_egu_publish_clear", "p_reg"]], "nrf_egu_publish_set": [[40, 3, 1, "c.nrf_egu_publish_set", "channel"], [40, 3, 1, "c.nrf_egu_publish_set", "event"], [40, 3, 1, "c.nrf_egu_publish_set", "p_reg"]], "nrf_egu_subscribe_clear": [[40, 3, 1, "c.nrf_egu_subscribe_clear", "p_reg"], [40, 3, 1, "c.nrf_egu_subscribe_clear", "task"]], "nrf_egu_subscribe_set": [[40, 3, 1, "c.nrf_egu_subscribe_set", "channel"], [40, 3, 1, "c.nrf_egu_subscribe_set", "p_reg"], [40, 3, 1, "c.nrf_egu_subscribe_set", "task"]], "nrf_egu_task_address_get": [[40, 3, 1, "c.nrf_egu_task_address_get", "egu_task"], [40, 3, 1, "c.nrf_egu_task_address_get", "p_reg"]], "nrf_egu_task_t": [[40, 1, 1, "c.nrf_egu_task_t.NRF_EGU_TASK_TRIGGER0", "NRF_EGU_TASK_TRIGGER0"], [40, 1, 1, "c.nrf_egu_task_t.NRF_EGU_TASK_TRIGGER1", "NRF_EGU_TASK_TRIGGER1"], [40, 1, 1, "c.nrf_egu_task_t.NRF_EGU_TASK_TRIGGER10", "NRF_EGU_TASK_TRIGGER10"], [40, 1, 1, "c.nrf_egu_task_t.NRF_EGU_TASK_TRIGGER11", "NRF_EGU_TASK_TRIGGER11"], [40, 1, 1, "c.nrf_egu_task_t.NRF_EGU_TASK_TRIGGER12", "NRF_EGU_TASK_TRIGGER12"], [40, 1, 1, "c.nrf_egu_task_t.NRF_EGU_TASK_TRIGGER13", "NRF_EGU_TASK_TRIGGER13"], [40, 1, 1, "c.nrf_egu_task_t.NRF_EGU_TASK_TRIGGER14", "NRF_EGU_TASK_TRIGGER14"], [40, 1, 1, "c.nrf_egu_task_t.NRF_EGU_TASK_TRIGGER15", "NRF_EGU_TASK_TRIGGER15"], [40, 1, 1, "c.nrf_egu_task_t.NRF_EGU_TASK_TRIGGER2", "NRF_EGU_TASK_TRIGGER2"], [40, 1, 1, "c.nrf_egu_task_t.NRF_EGU_TASK_TRIGGER3", "NRF_EGU_TASK_TRIGGER3"], [40, 1, 1, "c.nrf_egu_task_t.NRF_EGU_TASK_TRIGGER4", "NRF_EGU_TASK_TRIGGER4"], [40, 1, 1, "c.nrf_egu_task_t.NRF_EGU_TASK_TRIGGER5", "NRF_EGU_TASK_TRIGGER5"], [40, 1, 1, "c.nrf_egu_task_t.NRF_EGU_TASK_TRIGGER6", "NRF_EGU_TASK_TRIGGER6"], [40, 1, 1, "c.nrf_egu_task_t.NRF_EGU_TASK_TRIGGER7", "NRF_EGU_TASK_TRIGGER7"], [40, 1, 1, "c.nrf_egu_task_t.NRF_EGU_TASK_TRIGGER8", "NRF_EGU_TASK_TRIGGER8"], [40, 1, 1, "c.nrf_egu_task_t.NRF_EGU_TASK_TRIGGER9", "NRF_EGU_TASK_TRIGGER9"]], "nrf_egu_task_trigger": [[40, 3, 1, "c.nrf_egu_task_trigger", "egu_task"], [40, 3, 1, "c.nrf_egu_task_trigger", "p_reg"]], "nrf_egu_trigger_task_get": [[40, 3, 1, "c.nrf_egu_trigger_task_get", "channel"]], "nrf_egu_triggered_event_get": [[40, 3, 1, "c.nrf_egu_triggered_event_get", "channel"]], "nrf_exmif_config_t": [[42, 6, 1, "c.nrf_exmif_config_t.offset", "offset"], [42, 6, 1, "c.nrf_exmif_config_t.size", "size"]], "nrf_exmif_device_config": [[42, 3, 1, "c.nrf_exmif_device_config", "device_idx"], [42, 3, 1, "c.nrf_exmif_device_config", "p_device"], [42, 3, 1, "c.nrf_exmif_device_config", "p_reg"]], "nrf_exmif_device_disable": [[42, 3, 1, "c.nrf_exmif_device_disable", "device_idx"], [42, 3, 1, "c.nrf_exmif_device_disable", "p_reg"]], "nrf_exmif_device_enable": [[42, 3, 1, "c.nrf_exmif_device_enable", "device_idx"], [42, 3, 1, "c.nrf_exmif_device_enable", "p_reg"]], "nrf_exmif_locked_access_set": [[42, 3, 1, "c.nrf_exmif_locked_access_set", "enable"], [42, 3, 1, "c.nrf_exmif_locked_access_set", "p_reg"]], "nrf_exmif_reset_set": [[42, 3, 1, "c.nrf_exmif_reset_set", "enable"], [42, 3, 1, "c.nrf_exmif_reset_set", "p_reg"]], "nrf_exmif_task_address_get": [[42, 3, 1, "c.nrf_exmif_task_address_get", "p_reg"], [42, 3, 1, "c.nrf_exmif_task_address_get", "task"]], "nrf_exmif_task_t": [[42, 1, 1, "c.nrf_exmif_task_t.NRF_EXMIF_TASK_START", "NRF_EXMIF_TASK_START"], [42, 1, 1, "c.nrf_exmif_task_t.NRF_EXMIF_TASK_STOP", "NRF_EXMIF_TASK_STOP"]], "nrf_exmif_task_trigger": [[42, 3, 1, "c.nrf_exmif_task_trigger", "p_reg"], [42, 3, 1, "c.nrf_exmif_task_trigger", "task"]], "nrf_ficr_codepagesize_get": [[44, 3, 1, "c.nrf_ficr_codepagesize_get", "p_reg"]], "nrf_ficr_codesize_get": [[44, 3, 1, "c.nrf_ficr_codesize_get", "p_reg"]], "nrf_ficr_deviceid_get": [[44, 3, 1, "c.nrf_ficr_deviceid_get", "p_reg"], [44, 3, 1, "c.nrf_ficr_deviceid_get", "reg_id"]], "nrf_ficr_nfc_tagheader_get": [[44, 3, 1, "c.nrf_ficr_nfc_tagheader_get", "p_reg"], [44, 3, 1, "c.nrf_ficr_nfc_tagheader_get", "tagheader_id"]], "nrf_fpu_event_check": [[45, 3, 1, "c.nrf_fpu_event_check", "event"], [45, 3, 1, "c.nrf_fpu_event_check", "p_reg"]], "nrf_fpu_event_clear": [[45, 3, 1, "c.nrf_fpu_event_clear", "event"], [45, 3, 1, "c.nrf_fpu_event_clear", "p_reg"]], "nrf_fpu_event_t": [[45, 1, 1, "c.nrf_fpu_event_t.NRF_FPU_EVENT_DENORMALINPUT", "NRF_FPU_EVENT_DENORMALINPUT"], [45, 1, 1, "c.nrf_fpu_event_t.NRF_FPU_EVENT_DIVIDEBYZERO", "NRF_FPU_EVENT_DIVIDEBYZERO"], [45, 1, 1, "c.nrf_fpu_event_t.NRF_FPU_EVENT_INEXACT", "NRF_FPU_EVENT_INEXACT"], [45, 1, 1, "c.nrf_fpu_event_t.NRF_FPU_EVENT_INVALIDOPERATION", "NRF_FPU_EVENT_INVALIDOPERATION"], [45, 1, 1, "c.nrf_fpu_event_t.NRF_FPU_EVENT_OVERFLOW", "NRF_FPU_EVENT_OVERFLOW"], [45, 1, 1, "c.nrf_fpu_event_t.NRF_FPU_EVENT_UNDERFLOW", "NRF_FPU_EVENT_UNDERFLOW"]], "nrf_fpu_int_disable": [[45, 3, 1, "c.nrf_fpu_int_disable", "mask"], [45, 3, 1, "c.nrf_fpu_int_disable", "p_reg"]], "nrf_fpu_int_enable": [[45, 3, 1, "c.nrf_fpu_int_enable", "mask"], [45, 3, 1, "c.nrf_fpu_int_enable", "p_reg"]], "nrf_fpu_int_enable_check": [[45, 3, 1, "c.nrf_fpu_int_enable_check", "mask"], [45, 3, 1, "c.nrf_fpu_int_enable_check", "p_reg"]], "nrf_fpu_int_mask_t": [[45, 1, 1, "c.nrf_fpu_int_mask_t.NRF_FPU_INT_DENORMALINPUT", "NRF_FPU_INT_DENORMALINPUT"], [45, 1, 1, "c.nrf_fpu_int_mask_t.NRF_FPU_INT_DIVIDEBYZERO", "NRF_FPU_INT_DIVIDEBYZERO"], [45, 1, 1, "c.nrf_fpu_int_mask_t.NRF_FPU_INT_INEXACT", "NRF_FPU_INT_INEXACT"], [45, 1, 1, "c.nrf_fpu_int_mask_t.NRF_FPU_INT_INVALIDOPERATION", "NRF_FPU_INT_INVALIDOPERATION"], [45, 1, 1, "c.nrf_fpu_int_mask_t.NRF_FPU_INT_OVERFLOW", "NRF_FPU_INT_OVERFLOW"], [45, 1, 1, "c.nrf_fpu_int_mask_t.NRF_FPU_INT_UNDERFLOW", "NRF_FPU_INT_UNDERFLOW"]], "nrf_glitchdet_enable_check": [[47, 3, 1, "c.nrf_glitchdet_enable_check", "p_reg"]], "nrf_glitchdet_enable_set": [[47, 3, 1, "c.nrf_glitchdet_enable_set", "enable"], [47, 3, 1, "c.nrf_glitchdet_enable_set", "p_reg"]], "nrf_glitchdet_mode_get": [[47, 3, 1, "c.nrf_glitchdet_mode_get", "p_reg"]], "nrf_glitchdet_mode_set": [[47, 3, 1, "c.nrf_glitchdet_mode_set", "mode"], [47, 3, 1, "c.nrf_glitchdet_mode_set", "p_reg"]], "nrf_glitchdet_mode_t": [[47, 1, 1, "c.nrf_glitchdet_mode_t.NRF_GLITCHDET_MODE_CAP_DIV", "NRF_GLITCHDET_MODE_CAP_DIV"], [47, 1, 1, "c.nrf_glitchdet_mode_t.NRF_GLITCHDET_MODE_HIGH_PASS", "NRF_GLITCHDET_MODE_HIGH_PASS"]], "nrf_gpio_cfg": [[48, 3, 1, "c.nrf_gpio_cfg", "dir"], [48, 3, 1, "c.nrf_gpio_cfg", "drive"], [48, 3, 1, "c.nrf_gpio_cfg", "input"], [48, 3, 1, "c.nrf_gpio_cfg", "pin_number"], [48, 3, 1, "c.nrf_gpio_cfg", "pull"], [48, 3, 1, "c.nrf_gpio_cfg", "sense"]], "nrf_gpio_cfg_default": [[48, 3, 1, "c.nrf_gpio_cfg_default", "pin_number"]], "nrf_gpio_cfg_input": [[48, 3, 1, "c.nrf_gpio_cfg_input", "pin_number"], [48, 3, 1, "c.nrf_gpio_cfg_input", "pull_config"]], "nrf_gpio_cfg_output": [[48, 3, 1, "c.nrf_gpio_cfg_output", "pin_number"]], "nrf_gpio_cfg_sense_input": [[48, 3, 1, "c.nrf_gpio_cfg_sense_input", "pin_number"], [48, 3, 1, "c.nrf_gpio_cfg_sense_input", "pull_config"], [48, 3, 1, "c.nrf_gpio_cfg_sense_input", "sense_config"]], "nrf_gpio_cfg_sense_set": [[48, 3, 1, "c.nrf_gpio_cfg_sense_set", "pin_number"], [48, 3, 1, "c.nrf_gpio_cfg_sense_set", "sense_config"]], "nrf_gpio_cfg_watcher": [[48, 3, 1, "c.nrf_gpio_cfg_watcher", "pin_number"]], "nrf_gpio_input_disconnect": [[48, 3, 1, "c.nrf_gpio_input_disconnect", "pin_number"]], "nrf_gpio_latches_read": [[48, 3, 1, "c.nrf_gpio_latches_read", "length"], [48, 3, 1, "c.nrf_gpio_latches_read", "p_masks"], [48, 3, 1, "c.nrf_gpio_latches_read", "start_port"]], "nrf_gpio_latches_read_and_clear": [[48, 3, 1, "c.nrf_gpio_latches_read_and_clear", "length"], [48, 3, 1, "c.nrf_gpio_latches_read_and_clear", "p_masks"], [48, 3, 1, "c.nrf_gpio_latches_read_and_clear", "start_port"]], "nrf_gpio_pin_clear": [[48, 3, 1, "c.nrf_gpio_pin_clear", "pin_number"]], "nrf_gpio_pin_clock_check": [[48, 3, 1, "c.nrf_gpio_pin_clock_check", "pin_number"]], "nrf_gpio_pin_clock_set": [[48, 3, 1, "c.nrf_gpio_pin_clock_set", "enable"], [48, 3, 1, "c.nrf_gpio_pin_clock_set", "pin_number"]], "nrf_gpio_pin_control_select": [[48, 3, 1, "c.nrf_gpio_pin_control_select", "ctrl"], [48, 3, 1, "c.nrf_gpio_pin_control_select", "pin_number"]], "nrf_gpio_pin_dir_get": [[48, 3, 1, "c.nrf_gpio_pin_dir_get", "pin_number"]], "nrf_gpio_pin_dir_set": [[48, 3, 1, "c.nrf_gpio_pin_dir_set", "direction"], [48, 3, 1, "c.nrf_gpio_pin_dir_set", "pin_number"]], "nrf_gpio_pin_dir_t": [[48, 1, 1, "c.nrf_gpio_pin_dir_t.NRF_GPIO_PIN_DIR_INPUT", "NRF_GPIO_PIN_DIR_INPUT"], [48, 1, 1, "c.nrf_gpio_pin_dir_t.NRF_GPIO_PIN_DIR_OUTPUT", "NRF_GPIO_PIN_DIR_OUTPUT"]], "nrf_gpio_pin_drive_t": [[48, 1, 1, "c.nrf_gpio_pin_drive_t.NRF_GPIO_PIN_D0E1", "NRF_GPIO_PIN_D0E1"], [48, 1, 1, "c.nrf_gpio_pin_drive_t.NRF_GPIO_PIN_D0H1", "NRF_GPIO_PIN_D0H1"], [48, 1, 1, "c.nrf_gpio_pin_drive_t.NRF_GPIO_PIN_D0S1", "NRF_GPIO_PIN_D0S1"], [48, 1, 1, "c.nrf_gpio_pin_drive_t.NRF_GPIO_PIN_E0D1", "NRF_GPIO_PIN_E0D1"], [48, 1, 1, "c.nrf_gpio_pin_drive_t.NRF_GPIO_PIN_E0E1", "NRF_GPIO_PIN_E0E1"], [48, 1, 1, "c.nrf_gpio_pin_drive_t.NRF_GPIO_PIN_E0H1", "NRF_GPIO_PIN_E0H1"], [48, 1, 1, "c.nrf_gpio_pin_drive_t.NRF_GPIO_PIN_E0S1", "NRF_GPIO_PIN_E0S1"], [48, 1, 1, "c.nrf_gpio_pin_drive_t.NRF_GPIO_PIN_H0D1", "NRF_GPIO_PIN_H0D1"], [48, 1, 1, "c.nrf_gpio_pin_drive_t.NRF_GPIO_PIN_H0E1", "NRF_GPIO_PIN_H0E1"], [48, 1, 1, "c.nrf_gpio_pin_drive_t.NRF_GPIO_PIN_H0H1", "NRF_GPIO_PIN_H0H1"], [48, 1, 1, "c.nrf_gpio_pin_drive_t.NRF_GPIO_PIN_H0S1", "NRF_GPIO_PIN_H0S1"], [48, 1, 1, "c.nrf_gpio_pin_drive_t.NRF_GPIO_PIN_S0D1", "NRF_GPIO_PIN_S0D1"], [48, 1, 1, "c.nrf_gpio_pin_drive_t.NRF_GPIO_PIN_S0E1", "NRF_GPIO_PIN_S0E1"], [48, 1, 1, "c.nrf_gpio_pin_drive_t.NRF_GPIO_PIN_S0H1", "NRF_GPIO_PIN_S0H1"], [48, 1, 1, "c.nrf_gpio_pin_drive_t.NRF_GPIO_PIN_S0S1", "NRF_GPIO_PIN_S0S1"]], "nrf_gpio_pin_input_get": [[48, 3, 1, "c.nrf_gpio_pin_input_get", "pin_number"]], "nrf_gpio_pin_input_t": [[48, 1, 1, "c.nrf_gpio_pin_input_t.NRF_GPIO_PIN_INPUT_CONNECT", "NRF_GPIO_PIN_INPUT_CONNECT"], [48, 1, 1, "c.nrf_gpio_pin_input_t.NRF_GPIO_PIN_INPUT_DISCONNECT", "NRF_GPIO_PIN_INPUT_DISCONNECT"]], "nrf_gpio_pin_latch_clear": [[48, 3, 1, "c.nrf_gpio_pin_latch_clear", "pin_number"]], "nrf_gpio_pin_latch_get": [[48, 3, 1, "c.nrf_gpio_pin_latch_get", "pin_number"]], "nrf_gpio_pin_out_read": [[48, 3, 1, "c.nrf_gpio_pin_out_read", "pin_number"]], "nrf_gpio_pin_port_decode": [[48, 3, 1, "c.nrf_gpio_pin_port_decode", "p_pin"]], "nrf_gpio_pin_port_number_extract": [[48, 3, 1, "c.nrf_gpio_pin_port_number_extract", "p_pin"]], "nrf_gpio_pin_present_check": [[48, 3, 1, "c.nrf_gpio_pin_present_check", "pin_number"]], "nrf_gpio_pin_pull_get": [[48, 3, 1, "c.nrf_gpio_pin_pull_get", "pin_number"]], "nrf_gpio_pin_pull_t": [[48, 1, 1, "c.nrf_gpio_pin_pull_t.NRF_GPIO_PIN_NOPULL", "NRF_GPIO_PIN_NOPULL"], [48, 1, 1, "c.nrf_gpio_pin_pull_t.NRF_GPIO_PIN_PULLDOWN", "NRF_GPIO_PIN_PULLDOWN"], [48, 1, 1, "c.nrf_gpio_pin_pull_t.NRF_GPIO_PIN_PULLUP", "NRF_GPIO_PIN_PULLUP"]], "nrf_gpio_pin_read": [[48, 3, 1, "c.nrf_gpio_pin_read", "pin_number"]], "nrf_gpio_pin_sel_t": [[48, 1, 1, "c.nrf_gpio_pin_sel_t.NRF_GPIO_PIN_SEL_APP", "NRF_GPIO_PIN_SEL_APP"], [48, 1, 1, "c.nrf_gpio_pin_sel_t.NRF_GPIO_PIN_SEL_GPIO", "NRF_GPIO_PIN_SEL_GPIO"], [48, 1, 1, "c.nrf_gpio_pin_sel_t.NRF_GPIO_PIN_SEL_GRTC", "NRF_GPIO_PIN_SEL_GRTC"], [48, 1, 1, "c.nrf_gpio_pin_sel_t.NRF_GPIO_PIN_SEL_NETWORK", "NRF_GPIO_PIN_SEL_NETWORK"], [48, 1, 1, "c.nrf_gpio_pin_sel_t.NRF_GPIO_PIN_SEL_PERIPHERAL", "NRF_GPIO_PIN_SEL_PERIPHERAL"], [48, 1, 1, "c.nrf_gpio_pin_sel_t.NRF_GPIO_PIN_SEL_TND", "NRF_GPIO_PIN_SEL_TND"], [48, 1, 1, "c.nrf_gpio_pin_sel_t.NRF_GPIO_PIN_SEL_VPR", "NRF_GPIO_PIN_SEL_VPR"]], "nrf_gpio_pin_sense_get": [[48, 3, 1, "c.nrf_gpio_pin_sense_get", "pin_number"]], "nrf_gpio_pin_sense_t": [[48, 1, 1, "c.nrf_gpio_pin_sense_t.NRF_GPIO_PIN_NOSENSE", "NRF_GPIO_PIN_NOSENSE"], [48, 1, 1, "c.nrf_gpio_pin_sense_t.NRF_GPIO_PIN_SENSE_HIGH", "NRF_GPIO_PIN_SENSE_HIGH"], [48, 1, 1, "c.nrf_gpio_pin_sense_t.NRF_GPIO_PIN_SENSE_LOW", "NRF_GPIO_PIN_SENSE_LOW"]], "nrf_gpio_pin_set": [[48, 3, 1, "c.nrf_gpio_pin_set", "pin_number"]], "nrf_gpio_pin_toggle": [[48, 3, 1, "c.nrf_gpio_pin_toggle", "pin_number"]], "nrf_gpio_pin_write": [[48, 3, 1, "c.nrf_gpio_pin_write", "pin_number"], [48, 3, 1, "c.nrf_gpio_pin_write", "value"]], "nrf_gpio_port_detect_latch_check": [[48, 3, 1, "c.nrf_gpio_port_detect_latch_check", "p_reg"]], "nrf_gpio_port_detect_latch_set": [[48, 3, 1, "c.nrf_gpio_port_detect_latch_set", "enable"], [48, 3, 1, "c.nrf_gpio_port_detect_latch_set", "p_reg"]], "nrf_gpio_port_dir_input_set": [[48, 3, 1, "c.nrf_gpio_port_dir_input_set", "in_mask"], [48, 3, 1, "c.nrf_gpio_port_dir_input_set", "p_reg"]], "nrf_gpio_port_dir_output_set": [[48, 3, 1, "c.nrf_gpio_port_dir_output_set", "out_mask"], [48, 3, 1, "c.nrf_gpio_port_dir_output_set", "p_reg"]], "nrf_gpio_port_dir_read": [[48, 3, 1, "c.nrf_gpio_port_dir_read", "p_reg"]], "nrf_gpio_port_dir_write": [[48, 3, 1, "c.nrf_gpio_port_dir_write", "dir_mask"], [48, 3, 1, "c.nrf_gpio_port_dir_write", "p_reg"]], "nrf_gpio_port_impedance_get": [[48, 3, 1, "c.nrf_gpio_port_impedance_get", "p_reg"]], "nrf_gpio_port_impedance_mask_t": [[48, 1, 1, "c.nrf_gpio_port_impedance_mask_t.NRF_GPIO_PORT_IMPEDANCE_100_MASK", "NRF_GPIO_PORT_IMPEDANCE_100_MASK"], [48, 1, 1, "c.nrf_gpio_port_impedance_mask_t.NRF_GPIO_PORT_IMPEDANCE_1600_MASK", "NRF_GPIO_PORT_IMPEDANCE_1600_MASK"], [48, 1, 1, "c.nrf_gpio_port_impedance_mask_t.NRF_GPIO_PORT_IMPEDANCE_200_MASK", "NRF_GPIO_PORT_IMPEDANCE_200_MASK"], [48, 1, 1, "c.nrf_gpio_port_impedance_mask_t.NRF_GPIO_PORT_IMPEDANCE_400_MASK", "NRF_GPIO_PORT_IMPEDANCE_400_MASK"], [48, 1, 1, "c.nrf_gpio_port_impedance_mask_t.NRF_GPIO_PORT_IMPEDANCE_50_MASK", "NRF_GPIO_PORT_IMPEDANCE_50_MASK"], [48, 1, 1, "c.nrf_gpio_port_impedance_mask_t.NRF_GPIO_PORT_IMPEDANCE_800_MASK", "NRF_GPIO_PORT_IMPEDANCE_800_MASK"]], "nrf_gpio_port_impedance_set": [[48, 3, 1, "c.nrf_gpio_port_impedance_set", "mask"], [48, 3, 1, "c.nrf_gpio_port_impedance_set", "p_reg"]], "nrf_gpio_port_in_read": [[48, 3, 1, "c.nrf_gpio_port_in_read", "p_reg"]], "nrf_gpio_port_out_clear": [[48, 3, 1, "c.nrf_gpio_port_out_clear", "clr_mask"], [48, 3, 1, "c.nrf_gpio_port_out_clear", "p_reg"]], "nrf_gpio_port_out_read": [[48, 3, 1, "c.nrf_gpio_port_out_read", "p_reg"]], "nrf_gpio_port_out_set": [[48, 3, 1, "c.nrf_gpio_port_out_set", "p_reg"], [48, 3, 1, "c.nrf_gpio_port_out_set", "set_mask"]], "nrf_gpio_port_out_write": [[48, 3, 1, "c.nrf_gpio_port_out_write", "p_reg"], [48, 3, 1, "c.nrf_gpio_port_out_write", "value"]], "nrf_gpio_port_retain_get": [[48, 3, 1, "c.nrf_gpio_port_retain_get", "p_reg"]], "nrf_gpio_port_retain_set": [[48, 3, 1, "c.nrf_gpio_port_retain_set", "mask"], [48, 3, 1, "c.nrf_gpio_port_retain_set", "p_reg"]], "nrf_gpio_ports_read": [[48, 3, 1, "c.nrf_gpio_ports_read", "length"], [48, 3, 1, "c.nrf_gpio_ports_read", "p_masks"], [48, 3, 1, "c.nrf_gpio_ports_read", "start_port"]], "nrf_gpio_range_cfg_input": [[48, 3, 1, "c.nrf_gpio_range_cfg_input", "pin_range_end"], [48, 3, 1, "c.nrf_gpio_range_cfg_input", "pin_range_start"], [48, 3, 1, "c.nrf_gpio_range_cfg_input", "pull_config"]], "nrf_gpio_range_cfg_output": [[48, 3, 1, "c.nrf_gpio_range_cfg_output", "pin_range_end"], [48, 3, 1, "c.nrf_gpio_range_cfg_output", "pin_range_start"]], "nrf_gpio_reconfigure": [[48, 3, 1, "c.nrf_gpio_reconfigure", "p_dir"], [48, 3, 1, "c.nrf_gpio_reconfigure", "p_drive"], [48, 3, 1, "c.nrf_gpio_reconfigure", "p_input"], [48, 3, 1, "c.nrf_gpio_reconfigure", "p_pull"], [48, 3, 1, "c.nrf_gpio_reconfigure", "p_sense"], [48, 3, 1, "c.nrf_gpio_reconfigure", "pin_number"]], "nrf_gpio_retain_mask_t": [[48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_APPLICATION_MASK", "NRF_GPIO_RETAIN_APPLICATION_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_NETWORK_MASK", "NRF_GPIO_RETAIN_NETWORK_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN0_MASK", "NRF_GPIO_RETAIN_PIN0_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN10_MASK", "NRF_GPIO_RETAIN_PIN10_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN11_MASK", "NRF_GPIO_RETAIN_PIN11_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN12_MASK", "NRF_GPIO_RETAIN_PIN12_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN13_MASK", "NRF_GPIO_RETAIN_PIN13_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN14_MASK", "NRF_GPIO_RETAIN_PIN14_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN15_MASK", "NRF_GPIO_RETAIN_PIN15_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN16_MASK", "NRF_GPIO_RETAIN_PIN16_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN17_MASK", "NRF_GPIO_RETAIN_PIN17_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN18_MASK", "NRF_GPIO_RETAIN_PIN18_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN19_MASK", "NRF_GPIO_RETAIN_PIN19_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN1_MASK", "NRF_GPIO_RETAIN_PIN1_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN20_MASK", "NRF_GPIO_RETAIN_PIN20_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN21_MASK", "NRF_GPIO_RETAIN_PIN21_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN22_MASK", "NRF_GPIO_RETAIN_PIN22_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN23_MASK", "NRF_GPIO_RETAIN_PIN23_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN24_MASK", "NRF_GPIO_RETAIN_PIN24_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN25_MASK", "NRF_GPIO_RETAIN_PIN25_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN26_MASK", "NRF_GPIO_RETAIN_PIN26_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN27_MASK", "NRF_GPIO_RETAIN_PIN27_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN28_MASK", "NRF_GPIO_RETAIN_PIN28_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN29_MASK", "NRF_GPIO_RETAIN_PIN29_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN2_MASK", "NRF_GPIO_RETAIN_PIN2_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN30_MASK", "NRF_GPIO_RETAIN_PIN30_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN31_MASK", "NRF_GPIO_RETAIN_PIN31_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN3_MASK", "NRF_GPIO_RETAIN_PIN3_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN4_MASK", "NRF_GPIO_RETAIN_PIN4_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN5_MASK", "NRF_GPIO_RETAIN_PIN5_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN6_MASK", "NRF_GPIO_RETAIN_PIN6_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN7_MASK", "NRF_GPIO_RETAIN_PIN7_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN8_MASK", "NRF_GPIO_RETAIN_PIN8_MASK"], [48, 1, 1, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN9_MASK", "NRF_GPIO_RETAIN_PIN9_MASK"]], "nrf_gpiote_clr_task_get": [[52, 3, 1, "c.nrf_gpiote_clr_task_get", "index"]], "nrf_gpiote_event_address_get": [[52, 3, 1, "c.nrf_gpiote_event_address_get", "event"], [52, 3, 1, "c.nrf_gpiote_event_address_get", "p_reg"]], "nrf_gpiote_event_check": [[52, 3, 1, "c.nrf_gpiote_event_check", "event"], [52, 3, 1, "c.nrf_gpiote_event_check", "p_reg"]], "nrf_gpiote_event_clear": [[52, 3, 1, "c.nrf_gpiote_event_clear", "event"], [52, 3, 1, "c.nrf_gpiote_event_clear", "p_reg"]], "nrf_gpiote_event_configure": [[52, 3, 1, "c.nrf_gpiote_event_configure", "idx"], [52, 3, 1, "c.nrf_gpiote_event_configure", "p_reg"], [52, 3, 1, "c.nrf_gpiote_event_configure", "pin"], [52, 3, 1, "c.nrf_gpiote_event_configure", "polarity"]], "nrf_gpiote_event_disable": [[52, 3, 1, "c.nrf_gpiote_event_disable", "idx"], [52, 3, 1, "c.nrf_gpiote_event_disable", "p_reg"]], "nrf_gpiote_event_enable": [[52, 3, 1, "c.nrf_gpiote_event_enable", "idx"], [52, 3, 1, "c.nrf_gpiote_event_enable", "p_reg"]], "nrf_gpiote_event_pin_get": [[52, 3, 1, "c.nrf_gpiote_event_pin_get", "idx"], [52, 3, 1, "c.nrf_gpiote_event_pin_get", "p_reg"]], "nrf_gpiote_event_polarity_get": [[52, 3, 1, "c.nrf_gpiote_event_polarity_get", "idx"], [52, 3, 1, "c.nrf_gpiote_event_polarity_get", "p_reg"]], "nrf_gpiote_event_t": [[52, 1, 1, "c.nrf_gpiote_event_t.NRF_GPIOTE_EVENT_IN_0", "NRF_GPIOTE_EVENT_IN_0"], [52, 1, 1, "c.nrf_gpiote_event_t.NRF_GPIOTE_EVENT_IN_1", "NRF_GPIOTE_EVENT_IN_1"], [52, 1, 1, "c.nrf_gpiote_event_t.NRF_GPIOTE_EVENT_IN_2", "NRF_GPIOTE_EVENT_IN_2"], [52, 1, 1, "c.nrf_gpiote_event_t.NRF_GPIOTE_EVENT_IN_3", "NRF_GPIOTE_EVENT_IN_3"], [52, 1, 1, "c.nrf_gpiote_event_t.NRF_GPIOTE_EVENT_IN_4", "NRF_GPIOTE_EVENT_IN_4"], [52, 1, 1, "c.nrf_gpiote_event_t.NRF_GPIOTE_EVENT_IN_5", "NRF_GPIOTE_EVENT_IN_5"], [52, 1, 1, "c.nrf_gpiote_event_t.NRF_GPIOTE_EVENT_IN_6", "NRF_GPIOTE_EVENT_IN_6"], [52, 1, 1, "c.nrf_gpiote_event_t.NRF_GPIOTE_EVENT_IN_7", "NRF_GPIOTE_EVENT_IN_7"], [52, 1, 1, "c.nrf_gpiote_event_t.NRF_GPIOTE_EVENT_PORT", "NRF_GPIOTE_EVENT_PORT"]], "nrf_gpiote_in_event_get": [[52, 3, 1, "c.nrf_gpiote_in_event_get", "index"]], "nrf_gpiote_int_disable": [[52, 3, 1, "c.nrf_gpiote_int_disable", "mask"], [52, 3, 1, "c.nrf_gpiote_int_disable", "p_reg"]], "nrf_gpiote_int_enable": [[52, 3, 1, "c.nrf_gpiote_int_enable", "mask"], [52, 3, 1, "c.nrf_gpiote_int_enable", "p_reg"]], "nrf_gpiote_int_enable_check": [[52, 3, 1, "c.nrf_gpiote_int_enable_check", "mask"], [52, 3, 1, "c.nrf_gpiote_int_enable_check", "p_reg"]], "nrf_gpiote_int_group_disable": [[52, 3, 1, "c.nrf_gpiote_int_group_disable", "group_idx"], [52, 3, 1, "c.nrf_gpiote_int_group_disable", "mask"], [52, 3, 1, "c.nrf_gpiote_int_group_disable", "p_reg"]], "nrf_gpiote_int_group_enable": [[52, 3, 1, "c.nrf_gpiote_int_group_enable", "group_idx"], [52, 3, 1, "c.nrf_gpiote_int_group_enable", "mask"], [52, 3, 1, "c.nrf_gpiote_int_group_enable", "p_reg"]], "nrf_gpiote_int_group_enable_check": [[52, 3, 1, "c.nrf_gpiote_int_group_enable_check", "group_idx"], [52, 3, 1, "c.nrf_gpiote_int_group_enable_check", "mask"], [52, 3, 1, "c.nrf_gpiote_int_group_enable_check", "p_reg"]], "nrf_gpiote_int_t": [[52, 1, 1, "c.nrf_gpiote_int_t.NRF_GPIOTE_INT_IN0_MASK", "NRF_GPIOTE_INT_IN0_MASK"], [52, 1, 1, "c.nrf_gpiote_int_t.NRF_GPIOTE_INT_IN1_MASK", "NRF_GPIOTE_INT_IN1_MASK"], [52, 1, 1, "c.nrf_gpiote_int_t.NRF_GPIOTE_INT_IN2_MASK", "NRF_GPIOTE_INT_IN2_MASK"], [52, 1, 1, "c.nrf_gpiote_int_t.NRF_GPIOTE_INT_IN3_MASK", "NRF_GPIOTE_INT_IN3_MASK"], [52, 1, 1, "c.nrf_gpiote_int_t.NRF_GPIOTE_INT_IN4_MASK", "NRF_GPIOTE_INT_IN4_MASK"], [52, 1, 1, "c.nrf_gpiote_int_t.NRF_GPIOTE_INT_IN5_MASK", "NRF_GPIOTE_INT_IN5_MASK"], [52, 1, 1, "c.nrf_gpiote_int_t.NRF_GPIOTE_INT_IN6_MASK", "NRF_GPIOTE_INT_IN6_MASK"], [52, 1, 1, "c.nrf_gpiote_int_t.NRF_GPIOTE_INT_IN7_MASK", "NRF_GPIOTE_INT_IN7_MASK"], [52, 1, 1, "c.nrf_gpiote_int_t.NRF_GPIOTE_INT_PORT_MASK", "NRF_GPIOTE_INT_PORT_MASK"]], "nrf_gpiote_latency_get": [[52, 3, 1, "c.nrf_gpiote_latency_get", "p_reg"]], "nrf_gpiote_latency_set": [[52, 3, 1, "c.nrf_gpiote_latency_set", "latency"], [52, 3, 1, "c.nrf_gpiote_latency_set", "p_reg"]], "nrf_gpiote_latency_t": [[52, 1, 1, "c.nrf_gpiote_latency_t.NRF_GPIOTE_LATENCY_LOWLATENCY", "NRF_GPIOTE_LATENCY_LOWLATENCY"], [52, 1, 1, "c.nrf_gpiote_latency_t.NRF_GPIOTE_LATENCY_LOWPOWER", "NRF_GPIOTE_LATENCY_LOWPOWER"]], "nrf_gpiote_out_task_get": [[52, 3, 1, "c.nrf_gpiote_out_task_get", "index"]], "nrf_gpiote_outinit_t": [[52, 1, 1, "c.nrf_gpiote_outinit_t.NRF_GPIOTE_INITIAL_VALUE_HIGH", "NRF_GPIOTE_INITIAL_VALUE_HIGH"], [52, 1, 1, "c.nrf_gpiote_outinit_t.NRF_GPIOTE_INITIAL_VALUE_LOW", "NRF_GPIOTE_INITIAL_VALUE_LOW"]], "nrf_gpiote_polarity_t": [[52, 1, 1, "c.nrf_gpiote_polarity_t.NRF_GPIOTE_POLARITY_HITOLO", "NRF_GPIOTE_POLARITY_HITOLO"], [52, 1, 1, "c.nrf_gpiote_polarity_t.NRF_GPIOTE_POLARITY_LOTOHI", "NRF_GPIOTE_POLARITY_LOTOHI"], [52, 1, 1, "c.nrf_gpiote_polarity_t.NRF_GPIOTE_POLARITY_NONE", "NRF_GPIOTE_POLARITY_NONE"], [52, 1, 1, "c.nrf_gpiote_polarity_t.NRF_GPIOTE_POLARITY_TOGGLE", "NRF_GPIOTE_POLARITY_TOGGLE"]], "nrf_gpiote_publish_clear": [[52, 3, 1, "c.nrf_gpiote_publish_clear", "event"], [52, 3, 1, "c.nrf_gpiote_publish_clear", "p_reg"]], "nrf_gpiote_publish_set": [[52, 3, 1, "c.nrf_gpiote_publish_set", "channel"], [52, 3, 1, "c.nrf_gpiote_publish_set", "event"], [52, 3, 1, "c.nrf_gpiote_publish_set", "p_reg"]], "nrf_gpiote_set_task_get": [[52, 3, 1, "c.nrf_gpiote_set_task_get", "index"]], "nrf_gpiote_subscribe_clear": [[52, 3, 1, "c.nrf_gpiote_subscribe_clear", "p_reg"], [52, 3, 1, "c.nrf_gpiote_subscribe_clear", "task"]], "nrf_gpiote_subscribe_set": [[52, 3, 1, "c.nrf_gpiote_subscribe_set", "channel"], [52, 3, 1, "c.nrf_gpiote_subscribe_set", "p_reg"], [52, 3, 1, "c.nrf_gpiote_subscribe_set", "task"]], "nrf_gpiote_task_address_get": [[52, 3, 1, "c.nrf_gpiote_task_address_get", "p_reg"], [52, 3, 1, "c.nrf_gpiote_task_address_get", "task"]], "nrf_gpiote_task_configure": [[52, 3, 1, "c.nrf_gpiote_task_configure", "idx"], [52, 3, 1, "c.nrf_gpiote_task_configure", "init_val"], [52, 3, 1, "c.nrf_gpiote_task_configure", "p_reg"], [52, 3, 1, "c.nrf_gpiote_task_configure", "pin"], [52, 3, 1, "c.nrf_gpiote_task_configure", "polarity"]], "nrf_gpiote_task_disable": [[52, 3, 1, "c.nrf_gpiote_task_disable", "idx"], [52, 3, 1, "c.nrf_gpiote_task_disable", "p_reg"]], "nrf_gpiote_task_enable": [[52, 3, 1, "c.nrf_gpiote_task_enable", "idx"], [52, 3, 1, "c.nrf_gpiote_task_enable", "p_reg"]], "nrf_gpiote_task_force": [[52, 3, 1, "c.nrf_gpiote_task_force", "idx"], [52, 3, 1, "c.nrf_gpiote_task_force", "init_val"], [52, 3, 1, "c.nrf_gpiote_task_force", "p_reg"]], "nrf_gpiote_task_t": [[52, 1, 1, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_CLR_0", "NRF_GPIOTE_TASK_CLR_0"], [52, 1, 1, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_CLR_1", "NRF_GPIOTE_TASK_CLR_1"], [52, 1, 1, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_CLR_2", "NRF_GPIOTE_TASK_CLR_2"], [52, 1, 1, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_CLR_3", "NRF_GPIOTE_TASK_CLR_3"], [52, 1, 1, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_CLR_4", "NRF_GPIOTE_TASK_CLR_4"], [52, 1, 1, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_CLR_5", "NRF_GPIOTE_TASK_CLR_5"], [52, 1, 1, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_CLR_6", "NRF_GPIOTE_TASK_CLR_6"], [52, 1, 1, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_CLR_7", "NRF_GPIOTE_TASK_CLR_7"], [52, 1, 1, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_OUT_0", "NRF_GPIOTE_TASK_OUT_0"], [52, 1, 1, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_OUT_1", "NRF_GPIOTE_TASK_OUT_1"], [52, 1, 1, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_OUT_2", "NRF_GPIOTE_TASK_OUT_2"], [52, 1, 1, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_OUT_3", "NRF_GPIOTE_TASK_OUT_3"], [52, 1, 1, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_OUT_4", "NRF_GPIOTE_TASK_OUT_4"], [52, 1, 1, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_OUT_5", "NRF_GPIOTE_TASK_OUT_5"], [52, 1, 1, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_OUT_6", "NRF_GPIOTE_TASK_OUT_6"], [52, 1, 1, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_OUT_7", "NRF_GPIOTE_TASK_OUT_7"], [52, 1, 1, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_SET_0", "NRF_GPIOTE_TASK_SET_0"], [52, 1, 1, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_SET_1", "NRF_GPIOTE_TASK_SET_1"], [52, 1, 1, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_SET_2", "NRF_GPIOTE_TASK_SET_2"], [52, 1, 1, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_SET_3", "NRF_GPIOTE_TASK_SET_3"], [52, 1, 1, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_SET_4", "NRF_GPIOTE_TASK_SET_4"], [52, 1, 1, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_SET_5", "NRF_GPIOTE_TASK_SET_5"], [52, 1, 1, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_SET_6", "NRF_GPIOTE_TASK_SET_6"], [52, 1, 1, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_SET_7", "NRF_GPIOTE_TASK_SET_7"]], "nrf_gpiote_task_trigger": [[52, 3, 1, "c.nrf_gpiote_task_trigger", "p_reg"], [52, 3, 1, "c.nrf_gpiote_task_trigger", "task"]], "nrf_gpiote_te_default": [[52, 3, 1, "c.nrf_gpiote_te_default", "idx"], [52, 3, 1, "c.nrf_gpiote_te_default", "p_reg"]], "nrf_gpiote_te_is_enabled": [[52, 3, 1, "c.nrf_gpiote_te_is_enabled", "idx"], [52, 3, 1, "c.nrf_gpiote_te_is_enabled", "p_reg"]], "nrf_grtc_cc_add_reference_t": [[56, 1, 1, "c.nrf_grtc_cc_add_reference_t.NRF_GRTC_CC_ADD_REFERENCE_CC", "NRF_GRTC_CC_ADD_REFERENCE_CC"], [56, 1, 1, "c.nrf_grtc_cc_add_reference_t.NRF_GRTC_CC_ADD_REFERENCE_SYSCOUNTER", "NRF_GRTC_CC_ADD_REFERENCE_SYSCOUNTER"]], "nrf_grtc_clkout_divider_get": [[56, 3, 1, "c.nrf_grtc_clkout_divider_get", "p_reg"]], "nrf_grtc_clkout_divider_set": [[56, 3, 1, "c.nrf_grtc_clkout_divider_set", "p_reg"], [56, 3, 1, "c.nrf_grtc_clkout_divider_set", "value"]], "nrf_grtc_clkout_enable_check": [[56, 3, 1, "c.nrf_grtc_clkout_enable_check", "clkout"], [56, 3, 1, "c.nrf_grtc_clkout_enable_check", "p_reg"]], "nrf_grtc_clkout_set": [[56, 3, 1, "c.nrf_grtc_clkout_set", "clkout"], [56, 3, 1, "c.nrf_grtc_clkout_set", "enable"], [56, 3, 1, "c.nrf_grtc_clkout_set", "p_reg"]], "nrf_grtc_clkout_t": [[56, 1, 1, "c.nrf_grtc_clkout_t.NRF_GRTC_CLKOUT_32K", "NRF_GRTC_CLKOUT_32K"], [56, 1, 1, "c.nrf_grtc_clkout_t.NRF_GRTC_CLKOUT_FAST", "NRF_GRTC_CLKOUT_FAST"]], "nrf_grtc_clksel_get": [[56, 3, 1, "c.nrf_grtc_clksel_get", "p_reg"]], "nrf_grtc_clksel_set": [[56, 3, 1, "c.nrf_grtc_clksel_set", "clksel"], [56, 3, 1, "c.nrf_grtc_clksel_set", "p_reg"]], "nrf_grtc_clksel_t": [[56, 1, 1, "c.nrf_grtc_clksel_t.NRF_GRTC_CLKSEL_LFCLK", "NRF_GRTC_CLKSEL_LFCLK"], [56, 1, 1, "c.nrf_grtc_clksel_t.NRF_GRTC_CLKSEL_LFXO", "NRF_GRTC_CLKSEL_LFXO"]], "nrf_grtc_event_address_get": [[56, 3, 1, "c.nrf_grtc_event_address_get", "event"], [56, 3, 1, "c.nrf_grtc_event_address_get", "p_reg"]], "nrf_grtc_event_check": [[56, 3, 1, "c.nrf_grtc_event_check", "event"], [56, 3, 1, "c.nrf_grtc_event_check", "p_reg"]], "nrf_grtc_event_clear": [[56, 3, 1, "c.nrf_grtc_event_clear", "event"], [56, 3, 1, "c.nrf_grtc_event_clear", "p_reg"]], "nrf_grtc_event_disable": [[56, 3, 1, "c.nrf_grtc_event_disable", "mask"], [56, 3, 1, "c.nrf_grtc_event_disable", "p_reg"]], "nrf_grtc_event_enable": [[56, 3, 1, "c.nrf_grtc_event_enable", "mask"], [56, 3, 1, "c.nrf_grtc_event_enable", "p_reg"]], "nrf_grtc_event_t": [[56, 1, 1, "c.nrf_grtc_event_t.NRF_GRTC_EVENT_COMPARE_0", "NRF_GRTC_EVENT_COMPARE_0"], [56, 1, 1, "c.nrf_grtc_event_t.NRF_GRTC_EVENT_COMPARE_1", "NRF_GRTC_EVENT_COMPARE_1"], [56, 1, 1, "c.nrf_grtc_event_t.NRF_GRTC_EVENT_COMPARE_10", "NRF_GRTC_EVENT_COMPARE_10"], [56, 1, 1, "c.nrf_grtc_event_t.NRF_GRTC_EVENT_COMPARE_11", "NRF_GRTC_EVENT_COMPARE_11"], [56, 1, 1, "c.nrf_grtc_event_t.NRF_GRTC_EVENT_COMPARE_12", "NRF_GRTC_EVENT_COMPARE_12"], [56, 1, 1, "c.nrf_grtc_event_t.NRF_GRTC_EVENT_COMPARE_2", "NRF_GRTC_EVENT_COMPARE_2"], [56, 1, 1, "c.nrf_grtc_event_t.NRF_GRTC_EVENT_COMPARE_3", "NRF_GRTC_EVENT_COMPARE_3"], [56, 1, 1, "c.nrf_grtc_event_t.NRF_GRTC_EVENT_COMPARE_4", "NRF_GRTC_EVENT_COMPARE_4"], [56, 1, 1, "c.nrf_grtc_event_t.NRF_GRTC_EVENT_COMPARE_5", "NRF_GRTC_EVENT_COMPARE_5"], [56, 1, 1, "c.nrf_grtc_event_t.NRF_GRTC_EVENT_COMPARE_6", "NRF_GRTC_EVENT_COMPARE_6"], [56, 1, 1, "c.nrf_grtc_event_t.NRF_GRTC_EVENT_COMPARE_7", "NRF_GRTC_EVENT_COMPARE_7"], [56, 1, 1, "c.nrf_grtc_event_t.NRF_GRTC_EVENT_COMPARE_8", "NRF_GRTC_EVENT_COMPARE_8"], [56, 1, 1, "c.nrf_grtc_event_t.NRF_GRTC_EVENT_COMPARE_9", "NRF_GRTC_EVENT_COMPARE_9"], [56, 1, 1, "c.nrf_grtc_event_t.NRF_GRTC_EVENT_PWM_PERIOD_END", "NRF_GRTC_EVENT_PWM_PERIOD_END"], [56, 1, 1, "c.nrf_grtc_event_t.NRF_GRTC_EVENT_RTCOMPARE", "NRF_GRTC_EVENT_RTCOMPARE"], [56, 1, 1, "c.nrf_grtc_event_t.NRF_GRTC_EVENT_RTCOMPARESYNC", "NRF_GRTC_EVENT_RTCOMPARESYNC"], [56, 1, 1, "c.nrf_grtc_event_t.NRF_GRTC_EVENT_SYSCOUNTERVALID", "NRF_GRTC_EVENT_SYSCOUNTERVALID"]], "nrf_grtc_int_disable": [[56, 3, 1, "c.nrf_grtc_int_disable", "mask"], [56, 3, 1, "c.nrf_grtc_int_disable", "p_reg"]], "nrf_grtc_int_enable": [[56, 3, 1, "c.nrf_grtc_int_enable", "mask"], [56, 3, 1, "c.nrf_grtc_int_enable", "p_reg"]], "nrf_grtc_int_enable_check": [[56, 3, 1, "c.nrf_grtc_int_enable_check", "mask"], [56, 3, 1, "c.nrf_grtc_int_enable_check", "p_reg"]], "nrf_grtc_int_mask_t": [[56, 1, 1, "c.nrf_grtc_int_mask_t.NRF_GRTC_INT_COMPARE0_MASK", "NRF_GRTC_INT_COMPARE0_MASK"], [56, 1, 1, "c.nrf_grtc_int_mask_t.NRF_GRTC_INT_COMPARE10_MASK", "NRF_GRTC_INT_COMPARE10_MASK"], [56, 1, 1, "c.nrf_grtc_int_mask_t.NRF_GRTC_INT_COMPARE11_MASK", "NRF_GRTC_INT_COMPARE11_MASK"], [56, 1, 1, "c.nrf_grtc_int_mask_t.NRF_GRTC_INT_COMPARE1_MASK", "NRF_GRTC_INT_COMPARE1_MASK"], [56, 1, 1, "c.nrf_grtc_int_mask_t.NRF_GRTC_INT_COMPARE2_MASK", "NRF_GRTC_INT_COMPARE2_MASK"], [56, 1, 1, "c.nrf_grtc_int_mask_t.NRF_GRTC_INT_COMPARE3_MASK", "NRF_GRTC_INT_COMPARE3_MASK"], [56, 1, 1, "c.nrf_grtc_int_mask_t.NRF_GRTC_INT_COMPARE4_MASK", "NRF_GRTC_INT_COMPARE4_MASK"], [56, 1, 1, "c.nrf_grtc_int_mask_t.NRF_GRTC_INT_COMPARE5_MASK", "NRF_GRTC_INT_COMPARE5_MASK"], [56, 1, 1, "c.nrf_grtc_int_mask_t.NRF_GRTC_INT_COMPARE6_MASK", "NRF_GRTC_INT_COMPARE6_MASK"], [56, 1, 1, "c.nrf_grtc_int_mask_t.NRF_GRTC_INT_COMPARE7_MASK", "NRF_GRTC_INT_COMPARE7_MASK"], [56, 1, 1, "c.nrf_grtc_int_mask_t.NRF_GRTC_INT_COMPARE8_MASK", "NRF_GRTC_INT_COMPARE8_MASK"], [56, 1, 1, "c.nrf_grtc_int_mask_t.NRF_GRTC_INT_COMPARE9_MASK", "NRF_GRTC_INT_COMPARE9_MASK"], [56, 1, 1, "c.nrf_grtc_int_mask_t.NRF_GRTC_INT_RTCOMPARESYNC_MASK", "NRF_GRTC_INT_RTCOMPARESYNC_MASK"], [56, 1, 1, "c.nrf_grtc_int_mask_t.NRF_GRTC_INT_RTCOMPARE_MASK", "NRF_GRTC_INT_RTCOMPARE_MASK"], [56, 1, 1, "c.nrf_grtc_int_mask_t.NRF_GRTC_INT_SYSCOUNTERVALID_MASK", "NRF_GRTC_INT_SYSCOUNTERVALID_MASK"]], "nrf_grtc_int_pending_get": [[56, 3, 1, "c.nrf_grtc_int_pending_get", "p_reg"]], "nrf_grtc_publish_clear": [[56, 3, 1, "c.nrf_grtc_publish_clear", "event"], [56, 3, 1, "c.nrf_grtc_publish_clear", "p_reg"]], "nrf_grtc_publish_set": [[56, 3, 1, "c.nrf_grtc_publish_set", "channel"], [56, 3, 1, "c.nrf_grtc_publish_set", "event"], [56, 3, 1, "c.nrf_grtc_publish_set", "p_reg"]], "nrf_grtc_pwm_compare_get": [[56, 3, 1, "c.nrf_grtc_pwm_compare_get", "p_reg"]], "nrf_grtc_pwm_compare_set": [[56, 3, 1, "c.nrf_grtc_pwm_compare_set", "p_reg"], [56, 3, 1, "c.nrf_grtc_pwm_compare_set", "value"]], "nrf_grtc_rt_counter_cc_get": [[56, 3, 1, "c.nrf_grtc_rt_counter_cc_get", "p_reg"]], "nrf_grtc_rt_counter_cc_set": [[56, 3, 1, "c.nrf_grtc_rt_counter_cc_set", "cc_value"], [56, 3, 1, "c.nrf_grtc_rt_counter_cc_set", "p_reg"], [56, 3, 1, "c.nrf_grtc_rt_counter_cc_set", "sync"]], "nrf_grtc_rt_counter_high_get": [[56, 3, 1, "c.nrf_grtc_rt_counter_high_get", "p_reg"]], "nrf_grtc_rt_counter_low_get": [[56, 3, 1, "c.nrf_grtc_rt_counter_low_get", "p_reg"]], "nrf_grtc_short_mask_t": [[56, 1, 1, "c.nrf_grtc_short_mask_t.NRF_GRTC_SHORT_RTCOMPARE_CLEAR_MASK", "NRF_GRTC_SHORT_RTCOMPARE_CLEAR_MASK"]], "nrf_grtc_shorts_disable": [[56, 3, 1, "c.nrf_grtc_shorts_disable", "mask"], [56, 3, 1, "c.nrf_grtc_shorts_disable", "p_reg"]], "nrf_grtc_shorts_enable": [[56, 3, 1, "c.nrf_grtc_shorts_enable", "mask"], [56, 3, 1, "c.nrf_grtc_shorts_enable", "p_reg"]], "nrf_grtc_shorts_set": [[56, 3, 1, "c.nrf_grtc_shorts_set", "mask"], [56, 3, 1, "c.nrf_grtc_shorts_set", "p_reg"]], "nrf_grtc_subscribe_clear": [[56, 3, 1, "c.nrf_grtc_subscribe_clear", "p_reg"], [56, 3, 1, "c.nrf_grtc_subscribe_clear", "task"]], "nrf_grtc_subscribe_set": [[56, 3, 1, "c.nrf_grtc_subscribe_set", "channel"], [56, 3, 1, "c.nrf_grtc_subscribe_set", "p_reg"], [56, 3, 1, "c.nrf_grtc_subscribe_set", "task"]], "nrf_grtc_sys_counter_active_check": [[56, 3, 1, "c.nrf_grtc_sys_counter_active_check", "p_reg"]], "nrf_grtc_sys_counter_active_set": [[56, 3, 1, "c.nrf_grtc_sys_counter_active_set", "enable"], [56, 3, 1, "c.nrf_grtc_sys_counter_active_set", "p_reg"]], "nrf_grtc_sys_counter_active_state_request_check": [[56, 3, 1, "c.nrf_grtc_sys_counter_active_state_request_check", "p_reg"]], "nrf_grtc_sys_counter_active_state_request_get": [[56, 3, 1, "c.nrf_grtc_sys_counter_active_state_request_get", "mask"], [56, 3, 1, "c.nrf_grtc_sys_counter_active_state_request_get", "p_reg"]], "nrf_grtc_sys_counter_active_state_request_set": [[56, 3, 1, "c.nrf_grtc_sys_counter_active_state_request_set", "enable"], [56, 3, 1, "c.nrf_grtc_sys_counter_active_state_request_set", "p_reg"]], "nrf_grtc_sys_counter_auto_mode_check": [[56, 3, 1, "c.nrf_grtc_sys_counter_auto_mode_check", "p_reg"]], "nrf_grtc_sys_counter_auto_mode_set": [[56, 3, 1, "c.nrf_grtc_sys_counter_auto_mode_set", "enable"], [56, 3, 1, "c.nrf_grtc_sys_counter_auto_mode_set", "p_reg"]], "nrf_grtc_sys_counter_capture_task_get": [[56, 3, 1, "c.nrf_grtc_sys_counter_capture_task_get", "cc_channel"]], "nrf_grtc_sys_counter_cc_add_set": [[56, 3, 1, "c.nrf_grtc_sys_counter_cc_add_set", "cc_channel"], [56, 3, 1, "c.nrf_grtc_sys_counter_cc_add_set", "p_reg"], [56, 3, 1, "c.nrf_grtc_sys_counter_cc_add_set", "reference"], [56, 3, 1, "c.nrf_grtc_sys_counter_cc_add_set", "value"]], "nrf_grtc_sys_counter_cc_enable_check": [[56, 3, 1, "c.nrf_grtc_sys_counter_cc_enable_check", "cc_channel"], [56, 3, 1, "c.nrf_grtc_sys_counter_cc_enable_check", "p_reg"]], "nrf_grtc_sys_counter_cc_get": [[56, 3, 1, "c.nrf_grtc_sys_counter_cc_get", "cc_channel"], [56, 3, 1, "c.nrf_grtc_sys_counter_cc_get", "p_reg"]], "nrf_grtc_sys_counter_cc_set": [[56, 3, 1, "c.nrf_grtc_sys_counter_cc_set", "cc_channel"], [56, 3, 1, "c.nrf_grtc_sys_counter_cc_set", "cc_value"], [56, 3, 1, "c.nrf_grtc_sys_counter_cc_set", "p_reg"]], "nrf_grtc_sys_counter_check": [[56, 3, 1, "c.nrf_grtc_sys_counter_check", "p_reg"]], "nrf_grtc_sys_counter_compare_event_disable": [[56, 3, 1, "c.nrf_grtc_sys_counter_compare_event_disable", "cc_channel"], [56, 3, 1, "c.nrf_grtc_sys_counter_compare_event_disable", "p_reg"]], "nrf_grtc_sys_counter_compare_event_enable": [[56, 3, 1, "c.nrf_grtc_sys_counter_compare_event_enable", "cc_channel"], [56, 3, 1, "c.nrf_grtc_sys_counter_compare_event_enable", "p_reg"]], "nrf_grtc_sys_counter_compare_event_get": [[56, 3, 1, "c.nrf_grtc_sys_counter_compare_event_get", "cc_channel"]], "nrf_grtc_sys_counter_get": [[56, 3, 1, "c.nrf_grtc_sys_counter_get", "p_reg"]], "nrf_grtc_sys_counter_high_get": [[56, 3, 1, "c.nrf_grtc_sys_counter_high_get", "p_reg"]], "nrf_grtc_sys_counter_interval_get": [[56, 3, 1, "c.nrf_grtc_sys_counter_interval_get", "p_reg"]], "nrf_grtc_sys_counter_interval_set": [[56, 3, 1, "c.nrf_grtc_sys_counter_interval_set", "p_reg"], [56, 3, 1, "c.nrf_grtc_sys_counter_interval_set", "value"]], "nrf_grtc_sys_counter_low_get": [[56, 3, 1, "c.nrf_grtc_sys_counter_low_get", "p_reg"]], "nrf_grtc_sys_counter_overflow_check": [[56, 3, 1, "c.nrf_grtc_sys_counter_overflow_check", "p_reg"]], "nrf_grtc_sys_counter_set": [[56, 3, 1, "c.nrf_grtc_sys_counter_set", "enable"], [56, 3, 1, "c.nrf_grtc_sys_counter_set", "p_reg"]], "nrf_grtc_task_address_get": [[56, 3, 1, "c.nrf_grtc_task_address_get", "p_reg"], [56, 3, 1, "c.nrf_grtc_task_address_get", "task"]], "nrf_grtc_task_t": [[56, 1, 1, "c.nrf_grtc_task_t.NRF_GRTC_TASK_CAPTURE_0", "NRF_GRTC_TASK_CAPTURE_0"], [56, 1, 1, "c.nrf_grtc_task_t.NRF_GRTC_TASK_CAPTURE_1", "NRF_GRTC_TASK_CAPTURE_1"], [56, 1, 1, "c.nrf_grtc_task_t.NRF_GRTC_TASK_CAPTURE_10", "NRF_GRTC_TASK_CAPTURE_10"], [56, 1, 1, "c.nrf_grtc_task_t.NRF_GRTC_TASK_CAPTURE_11", "NRF_GRTC_TASK_CAPTURE_11"], [56, 1, 1, "c.nrf_grtc_task_t.NRF_GRTC_TASK_CAPTURE_2", "NRF_GRTC_TASK_CAPTURE_2"], [56, 1, 1, "c.nrf_grtc_task_t.NRF_GRTC_TASK_CAPTURE_3", "NRF_GRTC_TASK_CAPTURE_3"], [56, 1, 1, "c.nrf_grtc_task_t.NRF_GRTC_TASK_CAPTURE_4", "NRF_GRTC_TASK_CAPTURE_4"], [56, 1, 1, "c.nrf_grtc_task_t.NRF_GRTC_TASK_CAPTURE_5", "NRF_GRTC_TASK_CAPTURE_5"], [56, 1, 1, "c.nrf_grtc_task_t.NRF_GRTC_TASK_CAPTURE_6", "NRF_GRTC_TASK_CAPTURE_6"], [56, 1, 1, "c.nrf_grtc_task_t.NRF_GRTC_TASK_CAPTURE_7", "NRF_GRTC_TASK_CAPTURE_7"], [56, 1, 1, "c.nrf_grtc_task_t.NRF_GRTC_TASK_CAPTURE_8", "NRF_GRTC_TASK_CAPTURE_8"], [56, 1, 1, "c.nrf_grtc_task_t.NRF_GRTC_TASK_CAPTURE_9", "NRF_GRTC_TASK_CAPTURE_9"], [56, 1, 1, "c.nrf_grtc_task_t.NRF_GRTC_TASK_CLEAR", "NRF_GRTC_TASK_CLEAR"], [56, 1, 1, "c.nrf_grtc_task_t.NRF_GRTC_TASK_PWM_START", "NRF_GRTC_TASK_PWM_START"], [56, 1, 1, "c.nrf_grtc_task_t.NRF_GRTC_TASK_PWM_STOP", "NRF_GRTC_TASK_PWM_STOP"], [56, 1, 1, "c.nrf_grtc_task_t.NRF_GRTC_TASK_START", "NRF_GRTC_TASK_START"], [56, 1, 1, "c.nrf_grtc_task_t.NRF_GRTC_TASK_STOP", "NRF_GRTC_TASK_STOP"]], "nrf_grtc_task_trigger": [[56, 3, 1, "c.nrf_grtc_task_trigger", "p_reg"], [56, 3, 1, "c.nrf_grtc_task_trigger", "task"]], "nrf_grtc_timeout_get": [[56, 3, 1, "c.nrf_grtc_timeout_get", "p_reg"]], "nrf_grtc_timeout_set": [[56, 3, 1, "c.nrf_grtc_timeout_set", "p_reg"], [56, 3, 1, "c.nrf_grtc_timeout_set", "value"]], "nrf_grtc_waketime_get": [[56, 3, 1, "c.nrf_grtc_waketime_get", "p_reg"]], "nrf_grtc_waketime_set": [[56, 3, 1, "c.nrf_grtc_waketime_set", "p_reg"], [56, 3, 1, "c.nrf_grtc_waketime_set", "value"]], "nrf_hsfll_clkctrl_dither_init_set": [[59, 3, 1, "c.nrf_hsfll_clkctrl_dither_init_set", "p_reg"], [59, 3, 1, "c.nrf_hsfll_clkctrl_dither_init_set", "seed"]], "nrf_hsfll_clkctrl_dithering_get": [[59, 3, 1, "c.nrf_hsfll_clkctrl_dithering_get", "p_config"], [59, 3, 1, "c.nrf_hsfll_clkctrl_dithering_get", "p_reg"]], "nrf_hsfll_clkctrl_dithering_set": [[59, 3, 1, "c.nrf_hsfll_clkctrl_dithering_set", "p_config"], [59, 3, 1, "c.nrf_hsfll_clkctrl_dithering_set", "p_reg"]], "nrf_hsfll_clkctrl_mode_get": [[59, 3, 1, "c.nrf_hsfll_clkctrl_mode_get", "p_clkctrl"], [59, 3, 1, "c.nrf_hsfll_clkctrl_mode_get", "p_reg"]], "nrf_hsfll_clkctrl_mode_set": [[59, 3, 1, "c.nrf_hsfll_clkctrl_mode_set", "p_clkctrl"], [59, 3, 1, "c.nrf_hsfll_clkctrl_mode_set", "p_reg"]], "nrf_hsfll_clkctrl_mult_get": [[59, 3, 1, "c.nrf_hsfll_clkctrl_mult_get", "p_reg"]], "nrf_hsfll_clkctrl_mult_set": [[59, 3, 1, "c.nrf_hsfll_clkctrl_mult_set", "multiplier"], [59, 3, 1, "c.nrf_hsfll_clkctrl_mult_set", "p_reg"]], "nrf_hsfll_clkctrl_overridelocked_enable_set": [[59, 3, 1, "c.nrf_hsfll_clkctrl_overridelocked_enable_set", "override"], [59, 3, 1, "c.nrf_hsfll_clkctrl_overridelocked_enable_set", "p_reg"]], "nrf_hsfll_clkctrl_retainfinetrim_enable_set": [[59, 3, 1, "c.nrf_hsfll_clkctrl_retainfinetrim_enable_set", "p_reg"], [59, 3, 1, "c.nrf_hsfll_clkctrl_retainfinetrim_enable_set", "retain"]], "nrf_hsfll_clkctrl_sleep_get": [[59, 3, 1, "c.nrf_hsfll_clkctrl_sleep_get", "p_config"], [59, 3, 1, "c.nrf_hsfll_clkctrl_sleep_get", "p_reg"]], "nrf_hsfll_clkctrl_sleep_set": [[59, 3, 1, "c.nrf_hsfll_clkctrl_sleep_set", "p_config"], [59, 3, 1, "c.nrf_hsfll_clkctrl_sleep_set", "p_reg"]], "nrf_hsfll_clkctrl_t": [[59, 6, 1, "c.nrf_hsfll_clkctrl_t.mode", "mode"], [59, 6, 1, "c.nrf_hsfll_clkctrl_t.override", "override"]], "nrf_hsfll_dithering_t": [[59, 6, 1, "c.nrf_hsfll_dithering_t.cyclecount", "cyclecount"], [59, 6, 1, "c.nrf_hsfll_dithering_t.enable", "enable"], [59, 6, 1, "c.nrf_hsfll_dithering_t.initvalue", "initvalue"], [59, 6, 1, "c.nrf_hsfll_dithering_t.maxoffset", "maxoffset"]], "nrf_hsfll_event_address_get": [[59, 3, 1, "c.nrf_hsfll_event_address_get", "event"], [59, 3, 1, "c.nrf_hsfll_event_address_get", "p_reg"]], "nrf_hsfll_event_check": [[59, 3, 1, "c.nrf_hsfll_event_check", "event"], [59, 3, 1, "c.nrf_hsfll_event_check", "p_reg"]], "nrf_hsfll_event_clear": [[59, 3, 1, "c.nrf_hsfll_event_clear", "event"], [59, 3, 1, "c.nrf_hsfll_event_clear", "p_reg"]], "nrf_hsfll_event_t": [[59, 1, 1, "c.nrf_hsfll_event_t.NRF_HSFLL_EVENT_FREQM_DONE", "NRF_HSFLL_EVENT_FREQM_DONE"], [59, 1, 1, "c.nrf_hsfll_event_t.NRF_HSFLL_EVENT_FREQ_CHANGED", "NRF_HSFLL_EVENT_FREQ_CHANGED"], [59, 1, 1, "c.nrf_hsfll_event_t.NRF_HSFLL_EVENT_STARTED", "NRF_HSFLL_EVENT_STARTED"], [59, 1, 1, "c.nrf_hsfll_event_t.NRF_HSFLL_EVENT_STOPPED", "NRF_HSFLL_EVENT_STOPPED"]], "nrf_hsfll_freqm_done_check": [[59, 3, 1, "c.nrf_hsfll_freqm_done_check", "p_reg"]], "nrf_hsfll_freqm_error_get": [[59, 3, 1, "c.nrf_hsfll_freqm_error_get", "p_error"], [59, 3, 1, "c.nrf_hsfll_freqm_error_get", "p_reg"]], "nrf_hsfll_freqm_error_t": [[59, 6, 1, "c.nrf_hsfll_freqm_error_t.error", "error"], [59, 6, 1, "c.nrf_hsfll_freqm_error_t.trim_overflow", "trim_overflow"], [59, 6, 1, "c.nrf_hsfll_freqm_error_t.trim_underflow", "trim_underflow"]], "nrf_hsfll_freqm_meas_get": [[59, 3, 1, "c.nrf_hsfll_freqm_meas_get", "p_reg"]], "nrf_hsfll_mirror_lock_set": [[59, 3, 1, "c.nrf_hsfll_mirror_lock_set", "enable"], [59, 3, 1, "c.nrf_hsfll_mirror_lock_set", "p_reg"]], "nrf_hsfll_mode_ctrl_t": [[59, 1, 1, "c.nrf_hsfll_mode_ctrl_t.NRF_HSFLL_MODE_CTRL_AUTO", "NRF_HSFLL_MODE_CTRL_AUTO"], [59, 1, 1, "c.nrf_hsfll_mode_ctrl_t.NRF_HSFLL_MODE_CTRL_BYPASS", "NRF_HSFLL_MODE_CTRL_BYPASS"], [59, 1, 1, "c.nrf_hsfll_mode_ctrl_t.NRF_HSFLL_MODE_CTRL_CLOSED_LOOP", "NRF_HSFLL_MODE_CTRL_CLOSED_LOOP"], [59, 1, 1, "c.nrf_hsfll_mode_ctrl_t.NRF_HSFLL_MODE_CTRL_OPEN_LOOP", "NRF_HSFLL_MODE_CTRL_OPEN_LOOP"]], "nrf_hsfll_mode_status_t": [[59, 1, 1, "c.nrf_hsfll_mode_status_t.NRF_HSFLL_MODE_STATUS_BYPASS", "NRF_HSFLL_MODE_STATUS_BYPASS"], [59, 1, 1, "c.nrf_hsfll_mode_status_t.NRF_HSFLL_MODE_STATUS_CLOSED_LOOP", "NRF_HSFLL_MODE_STATUS_CLOSED_LOOP"], [59, 1, 1, "c.nrf_hsfll_mode_status_t.NRF_HSFLL_MODE_STATUS_OPEN_LOOP", "NRF_HSFLL_MODE_STATUS_OPEN_LOOP"]], "nrf_hsfll_sleep_t": [[59, 6, 1, "c.nrf_hsfll_sleep_t.mode", "mode"], [59, 6, 1, "c.nrf_hsfll_sleep_t.retain", "retain"]], "nrf_hsfll_status_clk_get": [[59, 3, 1, "c.nrf_hsfll_status_clk_get", "p_reg"], [59, 3, 1, "c.nrf_hsfll_status_clk_get", "p_status"]], "nrf_hsfll_status_clk_t": [[59, 6, 1, "c.nrf_hsfll_status_clk_t.accuracy", "accuracy"], [59, 6, 1, "c.nrf_hsfll_status_clk_t.locked", "locked"], [59, 6, 1, "c.nrf_hsfll_status_clk_t.mode", "mode"], [59, 6, 1, "c.nrf_hsfll_status_clk_t.override", "override"]], "nrf_hsfll_task_address_get": [[59, 3, 1, "c.nrf_hsfll_task_address_get", "p_reg"], [59, 3, 1, "c.nrf_hsfll_task_address_get", "task"]], "nrf_hsfll_task_t": [[59, 1, 1, "c.nrf_hsfll_task_t.NRF_HSFLL_TASK_FREQ_CHANGE", "NRF_HSFLL_TASK_FREQ_CHANGE"], [59, 1, 1, "c.nrf_hsfll_task_t.NRF_HSFLL_TASK_FREQ_MEAS", "NRF_HSFLL_TASK_FREQ_MEAS"], [59, 1, 1, "c.nrf_hsfll_task_t.NRF_HSFLL_TASK_START", "NRF_HSFLL_TASK_START"], [59, 1, 1, "c.nrf_hsfll_task_t.NRF_HSFLL_TASK_STOP", "NRF_HSFLL_TASK_STOP"]], "nrf_hsfll_task_trigger": [[59, 3, 1, "c.nrf_hsfll_task_trigger", "p_reg"], [59, 3, 1, "c.nrf_hsfll_task_trigger", "task"]], "nrf_hsfll_trim_get": [[59, 3, 1, "c.nrf_hsfll_trim_get", "p_reg"], [59, 3, 1, "c.nrf_hsfll_trim_get", "p_trim"]], "nrf_hsfll_trim_set": [[59, 3, 1, "c.nrf_hsfll_trim_set", "p_reg"], [59, 3, 1, "c.nrf_hsfll_trim_set", "p_trim"]], "nrf_hsfll_trim_t": [[59, 6, 1, "c.nrf_hsfll_trim_t.coarse", "coarse"], [59, 6, 1, "c.nrf_hsfll_trim_t.fine", "fine"], [59, 6, 1, "c.nrf_hsfll_trim_t.vsup", "vsup"]], "nrf_i2s_align_t": [[61, 1, 1, "c.nrf_i2s_align_t.NRF_I2S_ALIGN_LEFT", "NRF_I2S_ALIGN_LEFT"], [61, 1, 1, "c.nrf_i2s_align_t.NRF_I2S_ALIGN_RIGHT", "NRF_I2S_ALIGN_RIGHT"]], "nrf_i2s_channels_t": [[61, 1, 1, "c.nrf_i2s_channels_t.NRF_I2S_CHANNELS_LEFT", "NRF_I2S_CHANNELS_LEFT"], [61, 1, 1, "c.nrf_i2s_channels_t.NRF_I2S_CHANNELS_RIGHT", "NRF_I2S_CHANNELS_RIGHT"], [61, 1, 1, "c.nrf_i2s_channels_t.NRF_I2S_CHANNELS_STEREO", "NRF_I2S_CHANNELS_STEREO"]], "nrf_i2s_clk_configure": [[61, 3, 1, "c.nrf_i2s_clk_configure", "clksrc"], [61, 3, 1, "c.nrf_i2s_clk_configure", "enable_bypass"], [61, 3, 1, "c.nrf_i2s_clk_configure", "p_reg"]], "nrf_i2s_clksrc_t": [[61, 1, 1, "c.nrf_i2s_clksrc_t.NRF_I2S_CLKSRC_ACLK", "NRF_I2S_CLKSRC_ACLK"], [61, 1, 1, "c.nrf_i2s_clksrc_t.NRF_I2S_CLKSRC_PCLK32M", "NRF_I2S_CLKSRC_PCLK32M"]], "nrf_i2s_config_t": [[61, 6, 1, "c.nrf_i2s_config_t.alignment", "alignment"], [61, 6, 1, "c.nrf_i2s_config_t.channels", "channels"], [61, 6, 1, "c.nrf_i2s_config_t.format", "format"], [61, 6, 1, "c.nrf_i2s_config_t.mck_setup", "mck_setup"], [61, 6, 1, "c.nrf_i2s_config_t.mode", "mode"], [61, 6, 1, "c.nrf_i2s_config_t.ratio", "ratio"], [61, 6, 1, "c.nrf_i2s_config_t.sample_width", "sample_width"]], "nrf_i2s_configure": [[61, 3, 1, "c.nrf_i2s_configure", "p_config"], [61, 3, 1, "c.nrf_i2s_configure", "p_reg"]], "nrf_i2s_disable": [[61, 3, 1, "c.nrf_i2s_disable", "p_reg"]], "nrf_i2s_enable": [[61, 3, 1, "c.nrf_i2s_enable", "p_reg"]], "nrf_i2s_event_address_get": [[61, 3, 1, "c.nrf_i2s_event_address_get", "event"], [61, 3, 1, "c.nrf_i2s_event_address_get", "p_reg"]], "nrf_i2s_event_check": [[61, 3, 1, "c.nrf_i2s_event_check", "event"], [61, 3, 1, "c.nrf_i2s_event_check", "p_reg"]], "nrf_i2s_event_clear": [[61, 3, 1, "c.nrf_i2s_event_clear", "event"], [61, 3, 1, "c.nrf_i2s_event_clear", "p_reg"]], "nrf_i2s_event_t": [[61, 1, 1, "c.nrf_i2s_event_t.NRF_I2S_EVENT_FRAMESTART", "NRF_I2S_EVENT_FRAMESTART"], [61, 1, 1, "c.nrf_i2s_event_t.NRF_I2S_EVENT_RXPTRUPD", "NRF_I2S_EVENT_RXPTRUPD"], [61, 1, 1, "c.nrf_i2s_event_t.NRF_I2S_EVENT_STOPPED", "NRF_I2S_EVENT_STOPPED"], [61, 1, 1, "c.nrf_i2s_event_t.NRF_I2S_EVENT_TXPTRUPD", "NRF_I2S_EVENT_TXPTRUPD"]], "nrf_i2s_format_t": [[61, 1, 1, "c.nrf_i2s_format_t.NRF_I2S_FORMAT_ALIGNED", "NRF_I2S_FORMAT_ALIGNED"], [61, 1, 1, "c.nrf_i2s_format_t.NRF_I2S_FORMAT_I2S", "NRF_I2S_FORMAT_I2S"]], "nrf_i2s_int_disable": [[61, 3, 1, "c.nrf_i2s_int_disable", "mask"], [61, 3, 1, "c.nrf_i2s_int_disable", "p_reg"]], "nrf_i2s_int_enable": [[61, 3, 1, "c.nrf_i2s_int_enable", "mask"], [61, 3, 1, "c.nrf_i2s_int_enable", "p_reg"]], "nrf_i2s_int_enable_check": [[61, 3, 1, "c.nrf_i2s_int_enable_check", "mask"], [61, 3, 1, "c.nrf_i2s_int_enable_check", "p_reg"]], "nrf_i2s_int_mask_t": [[61, 1, 1, "c.nrf_i2s_int_mask_t.NRF_I2S_INT_FRAMESTART_MASK", "NRF_I2S_INT_FRAMESTART_MASK"], [61, 1, 1, "c.nrf_i2s_int_mask_t.NRF_I2S_INT_RXPTRUPD_MASK", "NRF_I2S_INT_RXPTRUPD_MASK"], [61, 1, 1, "c.nrf_i2s_int_mask_t.NRF_I2S_INT_STOPPED_MASK", "NRF_I2S_INT_STOPPED_MASK"], [61, 1, 1, "c.nrf_i2s_int_mask_t.NRF_I2S_INT_TXPTRUPD_MASK", "NRF_I2S_INT_TXPTRUPD_MASK"]], "nrf_i2s_lrck_pin_get": [[61, 3, 1, "c.nrf_i2s_lrck_pin_get", "p_reg"]], "nrf_i2s_mck_pin_get": [[61, 3, 1, "c.nrf_i2s_mck_pin_get", "p_reg"]], "nrf_i2s_mck_t": [[61, 1, 1, "c.nrf_i2s_mck_t.NRF_I2S_MCK_32MDIV10", "NRF_I2S_MCK_32MDIV10"], [61, 1, 1, "c.nrf_i2s_mck_t.NRF_I2S_MCK_32MDIV11", "NRF_I2S_MCK_32MDIV11"], [61, 1, 1, "c.nrf_i2s_mck_t.NRF_I2S_MCK_32MDIV125", "NRF_I2S_MCK_32MDIV125"], [61, 1, 1, "c.nrf_i2s_mck_t.NRF_I2S_MCK_32MDIV15", "NRF_I2S_MCK_32MDIV15"], [61, 1, 1, "c.nrf_i2s_mck_t.NRF_I2S_MCK_32MDIV16", "NRF_I2S_MCK_32MDIV16"], [61, 1, 1, "c.nrf_i2s_mck_t.NRF_I2S_MCK_32MDIV2", "NRF_I2S_MCK_32MDIV2"], [61, 1, 1, "c.nrf_i2s_mck_t.NRF_I2S_MCK_32MDIV21", "NRF_I2S_MCK_32MDIV21"], [61, 1, 1, "c.nrf_i2s_mck_t.NRF_I2S_MCK_32MDIV23", "NRF_I2S_MCK_32MDIV23"], [61, 1, 1, "c.nrf_i2s_mck_t.NRF_I2S_MCK_32MDIV3", "NRF_I2S_MCK_32MDIV3"], [61, 1, 1, "c.nrf_i2s_mck_t.NRF_I2S_MCK_32MDIV30", "NRF_I2S_MCK_32MDIV30"], [61, 1, 1, "c.nrf_i2s_mck_t.NRF_I2S_MCK_32MDIV31", "NRF_I2S_MCK_32MDIV31"], [61, 1, 1, "c.nrf_i2s_mck_t.NRF_I2S_MCK_32MDIV32", "NRF_I2S_MCK_32MDIV32"], [61, 1, 1, "c.nrf_i2s_mck_t.NRF_I2S_MCK_32MDIV4", "NRF_I2S_MCK_32MDIV4"], [61, 1, 1, "c.nrf_i2s_mck_t.NRF_I2S_MCK_32MDIV42", "NRF_I2S_MCK_32MDIV42"], [61, 1, 1, "c.nrf_i2s_mck_t.NRF_I2S_MCK_32MDIV5", "NRF_I2S_MCK_32MDIV5"], [61, 1, 1, "c.nrf_i2s_mck_t.NRF_I2S_MCK_32MDIV6", "NRF_I2S_MCK_32MDIV6"], [61, 1, 1, "c.nrf_i2s_mck_t.NRF_I2S_MCK_32MDIV63", "NRF_I2S_MCK_32MDIV63"], [61, 1, 1, "c.nrf_i2s_mck_t.NRF_I2S_MCK_32MDIV8", "NRF_I2S_MCK_32MDIV8"], [61, 1, 1, "c.nrf_i2s_mck_t.NRF_I2S_MCK_DISABLED", "NRF_I2S_MCK_DISABLED"]], "nrf_i2s_mode_t": [[61, 1, 1, "c.nrf_i2s_mode_t.NRF_I2S_MODE_MASTER", "NRF_I2S_MODE_MASTER"], [61, 1, 1, "c.nrf_i2s_mode_t.NRF_I2S_MODE_SLAVE", "NRF_I2S_MODE_SLAVE"]], "nrf_i2s_pins_set": [[61, 3, 1, "c.nrf_i2s_pins_set", "p_pins"], [61, 3, 1, "c.nrf_i2s_pins_set", "p_reg"]], "nrf_i2s_pins_t": [[61, 6, 1, "c.nrf_i2s_pins_t.lrck_pin", "lrck_pin"], [61, 6, 1, "c.nrf_i2s_pins_t.mck_pin", "mck_pin"], [61, 6, 1, "c.nrf_i2s_pins_t.sck_pin", "sck_pin"], [61, 6, 1, "c.nrf_i2s_pins_t.sdin_pin", "sdin_pin"], [61, 6, 1, "c.nrf_i2s_pins_t.sdout_pin", "sdout_pin"]], "nrf_i2s_publish_clear": [[61, 3, 1, "c.nrf_i2s_publish_clear", "event"], [61, 3, 1, "c.nrf_i2s_publish_clear", "p_reg"]], "nrf_i2s_publish_set": [[61, 3, 1, "c.nrf_i2s_publish_set", "channel"], [61, 3, 1, "c.nrf_i2s_publish_set", "event"], [61, 3, 1, "c.nrf_i2s_publish_set", "p_reg"]], "nrf_i2s_ratio_t": [[61, 1, 1, "c.nrf_i2s_ratio_t.NRF_I2S_RATIO_128X", "NRF_I2S_RATIO_128X"], [61, 1, 1, "c.nrf_i2s_ratio_t.NRF_I2S_RATIO_192X", "NRF_I2S_RATIO_192X"], [61, 1, 1, "c.nrf_i2s_ratio_t.NRF_I2S_RATIO_256X", "NRF_I2S_RATIO_256X"], [61, 1, 1, "c.nrf_i2s_ratio_t.NRF_I2S_RATIO_32X", "NRF_I2S_RATIO_32X"], [61, 1, 1, "c.nrf_i2s_ratio_t.NRF_I2S_RATIO_384X", "NRF_I2S_RATIO_384X"], [61, 1, 1, "c.nrf_i2s_ratio_t.NRF_I2S_RATIO_48X", "NRF_I2S_RATIO_48X"], [61, 1, 1, "c.nrf_i2s_ratio_t.NRF_I2S_RATIO_512X", "NRF_I2S_RATIO_512X"], [61, 1, 1, "c.nrf_i2s_ratio_t.NRF_I2S_RATIO_64X", "NRF_I2S_RATIO_64X"], [61, 1, 1, "c.nrf_i2s_ratio_t.NRF_I2S_RATIO_96X", "NRF_I2S_RATIO_96X"]], "nrf_i2s_rx_buffer_get": [[61, 3, 1, "c.nrf_i2s_rx_buffer_get", "p_reg"]], "nrf_i2s_rx_buffer_set": [[61, 3, 1, "c.nrf_i2s_rx_buffer_set", "p_buffer"], [61, 3, 1, "c.nrf_i2s_rx_buffer_set", "p_reg"]], "nrf_i2s_sck_pin_get": [[61, 3, 1, "c.nrf_i2s_sck_pin_get", "p_reg"]], "nrf_i2s_sdin_pin_get": [[61, 3, 1, "c.nrf_i2s_sdin_pin_get", "p_reg"]], "nrf_i2s_sdout_pin_get": [[61, 3, 1, "c.nrf_i2s_sdout_pin_get", "p_reg"]], "nrf_i2s_subscribe_clear": [[61, 3, 1, "c.nrf_i2s_subscribe_clear", "p_reg"], [61, 3, 1, "c.nrf_i2s_subscribe_clear", "task"]], "nrf_i2s_subscribe_set": [[61, 3, 1, "c.nrf_i2s_subscribe_set", "channel"], [61, 3, 1, "c.nrf_i2s_subscribe_set", "p_reg"], [61, 3, 1, "c.nrf_i2s_subscribe_set", "task"]], "nrf_i2s_swidth_t": [[61, 1, 1, "c.nrf_i2s_swidth_t.NRF_I2S_SWIDTH_16BIT", "NRF_I2S_SWIDTH_16BIT"], [61, 1, 1, "c.nrf_i2s_swidth_t.NRF_I2S_SWIDTH_16BIT_IN32BIT", "NRF_I2S_SWIDTH_16BIT_IN32BIT"], [61, 1, 1, "c.nrf_i2s_swidth_t.NRF_I2S_SWIDTH_24BIT", "NRF_I2S_SWIDTH_24BIT"], [61, 1, 1, "c.nrf_i2s_swidth_t.NRF_I2S_SWIDTH_24BIT_IN32BIT", "NRF_I2S_SWIDTH_24BIT_IN32BIT"], [61, 1, 1, "c.nrf_i2s_swidth_t.NRF_I2S_SWIDTH_32BIT", "NRF_I2S_SWIDTH_32BIT"], [61, 1, 1, "c.nrf_i2s_swidth_t.NRF_I2S_SWIDTH_8BIT", "NRF_I2S_SWIDTH_8BIT"], [61, 1, 1, "c.nrf_i2s_swidth_t.NRF_I2S_SWIDTH_8BIT_IN16BIT", "NRF_I2S_SWIDTH_8BIT_IN16BIT"], [61, 1, 1, "c.nrf_i2s_swidth_t.NRF_I2S_SWIDTH_8BIT_IN32BIT", "NRF_I2S_SWIDTH_8BIT_IN32BIT"]], "nrf_i2s_task_address_get": [[61, 3, 1, "c.nrf_i2s_task_address_get", "p_reg"], [61, 3, 1, "c.nrf_i2s_task_address_get", "task"]], "nrf_i2s_task_t": [[61, 1, 1, "c.nrf_i2s_task_t.NRF_I2S_TASK_START", "NRF_I2S_TASK_START"], [61, 1, 1, "c.nrf_i2s_task_t.NRF_I2S_TASK_STOP", "NRF_I2S_TASK_STOP"]], "nrf_i2s_task_trigger": [[61, 3, 1, "c.nrf_i2s_task_trigger", "p_reg"], [61, 3, 1, "c.nrf_i2s_task_trigger", "task"]], "nrf_i2s_transfer_set": [[61, 3, 1, "c.nrf_i2s_transfer_set", "p_reg"], [61, 3, 1, "c.nrf_i2s_transfer_set", "p_rx_buffer"], [61, 3, 1, "c.nrf_i2s_transfer_set", "p_tx_buffer"], [61, 3, 1, "c.nrf_i2s_transfer_set", "size"]], "nrf_i2s_tx_buffer_get": [[61, 3, 1, "c.nrf_i2s_tx_buffer_get", "p_reg"]], "nrf_i2s_tx_buffer_set": [[61, 3, 1, "c.nrf_i2s_tx_buffer_set", "p_buffer"], [61, 3, 1, "c.nrf_i2s_tx_buffer_set", "p_reg"]], "nrf_ipc_channel_t": [[67, 1, 1, "c.nrf_ipc_channel_t.NRF_IPC_CHANNEL_0", "NRF_IPC_CHANNEL_0"], [67, 1, 1, "c.nrf_ipc_channel_t.NRF_IPC_CHANNEL_1", "NRF_IPC_CHANNEL_1"], [67, 1, 1, "c.nrf_ipc_channel_t.NRF_IPC_CHANNEL_10", "NRF_IPC_CHANNEL_10"], [67, 1, 1, "c.nrf_ipc_channel_t.NRF_IPC_CHANNEL_11", "NRF_IPC_CHANNEL_11"], [67, 1, 1, "c.nrf_ipc_channel_t.NRF_IPC_CHANNEL_12", "NRF_IPC_CHANNEL_12"], [67, 1, 1, "c.nrf_ipc_channel_t.NRF_IPC_CHANNEL_13", "NRF_IPC_CHANNEL_13"], [67, 1, 1, "c.nrf_ipc_channel_t.NRF_IPC_CHANNEL_14", "NRF_IPC_CHANNEL_14"], [67, 1, 1, "c.nrf_ipc_channel_t.NRF_IPC_CHANNEL_15", "NRF_IPC_CHANNEL_15"], [67, 1, 1, "c.nrf_ipc_channel_t.NRF_IPC_CHANNEL_2", "NRF_IPC_CHANNEL_2"], [67, 1, 1, "c.nrf_ipc_channel_t.NRF_IPC_CHANNEL_3", "NRF_IPC_CHANNEL_3"], [67, 1, 1, "c.nrf_ipc_channel_t.NRF_IPC_CHANNEL_4", "NRF_IPC_CHANNEL_4"], [67, 1, 1, "c.nrf_ipc_channel_t.NRF_IPC_CHANNEL_5", "NRF_IPC_CHANNEL_5"], [67, 1, 1, "c.nrf_ipc_channel_t.NRF_IPC_CHANNEL_6", "NRF_IPC_CHANNEL_6"], [67, 1, 1, "c.nrf_ipc_channel_t.NRF_IPC_CHANNEL_7", "NRF_IPC_CHANNEL_7"], [67, 1, 1, "c.nrf_ipc_channel_t.NRF_IPC_CHANNEL_8", "NRF_IPC_CHANNEL_8"], [67, 1, 1, "c.nrf_ipc_channel_t.NRF_IPC_CHANNEL_9", "NRF_IPC_CHANNEL_9"]], "nrf_ipc_event_address_get": [[67, 3, 1, "c.nrf_ipc_event_address_get", "event"], [67, 3, 1, "c.nrf_ipc_event_address_get", "p_reg"]], "nrf_ipc_event_check": [[67, 3, 1, "c.nrf_ipc_event_check", "event"], [67, 3, 1, "c.nrf_ipc_event_check", "p_reg"]], "nrf_ipc_event_clear": [[67, 3, 1, "c.nrf_ipc_event_clear", "event"], [67, 3, 1, "c.nrf_ipc_event_clear", "p_reg"]], "nrf_ipc_event_t": [[67, 1, 1, "c.nrf_ipc_event_t.NRF_IPC_EVENT_RECEIVE_0", "NRF_IPC_EVENT_RECEIVE_0"], [67, 1, 1, "c.nrf_ipc_event_t.NRF_IPC_EVENT_RECEIVE_1", "NRF_IPC_EVENT_RECEIVE_1"], [67, 1, 1, "c.nrf_ipc_event_t.NRF_IPC_EVENT_RECEIVE_10", "NRF_IPC_EVENT_RECEIVE_10"], [67, 1, 1, "c.nrf_ipc_event_t.NRF_IPC_EVENT_RECEIVE_11", "NRF_IPC_EVENT_RECEIVE_11"], [67, 1, 1, "c.nrf_ipc_event_t.NRF_IPC_EVENT_RECEIVE_12", "NRF_IPC_EVENT_RECEIVE_12"], [67, 1, 1, "c.nrf_ipc_event_t.NRF_IPC_EVENT_RECEIVE_13", "NRF_IPC_EVENT_RECEIVE_13"], [67, 1, 1, "c.nrf_ipc_event_t.NRF_IPC_EVENT_RECEIVE_14", "NRF_IPC_EVENT_RECEIVE_14"], [67, 1, 1, "c.nrf_ipc_event_t.NRF_IPC_EVENT_RECEIVE_15", "NRF_IPC_EVENT_RECEIVE_15"], [67, 1, 1, "c.nrf_ipc_event_t.NRF_IPC_EVENT_RECEIVE_2", "NRF_IPC_EVENT_RECEIVE_2"], [67, 1, 1, "c.nrf_ipc_event_t.NRF_IPC_EVENT_RECEIVE_3", "NRF_IPC_EVENT_RECEIVE_3"], [67, 1, 1, "c.nrf_ipc_event_t.NRF_IPC_EVENT_RECEIVE_4", "NRF_IPC_EVENT_RECEIVE_4"], [67, 1, 1, "c.nrf_ipc_event_t.NRF_IPC_EVENT_RECEIVE_5", "NRF_IPC_EVENT_RECEIVE_5"], [67, 1, 1, "c.nrf_ipc_event_t.NRF_IPC_EVENT_RECEIVE_6", "NRF_IPC_EVENT_RECEIVE_6"], [67, 1, 1, "c.nrf_ipc_event_t.NRF_IPC_EVENT_RECEIVE_7", "NRF_IPC_EVENT_RECEIVE_7"], [67, 1, 1, "c.nrf_ipc_event_t.NRF_IPC_EVENT_RECEIVE_8", "NRF_IPC_EVENT_RECEIVE_8"], [67, 1, 1, "c.nrf_ipc_event_t.NRF_IPC_EVENT_RECEIVE_9", "NRF_IPC_EVENT_RECEIVE_9"]], "nrf_ipc_gpmem_get": [[67, 3, 1, "c.nrf_ipc_gpmem_get", "index"], [67, 3, 1, "c.nrf_ipc_gpmem_get", "p_reg"]], "nrf_ipc_gpmem_set": [[67, 3, 1, "c.nrf_ipc_gpmem_set", "data"], [67, 3, 1, "c.nrf_ipc_gpmem_set", "index"], [67, 3, 1, "c.nrf_ipc_gpmem_set", "p_reg"]], "nrf_ipc_int_disable": [[67, 3, 1, "c.nrf_ipc_int_disable", "mask"], [67, 3, 1, "c.nrf_ipc_int_disable", "p_reg"]], "nrf_ipc_int_enable": [[67, 3, 1, "c.nrf_ipc_int_enable", "mask"], [67, 3, 1, "c.nrf_ipc_int_enable", "p_reg"]], "nrf_ipc_int_enable_check": [[67, 3, 1, "c.nrf_ipc_int_enable_check", "mask"], [67, 3, 1, "c.nrf_ipc_int_enable_check", "p_reg"]], "nrf_ipc_int_mask_t": [[67, 1, 1, "c.nrf_ipc_int_mask_t.NRF_IPC_INT_RECEIVE_0", "NRF_IPC_INT_RECEIVE_0"], [67, 1, 1, "c.nrf_ipc_int_mask_t.NRF_IPC_INT_RECEIVE_1", "NRF_IPC_INT_RECEIVE_1"], [67, 1, 1, "c.nrf_ipc_int_mask_t.NRF_IPC_INT_RECEIVE_10", "NRF_IPC_INT_RECEIVE_10"], [67, 1, 1, "c.nrf_ipc_int_mask_t.NRF_IPC_INT_RECEIVE_11", "NRF_IPC_INT_RECEIVE_11"], [67, 1, 1, "c.nrf_ipc_int_mask_t.NRF_IPC_INT_RECEIVE_12", "NRF_IPC_INT_RECEIVE_12"], [67, 1, 1, "c.nrf_ipc_int_mask_t.NRF_IPC_INT_RECEIVE_13", "NRF_IPC_INT_RECEIVE_13"], [67, 1, 1, "c.nrf_ipc_int_mask_t.NRF_IPC_INT_RECEIVE_14", "NRF_IPC_INT_RECEIVE_14"], [67, 1, 1, "c.nrf_ipc_int_mask_t.NRF_IPC_INT_RECEIVE_15", "NRF_IPC_INT_RECEIVE_15"], [67, 1, 1, "c.nrf_ipc_int_mask_t.NRF_IPC_INT_RECEIVE_2", "NRF_IPC_INT_RECEIVE_2"], [67, 1, 1, "c.nrf_ipc_int_mask_t.NRF_IPC_INT_RECEIVE_3", "NRF_IPC_INT_RECEIVE_3"], [67, 1, 1, "c.nrf_ipc_int_mask_t.NRF_IPC_INT_RECEIVE_4", "NRF_IPC_INT_RECEIVE_4"], [67, 1, 1, "c.nrf_ipc_int_mask_t.NRF_IPC_INT_RECEIVE_5", "NRF_IPC_INT_RECEIVE_5"], [67, 1, 1, "c.nrf_ipc_int_mask_t.NRF_IPC_INT_RECEIVE_6", "NRF_IPC_INT_RECEIVE_6"], [67, 1, 1, "c.nrf_ipc_int_mask_t.NRF_IPC_INT_RECEIVE_7", "NRF_IPC_INT_RECEIVE_7"], [67, 1, 1, "c.nrf_ipc_int_mask_t.NRF_IPC_INT_RECEIVE_8", "NRF_IPC_INT_RECEIVE_8"], [67, 1, 1, "c.nrf_ipc_int_mask_t.NRF_IPC_INT_RECEIVE_9", "NRF_IPC_INT_RECEIVE_9"]], "nrf_ipc_int_pending_get": [[67, 3, 1, "c.nrf_ipc_int_pending_get", "p_reg"]], "nrf_ipc_publish_clear": [[67, 3, 1, "c.nrf_ipc_publish_clear", "event"], [67, 3, 1, "c.nrf_ipc_publish_clear", "p_reg"]], "nrf_ipc_publish_set": [[67, 3, 1, "c.nrf_ipc_publish_set", "channel"], [67, 3, 1, "c.nrf_ipc_publish_set", "event"], [67, 3, 1, "c.nrf_ipc_publish_set", "p_reg"]], "nrf_ipc_receive_config_get": [[67, 3, 1, "c.nrf_ipc_receive_config_get", "index"], [67, 3, 1, "c.nrf_ipc_receive_config_get", "p_reg"]], "nrf_ipc_receive_config_set": [[67, 3, 1, "c.nrf_ipc_receive_config_set", "channels_mask"], [67, 3, 1, "c.nrf_ipc_receive_config_set", "index"], [67, 3, 1, "c.nrf_ipc_receive_config_set", "p_reg"]], "nrf_ipc_receive_event_get": [[67, 3, 1, "c.nrf_ipc_receive_event_get", "index"]], "nrf_ipc_send_config_get": [[67, 3, 1, "c.nrf_ipc_send_config_get", "index"], [67, 3, 1, "c.nrf_ipc_send_config_get", "p_reg"]], "nrf_ipc_send_config_set": [[67, 3, 1, "c.nrf_ipc_send_config_set", "channels_mask"], [67, 3, 1, "c.nrf_ipc_send_config_set", "index"], [67, 3, 1, "c.nrf_ipc_send_config_set", "p_reg"]], "nrf_ipc_send_task_get": [[67, 3, 1, "c.nrf_ipc_send_task_get", "index"]], "nrf_ipc_subscribe_clear": [[67, 3, 1, "c.nrf_ipc_subscribe_clear", "p_reg"], [67, 3, 1, "c.nrf_ipc_subscribe_clear", "task"]], "nrf_ipc_subscribe_set": [[67, 3, 1, "c.nrf_ipc_subscribe_set", "channel"], [67, 3, 1, "c.nrf_ipc_subscribe_set", "p_reg"], [67, 3, 1, "c.nrf_ipc_subscribe_set", "task"]], "nrf_ipc_task_address_get": [[67, 3, 1, "c.nrf_ipc_task_address_get", "p_reg"], [67, 3, 1, "c.nrf_ipc_task_address_get", "task"]], "nrf_ipc_task_t": [[67, 1, 1, "c.nrf_ipc_task_t.NRF_IPC_TASK_SEND_0", "NRF_IPC_TASK_SEND_0"], [67, 1, 1, "c.nrf_ipc_task_t.NRF_IPC_TASK_SEND_1", "NRF_IPC_TASK_SEND_1"], [67, 1, 1, "c.nrf_ipc_task_t.NRF_IPC_TASK_SEND_10", "NRF_IPC_TASK_SEND_10"], [67, 1, 1, "c.nrf_ipc_task_t.NRF_IPC_TASK_SEND_11", "NRF_IPC_TASK_SEND_11"], [67, 1, 1, "c.nrf_ipc_task_t.NRF_IPC_TASK_SEND_12", "NRF_IPC_TASK_SEND_12"], [67, 1, 1, "c.nrf_ipc_task_t.NRF_IPC_TASK_SEND_13", "NRF_IPC_TASK_SEND_13"], [67, 1, 1, "c.nrf_ipc_task_t.NRF_IPC_TASK_SEND_14", "NRF_IPC_TASK_SEND_14"], [67, 1, 1, "c.nrf_ipc_task_t.NRF_IPC_TASK_SEND_15", "NRF_IPC_TASK_SEND_15"], [67, 1, 1, "c.nrf_ipc_task_t.NRF_IPC_TASK_SEND_2", "NRF_IPC_TASK_SEND_2"], [67, 1, 1, "c.nrf_ipc_task_t.NRF_IPC_TASK_SEND_3", "NRF_IPC_TASK_SEND_3"], [67, 1, 1, "c.nrf_ipc_task_t.NRF_IPC_TASK_SEND_4", "NRF_IPC_TASK_SEND_4"], [67, 1, 1, "c.nrf_ipc_task_t.NRF_IPC_TASK_SEND_5", "NRF_IPC_TASK_SEND_5"], [67, 1, 1, "c.nrf_ipc_task_t.NRF_IPC_TASK_SEND_6", "NRF_IPC_TASK_SEND_6"], [67, 1, 1, "c.nrf_ipc_task_t.NRF_IPC_TASK_SEND_7", "NRF_IPC_TASK_SEND_7"], [67, 1, 1, "c.nrf_ipc_task_t.NRF_IPC_TASK_SEND_8", "NRF_IPC_TASK_SEND_8"], [67, 1, 1, "c.nrf_ipc_task_t.NRF_IPC_TASK_SEND_9", "NRF_IPC_TASK_SEND_9"]], "nrf_ipc_task_trigger": [[67, 3, 1, "c.nrf_ipc_task_trigger", "p_reg"], [67, 3, 1, "c.nrf_ipc_task_trigger", "task"]], "nrf_ipct_ack_task_get": [[69, 3, 1, "c.nrf_ipct_ack_task_get", "index"]], "nrf_ipct_acked_event_get": [[69, 3, 1, "c.nrf_ipct_acked_event_get", "index"]], "nrf_ipct_event_address_get": [[69, 3, 1, "c.nrf_ipct_event_address_get", "event"], [69, 3, 1, "c.nrf_ipct_event_address_get", "p_reg"]], "nrf_ipct_event_check": [[69, 3, 1, "c.nrf_ipct_event_check", "event"], [69, 3, 1, "c.nrf_ipct_event_check", "p_reg"]], "nrf_ipct_event_clear": [[69, 3, 1, "c.nrf_ipct_event_clear", "event"], [69, 3, 1, "c.nrf_ipct_event_clear", "p_reg"]], "nrf_ipct_event_t": [[69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_ACKED_0", "NRF_IPCT_EVENT_ACKED_0"], [69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_ACKED_1", "NRF_IPCT_EVENT_ACKED_1"], [69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_ACKED_10", "NRF_IPCT_EVENT_ACKED_10"], [69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_ACKED_11", "NRF_IPCT_EVENT_ACKED_11"], [69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_ACKED_12", "NRF_IPCT_EVENT_ACKED_12"], [69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_ACKED_13", "NRF_IPCT_EVENT_ACKED_13"], [69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_ACKED_14", "NRF_IPCT_EVENT_ACKED_14"], [69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_ACKED_15", "NRF_IPCT_EVENT_ACKED_15"], [69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_ACKED_2", "NRF_IPCT_EVENT_ACKED_2"], [69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_ACKED_3", "NRF_IPCT_EVENT_ACKED_3"], [69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_ACKED_4", "NRF_IPCT_EVENT_ACKED_4"], [69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_ACKED_5", "NRF_IPCT_EVENT_ACKED_5"], [69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_ACKED_6", "NRF_IPCT_EVENT_ACKED_6"], [69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_ACKED_7", "NRF_IPCT_EVENT_ACKED_7"], [69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_ACKED_8", "NRF_IPCT_EVENT_ACKED_8"], [69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_ACKED_9", "NRF_IPCT_EVENT_ACKED_9"], [69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_RECEIVE_0", "NRF_IPCT_EVENT_RECEIVE_0"], [69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_RECEIVE_1", "NRF_IPCT_EVENT_RECEIVE_1"], [69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_RECEIVE_10", "NRF_IPCT_EVENT_RECEIVE_10"], [69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_RECEIVE_11", "NRF_IPCT_EVENT_RECEIVE_11"], [69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_RECEIVE_12", "NRF_IPCT_EVENT_RECEIVE_12"], [69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_RECEIVE_13", "NRF_IPCT_EVENT_RECEIVE_13"], [69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_RECEIVE_14", "NRF_IPCT_EVENT_RECEIVE_14"], [69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_RECEIVE_15", "NRF_IPCT_EVENT_RECEIVE_15"], [69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_RECEIVE_2", "NRF_IPCT_EVENT_RECEIVE_2"], [69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_RECEIVE_3", "NRF_IPCT_EVENT_RECEIVE_3"], [69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_RECEIVE_4", "NRF_IPCT_EVENT_RECEIVE_4"], [69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_RECEIVE_5", "NRF_IPCT_EVENT_RECEIVE_5"], [69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_RECEIVE_6", "NRF_IPCT_EVENT_RECEIVE_6"], [69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_RECEIVE_7", "NRF_IPCT_EVENT_RECEIVE_7"], [69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_RECEIVE_8", "NRF_IPCT_EVENT_RECEIVE_8"], [69, 1, 1, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_RECEIVE_9", "NRF_IPCT_EVENT_RECEIVE_9"]], "nrf_ipct_int_disable": [[69, 3, 1, "c.nrf_ipct_int_disable", "group_idx"], [69, 3, 1, "c.nrf_ipct_int_disable", "mask"], [69, 3, 1, "c.nrf_ipct_int_disable", "p_reg"]], "nrf_ipct_int_enable": [[69, 3, 1, "c.nrf_ipct_int_enable", "group_idx"], [69, 3, 1, "c.nrf_ipct_int_enable", "mask"], [69, 3, 1, "c.nrf_ipct_int_enable", "p_reg"]], "nrf_ipct_int_enable_check": [[69, 3, 1, "c.nrf_ipct_int_enable_check", "group_idx"], [69, 3, 1, "c.nrf_ipct_int_enable_check", "mask"], [69, 3, 1, "c.nrf_ipct_int_enable_check", "p_reg"]], "nrf_ipct_int_mask_t": [[69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_ACKED_0", "NRF_IPCT_INT_ACKED_0"], [69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_ACKED_1", "NRF_IPCT_INT_ACKED_1"], [69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_ACKED_10", "NRF_IPCT_INT_ACKED_10"], [69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_ACKED_11", "NRF_IPCT_INT_ACKED_11"], [69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_ACKED_12", "NRF_IPCT_INT_ACKED_12"], [69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_ACKED_13", "NRF_IPCT_INT_ACKED_13"], [69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_ACKED_14", "NRF_IPCT_INT_ACKED_14"], [69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_ACKED_15", "NRF_IPCT_INT_ACKED_15"], [69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_ACKED_2", "NRF_IPCT_INT_ACKED_2"], [69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_ACKED_3", "NRF_IPCT_INT_ACKED_3"], [69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_ACKED_4", "NRF_IPCT_INT_ACKED_4"], [69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_ACKED_5", "NRF_IPCT_INT_ACKED_5"], [69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_ACKED_6", "NRF_IPCT_INT_ACKED_6"], [69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_ACKED_7", "NRF_IPCT_INT_ACKED_7"], [69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_ACKED_8", "NRF_IPCT_INT_ACKED_8"], [69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_ACKED_9", "NRF_IPCT_INT_ACKED_9"], [69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_RECEIVE_0", "NRF_IPCT_INT_RECEIVE_0"], [69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_RECEIVE_1", "NRF_IPCT_INT_RECEIVE_1"], [69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_RECEIVE_10", "NRF_IPCT_INT_RECEIVE_10"], [69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_RECEIVE_11", "NRF_IPCT_INT_RECEIVE_11"], [69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_RECEIVE_12", "NRF_IPCT_INT_RECEIVE_12"], [69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_RECEIVE_13", "NRF_IPCT_INT_RECEIVE_13"], [69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_RECEIVE_14", "NRF_IPCT_INT_RECEIVE_14"], [69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_RECEIVE_15", "NRF_IPCT_INT_RECEIVE_15"], [69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_RECEIVE_2", "NRF_IPCT_INT_RECEIVE_2"], [69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_RECEIVE_3", "NRF_IPCT_INT_RECEIVE_3"], [69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_RECEIVE_4", "NRF_IPCT_INT_RECEIVE_4"], [69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_RECEIVE_5", "NRF_IPCT_INT_RECEIVE_5"], [69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_RECEIVE_6", "NRF_IPCT_INT_RECEIVE_6"], [69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_RECEIVE_7", "NRF_IPCT_INT_RECEIVE_7"], [69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_RECEIVE_8", "NRF_IPCT_INT_RECEIVE_8"], [69, 1, 1, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_RECEIVE_9", "NRF_IPCT_INT_RECEIVE_9"]], "nrf_ipct_int_pending_get": [[69, 3, 1, "c.nrf_ipct_int_pending_get", "group_idx"], [69, 3, 1, "c.nrf_ipct_int_pending_get", "p_reg"]], "nrf_ipct_overflow_send_get": [[69, 3, 1, "c.nrf_ipct_overflow_send_get", "index"], [69, 3, 1, "c.nrf_ipct_overflow_send_get", "p_reg"]], "nrf_ipct_publish_clear": [[69, 3, 1, "c.nrf_ipct_publish_clear", "event"], [69, 3, 1, "c.nrf_ipct_publish_clear", "p_reg"]], "nrf_ipct_publish_set": [[69, 3, 1, "c.nrf_ipct_publish_set", "channel"], [69, 3, 1, "c.nrf_ipct_publish_set", "event"], [69, 3, 1, "c.nrf_ipct_publish_set", "p_reg"]], "nrf_ipct_receive_event_get": [[69, 3, 1, "c.nrf_ipct_receive_event_get", "index"]], "nrf_ipct_send_task_get": [[69, 3, 1, "c.nrf_ipct_send_task_get", "index"]], "nrf_ipct_short_mask_t": [[69, 1, 1, "c.nrf_ipct_short_mask_t.NRF_IPCT_ALL_SHORTS_MASK", "NRF_IPCT_ALL_SHORTS_MASK"], [69, 1, 1, "c.nrf_ipct_short_mask_t.NRF_IPCT_SHORT_RECEIVE0_ACK0_MASK", "NRF_IPCT_SHORT_RECEIVE0_ACK0_MASK"], [69, 1, 1, "c.nrf_ipct_short_mask_t.NRF_IPCT_SHORT_RECEIVE10_ACK10_MASK", "NRF_IPCT_SHORT_RECEIVE10_ACK10_MASK"], [69, 1, 1, "c.nrf_ipct_short_mask_t.NRF_IPCT_SHORT_RECEIVE11_ACK11_MASK", "NRF_IPCT_SHORT_RECEIVE11_ACK11_MASK"], [69, 1, 1, "c.nrf_ipct_short_mask_t.NRF_IPCT_SHORT_RECEIVE12_ACK12_MASK", "NRF_IPCT_SHORT_RECEIVE12_ACK12_MASK"], [69, 1, 1, "c.nrf_ipct_short_mask_t.NRF_IPCT_SHORT_RECEIVE13_ACK13_MASK", "NRF_IPCT_SHORT_RECEIVE13_ACK13_MASK"], [69, 1, 1, "c.nrf_ipct_short_mask_t.NRF_IPCT_SHORT_RECEIVE14_ACK14_MASK", "NRF_IPCT_SHORT_RECEIVE14_ACK14_MASK"], [69, 1, 1, "c.nrf_ipct_short_mask_t.NRF_IPCT_SHORT_RECEIVE15_ACK15_MASK", "NRF_IPCT_SHORT_RECEIVE15_ACK15_MASK"], [69, 1, 1, "c.nrf_ipct_short_mask_t.NRF_IPCT_SHORT_RECEIVE1_ACK1_MASK", "NRF_IPCT_SHORT_RECEIVE1_ACK1_MASK"], [69, 1, 1, "c.nrf_ipct_short_mask_t.NRF_IPCT_SHORT_RECEIVE2_ACK2_MASK", "NRF_IPCT_SHORT_RECEIVE2_ACK2_MASK"], [69, 1, 1, "c.nrf_ipct_short_mask_t.NRF_IPCT_SHORT_RECEIVE3_ACK3_MASK", "NRF_IPCT_SHORT_RECEIVE3_ACK3_MASK"], [69, 1, 1, "c.nrf_ipct_short_mask_t.NRF_IPCT_SHORT_RECEIVE4_ACK4_MASK", "NRF_IPCT_SHORT_RECEIVE4_ACK4_MASK"], [69, 1, 1, "c.nrf_ipct_short_mask_t.NRF_IPCT_SHORT_RECEIVE5_ACK5_MASK", "NRF_IPCT_SHORT_RECEIVE5_ACK5_MASK"], [69, 1, 1, "c.nrf_ipct_short_mask_t.NRF_IPCT_SHORT_RECEIVE6_ACK6_MASK", "NRF_IPCT_SHORT_RECEIVE6_ACK6_MASK"], [69, 1, 1, "c.nrf_ipct_short_mask_t.NRF_IPCT_SHORT_RECEIVE7_ACK7_MASK", "NRF_IPCT_SHORT_RECEIVE7_ACK7_MASK"], [69, 1, 1, "c.nrf_ipct_short_mask_t.NRF_IPCT_SHORT_RECEIVE8_ACK8_MASK", "NRF_IPCT_SHORT_RECEIVE8_ACK8_MASK"], [69, 1, 1, "c.nrf_ipct_short_mask_t.NRF_IPCT_SHORT_RECEIVE9_ACK9_MASK", "NRF_IPCT_SHORT_RECEIVE9_ACK9_MASK"]], "nrf_ipct_shorts_disable": [[69, 3, 1, "c.nrf_ipct_shorts_disable", "mask"], [69, 3, 1, "c.nrf_ipct_shorts_disable", "p_reg"]], "nrf_ipct_shorts_enable": [[69, 3, 1, "c.nrf_ipct_shorts_enable", "mask"], [69, 3, 1, "c.nrf_ipct_shorts_enable", "p_reg"]], "nrf_ipct_shorts_set": [[69, 3, 1, "c.nrf_ipct_shorts_set", "mask"], [69, 3, 1, "c.nrf_ipct_shorts_set", "p_reg"]], "nrf_ipct_subscribe_clear": [[69, 3, 1, "c.nrf_ipct_subscribe_clear", "p_reg"], [69, 3, 1, "c.nrf_ipct_subscribe_clear", "task"]], "nrf_ipct_subscribe_set": [[69, 3, 1, "c.nrf_ipct_subscribe_set", "channel"], [69, 3, 1, "c.nrf_ipct_subscribe_set", "p_reg"], [69, 3, 1, "c.nrf_ipct_subscribe_set", "task"]], "nrf_ipct_task_address_get": [[69, 3, 1, "c.nrf_ipct_task_address_get", "p_reg"], [69, 3, 1, "c.nrf_ipct_task_address_get", "task"]], "nrf_ipct_task_t": [[69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_ACK_0", "NRF_IPCT_TASK_ACK_0"], [69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_ACK_1", "NRF_IPCT_TASK_ACK_1"], [69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_ACK_10", "NRF_IPCT_TASK_ACK_10"], [69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_ACK_11", "NRF_IPCT_TASK_ACK_11"], [69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_ACK_12", "NRF_IPCT_TASK_ACK_12"], [69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_ACK_13", "NRF_IPCT_TASK_ACK_13"], [69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_ACK_14", "NRF_IPCT_TASK_ACK_14"], [69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_ACK_15", "NRF_IPCT_TASK_ACK_15"], [69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_ACK_2", "NRF_IPCT_TASK_ACK_2"], [69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_ACK_3", "NRF_IPCT_TASK_ACK_3"], [69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_ACK_4", "NRF_IPCT_TASK_ACK_4"], [69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_ACK_5", "NRF_IPCT_TASK_ACK_5"], [69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_ACK_6", "NRF_IPCT_TASK_ACK_6"], [69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_ACK_7", "NRF_IPCT_TASK_ACK_7"], [69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_ACK_8", "NRF_IPCT_TASK_ACK_8"], [69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_ACK_9", "NRF_IPCT_TASK_ACK_9"], [69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_SEND_0", "NRF_IPCT_TASK_SEND_0"], [69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_SEND_1", "NRF_IPCT_TASK_SEND_1"], [69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_SEND_10", "NRF_IPCT_TASK_SEND_10"], [69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_SEND_11", "NRF_IPCT_TASK_SEND_11"], [69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_SEND_12", "NRF_IPCT_TASK_SEND_12"], [69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_SEND_13", "NRF_IPCT_TASK_SEND_13"], [69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_SEND_14", "NRF_IPCT_TASK_SEND_14"], [69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_SEND_15", "NRF_IPCT_TASK_SEND_15"], [69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_SEND_2", "NRF_IPCT_TASK_SEND_2"], [69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_SEND_3", "NRF_IPCT_TASK_SEND_3"], [69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_SEND_4", "NRF_IPCT_TASK_SEND_4"], [69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_SEND_5", "NRF_IPCT_TASK_SEND_5"], [69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_SEND_6", "NRF_IPCT_TASK_SEND_6"], [69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_SEND_7", "NRF_IPCT_TASK_SEND_7"], [69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_SEND_8", "NRF_IPCT_TASK_SEND_8"], [69, 1, 1, "c.nrf_ipct_task_t.NRF_IPCT_TASK_SEND_9", "NRF_IPCT_TASK_SEND_9"]], "nrf_ipct_task_trigger": [[69, 3, 1, "c.nrf_ipct_task_trigger", "p_reg"], [69, 3, 1, "c.nrf_ipct_task_trigger", "task"]], "nrf_isource_t": [[24, 1, 1, "c.nrf_isource_t.NRF_COMP_ISOURCE_IEN_10UA", "NRF_COMP_ISOURCE_IEN_10UA"], [24, 1, 1, "c.nrf_isource_t.NRF_COMP_ISOURCE_IEN_2UA5", "NRF_COMP_ISOURCE_IEN_2UA5"], [24, 1, 1, "c.nrf_isource_t.NRF_COMP_ISOURCE_IEN_5UA", "NRF_COMP_ISOURCE_IEN_5UA"], [24, 1, 1, "c.nrf_isource_t.NRF_COMP_ISOURCE_OFF", "NRF_COMP_ISOURCE_OFF"]], "nrf_kmu_event_address_get": [[71, 3, 1, "c.nrf_kmu_event_address_get", "event"], [71, 3, 1, "c.nrf_kmu_event_address_get", "p_reg"]], "nrf_kmu_event_check": [[71, 3, 1, "c.nrf_kmu_event_check", "event"], [71, 3, 1, "c.nrf_kmu_event_check", "p_reg"]], "nrf_kmu_event_clear": [[71, 3, 1, "c.nrf_kmu_event_clear", "event"], [71, 3, 1, "c.nrf_kmu_event_clear", "p_reg"]], "nrf_kmu_event_t": [[71, 1, 1, "c.nrf_kmu_event_t.NRF_KMU_EVENT_EVENTS_EVENTS_METADATA_READ", "NRF_KMU_EVENT_EVENTS_EVENTS_METADATA_READ"], [71, 1, 1, "c.nrf_kmu_event_t.NRF_KMU_EVENT_EVENTS_EVENTS_PUSHBLOCKED", "NRF_KMU_EVENT_EVENTS_EVENTS_PUSHBLOCKED"], [71, 1, 1, "c.nrf_kmu_event_t.NRF_KMU_EVENT_EVENTS_PROVISIONED", "NRF_KMU_EVENT_EVENTS_PROVISIONED"], [71, 1, 1, "c.nrf_kmu_event_t.NRF_KMU_EVENT_KEYSLOT_ERROR", "NRF_KMU_EVENT_KEYSLOT_ERROR"], [71, 1, 1, "c.nrf_kmu_event_t.NRF_KMU_EVENT_KEYSLOT_PUSHED", "NRF_KMU_EVENT_KEYSLOT_PUSHED"], [71, 1, 1, "c.nrf_kmu_event_t.NRF_KMU_EVENT_KEYSLOT_REVOKED", "NRF_KMU_EVENT_KEYSLOT_REVOKED"]], "nrf_kmu_int_disable": [[71, 3, 1, "c.nrf_kmu_int_disable", "mask"], [71, 3, 1, "c.nrf_kmu_int_disable", "p_reg"]], "nrf_kmu_int_enable": [[71, 3, 1, "c.nrf_kmu_int_enable", "mask"], [71, 3, 1, "c.nrf_kmu_int_enable", "p_reg"]], "nrf_kmu_int_enable_check": [[71, 3, 1, "c.nrf_kmu_int_enable_check", "mask"], [71, 3, 1, "c.nrf_kmu_int_enable_check", "p_reg"]], "nrf_kmu_int_mask_t": [[71, 1, 1, "c.nrf_kmu_int_mask_t.NRF_KMU_INT_ERROR_MASK", "NRF_KMU_INT_ERROR_MASK"], [71, 1, 1, "c.nrf_kmu_int_mask_t.NRF_KMU_INT_PUSHED_MASK", "NRF_KMU_INT_PUSHED_MASK"], [71, 1, 1, "c.nrf_kmu_int_mask_t.NRF_KMU_INT_REVOKED_MASK", "NRF_KMU_INT_REVOKED_MASK"]], "nrf_kmu_intpend_get": [[71, 3, 1, "c.nrf_kmu_intpend_get", "p_reg"]], "nrf_kmu_keyslot_get": [[71, 3, 1, "c.nrf_kmu_keyslot_get", "p_reg"]], "nrf_kmu_keyslot_set": [[71, 3, 1, "c.nrf_kmu_keyslot_set", "keyslot_id"], [71, 3, 1, "c.nrf_kmu_keyslot_set", "p_reg"]], "nrf_kmu_metadata_get": [[71, 3, 1, "c.nrf_kmu_metadata_get", "p_reg"]], "nrf_kmu_metadata_set": [[71, 3, 1, "c.nrf_kmu_metadata_set", "metdata"], [71, 3, 1, "c.nrf_kmu_metadata_set", "p_reg"]], "nrf_kmu_src_get": [[71, 3, 1, "c.nrf_kmu_src_get", "p_reg"]], "nrf_kmu_src_set": [[71, 3, 1, "c.nrf_kmu_src_set", "p_reg"], [71, 3, 1, "c.nrf_kmu_src_set", "src"]], "nrf_kmu_status_get": [[71, 3, 1, "c.nrf_kmu_status_get", "p_reg"]], "nrf_kmu_status_t": [[71, 1, 1, "c.nrf_kmu_status_t.NRF_KMU_STATUS_BLOCKED_MASK", "NRF_KMU_STATUS_BLOCKED_MASK"], [71, 1, 1, "c.nrf_kmu_status_t.NRF_KMU_STATUS_BUSY", "NRF_KMU_STATUS_BUSY"], [71, 1, 1, "c.nrf_kmu_status_t.NRF_KMU_STATUS_READY", "NRF_KMU_STATUS_READY"], [71, 1, 1, "c.nrf_kmu_status_t.NRF_KMU_STATUS_SELECTED_MASK", "NRF_KMU_STATUS_SELECTED_MASK"]], "nrf_kmu_task_address_get": [[71, 3, 1, "c.nrf_kmu_task_address_get", "p_reg"], [71, 3, 1, "c.nrf_kmu_task_address_get", "task"]], "nrf_kmu_task_t": [[71, 1, 1, "c.nrf_kmu_task_t.NRF_KMU_TASK_PROVISION_KEYSLOT", "NRF_KMU_TASK_PROVISION_KEYSLOT"], [71, 1, 1, "c.nrf_kmu_task_t.NRF_KMU_TASK_PUSH_BLOCK", "NRF_KMU_TASK_PUSH_BLOCK"], [71, 1, 1, "c.nrf_kmu_task_t.NRF_KMU_TASK_PUSH_KEYSLOT", "NRF_KMU_TASK_PUSH_KEYSLOT"], [71, 1, 1, "c.nrf_kmu_task_t.NRF_KMU_TASK_READ_METADATA", "NRF_KMU_TASK_READ_METADATA"], [71, 1, 1, "c.nrf_kmu_task_t.NRF_KMU_TASK_REVOKE_KEYSLOT", "NRF_KMU_TASK_REVOKE_KEYSLOT"]], "nrf_kmu_task_trigger": [[71, 3, 1, "c.nrf_kmu_task_trigger", "p_reg"], [71, 3, 1, "c.nrf_kmu_task_trigger", "task"]], "nrf_lpcomp_config_t": [[74, 6, 1, "c.nrf_lpcomp_config_t.detection", "detection"], [74, 6, 1, "c.nrf_lpcomp_config_t.hyst", "hyst"], [74, 6, 1, "c.nrf_lpcomp_config_t.reference", "reference"]], "nrf_lpcomp_configure": [[74, 3, 1, "c.nrf_lpcomp_configure", "p_config"], [74, 3, 1, "c.nrf_lpcomp_configure", "p_reg"]], "nrf_lpcomp_detect_t": [[74, 1, 1, "c.nrf_lpcomp_detect_t.NRF_LPCOMP_DETECT_CROSS", "NRF_LPCOMP_DETECT_CROSS"], [74, 1, 1, "c.nrf_lpcomp_detect_t.NRF_LPCOMP_DETECT_DOWN", "NRF_LPCOMP_DETECT_DOWN"], [74, 1, 1, "c.nrf_lpcomp_detect_t.NRF_LPCOMP_DETECT_UP", "NRF_LPCOMP_DETECT_UP"]], "nrf_lpcomp_detection_set": [[74, 3, 1, "c.nrf_lpcomp_detection_set", "detection"], [74, 3, 1, "c.nrf_lpcomp_detection_set", "p_reg"]], "nrf_lpcomp_disable": [[74, 3, 1, "c.nrf_lpcomp_disable", "p_reg"]], "nrf_lpcomp_enable": [[74, 3, 1, "c.nrf_lpcomp_enable", "p_reg"]], "nrf_lpcomp_enable_check": [[74, 3, 1, "c.nrf_lpcomp_enable_check", "p_reg"]], "nrf_lpcomp_event_address_get": [[74, 3, 1, "c.nrf_lpcomp_event_address_get", "event"], [74, 3, 1, "c.nrf_lpcomp_event_address_get", "p_reg"]], "nrf_lpcomp_event_check": [[74, 3, 1, "c.nrf_lpcomp_event_check", "event"], [74, 3, 1, "c.nrf_lpcomp_event_check", "p_reg"]], "nrf_lpcomp_event_clear": [[74, 3, 1, "c.nrf_lpcomp_event_clear", "event"], [74, 3, 1, "c.nrf_lpcomp_event_clear", "p_reg"]], "nrf_lpcomp_event_t": [[74, 1, 1, "c.nrf_lpcomp_event_t.NRF_LPCOMP_EVENT_CROSS", "NRF_LPCOMP_EVENT_CROSS"], [74, 1, 1, "c.nrf_lpcomp_event_t.NRF_LPCOMP_EVENT_DOWN", "NRF_LPCOMP_EVENT_DOWN"], [74, 1, 1, "c.nrf_lpcomp_event_t.NRF_LPCOMP_EVENT_READY", "NRF_LPCOMP_EVENT_READY"], [74, 1, 1, "c.nrf_lpcomp_event_t.NRF_LPCOMP_EVENT_UP", "NRF_LPCOMP_EVENT_UP"]], "nrf_lpcomp_ext_ref_set": [[74, 3, 1, "c.nrf_lpcomp_ext_ref_set", "ext_ref"], [74, 3, 1, "c.nrf_lpcomp_ext_ref_set", "p_reg"]], "nrf_lpcomp_hyst_t": [[74, 1, 1, "c.nrf_lpcomp_hyst_t.NRF_LPCOMP_HYST_ENABLED", "NRF_LPCOMP_HYST_ENABLED"], [74, 1, 1, "c.nrf_lpcomp_hyst_t.NRF_LPCOMP_HYST_NOHYST", "NRF_LPCOMP_HYST_NOHYST"]], "nrf_lpcomp_hysteresis_set": [[74, 3, 1, "c.nrf_lpcomp_hysteresis_set", "hyst"], [74, 3, 1, "c.nrf_lpcomp_hysteresis_set", "p_reg"]], "nrf_lpcomp_input_select": [[74, 3, 1, "c.nrf_lpcomp_input_select", "input"], [74, 3, 1, "c.nrf_lpcomp_input_select", "p_reg"]], "nrf_lpcomp_int_disable": [[74, 3, 1, "c.nrf_lpcomp_int_disable", "mask"], [74, 3, 1, "c.nrf_lpcomp_int_disable", "p_reg"]], "nrf_lpcomp_int_enable": [[74, 3, 1, "c.nrf_lpcomp_int_enable", "mask"], [74, 3, 1, "c.nrf_lpcomp_int_enable", "p_reg"]], "nrf_lpcomp_int_enable_check": [[74, 3, 1, "c.nrf_lpcomp_int_enable_check", "mask"], [74, 3, 1, "c.nrf_lpcomp_int_enable_check", "p_reg"]], "nrf_lpcomp_int_mask_t": [[74, 1, 1, "c.nrf_lpcomp_int_mask_t.NRF_LPCOMP_INT_CROSS_MASK", "NRF_LPCOMP_INT_CROSS_MASK"], [74, 1, 1, "c.nrf_lpcomp_int_mask_t.NRF_LPCOMP_INT_DOWN_MASK", "NRF_LPCOMP_INT_DOWN_MASK"], [74, 1, 1, "c.nrf_lpcomp_int_mask_t.NRF_LPCOMP_INT_READY_MASK", "NRF_LPCOMP_INT_READY_MASK"], [74, 1, 1, "c.nrf_lpcomp_int_mask_t.NRF_LPCOMP_INT_UP_MASK", "NRF_LPCOMP_INT_UP_MASK"]], "nrf_lpcomp_publish_clear": [[74, 3, 1, "c.nrf_lpcomp_publish_clear", "event"], [74, 3, 1, "c.nrf_lpcomp_publish_clear", "p_reg"]], "nrf_lpcomp_publish_set": [[74, 3, 1, "c.nrf_lpcomp_publish_set", "channel"], [74, 3, 1, "c.nrf_lpcomp_publish_set", "event"], [74, 3, 1, "c.nrf_lpcomp_publish_set", "p_reg"]], "nrf_lpcomp_ref_set": [[74, 3, 1, "c.nrf_lpcomp_ref_set", "p_reg"], [74, 3, 1, "c.nrf_lpcomp_ref_set", "reference"]], "nrf_lpcomp_ref_t": [[74, 1, 1, "c.nrf_lpcomp_ref_t.NRF_LPCOMP_REF_EXT_REF", "NRF_LPCOMP_REF_EXT_REF"], [74, 1, 1, "c.nrf_lpcomp_ref_t.NRF_LPCOMP_REF_SUPPLY_1_8", "NRF_LPCOMP_REF_SUPPLY_1_8"], [74, 1, 1, "c.nrf_lpcomp_ref_t.NRF_LPCOMP_REF_SUPPLY_2_8", "NRF_LPCOMP_REF_SUPPLY_2_8"], [74, 1, 1, "c.nrf_lpcomp_ref_t.NRF_LPCOMP_REF_SUPPLY_3_8", "NRF_LPCOMP_REF_SUPPLY_3_8"], [74, 1, 1, "c.nrf_lpcomp_ref_t.NRF_LPCOMP_REF_SUPPLY_4_8", "NRF_LPCOMP_REF_SUPPLY_4_8"], [74, 1, 1, "c.nrf_lpcomp_ref_t.NRF_LPCOMP_REF_SUPPLY_5_8", "NRF_LPCOMP_REF_SUPPLY_5_8"], [74, 1, 1, "c.nrf_lpcomp_ref_t.NRF_LPCOMP_REF_SUPPLY_6_8", "NRF_LPCOMP_REF_SUPPLY_6_8"], [74, 1, 1, "c.nrf_lpcomp_ref_t.NRF_LPCOMP_REF_SUPPLY_7_8", "NRF_LPCOMP_REF_SUPPLY_7_8"]], "nrf_lpcomp_result_get": [[74, 3, 1, "c.nrf_lpcomp_result_get", "p_reg"]], "nrf_lpcomp_short_mask_t": [[74, 1, 1, "c.nrf_lpcomp_short_mask_t.NRF_LPCOMP_SHORT_CROSS_STOP_MASK", "NRF_LPCOMP_SHORT_CROSS_STOP_MASK"], [74, 1, 1, "c.nrf_lpcomp_short_mask_t.NRF_LPCOMP_SHORT_DOWN_STOP_MASK", "NRF_LPCOMP_SHORT_DOWN_STOP_MASK"], [74, 1, 1, "c.nrf_lpcomp_short_mask_t.NRF_LPCOMP_SHORT_READY_SAMPLE_MASK", "NRF_LPCOMP_SHORT_READY_SAMPLE_MASK"], [74, 1, 1, "c.nrf_lpcomp_short_mask_t.NRF_LPCOMP_SHORT_READY_STOP_MASK", "NRF_LPCOMP_SHORT_READY_STOP_MASK"], [74, 1, 1, "c.nrf_lpcomp_short_mask_t.NRF_LPCOMP_SHORT_UP_STOP_MASK", "NRF_LPCOMP_SHORT_UP_STOP_MASK"]], "nrf_lpcomp_shorts_disable": [[74, 3, 1, "c.nrf_lpcomp_shorts_disable", "mask"], [74, 3, 1, "c.nrf_lpcomp_shorts_disable", "p_reg"]], "nrf_lpcomp_shorts_enable": [[74, 3, 1, "c.nrf_lpcomp_shorts_enable", "mask"], [74, 3, 1, "c.nrf_lpcomp_shorts_enable", "p_reg"]], "nrf_lpcomp_shorts_set": [[74, 3, 1, "c.nrf_lpcomp_shorts_set", "mask"], [74, 3, 1, "c.nrf_lpcomp_shorts_set", "p_reg"]], "nrf_lpcomp_subscribe_clear": [[74, 3, 1, "c.nrf_lpcomp_subscribe_clear", "p_reg"], [74, 3, 1, "c.nrf_lpcomp_subscribe_clear", "task"]], "nrf_lpcomp_subscribe_set": [[74, 3, 1, "c.nrf_lpcomp_subscribe_set", "channel"], [74, 3, 1, "c.nrf_lpcomp_subscribe_set", "p_reg"], [74, 3, 1, "c.nrf_lpcomp_subscribe_set", "task"]], "nrf_lpcomp_task_address_get": [[74, 3, 1, "c.nrf_lpcomp_task_address_get", "p_reg"], [74, 3, 1, "c.nrf_lpcomp_task_address_get", "task"]], "nrf_lpcomp_task_t": [[74, 1, 1, "c.nrf_lpcomp_task_t.NRF_LPCOMP_TASK_SAMPLE", "NRF_LPCOMP_TASK_SAMPLE"], [74, 1, 1, "c.nrf_lpcomp_task_t.NRF_LPCOMP_TASK_START", "NRF_LPCOMP_TASK_START"], [74, 1, 1, "c.nrf_lpcomp_task_t.NRF_LPCOMP_TASK_STOP", "NRF_LPCOMP_TASK_STOP"]], "nrf_lpcomp_task_trigger": [[74, 3, 1, "c.nrf_lpcomp_task_trigger", "p_reg"], [74, 3, 1, "c.nrf_lpcomp_task_trigger", "task"]], "nrf_lrcconf_axi_waitstates_get": [[77, 3, 1, "c.nrf_lrcconf_axi_waitstates_get", "domain"], [77, 3, 1, "c.nrf_lrcconf_axi_waitstates_get", "p_reg"]], "nrf_lrcconf_axi_waitstates_set": [[77, 3, 1, "c.nrf_lrcconf_axi_waitstates_set", "domain"], [77, 3, 1, "c.nrf_lrcconf_axi_waitstates_set", "p_reg"], [77, 3, 1, "c.nrf_lrcconf_axi_waitstates_set", "waitstates_num"]], "nrf_lrcconf_clk_src_t": [[77, 1, 1, "c.nrf_lrcconf_clk_src_t.NRF_LRCCONF_CLK_SRC_CLOSED_LOOP", "NRF_LRCCONF_CLK_SRC_CLOSED_LOOP"], [77, 1, 1, "c.nrf_lrcconf_clk_src_t.NRF_LRCCONF_CLK_SRC_OPEN_LOOP", "NRF_LRCCONF_CLK_SRC_OPEN_LOOP"]], "nrf_lrcconf_clkstart_task_get": [[77, 3, 1, "c.nrf_lrcconf_clkstart_task_get", "index"]], "nrf_lrcconf_clkstarted_event_get": [[77, 3, 1, "c.nrf_lrcconf_clkstarted_event_get", "index"]], "nrf_lrcconf_clkstop_task_get": [[77, 3, 1, "c.nrf_lrcconf_clkstop_task_get", "index"]], "nrf_lrcconf_clock_always_run_check": [[77, 3, 1, "c.nrf_lrcconf_clock_always_run_check", "clock"], [77, 3, 1, "c.nrf_lrcconf_clock_always_run_check", "p_reg"]], "nrf_lrcconf_clock_always_run_force_set": [[77, 3, 1, "c.nrf_lrcconf_clock_always_run_force_set", "alwaysrun"], [77, 3, 1, "c.nrf_lrcconf_clock_always_run_force_set", "clock"], [77, 3, 1, "c.nrf_lrcconf_clock_always_run_force_set", "p_reg"]], "nrf_lrcconf_clock_run_status_check": [[77, 3, 1, "c.nrf_lrcconf_clock_run_status_check", "clock"], [77, 3, 1, "c.nrf_lrcconf_clock_run_status_check", "p_reg"]], "nrf_lrcconf_clock_source_get": [[77, 3, 1, "c.nrf_lrcconf_clock_source_get", "clock"], [77, 3, 1, "c.nrf_lrcconf_clock_source_get", "p_reg"]], "nrf_lrcconf_clock_source_set": [[77, 3, 1, "c.nrf_lrcconf_clock_source_set", "clock"], [77, 3, 1, "c.nrf_lrcconf_clock_source_set", "p_reg"], [77, 3, 1, "c.nrf_lrcconf_clock_source_set", "source"]], "nrf_lrcconf_constlatstat_check": [[77, 3, 1, "c.nrf_lrcconf_constlatstat_check", "p_reg"]], "nrf_lrcconf_event_address_get": [[77, 3, 1, "c.nrf_lrcconf_event_address_get", "event"], [77, 3, 1, "c.nrf_lrcconf_event_address_get", "p_reg"]], "nrf_lrcconf_event_check": [[77, 3, 1, "c.nrf_lrcconf_event_check", "event"], [77, 3, 1, "c.nrf_lrcconf_event_check", "p_reg"]], "nrf_lrcconf_event_clear": [[77, 3, 1, "c.nrf_lrcconf_event_clear", "event"], [77, 3, 1, "c.nrf_lrcconf_event_clear", "p_reg"]], "nrf_lrcconf_event_t": [[77, 1, 1, "c.nrf_lrcconf_event_t.NRF_LRCCONF_EVENT_CLKSTARTED_0", "NRF_LRCCONF_EVENT_CLKSTARTED_0"], [77, 1, 1, "c.nrf_lrcconf_event_t.NRF_LRCCONF_EVENT_CLKSTARTED_1", "NRF_LRCCONF_EVENT_CLKSTARTED_1"], [77, 1, 1, "c.nrf_lrcconf_event_t.NRF_LRCCONF_EVENT_CLKSTARTED_2", "NRF_LRCCONF_EVENT_CLKSTARTED_2"], [77, 1, 1, "c.nrf_lrcconf_event_t.NRF_LRCCONF_EVENT_CLKSTARTED_3", "NRF_LRCCONF_EVENT_CLKSTARTED_3"], [77, 1, 1, "c.nrf_lrcconf_event_t.NRF_LRCCONF_EVENT_CLKSTARTED_4", "NRF_LRCCONF_EVENT_CLKSTARTED_4"], [77, 1, 1, "c.nrf_lrcconf_event_t.NRF_LRCCONF_EVENT_CLKSTARTED_5", "NRF_LRCCONF_EVENT_CLKSTARTED_5"], [77, 1, 1, "c.nrf_lrcconf_event_t.NRF_LRCCONF_EVENT_CLKSTARTED_6", "NRF_LRCCONF_EVENT_CLKSTARTED_6"], [77, 1, 1, "c.nrf_lrcconf_event_t.NRF_LRCCONF_EVENT_CLKSTARTED_7", "NRF_LRCCONF_EVENT_CLKSTARTED_7"], [77, 1, 1, "c.nrf_lrcconf_event_t.NRF_LRCCONF_EVENT_HFXOSTARTED", "NRF_LRCCONF_EVENT_HFXOSTARTED"]], "nrf_lrcconf_power_domain_mask_t": [[77, 1, 1, "c.nrf_lrcconf_power_domain_mask_t.NRF_LRCCONF_POWER_DOMAIN_0", "NRF_LRCCONF_POWER_DOMAIN_0"], [77, 1, 1, "c.nrf_lrcconf_power_domain_mask_t.NRF_LRCCONF_POWER_DOMAIN_1", "NRF_LRCCONF_POWER_DOMAIN_1"], [77, 1, 1, "c.nrf_lrcconf_power_domain_mask_t.NRF_LRCCONF_POWER_DOMAIN_2", "NRF_LRCCONF_POWER_DOMAIN_2"], [77, 1, 1, "c.nrf_lrcconf_power_domain_mask_t.NRF_LRCCONF_POWER_DOMAIN_3", "NRF_LRCCONF_POWER_DOMAIN_3"], [77, 1, 1, "c.nrf_lrcconf_power_domain_mask_t.NRF_LRCCONF_POWER_DOMAIN_4", "NRF_LRCCONF_POWER_DOMAIN_4"], [77, 1, 1, "c.nrf_lrcconf_power_domain_mask_t.NRF_LRCCONF_POWER_DOMAIN_5", "NRF_LRCCONF_POWER_DOMAIN_5"], [77, 1, 1, "c.nrf_lrcconf_power_domain_mask_t.NRF_LRCCONF_POWER_DOMAIN_6", "NRF_LRCCONF_POWER_DOMAIN_6"], [77, 1, 1, "c.nrf_lrcconf_power_domain_mask_t.NRF_LRCCONF_POWER_DOMAIN_7", "NRF_LRCCONF_POWER_DOMAIN_7"], [77, 1, 1, "c.nrf_lrcconf_power_domain_mask_t.NRF_LRCCONF_POWER_MAIN", "NRF_LRCCONF_POWER_MAIN"]], "nrf_lrcconf_power_domain_on_get": [[77, 3, 1, "c.nrf_lrcconf_power_domain_on_get", "index"]], "nrf_lrcconf_poweron_force_check": [[77, 3, 1, "c.nrf_lrcconf_poweron_force_check", "domain"], [77, 3, 1, "c.nrf_lrcconf_poweron_force_check", "p_reg"]], "nrf_lrcconf_poweron_force_set": [[77, 3, 1, "c.nrf_lrcconf_poweron_force_set", "alwayson"], [77, 3, 1, "c.nrf_lrcconf_poweron_force_set", "domain_mask"], [77, 3, 1, "c.nrf_lrcconf_poweron_force_set", "p_reg"]], "nrf_lrcconf_retain_check": [[77, 3, 1, "c.nrf_lrcconf_retain_check", "domain"], [77, 3, 1, "c.nrf_lrcconf_retain_check", "p_reg"]], "nrf_lrcconf_retain_set": [[77, 3, 1, "c.nrf_lrcconf_retain_set", "domain_mask"], [77, 3, 1, "c.nrf_lrcconf_retain_set", "p_reg"], [77, 3, 1, "c.nrf_lrcconf_retain_set", "retain"]], "nrf_lrcconf_task_address_get": [[77, 3, 1, "c.nrf_lrcconf_task_address_get", "p_reg"], [77, 3, 1, "c.nrf_lrcconf_task_address_get", "task"]], "nrf_lrcconf_task_t": [[77, 1, 1, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_CLKSTART_0", "NRF_LRCCONF_TASK_CLKSTART_0"], [77, 1, 1, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_CLKSTART_1", "NRF_LRCCONF_TASK_CLKSTART_1"], [77, 1, 1, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_CLKSTART_2", "NRF_LRCCONF_TASK_CLKSTART_2"], [77, 1, 1, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_CLKSTART_3", "NRF_LRCCONF_TASK_CLKSTART_3"], [77, 1, 1, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_CLKSTART_4", "NRF_LRCCONF_TASK_CLKSTART_4"], [77, 1, 1, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_CLKSTART_5", "NRF_LRCCONF_TASK_CLKSTART_5"], [77, 1, 1, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_CLKSTART_6", "NRF_LRCCONF_TASK_CLKSTART_6"], [77, 1, 1, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_CLKSTART_7", "NRF_LRCCONF_TASK_CLKSTART_7"], [77, 1, 1, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_CLKSTOP_0", "NRF_LRCCONF_TASK_CLKSTOP_0"], [77, 1, 1, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_CLKSTOP_1", "NRF_LRCCONF_TASK_CLKSTOP_1"], [77, 1, 1, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_CLKSTOP_2", "NRF_LRCCONF_TASK_CLKSTOP_2"], [77, 1, 1, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_CLKSTOP_3", "NRF_LRCCONF_TASK_CLKSTOP_3"], [77, 1, 1, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_CLKSTOP_4", "NRF_LRCCONF_TASK_CLKSTOP_4"], [77, 1, 1, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_CLKSTOP_5", "NRF_LRCCONF_TASK_CLKSTOP_5"], [77, 1, 1, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_CLKSTOP_6", "NRF_LRCCONF_TASK_CLKSTOP_6"], [77, 1, 1, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_CLKSTOP_7", "NRF_LRCCONF_TASK_CLKSTOP_7"], [77, 1, 1, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_CONSTLAT_DISABLE", "NRF_LRCCONF_TASK_CONSTLAT_DISABLE"], [77, 1, 1, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_CONSTLAT_ENABLE", "NRF_LRCCONF_TASK_CONSTLAT_ENABLE"], [77, 1, 1, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_REQHFXO", "NRF_LRCCONF_TASK_REQHFXO"], [77, 1, 1, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_STOPREQHFXO", "NRF_LRCCONF_TASK_STOPREQHFXO"], [77, 1, 1, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_SYSTEMOFFNOTREADY", "NRF_LRCCONF_TASK_SYSTEMOFFNOTREADY"], [77, 1, 1, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_SYSTEMOFFREADY", "NRF_LRCCONF_TASK_SYSTEMOFFREADY"]], "nrf_lrcconf_task_trigger": [[77, 3, 1, "c.nrf_lrcconf_task_trigger", "p_reg"], [77, 3, 1, "c.nrf_lrcconf_task_trigger", "task"]], "nrf_memconf_bitline_address_get": [[79, 3, 1, "c.nrf_memconf_bitline_address_get", "bitline"], [79, 3, 1, "c.nrf_memconf_bitline_address_get", "p_reg"]], "nrf_memconf_bitline_address_set": [[79, 3, 1, "c.nrf_memconf_bitline_address_set", "address"], [79, 3, 1, "c.nrf_memconf_bitline_address_set", "bitline"], [79, 3, 1, "c.nrf_memconf_bitline_address_set", "p_reg"]], "nrf_memconf_bitline_enable_check": [[79, 3, 1, "c.nrf_memconf_bitline_enable_check", "bitline"], [79, 3, 1, "c.nrf_memconf_bitline_enable_check", "p_reg"]], "nrf_memconf_bitline_enable_set": [[79, 3, 1, "c.nrf_memconf_bitline_enable_set", "bitline"], [79, 3, 1, "c.nrf_memconf_bitline_enable_set", "enable"], [79, 3, 1, "c.nrf_memconf_bitline_enable_set", "p_reg"]], "nrf_memconf_memtrim_get": [[79, 3, 1, "c.nrf_memconf_memtrim_get", "p_reg"], [79, 3, 1, "c.nrf_memconf_memtrim_get", "trim_id"]], "nrf_memconf_memtrim_set": [[79, 3, 1, "c.nrf_memconf_memtrim_set", "p_reg"], [79, 3, 1, "c.nrf_memconf_memtrim_set", "trim_id"], [79, 3, 1, "c.nrf_memconf_memtrim_set", "trim_val"]], "nrf_memconf_ramblock_control_enable_check": [[79, 3, 1, "c.nrf_memconf_ramblock_control_enable_check", "p_reg"], [79, 3, 1, "c.nrf_memconf_ramblock_control_enable_check", "power_id"], [79, 3, 1, "c.nrf_memconf_ramblock_control_enable_check", "ramblock"]], "nrf_memconf_ramblock_control_enable_set": [[79, 3, 1, "c.nrf_memconf_ramblock_control_enable_set", "enable"], [79, 3, 1, "c.nrf_memconf_ramblock_control_enable_set", "p_reg"], [79, 3, 1, "c.nrf_memconf_ramblock_control_enable_set", "power_id"], [79, 3, 1, "c.nrf_memconf_ramblock_control_enable_set", "ramblock"]], "nrf_memconf_ramblock_control_mask_enable_set": [[79, 3, 1, "c.nrf_memconf_ramblock_control_mask_enable_set", "enable"], [79, 3, 1, "c.nrf_memconf_ramblock_control_mask_enable_set", "p_reg"], [79, 3, 1, "c.nrf_memconf_ramblock_control_mask_enable_set", "power_id"], [79, 3, 1, "c.nrf_memconf_ramblock_control_mask_enable_set", "ramblock_mask"]], "nrf_memconf_ramblock_ret2_enable_check": [[79, 3, 1, "c.nrf_memconf_ramblock_ret2_enable_check", "p_reg"], [79, 3, 1, "c.nrf_memconf_ramblock_ret2_enable_check", "power_id"], [79, 3, 1, "c.nrf_memconf_ramblock_ret2_enable_check", "ramblock"]], "nrf_memconf_ramblock_ret2_enable_set": [[79, 3, 1, "c.nrf_memconf_ramblock_ret2_enable_set", "enable"], [79, 3, 1, "c.nrf_memconf_ramblock_ret2_enable_set", "p_reg"], [79, 3, 1, "c.nrf_memconf_ramblock_ret2_enable_set", "power_id"], [79, 3, 1, "c.nrf_memconf_ramblock_ret2_enable_set", "ramblock"]], "nrf_memconf_ramblock_ret_enable_check": [[79, 3, 1, "c.nrf_memconf_ramblock_ret_enable_check", "p_reg"], [79, 3, 1, "c.nrf_memconf_ramblock_ret_enable_check", "power_id"], [79, 3, 1, "c.nrf_memconf_ramblock_ret_enable_check", "ramblock"]], "nrf_memconf_ramblock_ret_enable_set": [[79, 3, 1, "c.nrf_memconf_ramblock_ret_enable_set", "enable"], [79, 3, 1, "c.nrf_memconf_ramblock_ret_enable_set", "p_reg"], [79, 3, 1, "c.nrf_memconf_ramblock_ret_enable_set", "power_id"], [79, 3, 1, "c.nrf_memconf_ramblock_ret_enable_set", "ramblock"]], "nrf_memconf_ramblock_ret_mask_enable_set": [[79, 3, 1, "c.nrf_memconf_ramblock_ret_mask_enable_set", "enable"], [79, 3, 1, "c.nrf_memconf_ramblock_ret_mask_enable_set", "p_reg"], [79, 3, 1, "c.nrf_memconf_ramblock_ret_mask_enable_set", "power_id"], [79, 3, 1, "c.nrf_memconf_ramblock_ret_mask_enable_set", "ramblock_mask"]], "nrf_memconf_rettrim_get": [[79, 3, 1, "c.nrf_memconf_rettrim_get", "p_reg"], [79, 3, 1, "c.nrf_memconf_rettrim_get", "trim_id"]], "nrf_memconf_rettrim_set": [[79, 3, 1, "c.nrf_memconf_rettrim_set", "p_reg"], [79, 3, 1, "c.nrf_memconf_rettrim_set", "trim_id"], [79, 3, 1, "c.nrf_memconf_rettrim_set", "trim_val"]], "nrf_mpc_errorsource_t": [[81, 1, 1, "c.nrf_mpc_errorsource_t.NRF_MPC_ERRORSOURCE_MPC", "NRF_MPC_ERRORSOURCE_MPC"], [81, 1, 1, "c.nrf_mpc_errorsource_t.NRF_MPC_ERRORSOURCE_SLAVE", "NRF_MPC_ERRORSOURCE_SLAVE"]], "nrf_mpc_event_address_get": [[81, 3, 1, "c.nrf_mpc_event_address_get", "event"], [81, 3, 1, "c.nrf_mpc_event_address_get", "p_reg"]], "nrf_mpc_event_check": [[81, 3, 1, "c.nrf_mpc_event_check", "event"], [81, 3, 1, "c.nrf_mpc_event_check", "p_reg"]], "nrf_mpc_event_clear": [[81, 3, 1, "c.nrf_mpc_event_clear", "event"], [81, 3, 1, "c.nrf_mpc_event_clear", "p_reg"]], "nrf_mpc_event_t": [[81, 1, 1, "c.nrf_mpc_event_t.NRF_MPC_EVENT_MEMACCERR", "NRF_MPC_EVENT_MEMACCERR"]], "nrf_mpc_globalslave_lock_check": [[81, 3, 1, "c.nrf_mpc_globalslave_lock_check", "p_reg"]], "nrf_mpc_globalslave_lock_enable": [[81, 3, 1, "c.nrf_mpc_globalslave_lock_enable", "p_reg"]], "nrf_mpc_globalslave_masterport_get": [[81, 3, 1, "c.nrf_mpc_globalslave_masterport_get", "p_reg"]], "nrf_mpc_globalslave_masterport_set": [[81, 3, 1, "c.nrf_mpc_globalslave_masterport_set", "mask"], [81, 3, 1, "c.nrf_mpc_globalslave_masterport_set", "p_reg"]], "nrf_mpc_int_disable": [[81, 3, 1, "c.nrf_mpc_int_disable", "mask"], [81, 3, 1, "c.nrf_mpc_int_disable", "p_reg"]], "nrf_mpc_int_enable": [[81, 3, 1, "c.nrf_mpc_int_enable", "mask"], [81, 3, 1, "c.nrf_mpc_int_enable", "p_reg"]], "nrf_mpc_int_enable_check": [[81, 3, 1, "c.nrf_mpc_int_enable_check", "mask"], [81, 3, 1, "c.nrf_mpc_int_enable_check", "p_reg"]], "nrf_mpc_int_mask_t": [[81, 1, 1, "c.nrf_mpc_int_mask_t.NRF_MPC_INT_MEMACCERR_MASK", "NRF_MPC_INT_MEMACCERR_MASK"]], "nrf_mpc_masterport_mask_t": [[81, 1, 1, "c.nrf_mpc_masterport_mask_t.NRF_MPC_MASTERPORT_0_MASK", "NRF_MPC_MASTERPORT_0_MASK"], [81, 1, 1, "c.nrf_mpc_masterport_mask_t.NRF_MPC_MASTERPORT_10_MASK", "NRF_MPC_MASTERPORT_10_MASK"], [81, 1, 1, "c.nrf_mpc_masterport_mask_t.NRF_MPC_MASTERPORT_11_MASK", "NRF_MPC_MASTERPORT_11_MASK"], [81, 1, 1, "c.nrf_mpc_masterport_mask_t.NRF_MPC_MASTERPORT_12_MASK", "NRF_MPC_MASTERPORT_12_MASK"], [81, 1, 1, "c.nrf_mpc_masterport_mask_t.NRF_MPC_MASTERPORT_13_MASK", "NRF_MPC_MASTERPORT_13_MASK"], [81, 1, 1, "c.nrf_mpc_masterport_mask_t.NRF_MPC_MASTERPORT_14_MASK", "NRF_MPC_MASTERPORT_14_MASK"], [81, 1, 1, "c.nrf_mpc_masterport_mask_t.NRF_MPC_MASTERPORT_1_MASK", "NRF_MPC_MASTERPORT_1_MASK"], [81, 1, 1, "c.nrf_mpc_masterport_mask_t.NRF_MPC_MASTERPORT_2_MASK", "NRF_MPC_MASTERPORT_2_MASK"], [81, 1, 1, "c.nrf_mpc_masterport_mask_t.NRF_MPC_MASTERPORT_3_MASK", "NRF_MPC_MASTERPORT_3_MASK"], [81, 1, 1, "c.nrf_mpc_masterport_mask_t.NRF_MPC_MASTERPORT_4_MASK", "NRF_MPC_MASTERPORT_4_MASK"], [81, 1, 1, "c.nrf_mpc_masterport_mask_t.NRF_MPC_MASTERPORT_5_MASK", "NRF_MPC_MASTERPORT_5_MASK"], [81, 1, 1, "c.nrf_mpc_masterport_mask_t.NRF_MPC_MASTERPORT_6_MASK", "NRF_MPC_MASTERPORT_6_MASK"], [81, 1, 1, "c.nrf_mpc_masterport_mask_t.NRF_MPC_MASTERPORT_7_MASK", "NRF_MPC_MASTERPORT_7_MASK"], [81, 1, 1, "c.nrf_mpc_masterport_mask_t.NRF_MPC_MASTERPORT_8_MASK", "NRF_MPC_MASTERPORT_8_MASK"], [81, 1, 1, "c.nrf_mpc_masterport_mask_t.NRF_MPC_MASTERPORT_9_MASK", "NRF_MPC_MASTERPORT_9_MASK"]], "nrf_mpc_memaccerr_address_get": [[81, 3, 1, "c.nrf_mpc_memaccerr_address_get", "p_reg"]], "nrf_mpc_memaccerr_info_errorsource_get": [[81, 3, 1, "c.nrf_mpc_memaccerr_info_errorsource_get", "p_reg"]], "nrf_mpc_memaccerr_info_masterport_get": [[81, 3, 1, "c.nrf_mpc_memaccerr_info_masterport_get", "p_reg"]], "nrf_mpc_memaccerr_info_ownerid_get": [[81, 3, 1, "c.nrf_mpc_memaccerr_info_ownerid_get", "p_reg"]], "nrf_mpc_memaccerr_info_perm_get": [[81, 3, 1, "c.nrf_mpc_memaccerr_info_perm_get", "p_reg"]], "nrf_mpc_override_config_get": [[81, 3, 1, "c.nrf_mpc_override_config_get", "index"], [81, 3, 1, "c.nrf_mpc_override_config_get", "p_reg"]], "nrf_mpc_override_config_set": [[81, 3, 1, "c.nrf_mpc_override_config_set", "index"], [81, 3, 1, "c.nrf_mpc_override_config_set", "p_config"], [81, 3, 1, "c.nrf_mpc_override_config_set", "p_reg"]], "nrf_mpc_override_config_t": [[81, 6, 1, "c.nrf_mpc_override_config_t.enable", "enable"], [81, 6, 1, "c.nrf_mpc_override_config_t.lock", "lock"], [81, 6, 1, "c.nrf_mpc_override_config_t.secdom_enable", "secdom_enable"], [81, 6, 1, "c.nrf_mpc_override_config_t.secure_mask", "secure_mask"], [81, 6, 1, "c.nrf_mpc_override_config_t.slave_number", "slave_number"]], "nrf_mpc_override_endaddr_get": [[81, 3, 1, "c.nrf_mpc_override_endaddr_get", "index"], [81, 3, 1, "c.nrf_mpc_override_endaddr_get", "p_reg"]], "nrf_mpc_override_endaddr_set": [[81, 3, 1, "c.nrf_mpc_override_endaddr_set", "address"], [81, 3, 1, "c.nrf_mpc_override_endaddr_set", "index"], [81, 3, 1, "c.nrf_mpc_override_endaddr_set", "p_reg"]], "nrf_mpc_override_masterport_get": [[81, 3, 1, "c.nrf_mpc_override_masterport_get", "index"], [81, 3, 1, "c.nrf_mpc_override_masterport_get", "p_reg"]], "nrf_mpc_override_masterport_set": [[81, 3, 1, "c.nrf_mpc_override_masterport_set", "index"], [81, 3, 1, "c.nrf_mpc_override_masterport_set", "mask"], [81, 3, 1, "c.nrf_mpc_override_masterport_set", "p_reg"]], "nrf_mpc_override_offset_get": [[81, 3, 1, "c.nrf_mpc_override_offset_get", "index"], [81, 3, 1, "c.nrf_mpc_override_offset_get", "p_reg"]], "nrf_mpc_override_offset_set": [[81, 3, 1, "c.nrf_mpc_override_offset_set", "index"], [81, 3, 1, "c.nrf_mpc_override_offset_set", "offset"], [81, 3, 1, "c.nrf_mpc_override_offset_set", "p_reg"]], "nrf_mpc_override_ownerid_get": [[81, 3, 1, "c.nrf_mpc_override_ownerid_get", "index"], [81, 3, 1, "c.nrf_mpc_override_ownerid_get", "p_reg"]], "nrf_mpc_override_ownerid_set": [[81, 3, 1, "c.nrf_mpc_override_ownerid_set", "index"], [81, 3, 1, "c.nrf_mpc_override_ownerid_set", "owner_id"], [81, 3, 1, "c.nrf_mpc_override_ownerid_set", "p_reg"]], "nrf_mpc_override_perm_get": [[81, 3, 1, "c.nrf_mpc_override_perm_get", "index"], [81, 3, 1, "c.nrf_mpc_override_perm_get", "p_reg"]], "nrf_mpc_override_perm_set": [[81, 3, 1, "c.nrf_mpc_override_perm_set", "index"], [81, 3, 1, "c.nrf_mpc_override_perm_set", "p_reg"], [81, 3, 1, "c.nrf_mpc_override_perm_set", "permissions"]], "nrf_mpc_override_permmask_get": [[81, 3, 1, "c.nrf_mpc_override_permmask_get", "index"], [81, 3, 1, "c.nrf_mpc_override_permmask_get", "p_reg"]], "nrf_mpc_override_permmask_set": [[81, 3, 1, "c.nrf_mpc_override_permmask_set", "index"], [81, 3, 1, "c.nrf_mpc_override_permmask_set", "p_reg"], [81, 3, 1, "c.nrf_mpc_override_permmask_set", "permissions"]], "nrf_mpc_override_startaddr_get": [[81, 3, 1, "c.nrf_mpc_override_startaddr_get", "index"], [81, 3, 1, "c.nrf_mpc_override_startaddr_get", "p_reg"]], "nrf_mpc_override_startaddr_set": [[81, 3, 1, "c.nrf_mpc_override_startaddr_set", "address"], [81, 3, 1, "c.nrf_mpc_override_startaddr_set", "index"], [81, 3, 1, "c.nrf_mpc_override_startaddr_set", "p_reg"]], "nrf_mpc_permission_mask_t": [[81, 1, 1, "c.nrf_mpc_permission_mask_t.NRF_MPC_PERM_EXECUTE_MASK", "NRF_MPC_PERM_EXECUTE_MASK"], [81, 1, 1, "c.nrf_mpc_permission_mask_t.NRF_MPC_PERM_READ_MASK", "NRF_MPC_PERM_READ_MASK"], [81, 1, 1, "c.nrf_mpc_permission_mask_t.NRF_MPC_PERM_SECURE_MASK", "NRF_MPC_PERM_SECURE_MASK"], [81, 1, 1, "c.nrf_mpc_permission_mask_t.NRF_MPC_PERM_WRITE_MASK", "NRF_MPC_PERM_WRITE_MASK"]], "nrf_mpc_region_addrmask_get": [[81, 3, 1, "c.nrf_mpc_region_addrmask_get", "index"], [81, 3, 1, "c.nrf_mpc_region_addrmask_get", "p_reg"]], "nrf_mpc_region_addrmask_set": [[81, 3, 1, "c.nrf_mpc_region_addrmask_set", "address"], [81, 3, 1, "c.nrf_mpc_region_addrmask_set", "index"], [81, 3, 1, "c.nrf_mpc_region_addrmask_set", "p_reg"]], "nrf_mpc_region_config_get": [[81, 3, 1, "c.nrf_mpc_region_config_get", "index"], [81, 3, 1, "c.nrf_mpc_region_config_get", "p_reg"]], "nrf_mpc_region_config_set": [[81, 3, 1, "c.nrf_mpc_region_config_set", "index"], [81, 3, 1, "c.nrf_mpc_region_config_set", "p_config"], [81, 3, 1, "c.nrf_mpc_region_config_set", "p_reg"]], "nrf_mpc_region_config_t": [[81, 6, 1, "c.nrf_mpc_region_config_t.enable", "enable"], [81, 6, 1, "c.nrf_mpc_region_config_t.lock", "lock"], [81, 6, 1, "c.nrf_mpc_region_config_t.owner", "owner"], [81, 6, 1, "c.nrf_mpc_region_config_t.permissions", "permissions"], [81, 6, 1, "c.nrf_mpc_region_config_t.slave_number", "slave_number"]], "nrf_mpc_region_masterport_get": [[81, 3, 1, "c.nrf_mpc_region_masterport_get", "index"], [81, 3, 1, "c.nrf_mpc_region_masterport_get", "p_reg"]], "nrf_mpc_region_masterport_set": [[81, 3, 1, "c.nrf_mpc_region_masterport_set", "index"], [81, 3, 1, "c.nrf_mpc_region_masterport_set", "mask"], [81, 3, 1, "c.nrf_mpc_region_masterport_set", "p_reg"]], "nrf_mpc_region_startaddr_get": [[81, 3, 1, "c.nrf_mpc_region_startaddr_get", "index"], [81, 3, 1, "c.nrf_mpc_region_startaddr_get", "p_reg"]], "nrf_mpc_region_startaddr_set": [[81, 3, 1, "c.nrf_mpc_region_startaddr_set", "address"], [81, 3, 1, "c.nrf_mpc_region_startaddr_set", "index"], [81, 3, 1, "c.nrf_mpc_region_startaddr_set", "p_reg"]], "nrf_mpc_rtchoke_delay_get": [[81, 3, 1, "c.nrf_mpc_rtchoke_delay_get", "p_reg"], [81, 3, 1, "c.nrf_mpc_rtchoke_delay_get", "slave"]], "nrf_mpc_rtchoke_delay_set": [[81, 3, 1, "c.nrf_mpc_rtchoke_delay_set", "delay"], [81, 3, 1, "c.nrf_mpc_rtchoke_delay_set", "p_reg"], [81, 3, 1, "c.nrf_mpc_rtchoke_delay_set", "slave"]], "nrf_mpc_rtchoke_readaccess_get": [[81, 3, 1, "c.nrf_mpc_rtchoke_readaccess_get", "p_reg"]], "nrf_mpc_rtchoke_readaccess_set": [[81, 3, 1, "c.nrf_mpc_rtchoke_readaccess_set", "mask"], [81, 3, 1, "c.nrf_mpc_rtchoke_readaccess_set", "p_reg"]], "nrf_mpc_rtchoke_writeaccess_get": [[81, 3, 1, "c.nrf_mpc_rtchoke_writeaccess_get", "p_reg"]], "nrf_mpc_rtchoke_writeaccess_set": [[81, 3, 1, "c.nrf_mpc_rtchoke_writeaccess_set", "mask"], [81, 3, 1, "c.nrf_mpc_rtchoke_writeaccess_set", "p_reg"]], "nrf_mpu_nvm_blocks_protection_enable": [[83, 3, 1, "c.nrf_mpu_nvm_blocks_protection_enable", "block_mask"], [83, 3, 1, "c.nrf_mpu_nvm_blocks_protection_enable", "group_idx"], [83, 3, 1, "c.nrf_mpu_nvm_blocks_protection_enable", "p_reg"]], "nrf_mpu_nvm_protection_in_debug_set": [[83, 3, 1, "c.nrf_mpu_nvm_protection_in_debug_set", "enable"], [83, 3, 1, "c.nrf_mpu_nvm_protection_in_debug_set", "p_reg"]], "nrf_mpu_region0_peripherals_get": [[83, 3, 1, "c.nrf_mpu_region0_peripherals_get", "p_reg"]], "nrf_mpu_region0_peripherals_set": [[83, 3, 1, "c.nrf_mpu_region0_peripherals_set", "p_reg"], [83, 3, 1, "c.nrf_mpu_region0_peripherals_set", "peripheral_mask"]], "nrf_mpu_region0_ram_size_set": [[83, 3, 1, "c.nrf_mpu_region0_ram_size_set", "p_reg"], [83, 3, 1, "c.nrf_mpu_region0_ram_size_set", "size"]], "nrf_mutex_lock": [[85, 3, 1, "c.nrf_mutex_lock", "mutex"], [85, 3, 1, "c.nrf_mutex_lock", "p_reg"]], "nrf_mutex_unlock": [[85, 3, 1, "c.nrf_mutex_unlock", "mutex"], [85, 3, 1, "c.nrf_mutex_unlock", "p_reg"]], "nrf_mvdma_activity_check": [[87, 3, 1, "c.nrf_mvdma_activity_check", "p_reg"]], "nrf_mvdma_aximode_set": [[87, 3, 1, "c.nrf_mvdma_aximode_set", "aximode"], [87, 3, 1, "c.nrf_mvdma_aximode_set", "p_reg"]], "nrf_mvdma_aximode_t": [[87, 1, 1, "c.nrf_mvdma_aximode_t.NRF_MVDMA_AXIMODE_AXI", "NRF_MVDMA_AXIMODE_AXI"], [87, 1, 1, "c.nrf_mvdma_aximode_t.NRF_MVDMA_AXIMODE_AXILITE", "NRF_MVDMA_AXIMODE_AXILITE"]], "nrf_mvdma_crc_result_get": [[87, 3, 1, "c.nrf_mvdma_crc_result_get", "p_reg"]], "nrf_mvdma_event_address_get": [[87, 3, 1, "c.nrf_mvdma_event_address_get", "event"], [87, 3, 1, "c.nrf_mvdma_event_address_get", "p_reg"]], "nrf_mvdma_event_check": [[87, 3, 1, "c.nrf_mvdma_event_check", "event"], [87, 3, 1, "c.nrf_mvdma_event_check", "p_reg"]], "nrf_mvdma_event_clear": [[87, 3, 1, "c.nrf_mvdma_event_clear", "event"], [87, 3, 1, "c.nrf_mvdma_event_clear", "p_reg"]], "nrf_mvdma_event_t": [[87, 1, 1, "c.nrf_mvdma_event_t.NRF_MVDMA_EVENT_END", "NRF_MVDMA_EVENT_END"], [87, 1, 1, "c.nrf_mvdma_event_t.NRF_MVDMA_EVENT_PAUSED", "NRF_MVDMA_EVENT_PAUSED"], [87, 1, 1, "c.nrf_mvdma_event_t.NRF_MVDMA_EVENT_RESET", "NRF_MVDMA_EVENT_RESET"], [87, 1, 1, "c.nrf_mvdma_event_t.NRF_MVDMA_EVENT_SINKBUSERROR", "NRF_MVDMA_EVENT_SINKBUSERROR"], [87, 1, 1, "c.nrf_mvdma_event_t.NRF_MVDMA_EVENT_SINKSELECTJOBDONE", "NRF_MVDMA_EVENT_SINKSELECTJOBDONE"], [87, 1, 1, "c.nrf_mvdma_event_t.NRF_MVDMA_EVENT_SOURCEBUSERROR", "NRF_MVDMA_EVENT_SOURCEBUSERROR"], [87, 1, 1, "c.nrf_mvdma_event_t.NRF_MVDMA_EVENT_SOURCESELECTJOBDONE", "NRF_MVDMA_EVENT_SOURCESELECTJOBDONE"], [87, 1, 1, "c.nrf_mvdma_event_t.NRF_MVDMA_EVENT_STARTED", "NRF_MVDMA_EVENT_STARTED"]], "nrf_mvdma_fifo_status_get": [[87, 3, 1, "c.nrf_mvdma_fifo_status_get", "p_reg"]], "nrf_mvdma_fifo_status_t": [[87, 1, 1, "c.nrf_mvdma_fifo_status_t.NRF_MVDMA_FIFO_STATUS_EMPTY", "NRF_MVDMA_FIFO_STATUS_EMPTY"], [87, 1, 1, "c.nrf_mvdma_fifo_status_t.NRF_MVDMA_FIFO_STATUS_FULL", "NRF_MVDMA_FIFO_STATUS_FULL"], [87, 1, 1, "c.nrf_mvdma_fifo_status_t.NRF_MVDMA_FIFO_STATUS_NOT_EMPTY", "NRF_MVDMA_FIFO_STATUS_NOT_EMPTY"]], "nrf_mvdma_int_disable": [[87, 3, 1, "c.nrf_mvdma_int_disable", "mask"], [87, 3, 1, "c.nrf_mvdma_int_disable", "p_reg"]], "nrf_mvdma_int_enable": [[87, 3, 1, "c.nrf_mvdma_int_enable", "mask"], [87, 3, 1, "c.nrf_mvdma_int_enable", "p_reg"]], "nrf_mvdma_int_enable_check": [[87, 3, 1, "c.nrf_mvdma_int_enable_check", "mask"], [87, 3, 1, "c.nrf_mvdma_int_enable_check", "p_reg"]], "nrf_mvdma_int_mask_t": [[87, 1, 1, "c.nrf_mvdma_int_mask_t.NRF_MVDMA_INT_END_MASK", "NRF_MVDMA_INT_END_MASK"], [87, 1, 1, "c.nrf_mvdma_int_mask_t.NRF_MVDMA_INT_PAUSED_MASK", "NRF_MVDMA_INT_PAUSED_MASK"], [87, 1, 1, "c.nrf_mvdma_int_mask_t.NRF_MVDMA_INT_RESET_MASK", "NRF_MVDMA_INT_RESET_MASK"], [87, 1, 1, "c.nrf_mvdma_int_mask_t.NRF_MVDMA_INT_SINKBUSERROR_MASK", "NRF_MVDMA_INT_SINKBUSERROR_MASK"], [87, 1, 1, "c.nrf_mvdma_int_mask_t.NRF_MVDMA_INT_SINKSELECTJOBDONE_MASK", "NRF_MVDMA_INT_SINKSELECTJOBDONE_MASK"], [87, 1, 1, "c.nrf_mvdma_int_mask_t.NRF_MVDMA_INT_SOURCEBUSERROR_MASK", "NRF_MVDMA_INT_SOURCEBUSERROR_MASK"], [87, 1, 1, "c.nrf_mvdma_int_mask_t.NRF_MVDMA_INT_SOURCESELECTJOBDONE_MASK", "NRF_MVDMA_INT_SOURCESELECTJOBDONE_MASK"], [87, 1, 1, "c.nrf_mvdma_int_mask_t.NRF_MVDMA_INT_STARTED_MASK", "NRF_MVDMA_INT_STARTED_MASK"]], "nrf_mvdma_int_pending_get": [[87, 3, 1, "c.nrf_mvdma_int_pending_get", "p_reg"]], "nrf_mvdma_last_sink_address_get": [[87, 3, 1, "c.nrf_mvdma_last_sink_address_get", "p_reg"]], "nrf_mvdma_last_source_address_get": [[87, 3, 1, "c.nrf_mvdma_last_source_address_get", "p_reg"]], "nrf_mvdma_mode_set": [[87, 3, 1, "c.nrf_mvdma_mode_set", "mode"], [87, 3, 1, "c.nrf_mvdma_mode_set", "p_reg"]], "nrf_mvdma_mode_t": [[87, 1, 1, "c.nrf_mvdma_mode_t.NRF_MVDMA_MODE_MULTI", "NRF_MVDMA_MODE_MULTI"], [87, 1, 1, "c.nrf_mvdma_mode_t.NRF_MVDMA_MODE_SINGLE", "NRF_MVDMA_MODE_SINGLE"]], "nrf_mvdma_publish_clear": [[87, 3, 1, "c.nrf_mvdma_publish_clear", "event"], [87, 3, 1, "c.nrf_mvdma_publish_clear", "p_reg"]], "nrf_mvdma_publish_set": [[87, 3, 1, "c.nrf_mvdma_publish_set", "channel"], [87, 3, 1, "c.nrf_mvdma_publish_set", "event"], [87, 3, 1, "c.nrf_mvdma_publish_set", "p_reg"]], "nrf_mvdma_sink_error_get": [[87, 3, 1, "c.nrf_mvdma_sink_error_get", "p_reg"]], "nrf_mvdma_sink_error_t": [[87, 1, 1, "c.nrf_mvdma_sink_error_t.NRF_MVDMA_SINK_ERROR_DECODE_READ", "NRF_MVDMA_SINK_ERROR_DECODE_READ"], [87, 1, 1, "c.nrf_mvdma_sink_error_t.NRF_MVDMA_SINK_ERROR_DECODE_WRITE", "NRF_MVDMA_SINK_ERROR_DECODE_WRITE"], [87, 1, 1, "c.nrf_mvdma_sink_error_t.NRF_MVDMA_SINK_ERROR_NONE", "NRF_MVDMA_SINK_ERROR_NONE"], [87, 1, 1, "c.nrf_mvdma_sink_error_t.NRF_MVDMA_SINK_ERROR_READ", "NRF_MVDMA_SINK_ERROR_READ"], [87, 1, 1, "c.nrf_mvdma_sink_error_t.NRF_MVDMA_SINK_ERROR_WRITE", "NRF_MVDMA_SINK_ERROR_WRITE"]], "nrf_mvdma_sink_job_count_get": [[87, 3, 1, "c.nrf_mvdma_sink_job_count_get", "p_reg"]], "nrf_mvdma_sink_list_ptr_get": [[87, 3, 1, "c.nrf_mvdma_sink_list_ptr_get", "p_reg"]], "nrf_mvdma_sink_list_ptr_set": [[87, 3, 1, "c.nrf_mvdma_sink_list_ptr_set", "p_job"], [87, 3, 1, "c.nrf_mvdma_sink_list_ptr_set", "p_reg"]], "nrf_mvdma_source_error_get": [[87, 3, 1, "c.nrf_mvdma_source_error_get", "p_reg"]], "nrf_mvdma_source_error_t": [[87, 1, 1, "c.nrf_mvdma_source_error_t.NRF_MVDMA_SOURCE_ERROR_NONE", "NRF_MVDMA_SOURCE_ERROR_NONE"], [87, 1, 1, "c.nrf_mvdma_source_error_t.NRF_MVDMA_SOURCE_ERROR_READ", "NRF_MVDMA_SOURCE_ERROR_READ"], [87, 1, 1, "c.nrf_mvdma_source_error_t.NRF_MVDMA_SOURCE_ERROR_READ_DECODE", "NRF_MVDMA_SOURCE_ERROR_READ_DECODE"]], "nrf_mvdma_source_job_count_get": [[87, 3, 1, "c.nrf_mvdma_source_job_count_get", "p_reg"]], "nrf_mvdma_source_list_ptr_get": [[87, 3, 1, "c.nrf_mvdma_source_list_ptr_get", "p_reg"]], "nrf_mvdma_source_list_ptr_set": [[87, 3, 1, "c.nrf_mvdma_source_list_ptr_set", "p_job"], [87, 3, 1, "c.nrf_mvdma_source_list_ptr_set", "p_reg"]], "nrf_mvdma_start_task_get": [[87, 3, 1, "c.nrf_mvdma_start_task_get", "index"], [87, 3, 1, "c.nrf_mvdma_start_task_get", "p_reg"]], "nrf_mvdma_subscribe_clear": [[87, 3, 1, "c.nrf_mvdma_subscribe_clear", "p_reg"], [87, 3, 1, "c.nrf_mvdma_subscribe_clear", "task"]], "nrf_mvdma_subscribe_set": [[87, 3, 1, "c.nrf_mvdma_subscribe_set", "channel"], [87, 3, 1, "c.nrf_mvdma_subscribe_set", "p_reg"], [87, 3, 1, "c.nrf_mvdma_subscribe_set", "task"]], "nrf_mvdma_task_address_get": [[87, 3, 1, "c.nrf_mvdma_task_address_get", "p_reg"], [87, 3, 1, "c.nrf_mvdma_task_address_get", "task"]], "nrf_mvdma_task_t": [[87, 1, 1, "c.nrf_mvdma_task_t.NRF_MVDMA_TASK_PAUSE", "NRF_MVDMA_TASK_PAUSE"], [87, 1, 1, "c.nrf_mvdma_task_t.NRF_MVDMA_TASK_RESET", "NRF_MVDMA_TASK_RESET"], [87, 1, 1, "c.nrf_mvdma_task_t.NRF_MVDMA_TASK_START0", "NRF_MVDMA_TASK_START0"], [87, 1, 1, "c.nrf_mvdma_task_t.NRF_MVDMA_TASK_START1", "NRF_MVDMA_TASK_START1"], [87, 1, 1, "c.nrf_mvdma_task_t.NRF_MVDMA_TASK_START2", "NRF_MVDMA_TASK_START2"], [87, 1, 1, "c.nrf_mvdma_task_t.NRF_MVDMA_TASK_START3", "NRF_MVDMA_TASK_START3"], [87, 1, 1, "c.nrf_mvdma_task_t.NRF_MVDMA_TASK_START4", "NRF_MVDMA_TASK_START4"], [87, 1, 1, "c.nrf_mvdma_task_t.NRF_MVDMA_TASK_START5", "NRF_MVDMA_TASK_START5"], [87, 1, 1, "c.nrf_mvdma_task_t.NRF_MVDMA_TASK_START6", "NRF_MVDMA_TASK_START6"], [87, 1, 1, "c.nrf_mvdma_task_t.NRF_MVDMA_TASK_START7", "NRF_MVDMA_TASK_START7"]], "nrf_mvdma_task_trigger": [[87, 3, 1, "c.nrf_mvdma_task_trigger", "p_reg"], [87, 3, 1, "c.nrf_mvdma_task_trigger", "task"]], "nrf_mwu_event_address_get": [[90, 3, 1, "c.nrf_mwu_event_address_get", "event"], [90, 3, 1, "c.nrf_mwu_event_address_get", "p_reg"]], "nrf_mwu_event_check": [[90, 3, 1, "c.nrf_mwu_event_check", "event"], [90, 3, 1, "c.nrf_mwu_event_check", "p_reg"]], "nrf_mwu_event_clear": [[90, 3, 1, "c.nrf_mwu_event_clear", "event"], [90, 3, 1, "c.nrf_mwu_event_clear", "p_reg"]], "nrf_mwu_event_t": [[90, 1, 1, "c.nrf_mwu_event_t.NRF_MWU_EVENT_PREGION0_READ", "NRF_MWU_EVENT_PREGION0_READ"], [90, 1, 1, "c.nrf_mwu_event_t.NRF_MWU_EVENT_PREGION0_WRITE", "NRF_MWU_EVENT_PREGION0_WRITE"], [90, 1, 1, "c.nrf_mwu_event_t.NRF_MWU_EVENT_PREGION1_READ", "NRF_MWU_EVENT_PREGION1_READ"], [90, 1, 1, "c.nrf_mwu_event_t.NRF_MWU_EVENT_PREGION1_WRITE", "NRF_MWU_EVENT_PREGION1_WRITE"], [90, 1, 1, "c.nrf_mwu_event_t.NRF_MWU_EVENT_REGION0_READ", "NRF_MWU_EVENT_REGION0_READ"], [90, 1, 1, "c.nrf_mwu_event_t.NRF_MWU_EVENT_REGION0_WRITE", "NRF_MWU_EVENT_REGION0_WRITE"], [90, 1, 1, "c.nrf_mwu_event_t.NRF_MWU_EVENT_REGION1_READ", "NRF_MWU_EVENT_REGION1_READ"], [90, 1, 1, "c.nrf_mwu_event_t.NRF_MWU_EVENT_REGION1_WRITE", "NRF_MWU_EVENT_REGION1_WRITE"], [90, 1, 1, "c.nrf_mwu_event_t.NRF_MWU_EVENT_REGION2_READ", "NRF_MWU_EVENT_REGION2_READ"], [90, 1, 1, "c.nrf_mwu_event_t.NRF_MWU_EVENT_REGION2_WRITE", "NRF_MWU_EVENT_REGION2_WRITE"], [90, 1, 1, "c.nrf_mwu_event_t.NRF_MWU_EVENT_REGION3_READ", "NRF_MWU_EVENT_REGION3_READ"], [90, 1, 1, "c.nrf_mwu_event_t.NRF_MWU_EVENT_REGION3_WRITE", "NRF_MWU_EVENT_REGION3_WRITE"]], "nrf_mwu_int_disable": [[90, 3, 1, "c.nrf_mwu_int_disable", "mask"], [90, 3, 1, "c.nrf_mwu_int_disable", "p_reg"]], "nrf_mwu_int_enable": [[90, 3, 1, "c.nrf_mwu_int_enable", "mask"], [90, 3, 1, "c.nrf_mwu_int_enable", "p_reg"]], "nrf_mwu_int_enable_check": [[90, 3, 1, "c.nrf_mwu_int_enable_check", "mask"], [90, 3, 1, "c.nrf_mwu_int_enable_check", "p_reg"]], "nrf_mwu_int_mask_t": [[90, 1, 1, "c.nrf_mwu_int_mask_t.NRF_MWU_INT_PREGION0_READ_MASK", "NRF_MWU_INT_PREGION0_READ_MASK"], [90, 1, 1, "c.nrf_mwu_int_mask_t.NRF_MWU_INT_PREGION0_WRITE_MASK", "NRF_MWU_INT_PREGION0_WRITE_MASK"], [90, 1, 1, "c.nrf_mwu_int_mask_t.NRF_MWU_INT_PREGION1_READ_MASK", "NRF_MWU_INT_PREGION1_READ_MASK"], [90, 1, 1, "c.nrf_mwu_int_mask_t.NRF_MWU_INT_PREGION1_WRITE_MASK", "NRF_MWU_INT_PREGION1_WRITE_MASK"], [90, 1, 1, "c.nrf_mwu_int_mask_t.NRF_MWU_INT_REGION0_READ_MASK", "NRF_MWU_INT_REGION0_READ_MASK"], [90, 1, 1, "c.nrf_mwu_int_mask_t.NRF_MWU_INT_REGION0_WRITE_MASK", "NRF_MWU_INT_REGION0_WRITE_MASK"], [90, 1, 1, "c.nrf_mwu_int_mask_t.NRF_MWU_INT_REGION1_READ_MASK", "NRF_MWU_INT_REGION1_READ_MASK"], [90, 1, 1, "c.nrf_mwu_int_mask_t.NRF_MWU_INT_REGION1_WRITE_MASK", "NRF_MWU_INT_REGION1_WRITE_MASK"], [90, 1, 1, "c.nrf_mwu_int_mask_t.NRF_MWU_INT_REGION2_READ_MASK", "NRF_MWU_INT_REGION2_READ_MASK"], [90, 1, 1, "c.nrf_mwu_int_mask_t.NRF_MWU_INT_REGION2_WRITE_MASK", "NRF_MWU_INT_REGION2_WRITE_MASK"], [90, 1, 1, "c.nrf_mwu_int_mask_t.NRF_MWU_INT_REGION3_READ_MASK", "NRF_MWU_INT_REGION3_READ_MASK"], [90, 1, 1, "c.nrf_mwu_int_mask_t.NRF_MWU_INT_REGION3_WRITE_MASK", "NRF_MWU_INT_REGION3_WRITE_MASK"]], "nrf_mwu_nmi_disable": [[90, 3, 1, "c.nrf_mwu_nmi_disable", "mask"], [90, 3, 1, "c.nrf_mwu_nmi_disable", "p_reg"]], "nrf_mwu_nmi_enable": [[90, 3, 1, "c.nrf_mwu_nmi_enable", "mask"], [90, 3, 1, "c.nrf_mwu_nmi_enable", "p_reg"]], "nrf_mwu_nmi_enable_check": [[90, 3, 1, "c.nrf_mwu_nmi_enable_check", "mask"], [90, 3, 1, "c.nrf_mwu_nmi_enable_check", "p_reg"]], "nrf_mwu_region_watch_disable": [[90, 3, 1, "c.nrf_mwu_region_watch_disable", "p_reg"], [90, 3, 1, "c.nrf_mwu_region_watch_disable", "reg_watch_mask"]], "nrf_mwu_region_watch_enable": [[90, 3, 1, "c.nrf_mwu_region_watch_enable", "p_reg"], [90, 3, 1, "c.nrf_mwu_region_watch_enable", "reg_watch_mask"]], "nrf_mwu_region_watch_get": [[90, 3, 1, "c.nrf_mwu_region_watch_get", "p_reg"]], "nrf_mwu_region_watch_t": [[90, 1, 1, "c.nrf_mwu_region_watch_t.NRF_MWU_WATCH_PREGION0_READ", "NRF_MWU_WATCH_PREGION0_READ"], [90, 1, 1, "c.nrf_mwu_region_watch_t.NRF_MWU_WATCH_PREGION0_WRITE", "NRF_MWU_WATCH_PREGION0_WRITE"], [90, 1, 1, "c.nrf_mwu_region_watch_t.NRF_MWU_WATCH_PREGION1_READ", "NRF_MWU_WATCH_PREGION1_READ"], [90, 1, 1, "c.nrf_mwu_region_watch_t.NRF_MWU_WATCH_PREGION1_WRITE", "NRF_MWU_WATCH_PREGION1_WRITE"], [90, 1, 1, "c.nrf_mwu_region_watch_t.NRF_MWU_WATCH_REGION0_READ", "NRF_MWU_WATCH_REGION0_READ"], [90, 1, 1, "c.nrf_mwu_region_watch_t.NRF_MWU_WATCH_REGION0_WRITE", "NRF_MWU_WATCH_REGION0_WRITE"], [90, 1, 1, "c.nrf_mwu_region_watch_t.NRF_MWU_WATCH_REGION1_READ", "NRF_MWU_WATCH_REGION1_READ"], [90, 1, 1, "c.nrf_mwu_region_watch_t.NRF_MWU_WATCH_REGION1_WRITE", "NRF_MWU_WATCH_REGION1_WRITE"], [90, 1, 1, "c.nrf_mwu_region_watch_t.NRF_MWU_WATCH_REGION2_READ", "NRF_MWU_WATCH_REGION2_READ"], [90, 1, 1, "c.nrf_mwu_region_watch_t.NRF_MWU_WATCH_REGION2_WRITE", "NRF_MWU_WATCH_REGION2_WRITE"], [90, 1, 1, "c.nrf_mwu_region_watch_t.NRF_MWU_WATCH_REGION3_READ", "NRF_MWU_WATCH_REGION3_READ"], [90, 1, 1, "c.nrf_mwu_region_watch_t.NRF_MWU_WATCH_REGION3_WRITE", "NRF_MWU_WATCH_REGION3_WRITE"]], "nrf_mwu_subregions_configure": [[90, 3, 1, "c.nrf_mwu_subregions_configure", "p_reg"], [90, 3, 1, "c.nrf_mwu_subregions_configure", "per_reg_idx"], [90, 3, 1, "c.nrf_mwu_subregions_configure", "subregion_mask"]], "nrf_mwu_subregions_read_accesses_clear": [[90, 3, 1, "c.nrf_mwu_subregions_read_accesses_clear", "p_reg"], [90, 3, 1, "c.nrf_mwu_subregions_read_accesses_clear", "per_reg_idx"], [90, 3, 1, "c.nrf_mwu_subregions_read_accesses_clear", "subregion_mask"]], "nrf_mwu_subregions_read_accesses_get": [[90, 3, 1, "c.nrf_mwu_subregions_read_accesses_get", "p_reg"], [90, 3, 1, "c.nrf_mwu_subregions_read_accesses_get", "per_reg_idx"]], "nrf_mwu_subregions_write_accesses_clear": [[90, 3, 1, "c.nrf_mwu_subregions_write_accesses_clear", "p_reg"], [90, 3, 1, "c.nrf_mwu_subregions_write_accesses_clear", "per_reg_idx"], [90, 3, 1, "c.nrf_mwu_subregions_write_accesses_clear", "subregion_mask"]], "nrf_mwu_subregions_write_accesses_get": [[90, 3, 1, "c.nrf_mwu_subregions_write_accesses_get", "p_reg"], [90, 3, 1, "c.nrf_mwu_subregions_write_accesses_get", "per_reg_idx"]], "nrf_mwu_user_region_range_set": [[90, 3, 1, "c.nrf_mwu_user_region_range_set", "end_addr"], [90, 3, 1, "c.nrf_mwu_user_region_range_set", "p_reg"], [90, 3, 1, "c.nrf_mwu_user_region_range_set", "region_idx"], [90, 3, 1, "c.nrf_mwu_user_region_range_set", "start_addr"]], "nrf_nfct_autocolres_disable": [[93, 3, 1, "c.nrf_nfct_autocolres_disable", "p_reg"]], "nrf_nfct_autocolres_enable": [[93, 3, 1, "c.nrf_nfct_autocolres_enable", "p_reg"]], "nrf_nfct_autocolres_is_enabled": [[93, 3, 1, "c.nrf_nfct_autocolres_is_enabled", "p_reg"]], "nrf_nfct_bias_config_get": [[93, 3, 1, "c.nrf_nfct_bias_config_get", "p_bias_config"], [93, 3, 1, "c.nrf_nfct_bias_config_get", "p_reg"]], "nrf_nfct_bias_config_set": [[93, 3, 1, "c.nrf_nfct_bias_config_set", "p_bias_config"], [93, 3, 1, "c.nrf_nfct_bias_config_set", "p_reg"]], "nrf_nfct_bias_config_t": [[93, 6, 1, "c.nrf_nfct_bias_config_t.coarse_ibpsr", "coarse_ibpsr"], [93, 6, 1, "c.nrf_nfct_bias_config_t.reference_volatge", "reference_volatge"], [93, 6, 1, "c.nrf_nfct_bias_config_t.spare", "spare"], [93, 6, 1, "c.nrf_nfct_bias_config_t.trim_ibpsr", "trim_ibpsr"]], "nrf_nfct_error_status_clear": [[93, 3, 1, "c.nrf_nfct_error_status_clear", "error_flag"], [93, 3, 1, "c.nrf_nfct_error_status_clear", "p_reg"]], "nrf_nfct_error_status_get": [[93, 3, 1, "c.nrf_nfct_error_status_get", "p_reg"]], "nrf_nfct_error_status_t": [[93, 1, 1, "c.nrf_nfct_error_status_t.NRF_NFCT_ERROR_FRAMEDELAYTIMEOUT_MASK", "NRF_NFCT_ERROR_FRAMEDELAYTIMEOUT_MASK"], [93, 1, 1, "c.nrf_nfct_error_status_t.NRF_NFCT_ERROR_NFCFIELDTOOSTRONG_MASK", "NRF_NFCT_ERROR_NFCFIELDTOOSTRONG_MASK"], [93, 1, 1, "c.nrf_nfct_error_status_t.NRF_NFCT_ERROR_NFCFIELDTOOWEAK_MASK", "NRF_NFCT_ERROR_NFCFIELDTOOWEAK_MASK"]], "nrf_nfct_event_address_get": [[93, 3, 1, "c.nrf_nfct_event_address_get", "event"], [93, 3, 1, "c.nrf_nfct_event_address_get", "p_reg"]], "nrf_nfct_event_check": [[93, 3, 1, "c.nrf_nfct_event_check", "event"], [93, 3, 1, "c.nrf_nfct_event_check", "p_reg"]], "nrf_nfct_event_clear": [[93, 3, 1, "c.nrf_nfct_event_clear", "event"], [93, 3, 1, "c.nrf_nfct_event_clear", "p_reg"]], "nrf_nfct_event_t": [[93, 1, 1, "c.nrf_nfct_event_t.NRF_NFCT_EVENT_AUTOCOLRESSTARTED", "NRF_NFCT_EVENT_AUTOCOLRESSTARTED"], [93, 1, 1, "c.nrf_nfct_event_t.NRF_NFCT_EVENT_COLLISION", "NRF_NFCT_EVENT_COLLISION"], [93, 1, 1, "c.nrf_nfct_event_t.NRF_NFCT_EVENT_ENDRX", "NRF_NFCT_EVENT_ENDRX"], [93, 1, 1, "c.nrf_nfct_event_t.NRF_NFCT_EVENT_ENDTX", "NRF_NFCT_EVENT_ENDTX"], [93, 1, 1, "c.nrf_nfct_event_t.NRF_NFCT_EVENT_ERROR", "NRF_NFCT_EVENT_ERROR"], [93, 1, 1, "c.nrf_nfct_event_t.NRF_NFCT_EVENT_FIELDDETECTED", "NRF_NFCT_EVENT_FIELDDETECTED"], [93, 1, 1, "c.nrf_nfct_event_t.NRF_NFCT_EVENT_FIELDLOST", "NRF_NFCT_EVENT_FIELDLOST"], [93, 1, 1, "c.nrf_nfct_event_t.NRF_NFCT_EVENT_READY", "NRF_NFCT_EVENT_READY"], [93, 1, 1, "c.nrf_nfct_event_t.NRF_NFCT_EVENT_RXERROR", "NRF_NFCT_EVENT_RXERROR"], [93, 1, 1, "c.nrf_nfct_event_t.NRF_NFCT_EVENT_RXFRAMEEND", "NRF_NFCT_EVENT_RXFRAMEEND"], [93, 1, 1, "c.nrf_nfct_event_t.NRF_NFCT_EVENT_RXFRAMESTART", "NRF_NFCT_EVENT_RXFRAMESTART"], [93, 1, 1, "c.nrf_nfct_event_t.NRF_NFCT_EVENT_SELECTED", "NRF_NFCT_EVENT_SELECTED"], [93, 1, 1, "c.nrf_nfct_event_t.NRF_NFCT_EVENT_STARTED", "NRF_NFCT_EVENT_STARTED"], [93, 1, 1, "c.nrf_nfct_event_t.NRF_NFCT_EVENT_TXFRAMEEND", "NRF_NFCT_EVENT_TXFRAMEEND"], [93, 1, 1, "c.nrf_nfct_event_t.NRF_NFCT_EVENT_TXFRAMESTART", "NRF_NFCT_EVENT_TXFRAMESTART"]], "nrf_nfct_field_state_t": [[93, 1, 1, "c.nrf_nfct_field_state_t.NRF_NFCT_FIELD_STATE_LOCK_MASK", "NRF_NFCT_FIELD_STATE_LOCK_MASK"], [93, 1, 1, "c.nrf_nfct_field_state_t.NRF_NFCT_FIELD_STATE_PRESENT_MASK", "NRF_NFCT_FIELD_STATE_PRESENT_MASK"]], "nrf_nfct_field_status_get": [[93, 3, 1, "c.nrf_nfct_field_status_get", "p_reg"]], "nrf_nfct_frame_delay_max_get": [[93, 3, 1, "c.nrf_nfct_frame_delay_max_get", "p_reg"]], "nrf_nfct_frame_delay_max_set": [[93, 3, 1, "c.nrf_nfct_frame_delay_max_set", "frame_delay_max"], [93, 3, 1, "c.nrf_nfct_frame_delay_max_set", "p_reg"]], "nrf_nfct_frame_delay_min_get": [[93, 3, 1, "c.nrf_nfct_frame_delay_min_get", "p_reg"]], "nrf_nfct_frame_delay_min_set": [[93, 3, 1, "c.nrf_nfct_frame_delay_min_set", "frame_delay_min"], [93, 3, 1, "c.nrf_nfct_frame_delay_min_set", "p_reg"]], "nrf_nfct_frame_delay_mode_get": [[93, 3, 1, "c.nrf_nfct_frame_delay_mode_get", "p_reg"]], "nrf_nfct_frame_delay_mode_set": [[93, 3, 1, "c.nrf_nfct_frame_delay_mode_set", "frame_delay_mode"], [93, 3, 1, "c.nrf_nfct_frame_delay_mode_set", "p_reg"]], "nrf_nfct_frame_delay_mode_t": [[93, 1, 1, "c.nrf_nfct_frame_delay_mode_t.NRF_NFCT_FRAME_DELAY_MODE_EXACTVAL", "NRF_NFCT_FRAME_DELAY_MODE_EXACTVAL"], [93, 1, 1, "c.nrf_nfct_frame_delay_mode_t.NRF_NFCT_FRAME_DELAY_MODE_FREERUN", "NRF_NFCT_FRAME_DELAY_MODE_FREERUN"], [93, 1, 1, "c.nrf_nfct_frame_delay_mode_t.NRF_NFCT_FRAME_DELAY_MODE_WINDOW", "NRF_NFCT_FRAME_DELAY_MODE_WINDOW"], [93, 1, 1, "c.nrf_nfct_frame_delay_mode_t.NRF_NFCT_FRAME_DELAY_MODE_WINDOWGRID", "NRF_NFCT_FRAME_DELAY_MODE_WINDOWGRID"]], "nrf_nfct_int_disable": [[93, 3, 1, "c.nrf_nfct_int_disable", "mask"], [93, 3, 1, "c.nrf_nfct_int_disable", "p_reg"]], "nrf_nfct_int_enable": [[93, 3, 1, "c.nrf_nfct_int_enable", "mask"], [93, 3, 1, "c.nrf_nfct_int_enable", "p_reg"]], "nrf_nfct_int_enable_check": [[93, 3, 1, "c.nrf_nfct_int_enable_check", "mask"], [93, 3, 1, "c.nrf_nfct_int_enable_check", "p_reg"]], "nrf_nfct_int_enable_get": [[93, 3, 1, "c.nrf_nfct_int_enable_get", "p_reg"]], "nrf_nfct_int_mask_t": [[93, 1, 1, "c.nrf_nfct_int_mask_t.NRF_NFCT_INT_AUTOCOLRESSTARTED_MASK", "NRF_NFCT_INT_AUTOCOLRESSTARTED_MASK"], [93, 1, 1, "c.nrf_nfct_int_mask_t.NRF_NFCT_INT_COLLISION_MASK", "NRF_NFCT_INT_COLLISION_MASK"], [93, 1, 1, "c.nrf_nfct_int_mask_t.NRF_NFCT_INT_ENDRX_MASK", "NRF_NFCT_INT_ENDRX_MASK"], [93, 1, 1, "c.nrf_nfct_int_mask_t.NRF_NFCT_INT_ENDTX_MASK", "NRF_NFCT_INT_ENDTX_MASK"], [93, 1, 1, "c.nrf_nfct_int_mask_t.NRF_NFCT_INT_ERROR_MASK", "NRF_NFCT_INT_ERROR_MASK"], [93, 1, 1, "c.nrf_nfct_int_mask_t.NRF_NFCT_INT_FIELDDETECTED_MASK", "NRF_NFCT_INT_FIELDDETECTED_MASK"], [93, 1, 1, "c.nrf_nfct_int_mask_t.NRF_NFCT_INT_FIELDLOST_MASK", "NRF_NFCT_INT_FIELDLOST_MASK"], [93, 1, 1, "c.nrf_nfct_int_mask_t.NRF_NFCT_INT_READY_MASK", "NRF_NFCT_INT_READY_MASK"], [93, 1, 1, "c.nrf_nfct_int_mask_t.NRF_NFCT_INT_RXERROR_MASK", "NRF_NFCT_INT_RXERROR_MASK"], [93, 1, 1, "c.nrf_nfct_int_mask_t.NRF_NFCT_INT_RXFRAMEEND_MASK", "NRF_NFCT_INT_RXFRAMEEND_MASK"], [93, 1, 1, "c.nrf_nfct_int_mask_t.NRF_NFCT_INT_RXFRAMESTART_MASK", "NRF_NFCT_INT_RXFRAMESTART_MASK"], [93, 1, 1, "c.nrf_nfct_int_mask_t.NRF_NFCT_INT_SELECTED_MASK", "NRF_NFCT_INT_SELECTED_MASK"], [93, 1, 1, "c.nrf_nfct_int_mask_t.NRF_NFCT_INT_STARTED_MASK", "NRF_NFCT_INT_STARTED_MASK"], [93, 1, 1, "c.nrf_nfct_int_mask_t.NRF_NFCT_INT_TXFRAMEEND_MASK", "NRF_NFCT_INT_TXFRAMEEND_MASK"], [93, 1, 1, "c.nrf_nfct_int_mask_t.NRF_NFCT_INT_TXFRAMESTART_MASK", "NRF_NFCT_INT_TXFRAMESTART_MASK"]], "nrf_nfct_max_rxtx_length_get": [[93, 3, 1, "c.nrf_nfct_max_rxtx_length_get", "p_reg"]], "nrf_nfct_mod_ctrl_pin_get": [[93, 3, 1, "c.nrf_nfct_mod_ctrl_pin_get", "p_reg"]], "nrf_nfct_mod_ctrl_pin_set": [[93, 3, 1, "c.nrf_nfct_mod_ctrl_pin_set", "mod_ctrl_pin"], [93, 3, 1, "c.nrf_nfct_mod_ctrl_pin_set", "p_reg"]], "nrf_nfct_modulation_ctrl_t": [[93, 1, 1, "c.nrf_nfct_modulation_ctrl_t.NRF_NFCT_MODULATION_CTRL_GPIO", "NRF_NFCT_MODULATION_CTRL_GPIO"], [93, 1, 1, "c.nrf_nfct_modulation_ctrl_t.NRF_NFCT_MODULATION_CTRL_INTERNAL", "NRF_NFCT_MODULATION_CTRL_INTERNAL"], [93, 1, 1, "c.nrf_nfct_modulation_ctrl_t.NRF_NFCT_MODULATION_CTRL_INTERNAL_GPIO", "NRF_NFCT_MODULATION_CTRL_INTERNAL_GPIO"], [93, 1, 1, "c.nrf_nfct_modulation_ctrl_t.NRF_NFCT_MODULATION_CTRL_INVALID", "NRF_NFCT_MODULATION_CTRL_INVALID"]], "nrf_nfct_modulation_output_get": [[93, 3, 1, "c.nrf_nfct_modulation_output_get", "p_reg"]], "nrf_nfct_modulation_output_set": [[93, 3, 1, "c.nrf_nfct_modulation_output_set", "mod_ctrl"], [93, 3, 1, "c.nrf_nfct_modulation_output_set", "p_reg"]], "nrf_nfct_nfcid1_get": [[93, 3, 1, "c.nrf_nfct_nfcid1_get", "p_nfcid1_buf"], [93, 3, 1, "c.nrf_nfct_nfcid1_get", "p_reg"]], "nrf_nfct_nfcid1_set": [[93, 3, 1, "c.nrf_nfct_nfcid1_set", "nfcid1_size"], [93, 3, 1, "c.nrf_nfct_nfcid1_set", "p_nfcid1_buf"], [93, 3, 1, "c.nrf_nfct_nfcid1_set", "p_reg"]], "nrf_nfct_pad_config_enable_check": [[93, 3, 1, "c.nrf_nfct_pad_config_enable_check", "p_reg"]], "nrf_nfct_pad_config_enable_set": [[93, 3, 1, "c.nrf_nfct_pad_config_enable_set", "enable"], [93, 3, 1, "c.nrf_nfct_pad_config_enable_set", "p_reg"]], "nrf_nfct_rx_bits_get": [[93, 3, 1, "c.nrf_nfct_rx_bits_get", "crc_excluded"], [93, 3, 1, "c.nrf_nfct_rx_bits_get", "p_reg"]], "nrf_nfct_rx_frame_config_get": [[93, 3, 1, "c.nrf_nfct_rx_frame_config_get", "p_reg"]], "nrf_nfct_rx_frame_config_set": [[93, 3, 1, "c.nrf_nfct_rx_frame_config_set", "flags"], [93, 3, 1, "c.nrf_nfct_rx_frame_config_set", "p_reg"]], "nrf_nfct_rx_frame_config_t": [[93, 1, 1, "c.nrf_nfct_rx_frame_config_t.NRF_NFCT_RX_FRAME_CONFIG_CRC16", "NRF_NFCT_RX_FRAME_CONFIG_CRC16"], [93, 1, 1, "c.nrf_nfct_rx_frame_config_t.NRF_NFCT_RX_FRAME_CONFIG_PARITY", "NRF_NFCT_RX_FRAME_CONFIG_PARITY"], [93, 1, 1, "c.nrf_nfct_rx_frame_config_t.NRF_NFCT_RX_FRAME_CONFIG_SOF", "NRF_NFCT_RX_FRAME_CONFIG_SOF"]], "nrf_nfct_rx_frame_status_clear": [[93, 3, 1, "c.nrf_nfct_rx_frame_status_clear", "framestatus_flags"], [93, 3, 1, "c.nrf_nfct_rx_frame_status_clear", "p_reg"]], "nrf_nfct_rx_frame_status_get": [[93, 3, 1, "c.nrf_nfct_rx_frame_status_get", "p_reg"]], "nrf_nfct_rx_frame_status_t": [[93, 1, 1, "c.nrf_nfct_rx_frame_status_t.NRF_NFCT_RX_FRAME_STATUS_CRC_MASK", "NRF_NFCT_RX_FRAME_STATUS_CRC_MASK"], [93, 1, 1, "c.nrf_nfct_rx_frame_status_t.NRF_NFCT_RX_FRAME_STATUS_OVERRUN_MASK", "NRF_NFCT_RX_FRAME_STATUS_OVERRUN_MASK"], [93, 1, 1, "c.nrf_nfct_rx_frame_status_t.NRF_NFCT_RX_FRAME_STATUS_PARITY_MASK", "NRF_NFCT_RX_FRAME_STATUS_PARITY_MASK"]], "nrf_nfct_rxtx_buffer_get": [[93, 3, 1, "c.nrf_nfct_rxtx_buffer_get", "p_reg"]], "nrf_nfct_rxtx_buffer_set": [[93, 3, 1, "c.nrf_nfct_rxtx_buffer_set", "max_txrx_len"], [93, 3, 1, "c.nrf_nfct_rxtx_buffer_set", "p_reg"], [93, 3, 1, "c.nrf_nfct_rxtx_buffer_set", "p_rxtx_buf"]], "nrf_nfct_selres_cascade_check": [[93, 3, 1, "c.nrf_nfct_selres_cascade_check", "p_reg"]], "nrf_nfct_selres_get": [[93, 3, 1, "c.nrf_nfct_selres_get", "p_reg"]], "nrf_nfct_selres_protocol_get": [[93, 3, 1, "c.nrf_nfct_selres_protocol_get", "p_reg"]], "nrf_nfct_selres_protocol_set": [[93, 3, 1, "c.nrf_nfct_selres_protocol_set", "p_reg"], [93, 3, 1, "c.nrf_nfct_selres_protocol_set", "sel_res_protocol"]], "nrf_nfct_selres_protocol_t": [[93, 1, 1, "c.nrf_nfct_selres_protocol_t.NRF_NFCT_SELRES_PROTOCOL_NFCDEP", "NRF_NFCT_SELRES_PROTOCOL_NFCDEP"], [93, 1, 1, "c.nrf_nfct_selres_protocol_t.NRF_NFCT_SELRES_PROTOCOL_NFCDEP_T4AT", "NRF_NFCT_SELRES_PROTOCOL_NFCDEP_T4AT"], [93, 1, 1, "c.nrf_nfct_selres_protocol_t.NRF_NFCT_SELRES_PROTOCOL_T2T", "NRF_NFCT_SELRES_PROTOCOL_T2T"], [93, 1, 1, "c.nrf_nfct_selres_protocol_t.NRF_NFCT_SELRES_PROTOCOL_T4AT", "NRF_NFCT_SELRES_PROTOCOL_T4AT"]], "nrf_nfct_selres_set": [[93, 3, 1, "c.nrf_nfct_selres_set", "p_reg"], [93, 3, 1, "c.nrf_nfct_selres_set", "selres"]], "nrf_nfct_sensres_bit_frame_sdd_get": [[93, 3, 1, "c.nrf_nfct_sensres_bit_frame_sdd_get", "p_reg"]], "nrf_nfct_sensres_bit_frame_sdd_set": [[93, 3, 1, "c.nrf_nfct_sensres_bit_frame_sdd_set", "bit_frame_sdd"], [93, 3, 1, "c.nrf_nfct_sensres_bit_frame_sdd_set", "p_reg"]], "nrf_nfct_sensres_bit_frame_sdd_t": [[93, 1, 1, "c.nrf_nfct_sensres_bit_frame_sdd_t.NRF_NFCT_SENSRES_BIT_FRAME_SDD_00000", "NRF_NFCT_SENSRES_BIT_FRAME_SDD_00000"], [93, 1, 1, "c.nrf_nfct_sensres_bit_frame_sdd_t.NRF_NFCT_SENSRES_BIT_FRAME_SDD_00001", "NRF_NFCT_SENSRES_BIT_FRAME_SDD_00001"], [93, 1, 1, "c.nrf_nfct_sensres_bit_frame_sdd_t.NRF_NFCT_SENSRES_BIT_FRAME_SDD_00010", "NRF_NFCT_SENSRES_BIT_FRAME_SDD_00010"], [93, 1, 1, "c.nrf_nfct_sensres_bit_frame_sdd_t.NRF_NFCT_SENSRES_BIT_FRAME_SDD_00100", "NRF_NFCT_SENSRES_BIT_FRAME_SDD_00100"], [93, 1, 1, "c.nrf_nfct_sensres_bit_frame_sdd_t.NRF_NFCT_SENSRES_BIT_FRAME_SDD_01000", "NRF_NFCT_SENSRES_BIT_FRAME_SDD_01000"], [93, 1, 1, "c.nrf_nfct_sensres_bit_frame_sdd_t.NRF_NFCT_SENSRES_BIT_FRAME_SDD_10000", "NRF_NFCT_SENSRES_BIT_FRAME_SDD_10000"]], "nrf_nfct_sensres_nfcid1_size_get": [[93, 3, 1, "c.nrf_nfct_sensres_nfcid1_size_get", "p_reg"]], "nrf_nfct_sensres_nfcid1_size_set": [[93, 3, 1, "c.nrf_nfct_sensres_nfcid1_size_set", "nfcid1_size"], [93, 3, 1, "c.nrf_nfct_sensres_nfcid1_size_set", "p_reg"]], "nrf_nfct_sensres_nfcid1_size_t": [[93, 1, 1, "c.nrf_nfct_sensres_nfcid1_size_t.NRF_NFCT_SENSRES_NFCID1_SIZE_DEFAULT", "NRF_NFCT_SENSRES_NFCID1_SIZE_DEFAULT"], [93, 1, 1, "c.nrf_nfct_sensres_nfcid1_size_t.NRF_NFCT_SENSRES_NFCID1_SIZE_DOUBLE", "NRF_NFCT_SENSRES_NFCID1_SIZE_DOUBLE"], [93, 1, 1, "c.nrf_nfct_sensres_nfcid1_size_t.NRF_NFCT_SENSRES_NFCID1_SIZE_SINGLE", "NRF_NFCT_SENSRES_NFCID1_SIZE_SINGLE"], [93, 1, 1, "c.nrf_nfct_sensres_nfcid1_size_t.NRF_NFCT_SENSRES_NFCID1_SIZE_TRIPLE", "NRF_NFCT_SENSRES_NFCID1_SIZE_TRIPLE"]], "nrf_nfct_sensres_platform_config_get": [[93, 3, 1, "c.nrf_nfct_sensres_platform_config_get", "p_reg"]], "nrf_nfct_sensres_platform_config_set": [[93, 3, 1, "c.nrf_nfct_sensres_platform_config_set", "p_reg"], [93, 3, 1, "c.nrf_nfct_sensres_platform_config_set", "platform_config"]], "nrf_nfct_sensres_platform_config_t": [[93, 1, 1, "c.nrf_nfct_sensres_platform_config_t.NRF_NFCT_SENSRES_PLATFORM_CONFIG_OTHER", "NRF_NFCT_SENSRES_PLATFORM_CONFIG_OTHER"], [93, 1, 1, "c.nrf_nfct_sensres_platform_config_t.NRF_NFCT_SENSRES_PLATFORM_CONFIG_T1T", "NRF_NFCT_SENSRES_PLATFORM_CONFIG_T1T"]], "nrf_nfct_short_mask_t": [[93, 1, 1, "c.nrf_nfct_short_mask_t.NRF_NFCT_SHORT_FIELDDETECTED_ACTIVATE_MASK", "NRF_NFCT_SHORT_FIELDDETECTED_ACTIVATE_MASK"], [93, 1, 1, "c.nrf_nfct_short_mask_t.NRF_NFCT_SHORT_FIELDLOST_SENSE_MASK", "NRF_NFCT_SHORT_FIELDLOST_SENSE_MASK"], [93, 1, 1, "c.nrf_nfct_short_mask_t.NRF_NFCT_SHORT_TXFRAMEEND_ENABLERXDATA_MASK", "NRF_NFCT_SHORT_TXFRAMEEND_ENABLERXDATA_MASK"]], "nrf_nfct_shorts_disable": [[93, 3, 1, "c.nrf_nfct_shorts_disable", "p_reg"], [93, 3, 1, "c.nrf_nfct_shorts_disable", "short_mask"]], "nrf_nfct_shorts_enable": [[93, 3, 1, "c.nrf_nfct_shorts_enable", "p_reg"], [93, 3, 1, "c.nrf_nfct_shorts_enable", "short_mask"]], "nrf_nfct_shorts_get": [[93, 3, 1, "c.nrf_nfct_shorts_get", "p_reg"]], "nrf_nfct_shorts_set": [[93, 3, 1, "c.nrf_nfct_shorts_set", "p_reg"], [93, 3, 1, "c.nrf_nfct_shorts_set", "short_mask"]], "nrf_nfct_sleep_state_get": [[93, 3, 1, "c.nrf_nfct_sleep_state_get", "p_reg"]], "nrf_nfct_sleep_state_t": [[93, 1, 1, "c.nrf_nfct_sleep_state_t.NRF_NFCT_SLEEP_STATE_IDLE", "NRF_NFCT_SLEEP_STATE_IDLE"], [93, 1, 1, "c.nrf_nfct_sleep_state_t.NRF_NFCT_SLEEP_STATE_SLEEP_A", "NRF_NFCT_SLEEP_STATE_SLEEP_A"]], "nrf_nfct_tag_state_get": [[93, 3, 1, "c.nrf_nfct_tag_state_get", "p_reg"]], "nrf_nfct_tag_state_t": [[93, 1, 1, "c.nrf_nfct_tag_state_t.NRF_NFCT_TAG_STATE_DISABLED", "NRF_NFCT_TAG_STATE_DISABLED"], [93, 1, 1, "c.nrf_nfct_tag_state_t.NRF_NFCT_TAG_STATE_FRAME_DELAY", "NRF_NFCT_TAG_STATE_FRAME_DELAY"], [93, 1, 1, "c.nrf_nfct_tag_state_t.NRF_NFCT_TAG_STATE_IDLE", "NRF_NFCT_TAG_STATE_IDLE"], [93, 1, 1, "c.nrf_nfct_tag_state_t.NRF_NFCT_TAG_STATE_RAMP_UP", "NRF_NFCT_TAG_STATE_RAMP_UP"], [93, 1, 1, "c.nrf_nfct_tag_state_t.NRF_NFCT_TAG_STATE_RECEIVE", "NRF_NFCT_TAG_STATE_RECEIVE"], [93, 1, 1, "c.nrf_nfct_tag_state_t.NRF_NFCT_TAG_STATE_TRANSMIT", "NRF_NFCT_TAG_STATE_TRANSMIT"]], "nrf_nfct_task_address_get": [[93, 3, 1, "c.nrf_nfct_task_address_get", "p_reg"], [93, 3, 1, "c.nrf_nfct_task_address_get", "task"]], "nrf_nfct_task_t": [[93, 1, 1, "c.nrf_nfct_task_t.NRF_NFCT_TASK_ACTIVATE", "NRF_NFCT_TASK_ACTIVATE"], [93, 1, 1, "c.nrf_nfct_task_t.NRF_NFCT_TASK_DISABLE", "NRF_NFCT_TASK_DISABLE"], [93, 1, 1, "c.nrf_nfct_task_t.NRF_NFCT_TASK_ENABLERXDATA", "NRF_NFCT_TASK_ENABLERXDATA"], [93, 1, 1, "c.nrf_nfct_task_t.NRF_NFCT_TASK_GOIDLE", "NRF_NFCT_TASK_GOIDLE"], [93, 1, 1, "c.nrf_nfct_task_t.NRF_NFCT_TASK_GOSLEEP", "NRF_NFCT_TASK_GOSLEEP"], [93, 1, 1, "c.nrf_nfct_task_t.NRF_NFCT_TASK_SENSE", "NRF_NFCT_TASK_SENSE"], [93, 1, 1, "c.nrf_nfct_task_t.NRF_NFCT_TASK_STARTTX", "NRF_NFCT_TASK_STARTTX"], [93, 1, 1, "c.nrf_nfct_task_t.NRF_NFCT_TASK_STOPTX", "NRF_NFCT_TASK_STOPTX"]], "nrf_nfct_task_trigger": [[93, 3, 1, "c.nrf_nfct_task_trigger", "p_reg"], [93, 3, 1, "c.nrf_nfct_task_trigger", "task"]], "nrf_nfct_tx_bits_get": [[93, 3, 1, "c.nrf_nfct_tx_bits_get", "p_reg"]], "nrf_nfct_tx_bits_set": [[93, 3, 1, "c.nrf_nfct_tx_bits_set", "p_reg"], [93, 3, 1, "c.nrf_nfct_tx_bits_set", "tx_bits"]], "nrf_nfct_tx_frame_config_get": [[93, 3, 1, "c.nrf_nfct_tx_frame_config_get", "p_reg"]], "nrf_nfct_tx_frame_config_set": [[93, 3, 1, "c.nrf_nfct_tx_frame_config_set", "flags"], [93, 3, 1, "c.nrf_nfct_tx_frame_config_set", "p_reg"]], "nrf_nfct_tx_frame_config_t": [[93, 1, 1, "c.nrf_nfct_tx_frame_config_t.NRF_NFCT_TX_FRAME_CONFIG_CRC16", "NRF_NFCT_TX_FRAME_CONFIG_CRC16"], [93, 1, 1, "c.nrf_nfct_tx_frame_config_t.NRF_NFCT_TX_FRAME_CONFIG_DISCARD_START", "NRF_NFCT_TX_FRAME_CONFIG_DISCARD_START"], [93, 1, 1, "c.nrf_nfct_tx_frame_config_t.NRF_NFCT_TX_FRAME_CONFIG_PARITY", "NRF_NFCT_TX_FRAME_CONFIG_PARITY"], [93, 1, 1, "c.nrf_nfct_tx_frame_config_t.NRF_NFCT_TX_FRAME_CONFIG_SOF", "NRF_NFCT_TX_FRAME_CONFIG_SOF"]], "nrf_nvmc_buffer_read": [[96, 3, 1, "c.nrf_nvmc_buffer_read", "address"], [96, 3, 1, "c.nrf_nvmc_buffer_read", "dst"], [96, 3, 1, "c.nrf_nvmc_buffer_read", "num_bytes"]], "nrf_nvmc_byte_read": [[96, 3, 1, "c.nrf_nvmc_byte_read", "address"]], "nrf_nvmc_erase_all_start": [[96, 3, 1, "c.nrf_nvmc_erase_all_start", "p_reg"]], "nrf_nvmc_halfword_read": [[96, 3, 1, "c.nrf_nvmc_halfword_read", "address"]], "nrf_nvmc_mode_set": [[96, 3, 1, "c.nrf_nvmc_mode_set", "mode"], [96, 3, 1, "c.nrf_nvmc_mode_set", "p_reg"]], "nrf_nvmc_mode_t": [[96, 1, 1, "c.nrf_nvmc_mode_t.NRF_NVMC_MODE_ERASE", "NRF_NVMC_MODE_ERASE"], [96, 1, 1, "c.nrf_nvmc_mode_t.NRF_NVMC_MODE_READONLY", "NRF_NVMC_MODE_READONLY"], [96, 1, 1, "c.nrf_nvmc_mode_t.NRF_NVMC_MODE_WRITE", "NRF_NVMC_MODE_WRITE"]], "nrf_nvmc_nonsecure_mode_set": [[96, 3, 1, "c.nrf_nvmc_nonsecure_mode_set", "mode"], [96, 3, 1, "c.nrf_nvmc_nonsecure_mode_set", "p_reg"]], "nrf_nvmc_ns_mode_t": [[96, 1, 1, "c.nrf_nvmc_ns_mode_t.NRF_NVMC_NS_MODE_ERASE", "NRF_NVMC_NS_MODE_ERASE"], [96, 1, 1, "c.nrf_nvmc_ns_mode_t.NRF_NVMC_NS_MODE_READONLY", "NRF_NVMC_NS_MODE_READONLY"], [96, 1, 1, "c.nrf_nvmc_ns_mode_t.NRF_NVMC_NS_MODE_WRITE", "NRF_NVMC_NS_MODE_WRITE"]], "nrf_nvmc_page_erase_start": [[96, 3, 1, "c.nrf_nvmc_page_erase_start", "p_reg"], [96, 3, 1, "c.nrf_nvmc_page_erase_start", "page_addr"]], "nrf_nvmc_page_partial_erase_start": [[96, 3, 1, "c.nrf_nvmc_page_partial_erase_start", "p_reg"], [96, 3, 1, "c.nrf_nvmc_page_partial_erase_start", "page_addr"]], "nrf_nvmc_partial_erase_duration_get": [[96, 3, 1, "c.nrf_nvmc_partial_erase_duration_get", "p_reg"]], "nrf_nvmc_partial_erase_duration_set": [[96, 3, 1, "c.nrf_nvmc_partial_erase_duration_set", "duration_ms"], [96, 3, 1, "c.nrf_nvmc_partial_erase_duration_set", "p_reg"]], "nrf_nvmc_ready_check": [[96, 3, 1, "c.nrf_nvmc_ready_check", "p_reg"]], "nrf_nvmc_uicr_erase_start": [[96, 3, 1, "c.nrf_nvmc_uicr_erase_start", "p_reg"]], "nrf_nvmc_word_read": [[96, 3, 1, "c.nrf_nvmc_word_read", "address"]], "nrf_nvmc_word_write": [[96, 3, 1, "c.nrf_nvmc_word_write", "address"], [96, 3, 1, "c.nrf_nvmc_word_write", "value"]], "nrf_nvmc_write_ready_check": [[96, 3, 1, "c.nrf_nvmc_write_ready_check", "p_reg"]], "nrf_oscillators_hfxo_cap_set": [[98, 3, 1, "c.nrf_oscillators_hfxo_cap_set", "cap_value"], [98, 3, 1, "c.nrf_oscillators_hfxo_cap_set", "enable"], [98, 3, 1, "c.nrf_oscillators_hfxo_cap_set", "p_reg"]], "nrf_oscillators_hfxo_clock_quality_get": [[98, 3, 1, "c.nrf_oscillators_hfxo_clock_quality_get", "p_reg"]], "nrf_oscillators_hfxo_clock_quality_t": [[98, 1, 1, "c.nrf_oscillators_hfxo_clock_quality_t.NRF_OSCILLATORS_HFXO_CLOCK_QUALITY_NONE", "NRF_OSCILLATORS_HFXO_CLOCK_QUALITY_NONE"], [98, 1, 1, "c.nrf_oscillators_hfxo_clock_quality_t.NRF_OSCILLATORS_HFXO_CLOCK_QUALITY_STARTED", "NRF_OSCILLATORS_HFXO_CLOCK_QUALITY_STARTED"], [98, 1, 1, "c.nrf_oscillators_hfxo_clock_quality_t.NRF_OSCILLATORS_HFXO_CLOCK_QUALITY_STARTING", "NRF_OSCILLATORS_HFXO_CLOCK_QUALITY_STARTING"]], "nrf_oscillators_lfxo_bypass_set": [[98, 3, 1, "c.nrf_oscillators_lfxo_bypass_set", "enable"], [98, 3, 1, "c.nrf_oscillators_lfxo_bypass_set", "p_reg"]], "nrf_oscillators_lfxo_cap_set": [[98, 3, 1, "c.nrf_oscillators_lfxo_cap_set", "cap"], [98, 3, 1, "c.nrf_oscillators_lfxo_cap_set", "p_reg"]], "nrf_oscillators_pll_freq_get": [[98, 3, 1, "c.nrf_oscillators_pll_freq_get", "p_reg"]], "nrf_oscillators_pll_freq_set": [[98, 3, 1, "c.nrf_oscillators_pll_freq_set", "freq"], [98, 3, 1, "c.nrf_oscillators_pll_freq_set", "p_reg"]], "nrf_oscillators_pll_freq_t": [[98, 1, 1, "c.nrf_oscillators_pll_freq_t.NRF_OSCILLATORS_PLL_FREQ_128M", "NRF_OSCILLATORS_PLL_FREQ_128M"], [98, 1, 1, "c.nrf_oscillators_pll_freq_t.NRF_OSCILLATORS_PLL_FREQ_64M", "NRF_OSCILLATORS_PLL_FREQ_64M"]], "nrf_pdm_buffer_get": [[100, 3, 1, "c.nrf_pdm_buffer_get", "p_reg"]], "nrf_pdm_buffer_set": [[100, 3, 1, "c.nrf_pdm_buffer_set", "num"], [100, 3, 1, "c.nrf_pdm_buffer_set", "p_buffer"], [100, 3, 1, "c.nrf_pdm_buffer_set", "p_reg"]], "nrf_pdm_clk_pin_get": [[100, 3, 1, "c.nrf_pdm_clk_pin_get", "p_reg"]], "nrf_pdm_clock_get": [[100, 3, 1, "c.nrf_pdm_clock_get", "p_reg"]], "nrf_pdm_clock_set": [[100, 3, 1, "c.nrf_pdm_clock_set", "p_reg"], [100, 3, 1, "c.nrf_pdm_clock_set", "pdm_freq"]], "nrf_pdm_din_pin_get": [[100, 3, 1, "c.nrf_pdm_din_pin_get", "p_reg"]], "nrf_pdm_disable": [[100, 3, 1, "c.nrf_pdm_disable", "p_reg"]], "nrf_pdm_edge_t": [[100, 1, 1, "c.nrf_pdm_edge_t.NRF_PDM_EDGE_LEFTFALLING", "NRF_PDM_EDGE_LEFTFALLING"], [100, 1, 1, "c.nrf_pdm_edge_t.NRF_PDM_EDGE_LEFTRISING", "NRF_PDM_EDGE_LEFTRISING"]], "nrf_pdm_enable": [[100, 3, 1, "c.nrf_pdm_enable", "p_reg"]], "nrf_pdm_enable_check": [[100, 3, 1, "c.nrf_pdm_enable_check", "p_reg"]], "nrf_pdm_event_address_get": [[100, 3, 1, "c.nrf_pdm_event_address_get", "event"], [100, 3, 1, "c.nrf_pdm_event_address_get", "p_reg"]], "nrf_pdm_event_check": [[100, 3, 1, "c.nrf_pdm_event_check", "event"], [100, 3, 1, "c.nrf_pdm_event_check", "p_reg"]], "nrf_pdm_event_clear": [[100, 3, 1, "c.nrf_pdm_event_clear", "event"], [100, 3, 1, "c.nrf_pdm_event_clear", "p_reg"]], "nrf_pdm_event_t": [[100, 1, 1, "c.nrf_pdm_event_t.NRF_PDM_EVENT_END", "NRF_PDM_EVENT_END"], [100, 1, 1, "c.nrf_pdm_event_t.NRF_PDM_EVENT_STARTED", "NRF_PDM_EVENT_STARTED"], [100, 1, 1, "c.nrf_pdm_event_t.NRF_PDM_EVENT_STOPPED", "NRF_PDM_EVENT_STOPPED"]], "nrf_pdm_freq_t": [[100, 1, 1, "c.nrf_pdm_freq_t.NRF_PDM_FREQ_1000K", "NRF_PDM_FREQ_1000K"], [100, 1, 1, "c.nrf_pdm_freq_t.NRF_PDM_FREQ_1032K", "NRF_PDM_FREQ_1032K"], [100, 1, 1, "c.nrf_pdm_freq_t.NRF_PDM_FREQ_1067K", "NRF_PDM_FREQ_1067K"], [100, 1, 1, "c.nrf_pdm_freq_t.NRF_PDM_FREQ_1231K", "NRF_PDM_FREQ_1231K"], [100, 1, 1, "c.nrf_pdm_freq_t.NRF_PDM_FREQ_1280K", "NRF_PDM_FREQ_1280K"], [100, 1, 1, "c.nrf_pdm_freq_t.NRF_PDM_FREQ_1333K", "NRF_PDM_FREQ_1333K"]], "nrf_pdm_gain_get": [[100, 3, 1, "c.nrf_pdm_gain_get", "p_gain_l"], [100, 3, 1, "c.nrf_pdm_gain_get", "p_gain_r"], [100, 3, 1, "c.nrf_pdm_gain_get", "p_reg"]], "nrf_pdm_gain_set": [[100, 3, 1, "c.nrf_pdm_gain_set", "gain_l"], [100, 3, 1, "c.nrf_pdm_gain_set", "gain_r"], [100, 3, 1, "c.nrf_pdm_gain_set", "p_reg"]], "nrf_pdm_int_disable": [[100, 3, 1, "c.nrf_pdm_int_disable", "mask"], [100, 3, 1, "c.nrf_pdm_int_disable", "p_reg"]], "nrf_pdm_int_enable": [[100, 3, 1, "c.nrf_pdm_int_enable", "mask"], [100, 3, 1, "c.nrf_pdm_int_enable", "p_reg"]], "nrf_pdm_int_enable_check": [[100, 3, 1, "c.nrf_pdm_int_enable_check", "mask"], [100, 3, 1, "c.nrf_pdm_int_enable_check", "p_reg"]], "nrf_pdm_int_mask_t": [[100, 1, 1, "c.nrf_pdm_int_mask_t.NRF_PDM_INT_END", "NRF_PDM_INT_END"], [100, 1, 1, "c.nrf_pdm_int_mask_t.NRF_PDM_INT_STARTED", "NRF_PDM_INT_STARTED"], [100, 1, 1, "c.nrf_pdm_int_mask_t.NRF_PDM_INT_STOPPED", "NRF_PDM_INT_STOPPED"]], "nrf_pdm_mclksrc_configure": [[100, 3, 1, "c.nrf_pdm_mclksrc_configure", "mclksrc"], [100, 3, 1, "c.nrf_pdm_mclksrc_configure", "p_reg"]], "nrf_pdm_mclksrc_t": [[100, 1, 1, "c.nrf_pdm_mclksrc_t.NRF_PDM_MCLKSRC_ACLK", "NRF_PDM_MCLKSRC_ACLK"], [100, 1, 1, "c.nrf_pdm_mclksrc_t.NRF_PDM_MCLKSRC_PCLK32M", "NRF_PDM_MCLKSRC_PCLK32M"]], "nrf_pdm_mode_get": [[100, 3, 1, "c.nrf_pdm_mode_get", "p_pdm_edge"], [100, 3, 1, "c.nrf_pdm_mode_get", "p_pdm_mode"], [100, 3, 1, "c.nrf_pdm_mode_get", "p_reg"]], "nrf_pdm_mode_set": [[100, 3, 1, "c.nrf_pdm_mode_set", "p_reg"], [100, 3, 1, "c.nrf_pdm_mode_set", "pdm_edge"], [100, 3, 1, "c.nrf_pdm_mode_set", "pdm_mode"]], "nrf_pdm_mode_t": [[100, 1, 1, "c.nrf_pdm_mode_t.NRF_PDM_MODE_MONO", "NRF_PDM_MODE_MONO"], [100, 1, 1, "c.nrf_pdm_mode_t.NRF_PDM_MODE_STEREO", "NRF_PDM_MODE_STEREO"]], "nrf_pdm_psel_connect": [[100, 3, 1, "c.nrf_pdm_psel_connect", "p_reg"], [100, 3, 1, "c.nrf_pdm_psel_connect", "psel_clk"], [100, 3, 1, "c.nrf_pdm_psel_connect", "psel_din"]], "nrf_pdm_psel_disconnect": [[100, 3, 1, "c.nrf_pdm_psel_disconnect", "p_reg"]], "nrf_pdm_publish_clear": [[100, 3, 1, "c.nrf_pdm_publish_clear", "event"], [100, 3, 1, "c.nrf_pdm_publish_clear", "p_reg"]], "nrf_pdm_publish_set": [[100, 3, 1, "c.nrf_pdm_publish_set", "channel"], [100, 3, 1, "c.nrf_pdm_publish_set", "event"], [100, 3, 1, "c.nrf_pdm_publish_set", "p_reg"]], "nrf_pdm_ratio_set": [[100, 3, 1, "c.nrf_pdm_ratio_set", "p_reg"], [100, 3, 1, "c.nrf_pdm_ratio_set", "ratio"]], "nrf_pdm_ratio_t": [[100, 1, 1, "c.nrf_pdm_ratio_t.NRF_PDM_RATIO_64X", "NRF_PDM_RATIO_64X"], [100, 1, 1, "c.nrf_pdm_ratio_t.NRF_PDM_RATIO_80X", "NRF_PDM_RATIO_80X"]], "nrf_pdm_subscribe_clear": [[100, 3, 1, "c.nrf_pdm_subscribe_clear", "p_reg"], [100, 3, 1, "c.nrf_pdm_subscribe_clear", "task"]], "nrf_pdm_subscribe_set": [[100, 3, 1, "c.nrf_pdm_subscribe_set", "channel"], [100, 3, 1, "c.nrf_pdm_subscribe_set", "p_reg"], [100, 3, 1, "c.nrf_pdm_subscribe_set", "task"]], "nrf_pdm_task_address_get": [[100, 3, 1, "c.nrf_pdm_task_address_get", "p_reg"], [100, 3, 1, "c.nrf_pdm_task_address_get", "task"]], "nrf_pdm_task_t": [[100, 1, 1, "c.nrf_pdm_task_t.NRF_PDM_TASK_START", "NRF_PDM_TASK_START"], [100, 1, 1, "c.nrf_pdm_task_t.NRF_PDM_TASK_STOP", "NRF_PDM_TASK_STOP"]], "nrf_pdm_task_trigger": [[100, 3, 1, "c.nrf_pdm_task_trigger", "p_reg"], [100, 3, 1, "c.nrf_pdm_task_trigger", "task"]], "nrf_power_abb_busy_check": [[104, 3, 1, "c.nrf_power_abb_busy_check", "domain_idx"], [104, 3, 1, "c.nrf_power_abb_busy_check", "p_reg"]], "nrf_power_abb_config_get": [[104, 3, 1, "c.nrf_power_abb_config_get", "domain_idx"], [104, 3, 1, "c.nrf_power_abb_config_get", "p_config"], [104, 3, 1, "c.nrf_power_abb_config_get", "p_reg"]], "nrf_power_abb_config_set": [[104, 3, 1, "c.nrf_power_abb_config_set", "domain_idx"], [104, 3, 1, "c.nrf_power_abb_config_set", "p_config"], [104, 3, 1, "c.nrf_power_abb_config_set", "p_reg"]], "nrf_power_abb_config_t": [[104, 6, 1, "c.nrf_power_abb_config_t.op_point", "op_point"], [104, 6, 1, "c.nrf_power_abb_config_t.override_enable", "override_enable"], [104, 6, 1, "c.nrf_power_abb_config_t.override_value", "override_value"]], "nrf_power_abb_force_lock_check": [[104, 3, 1, "c.nrf_power_abb_force_lock_check", "domain_idx"], [104, 3, 1, "c.nrf_power_abb_force_lock_check", "p_reg"]], "nrf_power_abb_force_lock_set": [[104, 3, 1, "c.nrf_power_abb_force_lock_set", "domain_idx"], [104, 3, 1, "c.nrf_power_abb_force_lock_set", "enable"], [104, 3, 1, "c.nrf_power_abb_force_lock_set", "p_reg"]], "nrf_power_bils_check": [[104, 3, 1, "c.nrf_power_bils_check", "p_reg"]], "nrf_power_bils_set": [[104, 3, 1, "c.nrf_power_bils_set", "enable"], [104, 3, 1, "c.nrf_power_bils_set", "p_reg"]], "nrf_power_dcdcen_get": [[104, 3, 1, "c.nrf_power_dcdcen_get", "p_reg"]], "nrf_power_dcdcen_set": [[104, 3, 1, "c.nrf_power_dcdcen_set", "enable"], [104, 3, 1, "c.nrf_power_dcdcen_set", "p_reg"]], "nrf_power_dcdcen_vddh_get": [[104, 3, 1, "c.nrf_power_dcdcen_vddh_get", "p_reg"]], "nrf_power_dcdcen_vddh_set": [[104, 3, 1, "c.nrf_power_dcdcen_vddh_set", "enable"], [104, 3, 1, "c.nrf_power_dcdcen_vddh_set", "p_reg"]], "nrf_power_event_address_get": [[104, 3, 1, "c.nrf_power_event_address_get", "event"], [104, 3, 1, "c.nrf_power_event_address_get", "p_reg"]], "nrf_power_event_check": [[104, 3, 1, "c.nrf_power_event_check", "event"], [104, 3, 1, "c.nrf_power_event_check", "p_reg"]], "nrf_power_event_clear": [[104, 3, 1, "c.nrf_power_event_clear", "event"], [104, 3, 1, "c.nrf_power_event_clear", "p_reg"]], "nrf_power_event_get_and_clear": [[104, 3, 1, "c.nrf_power_event_get_and_clear", "event"], [104, 3, 1, "c.nrf_power_event_get_and_clear", "p_reg"]], "nrf_power_event_t": [[104, 1, 1, "c.nrf_power_event_t.NRF_POWER_EVENT_ABB_LOCK_0", "NRF_POWER_EVENT_ABB_LOCK_0"], [104, 1, 1, "c.nrf_power_event_t.NRF_POWER_EVENT_ABB_LOCK_1", "NRF_POWER_EVENT_ABB_LOCK_1"], [104, 1, 1, "c.nrf_power_event_t.NRF_POWER_EVENT_POFWARN", "NRF_POWER_EVENT_POFWARN"], [104, 1, 1, "c.nrf_power_event_t.NRF_POWER_EVENT_REGULATOR_UPDATED", "NRF_POWER_EVENT_REGULATOR_UPDATED"], [104, 1, 1, "c.nrf_power_event_t.NRF_POWER_EVENT_SEMAPHORE_ACQUIRED", "NRF_POWER_EVENT_SEMAPHORE_ACQUIRED"], [104, 1, 1, "c.nrf_power_event_t.NRF_POWER_EVENT_SEMAPHORE_RELEASED", "NRF_POWER_EVENT_SEMAPHORE_RELEASED"], [104, 1, 1, "c.nrf_power_event_t.NRF_POWER_EVENT_SLEEPENTER", "NRF_POWER_EVENT_SLEEPENTER"], [104, 1, 1, "c.nrf_power_event_t.NRF_POWER_EVENT_SLEEPEXIT", "NRF_POWER_EVENT_SLEEPEXIT"], [104, 1, 1, "c.nrf_power_event_t.NRF_POWER_EVENT_USBDETECTED", "NRF_POWER_EVENT_USBDETECTED"], [104, 1, 1, "c.nrf_power_event_t.NRF_POWER_EVENT_USBPWRRDY", "NRF_POWER_EVENT_USBPWRRDY"], [104, 1, 1, "c.nrf_power_event_t.NRF_POWER_EVENT_USBREMOVED", "NRF_POWER_EVENT_USBREMOVED"]], "nrf_power_gpregret_get": [[104, 3, 1, "c.nrf_power_gpregret_get", "p_reg"], [104, 3, 1, "c.nrf_power_gpregret_get", "reg_num"]], "nrf_power_gpregret_set": [[104, 3, 1, "c.nrf_power_gpregret_set", "p_reg"], [104, 3, 1, "c.nrf_power_gpregret_set", "reg_num"], [104, 3, 1, "c.nrf_power_gpregret_set", "val"]], "nrf_power_int_disable": [[104, 3, 1, "c.nrf_power_int_disable", "mask"], [104, 3, 1, "c.nrf_power_int_disable", "p_reg"]], "nrf_power_int_enable": [[104, 3, 1, "c.nrf_power_int_enable", "mask"], [104, 3, 1, "c.nrf_power_int_enable", "p_reg"]], "nrf_power_int_enable_check": [[104, 3, 1, "c.nrf_power_int_enable_check", "mask"], [104, 3, 1, "c.nrf_power_int_enable_check", "p_reg"]], "nrf_power_int_enable_get": [[104, 3, 1, "c.nrf_power_int_enable_get", "p_reg"]], "nrf_power_int_mask_t": [[104, 1, 1, "c.nrf_power_int_mask_t.NRF_POWER_INT_ABB_LOCK_0", "NRF_POWER_INT_ABB_LOCK_0"], [104, 1, 1, "c.nrf_power_int_mask_t.NRF_POWER_INT_ABB_LOCK_1", "NRF_POWER_INT_ABB_LOCK_1"], [104, 1, 1, "c.nrf_power_int_mask_t.NRF_POWER_INT_POFWARN_MASK", "NRF_POWER_INT_POFWARN_MASK"], [104, 1, 1, "c.nrf_power_int_mask_t.NRF_POWER_INT_REGULATOR_UPDATED", "NRF_POWER_INT_REGULATOR_UPDATED"], [104, 1, 1, "c.nrf_power_int_mask_t.NRF_POWER_INT_SEMAPHORE_ACQUIRED", "NRF_POWER_INT_SEMAPHORE_ACQUIRED"], [104, 1, 1, "c.nrf_power_int_mask_t.NRF_POWER_INT_SEMAPHORE_RELEASED", "NRF_POWER_INT_SEMAPHORE_RELEASED"], [104, 1, 1, "c.nrf_power_int_mask_t.NRF_POWER_INT_SLEEPENTER_MASK", "NRF_POWER_INT_SLEEPENTER_MASK"], [104, 1, 1, "c.nrf_power_int_mask_t.NRF_POWER_INT_SLEEPEXIT_MASK", "NRF_POWER_INT_SLEEPEXIT_MASK"], [104, 1, 1, "c.nrf_power_int_mask_t.NRF_POWER_INT_USBDETECTED_MASK", "NRF_POWER_INT_USBDETECTED_MASK"], [104, 1, 1, "c.nrf_power_int_mask_t.NRF_POWER_INT_USBPWRRDY_MASK", "NRF_POWER_INT_USBPWRRDY_MASK"], [104, 1, 1, "c.nrf_power_int_mask_t.NRF_POWER_INT_USBREMOVED_MASK", "NRF_POWER_INT_USBREMOVED_MASK"]], "nrf_power_mainregstatus_get": [[104, 3, 1, "c.nrf_power_mainregstatus_get", "p_reg"]], "nrf_power_mainregstatus_t": [[104, 1, 1, "c.nrf_power_mainregstatus_t.NRF_POWER_MAINREGSTATUS_HIGH", "NRF_POWER_MAINREGSTATUS_HIGH"], [104, 1, 1, "c.nrf_power_mainregstatus_t.NRF_POWER_MAINREGSTATUS_NORMAL", "NRF_POWER_MAINREGSTATUS_NORMAL"]], "nrf_power_onoffram_mask_t": [[104, 1, 1, "c.nrf_power_onoffram_mask_t.NRF_POWER_OFFRAM0_MASK", "NRF_POWER_OFFRAM0_MASK"], [104, 1, 1, "c.nrf_power_onoffram_mask_t.NRF_POWER_OFFRAM1_MASK", "NRF_POWER_OFFRAM1_MASK"], [104, 1, 1, "c.nrf_power_onoffram_mask_t.NRF_POWER_OFFRAM2_MASK", "NRF_POWER_OFFRAM2_MASK"], [104, 1, 1, "c.nrf_power_onoffram_mask_t.NRF_POWER_OFFRAM3_MASK", "NRF_POWER_OFFRAM3_MASK"], [104, 1, 1, "c.nrf_power_onoffram_mask_t.NRF_POWER_ONRAM0_MASK", "NRF_POWER_ONRAM0_MASK"], [104, 1, 1, "c.nrf_power_onoffram_mask_t.NRF_POWER_ONRAM1_MASK", "NRF_POWER_ONRAM1_MASK"], [104, 1, 1, "c.nrf_power_onoffram_mask_t.NRF_POWER_ONRAM2_MASK", "NRF_POWER_ONRAM2_MASK"], [104, 1, 1, "c.nrf_power_onoffram_mask_t.NRF_POWER_ONRAM3_MASK", "NRF_POWER_ONRAM3_MASK"]], "nrf_power_onoffram_t": [[104, 1, 1, "c.nrf_power_onoffram_t.NRF_POWER_OFFRAM0", "NRF_POWER_OFFRAM0"], [104, 1, 1, "c.nrf_power_onoffram_t.NRF_POWER_OFFRAM1", "NRF_POWER_OFFRAM1"], [104, 1, 1, "c.nrf_power_onoffram_t.NRF_POWER_OFFRAM2", "NRF_POWER_OFFRAM2"], [104, 1, 1, "c.nrf_power_onoffram_t.NRF_POWER_OFFRAM3", "NRF_POWER_OFFRAM3"], [104, 1, 1, "c.nrf_power_onoffram_t.NRF_POWER_ONRAM0", "NRF_POWER_ONRAM0"], [104, 1, 1, "c.nrf_power_onoffram_t.NRF_POWER_ONRAM1", "NRF_POWER_ONRAM1"], [104, 1, 1, "c.nrf_power_onoffram_t.NRF_POWER_ONRAM2", "NRF_POWER_ONRAM2"], [104, 1, 1, "c.nrf_power_onoffram_t.NRF_POWER_ONRAM3", "NRF_POWER_ONRAM3"]], "nrf_power_op_point_t": [[104, 1, 1, "c.nrf_power_op_point_t.NRF_POWER_OP_POINT_0V4", "NRF_POWER_OP_POINT_0V4"], [104, 1, 1, "c.nrf_power_op_point_t.NRF_POWER_OP_POINT_0V5", "NRF_POWER_OP_POINT_0V5"], [104, 1, 1, "c.nrf_power_op_point_t.NRF_POWER_OP_POINT_0V6", "NRF_POWER_OP_POINT_0V6"], [104, 1, 1, "c.nrf_power_op_point_t.NRF_POWER_OP_POINT_0V8", "NRF_POWER_OP_POINT_0V8"]], "nrf_power_override_value_t": [[104, 1, 1, "c.nrf_power_override_value_t.NRF_POWER_OVERRIDE_VALUE_POWER_DOWN", "NRF_POWER_OVERRIDE_VALUE_POWER_DOWN"], [104, 1, 1, "c.nrf_power_override_value_t.NRF_POWER_OVERRIDE_VALUE_POWER_UP", "NRF_POWER_OVERRIDE_VALUE_POWER_UP"]], "nrf_power_pmic_check": [[104, 3, 1, "c.nrf_power_pmic_check", "p_reg"]], "nrf_power_pmic_set": [[104, 3, 1, "c.nrf_power_pmic_set", "enable"], [104, 3, 1, "c.nrf_power_pmic_set", "p_reg"]], "nrf_power_pof_thr_t": [[104, 1, 1, "c.nrf_power_pof_thr_t.NRF_POWER_POFTHR_V17", "NRF_POWER_POFTHR_V17"], [104, 1, 1, "c.nrf_power_pof_thr_t.NRF_POWER_POFTHR_V18", "NRF_POWER_POFTHR_V18"], [104, 1, 1, "c.nrf_power_pof_thr_t.NRF_POWER_POFTHR_V19", "NRF_POWER_POFTHR_V19"], [104, 1, 1, "c.nrf_power_pof_thr_t.NRF_POWER_POFTHR_V20", "NRF_POWER_POFTHR_V20"], [104, 1, 1, "c.nrf_power_pof_thr_t.NRF_POWER_POFTHR_V21", "NRF_POWER_POFTHR_V21"], [104, 1, 1, "c.nrf_power_pof_thr_t.NRF_POWER_POFTHR_V22", "NRF_POWER_POFTHR_V22"], [104, 1, 1, "c.nrf_power_pof_thr_t.NRF_POWER_POFTHR_V23", "NRF_POWER_POFTHR_V23"], [104, 1, 1, "c.nrf_power_pof_thr_t.NRF_POWER_POFTHR_V24", "NRF_POWER_POFTHR_V24"], [104, 1, 1, "c.nrf_power_pof_thr_t.NRF_POWER_POFTHR_V25", "NRF_POWER_POFTHR_V25"], [104, 1, 1, "c.nrf_power_pof_thr_t.NRF_POWER_POFTHR_V26", "NRF_POWER_POFTHR_V26"], [104, 1, 1, "c.nrf_power_pof_thr_t.NRF_POWER_POFTHR_V27", "NRF_POWER_POFTHR_V27"], [104, 1, 1, "c.nrf_power_pof_thr_t.NRF_POWER_POFTHR_V28", "NRF_POWER_POFTHR_V28"]], "nrf_power_pof_thrvddh_t": [[104, 1, 1, "c.nrf_power_pof_thrvddh_t.NRF_POWER_POFTHRVDDH_V27", "NRF_POWER_POFTHRVDDH_V27"], [104, 1, 1, "c.nrf_power_pof_thrvddh_t.NRF_POWER_POFTHRVDDH_V28", "NRF_POWER_POFTHRVDDH_V28"], [104, 1, 1, "c.nrf_power_pof_thrvddh_t.NRF_POWER_POFTHRVDDH_V29", "NRF_POWER_POFTHRVDDH_V29"], [104, 1, 1, "c.nrf_power_pof_thrvddh_t.NRF_POWER_POFTHRVDDH_V30", "NRF_POWER_POFTHRVDDH_V30"], [104, 1, 1, "c.nrf_power_pof_thrvddh_t.NRF_POWER_POFTHRVDDH_V31", "NRF_POWER_POFTHRVDDH_V31"], [104, 1, 1, "c.nrf_power_pof_thrvddh_t.NRF_POWER_POFTHRVDDH_V32", "NRF_POWER_POFTHRVDDH_V32"], [104, 1, 1, "c.nrf_power_pof_thrvddh_t.NRF_POWER_POFTHRVDDH_V33", "NRF_POWER_POFTHRVDDH_V33"], [104, 1, 1, "c.nrf_power_pof_thrvddh_t.NRF_POWER_POFTHRVDDH_V34", "NRF_POWER_POFTHRVDDH_V34"], [104, 1, 1, "c.nrf_power_pof_thrvddh_t.NRF_POWER_POFTHRVDDH_V35", "NRF_POWER_POFTHRVDDH_V35"], [104, 1, 1, "c.nrf_power_pof_thrvddh_t.NRF_POWER_POFTHRVDDH_V36", "NRF_POWER_POFTHRVDDH_V36"], [104, 1, 1, "c.nrf_power_pof_thrvddh_t.NRF_POWER_POFTHRVDDH_V37", "NRF_POWER_POFTHRVDDH_V37"], [104, 1, 1, "c.nrf_power_pof_thrvddh_t.NRF_POWER_POFTHRVDDH_V38", "NRF_POWER_POFTHRVDDH_V38"], [104, 1, 1, "c.nrf_power_pof_thrvddh_t.NRF_POWER_POFTHRVDDH_V39", "NRF_POWER_POFTHRVDDH_V39"], [104, 1, 1, "c.nrf_power_pof_thrvddh_t.NRF_POWER_POFTHRVDDH_V40", "NRF_POWER_POFTHRVDDH_V40"], [104, 1, 1, "c.nrf_power_pof_thrvddh_t.NRF_POWER_POFTHRVDDH_V41", "NRF_POWER_POFTHRVDDH_V41"], [104, 1, 1, "c.nrf_power_pof_thrvddh_t.NRF_POWER_POFTHRVDDH_V42", "NRF_POWER_POFTHRVDDH_V42"]], "nrf_power_pofcon_get": [[104, 3, 1, "c.nrf_power_pofcon_get", "p_enabled"], [104, 3, 1, "c.nrf_power_pofcon_get", "p_reg"]], "nrf_power_pofcon_set": [[104, 3, 1, "c.nrf_power_pofcon_set", "enable"], [104, 3, 1, "c.nrf_power_pofcon_set", "p_reg"], [104, 3, 1, "c.nrf_power_pofcon_set", "thr"]], "nrf_power_pofcon_vddh_get": [[104, 3, 1, "c.nrf_power_pofcon_vddh_get", "p_reg"]], "nrf_power_pofcon_vddh_set": [[104, 3, 1, "c.nrf_power_pofcon_vddh_set", "p_reg"], [104, 3, 1, "c.nrf_power_pofcon_vddh_set", "thr"]], "nrf_power_powerstatus_get": [[104, 3, 1, "c.nrf_power_powerstatus_get", "p_reg"]], "nrf_power_publish_clear": [[104, 3, 1, "c.nrf_power_publish_clear", "event"], [104, 3, 1, "c.nrf_power_publish_clear", "p_reg"]], "nrf_power_publish_set": [[104, 3, 1, "c.nrf_power_publish_set", "channel"], [104, 3, 1, "c.nrf_power_publish_set", "event"], [104, 3, 1, "c.nrf_power_publish_set", "p_reg"]], "nrf_power_ramblock_mask_t": [[104, 1, 1, "c.nrf_power_ramblock_mask_t.NRF_POWER_RAMBLOCK0_MASK", "NRF_POWER_RAMBLOCK0_MASK"], [104, 1, 1, "c.nrf_power_ramblock_mask_t.NRF_POWER_RAMBLOCK1_MASK", "NRF_POWER_RAMBLOCK1_MASK"], [104, 1, 1, "c.nrf_power_ramblock_mask_t.NRF_POWER_RAMBLOCK2_MASK", "NRF_POWER_RAMBLOCK2_MASK"], [104, 1, 1, "c.nrf_power_ramblock_mask_t.NRF_POWER_RAMBLOCK3_MASK", "NRF_POWER_RAMBLOCK3_MASK"]], "nrf_power_ramblock_t": [[104, 1, 1, "c.nrf_power_ramblock_t.NRF_POWER_RAMBLOCK0", "NRF_POWER_RAMBLOCK0"], [104, 1, 1, "c.nrf_power_ramblock_t.NRF_POWER_RAMBLOCK1", "NRF_POWER_RAMBLOCK1"], [104, 1, 1, "c.nrf_power_ramblock_t.NRF_POWER_RAMBLOCK2", "NRF_POWER_RAMBLOCK2"], [104, 1, 1, "c.nrf_power_ramblock_t.NRF_POWER_RAMBLOCK3", "NRF_POWER_RAMBLOCK3"]], "nrf_power_rampower_mask_get": [[104, 3, 1, "c.nrf_power_rampower_mask_get", "block"], [104, 3, 1, "c.nrf_power_rampower_mask_get", "p_reg"]], "nrf_power_rampower_mask_off": [[104, 3, 1, "c.nrf_power_rampower_mask_off", "block"], [104, 3, 1, "c.nrf_power_rampower_mask_off", "p_reg"], [104, 3, 1, "c.nrf_power_rampower_mask_off", "section_mask"]], "nrf_power_rampower_mask_on": [[104, 3, 1, "c.nrf_power_rampower_mask_on", "block"], [104, 3, 1, "c.nrf_power_rampower_mask_on", "p_reg"], [104, 3, 1, "c.nrf_power_rampower_mask_on", "section_mask"]], "nrf_power_rampower_mask_t": [[104, 1, 1, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S0POWER_MASK", "NRF_POWER_RAMPOWER_S0POWER_MASK"], [104, 1, 1, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S0RETENTION_MASK", "NRF_POWER_RAMPOWER_S0RETENTION_MASK"], [104, 1, 1, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S10POWER_MASK", "NRF_POWER_RAMPOWER_S10POWER_MASK"], [104, 1, 1, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S10RETENTION_MASK", "NRF_POWER_RAMPOWER_S10RETENTION_MASK"], [104, 1, 1, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S11POWER_MASK", "NRF_POWER_RAMPOWER_S11POWER_MASK"], [104, 1, 1, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S11RETENTION_MASK", "NRF_POWER_RAMPOWER_S11RETENTION_MASK"], [104, 1, 1, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S12POWER_MASK", "NRF_POWER_RAMPOWER_S12POWER_MASK"], [104, 1, 1, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S12RETENTION_MASK", "NRF_POWER_RAMPOWER_S12RETENTION_MASK"], [104, 1, 1, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S13POWER_MASK", "NRF_POWER_RAMPOWER_S13POWER_MASK"], [104, 1, 1, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S13RETENTION_MASK", "NRF_POWER_RAMPOWER_S13RETENTION_MASK"], [104, 1, 1, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S14POWER_MASK", "NRF_POWER_RAMPOWER_S14POWER_MASK"], [104, 1, 1, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S14RETENTION_MASK", "NRF_POWER_RAMPOWER_S14RETENTION_MASK"], [104, 1, 1, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S15POWER_MASK", "NRF_POWER_RAMPOWER_S15POWER_MASK"], [104, 1, 1, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S15RETENTION_MASK", "NRF_POWER_RAMPOWER_S15RETENTION_MASK"], [104, 1, 1, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S1POWER_MASK", "NRF_POWER_RAMPOWER_S1POWER_MASK"], [104, 1, 1, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S1RETENTION_MASK", "NRF_POWER_RAMPOWER_S1RETENTION_MASK"], [104, 1, 1, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S2POWER_MASK", "NRF_POWER_RAMPOWER_S2POWER_MASK"], [104, 1, 1, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S2RETENTION_MASK", "NRF_POWER_RAMPOWER_S2RETENTION_MASK"], [104, 1, 1, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S3POWER_MASK", "NRF_POWER_RAMPOWER_S3POWER_MASK"], [104, 1, 1, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S3RETENTION_MASK", "NRF_POWER_RAMPOWER_S3RETENTION_MASK"], [104, 1, 1, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S4POWER_MASK", "NRF_POWER_RAMPOWER_S4POWER_MASK"], [104, 1, 1, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S4RETENTION_MASK", "NRF_POWER_RAMPOWER_S4RETENTION_MASK"], [104, 1, 1, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S5POWER_MASK", "NRF_POWER_RAMPOWER_S5POWER_MASK"], [104, 1, 1, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S5RETENTION_MASK", "NRF_POWER_RAMPOWER_S5RETENTION_MASK"], [104, 1, 1, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S7POWER_MASK", "NRF_POWER_RAMPOWER_S7POWER_MASK"], [104, 1, 1, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S7RETENTION_MASK", "NRF_POWER_RAMPOWER_S7RETENTION_MASK"], [104, 1, 1, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S8POWER_MASK", "NRF_POWER_RAMPOWER_S8POWER_MASK"], [104, 1, 1, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S8RETENTION_MASK", "NRF_POWER_RAMPOWER_S8RETENTION_MASK"], [104, 1, 1, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S9POWER_MASK", "NRF_POWER_RAMPOWER_S9POWER_MASK"], [104, 1, 1, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S9RETENTION_MASK", "NRF_POWER_RAMPOWER_S9RETENTION_MASK"]], "nrf_power_rampower_t": [[104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S0POWER", "NRF_POWER_RAMPOWER_S0POWER"], [104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S0RETENTION", "NRF_POWER_RAMPOWER_S0RETENTION"], [104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S10POWER", "NRF_POWER_RAMPOWER_S10POWER"], [104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S10RETENTION", "NRF_POWER_RAMPOWER_S10RETENTION"], [104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S11POWER", "NRF_POWER_RAMPOWER_S11POWER"], [104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S11RETENTION", "NRF_POWER_RAMPOWER_S11RETENTION"], [104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S12POWER", "NRF_POWER_RAMPOWER_S12POWER"], [104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S12RETENTION", "NRF_POWER_RAMPOWER_S12RETENTION"], [104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S13POWER", "NRF_POWER_RAMPOWER_S13POWER"], [104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S13RETENTION", "NRF_POWER_RAMPOWER_S13RETENTION"], [104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S14POWER", "NRF_POWER_RAMPOWER_S14POWER"], [104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S14RETENTION", "NRF_POWER_RAMPOWER_S14RETENTION"], [104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S15POWER", "NRF_POWER_RAMPOWER_S15POWER"], [104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S15RETENTION", "NRF_POWER_RAMPOWER_S15RETENTION"], [104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S1POWER", "NRF_POWER_RAMPOWER_S1POWER"], [104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S1RETENTION", "NRF_POWER_RAMPOWER_S1RETENTION"], [104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S2POWER", "NRF_POWER_RAMPOWER_S2POWER"], [104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S2RETENTION", "NRF_POWER_RAMPOWER_S2RETENTION"], [104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S3POWER", "NRF_POWER_RAMPOWER_S3POWER"], [104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S3RETENTION", "NRF_POWER_RAMPOWER_S3RETENTION"], [104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S4POWER", "NRF_POWER_RAMPOWER_S4POWER"], [104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S4RETENTION", "NRF_POWER_RAMPOWER_S4RETENTION"], [104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S5POWER", "NRF_POWER_RAMPOWER_S5POWER"], [104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S5RETENTION", "NRF_POWER_RAMPOWER_S5RETENTION"], [104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S6POWER", "NRF_POWER_RAMPOWER_S6POWER"], [104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S6RETENTION", "NRF_POWER_RAMPOWER_S6RETENTION"], [104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S7POWER", "NRF_POWER_RAMPOWER_S7POWER"], [104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S7RETENTION", "NRF_POWER_RAMPOWER_S7RETENTION"], [104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S8POWER", "NRF_POWER_RAMPOWER_S8POWER"], [104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S8RETENTION", "NRF_POWER_RAMPOWER_S8RETENTION"], [104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S9POWER", "NRF_POWER_RAMPOWER_S9POWER"], [104, 1, 1, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S9RETENTION", "NRF_POWER_RAMPOWER_S9RETENTION"]], "nrf_power_ramstatus_get": [[104, 3, 1, "c.nrf_power_ramstatus_get", "p_reg"]], "nrf_power_resetreas_clear": [[104, 3, 1, "c.nrf_power_resetreas_clear", "mask"], [104, 3, 1, "c.nrf_power_resetreas_clear", "p_reg"]], "nrf_power_resetreas_get": [[104, 3, 1, "c.nrf_power_resetreas_get", "p_reg"]], "nrf_power_resetreas_mask_t": [[104, 1, 1, "c.nrf_power_resetreas_mask_t.NRF_POWER_RESETREAS_CTRLAP_MASK", "NRF_POWER_RESETREAS_CTRLAP_MASK"], [104, 1, 1, "c.nrf_power_resetreas_mask_t.NRF_POWER_RESETREAS_DIF_MASK", "NRF_POWER_RESETREAS_DIF_MASK"], [104, 1, 1, "c.nrf_power_resetreas_mask_t.NRF_POWER_RESETREAS_DOG_MASK", "NRF_POWER_RESETREAS_DOG_MASK"], [104, 1, 1, "c.nrf_power_resetreas_mask_t.NRF_POWER_RESETREAS_LOCKUP_MASK", "NRF_POWER_RESETREAS_LOCKUP_MASK"], [104, 1, 1, "c.nrf_power_resetreas_mask_t.NRF_POWER_RESETREAS_LPCOMP_MASK", "NRF_POWER_RESETREAS_LPCOMP_MASK"], [104, 1, 1, "c.nrf_power_resetreas_mask_t.NRF_POWER_RESETREAS_NFC_MASK", "NRF_POWER_RESETREAS_NFC_MASK"], [104, 1, 1, "c.nrf_power_resetreas_mask_t.NRF_POWER_RESETREAS_OFF_MASK", "NRF_POWER_RESETREAS_OFF_MASK"], [104, 1, 1, "c.nrf_power_resetreas_mask_t.NRF_POWER_RESETREAS_RESETPIN_MASK", "NRF_POWER_RESETREAS_RESETPIN_MASK"], [104, 1, 1, "c.nrf_power_resetreas_mask_t.NRF_POWER_RESETREAS_SREQ_MASK", "NRF_POWER_RESETREAS_SREQ_MASK"], [104, 1, 1, "c.nrf_power_resetreas_mask_t.NRF_POWER_RESETREAS_VBUS_MASK", "NRF_POWER_RESETREAS_VBUS_MASK"]], "nrf_power_sem_status_get": [[104, 3, 1, "c.nrf_power_sem_status_get", "p_reg"]], "nrf_power_subscribe_clear": [[104, 3, 1, "c.nrf_power_subscribe_clear", "p_reg"], [104, 3, 1, "c.nrf_power_subscribe_clear", "task"]], "nrf_power_subscribe_set": [[104, 3, 1, "c.nrf_power_subscribe_set", "channel"], [104, 3, 1, "c.nrf_power_subscribe_set", "p_reg"], [104, 3, 1, "c.nrf_power_subscribe_set", "task"]], "nrf_power_task_address_get": [[104, 3, 1, "c.nrf_power_task_address_get", "p_reg"], [104, 3, 1, "c.nrf_power_task_address_get", "task"]], "nrf_power_task_t": [[104, 1, 1, "c.nrf_power_task_t.NRF_POWER_TASK_CONSTLAT", "NRF_POWER_TASK_CONSTLAT"], [104, 1, 1, "c.nrf_power_task_t.NRF_POWER_TASK_LOWPWR", "NRF_POWER_TASK_LOWPWR"], [104, 1, 1, "c.nrf_power_task_t.NRF_POWER_TASK_REGULATOR_UPDATE", "NRF_POWER_TASK_REGULATOR_UPDATE"], [104, 1, 1, "c.nrf_power_task_t.NRF_POWER_TASK_SEMAPHORE_ACQUIRE", "NRF_POWER_TASK_SEMAPHORE_ACQUIRE"], [104, 1, 1, "c.nrf_power_task_t.NRF_POWER_TASK_SEMAPHORE_RELEASE", "NRF_POWER_TASK_SEMAPHORE_RELEASE"]], "nrf_power_task_trigger": [[104, 3, 1, "c.nrf_power_task_trigger", "p_reg"], [104, 3, 1, "c.nrf_power_task_trigger", "task"]], "nrf_power_ulp_mode_check": [[104, 3, 1, "c.nrf_power_ulp_mode_check", "p_reg"]], "nrf_power_ulp_mode_set": [[104, 3, 1, "c.nrf_power_ulp_mode_set", "enable"], [104, 3, 1, "c.nrf_power_ulp_mode_set", "p_reg"]], "nrf_power_ulv_mode_check": [[104, 3, 1, "c.nrf_power_ulv_mode_check", "p_reg"]], "nrf_power_ulv_mode_set": [[104, 3, 1, "c.nrf_power_ulv_mode_set", "enable"], [104, 3, 1, "c.nrf_power_ulv_mode_set", "p_reg"]], "nrf_power_usbregstatus_get": [[104, 3, 1, "c.nrf_power_usbregstatus_get", "p_reg"]], "nrf_power_usbregstatus_mask_t": [[104, 1, 1, "c.nrf_power_usbregstatus_mask_t.NRF_POWER_USBREGSTATUS_OUTPUTRDY_MASK", "NRF_POWER_USBREGSTATUS_OUTPUTRDY_MASK"], [104, 1, 1, "c.nrf_power_usbregstatus_mask_t.NRF_POWER_USBREGSTATUS_VBUSDETECT_MASK", "NRF_POWER_USBREGSTATUS_VBUSDETECT_MASK"]], "nrf_power_usbregstatus_outrdy_get": [[104, 3, 1, "c.nrf_power_usbregstatus_outrdy_get", "p_reg"]], "nrf_power_usbregstatus_vbusdet_get": [[104, 3, 1, "c.nrf_power_usbregstatus_vbusdet_get", "p_reg"]], "nrf_power_vreg_disable": [[104, 3, 1, "c.nrf_power_vreg_disable", "mask"], [104, 3, 1, "c.nrf_power_vreg_disable", "p_reg"]], "nrf_power_vreg_enable": [[104, 3, 1, "c.nrf_power_vreg_enable", "mask"], [104, 3, 1, "c.nrf_power_vreg_enable", "p_reg"]], "nrf_power_vreg_enable_check": [[104, 3, 1, "c.nrf_power_vreg_enable_check", "mask"], [104, 3, 1, "c.nrf_power_vreg_enable_check", "p_reg"]], "nrf_power_vreg_mask_t": [[104, 1, 1, "c.nrf_power_vreg_mask_t.NRF_POWER_VREG_0V8_MASK", "NRF_POWER_VREG_0V8_MASK"], [104, 1, 1, "c.nrf_power_vreg_mask_t.NRF_POWER_VREG_1V0_MASK", "NRF_POWER_VREG_1V0_MASK"], [104, 1, 1, "c.nrf_power_vreg_mask_t.NRF_POWER_VREG_1V8_MASK", "NRF_POWER_VREG_1V8_MASK"], [104, 1, 1, "c.nrf_power_vreg_mask_t.NRF_POWER_VREG_FORCE_MASK", "NRF_POWER_VREG_FORCE_MASK"], [104, 1, 1, "c.nrf_power_vreg_mask_t.NRF_POWER_VREG_MAIN1V0_MASK", "NRF_POWER_VREG_MAIN1V0_MASK"], [104, 1, 1, "c.nrf_power_vreg_mask_t.NRF_POWER_VREG_MAIN1V8_MASK", "NRF_POWER_VREG_MAIN1V8_MASK"], [104, 1, 1, "c.nrf_power_vreg_mask_t.NRF_POWER_VREG_MAINVS_MASK", "NRF_POWER_VREG_MAINVS_MASK"], [104, 1, 1, "c.nrf_power_vreg_mask_t.NRF_POWER_VREG_VS_MASK", "NRF_POWER_VREG_VS_MASK"]], "nrf_ppi_channel_and_fork_endpoint_setup": [[107, 3, 1, "c.nrf_ppi_channel_and_fork_endpoint_setup", "channel"], [107, 3, 1, "c.nrf_ppi_channel_and_fork_endpoint_setup", "eep"], [107, 3, 1, "c.nrf_ppi_channel_and_fork_endpoint_setup", "fork_tep"], [107, 3, 1, "c.nrf_ppi_channel_and_fork_endpoint_setup", "p_reg"], [107, 3, 1, "c.nrf_ppi_channel_and_fork_endpoint_setup", "tep"]], "nrf_ppi_channel_disable": [[107, 3, 1, "c.nrf_ppi_channel_disable", "channel"], [107, 3, 1, "c.nrf_ppi_channel_disable", "p_reg"]], "nrf_ppi_channel_enable": [[107, 3, 1, "c.nrf_ppi_channel_enable", "channel"], [107, 3, 1, "c.nrf_ppi_channel_enable", "p_reg"]], "nrf_ppi_channel_enable_get": [[107, 3, 1, "c.nrf_ppi_channel_enable_get", "channel"], [107, 3, 1, "c.nrf_ppi_channel_enable_get", "p_reg"]], "nrf_ppi_channel_enable_t": [[107, 1, 1, "c.nrf_ppi_channel_enable_t.NRF_PPI_CHANNEL_DISABLED", "NRF_PPI_CHANNEL_DISABLED"], [107, 1, 1, "c.nrf_ppi_channel_enable_t.NRF_PPI_CHANNEL_ENABLED", "NRF_PPI_CHANNEL_ENABLED"]], "nrf_ppi_channel_endpoint_setup": [[107, 3, 1, "c.nrf_ppi_channel_endpoint_setup", "channel"], [107, 3, 1, "c.nrf_ppi_channel_endpoint_setup", "eep"], [107, 3, 1, "c.nrf_ppi_channel_endpoint_setup", "p_reg"], [107, 3, 1, "c.nrf_ppi_channel_endpoint_setup", "tep"]], "nrf_ppi_channel_group_t": [[107, 1, 1, "c.nrf_ppi_channel_group_t.NRF_PPI_CHANNEL_GROUP0", "NRF_PPI_CHANNEL_GROUP0"], [107, 1, 1, "c.nrf_ppi_channel_group_t.NRF_PPI_CHANNEL_GROUP1", "NRF_PPI_CHANNEL_GROUP1"], [107, 1, 1, "c.nrf_ppi_channel_group_t.NRF_PPI_CHANNEL_GROUP2", "NRF_PPI_CHANNEL_GROUP2"], [107, 1, 1, "c.nrf_ppi_channel_group_t.NRF_PPI_CHANNEL_GROUP3", "NRF_PPI_CHANNEL_GROUP3"], [107, 1, 1, "c.nrf_ppi_channel_group_t.NRF_PPI_CHANNEL_GROUP4", "NRF_PPI_CHANNEL_GROUP4"], [107, 1, 1, "c.nrf_ppi_channel_group_t.NRF_PPI_CHANNEL_GROUP5", "NRF_PPI_CHANNEL_GROUP5"]], "nrf_ppi_channel_include_in_group": [[107, 3, 1, "c.nrf_ppi_channel_include_in_group", "channel"], [107, 3, 1, "c.nrf_ppi_channel_include_in_group", "channel_group"], [107, 3, 1, "c.nrf_ppi_channel_include_in_group", "p_reg"]], "nrf_ppi_channel_include_t": [[107, 1, 1, "c.nrf_ppi_channel_include_t.NRF_PPI_CHANNEL_EXCLUDE", "NRF_PPI_CHANNEL_EXCLUDE"], [107, 1, 1, "c.nrf_ppi_channel_include_t.NRF_PPI_CHANNEL_INCLUDE", "NRF_PPI_CHANNEL_INCLUDE"]], "nrf_ppi_channel_remove_from_group": [[107, 3, 1, "c.nrf_ppi_channel_remove_from_group", "channel"], [107, 3, 1, "c.nrf_ppi_channel_remove_from_group", "channel_group"], [107, 3, 1, "c.nrf_ppi_channel_remove_from_group", "p_reg"]], "nrf_ppi_channel_t": [[107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL0", "NRF_PPI_CHANNEL0"], [107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL1", "NRF_PPI_CHANNEL1"], [107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL10", "NRF_PPI_CHANNEL10"], [107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL11", "NRF_PPI_CHANNEL11"], [107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL12", "NRF_PPI_CHANNEL12"], [107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL13", "NRF_PPI_CHANNEL13"], [107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL14", "NRF_PPI_CHANNEL14"], [107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL15", "NRF_PPI_CHANNEL15"], [107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL16", "NRF_PPI_CHANNEL16"], [107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL17", "NRF_PPI_CHANNEL17"], [107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL18", "NRF_PPI_CHANNEL18"], [107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL19", "NRF_PPI_CHANNEL19"], [107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL2", "NRF_PPI_CHANNEL2"], [107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL20", "NRF_PPI_CHANNEL20"], [107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL21", "NRF_PPI_CHANNEL21"], [107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL22", "NRF_PPI_CHANNEL22"], [107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL23", "NRF_PPI_CHANNEL23"], [107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL24", "NRF_PPI_CHANNEL24"], [107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL25", "NRF_PPI_CHANNEL25"], [107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL26", "NRF_PPI_CHANNEL26"], [107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL27", "NRF_PPI_CHANNEL27"], [107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL28", "NRF_PPI_CHANNEL28"], [107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL29", "NRF_PPI_CHANNEL29"], [107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL3", "NRF_PPI_CHANNEL3"], [107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL30", "NRF_PPI_CHANNEL30"], [107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL31", "NRF_PPI_CHANNEL31"], [107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL4", "NRF_PPI_CHANNEL4"], [107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL5", "NRF_PPI_CHANNEL5"], [107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL6", "NRF_PPI_CHANNEL6"], [107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL7", "NRF_PPI_CHANNEL7"], [107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL8", "NRF_PPI_CHANNEL8"], [107, 1, 1, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL9", "NRF_PPI_CHANNEL9"]], "nrf_ppi_channels_disable": [[107, 3, 1, "c.nrf_ppi_channels_disable", "mask"], [107, 3, 1, "c.nrf_ppi_channels_disable", "p_reg"]], "nrf_ppi_channels_disable_all": [[107, 3, 1, "c.nrf_ppi_channels_disable_all", "p_reg"]], "nrf_ppi_channels_enable": [[107, 3, 1, "c.nrf_ppi_channels_enable", "mask"], [107, 3, 1, "c.nrf_ppi_channels_enable", "p_reg"]], "nrf_ppi_channels_group_set": [[107, 3, 1, "c.nrf_ppi_channels_group_set", "channel_group"], [107, 3, 1, "c.nrf_ppi_channels_group_set", "channel_mask"], [107, 3, 1, "c.nrf_ppi_channels_group_set", "p_reg"]], "nrf_ppi_channels_include_in_group": [[107, 3, 1, "c.nrf_ppi_channels_include_in_group", "channel_group"], [107, 3, 1, "c.nrf_ppi_channels_include_in_group", "channel_mask"], [107, 3, 1, "c.nrf_ppi_channels_include_in_group", "p_reg"]], "nrf_ppi_channels_remove_from_group": [[107, 3, 1, "c.nrf_ppi_channels_remove_from_group", "channel_group"], [107, 3, 1, "c.nrf_ppi_channels_remove_from_group", "channel_mask"], [107, 3, 1, "c.nrf_ppi_channels_remove_from_group", "p_reg"]], "nrf_ppi_event_endpoint_setup": [[107, 3, 1, "c.nrf_ppi_event_endpoint_setup", "channel"], [107, 3, 1, "c.nrf_ppi_event_endpoint_setup", "eep"], [107, 3, 1, "c.nrf_ppi_event_endpoint_setup", "p_reg"]], "nrf_ppi_fork_endpoint_setup": [[107, 3, 1, "c.nrf_ppi_fork_endpoint_setup", "channel"], [107, 3, 1, "c.nrf_ppi_fork_endpoint_setup", "fork_tep"], [107, 3, 1, "c.nrf_ppi_fork_endpoint_setup", "p_reg"]], "nrf_ppi_group_clear": [[107, 3, 1, "c.nrf_ppi_group_clear", "group"], [107, 3, 1, "c.nrf_ppi_group_clear", "p_reg"]], "nrf_ppi_group_disable": [[107, 3, 1, "c.nrf_ppi_group_disable", "group"], [107, 3, 1, "c.nrf_ppi_group_disable", "p_reg"]], "nrf_ppi_group_disable_task_get": [[107, 3, 1, "c.nrf_ppi_group_disable_task_get", "index"], [107, 3, 1, "c.nrf_ppi_group_disable_task_get", "p_reg"]], "nrf_ppi_group_enable": [[107, 3, 1, "c.nrf_ppi_group_enable", "group"], [107, 3, 1, "c.nrf_ppi_group_enable", "p_reg"]], "nrf_ppi_group_enable_task_get": [[107, 3, 1, "c.nrf_ppi_group_enable_task_get", "index"], [107, 3, 1, "c.nrf_ppi_group_enable_task_get", "p_reg"]], "nrf_ppi_task_address_get": [[107, 3, 1, "c.nrf_ppi_task_address_get", "p_reg"], [107, 3, 1, "c.nrf_ppi_task_address_get", "ppi_task"]], "nrf_ppi_task_endpoint_setup": [[107, 3, 1, "c.nrf_ppi_task_endpoint_setup", "channel"], [107, 3, 1, "c.nrf_ppi_task_endpoint_setup", "p_reg"], [107, 3, 1, "c.nrf_ppi_task_endpoint_setup", "tep"]], "nrf_ppi_task_group_disable_address_get": [[107, 3, 1, "c.nrf_ppi_task_group_disable_address_get", "group"], [107, 3, 1, "c.nrf_ppi_task_group_disable_address_get", "p_reg"]], "nrf_ppi_task_group_enable_address_get": [[107, 3, 1, "c.nrf_ppi_task_group_enable_address_get", "group"], [107, 3, 1, "c.nrf_ppi_task_group_enable_address_get", "p_reg"]], "nrf_ppi_task_t": [[107, 1, 1, "c.nrf_ppi_task_t.NRF_PPI_TASK_CHG0_DIS", "NRF_PPI_TASK_CHG0_DIS"], [107, 1, 1, "c.nrf_ppi_task_t.NRF_PPI_TASK_CHG0_EN", "NRF_PPI_TASK_CHG0_EN"], [107, 1, 1, "c.nrf_ppi_task_t.NRF_PPI_TASK_CHG1_DIS", "NRF_PPI_TASK_CHG1_DIS"], [107, 1, 1, "c.nrf_ppi_task_t.NRF_PPI_TASK_CHG1_EN", "NRF_PPI_TASK_CHG1_EN"], [107, 1, 1, "c.nrf_ppi_task_t.NRF_PPI_TASK_CHG2_DIS", "NRF_PPI_TASK_CHG2_DIS"], [107, 1, 1, "c.nrf_ppi_task_t.NRF_PPI_TASK_CHG2_EN", "NRF_PPI_TASK_CHG2_EN"], [107, 1, 1, "c.nrf_ppi_task_t.NRF_PPI_TASK_CHG3_DIS", "NRF_PPI_TASK_CHG3_DIS"], [107, 1, 1, "c.nrf_ppi_task_t.NRF_PPI_TASK_CHG3_EN", "NRF_PPI_TASK_CHG3_EN"], [107, 1, 1, "c.nrf_ppi_task_t.NRF_PPI_TASK_CHG4_DIS", "NRF_PPI_TASK_CHG4_DIS"], [107, 1, 1, "c.nrf_ppi_task_t.NRF_PPI_TASK_CHG4_EN", "NRF_PPI_TASK_CHG4_EN"], [107, 1, 1, "c.nrf_ppi_task_t.NRF_PPI_TASK_CHG5_DIS", "NRF_PPI_TASK_CHG5_DIS"], [107, 1, 1, "c.nrf_ppi_task_t.NRF_PPI_TASK_CHG5_EN", "NRF_PPI_TASK_CHG5_EN"]], "nrf_ppi_task_trigger": [[107, 3, 1, "c.nrf_ppi_task_trigger", "p_reg"], [107, 3, 1, "c.nrf_ppi_task_trigger", "ppi_task"]], "nrf_ppib_event_t": [[109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_0", "NRF_PPIB_EVENT_RECEIVE_0"], [109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_1", "NRF_PPIB_EVENT_RECEIVE_1"], [109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_10", "NRF_PPIB_EVENT_RECEIVE_10"], [109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_11", "NRF_PPIB_EVENT_RECEIVE_11"], [109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_12", "NRF_PPIB_EVENT_RECEIVE_12"], [109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_13", "NRF_PPIB_EVENT_RECEIVE_13"], [109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_14", "NRF_PPIB_EVENT_RECEIVE_14"], [109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_15", "NRF_PPIB_EVENT_RECEIVE_15"], [109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_16", "NRF_PPIB_EVENT_RECEIVE_16"], [109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_17", "NRF_PPIB_EVENT_RECEIVE_17"], [109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_18", "NRF_PPIB_EVENT_RECEIVE_18"], [109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_19", "NRF_PPIB_EVENT_RECEIVE_19"], [109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_2", "NRF_PPIB_EVENT_RECEIVE_2"], [109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_20", "NRF_PPIB_EVENT_RECEIVE_20"], [109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_21", "NRF_PPIB_EVENT_RECEIVE_21"], [109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_22", "NRF_PPIB_EVENT_RECEIVE_22"], [109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_23", "NRF_PPIB_EVENT_RECEIVE_23"], [109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_24", "NRF_PPIB_EVENT_RECEIVE_24"], [109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_25", "NRF_PPIB_EVENT_RECEIVE_25"], [109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_26", "NRF_PPIB_EVENT_RECEIVE_26"], [109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_27", "NRF_PPIB_EVENT_RECEIVE_27"], [109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_28", "NRF_PPIB_EVENT_RECEIVE_28"], [109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_29", "NRF_PPIB_EVENT_RECEIVE_29"], [109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_3", "NRF_PPIB_EVENT_RECEIVE_3"], [109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_30", "NRF_PPIB_EVENT_RECEIVE_30"], [109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_31", "NRF_PPIB_EVENT_RECEIVE_31"], [109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_4", "NRF_PPIB_EVENT_RECEIVE_4"], [109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_5", "NRF_PPIB_EVENT_RECEIVE_5"], [109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_6", "NRF_PPIB_EVENT_RECEIVE_6"], [109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_7", "NRF_PPIB_EVENT_RECEIVE_7"], [109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_8", "NRF_PPIB_EVENT_RECEIVE_8"], [109, 1, 1, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_9", "NRF_PPIB_EVENT_RECEIVE_9"]], "nrf_ppib_overflow_check": [[109, 3, 1, "c.nrf_ppib_overflow_check", "index"], [109, 3, 1, "c.nrf_ppib_overflow_check", "p_reg"]], "nrf_ppib_overflow_get_and_clear": [[109, 3, 1, "c.nrf_ppib_overflow_get_and_clear", "p_reg"]], "nrf_ppib_publish_clear": [[109, 3, 1, "c.nrf_ppib_publish_clear", "event"], [109, 3, 1, "c.nrf_ppib_publish_clear", "p_reg"]], "nrf_ppib_publish_set": [[109, 3, 1, "c.nrf_ppib_publish_set", "channel"], [109, 3, 1, "c.nrf_ppib_publish_set", "event"], [109, 3, 1, "c.nrf_ppib_publish_set", "p_reg"]], "nrf_ppib_receive_event_get": [[109, 3, 1, "c.nrf_ppib_receive_event_get", "index"]], "nrf_ppib_send_mask_t": [[109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_0_MASK", "NRF_PPIB_SEND_0_MASK"], [109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_10_MASK", "NRF_PPIB_SEND_10_MASK"], [109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_11_MASK", "NRF_PPIB_SEND_11_MASK"], [109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_12_MASK", "NRF_PPIB_SEND_12_MASK"], [109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_13_MASK", "NRF_PPIB_SEND_13_MASK"], [109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_14_MASK", "NRF_PPIB_SEND_14_MASK"], [109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_15_MASK", "NRF_PPIB_SEND_15_MASK"], [109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_16_MASK", "NRF_PPIB_SEND_16_MASK"], [109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_17_MASK", "NRF_PPIB_SEND_17_MASK"], [109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_18_MASK", "NRF_PPIB_SEND_18_MASK"], [109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_19_MASK", "NRF_PPIB_SEND_19_MASK"], [109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_1_MASK", "NRF_PPIB_SEND_1_MASK"], [109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_20_MASK", "NRF_PPIB_SEND_20_MASK"], [109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_21_MASK", "NRF_PPIB_SEND_21_MASK"], [109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_22_MASK", "NRF_PPIB_SEND_22_MASK"], [109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_23_MASK", "NRF_PPIB_SEND_23_MASK"], [109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_24_MASK", "NRF_PPIB_SEND_24_MASK"], [109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_25_MASK", "NRF_PPIB_SEND_25_MASK"], [109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_26_MASK", "NRF_PPIB_SEND_26_MASK"], [109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_27_MASK", "NRF_PPIB_SEND_27_MASK"], [109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_28_MASK", "NRF_PPIB_SEND_28_MASK"], [109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_29_MASK", "NRF_PPIB_SEND_29_MASK"], [109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_2_MASK", "NRF_PPIB_SEND_2_MASK"], [109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_30_MASK", "NRF_PPIB_SEND_30_MASK"], [109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_31_MASK", "NRF_PPIB_SEND_31_MASK"], [109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_3_MASK", "NRF_PPIB_SEND_3_MASK"], [109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_4_MASK", "NRF_PPIB_SEND_4_MASK"], [109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_5_MASK", "NRF_PPIB_SEND_5_MASK"], [109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_6_MASK", "NRF_PPIB_SEND_6_MASK"], [109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_7_MASK", "NRF_PPIB_SEND_7_MASK"], [109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_8_MASK", "NRF_PPIB_SEND_8_MASK"], [109, 1, 1, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_9_MASK", "NRF_PPIB_SEND_9_MASK"]], "nrf_ppib_send_task_get": [[109, 3, 1, "c.nrf_ppib_send_task_get", "index"]], "nrf_ppib_subscribe_clear": [[109, 3, 1, "c.nrf_ppib_subscribe_clear", "p_reg"], [109, 3, 1, "c.nrf_ppib_subscribe_clear", "task"]], "nrf_ppib_subscribe_set": [[109, 3, 1, "c.nrf_ppib_subscribe_set", "channel"], [109, 3, 1, "c.nrf_ppib_subscribe_set", "p_reg"], [109, 3, 1, "c.nrf_ppib_subscribe_set", "task"]], "nrf_ppib_task_t": [[109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_0", "NRF_PPIB_TASK_SEND_0"], [109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_1", "NRF_PPIB_TASK_SEND_1"], [109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_10", "NRF_PPIB_TASK_SEND_10"], [109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_11", "NRF_PPIB_TASK_SEND_11"], [109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_12", "NRF_PPIB_TASK_SEND_12"], [109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_13", "NRF_PPIB_TASK_SEND_13"], [109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_14", "NRF_PPIB_TASK_SEND_14"], [109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_15", "NRF_PPIB_TASK_SEND_15"], [109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_16", "NRF_PPIB_TASK_SEND_16"], [109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_17", "NRF_PPIB_TASK_SEND_17"], [109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_18", "NRF_PPIB_TASK_SEND_18"], [109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_19", "NRF_PPIB_TASK_SEND_19"], [109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_2", "NRF_PPIB_TASK_SEND_2"], [109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_20", "NRF_PPIB_TASK_SEND_20"], [109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_21", "NRF_PPIB_TASK_SEND_21"], [109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_22", "NRF_PPIB_TASK_SEND_22"], [109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_23", "NRF_PPIB_TASK_SEND_23"], [109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_24", "NRF_PPIB_TASK_SEND_24"], [109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_25", "NRF_PPIB_TASK_SEND_25"], [109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_26", "NRF_PPIB_TASK_SEND_26"], [109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_27", "NRF_PPIB_TASK_SEND_27"], [109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_28", "NRF_PPIB_TASK_SEND_28"], [109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_29", "NRF_PPIB_TASK_SEND_29"], [109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_3", "NRF_PPIB_TASK_SEND_3"], [109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_30", "NRF_PPIB_TASK_SEND_30"], [109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_31", "NRF_PPIB_TASK_SEND_31"], [109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_4", "NRF_PPIB_TASK_SEND_4"], [109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_5", "NRF_PPIB_TASK_SEND_5"], [109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_6", "NRF_PPIB_TASK_SEND_6"], [109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_7", "NRF_PPIB_TASK_SEND_7"], [109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_8", "NRF_PPIB_TASK_SEND_8"], [109, 1, 1, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_9", "NRF_PPIB_TASK_SEND_9"]], "nrf_pwm_clk_t": [[112, 1, 1, "c.nrf_pwm_clk_t.NRF_PWM_CLK_125kHz", "NRF_PWM_CLK_125kHz"], [112, 1, 1, "c.nrf_pwm_clk_t.NRF_PWM_CLK_16MHz", "NRF_PWM_CLK_16MHz"], [112, 1, 1, "c.nrf_pwm_clk_t.NRF_PWM_CLK_1MHz", "NRF_PWM_CLK_1MHz"], [112, 1, 1, "c.nrf_pwm_clk_t.NRF_PWM_CLK_250kHz", "NRF_PWM_CLK_250kHz"], [112, 1, 1, "c.nrf_pwm_clk_t.NRF_PWM_CLK_2MHz", "NRF_PWM_CLK_2MHz"], [112, 1, 1, "c.nrf_pwm_clk_t.NRF_PWM_CLK_4MHz", "NRF_PWM_CLK_4MHz"], [112, 1, 1, "c.nrf_pwm_clk_t.NRF_PWM_CLK_500kHz", "NRF_PWM_CLK_500kHz"], [112, 1, 1, "c.nrf_pwm_clk_t.NRF_PWM_CLK_8MHz", "NRF_PWM_CLK_8MHz"]], "nrf_pwm_configure": [[112, 3, 1, "c.nrf_pwm_configure", "base_clock"], [112, 3, 1, "c.nrf_pwm_configure", "mode"], [112, 3, 1, "c.nrf_pwm_configure", "p_reg"], [112, 3, 1, "c.nrf_pwm_configure", "top_value"]], "nrf_pwm_dec_load_t": [[112, 1, 1, "c.nrf_pwm_dec_load_t.NRF_PWM_LOAD_COMMON", "NRF_PWM_LOAD_COMMON"], [112, 1, 1, "c.nrf_pwm_dec_load_t.NRF_PWM_LOAD_GROUPED", "NRF_PWM_LOAD_GROUPED"], [112, 1, 1, "c.nrf_pwm_dec_load_t.NRF_PWM_LOAD_INDIVIDUAL", "NRF_PWM_LOAD_INDIVIDUAL"], [112, 1, 1, "c.nrf_pwm_dec_load_t.NRF_PWM_LOAD_WAVE_FORM", "NRF_PWM_LOAD_WAVE_FORM"]], "nrf_pwm_dec_step_t": [[112, 1, 1, "c.nrf_pwm_dec_step_t.NRF_PWM_STEP_AUTO", "NRF_PWM_STEP_AUTO"], [112, 1, 1, "c.nrf_pwm_dec_step_t.NRF_PWM_STEP_TRIGGERED", "NRF_PWM_STEP_TRIGGERED"]], "nrf_pwm_decoder_set": [[112, 3, 1, "c.nrf_pwm_decoder_set", "dec_load"], [112, 3, 1, "c.nrf_pwm_decoder_set", "dec_step"], [112, 3, 1, "c.nrf_pwm_decoder_set", "p_reg"]], "nrf_pwm_disable": [[112, 3, 1, "c.nrf_pwm_disable", "p_reg"]], "nrf_pwm_enable": [[112, 3, 1, "c.nrf_pwm_enable", "p_reg"]], "nrf_pwm_enable_check": [[112, 3, 1, "c.nrf_pwm_enable_check", "p_reg"]], "nrf_pwm_event_address_get": [[112, 3, 1, "c.nrf_pwm_event_address_get", "event"], [112, 3, 1, "c.nrf_pwm_event_address_get", "p_reg"]], "nrf_pwm_event_check": [[112, 3, 1, "c.nrf_pwm_event_check", "event"], [112, 3, 1, "c.nrf_pwm_event_check", "p_reg"]], "nrf_pwm_event_clear": [[112, 3, 1, "c.nrf_pwm_event_clear", "event"], [112, 3, 1, "c.nrf_pwm_event_clear", "p_reg"]], "nrf_pwm_event_t": [[112, 1, 1, "c.nrf_pwm_event_t.NRF_PWM_EVENT_LOOPSDONE", "NRF_PWM_EVENT_LOOPSDONE"], [112, 1, 1, "c.nrf_pwm_event_t.NRF_PWM_EVENT_PWMPERIODEND", "NRF_PWM_EVENT_PWMPERIODEND"], [112, 1, 1, "c.nrf_pwm_event_t.NRF_PWM_EVENT_SEQEND0", "NRF_PWM_EVENT_SEQEND0"], [112, 1, 1, "c.nrf_pwm_event_t.NRF_PWM_EVENT_SEQEND1", "NRF_PWM_EVENT_SEQEND1"], [112, 1, 1, "c.nrf_pwm_event_t.NRF_PWM_EVENT_SEQSTARTED0", "NRF_PWM_EVENT_SEQSTARTED0"], [112, 1, 1, "c.nrf_pwm_event_t.NRF_PWM_EVENT_SEQSTARTED1", "NRF_PWM_EVENT_SEQSTARTED1"], [112, 1, 1, "c.nrf_pwm_event_t.NRF_PWM_EVENT_STOPPED", "NRF_PWM_EVENT_STOPPED"]], "nrf_pwm_int_disable": [[112, 3, 1, "c.nrf_pwm_int_disable", "mask"], [112, 3, 1, "c.nrf_pwm_int_disable", "p_reg"]], "nrf_pwm_int_enable": [[112, 3, 1, "c.nrf_pwm_int_enable", "mask"], [112, 3, 1, "c.nrf_pwm_int_enable", "p_reg"]], "nrf_pwm_int_enable_check": [[112, 3, 1, "c.nrf_pwm_int_enable_check", "mask"], [112, 3, 1, "c.nrf_pwm_int_enable_check", "p_reg"]], "nrf_pwm_int_mask_t": [[112, 1, 1, "c.nrf_pwm_int_mask_t.NRF_PWM_INT_LOOPSDONE_MASK", "NRF_PWM_INT_LOOPSDONE_MASK"], [112, 1, 1, "c.nrf_pwm_int_mask_t.NRF_PWM_INT_PWMPERIODEND_MASK", "NRF_PWM_INT_PWMPERIODEND_MASK"], [112, 1, 1, "c.nrf_pwm_int_mask_t.NRF_PWM_INT_SEQEND0_MASK", "NRF_PWM_INT_SEQEND0_MASK"], [112, 1, 1, "c.nrf_pwm_int_mask_t.NRF_PWM_INT_SEQEND1_MASK", "NRF_PWM_INT_SEQEND1_MASK"], [112, 1, 1, "c.nrf_pwm_int_mask_t.NRF_PWM_INT_SEQSTARTED0_MASK", "NRF_PWM_INT_SEQSTARTED0_MASK"], [112, 1, 1, "c.nrf_pwm_int_mask_t.NRF_PWM_INT_SEQSTARTED1_MASK", "NRF_PWM_INT_SEQSTARTED1_MASK"], [112, 1, 1, "c.nrf_pwm_int_mask_t.NRF_PWM_INT_STOPPED_MASK", "NRF_PWM_INT_STOPPED_MASK"]], "nrf_pwm_int_set": [[112, 3, 1, "c.nrf_pwm_int_set", "mask"], [112, 3, 1, "c.nrf_pwm_int_set", "p_reg"]], "nrf_pwm_loop_set": [[112, 3, 1, "c.nrf_pwm_loop_set", "loop_count"], [112, 3, 1, "c.nrf_pwm_loop_set", "p_reg"]], "nrf_pwm_mode_t": [[112, 1, 1, "c.nrf_pwm_mode_t.NRF_PWM_MODE_UP", "NRF_PWM_MODE_UP"], [112, 1, 1, "c.nrf_pwm_mode_t.NRF_PWM_MODE_UP_AND_DOWN", "NRF_PWM_MODE_UP_AND_DOWN"]], "nrf_pwm_pin_get": [[112, 3, 1, "c.nrf_pwm_pin_get", "channel"], [112, 3, 1, "c.nrf_pwm_pin_get", "p_reg"]], "nrf_pwm_pins_set": [[112, 3, 1, "c.nrf_pwm_pins_set", "out_pins"], [112, 3, 1, "c.nrf_pwm_pins_set", "p_reg"]], "nrf_pwm_publish_clear": [[112, 3, 1, "c.nrf_pwm_publish_clear", "event"], [112, 3, 1, "c.nrf_pwm_publish_clear", "p_reg"]], "nrf_pwm_publish_set": [[112, 3, 1, "c.nrf_pwm_publish_set", "channel"], [112, 3, 1, "c.nrf_pwm_publish_set", "event"], [112, 3, 1, "c.nrf_pwm_publish_set", "p_reg"]], "nrf_pwm_seq_cnt_set": [[112, 3, 1, "c.nrf_pwm_seq_cnt_set", "length"], [112, 3, 1, "c.nrf_pwm_seq_cnt_set", "p_reg"], [112, 3, 1, "c.nrf_pwm_seq_cnt_set", "seq_id"]], "nrf_pwm_seq_end_delay_set": [[112, 3, 1, "c.nrf_pwm_seq_end_delay_set", "end_delay"], [112, 3, 1, "c.nrf_pwm_seq_end_delay_set", "p_reg"], [112, 3, 1, "c.nrf_pwm_seq_end_delay_set", "seq_id"]], "nrf_pwm_seq_ptr_set": [[112, 3, 1, "c.nrf_pwm_seq_ptr_set", "p_reg"], [112, 3, 1, "c.nrf_pwm_seq_ptr_set", "p_values"], [112, 3, 1, "c.nrf_pwm_seq_ptr_set", "seq_id"]], "nrf_pwm_seq_refresh_set": [[112, 3, 1, "c.nrf_pwm_seq_refresh_set", "p_reg"], [112, 3, 1, "c.nrf_pwm_seq_refresh_set", "refresh"], [112, 3, 1, "c.nrf_pwm_seq_refresh_set", "seq_id"]], "nrf_pwm_seqend_event_get": [[112, 3, 1, "c.nrf_pwm_seqend_event_get", "seq_id"]], "nrf_pwm_seqstart_task_get": [[112, 3, 1, "c.nrf_pwm_seqstart_task_get", "seq_id"]], "nrf_pwm_sequence_set": [[112, 3, 1, "c.nrf_pwm_sequence_set", "p_reg"], [112, 3, 1, "c.nrf_pwm_sequence_set", "p_seq"], [112, 3, 1, "c.nrf_pwm_sequence_set", "seq_id"]], "nrf_pwm_sequence_t": [[112, 6, 1, "c.nrf_pwm_sequence_t.end_delay", "end_delay"], [112, 6, 1, "c.nrf_pwm_sequence_t.length", "length"], [112, 6, 1, "c.nrf_pwm_sequence_t.repeats", "repeats"], [112, 6, 1, "c.nrf_pwm_sequence_t.values", "values"]], "nrf_pwm_short_mask_t": [[112, 1, 1, "c.nrf_pwm_short_mask_t.NRF_PWM_SHORT_LOOPSDONE_SEQSTART0_MASK", "NRF_PWM_SHORT_LOOPSDONE_SEQSTART0_MASK"], [112, 1, 1, "c.nrf_pwm_short_mask_t.NRF_PWM_SHORT_LOOPSDONE_SEQSTART1_MASK", "NRF_PWM_SHORT_LOOPSDONE_SEQSTART1_MASK"], [112, 1, 1, "c.nrf_pwm_short_mask_t.NRF_PWM_SHORT_LOOPSDONE_STOP_MASK", "NRF_PWM_SHORT_LOOPSDONE_STOP_MASK"], [112, 1, 1, "c.nrf_pwm_short_mask_t.NRF_PWM_SHORT_SEQEND0_STOP_MASK", "NRF_PWM_SHORT_SEQEND0_STOP_MASK"], [112, 1, 1, "c.nrf_pwm_short_mask_t.NRF_PWM_SHORT_SEQEND1_STOP_MASK", "NRF_PWM_SHORT_SEQEND1_STOP_MASK"]], "nrf_pwm_shorts_disable": [[112, 3, 1, "c.nrf_pwm_shorts_disable", "mask"], [112, 3, 1, "c.nrf_pwm_shorts_disable", "p_reg"]], "nrf_pwm_shorts_enable": [[112, 3, 1, "c.nrf_pwm_shorts_enable", "mask"], [112, 3, 1, "c.nrf_pwm_shorts_enable", "p_reg"]], "nrf_pwm_shorts_set": [[112, 3, 1, "c.nrf_pwm_shorts_set", "mask"], [112, 3, 1, "c.nrf_pwm_shorts_set", "p_reg"]], "nrf_pwm_subscribe_clear": [[112, 3, 1, "c.nrf_pwm_subscribe_clear", "p_reg"], [112, 3, 1, "c.nrf_pwm_subscribe_clear", "task"]], "nrf_pwm_subscribe_set": [[112, 3, 1, "c.nrf_pwm_subscribe_set", "channel"], [112, 3, 1, "c.nrf_pwm_subscribe_set", "p_reg"], [112, 3, 1, "c.nrf_pwm_subscribe_set", "task"]], "nrf_pwm_task_address_get": [[112, 3, 1, "c.nrf_pwm_task_address_get", "p_reg"], [112, 3, 1, "c.nrf_pwm_task_address_get", "task"]], "nrf_pwm_task_t": [[112, 1, 1, "c.nrf_pwm_task_t.NRF_PWM_TASK_NEXTSTEP", "NRF_PWM_TASK_NEXTSTEP"], [112, 1, 1, "c.nrf_pwm_task_t.NRF_PWM_TASK_SEQSTART0", "NRF_PWM_TASK_SEQSTART0"], [112, 1, 1, "c.nrf_pwm_task_t.NRF_PWM_TASK_SEQSTART1", "NRF_PWM_TASK_SEQSTART1"], [112, 1, 1, "c.nrf_pwm_task_t.NRF_PWM_TASK_STOP", "NRF_PWM_TASK_STOP"]], "nrf_pwm_task_trigger": [[112, 3, 1, "c.nrf_pwm_task_trigger", "p_reg"], [112, 3, 1, "c.nrf_pwm_task_trigger", "task"]], "nrf_pwm_values_grouped_t": [[112, 6, 1, "c.nrf_pwm_values_grouped_t.group_0", "group_0"], [112, 6, 1, "c.nrf_pwm_values_grouped_t.group_1", "group_1"]], "nrf_pwm_values_individual_t": [[112, 6, 1, "c.nrf_pwm_values_individual_t.channel_0", "channel_0"], [112, 6, 1, "c.nrf_pwm_values_individual_t.channel_1", "channel_1"], [112, 6, 1, "c.nrf_pwm_values_individual_t.channel_2", "channel_2"], [112, 6, 1, "c.nrf_pwm_values_individual_t.channel_3", "channel_3"]], "nrf_pwm_values_t": [[112, 6, 1, "c.nrf_pwm_values_t.p_common", "p_common"], [112, 6, 1, "c.nrf_pwm_values_t.p_grouped", "p_grouped"], [112, 6, 1, "c.nrf_pwm_values_t.p_individual", "p_individual"], [112, 6, 1, "c.nrf_pwm_values_t.p_raw", "p_raw"], [112, 6, 1, "c.nrf_pwm_values_t.p_wave_form", "p_wave_form"]], "nrf_pwm_values_wave_form_t": [[112, 6, 1, "c.nrf_pwm_values_wave_form_t.channel_0", "channel_0"], [112, 6, 1, "c.nrf_pwm_values_wave_form_t.channel_1", "channel_1"], [112, 6, 1, "c.nrf_pwm_values_wave_form_t.channel_2", "channel_2"], [112, 6, 1, "c.nrf_pwm_values_wave_form_t.counter_top", "counter_top"]], "nrf_qdec_acc_get": [[116, 3, 1, "c.nrf_qdec_acc_get", "p_reg"]], "nrf_qdec_accdbl_get": [[116, 3, 1, "c.nrf_qdec_accdbl_get", "p_reg"]], "nrf_qdec_accdblread_get": [[116, 3, 1, "c.nrf_qdec_accdblread_get", "p_reg"]], "nrf_qdec_accread_get": [[116, 3, 1, "c.nrf_qdec_accread_get", "p_reg"]], "nrf_qdec_dbfen_disable": [[116, 3, 1, "c.nrf_qdec_dbfen_disable", "p_reg"]], "nrf_qdec_dbfen_enable": [[116, 3, 1, "c.nrf_qdec_dbfen_enable", "p_reg"]], "nrf_qdec_dbfen_get": [[116, 3, 1, "c.nrf_qdec_dbfen_get", "p_reg"]], "nrf_qdec_dbfen_t": [[116, 1, 1, "c.nrf_qdec_dbfen_t.NRF_QDEC_DBFEN_DISABLE", "NRF_QDEC_DBFEN_DISABLE"], [116, 1, 1, "c.nrf_qdec_dbfen_t.NRF_QDEC_DBFEN_ENABLE", "NRF_QDEC_DBFEN_ENABLE"]], "nrf_qdec_disable": [[116, 3, 1, "c.nrf_qdec_disable", "p_reg"]], "nrf_qdec_enable": [[116, 3, 1, "c.nrf_qdec_enable", "p_reg"]], "nrf_qdec_enable_get": [[116, 3, 1, "c.nrf_qdec_enable_get", "p_reg"]], "nrf_qdec_enable_t": [[116, 1, 1, "c.nrf_qdec_enable_t.NRF_QDEC_DISABLE", "NRF_QDEC_DISABLE"], [116, 1, 1, "c.nrf_qdec_enable_t.NRF_QDEC_ENABLE", "NRF_QDEC_ENABLE"]], "nrf_qdec_event_address_get": [[116, 3, 1, "c.nrf_qdec_event_address_get", "event"], [116, 3, 1, "c.nrf_qdec_event_address_get", "p_reg"]], "nrf_qdec_event_check": [[116, 3, 1, "c.nrf_qdec_event_check", "event"], [116, 3, 1, "c.nrf_qdec_event_check", "p_reg"]], "nrf_qdec_event_clear": [[116, 3, 1, "c.nrf_qdec_event_clear", "event"], [116, 3, 1, "c.nrf_qdec_event_clear", "p_reg"]], "nrf_qdec_event_t": [[116, 1, 1, "c.nrf_qdec_event_t.NRF_QDEC_EVENT_ACCOF", "NRF_QDEC_EVENT_ACCOF"], [116, 1, 1, "c.nrf_qdec_event_t.NRF_QDEC_EVENT_DBLRDY", "NRF_QDEC_EVENT_DBLRDY"], [116, 1, 1, "c.nrf_qdec_event_t.NRF_QDEC_EVENT_REPORTRDY", "NRF_QDEC_EVENT_REPORTRDY"], [116, 1, 1, "c.nrf_qdec_event_t.NRF_QDEC_EVENT_SAMPLERDY", "NRF_QDEC_EVENT_SAMPLERDY"], [116, 1, 1, "c.nrf_qdec_event_t.NRF_QDEC_EVENT_STOPPED", "NRF_QDEC_EVENT_STOPPED"]], "nrf_qdec_int_disable": [[116, 3, 1, "c.nrf_qdec_int_disable", "mask"], [116, 3, 1, "c.nrf_qdec_int_disable", "p_reg"]], "nrf_qdec_int_enable": [[116, 3, 1, "c.nrf_qdec_int_enable", "mask"], [116, 3, 1, "c.nrf_qdec_int_enable", "p_reg"]], "nrf_qdec_int_enable_check": [[116, 3, 1, "c.nrf_qdec_int_enable_check", "mask"], [116, 3, 1, "c.nrf_qdec_int_enable_check", "p_reg"]], "nrf_qdec_int_mask_t": [[116, 1, 1, "c.nrf_qdec_int_mask_t.NRF_QDEC_INT_ACCOF_MASK", "NRF_QDEC_INT_ACCOF_MASK"], [116, 1, 1, "c.nrf_qdec_int_mask_t.NRF_QDEC_INT_REPORTRDY_MASK", "NRF_QDEC_INT_REPORTRDY_MASK"], [116, 1, 1, "c.nrf_qdec_int_mask_t.NRF_QDEC_INT_SAMPLERDY_MASK", "NRF_QDEC_INT_SAMPLERDY_MASK"]], "nrf_qdec_led_pin_get": [[116, 3, 1, "c.nrf_qdec_led_pin_get", "p_reg"]], "nrf_qdec_ledpol_get": [[116, 3, 1, "c.nrf_qdec_ledpol_get", "p_reg"]], "nrf_qdec_ledpol_set": [[116, 3, 1, "c.nrf_qdec_ledpol_set", "p_reg"], [116, 3, 1, "c.nrf_qdec_ledpol_set", "pol"]], "nrf_qdec_ledpol_t": [[116, 1, 1, "c.nrf_qdec_ledpol_t.NRF_QDEC_LEPOL_ACTIVE_HIGH", "NRF_QDEC_LEPOL_ACTIVE_HIGH"], [116, 1, 1, "c.nrf_qdec_ledpol_t.NRF_QDEC_LEPOL_ACTIVE_LOW", "NRF_QDEC_LEPOL_ACTIVE_LOW"]], "nrf_qdec_ledpre_get": [[116, 3, 1, "c.nrf_qdec_ledpre_get", "p_reg"]], "nrf_qdec_ledpre_set": [[116, 3, 1, "c.nrf_qdec_ledpre_set", "p_reg"], [116, 3, 1, "c.nrf_qdec_ledpre_set", "time_us"]], "nrf_qdec_phase_a_pin_get": [[116, 3, 1, "c.nrf_qdec_phase_a_pin_get", "p_reg"]], "nrf_qdec_phase_b_pin_get": [[116, 3, 1, "c.nrf_qdec_phase_b_pin_get", "p_reg"]], "nrf_qdec_pins_set": [[116, 3, 1, "c.nrf_qdec_pins_set", "led_pin"], [116, 3, 1, "c.nrf_qdec_pins_set", "p_reg"], [116, 3, 1, "c.nrf_qdec_pins_set", "phase_a_pin"], [116, 3, 1, "c.nrf_qdec_pins_set", "phase_b_pin"]], "nrf_qdec_reportper_get": [[116, 3, 1, "c.nrf_qdec_reportper_get", "p_reg"]], "nrf_qdec_reportper_set": [[116, 3, 1, "c.nrf_qdec_reportper_set", "p_reg"], [116, 3, 1, "c.nrf_qdec_reportper_set", "reportper"]], "nrf_qdec_reportper_t": [[116, 1, 1, "c.nrf_qdec_reportper_t.NRF_QDEC_REPORTPER_1", "NRF_QDEC_REPORTPER_1"], [116, 1, 1, "c.nrf_qdec_reportper_t.NRF_QDEC_REPORTPER_10", "NRF_QDEC_REPORTPER_10"], [116, 1, 1, "c.nrf_qdec_reportper_t.NRF_QDEC_REPORTPER_120", "NRF_QDEC_REPORTPER_120"], [116, 1, 1, "c.nrf_qdec_reportper_t.NRF_QDEC_REPORTPER_160", "NRF_QDEC_REPORTPER_160"], [116, 1, 1, "c.nrf_qdec_reportper_t.NRF_QDEC_REPORTPER_200", "NRF_QDEC_REPORTPER_200"], [116, 1, 1, "c.nrf_qdec_reportper_t.NRF_QDEC_REPORTPER_240", "NRF_QDEC_REPORTPER_240"], [116, 1, 1, "c.nrf_qdec_reportper_t.NRF_QDEC_REPORTPER_280", "NRF_QDEC_REPORTPER_280"], [116, 1, 1, "c.nrf_qdec_reportper_t.NRF_QDEC_REPORTPER_40", "NRF_QDEC_REPORTPER_40"], [116, 1, 1, "c.nrf_qdec_reportper_t.NRF_QDEC_REPORTPER_80", "NRF_QDEC_REPORTPER_80"]], "nrf_qdec_reportper_to_value": [[116, 3, 1, "c.nrf_qdec_reportper_to_value", "reportper"]], "nrf_qdec_sample_get": [[116, 3, 1, "c.nrf_qdec_sample_get", "p_reg"]], "nrf_qdec_sampleper_get": [[116, 3, 1, "c.nrf_qdec_sampleper_get", "p_reg"]], "nrf_qdec_sampleper_set": [[116, 3, 1, "c.nrf_qdec_sampleper_set", "p_reg"], [116, 3, 1, "c.nrf_qdec_sampleper_set", "sampleper"]], "nrf_qdec_sampleper_t": [[116, 1, 1, "c.nrf_qdec_sampleper_t.NRF_QDEC_SAMPLEPER_1024US", "NRF_QDEC_SAMPLEPER_1024US"], [116, 1, 1, "c.nrf_qdec_sampleper_t.NRF_QDEC_SAMPLEPER_128US", "NRF_QDEC_SAMPLEPER_128US"], [116, 1, 1, "c.nrf_qdec_sampleper_t.NRF_QDEC_SAMPLEPER_16384US", "NRF_QDEC_SAMPLEPER_16384US"], [116, 1, 1, "c.nrf_qdec_sampleper_t.NRF_QDEC_SAMPLEPER_2048US", "NRF_QDEC_SAMPLEPER_2048US"], [116, 1, 1, "c.nrf_qdec_sampleper_t.NRF_QDEC_SAMPLEPER_256US", "NRF_QDEC_SAMPLEPER_256US"], [116, 1, 1, "c.nrf_qdec_sampleper_t.NRF_QDEC_SAMPLEPER_4096US", "NRF_QDEC_SAMPLEPER_4096US"], [116, 1, 1, "c.nrf_qdec_sampleper_t.NRF_QDEC_SAMPLEPER_512US", "NRF_QDEC_SAMPLEPER_512US"], [116, 1, 1, "c.nrf_qdec_sampleper_t.NRF_QDEC_SAMPLEPER_8192US", "NRF_QDEC_SAMPLEPER_8192US"]], "nrf_qdec_sampleper_to_value": [[116, 3, 1, "c.nrf_qdec_sampleper_to_value", "sampleper"]], "nrf_qdec_short_mask_t": [[116, 1, 1, "c.nrf_qdec_short_mask_t.NRF_QDEC_SHORT_REPORTRDY_READCLRACC_MASK", "NRF_QDEC_SHORT_REPORTRDY_READCLRACC_MASK"], [116, 1, 1, "c.nrf_qdec_short_mask_t.NRF_QDEC_SHORT_SAMPLERDY_STOP_MASK", "NRF_QDEC_SHORT_SAMPLERDY_STOP_MASK"]], "nrf_qdec_shorts_disable": [[116, 3, 1, "c.nrf_qdec_shorts_disable", "mask"], [116, 3, 1, "c.nrf_qdec_shorts_disable", "p_reg"]], "nrf_qdec_shorts_enable": [[116, 3, 1, "c.nrf_qdec_shorts_enable", "mask"], [116, 3, 1, "c.nrf_qdec_shorts_enable", "p_reg"]], "nrf_qdec_task_address_get": [[116, 3, 1, "c.nrf_qdec_task_address_get", "p_reg"], [116, 3, 1, "c.nrf_qdec_task_address_get", "task"]], "nrf_qdec_task_t": [[116, 1, 1, "c.nrf_qdec_task_t.NRF_QDEC_TASK_RDCLRACC", "NRF_QDEC_TASK_RDCLRACC"], [116, 1, 1, "c.nrf_qdec_task_t.NRF_QDEC_TASK_RDCLRDBL", "NRF_QDEC_TASK_RDCLRDBL"], [116, 1, 1, "c.nrf_qdec_task_t.NRF_QDEC_TASK_READCLRACC", "NRF_QDEC_TASK_READCLRACC"], [116, 1, 1, "c.nrf_qdec_task_t.NRF_QDEC_TASK_START", "NRF_QDEC_TASK_START"], [116, 1, 1, "c.nrf_qdec_task_t.NRF_QDEC_TASK_STOP", "NRF_QDEC_TASK_STOP"]], "nrf_qdec_task_trigger": [[116, 3, 1, "c.nrf_qdec_task_trigger", "p_reg"], [116, 3, 1, "c.nrf_qdec_task_trigger", "task"]], "nrf_qspi_addrconfig_conf_t": [[120, 6, 1, "c.nrf_qspi_addrconfig_conf_t.byte0", "byte0"], [120, 6, 1, "c.nrf_qspi_addrconfig_conf_t.byte1", "byte1"], [120, 6, 1, "c.nrf_qspi_addrconfig_conf_t.mode", "mode"], [120, 6, 1, "c.nrf_qspi_addrconfig_conf_t.opcode", "opcode"], [120, 6, 1, "c.nrf_qspi_addrconfig_conf_t.wipwait", "wipwait"], [120, 6, 1, "c.nrf_qspi_addrconfig_conf_t.wren", "wren"]], "nrf_qspi_addrconfig_mode_t": [[120, 1, 1, "c.nrf_qspi_addrconfig_mode_t.NRF_QSPI_ADDRCONF_MODE_ALL", "NRF_QSPI_ADDRCONF_MODE_ALL"], [120, 1, 1, "c.nrf_qspi_addrconfig_mode_t.NRF_QSPI_ADDRCONF_MODE_NOINSTR", "NRF_QSPI_ADDRCONF_MODE_NOINSTR"], [120, 1, 1, "c.nrf_qspi_addrconfig_mode_t.NRF_QSPI_ADDRCONF_MODE_OPBYTE0", "NRF_QSPI_ADDRCONF_MODE_OPBYTE0"], [120, 1, 1, "c.nrf_qspi_addrconfig_mode_t.NRF_QSPI_ADDRCONF_MODE_OPCODE", "NRF_QSPI_ADDRCONF_MODE_OPCODE"]], "nrf_qspi_addrconfig_set": [[120, 3, 1, "c.nrf_qspi_addrconfig_set", "p_config"], [120, 3, 1, "c.nrf_qspi_addrconfig_set", "p_reg"]], "nrf_qspi_addrmode_t": [[120, 1, 1, "c.nrf_qspi_addrmode_t.NRF_QSPI_ADDRMODE_24BIT", "NRF_QSPI_ADDRMODE_24BIT"], [120, 1, 1, "c.nrf_qspi_addrmode_t.NRF_QSPI_ADDRMODE_32BIT", "NRF_QSPI_ADDRMODE_32BIT"]], "nrf_qspi_busy_check": [[120, 3, 1, "c.nrf_qspi_busy_check", "p_reg"]], "nrf_qspi_cinstr_conf_t": [[120, 6, 1, "c.nrf_qspi_cinstr_conf_t.io2_level", "io2_level"], [120, 6, 1, "c.nrf_qspi_cinstr_conf_t.io3_level", "io3_level"], [120, 6, 1, "c.nrf_qspi_cinstr_conf_t.length", "length"], [120, 6, 1, "c.nrf_qspi_cinstr_conf_t.opcode", "opcode"], [120, 6, 1, "c.nrf_qspi_cinstr_conf_t.wipwait", "wipwait"], [120, 6, 1, "c.nrf_qspi_cinstr_conf_t.wren", "wren"]], "nrf_qspi_cinstr_len_t": [[120, 1, 1, "c.nrf_qspi_cinstr_len_t.NRF_QSPI_CINSTR_LEN_1B", "NRF_QSPI_CINSTR_LEN_1B"], [120, 1, 1, "c.nrf_qspi_cinstr_len_t.NRF_QSPI_CINSTR_LEN_2B", "NRF_QSPI_CINSTR_LEN_2B"], [120, 1, 1, "c.nrf_qspi_cinstr_len_t.NRF_QSPI_CINSTR_LEN_3B", "NRF_QSPI_CINSTR_LEN_3B"], [120, 1, 1, "c.nrf_qspi_cinstr_len_t.NRF_QSPI_CINSTR_LEN_4B", "NRF_QSPI_CINSTR_LEN_4B"], [120, 1, 1, "c.nrf_qspi_cinstr_len_t.NRF_QSPI_CINSTR_LEN_5B", "NRF_QSPI_CINSTR_LEN_5B"], [120, 1, 1, "c.nrf_qspi_cinstr_len_t.NRF_QSPI_CINSTR_LEN_6B", "NRF_QSPI_CINSTR_LEN_6B"], [120, 1, 1, "c.nrf_qspi_cinstr_len_t.NRF_QSPI_CINSTR_LEN_7B", "NRF_QSPI_CINSTR_LEN_7B"], [120, 1, 1, "c.nrf_qspi_cinstr_len_t.NRF_QSPI_CINSTR_LEN_8B", "NRF_QSPI_CINSTR_LEN_8B"], [120, 1, 1, "c.nrf_qspi_cinstr_len_t.NRF_QSPI_CINSTR_LEN_9B", "NRF_QSPI_CINSTR_LEN_9B"]], "nrf_qspi_cinstr_long_transfer_continue": [[120, 3, 1, "c.nrf_qspi_cinstr_long_transfer_continue", "finalize"], [120, 3, 1, "c.nrf_qspi_cinstr_long_transfer_continue", "length"], [120, 3, 1, "c.nrf_qspi_cinstr_long_transfer_continue", "p_reg"]], "nrf_qspi_cinstr_long_transfer_is_ongoing": [[120, 3, 1, "c.nrf_qspi_cinstr_long_transfer_is_ongoing", "p_reg"]], "nrf_qspi_cinstr_long_transfer_start": [[120, 3, 1, "c.nrf_qspi_cinstr_long_transfer_start", "p_config"], [120, 3, 1, "c.nrf_qspi_cinstr_long_transfer_start", "p_reg"]], "nrf_qspi_cinstr_transfer_start": [[120, 3, 1, "c.nrf_qspi_cinstr_transfer_start", "p_config"], [120, 3, 1, "c.nrf_qspi_cinstr_transfer_start", "p_reg"]], "nrf_qspi_cinstrdata_get": [[120, 3, 1, "c.nrf_qspi_cinstrdata_get", "length"], [120, 3, 1, "c.nrf_qspi_cinstrdata_get", "p_reg"], [120, 3, 1, "c.nrf_qspi_cinstrdata_get", "p_rx_data"]], "nrf_qspi_cinstrdata_set": [[120, 3, 1, "c.nrf_qspi_cinstrdata_set", "length"], [120, 3, 1, "c.nrf_qspi_cinstrdata_set", "p_reg"], [120, 3, 1, "c.nrf_qspi_cinstrdata_set", "p_tx_data"]], "nrf_qspi_disable": [[120, 3, 1, "c.nrf_qspi_disable", "p_reg"]], "nrf_qspi_dma_encryption_configure": [[120, 3, 1, "c.nrf_qspi_dma_encryption_configure", "p_cfg"], [120, 3, 1, "c.nrf_qspi_dma_encryption_configure", "p_reg"]], "nrf_qspi_dma_encryption_set": [[120, 3, 1, "c.nrf_qspi_dma_encryption_set", "enable"], [120, 3, 1, "c.nrf_qspi_dma_encryption_set", "p_reg"]], "nrf_qspi_enable": [[120, 3, 1, "c.nrf_qspi_enable", "p_reg"]], "nrf_qspi_encryption_t": [[120, 6, 1, "c.nrf_qspi_encryption_t.key", "key"], [120, 6, 1, "c.nrf_qspi_encryption_t.nonce", "nonce"]], "nrf_qspi_erase_len_get": [[120, 3, 1, "c.nrf_qspi_erase_len_get", "p_reg"]], "nrf_qspi_erase_len_t": [[120, 1, 1, "c.nrf_qspi_erase_len_t.NRF_QSPI_ERASE_LEN_4KB", "NRF_QSPI_ERASE_LEN_4KB"], [120, 1, 1, "c.nrf_qspi_erase_len_t.NRF_QSPI_ERASE_LEN_64KB", "NRF_QSPI_ERASE_LEN_64KB"], [120, 1, 1, "c.nrf_qspi_erase_len_t.NRF_QSPI_ERASE_LEN_ALL", "NRF_QSPI_ERASE_LEN_ALL"]], "nrf_qspi_erase_ptr_get": [[120, 3, 1, "c.nrf_qspi_erase_ptr_get", "p_reg"]], "nrf_qspi_erase_ptr_set": [[120, 3, 1, "c.nrf_qspi_erase_ptr_set", "erase_addr"], [120, 3, 1, "c.nrf_qspi_erase_ptr_set", "len"], [120, 3, 1, "c.nrf_qspi_erase_ptr_set", "p_reg"]], "nrf_qspi_event_address_get": [[120, 3, 1, "c.nrf_qspi_event_address_get", "event"], [120, 3, 1, "c.nrf_qspi_event_address_get", "p_reg"]], "nrf_qspi_event_check": [[120, 3, 1, "c.nrf_qspi_event_check", "event"], [120, 3, 1, "c.nrf_qspi_event_check", "p_reg"]], "nrf_qspi_event_clear": [[120, 3, 1, "c.nrf_qspi_event_clear", "event"], [120, 3, 1, "c.nrf_qspi_event_clear", "p_reg"]], "nrf_qspi_event_t": [[120, 1, 1, "c.nrf_qspi_event_t.NRF_QSPI_EVENT_READY", "NRF_QSPI_EVENT_READY"]], "nrf_qspi_frequency_t": [[120, 1, 1, "c.nrf_qspi_frequency_t.NRF_QSPI_FREQ_DIV1", "NRF_QSPI_FREQ_DIV1"], [120, 1, 1, "c.nrf_qspi_frequency_t.NRF_QSPI_FREQ_DIV10", "NRF_QSPI_FREQ_DIV10"], [120, 1, 1, "c.nrf_qspi_frequency_t.NRF_QSPI_FREQ_DIV11", "NRF_QSPI_FREQ_DIV11"], [120, 1, 1, "c.nrf_qspi_frequency_t.NRF_QSPI_FREQ_DIV12", "NRF_QSPI_FREQ_DIV12"], [120, 1, 1, "c.nrf_qspi_frequency_t.NRF_QSPI_FREQ_DIV13", "NRF_QSPI_FREQ_DIV13"], [120, 1, 1, "c.nrf_qspi_frequency_t.NRF_QSPI_FREQ_DIV14", "NRF_QSPI_FREQ_DIV14"], [120, 1, 1, "c.nrf_qspi_frequency_t.NRF_QSPI_FREQ_DIV15", "NRF_QSPI_FREQ_DIV15"], [120, 1, 1, "c.nrf_qspi_frequency_t.NRF_QSPI_FREQ_DIV16", "NRF_QSPI_FREQ_DIV16"], [120, 1, 1, "c.nrf_qspi_frequency_t.NRF_QSPI_FREQ_DIV2", "NRF_QSPI_FREQ_DIV2"], [120, 1, 1, "c.nrf_qspi_frequency_t.NRF_QSPI_FREQ_DIV3", "NRF_QSPI_FREQ_DIV3"], [120, 1, 1, "c.nrf_qspi_frequency_t.NRF_QSPI_FREQ_DIV4", "NRF_QSPI_FREQ_DIV4"], [120, 1, 1, "c.nrf_qspi_frequency_t.NRF_QSPI_FREQ_DIV5", "NRF_QSPI_FREQ_DIV5"], [120, 1, 1, "c.nrf_qspi_frequency_t.NRF_QSPI_FREQ_DIV6", "NRF_QSPI_FREQ_DIV6"], [120, 1, 1, "c.nrf_qspi_frequency_t.NRF_QSPI_FREQ_DIV7", "NRF_QSPI_FREQ_DIV7"], [120, 1, 1, "c.nrf_qspi_frequency_t.NRF_QSPI_FREQ_DIV8", "NRF_QSPI_FREQ_DIV8"], [120, 1, 1, "c.nrf_qspi_frequency_t.NRF_QSPI_FREQ_DIV9", "NRF_QSPI_FREQ_DIV9"]], "nrf_qspi_ifconfig0_raw_get": [[120, 3, 1, "c.nrf_qspi_ifconfig0_raw_get", "p_reg"]], "nrf_qspi_ifconfig0_raw_set": [[120, 3, 1, "c.nrf_qspi_ifconfig0_raw_set", "p_reg"], [120, 3, 1, "c.nrf_qspi_ifconfig0_raw_set", "regval"]], "nrf_qspi_ifconfig0_set": [[120, 3, 1, "c.nrf_qspi_ifconfig0_set", "p_config"], [120, 3, 1, "c.nrf_qspi_ifconfig0_set", "p_reg"]], "nrf_qspi_ifconfig1_set": [[120, 3, 1, "c.nrf_qspi_ifconfig1_set", "p_config"], [120, 3, 1, "c.nrf_qspi_ifconfig1_set", "p_reg"]], "nrf_qspi_iftiming_set": [[120, 3, 1, "c.nrf_qspi_iftiming_set", "p_reg"], [120, 3, 1, "c.nrf_qspi_iftiming_set", "rxdelay"]], "nrf_qspi_int_disable": [[120, 3, 1, "c.nrf_qspi_int_disable", "mask"], [120, 3, 1, "c.nrf_qspi_int_disable", "p_reg"]], "nrf_qspi_int_enable": [[120, 3, 1, "c.nrf_qspi_int_enable", "mask"], [120, 3, 1, "c.nrf_qspi_int_enable", "p_reg"]], "nrf_qspi_int_enable_check": [[120, 3, 1, "c.nrf_qspi_int_enable_check", "mask"], [120, 3, 1, "c.nrf_qspi_int_enable_check", "p_reg"]], "nrf_qspi_int_mask_t": [[120, 1, 1, "c.nrf_qspi_int_mask_t.NRF_QSPI_INT_READY_MASK", "NRF_QSPI_INT_READY_MASK"]], "nrf_qspi_phy_conf_t": [[120, 6, 1, "c.nrf_qspi_phy_conf_t.dpmen", "dpmen"], [120, 6, 1, "c.nrf_qspi_phy_conf_t.sck_delay", "sck_delay"], [120, 6, 1, "c.nrf_qspi_phy_conf_t.sck_freq", "sck_freq"], [120, 6, 1, "c.nrf_qspi_phy_conf_t.spi_mode", "spi_mode"]], "nrf_qspi_pins_get": [[120, 3, 1, "c.nrf_qspi_pins_get", "p_pins"], [120, 3, 1, "c.nrf_qspi_pins_get", "p_reg"]], "nrf_qspi_pins_set": [[120, 3, 1, "c.nrf_qspi_pins_set", "p_pins"], [120, 3, 1, "c.nrf_qspi_pins_set", "p_reg"]], "nrf_qspi_pins_t": [[120, 6, 1, "c.nrf_qspi_pins_t.csn_pin", "csn_pin"], [120, 6, 1, "c.nrf_qspi_pins_t.io0_pin", "io0_pin"], [120, 6, 1, "c.nrf_qspi_pins_t.io1_pin", "io1_pin"], [120, 6, 1, "c.nrf_qspi_pins_t.io2_pin", "io2_pin"], [120, 6, 1, "c.nrf_qspi_pins_t.io3_pin", "io3_pin"], [120, 6, 1, "c.nrf_qspi_pins_t.sck_pin", "sck_pin"]], "nrf_qspi_prot_conf_t": [[120, 6, 1, "c.nrf_qspi_prot_conf_t.addrmode", "addrmode"], [120, 6, 1, "c.nrf_qspi_prot_conf_t.dpmconfig", "dpmconfig"], [120, 6, 1, "c.nrf_qspi_prot_conf_t.readoc", "readoc"], [120, 6, 1, "c.nrf_qspi_prot_conf_t.writeoc", "writeoc"]], "nrf_qspi_read_buffer_set": [[120, 3, 1, "c.nrf_qspi_read_buffer_set", "length"], [120, 3, 1, "c.nrf_qspi_read_buffer_set", "p_buffer"], [120, 3, 1, "c.nrf_qspi_read_buffer_set", "p_reg"], [120, 3, 1, "c.nrf_qspi_read_buffer_set", "src_addr"]], "nrf_qspi_readoc_t": [[120, 1, 1, "c.nrf_qspi_readoc_t.NRF_QSPI_READOC_FASTREAD", "NRF_QSPI_READOC_FASTREAD"], [120, 1, 1, "c.nrf_qspi_readoc_t.NRF_QSPI_READOC_READ2IO", "NRF_QSPI_READOC_READ2IO"], [120, 1, 1, "c.nrf_qspi_readoc_t.NRF_QSPI_READOC_READ2O", "NRF_QSPI_READOC_READ2O"], [120, 1, 1, "c.nrf_qspi_readoc_t.NRF_QSPI_READOC_READ4IO", "NRF_QSPI_READOC_READ4IO"], [120, 1, 1, "c.nrf_qspi_readoc_t.NRF_QSPI_READOC_READ4O", "NRF_QSPI_READOC_READ4O"]], "nrf_qspi_spi_mode_t": [[120, 1, 1, "c.nrf_qspi_spi_mode_t.NRF_QSPI_MODE_0", "NRF_QSPI_MODE_0"], [120, 1, 1, "c.nrf_qspi_spi_mode_t.NRF_QSPI_MODE_1", "NRF_QSPI_MODE_1"]], "nrf_qspi_sreg_get": [[120, 3, 1, "c.nrf_qspi_sreg_get", "p_reg"]], "nrf_qspi_status_reg_get": [[120, 3, 1, "c.nrf_qspi_status_reg_get", "p_reg"]], "nrf_qspi_task_address_get": [[120, 3, 1, "c.nrf_qspi_task_address_get", "p_reg"], [120, 3, 1, "c.nrf_qspi_task_address_get", "task"]], "nrf_qspi_task_t": [[120, 1, 1, "c.nrf_qspi_task_t.NRF_QSPI_TASK_ACTIVATE", "NRF_QSPI_TASK_ACTIVATE"], [120, 1, 1, "c.nrf_qspi_task_t.NRF_QSPI_TASK_DEACTIVATE", "NRF_QSPI_TASK_DEACTIVATE"], [120, 1, 1, "c.nrf_qspi_task_t.NRF_QSPI_TASK_ERASESTART", "NRF_QSPI_TASK_ERASESTART"], [120, 1, 1, "c.nrf_qspi_task_t.NRF_QSPI_TASK_READSTART", "NRF_QSPI_TASK_READSTART"], [120, 1, 1, "c.nrf_qspi_task_t.NRF_QSPI_TASK_WRITESTART", "NRF_QSPI_TASK_WRITESTART"]], "nrf_qspi_task_trigger": [[120, 3, 1, "c.nrf_qspi_task_trigger", "p_reg"], [120, 3, 1, "c.nrf_qspi_task_trigger", "task"]], "nrf_qspi_write_buffer_set": [[120, 3, 1, "c.nrf_qspi_write_buffer_set", "dest_addr"], [120, 3, 1, "c.nrf_qspi_write_buffer_set", "length"], [120, 3, 1, "c.nrf_qspi_write_buffer_set", "p_buffer"], [120, 3, 1, "c.nrf_qspi_write_buffer_set", "p_reg"]], "nrf_qspi_writeoc_t": [[120, 1, 1, "c.nrf_qspi_writeoc_t.NRF_QSPI_WRITEOC_PP", "NRF_QSPI_WRITEOC_PP"], [120, 1, 1, "c.nrf_qspi_writeoc_t.NRF_QSPI_WRITEOC_PP2O", "NRF_QSPI_WRITEOC_PP2O"], [120, 1, 1, "c.nrf_qspi_writeoc_t.NRF_QSPI_WRITEOC_PP4IO", "NRF_QSPI_WRITEOC_PP4IO"], [120, 1, 1, "c.nrf_qspi_writeoc_t.NRF_QSPI_WRITEOC_PP4O", "NRF_QSPI_WRITEOC_PP4O"]], "nrf_qspi_xip_encryption_configure": [[120, 3, 1, "c.nrf_qspi_xip_encryption_configure", "p_cfg"], [120, 3, 1, "c.nrf_qspi_xip_encryption_configure", "p_reg"]], "nrf_qspi_xip_encryption_set": [[120, 3, 1, "c.nrf_qspi_xip_encryption_set", "enable"], [120, 3, 1, "c.nrf_qspi_xip_encryption_set", "p_reg"]], "nrf_qspi_xip_offset_set": [[120, 3, 1, "c.nrf_qspi_xip_offset_set", "p_reg"], [120, 3, 1, "c.nrf_qspi_xip_offset_set", "xip_offset"]], "nrf_qspi_xip_set": [[120, 3, 1, "c.nrf_qspi_xip_set", "enable"], [120, 3, 1, "c.nrf_qspi_xip_set", "p_reg"]], "nrf_radio_base0_get": [[122, 3, 1, "c.nrf_radio_base0_get", "p_reg"]], "nrf_radio_base0_set": [[122, 3, 1, "c.nrf_radio_base0_set", "address"], [122, 3, 1, "c.nrf_radio_base0_set", "p_reg"]], "nrf_radio_base1_get": [[122, 3, 1, "c.nrf_radio_base1_get", "p_reg"]], "nrf_radio_base1_set": [[122, 3, 1, "c.nrf_radio_base1_set", "address"], [122, 3, 1, "c.nrf_radio_base1_set", "p_reg"]], "nrf_radio_bcc_get": [[122, 3, 1, "c.nrf_radio_bcc_get", "p_reg"]], "nrf_radio_bcc_set": [[122, 3, 1, "c.nrf_radio_bcc_set", "p_reg"], [122, 3, 1, "c.nrf_radio_bcc_set", "radio_bcc"]], "nrf_radio_cca_configure": [[122, 3, 1, "c.nrf_radio_cca_configure", "cca_corr_cnt"], [122, 3, 1, "c.nrf_radio_cca_configure", "cca_corr_threshold"], [122, 3, 1, "c.nrf_radio_cca_configure", "cca_ed_threshold"], [122, 3, 1, "c.nrf_radio_cca_configure", "cca_mode"], [122, 3, 1, "c.nrf_radio_cca_configure", "p_reg"]], "nrf_radio_cca_mode_t": [[122, 1, 1, "c.nrf_radio_cca_mode_t.NRF_RADIO_CCA_MODE_CARRIER", "NRF_RADIO_CCA_MODE_CARRIER"], [122, 1, 1, "c.nrf_radio_cca_mode_t.NRF_RADIO_CCA_MODE_CARRIER_AND_ED", "NRF_RADIO_CCA_MODE_CARRIER_AND_ED"], [122, 1, 1, "c.nrf_radio_cca_mode_t.NRF_RADIO_CCA_MODE_CARRIER_OR_ED", "NRF_RADIO_CCA_MODE_CARRIER_OR_ED"], [122, 1, 1, "c.nrf_radio_cca_mode_t.NRF_RADIO_CCA_MODE_ED", "NRF_RADIO_CCA_MODE_ED"], [122, 1, 1, "c.nrf_radio_cca_mode_t.NRF_RADIO_CCA_MODE_ED_TEST1", "NRF_RADIO_CCA_MODE_ED_TEST1"]], "nrf_radio_cistat_get": [[122, 3, 1, "c.nrf_radio_cistat_get", "p_reg"]], "nrf_radio_crc_addr_t": [[122, 1, 1, "c.nrf_radio_crc_addr_t.NRF_RADIO_CRC_ADDR_IEEE802154", "NRF_RADIO_CRC_ADDR_IEEE802154"], [122, 1, 1, "c.nrf_radio_crc_addr_t.NRF_RADIO_CRC_ADDR_INCLUDE", "NRF_RADIO_CRC_ADDR_INCLUDE"], [122, 1, 1, "c.nrf_radio_crc_addr_t.NRF_RADIO_CRC_ADDR_S0", "NRF_RADIO_CRC_ADDR_S0"], [122, 1, 1, "c.nrf_radio_crc_addr_t.NRF_RADIO_CRC_ADDR_S1", "NRF_RADIO_CRC_ADDR_S1"], [122, 1, 1, "c.nrf_radio_crc_addr_t.NRF_RADIO_CRC_ADDR_SKIP", "NRF_RADIO_CRC_ADDR_SKIP"]], "nrf_radio_crc_configure": [[122, 3, 1, "c.nrf_radio_crc_configure", "crc_address"], [122, 3, 1, "c.nrf_radio_crc_configure", "crc_length"], [122, 3, 1, "c.nrf_radio_crc_configure", "crc_polynominal"], [122, 3, 1, "c.nrf_radio_crc_configure", "p_reg"]], "nrf_radio_crc_status_check": [[122, 3, 1, "c.nrf_radio_crc_status_check", "p_reg"]], "nrf_radio_crcinit_get": [[122, 3, 1, "c.nrf_radio_crcinit_get", "p_reg"]], "nrf_radio_crcinit_set": [[122, 3, 1, "c.nrf_radio_crcinit_set", "crc_init_value"], [122, 3, 1, "c.nrf_radio_crcinit_set", "p_reg"]], "nrf_radio_cte_rfu_get": [[122, 3, 1, "c.nrf_radio_cte_rfu_get", "p_reg"]], "nrf_radio_cte_time_get": [[122, 3, 1, "c.nrf_radio_cte_time_get", "p_reg"]], "nrf_radio_cte_type_get": [[122, 3, 1, "c.nrf_radio_cte_type_get", "p_reg"]], "nrf_radio_cteinline_conf_t": [[122, 6, 1, "c.nrf_radio_cteinline_conf_t.enable", "enable"], [122, 6, 1, "c.nrf_radio_cteinline_conf_t.err_handling", "err_handling"], [122, 6, 1, "c.nrf_radio_cteinline_conf_t.info_in_s1", "info_in_s1"], [122, 6, 1, "c.nrf_radio_cteinline_conf_t.rx1us", "rx1us"], [122, 6, 1, "c.nrf_radio_cteinline_conf_t.rx2us", "rx2us"], [122, 6, 1, "c.nrf_radio_cteinline_conf_t.s0_mask", "s0_mask"], [122, 6, 1, "c.nrf_radio_cteinline_conf_t.s0_pattern", "s0_pattern"], [122, 6, 1, "c.nrf_radio_cteinline_conf_t.time_range", "time_range"]], "nrf_radio_cteinline_configure": [[122, 3, 1, "c.nrf_radio_cteinline_configure", "p_config"], [122, 3, 1, "c.nrf_radio_cteinline_configure", "p_reg"]], "nrf_radio_cteinline_rx_mode_t": [[122, 1, 1, "c.nrf_radio_cteinline_rx_mode_t.NRF_RADIO_CTEINLINE_RX_MODE_125NS", "NRF_RADIO_CTEINLINE_RX_MODE_125NS"], [122, 1, 1, "c.nrf_radio_cteinline_rx_mode_t.NRF_RADIO_CTEINLINE_RX_MODE_1US", "NRF_RADIO_CTEINLINE_RX_MODE_1US"], [122, 1, 1, "c.nrf_radio_cteinline_rx_mode_t.NRF_RADIO_CTEINLINE_RX_MODE_250NS", "NRF_RADIO_CTEINLINE_RX_MODE_250NS"], [122, 1, 1, "c.nrf_radio_cteinline_rx_mode_t.NRF_RADIO_CTEINLINE_RX_MODE_2US", "NRF_RADIO_CTEINLINE_RX_MODE_2US"], [122, 1, 1, "c.nrf_radio_cteinline_rx_mode_t.NRF_RADIO_CTEINLINE_RX_MODE_4US", "NRF_RADIO_CTEINLINE_RX_MODE_4US"], [122, 1, 1, "c.nrf_radio_cteinline_rx_mode_t.NRF_RADIO_CTEINLINE_RX_MODE_500NS", "NRF_RADIO_CTEINLINE_RX_MODE_500NS"]], "nrf_radio_cteinline_time_range_t": [[122, 1, 1, "c.nrf_radio_cteinline_time_range_t.NRF_RADIO_CTEINLINE_TIME_RANGE_20", "NRF_RADIO_CTEINLINE_TIME_RANGE_20"], [122, 1, 1, "c.nrf_radio_cteinline_time_range_t.NRF_RADIO_CTEINLINE_TIME_RANGE_31", "NRF_RADIO_CTEINLINE_TIME_RANGE_31"], [122, 1, 1, "c.nrf_radio_cteinline_time_range_t.NRF_RADIO_CTEINLINE_TIME_RANGE_63", "NRF_RADIO_CTEINLINE_TIME_RANGE_63"]], "nrf_radio_dab_get": [[122, 3, 1, "c.nrf_radio_dab_get", "p_reg"], [122, 3, 1, "c.nrf_radio_dab_get", "segment"]], "nrf_radio_dab_set": [[122, 3, 1, "c.nrf_radio_dab_set", "dab_value"], [122, 3, 1, "c.nrf_radio_dab_set", "p_reg"], [122, 3, 1, "c.nrf_radio_dab_set", "segment"]], "nrf_radio_dacnf_ena_get": [[122, 3, 1, "c.nrf_radio_dacnf_ena_get", "p_reg"]], "nrf_radio_dacnf_set": [[122, 3, 1, "c.nrf_radio_dacnf_set", "ena"], [122, 3, 1, "c.nrf_radio_dacnf_set", "p_reg"], [122, 3, 1, "c.nrf_radio_dacnf_set", "txadd"]], "nrf_radio_dacnf_txadd_get": [[122, 3, 1, "c.nrf_radio_dacnf_txadd_get", "p_reg"]], "nrf_radio_dai_get": [[122, 3, 1, "c.nrf_radio_dai_get", "p_reg"]], "nrf_radio_dap_get": [[122, 3, 1, "c.nrf_radio_dap_get", "p_reg"], [122, 3, 1, "c.nrf_radio_dap_get", "prefix_index"]], "nrf_radio_dap_set": [[122, 3, 1, "c.nrf_radio_dap_set", "dap_value"], [122, 3, 1, "c.nrf_radio_dap_set", "p_reg"], [122, 3, 1, "c.nrf_radio_dap_set", "prefix_index"]], "nrf_radio_datawhiteiv_get": [[122, 3, 1, "c.nrf_radio_datawhiteiv_get", "p_reg"]], "nrf_radio_datawhiteiv_set": [[122, 3, 1, "c.nrf_radio_datawhiteiv_set", "datawhiteiv"], [122, 3, 1, "c.nrf_radio_datawhiteiv_set", "p_reg"]], "nrf_radio_dfe_amount_get": [[122, 3, 1, "c.nrf_radio_dfe_amount_get", "p_reg"]], "nrf_radio_dfe_buffer_set": [[122, 3, 1, "c.nrf_radio_dfe_buffer_set", "length"], [122, 3, 1, "c.nrf_radio_dfe_buffer_set", "p_buffer"], [122, 3, 1, "c.nrf_radio_dfe_buffer_set", "p_reg"]], "nrf_radio_dfe_current_amount_get": [[122, 3, 1, "c.nrf_radio_dfe_current_amount_get", "p_reg"]], "nrf_radio_dfe_op_mode_t": [[122, 1, 1, "c.nrf_radio_dfe_op_mode_t.NRF_RADIO_DFE_OP_MODE_AOA", "NRF_RADIO_DFE_OP_MODE_AOA"], [122, 1, 1, "c.nrf_radio_dfe_op_mode_t.NRF_RADIO_DFE_OP_MODE_AOD", "NRF_RADIO_DFE_OP_MODE_AOD"]], "nrf_radio_dfe_pattern_add": [[122, 3, 1, "c.nrf_radio_dfe_pattern_add", "p_reg"], [122, 3, 1, "c.nrf_radio_dfe_pattern_add", "pin_mask"]], "nrf_radio_dfe_pattern_clear": [[122, 3, 1, "c.nrf_radio_dfe_pattern_clear", "p_reg"]], "nrf_radio_dfe_pattern_cnt_get": [[122, 3, 1, "c.nrf_radio_dfe_pattern_cnt_get", "p_reg"]], "nrf_radio_dfe_pattern_pin_set": [[122, 3, 1, "c.nrf_radio_dfe_pattern_pin_set", "p_reg"], [122, 3, 1, "c.nrf_radio_dfe_pattern_pin_set", "pin"], [122, 3, 1, "c.nrf_radio_dfe_pattern_pin_set", "pos"]], "nrf_radio_dfe_patterns_add": [[122, 3, 1, "c.nrf_radio_dfe_patterns_add", "length"], [122, 3, 1, "c.nrf_radio_dfe_patterns_add", "p_pin_masks"], [122, 3, 1, "c.nrf_radio_dfe_patterns_add", "p_reg"]], "nrf_radio_dfe_sample_state_get": [[122, 3, 1, "c.nrf_radio_dfe_sample_state_get", "p_reg"]], "nrf_radio_dfe_sample_state_t": [[122, 1, 1, "c.nrf_radio_dfe_sample_state_t.NRF_RADIO_DFE_SAMPLE_STATE_IDLE", "NRF_RADIO_DFE_SAMPLE_STATE_IDLE"], [122, 1, 1, "c.nrf_radio_dfe_sample_state_t.NRF_RADIO_DFE_SAMPLE_STATE_SAMPLING", "NRF_RADIO_DFE_SAMPLE_STATE_SAMPLING"]], "nrf_radio_dfe_switch_state_get": [[122, 3, 1, "c.nrf_radio_dfe_switch_state_get", "p_reg"]], "nrf_radio_dfe_switch_state_t": [[122, 1, 1, "c.nrf_radio_dfe_switch_state_t.NRF_RADIO_DFE_SWITCH_STATE_ENDING", "NRF_RADIO_DFE_SWITCH_STATE_ENDING"], [122, 1, 1, "c.nrf_radio_dfe_switch_state_t.NRF_RADIO_DFE_SWITCH_STATE_GUARD", "NRF_RADIO_DFE_SWITCH_STATE_GUARD"], [122, 1, 1, "c.nrf_radio_dfe_switch_state_t.NRF_RADIO_DFE_SWITCH_STATE_IDLE", "NRF_RADIO_DFE_SWITCH_STATE_IDLE"], [122, 1, 1, "c.nrf_radio_dfe_switch_state_t.NRF_RADIO_DFE_SWITCH_STATE_OFFSET", "NRF_RADIO_DFE_SWITCH_STATE_OFFSET"], [122, 1, 1, "c.nrf_radio_dfe_switch_state_t.NRF_RADIO_DFE_SWITCH_STATE_REF", "NRF_RADIO_DFE_SWITCH_STATE_REF"], [122, 1, 1, "c.nrf_radio_dfe_switch_state_t.NRF_RADIO_DFE_SWITCH_STATE_SWITCHING", "NRF_RADIO_DFE_SWITCH_STATE_SWITCHING"]], "nrf_radio_dfectrl_conf_t": [[122, 6, 1, "c.nrf_radio_dfectrl_conf_t.dfe_len", "dfe_len"], [122, 6, 1, "c.nrf_radio_dfectrl_conf_t.extension", "extension"], [122, 6, 1, "c.nrf_radio_dfectrl_conf_t.gain_steps", "gain_steps"], [122, 6, 1, "c.nrf_radio_dfectrl_conf_t.sample_offset", "sample_offset"], [122, 6, 1, "c.nrf_radio_dfectrl_conf_t.sample_spacing", "sample_spacing"], [122, 6, 1, "c.nrf_radio_dfectrl_conf_t.sample_type", "sample_type"], [122, 6, 1, "c.nrf_radio_dfectrl_conf_t.spacing_ref", "spacing_ref"], [122, 6, 1, "c.nrf_radio_dfectrl_conf_t.switch_offset", "switch_offset"], [122, 6, 1, "c.nrf_radio_dfectrl_conf_t.switch_spacing", "switch_spacing"]], "nrf_radio_dfectrl_configure": [[122, 3, 1, "c.nrf_radio_dfectrl_configure", "p_config"], [122, 3, 1, "c.nrf_radio_dfectrl_configure", "p_reg"]], "nrf_radio_dfectrl_extension_t": [[122, 1, 1, "c.nrf_radio_dfectrl_extension_t.NRF_RADIO_DFECTRL_EXTENSION_CRC", "NRF_RADIO_DFECTRL_EXTENSION_CRC"], [122, 1, 1, "c.nrf_radio_dfectrl_extension_t.NRF_RADIO_DFECTRL_EXTENSION_PAYLOAD", "NRF_RADIO_DFECTRL_EXTENSION_PAYLOAD"]], "nrf_radio_dfectrl_sample_spacing_t": [[122, 1, 1, "c.nrf_radio_dfectrl_sample_spacing_t.NRF_RADIO_DFECTRL_SAMPLE_SPACING_125NS", "NRF_RADIO_DFECTRL_SAMPLE_SPACING_125NS"], [122, 1, 1, "c.nrf_radio_dfectrl_sample_spacing_t.NRF_RADIO_DFECTRL_SAMPLE_SPACING_1US", "NRF_RADIO_DFECTRL_SAMPLE_SPACING_1US"], [122, 1, 1, "c.nrf_radio_dfectrl_sample_spacing_t.NRF_RADIO_DFECTRL_SAMPLE_SPACING_250NS", "NRF_RADIO_DFECTRL_SAMPLE_SPACING_250NS"], [122, 1, 1, "c.nrf_radio_dfectrl_sample_spacing_t.NRF_RADIO_DFECTRL_SAMPLE_SPACING_2US", "NRF_RADIO_DFECTRL_SAMPLE_SPACING_2US"], [122, 1, 1, "c.nrf_radio_dfectrl_sample_spacing_t.NRF_RADIO_DFECTRL_SAMPLE_SPACING_4US", "NRF_RADIO_DFECTRL_SAMPLE_SPACING_4US"], [122, 1, 1, "c.nrf_radio_dfectrl_sample_spacing_t.NRF_RADIO_DFECTRL_SAMPLE_SPACING_500NS", "NRF_RADIO_DFECTRL_SAMPLE_SPACING_500NS"]], "nrf_radio_dfectrl_sample_type_t": [[122, 1, 1, "c.nrf_radio_dfectrl_sample_type_t.NRF_RADIO_DFECTRL_SAMPLE_TYPE_IQ", "NRF_RADIO_DFECTRL_SAMPLE_TYPE_IQ"], [122, 1, 1, "c.nrf_radio_dfectrl_sample_type_t.NRF_RADIO_DFECTRL_SAMPLE_TYPE_MAGPHASE", "NRF_RADIO_DFECTRL_SAMPLE_TYPE_MAGPHASE"]], "nrf_radio_dfectrl_switch_spacing_t": [[122, 1, 1, "c.nrf_radio_dfectrl_switch_spacing_t.NRF_RADIO_DFECTRL_SWITCH_SPACING_1US", "NRF_RADIO_DFECTRL_SWITCH_SPACING_1US"], [122, 1, 1, "c.nrf_radio_dfectrl_switch_spacing_t.NRF_RADIO_DFECTRL_SWITCH_SPACING_2US", "NRF_RADIO_DFECTRL_SWITCH_SPACING_2US"], [122, 1, 1, "c.nrf_radio_dfectrl_switch_spacing_t.NRF_RADIO_DFECTRL_SWITCH_SPACING_4US", "NRF_RADIO_DFECTRL_SWITCH_SPACING_4US"]], "nrf_radio_ed_cca_period_set": [[122, 3, 1, "c.nrf_radio_ed_cca_period_set", "ed_period"], [122, 3, 1, "c.nrf_radio_ed_cca_period_set", "p_reg"]], "nrf_radio_ed_loop_count_set": [[122, 3, 1, "c.nrf_radio_ed_loop_count_set", "ed_loop_count"], [122, 3, 1, "c.nrf_radio_ed_loop_count_set", "p_reg"]], "nrf_radio_ed_sample_get": [[122, 3, 1, "c.nrf_radio_ed_sample_get", "p_reg"]], "nrf_radio_event_address_get": [[122, 3, 1, "c.nrf_radio_event_address_get", "event"], [122, 3, 1, "c.nrf_radio_event_address_get", "p_reg"]], "nrf_radio_event_check": [[122, 3, 1, "c.nrf_radio_event_check", "event"], [122, 3, 1, "c.nrf_radio_event_check", "p_reg"]], "nrf_radio_event_clear": [[122, 3, 1, "c.nrf_radio_event_clear", "event"], [122, 3, 1, "c.nrf_radio_event_clear", "p_reg"]], "nrf_radio_event_t": [[122, 1, 1, "c.nrf_radio_event_t.NRF_RADIO_EVENT_ADDRESS", "NRF_RADIO_EVENT_ADDRESS"], [122, 1, 1, "c.nrf_radio_event_t.NRF_RADIO_EVENT_BCMATCH", "NRF_RADIO_EVENT_BCMATCH"], [122, 1, 1, "c.nrf_radio_event_t.NRF_RADIO_EVENT_CCABUSY", "NRF_RADIO_EVENT_CCABUSY"], [122, 1, 1, "c.nrf_radio_event_t.NRF_RADIO_EVENT_CCAIDLE", "NRF_RADIO_EVENT_CCAIDLE"], [122, 1, 1, "c.nrf_radio_event_t.NRF_RADIO_EVENT_CCASTOPPED", "NRF_RADIO_EVENT_CCASTOPPED"], [122, 1, 1, "c.nrf_radio_event_t.NRF_RADIO_EVENT_CRCERROR", "NRF_RADIO_EVENT_CRCERROR"], [122, 1, 1, "c.nrf_radio_event_t.NRF_RADIO_EVENT_CRCOK", "NRF_RADIO_EVENT_CRCOK"], [122, 1, 1, "c.nrf_radio_event_t.NRF_RADIO_EVENT_CTEPRESENT", "NRF_RADIO_EVENT_CTEPRESENT"], [122, 1, 1, "c.nrf_radio_event_t.NRF_RADIO_EVENT_DEVMATCH", "NRF_RADIO_EVENT_DEVMATCH"], [122, 1, 1, "c.nrf_radio_event_t.NRF_RADIO_EVENT_DEVMISS", "NRF_RADIO_EVENT_DEVMISS"], [122, 1, 1, "c.nrf_radio_event_t.NRF_RADIO_EVENT_DISABLED", "NRF_RADIO_EVENT_DISABLED"], [122, 1, 1, "c.nrf_radio_event_t.NRF_RADIO_EVENT_EDEND", "NRF_RADIO_EVENT_EDEND"], [122, 1, 1, "c.nrf_radio_event_t.NRF_RADIO_EVENT_EDSTOPPED", "NRF_RADIO_EVENT_EDSTOPPED"], [122, 1, 1, "c.nrf_radio_event_t.NRF_RADIO_EVENT_END", "NRF_RADIO_EVENT_END"], [122, 1, 1, "c.nrf_radio_event_t.NRF_RADIO_EVENT_FRAMESTART", "NRF_RADIO_EVENT_FRAMESTART"], [122, 1, 1, "c.nrf_radio_event_t.NRF_RADIO_EVENT_MHRMATCH", "NRF_RADIO_EVENT_MHRMATCH"], [122, 1, 1, "c.nrf_radio_event_t.NRF_RADIO_EVENT_PAYLOAD", "NRF_RADIO_EVENT_PAYLOAD"], [122, 1, 1, "c.nrf_radio_event_t.NRF_RADIO_EVENT_PHYEND", "NRF_RADIO_EVENT_PHYEND"], [122, 1, 1, "c.nrf_radio_event_t.NRF_RADIO_EVENT_RATEBOOST", "NRF_RADIO_EVENT_RATEBOOST"], [122, 1, 1, "c.nrf_radio_event_t.NRF_RADIO_EVENT_READY", "NRF_RADIO_EVENT_READY"], [122, 1, 1, "c.nrf_radio_event_t.NRF_RADIO_EVENT_RSSIEND", "NRF_RADIO_EVENT_RSSIEND"], [122, 1, 1, "c.nrf_radio_event_t.NRF_RADIO_EVENT_RXREADY", "NRF_RADIO_EVENT_RXREADY"], [122, 1, 1, "c.nrf_radio_event_t.NRF_RADIO_EVENT_SYNC", "NRF_RADIO_EVENT_SYNC"], [122, 1, 1, "c.nrf_radio_event_t.NRF_RADIO_EVENT_TXREADY", "NRF_RADIO_EVENT_TXREADY"]], "nrf_radio_fast_ramp_up_check": [[122, 3, 1, "c.nrf_radio_fast_ramp_up_check", "p_reg"]], "nrf_radio_fast_ramp_up_enable_set": [[122, 3, 1, "c.nrf_radio_fast_ramp_up_enable_set", "enable"], [122, 3, 1, "c.nrf_radio_fast_ramp_up_enable_set", "p_reg"]], "nrf_radio_frequency_get": [[122, 3, 1, "c.nrf_radio_frequency_get", "p_reg"]], "nrf_radio_frequency_set": [[122, 3, 1, "c.nrf_radio_frequency_set", "p_reg"], [122, 3, 1, "c.nrf_radio_frequency_set", "radio_frequency"]], "nrf_radio_ifs_get": [[122, 3, 1, "c.nrf_radio_ifs_get", "p_reg"]], "nrf_radio_ifs_set": [[122, 3, 1, "c.nrf_radio_ifs_set", "p_reg"], [122, 3, 1, "c.nrf_radio_ifs_set", "radio_ifs"]], "nrf_radio_int_disable": [[122, 3, 1, "c.nrf_radio_int_disable", "mask"], [122, 3, 1, "c.nrf_radio_int_disable", "p_reg"]], "nrf_radio_int_enable": [[122, 3, 1, "c.nrf_radio_int_enable", "mask"], [122, 3, 1, "c.nrf_radio_int_enable", "p_reg"]], "nrf_radio_int_enable_check": [[122, 3, 1, "c.nrf_radio_int_enable_check", "mask"], [122, 3, 1, "c.nrf_radio_int_enable_check", "p_reg"]], "nrf_radio_int_mask_t": [[122, 1, 1, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_ADDRESS_MASK", "NRF_RADIO_INT_ADDRESS_MASK"], [122, 1, 1, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_BCMATCH_MASK", "NRF_RADIO_INT_BCMATCH_MASK"], [122, 1, 1, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_CCABUSY_MASK", "NRF_RADIO_INT_CCABUSY_MASK"], [122, 1, 1, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_CCAIDLE_MASK", "NRF_RADIO_INT_CCAIDLE_MASK"], [122, 1, 1, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_CCASTOPPED_MASK", "NRF_RADIO_INT_CCASTOPPED_MASK"], [122, 1, 1, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_CRCERROR_MASK", "NRF_RADIO_INT_CRCERROR_MASK"], [122, 1, 1, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_CRCOK_MASK", "NRF_RADIO_INT_CRCOK_MASK"], [122, 1, 1, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_CTEPRESENT_MASK", "NRF_RADIO_INT_CTEPRESENT_MASK"], [122, 1, 1, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_DEVMATCH_MASK", "NRF_RADIO_INT_DEVMATCH_MASK"], [122, 1, 1, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_DEVMISS_MASK", "NRF_RADIO_INT_DEVMISS_MASK"], [122, 1, 1, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_DISABLED_MASK", "NRF_RADIO_INT_DISABLED_MASK"], [122, 1, 1, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_EDEND_MASK", "NRF_RADIO_INT_EDEND_MASK"], [122, 1, 1, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_EDSTOPPED_MASK", "NRF_RADIO_INT_EDSTOPPED_MASK"], [122, 1, 1, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_END_MASK", "NRF_RADIO_INT_END_MASK"], [122, 1, 1, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_FRAMESTART_MASK", "NRF_RADIO_INT_FRAMESTART_MASK"], [122, 1, 1, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_MHRMATCH_MASK", "NRF_RADIO_INT_MHRMATCH_MASK"], [122, 1, 1, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_PAYLOAD_MASK", "NRF_RADIO_INT_PAYLOAD_MASK"], [122, 1, 1, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_PHYEND_MASK", "NRF_RADIO_INT_PHYEND_MASK"], [122, 1, 1, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_RATEBOOST_MASK", "NRF_RADIO_INT_RATEBOOST_MASK"], [122, 1, 1, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_READY_MASK", "NRF_RADIO_INT_READY_MASK"], [122, 1, 1, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_RSSIEND_MASK", "NRF_RADIO_INT_RSSIEND_MASK"], [122, 1, 1, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_RXREADY_MASK", "NRF_RADIO_INT_RXREADY_MASK"], [122, 1, 1, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_SYNC_MASK", "NRF_RADIO_INT_SYNC_MASK"], [122, 1, 1, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_TXREADY_MASK", "NRF_RADIO_INT_TXREADY_MASK"]], "nrf_radio_mhmu_pattern_mask_get": [[122, 3, 1, "c.nrf_radio_mhmu_pattern_mask_get", "p_reg"]], "nrf_radio_mhmu_pattern_mask_set": [[122, 3, 1, "c.nrf_radio_mhmu_pattern_mask_set", "p_reg"], [122, 3, 1, "c.nrf_radio_mhmu_pattern_mask_set", "radio_mhmu_pattern_mask"]], "nrf_radio_mhmu_search_pattern_get": [[122, 3, 1, "c.nrf_radio_mhmu_search_pattern_get", "p_reg"]], "nrf_radio_mhmu_search_pattern_set": [[122, 3, 1, "c.nrf_radio_mhmu_search_pattern_set", "p_reg"], [122, 3, 1, "c.nrf_radio_mhmu_search_pattern_set", "radio_mhmu_search_pattern"]], "nrf_radio_mode_get": [[122, 3, 1, "c.nrf_radio_mode_get", "p_reg"]], "nrf_radio_mode_set": [[122, 3, 1, "c.nrf_radio_mode_set", "p_reg"], [122, 3, 1, "c.nrf_radio_mode_set", "radio_mode"]], "nrf_radio_mode_t": [[122, 1, 1, "c.nrf_radio_mode_t.NRF_RADIO_MODE_BLE_1MBIT", "NRF_RADIO_MODE_BLE_1MBIT"], [122, 1, 1, "c.nrf_radio_mode_t.NRF_RADIO_MODE_BLE_2MBIT", "NRF_RADIO_MODE_BLE_2MBIT"], [122, 1, 1, "c.nrf_radio_mode_t.NRF_RADIO_MODE_BLE_LR125KBIT", "NRF_RADIO_MODE_BLE_LR125KBIT"], [122, 1, 1, "c.nrf_radio_mode_t.NRF_RADIO_MODE_BLE_LR500KBIT", "NRF_RADIO_MODE_BLE_LR500KBIT"], [122, 1, 1, "c.nrf_radio_mode_t.NRF_RADIO_MODE_IEEE802154_250KBIT", "NRF_RADIO_MODE_IEEE802154_250KBIT"], [122, 1, 1, "c.nrf_radio_mode_t.NRF_RADIO_MODE_NRF_1MBIT", "NRF_RADIO_MODE_NRF_1MBIT"], [122, 1, 1, "c.nrf_radio_mode_t.NRF_RADIO_MODE_NRF_250KBIT", "NRF_RADIO_MODE_NRF_250KBIT"], [122, 1, 1, "c.nrf_radio_mode_t.NRF_RADIO_MODE_NRF_2MBIT", "NRF_RADIO_MODE_NRF_2MBIT"], [122, 1, 1, "c.nrf_radio_mode_t.NRF_RADIO_MODE_NRF_4MBIT_H_0_25", "NRF_RADIO_MODE_NRF_4MBIT_H_0_25"], [122, 1, 1, "c.nrf_radio_mode_t.NRF_RADIO_MODE_NRF_4MBIT_H_0_5", "NRF_RADIO_MODE_NRF_4MBIT_H_0_5"]], "nrf_radio_modecnf0_dtx_get": [[122, 3, 1, "c.nrf_radio_modecnf0_dtx_get", "p_reg"]], "nrf_radio_modecnf0_ru_get": [[122, 3, 1, "c.nrf_radio_modecnf0_ru_get", "p_reg"]], "nrf_radio_modecnf0_set": [[122, 3, 1, "c.nrf_radio_modecnf0_set", "default_tx"], [122, 3, 1, "c.nrf_radio_modecnf0_set", "fast_ramp_up"], [122, 3, 1, "c.nrf_radio_modecnf0_set", "p_reg"]], "nrf_radio_packet_conf_t": [[122, 6, 1, "c.nrf_radio_packet_conf_t.balen", "balen"], [122, 6, 1, "c.nrf_radio_packet_conf_t.big_endian", "big_endian"], [122, 6, 1, "c.nrf_radio_packet_conf_t.cilen", "cilen"], [122, 6, 1, "c.nrf_radio_packet_conf_t.crcinc", "crcinc"], [122, 6, 1, "c.nrf_radio_packet_conf_t.lflen", "lflen"], [122, 6, 1, "c.nrf_radio_packet_conf_t.maxlen", "maxlen"], [122, 6, 1, "c.nrf_radio_packet_conf_t.plen", "plen"], [122, 6, 1, "c.nrf_radio_packet_conf_t.s0len", "s0len"], [122, 6, 1, "c.nrf_radio_packet_conf_t.s1incl", "s1incl"], [122, 6, 1, "c.nrf_radio_packet_conf_t.s1len", "s1len"], [122, 6, 1, "c.nrf_radio_packet_conf_t.statlen", "statlen"], [122, 6, 1, "c.nrf_radio_packet_conf_t.termlen", "termlen"], [122, 6, 1, "c.nrf_radio_packet_conf_t.whiteen", "whiteen"]], "nrf_radio_packet_configure": [[122, 3, 1, "c.nrf_radio_packet_configure", "p_config"], [122, 3, 1, "c.nrf_radio_packet_configure", "p_reg"]], "nrf_radio_packetptr_get": [[122, 3, 1, "c.nrf_radio_packetptr_get", "p_reg"]], "nrf_radio_packetptr_set": [[122, 3, 1, "c.nrf_radio_packetptr_set", "p_packet"], [122, 3, 1, "c.nrf_radio_packetptr_set", "p_reg"]], "nrf_radio_pdustat_get": [[122, 3, 1, "c.nrf_radio_pdustat_get", "p_reg"]], "nrf_radio_power_set": [[122, 3, 1, "c.nrf_radio_power_set", "p_reg"], [122, 3, 1, "c.nrf_radio_power_set", "radio_power"]], "nrf_radio_preamble_length_t": [[122, 1, 1, "c.nrf_radio_preamble_length_t.NRF_RADIO_PREAMBLE_LENGTH_16BIT", "NRF_RADIO_PREAMBLE_LENGTH_16BIT"], [122, 1, 1, "c.nrf_radio_preamble_length_t.NRF_RADIO_PREAMBLE_LENGTH_32BIT_ZERO", "NRF_RADIO_PREAMBLE_LENGTH_32BIT_ZERO"], [122, 1, 1, "c.nrf_radio_preamble_length_t.NRF_RADIO_PREAMBLE_LENGTH_8BIT", "NRF_RADIO_PREAMBLE_LENGTH_8BIT"], [122, 1, 1, "c.nrf_radio_preamble_length_t.NRF_RADIO_PREAMBLE_LENGTH_LONG_RANGE", "NRF_RADIO_PREAMBLE_LENGTH_LONG_RANGE"]], "nrf_radio_prefix0_get": [[122, 3, 1, "c.nrf_radio_prefix0_get", "p_reg"]], "nrf_radio_prefix0_set": [[122, 3, 1, "c.nrf_radio_prefix0_set", "p_reg"], [122, 3, 1, "c.nrf_radio_prefix0_set", "prefixes"]], "nrf_radio_prefix1_get": [[122, 3, 1, "c.nrf_radio_prefix1_get", "p_reg"]], "nrf_radio_prefix1_set": [[122, 3, 1, "c.nrf_radio_prefix1_set", "p_reg"], [122, 3, 1, "c.nrf_radio_prefix1_set", "prefixes"]], "nrf_radio_publish_clear": [[122, 3, 1, "c.nrf_radio_publish_clear", "event"], [122, 3, 1, "c.nrf_radio_publish_clear", "p_reg"]], "nrf_radio_publish_set": [[122, 3, 1, "c.nrf_radio_publish_set", "channel"], [122, 3, 1, "c.nrf_radio_publish_set", "event"], [122, 3, 1, "c.nrf_radio_publish_set", "p_reg"]], "nrf_radio_rssi_sample_get": [[122, 3, 1, "c.nrf_radio_rssi_sample_get", "p_reg"]], "nrf_radio_rxaddresses_get": [[122, 3, 1, "c.nrf_radio_rxaddresses_get", "p_reg"]], "nrf_radio_rxaddresses_set": [[122, 3, 1, "c.nrf_radio_rxaddresses_set", "p_reg"], [122, 3, 1, "c.nrf_radio_rxaddresses_set", "rxaddresses"]], "nrf_radio_rxcrc_get": [[122, 3, 1, "c.nrf_radio_rxcrc_get", "p_reg"]], "nrf_radio_rxmatch_get": [[122, 3, 1, "c.nrf_radio_rxmatch_get", "p_reg"]], "nrf_radio_sfd_get": [[122, 3, 1, "c.nrf_radio_sfd_get", "p_reg"]], "nrf_radio_sfd_set": [[122, 3, 1, "c.nrf_radio_sfd_set", "p_reg"], [122, 3, 1, "c.nrf_radio_sfd_set", "sfd"]], "nrf_radio_short_mask_t": [[122, 1, 1, "c.nrf_radio_short_mask_t.NRF_RADIO_SHORT_ADDRESS_BCSTART_MASK", "NRF_RADIO_SHORT_ADDRESS_BCSTART_MASK"], [122, 1, 1, "c.nrf_radio_short_mask_t.NRF_RADIO_SHORT_ADDRESS_RSSISTART_MASK", "NRF_RADIO_SHORT_ADDRESS_RSSISTART_MASK"], [122, 1, 1, "c.nrf_radio_short_mask_t.NRF_RADIO_SHORT_CCABUSY_DISABLE_MASK", "NRF_RADIO_SHORT_CCABUSY_DISABLE_MASK"], [122, 1, 1, "c.nrf_radio_short_mask_t.NRF_RADIO_SHORT_CCAIDLE_STOP_MASK", "NRF_RADIO_SHORT_CCAIDLE_STOP_MASK"], [122, 1, 1, "c.nrf_radio_short_mask_t.NRF_RADIO_SHORT_CCAIDLE_TXEN_MASK", "NRF_RADIO_SHORT_CCAIDLE_TXEN_MASK"], [122, 1, 1, "c.nrf_radio_short_mask_t.NRF_RADIO_SHORT_DISABLED_RSSISTOP_MASK", "NRF_RADIO_SHORT_DISABLED_RSSISTOP_MASK"], [122, 1, 1, "c.nrf_radio_short_mask_t.NRF_RADIO_SHORT_DISABLED_RXEN_MASK", "NRF_RADIO_SHORT_DISABLED_RXEN_MASK"], [122, 1, 1, "c.nrf_radio_short_mask_t.NRF_RADIO_SHORT_DISABLED_TXEN_MASK", "NRF_RADIO_SHORT_DISABLED_TXEN_MASK"], [122, 1, 1, "c.nrf_radio_short_mask_t.NRF_RADIO_SHORT_EDEND_DISABLE_MASK", "NRF_RADIO_SHORT_EDEND_DISABLE_MASK"], [122, 1, 1, "c.nrf_radio_short_mask_t.NRF_RADIO_SHORT_END_DISABLE_MASK", "NRF_RADIO_SHORT_END_DISABLE_MASK"], [122, 1, 1, "c.nrf_radio_short_mask_t.NRF_RADIO_SHORT_END_START_MASK", "NRF_RADIO_SHORT_END_START_MASK"], [122, 1, 1, "c.nrf_radio_short_mask_t.NRF_RADIO_SHORT_FRAMESTART_BCSTART_MASK", "NRF_RADIO_SHORT_FRAMESTART_BCSTART_MASK"], [122, 1, 1, "c.nrf_radio_short_mask_t.NRF_RADIO_SHORT_PHYEND_DISABLE_MASK", "NRF_RADIO_SHORT_PHYEND_DISABLE_MASK"], [122, 1, 1, "c.nrf_radio_short_mask_t.NRF_RADIO_SHORT_PHYEND_START_MASK", "NRF_RADIO_SHORT_PHYEND_START_MASK"], [122, 1, 1, "c.nrf_radio_short_mask_t.NRF_RADIO_SHORT_READY_EDSTART_MASK", "NRF_RADIO_SHORT_READY_EDSTART_MASK"], [122, 1, 1, "c.nrf_radio_short_mask_t.NRF_RADIO_SHORT_READY_START_MASK", "NRF_RADIO_SHORT_READY_START_MASK"], [122, 1, 1, "c.nrf_radio_short_mask_t.NRF_RADIO_SHORT_RXREADY_CCASTART_MASK", "NRF_RADIO_SHORT_RXREADY_CCASTART_MASK"], [122, 1, 1, "c.nrf_radio_short_mask_t.NRF_RADIO_SHORT_RXREADY_START_MASK", "NRF_RADIO_SHORT_RXREADY_START_MASK"], [122, 1, 1, "c.nrf_radio_short_mask_t.NRF_RADIO_SHORT_TXREADY_START_MASK", "NRF_RADIO_SHORT_TXREADY_START_MASK"]], "nrf_radio_shorts_disable": [[122, 3, 1, "c.nrf_radio_shorts_disable", "p_reg"], [122, 3, 1, "c.nrf_radio_shorts_disable", "shorts_mask"]], "nrf_radio_shorts_enable": [[122, 3, 1, "c.nrf_radio_shorts_enable", "p_reg"], [122, 3, 1, "c.nrf_radio_shorts_enable", "shorts_mask"]], "nrf_radio_shorts_get": [[122, 3, 1, "c.nrf_radio_shorts_get", "p_reg"]], "nrf_radio_shorts_set": [[122, 3, 1, "c.nrf_radio_shorts_set", "p_reg"], [122, 3, 1, "c.nrf_radio_shorts_set", "shorts_mask"]], "nrf_radio_state_get": [[122, 3, 1, "c.nrf_radio_state_get", "p_reg"]], "nrf_radio_state_t": [[122, 1, 1, "c.nrf_radio_state_t.NRF_RADIO_STATE_DISABLED", "NRF_RADIO_STATE_DISABLED"], [122, 1, 1, "c.nrf_radio_state_t.NRF_RADIO_STATE_RX", "NRF_RADIO_STATE_RX"], [122, 1, 1, "c.nrf_radio_state_t.NRF_RADIO_STATE_RXDISABLE", "NRF_RADIO_STATE_RXDISABLE"], [122, 1, 1, "c.nrf_radio_state_t.NRF_RADIO_STATE_RXIDLE", "NRF_RADIO_STATE_RXIDLE"], [122, 1, 1, "c.nrf_radio_state_t.NRF_RADIO_STATE_RXRU", "NRF_RADIO_STATE_RXRU"], [122, 1, 1, "c.nrf_radio_state_t.NRF_RADIO_STATE_TX", "NRF_RADIO_STATE_TX"], [122, 1, 1, "c.nrf_radio_state_t.NRF_RADIO_STATE_TXDISABLE", "NRF_RADIO_STATE_TXDISABLE"], [122, 1, 1, "c.nrf_radio_state_t.NRF_RADIO_STATE_TXIDLE", "NRF_RADIO_STATE_TXIDLE"], [122, 1, 1, "c.nrf_radio_state_t.NRF_RADIO_STATE_TXRU", "NRF_RADIO_STATE_TXRU"]], "nrf_radio_subscribe_clear": [[122, 3, 1, "c.nrf_radio_subscribe_clear", "p_reg"], [122, 3, 1, "c.nrf_radio_subscribe_clear", "task"]], "nrf_radio_subscribe_set": [[122, 3, 1, "c.nrf_radio_subscribe_set", "channel"], [122, 3, 1, "c.nrf_radio_subscribe_set", "p_reg"], [122, 3, 1, "c.nrf_radio_subscribe_set", "task"]], "nrf_radio_task_address_get": [[122, 3, 1, "c.nrf_radio_task_address_get", "p_reg"], [122, 3, 1, "c.nrf_radio_task_address_get", "task"]], "nrf_radio_task_t": [[122, 1, 1, "c.nrf_radio_task_t.NRF_RADIO_TASK_BCSTART", "NRF_RADIO_TASK_BCSTART"], [122, 1, 1, "c.nrf_radio_task_t.NRF_RADIO_TASK_BCSTOP", "NRF_RADIO_TASK_BCSTOP"], [122, 1, 1, "c.nrf_radio_task_t.NRF_RADIO_TASK_CCASTART", "NRF_RADIO_TASK_CCASTART"], [122, 1, 1, "c.nrf_radio_task_t.NRF_RADIO_TASK_CCASTOP", "NRF_RADIO_TASK_CCASTOP"], [122, 1, 1, "c.nrf_radio_task_t.NRF_RADIO_TASK_DISABLE", "NRF_RADIO_TASK_DISABLE"], [122, 1, 1, "c.nrf_radio_task_t.NRF_RADIO_TASK_EDSTART", "NRF_RADIO_TASK_EDSTART"], [122, 1, 1, "c.nrf_radio_task_t.NRF_RADIO_TASK_EDSTOP", "NRF_RADIO_TASK_EDSTOP"], [122, 1, 1, "c.nrf_radio_task_t.NRF_RADIO_TASK_RSSISTART", "NRF_RADIO_TASK_RSSISTART"], [122, 1, 1, "c.nrf_radio_task_t.NRF_RADIO_TASK_RSSISTOP", "NRF_RADIO_TASK_RSSISTOP"], [122, 1, 1, "c.nrf_radio_task_t.NRF_RADIO_TASK_RXEN", "NRF_RADIO_TASK_RXEN"], [122, 1, 1, "c.nrf_radio_task_t.NRF_RADIO_TASK_START", "NRF_RADIO_TASK_START"], [122, 1, 1, "c.nrf_radio_task_t.NRF_RADIO_TASK_STOP", "NRF_RADIO_TASK_STOP"], [122, 1, 1, "c.nrf_radio_task_t.NRF_RADIO_TASK_TXEN", "NRF_RADIO_TASK_TXEN"]], "nrf_radio_task_trigger": [[122, 3, 1, "c.nrf_radio_task_trigger", "p_reg"], [122, 3, 1, "c.nrf_radio_task_trigger", "task"]], "nrf_radio_txaddress_get": [[122, 3, 1, "c.nrf_radio_txaddress_get", "p_reg"]], "nrf_radio_txaddress_set": [[122, 3, 1, "c.nrf_radio_txaddress_set", "p_reg"], [122, 3, 1, "c.nrf_radio_txaddress_set", "txaddress"]], "nrf_radio_txpower_get": [[122, 3, 1, "c.nrf_radio_txpower_get", "p_reg"]], "nrf_radio_txpower_set": [[122, 3, 1, "c.nrf_radio_txpower_set", "p_reg"], [122, 3, 1, "c.nrf_radio_txpower_set", "tx_power"]], "nrf_radio_txpower_t": [[122, 1, 1, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_0DBM", "NRF_RADIO_TXPOWER_0DBM"], [122, 1, 1, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_NEG12DBM", "NRF_RADIO_TXPOWER_NEG12DBM"], [122, 1, 1, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_NEG16DBM", "NRF_RADIO_TXPOWER_NEG16DBM"], [122, 1, 1, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_NEG1DBM", "NRF_RADIO_TXPOWER_NEG1DBM"], [122, 1, 1, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_NEG20DBM", "NRF_RADIO_TXPOWER_NEG20DBM"], [122, 1, 1, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_NEG2DBM", "NRF_RADIO_TXPOWER_NEG2DBM"], [122, 1, 1, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_NEG30DBM", "NRF_RADIO_TXPOWER_NEG30DBM"], [122, 1, 1, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_NEG3DBM", "NRF_RADIO_TXPOWER_NEG3DBM"], [122, 1, 1, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_NEG40DBM", "NRF_RADIO_TXPOWER_NEG40DBM"], [122, 1, 1, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_NEG4DBM", "NRF_RADIO_TXPOWER_NEG4DBM"], [122, 1, 1, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_NEG5DBM", "NRF_RADIO_TXPOWER_NEG5DBM"], [122, 1, 1, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_NEG6DBM", "NRF_RADIO_TXPOWER_NEG6DBM"], [122, 1, 1, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_NEG70DBM", "NRF_RADIO_TXPOWER_NEG70DBM"], [122, 1, 1, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_NEG7DBM", "NRF_RADIO_TXPOWER_NEG7DBM"], [122, 1, 1, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_NEG8DBM", "NRF_RADIO_TXPOWER_NEG8DBM"], [122, 1, 1, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_POS10DBM", "NRF_RADIO_TXPOWER_POS10DBM"], [122, 1, 1, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_POS1DBM", "NRF_RADIO_TXPOWER_POS1DBM"], [122, 1, 1, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_POS2DBM", "NRF_RADIO_TXPOWER_POS2DBM"], [122, 1, 1, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_POS3DBM", "NRF_RADIO_TXPOWER_POS3DBM"], [122, 1, 1, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_POS4DBM", "NRF_RADIO_TXPOWER_POS4DBM"], [122, 1, 1, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_POS5DBM", "NRF_RADIO_TXPOWER_POS5DBM"], [122, 1, 1, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_POS6DBM", "NRF_RADIO_TXPOWER_POS6DBM"], [122, 1, 1, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_POS7DBM", "NRF_RADIO_TXPOWER_POS7DBM"], [122, 1, 1, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_POS8DBM", "NRF_RADIO_TXPOWER_POS8DBM"], [122, 1, 1, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_POS9DBM", "NRF_RADIO_TXPOWER_POS9DBM"]], "nrf_ramc_event_address_get": [[124, 3, 1, "c.nrf_ramc_event_address_get", "event"], [124, 3, 1, "c.nrf_ramc_event_address_get", "p_reg"]], "nrf_ramc_event_check": [[124, 3, 1, "c.nrf_ramc_event_check", "event"], [124, 3, 1, "c.nrf_ramc_event_check", "p_reg"]], "nrf_ramc_event_clear": [[124, 3, 1, "c.nrf_ramc_event_clear", "event"], [124, 3, 1, "c.nrf_ramc_event_clear", "p_reg"]], "nrf_ramc_event_t": [[124, 1, 1, "c.nrf_ramc_event_t.NRF_RAMC_EVENT_ERROR_FIXABLE", "NRF_RAMC_EVENT_ERROR_FIXABLE"], [124, 1, 1, "c.nrf_ramc_event_t.NRF_RAMC_EVENT_ERROR_NON_FIXABLE", "NRF_RAMC_EVENT_ERROR_NON_FIXABLE"]], "nrf_ramc_secbase_get": [[124, 3, 1, "c.nrf_ramc_secbase_get", "p_reg"]], "nrf_ramc_secbase_set": [[124, 3, 1, "c.nrf_ramc_secbase_set", "addr"], [124, 3, 1, "c.nrf_ramc_secbase_set", "p_reg"]], "nrf_ramc_secenable_check": [[124, 3, 1, "c.nrf_ramc_secenable_check", "p_reg"]], "nrf_ramc_secenable_set": [[124, 3, 1, "c.nrf_ramc_secenable_set", "enable"], [124, 3, 1, "c.nrf_ramc_secenable_set", "p_reg"]], "nrf_ramc_waitstates_get": [[124, 3, 1, "c.nrf_ramc_waitstates_get", "p_reg"]], "nrf_ramc_waitstates_set": [[124, 3, 1, "c.nrf_ramc_waitstates_set", "p_reg"], [124, 3, 1, "c.nrf_ramc_waitstates_set", "waitstates"]], "nrf_regulators_elv_mode_allow_get": [[126, 3, 1, "c.nrf_regulators_elv_mode_allow_get", "p_reg"]], "nrf_regulators_elv_mode_allow_mask_t": [[126, 1, 1, "c.nrf_regulators_elv_mode_allow_mask_t.NRF_REGULATORS_ELV_MODE_ALLOW_MASK_EXT", "NRF_REGULATORS_ELV_MODE_ALLOW_MASK_EXT"]], "nrf_regulators_elv_mode_allow_set": [[126, 3, 1, "c.nrf_regulators_elv_mode_allow_set", "mask"], [126, 3, 1, "c.nrf_regulators_elv_mode_allow_set", "p_reg"]], "nrf_regulators_inductor_check": [[126, 3, 1, "c.nrf_regulators_inductor_check", "p_reg"]], "nrf_regulators_main_status_get": [[126, 3, 1, "c.nrf_regulators_main_status_get", "p_reg"]], "nrf_regulators_main_status_t": [[126, 1, 1, "c.nrf_regulators_main_status_t.NRF_REGULATORS_MAIN_STATUS_HIGH", "NRF_REGULATORS_MAIN_STATUS_HIGH"], [126, 1, 1, "c.nrf_regulators_main_status_t.NRF_REGULATORS_MAIN_STATUS_NORMAL", "NRF_REGULATORS_MAIN_STATUS_NORMAL"]], "nrf_regulators_pof_below_thr_check": [[126, 3, 1, "c.nrf_regulators_pof_below_thr_check", "p_reg"]], "nrf_regulators_pof_config_get": [[126, 3, 1, "c.nrf_regulators_pof_config_get", "p_config"], [126, 3, 1, "c.nrf_regulators_pof_config_get", "p_reg"]], "nrf_regulators_pof_config_set": [[126, 3, 1, "c.nrf_regulators_pof_config_set", "p_config"], [126, 3, 1, "c.nrf_regulators_pof_config_set", "p_reg"]], "nrf_regulators_pof_config_t": [[126, 6, 1, "c.nrf_regulators_pof_config_t.enable", "enable"], [126, 6, 1, "c.nrf_regulators_pof_config_t.thr", "thr"], [126, 6, 1, "c.nrf_regulators_pof_config_t.thr_vddh", "thr_vddh"], [126, 6, 1, "c.nrf_regulators_pof_config_t.warn_disable", "warn_disable"]], "nrf_regulators_pof_thr_t": [[126, 1, 1, "c.nrf_regulators_pof_thr_t.NRF_REGULATORS_POF_THR_1V7", "NRF_REGULATORS_POF_THR_1V7"], [126, 1, 1, "c.nrf_regulators_pof_thr_t.NRF_REGULATORS_POF_THR_1V8", "NRF_REGULATORS_POF_THR_1V8"], [126, 1, 1, "c.nrf_regulators_pof_thr_t.NRF_REGULATORS_POF_THR_1V9", "NRF_REGULATORS_POF_THR_1V9"], [126, 1, 1, "c.nrf_regulators_pof_thr_t.NRF_REGULATORS_POF_THR_2V0", "NRF_REGULATORS_POF_THR_2V0"], [126, 1, 1, "c.nrf_regulators_pof_thr_t.NRF_REGULATORS_POF_THR_2V1", "NRF_REGULATORS_POF_THR_2V1"], [126, 1, 1, "c.nrf_regulators_pof_thr_t.NRF_REGULATORS_POF_THR_2V2", "NRF_REGULATORS_POF_THR_2V2"], [126, 1, 1, "c.nrf_regulators_pof_thr_t.NRF_REGULATORS_POF_THR_2V3", "NRF_REGULATORS_POF_THR_2V3"], [126, 1, 1, "c.nrf_regulators_pof_thr_t.NRF_REGULATORS_POF_THR_2V4", "NRF_REGULATORS_POF_THR_2V4"], [126, 1, 1, "c.nrf_regulators_pof_thr_t.NRF_REGULATORS_POF_THR_2V5", "NRF_REGULATORS_POF_THR_2V5"], [126, 1, 1, "c.nrf_regulators_pof_thr_t.NRF_REGULATORS_POF_THR_2V6", "NRF_REGULATORS_POF_THR_2V6"], [126, 1, 1, "c.nrf_regulators_pof_thr_t.NRF_REGULATORS_POF_THR_2V7", "NRF_REGULATORS_POF_THR_2V7"], [126, 1, 1, "c.nrf_regulators_pof_thr_t.NRF_REGULATORS_POF_THR_2V8", "NRF_REGULATORS_POF_THR_2V8"]], "nrf_regulators_pof_thr_vddh_t": [[126, 1, 1, "c.nrf_regulators_pof_thr_vddh_t.NRF_REGULATORS_POF_THR_VDDH_2V7", "NRF_REGULATORS_POF_THR_VDDH_2V7"], [126, 1, 1, "c.nrf_regulators_pof_thr_vddh_t.NRF_REGULATORS_POF_THR_VDDH_2V8", "NRF_REGULATORS_POF_THR_VDDH_2V8"], [126, 1, 1, "c.nrf_regulators_pof_thr_vddh_t.NRF_REGULATORS_POF_THR_VDDH_2V9", "NRF_REGULATORS_POF_THR_VDDH_2V9"], [126, 1, 1, "c.nrf_regulators_pof_thr_vddh_t.NRF_REGULATORS_POF_THR_VDDH_3V0", "NRF_REGULATORS_POF_THR_VDDH_3V0"], [126, 1, 1, "c.nrf_regulators_pof_thr_vddh_t.NRF_REGULATORS_POF_THR_VDDH_3V1", "NRF_REGULATORS_POF_THR_VDDH_3V1"], [126, 1, 1, "c.nrf_regulators_pof_thr_vddh_t.NRF_REGULATORS_POF_THR_VDDH_3V2", "NRF_REGULATORS_POF_THR_VDDH_3V2"], [126, 1, 1, "c.nrf_regulators_pof_thr_vddh_t.NRF_REGULATORS_POF_THR_VDDH_3V3", "NRF_REGULATORS_POF_THR_VDDH_3V3"], [126, 1, 1, "c.nrf_regulators_pof_thr_vddh_t.NRF_REGULATORS_POF_THR_VDDH_3V4", "NRF_REGULATORS_POF_THR_VDDH_3V4"], [126, 1, 1, "c.nrf_regulators_pof_thr_vddh_t.NRF_REGULATORS_POF_THR_VDDH_3V5", "NRF_REGULATORS_POF_THR_VDDH_3V5"], [126, 1, 1, "c.nrf_regulators_pof_thr_vddh_t.NRF_REGULATORS_POF_THR_VDDH_3V6", "NRF_REGULATORS_POF_THR_VDDH_3V6"], [126, 1, 1, "c.nrf_regulators_pof_thr_vddh_t.NRF_REGULATORS_POF_THR_VDDH_3V7", "NRF_REGULATORS_POF_THR_VDDH_3V7"], [126, 1, 1, "c.nrf_regulators_pof_thr_vddh_t.NRF_REGULATORS_POF_THR_VDDH_3V8", "NRF_REGULATORS_POF_THR_VDDH_3V8"], [126, 1, 1, "c.nrf_regulators_pof_thr_vddh_t.NRF_REGULATORS_POF_THR_VDDH_3V9", "NRF_REGULATORS_POF_THR_VDDH_3V9"], [126, 1, 1, "c.nrf_regulators_pof_thr_vddh_t.NRF_REGULATORS_POF_THR_VDDH_4V0", "NRF_REGULATORS_POF_THR_VDDH_4V0"], [126, 1, 1, "c.nrf_regulators_pof_thr_vddh_t.NRF_REGULATORS_POF_THR_VDDH_4V1", "NRF_REGULATORS_POF_THR_VDDH_4V1"], [126, 1, 1, "c.nrf_regulators_pof_thr_vddh_t.NRF_REGULATORS_POF_THR_VDDH_4V2", "NRF_REGULATORS_POF_THR_VDDH_4V2"]], "nrf_regulators_system_off": [[126, 3, 1, "c.nrf_regulators_system_off", "p_reg"]], "nrf_regulators_vreg_enable_check": [[126, 3, 1, "c.nrf_regulators_vreg_enable_check", "p_reg"], [126, 3, 1, "c.nrf_regulators_vreg_enable_check", "regulator"]], "nrf_regulators_vreg_enable_set": [[126, 3, 1, "c.nrf_regulators_vreg_enable_set", "enable"], [126, 3, 1, "c.nrf_regulators_vreg_enable_set", "p_reg"], [126, 3, 1, "c.nrf_regulators_vreg_enable_set", "regulator"]], "nrf_regulators_vreg_t": [[126, 1, 1, "c.nrf_regulators_vreg_t.NRF_REGULATORS_VREG_HIGH", "NRF_REGULATORS_VREG_HIGH"], [126, 1, 1, "c.nrf_regulators_vreg_t.NRF_REGULATORS_VREG_MAIN", "NRF_REGULATORS_VREG_MAIN"], [126, 1, 1, "c.nrf_regulators_vreg_t.NRF_REGULATORS_VREG_MEDIUM", "NRF_REGULATORS_VREG_MEDIUM"], [126, 1, 1, "c.nrf_regulators_vreg_t.NRF_REGULATORS_VREG_RADIO", "NRF_REGULATORS_VREG_RADIO"]], "nrf_reset_network_force_off": [[127, 3, 1, "c.nrf_reset_network_force_off", "hold"], [127, 3, 1, "c.nrf_reset_network_force_off", "p_reg"]], "nrf_reset_resetreas_clear": [[127, 3, 1, "c.nrf_reset_resetreas_clear", "mask"], [127, 3, 1, "c.nrf_reset_resetreas_clear", "p_reg"]], "nrf_reset_resetreas_get": [[127, 3, 1, "c.nrf_reset_resetreas_get", "p_reg"]], "nrf_reset_resetreas_mask_t": [[127, 1, 1, "c.nrf_reset_resetreas_mask_t.NRF_RESET_RESETREAS_CTRLAPHARD_MASK", "NRF_RESET_RESETREAS_CTRLAPHARD_MASK"], [127, 1, 1, "c.nrf_reset_resetreas_mask_t.NRF_RESET_RESETREAS_CTRLAPPIN_MASK", "NRF_RESET_RESETREAS_CTRLAPPIN_MASK"], [127, 1, 1, "c.nrf_reset_resetreas_mask_t.NRF_RESET_RESETREAS_CTRLAPSOFT_MASK", "NRF_RESET_RESETREAS_CTRLAPSOFT_MASK"], [127, 1, 1, "c.nrf_reset_resetreas_mask_t.NRF_RESET_RESETREAS_CTRLAP_MASK", "NRF_RESET_RESETREAS_CTRLAP_MASK"], [127, 1, 1, "c.nrf_reset_resetreas_mask_t.NRF_RESET_RESETREAS_DIF_MASK", "NRF_RESET_RESETREAS_DIF_MASK"], [127, 1, 1, "c.nrf_reset_resetreas_mask_t.NRF_RESET_RESETREAS_DOG0_MASK", "NRF_RESET_RESETREAS_DOG0_MASK"], [127, 1, 1, "c.nrf_reset_resetreas_mask_t.NRF_RESET_RESETREAS_DOG1_MASK", "NRF_RESET_RESETREAS_DOG1_MASK"], [127, 1, 1, "c.nrf_reset_resetreas_mask_t.NRF_RESET_RESETREAS_GRTC_MASK", "NRF_RESET_RESETREAS_GRTC_MASK"], [127, 1, 1, "c.nrf_reset_resetreas_mask_t.NRF_RESET_RESETREAS_LCTRLAP_MASK", "NRF_RESET_RESETREAS_LCTRLAP_MASK"], [127, 1, 1, "c.nrf_reset_resetreas_mask_t.NRF_RESET_RESETREAS_LDOG_MASK", "NRF_RESET_RESETREAS_LDOG_MASK"], [127, 1, 1, "c.nrf_reset_resetreas_mask_t.NRF_RESET_RESETREAS_LLOCKUP_MASK", "NRF_RESET_RESETREAS_LLOCKUP_MASK"], [127, 1, 1, "c.nrf_reset_resetreas_mask_t.NRF_RESET_RESETREAS_LOCKUP_MASK", "NRF_RESET_RESETREAS_LOCKUP_MASK"], [127, 1, 1, "c.nrf_reset_resetreas_mask_t.NRF_RESET_RESETREAS_LPCOMP_MASK", "NRF_RESET_RESETREAS_LPCOMP_MASK"], [127, 1, 1, "c.nrf_reset_resetreas_mask_t.NRF_RESET_RESETREAS_LSREQ_MASK", "NRF_RESET_RESETREAS_LSREQ_MASK"], [127, 1, 1, "c.nrf_reset_resetreas_mask_t.NRF_RESET_RESETREAS_MFORCEOFF_MASK", "NRF_RESET_RESETREAS_MFORCEOFF_MASK"], [127, 1, 1, "c.nrf_reset_resetreas_mask_t.NRF_RESET_RESETREAS_NFC_MASK", "NRF_RESET_RESETREAS_NFC_MASK"], [127, 1, 1, "c.nrf_reset_resetreas_mask_t.NRF_RESET_RESETREAS_OFF_MASK", "NRF_RESET_RESETREAS_OFF_MASK"], [127, 1, 1, "c.nrf_reset_resetreas_mask_t.NRF_RESET_RESETREAS_RESETPIN_MASK", "NRF_RESET_RESETREAS_RESETPIN_MASK"], [127, 1, 1, "c.nrf_reset_resetreas_mask_t.NRF_RESET_RESETREAS_SECTAMPER_MASK", "NRF_RESET_RESETREAS_SECTAMPER_MASK"], [127, 1, 1, "c.nrf_reset_resetreas_mask_t.NRF_RESET_RESETREAS_SREQ_MASK", "NRF_RESET_RESETREAS_SREQ_MASK"], [127, 1, 1, "c.nrf_reset_resetreas_mask_t.NRF_RESET_RESETREAS_VBUS_MASK", "NRF_RESET_RESETREAS_VBUS_MASK"]], "nrf_resetinfo_error_address_get": [[128, 3, 1, "c.nrf_resetinfo_error_address_get", "p_reg"]], "nrf_resetinfo_error_address_set": [[128, 3, 1, "c.nrf_resetinfo_error_address_set", "address"], [128, 3, 1, "c.nrf_resetinfo_error_address_set", "p_reg"]], "nrf_resetinfo_error_status_get": [[128, 3, 1, "c.nrf_resetinfo_error_status_get", "p_reg"]], "nrf_resetinfo_error_status_set": [[128, 3, 1, "c.nrf_resetinfo_error_status_set", "p_reg"], [128, 3, 1, "c.nrf_resetinfo_error_status_set", "status"]], "nrf_resetinfo_mask_lockup_check": [[128, 3, 1, "c.nrf_resetinfo_mask_lockup_check", "p_reg"]], "nrf_resetinfo_mask_lockup_set": [[128, 3, 1, "c.nrf_resetinfo_mask_lockup_set", "enable"], [128, 3, 1, "c.nrf_resetinfo_mask_lockup_set", "p_reg"]], "nrf_resetinfo_resetreas_global_get": [[128, 3, 1, "c.nrf_resetinfo_resetreas_global_get", "p_reg"]], "nrf_resetinfo_resetreas_global_mask_t": [[128, 1, 1, "c.nrf_resetinfo_resetreas_global_mask_t.NRF_RESETINFO_RESETREAS_GLOBAL_CTRLAP_MASK", "NRF_RESETINFO_RESETREAS_GLOBAL_CTRLAP_MASK"], [128, 1, 1, "c.nrf_resetinfo_resetreas_global_mask_t.NRF_RESETINFO_RESETREAS_GLOBAL_DIF_MASK", "NRF_RESETINFO_RESETREAS_GLOBAL_DIF_MASK"], [128, 1, 1, "c.nrf_resetinfo_resetreas_global_mask_t.NRF_RESETINFO_RESETREAS_GLOBAL_DOG_MASK", "NRF_RESETINFO_RESETREAS_GLOBAL_DOG_MASK"], [128, 1, 1, "c.nrf_resetinfo_resetreas_global_mask_t.NRF_RESETINFO_RESETREAS_GLOBAL_GPIO_MASK", "NRF_RESETINFO_RESETREAS_GLOBAL_GPIO_MASK"], [128, 1, 1, "c.nrf_resetinfo_resetreas_global_mask_t.NRF_RESETINFO_RESETREAS_GLOBAL_GRTC_MASK", "NRF_RESETINFO_RESETREAS_GLOBAL_GRTC_MASK"], [128, 1, 1, "c.nrf_resetinfo_resetreas_global_mask_t.NRF_RESETINFO_RESETREAS_GLOBAL_LPCOMP_MASK", "NRF_RESETINFO_RESETREAS_GLOBAL_LPCOMP_MASK"], [128, 1, 1, "c.nrf_resetinfo_resetreas_global_mask_t.NRF_RESETINFO_RESETREAS_GLOBAL_NFC_MASK", "NRF_RESETINFO_RESETREAS_GLOBAL_NFC_MASK"], [128, 1, 1, "c.nrf_resetinfo_resetreas_global_mask_t.NRF_RESETINFO_RESETREAS_GLOBAL_PIN_MASK", "NRF_RESETINFO_RESETREAS_GLOBAL_PIN_MASK"], [128, 1, 1, "c.nrf_resetinfo_resetreas_global_mask_t.NRF_RESETINFO_RESETREAS_GLOBAL_POR_MASK", "NRF_RESETINFO_RESETREAS_GLOBAL_POR_MASK"], [128, 1, 1, "c.nrf_resetinfo_resetreas_global_mask_t.NRF_RESETINFO_RESETREAS_GLOBAL_SECLOCKUP_MASK", "NRF_RESETINFO_RESETREAS_GLOBAL_SECLOCKUP_MASK"], [128, 1, 1, "c.nrf_resetinfo_resetreas_global_mask_t.NRF_RESETINFO_RESETREAS_GLOBAL_SECSREQ_MASK", "NRF_RESETINFO_RESETREAS_GLOBAL_SECSREQ_MASK"], [128, 1, 1, "c.nrf_resetinfo_resetreas_global_mask_t.NRF_RESETINFO_RESETREAS_GLOBAL_SECTAMPER_MASK", "NRF_RESETINFO_RESETREAS_GLOBAL_SECTAMPER_MASK"], [128, 1, 1, "c.nrf_resetinfo_resetreas_global_mask_t.NRF_RESETINFO_RESETREAS_GLOBAL_SECWDT0_MASK", "NRF_RESETINFO_RESETREAS_GLOBAL_SECWDT0_MASK"], [128, 1, 1, "c.nrf_resetinfo_resetreas_global_mask_t.NRF_RESETINFO_RESETREAS_GLOBAL_SECWDT1_MASK", "NRF_RESETINFO_RESETREAS_GLOBAL_SECWDT1_MASK"], [128, 1, 1, "c.nrf_resetinfo_resetreas_global_mask_t.NRF_RESETINFO_RESETREAS_GLOBAL_VUSB_MASK", "NRF_RESETINFO_RESETREAS_GLOBAL_VUSB_MASK"]], "nrf_resetinfo_resetreas_global_set": [[128, 3, 1, "c.nrf_resetinfo_resetreas_global_set", "mask"], [128, 3, 1, "c.nrf_resetinfo_resetreas_global_set", "p_reg"]], "nrf_resetinfo_resetreas_local_get": [[128, 3, 1, "c.nrf_resetinfo_resetreas_local_get", "p_reg"]], "nrf_resetinfo_resetreas_local_mask_t": [[128, 1, 1, "c.nrf_resetinfo_resetreas_local_mask_t.NRF_RESETINFO_RESETREAS_LOCAL_CROSSDOMAIN_MASK", "NRF_RESETINFO_RESETREAS_LOCAL_CROSSDOMAIN_MASK"], [128, 1, 1, "c.nrf_resetinfo_resetreas_local_mask_t.NRF_RESETINFO_RESETREAS_LOCAL_DOGNS_MASK", "NRF_RESETINFO_RESETREAS_LOCAL_DOGNS_MASK"], [128, 1, 1, "c.nrf_resetinfo_resetreas_local_mask_t.NRF_RESETINFO_RESETREAS_LOCAL_DOG_MASK", "NRF_RESETINFO_RESETREAS_LOCAL_DOG_MASK"], [128, 1, 1, "c.nrf_resetinfo_resetreas_local_mask_t.NRF_RESETINFO_RESETREAS_LOCAL_LOCKUP_MASK", "NRF_RESETINFO_RESETREAS_LOCAL_LOCKUP_MASK"], [128, 1, 1, "c.nrf_resetinfo_resetreas_local_mask_t.NRF_RESETINFO_RESETREAS_LOCAL_SREQ_MASK", "NRF_RESETINFO_RESETREAS_LOCAL_SREQ_MASK"], [128, 1, 1, "c.nrf_resetinfo_resetreas_local_mask_t.NRF_RESETINFO_RESETREAS_LOCAL_UNRETAINED_MASK", "NRF_RESETINFO_RESETREAS_LOCAL_UNRETAINED_MASK"]], "nrf_resetinfo_resetreas_local_set": [[128, 3, 1, "c.nrf_resetinfo_resetreas_local_set", "mask"], [128, 3, 1, "c.nrf_resetinfo_resetreas_local_set", "p_reg"]], "nrf_resetinfo_restore_valid_check": [[128, 3, 1, "c.nrf_resetinfo_restore_valid_check", "p_reg"]], "nrf_resetinfo_restore_valid_set": [[128, 3, 1, "c.nrf_resetinfo_restore_valid_set", "enable"], [128, 3, 1, "c.nrf_resetinfo_restore_valid_set", "p_reg"]], "nrf_rng_error_correction_disable": [[131, 3, 1, "c.nrf_rng_error_correction_disable", "p_reg"]], "nrf_rng_error_correction_enable": [[131, 3, 1, "c.nrf_rng_error_correction_enable", "p_reg"]], "nrf_rng_event_address_get": [[131, 3, 1, "c.nrf_rng_event_address_get", "p_reg"], [131, 3, 1, "c.nrf_rng_event_address_get", "rng_event"]], "nrf_rng_event_check": [[131, 3, 1, "c.nrf_rng_event_check", "p_reg"], [131, 3, 1, "c.nrf_rng_event_check", "rng_event"]], "nrf_rng_event_clear": [[131, 3, 1, "c.nrf_rng_event_clear", "p_reg"], [131, 3, 1, "c.nrf_rng_event_clear", "rng_event"]], "nrf_rng_event_t": [[131, 1, 1, "c.nrf_rng_event_t.NRF_RNG_EVENT_VALRDY", "NRF_RNG_EVENT_VALRDY"]], "nrf_rng_int_disable": [[131, 3, 1, "c.nrf_rng_int_disable", "mask"], [131, 3, 1, "c.nrf_rng_int_disable", "p_reg"]], "nrf_rng_int_enable": [[131, 3, 1, "c.nrf_rng_int_enable", "mask"], [131, 3, 1, "c.nrf_rng_int_enable", "p_reg"]], "nrf_rng_int_enable_check": [[131, 3, 1, "c.nrf_rng_int_enable_check", "mask"], [131, 3, 1, "c.nrf_rng_int_enable_check", "p_reg"]], "nrf_rng_int_mask_t": [[131, 1, 1, "c.nrf_rng_int_mask_t.NRF_RNG_INT_VALRDY_MASK", "NRF_RNG_INT_VALRDY_MASK"]], "nrf_rng_publish_clear": [[131, 3, 1, "c.nrf_rng_publish_clear", "event"], [131, 3, 1, "c.nrf_rng_publish_clear", "p_reg"]], "nrf_rng_publish_set": [[131, 3, 1, "c.nrf_rng_publish_set", "channel"], [131, 3, 1, "c.nrf_rng_publish_set", "event"], [131, 3, 1, "c.nrf_rng_publish_set", "p_reg"]], "nrf_rng_random_value_get": [[131, 3, 1, "c.nrf_rng_random_value_get", "p_reg"]], "nrf_rng_short_mask_t": [[131, 1, 1, "c.nrf_rng_short_mask_t.NRF_RNG_SHORT_VALRDY_STOP_MASK", "NRF_RNG_SHORT_VALRDY_STOP_MASK"]], "nrf_rng_shorts_disable": [[131, 3, 1, "c.nrf_rng_shorts_disable", "mask"], [131, 3, 1, "c.nrf_rng_shorts_disable", "p_reg"]], "nrf_rng_shorts_enable": [[131, 3, 1, "c.nrf_rng_shorts_enable", "mask"], [131, 3, 1, "c.nrf_rng_shorts_enable", "p_reg"]], "nrf_rng_subscribe_clear": [[131, 3, 1, "c.nrf_rng_subscribe_clear", "p_reg"], [131, 3, 1, "c.nrf_rng_subscribe_clear", "task"]], "nrf_rng_subscribe_set": [[131, 3, 1, "c.nrf_rng_subscribe_set", "channel"], [131, 3, 1, "c.nrf_rng_subscribe_set", "p_reg"], [131, 3, 1, "c.nrf_rng_subscribe_set", "task"]], "nrf_rng_task_address_get": [[131, 3, 1, "c.nrf_rng_task_address_get", "p_reg"], [131, 3, 1, "c.nrf_rng_task_address_get", "rng_task"]], "nrf_rng_task_t": [[131, 1, 1, "c.nrf_rng_task_t.NRF_RNG_TASK_START", "NRF_RNG_TASK_START"], [131, 1, 1, "c.nrf_rng_task_t.NRF_RNG_TASK_STOP", "NRF_RNG_TASK_STOP"]], "nrf_rng_task_trigger": [[131, 3, 1, "c.nrf_rng_task_trigger", "p_reg"], [131, 3, 1, "c.nrf_rng_task_trigger", "rng_task"]], "nrf_rramc_config_get": [[134, 3, 1, "c.nrf_rramc_config_get", "p_config"], [134, 3, 1, "c.nrf_rramc_config_get", "p_reg"]], "nrf_rramc_config_set": [[134, 3, 1, "c.nrf_rramc_config_set", "p_config"], [134, 3, 1, "c.nrf_rramc_config_set", "p_reg"]], "nrf_rramc_config_t": [[134, 6, 1, "c.nrf_rramc_config_t.mode_write", "mode_write"], [134, 6, 1, "c.nrf_rramc_config_t.write_buff_size", "write_buff_size"]], "nrf_rramc_empty_buffer_check": [[134, 3, 1, "c.nrf_rramc_empty_buffer_check", "p_reg"]], "nrf_rramc_erase_all_check": [[134, 3, 1, "c.nrf_rramc_erase_all_check", "p_reg"]], "nrf_rramc_erase_all_set": [[134, 3, 1, "c.nrf_rramc_erase_all_set", "p_reg"]], "nrf_rramc_error_access_addr_get": [[134, 3, 1, "c.nrf_rramc_error_access_addr_get", "p_reg"]], "nrf_rramc_event_address_get": [[134, 3, 1, "c.nrf_rramc_event_address_get", "event"], [134, 3, 1, "c.nrf_rramc_event_address_get", "p_reg"]], "nrf_rramc_event_check": [[134, 3, 1, "c.nrf_rramc_event_check", "event"], [134, 3, 1, "c.nrf_rramc_event_check", "p_reg"]], "nrf_rramc_event_clear": [[134, 3, 1, "c.nrf_rramc_event_clear", "event"], [134, 3, 1, "c.nrf_rramc_event_clear", "p_reg"]], "nrf_rramc_event_t": [[134, 1, 1, "c.nrf_rramc_event_t.NRF_RRAMC_EVENT_ERROR_ACCESS", "NRF_RRAMC_EVENT_ERROR_ACCESS"], [134, 1, 1, "c.nrf_rramc_event_t.NRF_RRAMC_EVENT_READY", "NRF_RRAMC_EVENT_READY"], [134, 1, 1, "c.nrf_rramc_event_t.NRF_RRAMC_EVENT_READY_NEXT", "NRF_RRAMC_EVENT_READY_NEXT"], [134, 1, 1, "c.nrf_rramc_event_t.NRF_RRAMC_EVENT_WOKENUP", "NRF_RRAMC_EVENT_WOKENUP"]], "nrf_rramc_int_disable": [[134, 3, 1, "c.nrf_rramc_int_disable", "mask"], [134, 3, 1, "c.nrf_rramc_int_disable", "p_reg"]], "nrf_rramc_int_enable": [[134, 3, 1, "c.nrf_rramc_int_enable", "mask"], [134, 3, 1, "c.nrf_rramc_int_enable", "p_reg"]], "nrf_rramc_int_enable_check": [[134, 3, 1, "c.nrf_rramc_int_enable_check", "mask"], [134, 3, 1, "c.nrf_rramc_int_enable_check", "p_reg"]], "nrf_rramc_int_mask_t": [[134, 1, 1, "c.nrf_rramc_int_mask_t.NRF_RRAMC_ALL_INTS_MASK", "NRF_RRAMC_ALL_INTS_MASK"], [134, 1, 1, "c.nrf_rramc_int_mask_t.NRF_RRAMC_INT_ERROR_ACCESS_MASK", "NRF_RRAMC_INT_ERROR_ACCESS_MASK"], [134, 1, 1, "c.nrf_rramc_int_mask_t.NRF_RRAMC_INT_READY_MASK", "NRF_RRAMC_INT_READY_MASK"], [134, 1, 1, "c.nrf_rramc_int_mask_t.NRF_RRAMC_INT_READY_NEXT_MASK", "NRF_RRAMC_INT_READY_NEXT_MASK"], [134, 1, 1, "c.nrf_rramc_int_mask_t.NRF_RRAMC_INT_WOKENUP_MASK", "NRF_RRAMC_INT_WOKENUP_MASK"]], "nrf_rramc_int_pending_get": [[134, 3, 1, "c.nrf_rramc_int_pending_get", "p_reg"]], "nrf_rramc_power_config_get": [[134, 3, 1, "c.nrf_rramc_power_config_get", "p_config"], [134, 3, 1, "c.nrf_rramc_power_config_get", "p_reg"]], "nrf_rramc_power_config_set": [[134, 3, 1, "c.nrf_rramc_power_config_set", "p_config"], [134, 3, 1, "c.nrf_rramc_power_config_set", "p_reg"]], "nrf_rramc_power_t": [[134, 6, 1, "c.nrf_rramc_power_t.abort_on_pof", "abort_on_pof"], [134, 6, 1, "c.nrf_rramc_power_t.access_timeout", "access_timeout"]], "nrf_rramc_publish_clear": [[134, 3, 1, "c.nrf_rramc_publish_clear", "event"], [134, 3, 1, "c.nrf_rramc_publish_clear", "p_reg"]], "nrf_rramc_publish_set": [[134, 3, 1, "c.nrf_rramc_publish_set", "channel"], [134, 3, 1, "c.nrf_rramc_publish_set", "event"], [134, 3, 1, "c.nrf_rramc_publish_set", "p_reg"]], "nrf_rramc_ready_check": [[134, 3, 1, "c.nrf_rramc_ready_check", "p_reg"]], "nrf_rramc_ready_next_timeout_get": [[134, 3, 1, "c.nrf_rramc_ready_next_timeout_get", "p_config"], [134, 3, 1, "c.nrf_rramc_ready_next_timeout_get", "p_reg"]], "nrf_rramc_ready_next_timeout_set": [[134, 3, 1, "c.nrf_rramc_ready_next_timeout_set", "p_config"], [134, 3, 1, "c.nrf_rramc_ready_next_timeout_set", "p_reg"]], "nrf_rramc_ready_next_timeout_t": [[134, 6, 1, "c.nrf_rramc_ready_next_timeout_t.enable", "enable"], [134, 6, 1, "c.nrf_rramc_ready_next_timeout_t.value", "value"]], "nrf_rramc_region_config_get": [[134, 3, 1, "c.nrf_rramc_region_config_get", "p_config"], [134, 3, 1, "c.nrf_rramc_region_config_get", "p_reg"], [134, 3, 1, "c.nrf_rramc_region_config_get", "region"]], "nrf_rramc_region_config_set": [[134, 3, 1, "c.nrf_rramc_region_config_set", "p_config"], [134, 3, 1, "c.nrf_rramc_region_config_set", "p_reg"], [134, 3, 1, "c.nrf_rramc_region_config_set", "region"]], "nrf_rramc_region_config_t": [[134, 6, 1, "c.nrf_rramc_region_config_t.address", "address"], [134, 6, 1, "c.nrf_rramc_region_config_t.lock", "lock"], [134, 6, 1, "c.nrf_rramc_region_config_t.permissions", "permissions"], [134, 6, 1, "c.nrf_rramc_region_config_t.size_kb", "size_kb"], [134, 6, 1, "c.nrf_rramc_region_config_t.writeonce", "writeonce"]], "nrf_rramc_region_perm_mask_t": [[134, 1, 1, "c.nrf_rramc_region_perm_mask_t.NRF_RRAMC_REGION_PERM_EXECUTE_MASK", "NRF_RRAMC_REGION_PERM_EXECUTE_MASK"], [134, 1, 1, "c.nrf_rramc_region_perm_mask_t.NRF_RRAMC_REGION_PERM_READ_MASK", "NRF_RRAMC_REGION_PERM_READ_MASK"], [134, 1, 1, "c.nrf_rramc_region_perm_mask_t.NRF_RRAMC_REGION_PERM_SECURE_MASK", "NRF_RRAMC_REGION_PERM_SECURE_MASK"], [134, 1, 1, "c.nrf_rramc_region_perm_mask_t.NRF_RRAMC_REGION_PERM_WRITE_MASK", "NRF_RRAMC_REGION_PERM_WRITE_MASK"]], "nrf_rramc_subscribe_clear": [[134, 3, 1, "c.nrf_rramc_subscribe_clear", "p_reg"], [134, 3, 1, "c.nrf_rramc_subscribe_clear", "task"]], "nrf_rramc_subscribe_set": [[134, 3, 1, "c.nrf_rramc_subscribe_set", "channel"], [134, 3, 1, "c.nrf_rramc_subscribe_set", "p_reg"], [134, 3, 1, "c.nrf_rramc_subscribe_set", "task"]], "nrf_rramc_task_address_get": [[134, 3, 1, "c.nrf_rramc_task_address_get", "p_reg"], [134, 3, 1, "c.nrf_rramc_task_address_get", "task"]], "nrf_rramc_task_t": [[134, 1, 1, "c.nrf_rramc_task_t.NRF_RRAMC_TASK_COMMIT_WRITEBUF", "NRF_RRAMC_TASK_COMMIT_WRITEBUF"], [134, 1, 1, "c.nrf_rramc_task_t.NRF_RRAMC_TASK_WAKEUP", "NRF_RRAMC_TASK_WAKEUP"]], "nrf_rramc_task_trigger": [[134, 3, 1, "c.nrf_rramc_task_trigger", "p_reg"], [134, 3, 1, "c.nrf_rramc_task_trigger", "task"]], "nrf_rramc_write_ready_check": [[134, 3, 1, "c.nrf_rramc_write_ready_check", "p_reg"]], "nrf_rtc_capture_task_get": [[138, 3, 1, "c.nrf_rtc_capture_task_get", "index"]], "nrf_rtc_cc_get": [[138, 3, 1, "c.nrf_rtc_cc_get", "ch"], [138, 3, 1, "c.nrf_rtc_cc_get", "p_reg"]], "nrf_rtc_cc_set": [[138, 3, 1, "c.nrf_rtc_cc_set", "cc_val"], [138, 3, 1, "c.nrf_rtc_cc_set", "ch"], [138, 3, 1, "c.nrf_rtc_cc_set", "p_reg"]], "nrf_rtc_compare_event_get": [[138, 3, 1, "c.nrf_rtc_compare_event_get", "index"]], "nrf_rtc_counter_get": [[138, 3, 1, "c.nrf_rtc_counter_get", "p_reg"]], "nrf_rtc_event_address_get": [[138, 3, 1, "c.nrf_rtc_event_address_get", "event"], [138, 3, 1, "c.nrf_rtc_event_address_get", "p_reg"]], "nrf_rtc_event_check": [[138, 3, 1, "c.nrf_rtc_event_check", "event"], [138, 3, 1, "c.nrf_rtc_event_check", "p_reg"]], "nrf_rtc_event_clear": [[138, 3, 1, "c.nrf_rtc_event_clear", "event"], [138, 3, 1, "c.nrf_rtc_event_clear", "p_reg"]], "nrf_rtc_event_disable": [[138, 3, 1, "c.nrf_rtc_event_disable", "mask"], [138, 3, 1, "c.nrf_rtc_event_disable", "p_reg"]], "nrf_rtc_event_enable": [[138, 3, 1, "c.nrf_rtc_event_enable", "mask"], [138, 3, 1, "c.nrf_rtc_event_enable", "p_reg"]], "nrf_rtc_event_t": [[138, 1, 1, "c.nrf_rtc_event_t.NRF_RTC_EVENT_COMPARE_0", "NRF_RTC_EVENT_COMPARE_0"], [138, 1, 1, "c.nrf_rtc_event_t.NRF_RTC_EVENT_COMPARE_1", "NRF_RTC_EVENT_COMPARE_1"], [138, 1, 1, "c.nrf_rtc_event_t.NRF_RTC_EVENT_COMPARE_2", "NRF_RTC_EVENT_COMPARE_2"], [138, 1, 1, "c.nrf_rtc_event_t.NRF_RTC_EVENT_COMPARE_3", "NRF_RTC_EVENT_COMPARE_3"], [138, 1, 1, "c.nrf_rtc_event_t.NRF_RTC_EVENT_OVERFLOW", "NRF_RTC_EVENT_OVERFLOW"], [138, 1, 1, "c.nrf_rtc_event_t.NRF_RTC_EVENT_TICK", "NRF_RTC_EVENT_TICK"]], "nrf_rtc_int_disable": [[138, 3, 1, "c.nrf_rtc_int_disable", "mask"], [138, 3, 1, "c.nrf_rtc_int_disable", "p_reg"]], "nrf_rtc_int_enable": [[138, 3, 1, "c.nrf_rtc_int_enable", "mask"], [138, 3, 1, "c.nrf_rtc_int_enable", "p_reg"]], "nrf_rtc_int_enable_check": [[138, 3, 1, "c.nrf_rtc_int_enable_check", "mask"], [138, 3, 1, "c.nrf_rtc_int_enable_check", "p_reg"]], "nrf_rtc_int_t": [[138, 1, 1, "c.nrf_rtc_int_t.NRF_RTC_INT_COMPARE0_MASK", "NRF_RTC_INT_COMPARE0_MASK"], [138, 1, 1, "c.nrf_rtc_int_t.NRF_RTC_INT_COMPARE1_MASK", "NRF_RTC_INT_COMPARE1_MASK"], [138, 1, 1, "c.nrf_rtc_int_t.NRF_RTC_INT_COMPARE2_MASK", "NRF_RTC_INT_COMPARE2_MASK"], [138, 1, 1, "c.nrf_rtc_int_t.NRF_RTC_INT_COMPARE3_MASK", "NRF_RTC_INT_COMPARE3_MASK"], [138, 1, 1, "c.nrf_rtc_int_t.NRF_RTC_INT_OVERFLOW_MASK", "NRF_RTC_INT_OVERFLOW_MASK"], [138, 1, 1, "c.nrf_rtc_int_t.NRF_RTC_INT_TICK_MASK", "NRF_RTC_INT_TICK_MASK"]], "nrf_rtc_prescaler_get": [[138, 3, 1, "c.nrf_rtc_prescaler_get", "p_reg"]], "nrf_rtc_prescaler_set": [[138, 3, 1, "c.nrf_rtc_prescaler_set", "p_reg"], [138, 3, 1, "c.nrf_rtc_prescaler_set", "val"]], "nrf_rtc_publish_clear": [[138, 3, 1, "c.nrf_rtc_publish_clear", "event"], [138, 3, 1, "c.nrf_rtc_publish_clear", "p_reg"]], "nrf_rtc_publish_set": [[138, 3, 1, "c.nrf_rtc_publish_set", "channel"], [138, 3, 1, "c.nrf_rtc_publish_set", "event"], [138, 3, 1, "c.nrf_rtc_publish_set", "p_reg"]], "nrf_rtc_subscribe_clear": [[138, 3, 1, "c.nrf_rtc_subscribe_clear", "p_reg"], [138, 3, 1, "c.nrf_rtc_subscribe_clear", "task"]], "nrf_rtc_subscribe_set": [[138, 3, 1, "c.nrf_rtc_subscribe_set", "channel"], [138, 3, 1, "c.nrf_rtc_subscribe_set", "p_reg"], [138, 3, 1, "c.nrf_rtc_subscribe_set", "task"]], "nrf_rtc_task_address_get": [[138, 3, 1, "c.nrf_rtc_task_address_get", "p_reg"], [138, 3, 1, "c.nrf_rtc_task_address_get", "task"]], "nrf_rtc_task_t": [[138, 1, 1, "c.nrf_rtc_task_t.NRF_RTC_TASK_CAPTURE_0", "NRF_RTC_TASK_CAPTURE_0"], [138, 1, 1, "c.nrf_rtc_task_t.NRF_RTC_TASK_CAPTURE_1", "NRF_RTC_TASK_CAPTURE_1"], [138, 1, 1, "c.nrf_rtc_task_t.NRF_RTC_TASK_CAPTURE_2", "NRF_RTC_TASK_CAPTURE_2"], [138, 1, 1, "c.nrf_rtc_task_t.NRF_RTC_TASK_CAPTURE_3", "NRF_RTC_TASK_CAPTURE_3"], [138, 1, 1, "c.nrf_rtc_task_t.NRF_RTC_TASK_CLEAR", "NRF_RTC_TASK_CLEAR"], [138, 1, 1, "c.nrf_rtc_task_t.NRF_RTC_TASK_START", "NRF_RTC_TASK_START"], [138, 1, 1, "c.nrf_rtc_task_t.NRF_RTC_TASK_STOP", "NRF_RTC_TASK_STOP"], [138, 1, 1, "c.nrf_rtc_task_t.NRF_RTC_TASK_TRIGGER_OVERFLOW", "NRF_RTC_TASK_TRIGGER_OVERFLOW"]], "nrf_rtc_task_trigger": [[138, 3, 1, "c.nrf_rtc_task_trigger", "p_reg"], [138, 3, 1, "c.nrf_rtc_task_trigger", "task"]], "nrf_saadc_acqtime_t": [[142, 1, 1, "c.nrf_saadc_acqtime_t.NRF_SAADC_ACQTIME_10US", "NRF_SAADC_ACQTIME_10US"], [142, 1, 1, "c.nrf_saadc_acqtime_t.NRF_SAADC_ACQTIME_15US", "NRF_SAADC_ACQTIME_15US"], [142, 1, 1, "c.nrf_saadc_acqtime_t.NRF_SAADC_ACQTIME_20US", "NRF_SAADC_ACQTIME_20US"], [142, 1, 1, "c.nrf_saadc_acqtime_t.NRF_SAADC_ACQTIME_3US", "NRF_SAADC_ACQTIME_3US"], [142, 1, 1, "c.nrf_saadc_acqtime_t.NRF_SAADC_ACQTIME_40US", "NRF_SAADC_ACQTIME_40US"], [142, 1, 1, "c.nrf_saadc_acqtime_t.NRF_SAADC_ACQTIME_5US", "NRF_SAADC_ACQTIME_5US"]], "nrf_saadc_amount_get": [[142, 3, 1, "c.nrf_saadc_amount_get", "p_reg"]], "nrf_saadc_buffer_init": [[142, 3, 1, "c.nrf_saadc_buffer_init", "p_buffer"], [142, 3, 1, "c.nrf_saadc_buffer_init", "p_reg"], [142, 3, 1, "c.nrf_saadc_buffer_init", "size"]], "nrf_saadc_buffer_pointer_get": [[142, 3, 1, "c.nrf_saadc_buffer_pointer_get", "p_reg"]], "nrf_saadc_buffer_pointer_set": [[142, 3, 1, "c.nrf_saadc_buffer_pointer_set", "p_buffer"], [142, 3, 1, "c.nrf_saadc_buffer_pointer_set", "p_reg"]], "nrf_saadc_burst_set": [[142, 3, 1, "c.nrf_saadc_burst_set", "burst"], [142, 3, 1, "c.nrf_saadc_burst_set", "channel"], [142, 3, 1, "c.nrf_saadc_burst_set", "p_reg"]], "nrf_saadc_burst_t": [[142, 1, 1, "c.nrf_saadc_burst_t.NRF_SAADC_BURST_DISABLED", "NRF_SAADC_BURST_DISABLED"], [142, 1, 1, "c.nrf_saadc_burst_t.NRF_SAADC_BURST_ENABLED", "NRF_SAADC_BURST_ENABLED"]], "nrf_saadc_busy_check": [[142, 3, 1, "c.nrf_saadc_busy_check", "p_reg"]], "nrf_saadc_channel_config_t": [[142, 6, 1, "c.nrf_saadc_channel_config_t.acq_time", "acq_time"], [142, 6, 1, "c.nrf_saadc_channel_config_t.burst", "burst"], [142, 6, 1, "c.nrf_saadc_channel_config_t.conv_time", "conv_time"], [142, 6, 1, "c.nrf_saadc_channel_config_t.gain", "gain"], [142, 6, 1, "c.nrf_saadc_channel_config_t.mode", "mode"], [142, 6, 1, "c.nrf_saadc_channel_config_t.reference", "reference"], [142, 6, 1, "c.nrf_saadc_channel_config_t.resistor_n", "resistor_n"], [142, 6, 1, "c.nrf_saadc_channel_config_t.resistor_p", "resistor_p"]], "nrf_saadc_channel_init": [[142, 3, 1, "c.nrf_saadc_channel_init", "channel"], [142, 3, 1, "c.nrf_saadc_channel_init", "config"], [142, 3, 1, "c.nrf_saadc_channel_init", "p_reg"]], "nrf_saadc_channel_input_set": [[142, 3, 1, "c.nrf_saadc_channel_input_set", "channel"], [142, 3, 1, "c.nrf_saadc_channel_input_set", "p_reg"], [142, 3, 1, "c.nrf_saadc_channel_input_set", "pseln"], [142, 3, 1, "c.nrf_saadc_channel_input_set", "pselp"]], "nrf_saadc_channel_limits_set": [[142, 3, 1, "c.nrf_saadc_channel_limits_set", "channel"], [142, 3, 1, "c.nrf_saadc_channel_limits_set", "high"], [142, 3, 1, "c.nrf_saadc_channel_limits_set", "low"], [142, 3, 1, "c.nrf_saadc_channel_limits_set", "p_reg"]], "nrf_saadc_channel_pos_input_set": [[142, 3, 1, "c.nrf_saadc_channel_pos_input_set", "channel"], [142, 3, 1, "c.nrf_saadc_channel_pos_input_set", "p_reg"], [142, 3, 1, "c.nrf_saadc_channel_pos_input_set", "pselp"]], "nrf_saadc_config_t": [[142, 6, 1, "c.nrf_saadc_config_t.buffer", "buffer"], [142, 6, 1, "c.nrf_saadc_config_t.buffer_size", "buffer_size"], [142, 6, 1, "c.nrf_saadc_config_t.oversample", "oversample"], [142, 6, 1, "c.nrf_saadc_config_t.resolution", "resolution"]], "nrf_saadc_continuous_mode_disable": [[142, 3, 1, "c.nrf_saadc_continuous_mode_disable", "p_reg"]], "nrf_saadc_continuous_mode_enable": [[142, 3, 1, "c.nrf_saadc_continuous_mode_enable", "cc"], [142, 3, 1, "c.nrf_saadc_continuous_mode_enable", "p_reg"]], "nrf_saadc_continuous_mode_enable_check": [[142, 3, 1, "c.nrf_saadc_continuous_mode_enable_check", "p_reg"]], "nrf_saadc_disable": [[142, 3, 1, "c.nrf_saadc_disable", "p_reg"]], "nrf_saadc_enable": [[142, 3, 1, "c.nrf_saadc_enable", "p_reg"]], "nrf_saadc_enable_check": [[142, 3, 1, "c.nrf_saadc_enable_check", "p_reg"]], "nrf_saadc_event_address_get": [[142, 3, 1, "c.nrf_saadc_event_address_get", "event"], [142, 3, 1, "c.nrf_saadc_event_address_get", "p_reg"]], "nrf_saadc_event_check": [[142, 3, 1, "c.nrf_saadc_event_check", "event"], [142, 3, 1, "c.nrf_saadc_event_check", "p_reg"]], "nrf_saadc_event_clear": [[142, 3, 1, "c.nrf_saadc_event_clear", "event"], [142, 3, 1, "c.nrf_saadc_event_clear", "p_reg"]], "nrf_saadc_event_t": [[142, 1, 1, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_CALIBRATEDONE", "NRF_SAADC_EVENT_CALIBRATEDONE"], [142, 1, 1, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_CH0_LIMITH", "NRF_SAADC_EVENT_CH0_LIMITH"], [142, 1, 1, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_CH0_LIMITL", "NRF_SAADC_EVENT_CH0_LIMITL"], [142, 1, 1, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_CH1_LIMITH", "NRF_SAADC_EVENT_CH1_LIMITH"], [142, 1, 1, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_CH1_LIMITL", "NRF_SAADC_EVENT_CH1_LIMITL"], [142, 1, 1, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_CH2_LIMITH", "NRF_SAADC_EVENT_CH2_LIMITH"], [142, 1, 1, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_CH2_LIMITL", "NRF_SAADC_EVENT_CH2_LIMITL"], [142, 1, 1, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_CH3_LIMITH", "NRF_SAADC_EVENT_CH3_LIMITH"], [142, 1, 1, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_CH3_LIMITL", "NRF_SAADC_EVENT_CH3_LIMITL"], [142, 1, 1, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_CH4_LIMITH", "NRF_SAADC_EVENT_CH4_LIMITH"], [142, 1, 1, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_CH4_LIMITL", "NRF_SAADC_EVENT_CH4_LIMITL"], [142, 1, 1, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_CH5_LIMITH", "NRF_SAADC_EVENT_CH5_LIMITH"], [142, 1, 1, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_CH5_LIMITL", "NRF_SAADC_EVENT_CH5_LIMITL"], [142, 1, 1, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_CH6_LIMITH", "NRF_SAADC_EVENT_CH6_LIMITH"], [142, 1, 1, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_CH6_LIMITL", "NRF_SAADC_EVENT_CH6_LIMITL"], [142, 1, 1, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_CH7_LIMITH", "NRF_SAADC_EVENT_CH7_LIMITH"], [142, 1, 1, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_CH7_LIMITL", "NRF_SAADC_EVENT_CH7_LIMITL"], [142, 1, 1, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_DONE", "NRF_SAADC_EVENT_DONE"], [142, 1, 1, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_END", "NRF_SAADC_EVENT_END"], [142, 1, 1, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_RESULTDONE", "NRF_SAADC_EVENT_RESULTDONE"], [142, 1, 1, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_STARTED", "NRF_SAADC_EVENT_STARTED"], [142, 1, 1, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_STOPPED", "NRF_SAADC_EVENT_STOPPED"]], "nrf_saadc_gain_t": [[142, 1, 1, "c.nrf_saadc_gain_t.NRF_SAADC_GAIN1", "NRF_SAADC_GAIN1"], [142, 1, 1, "c.nrf_saadc_gain_t.NRF_SAADC_GAIN1_2", "NRF_SAADC_GAIN1_2"], [142, 1, 1, "c.nrf_saadc_gain_t.NRF_SAADC_GAIN1_3", "NRF_SAADC_GAIN1_3"], [142, 1, 1, "c.nrf_saadc_gain_t.NRF_SAADC_GAIN1_4", "NRF_SAADC_GAIN1_4"], [142, 1, 1, "c.nrf_saadc_gain_t.NRF_SAADC_GAIN1_5", "NRF_SAADC_GAIN1_5"], [142, 1, 1, "c.nrf_saadc_gain_t.NRF_SAADC_GAIN1_6", "NRF_SAADC_GAIN1_6"], [142, 1, 1, "c.nrf_saadc_gain_t.NRF_SAADC_GAIN2", "NRF_SAADC_GAIN2"], [142, 1, 1, "c.nrf_saadc_gain_t.NRF_SAADC_GAIN2_3", "NRF_SAADC_GAIN2_3"], [142, 1, 1, "c.nrf_saadc_gain_t.NRF_SAADC_GAIN2_5", "NRF_SAADC_GAIN2_5"], [142, 1, 1, "c.nrf_saadc_gain_t.NRF_SAADC_GAIN2_7", "NRF_SAADC_GAIN2_7"], [142, 1, 1, "c.nrf_saadc_gain_t.NRF_SAADC_GAIN4", "NRF_SAADC_GAIN4"]], "nrf_saadc_int_disable": [[142, 3, 1, "c.nrf_saadc_int_disable", "mask"], [142, 3, 1, "c.nrf_saadc_int_disable", "p_reg"]], "nrf_saadc_int_enable": [[142, 3, 1, "c.nrf_saadc_int_enable", "mask"], [142, 3, 1, "c.nrf_saadc_int_enable", "p_reg"]], "nrf_saadc_int_enable_check": [[142, 3, 1, "c.nrf_saadc_int_enable_check", "mask"], [142, 3, 1, "c.nrf_saadc_int_enable_check", "p_reg"]], "nrf_saadc_int_mask_t": [[142, 1, 1, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_ALL", "NRF_SAADC_INT_ALL"], [142, 1, 1, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_CALIBRATEDONE", "NRF_SAADC_INT_CALIBRATEDONE"], [142, 1, 1, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_CH0LIMITH", "NRF_SAADC_INT_CH0LIMITH"], [142, 1, 1, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_CH0LIMITL", "NRF_SAADC_INT_CH0LIMITL"], [142, 1, 1, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_CH1LIMITH", "NRF_SAADC_INT_CH1LIMITH"], [142, 1, 1, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_CH1LIMITL", "NRF_SAADC_INT_CH1LIMITL"], [142, 1, 1, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_CH2LIMITH", "NRF_SAADC_INT_CH2LIMITH"], [142, 1, 1, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_CH2LIMITL", "NRF_SAADC_INT_CH2LIMITL"], [142, 1, 1, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_CH3LIMITH", "NRF_SAADC_INT_CH3LIMITH"], [142, 1, 1, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_CH3LIMITL", "NRF_SAADC_INT_CH3LIMITL"], [142, 1, 1, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_CH4LIMITH", "NRF_SAADC_INT_CH4LIMITH"], [142, 1, 1, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_CH4LIMITL", "NRF_SAADC_INT_CH4LIMITL"], [142, 1, 1, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_CH5LIMITH", "NRF_SAADC_INT_CH5LIMITH"], [142, 1, 1, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_CH5LIMITL", "NRF_SAADC_INT_CH5LIMITL"], [142, 1, 1, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_CH6LIMITH", "NRF_SAADC_INT_CH6LIMITH"], [142, 1, 1, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_CH6LIMITL", "NRF_SAADC_INT_CH6LIMITL"], [142, 1, 1, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_CH7LIMITH", "NRF_SAADC_INT_CH7LIMITH"], [142, 1, 1, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_CH7LIMITL", "NRF_SAADC_INT_CH7LIMITL"], [142, 1, 1, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_DONE", "NRF_SAADC_INT_DONE"], [142, 1, 1, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_END", "NRF_SAADC_INT_END"], [142, 1, 1, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_RESULTDONE", "NRF_SAADC_INT_RESULTDONE"], [142, 1, 1, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_STARTED", "NRF_SAADC_INT_STARTED"], [142, 1, 1, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_STOPPED", "NRF_SAADC_INT_STOPPED"]], "nrf_saadc_int_set": [[142, 3, 1, "c.nrf_saadc_int_set", "mask"], [142, 3, 1, "c.nrf_saadc_int_set", "p_reg"]], "nrf_saadc_limit_event_get": [[142, 3, 1, "c.nrf_saadc_limit_event_get", "channel"], [142, 3, 1, "c.nrf_saadc_limit_event_get", "limit_type"]], "nrf_saadc_limit_int_get": [[142, 3, 1, "c.nrf_saadc_limit_int_get", "channel"], [142, 3, 1, "c.nrf_saadc_limit_int_get", "limit_type"]], "nrf_saadc_limit_t": [[142, 1, 1, "c.nrf_saadc_limit_t.NRF_SAADC_LIMIT_HIGH", "NRF_SAADC_LIMIT_HIGH"], [142, 1, 1, "c.nrf_saadc_limit_t.NRF_SAADC_LIMIT_LOW", "NRF_SAADC_LIMIT_LOW"]], "nrf_saadc_linearity_calibration_coeff_get": [[142, 3, 1, "c.nrf_saadc_linearity_calibration_coeff_get", "index"], [142, 3, 1, "c.nrf_saadc_linearity_calibration_coeff_get", "p_reg"]], "nrf_saadc_linearity_calibration_coeff_set": [[142, 3, 1, "c.nrf_saadc_linearity_calibration_coeff_set", "coeff"], [142, 3, 1, "c.nrf_saadc_linearity_calibration_coeff_set", "index"], [142, 3, 1, "c.nrf_saadc_linearity_calibration_coeff_set", "p_reg"]], "nrf_saadc_mode_t": [[142, 1, 1, "c.nrf_saadc_mode_t.NRF_SAADC_MODE_DIFFERENTIAL", "NRF_SAADC_MODE_DIFFERENTIAL"], [142, 1, 1, "c.nrf_saadc_mode_t.NRF_SAADC_MODE_SINGLE_ENDED", "NRF_SAADC_MODE_SINGLE_ENDED"]], "nrf_saadc_oversample_get": [[142, 3, 1, "c.nrf_saadc_oversample_get", "p_reg"]], "nrf_saadc_oversample_sample_count_get": [[142, 3, 1, "c.nrf_saadc_oversample_sample_count_get", "oversample"]], "nrf_saadc_oversample_set": [[142, 3, 1, "c.nrf_saadc_oversample_set", "oversample"], [142, 3, 1, "c.nrf_saadc_oversample_set", "p_reg"]], "nrf_saadc_oversample_t": [[142, 1, 1, "c.nrf_saadc_oversample_t.NRF_SAADC_OVERSAMPLE_128X", "NRF_SAADC_OVERSAMPLE_128X"], [142, 1, 1, "c.nrf_saadc_oversample_t.NRF_SAADC_OVERSAMPLE_16X", "NRF_SAADC_OVERSAMPLE_16X"], [142, 1, 1, "c.nrf_saadc_oversample_t.NRF_SAADC_OVERSAMPLE_256X", "NRF_SAADC_OVERSAMPLE_256X"], [142, 1, 1, "c.nrf_saadc_oversample_t.NRF_SAADC_OVERSAMPLE_2X", "NRF_SAADC_OVERSAMPLE_2X"], [142, 1, 1, "c.nrf_saadc_oversample_t.NRF_SAADC_OVERSAMPLE_32X", "NRF_SAADC_OVERSAMPLE_32X"], [142, 1, 1, "c.nrf_saadc_oversample_t.NRF_SAADC_OVERSAMPLE_4X", "NRF_SAADC_OVERSAMPLE_4X"], [142, 1, 1, "c.nrf_saadc_oversample_t.NRF_SAADC_OVERSAMPLE_64X", "NRF_SAADC_OVERSAMPLE_64X"], [142, 1, 1, "c.nrf_saadc_oversample_t.NRF_SAADC_OVERSAMPLE_8X", "NRF_SAADC_OVERSAMPLE_8X"], [142, 1, 1, "c.nrf_saadc_oversample_t.NRF_SAADC_OVERSAMPLE_DISABLED", "NRF_SAADC_OVERSAMPLE_DISABLED"]], "nrf_saadc_publish_clear": [[142, 3, 1, "c.nrf_saadc_publish_clear", "event"], [142, 3, 1, "c.nrf_saadc_publish_clear", "p_reg"]], "nrf_saadc_publish_set": [[142, 3, 1, "c.nrf_saadc_publish_set", "channel"], [142, 3, 1, "c.nrf_saadc_publish_set", "event"], [142, 3, 1, "c.nrf_saadc_publish_set", "p_reg"]], "nrf_saadc_reference_t": [[142, 1, 1, "c.nrf_saadc_reference_t.NRF_SAADC_REFERENCE_INTERNAL", "NRF_SAADC_REFERENCE_INTERNAL"], [142, 1, 1, "c.nrf_saadc_reference_t.NRF_SAADC_REFERENCE_VDD4", "NRF_SAADC_REFERENCE_VDD4"]], "nrf_saadc_resistor_t": [[142, 1, 1, "c.nrf_saadc_resistor_t.NRF_SAADC_RESISTOR_DISABLED", "NRF_SAADC_RESISTOR_DISABLED"], [142, 1, 1, "c.nrf_saadc_resistor_t.NRF_SAADC_RESISTOR_PULLDOWN", "NRF_SAADC_RESISTOR_PULLDOWN"], [142, 1, 1, "c.nrf_saadc_resistor_t.NRF_SAADC_RESISTOR_PULLUP", "NRF_SAADC_RESISTOR_PULLUP"], [142, 1, 1, "c.nrf_saadc_resistor_t.NRF_SAADC_RESISTOR_VDD1_2", "NRF_SAADC_RESISTOR_VDD1_2"]], "nrf_saadc_resolution_get": [[142, 3, 1, "c.nrf_saadc_resolution_get", "p_reg"]], "nrf_saadc_resolution_set": [[142, 3, 1, "c.nrf_saadc_resolution_set", "p_reg"], [142, 3, 1, "c.nrf_saadc_resolution_set", "resolution"]], "nrf_saadc_resolution_t": [[142, 1, 1, "c.nrf_saadc_resolution_t.NRF_SAADC_RESOLUTION_10BIT", "NRF_SAADC_RESOLUTION_10BIT"], [142, 1, 1, "c.nrf_saadc_resolution_t.NRF_SAADC_RESOLUTION_12BIT", "NRF_SAADC_RESOLUTION_12BIT"], [142, 1, 1, "c.nrf_saadc_resolution_t.NRF_SAADC_RESOLUTION_14BIT", "NRF_SAADC_RESOLUTION_14BIT"], [142, 1, 1, "c.nrf_saadc_resolution_t.NRF_SAADC_RESOLUTION_8BIT", "NRF_SAADC_RESOLUTION_8BIT"]], "nrf_saadc_subscribe_clear": [[142, 3, 1, "c.nrf_saadc_subscribe_clear", "p_reg"], [142, 3, 1, "c.nrf_saadc_subscribe_clear", "task"]], "nrf_saadc_subscribe_set": [[142, 3, 1, "c.nrf_saadc_subscribe_set", "channel"], [142, 3, 1, "c.nrf_saadc_subscribe_set", "p_reg"], [142, 3, 1, "c.nrf_saadc_subscribe_set", "task"]], "nrf_saadc_task_address_get": [[142, 3, 1, "c.nrf_saadc_task_address_get", "p_reg"], [142, 3, 1, "c.nrf_saadc_task_address_get", "task"]], "nrf_saadc_task_t": [[142, 1, 1, "c.nrf_saadc_task_t.NRF_SAADC_TASK_CALIBRATEOFFSET", "NRF_SAADC_TASK_CALIBRATEOFFSET"], [142, 1, 1, "c.nrf_saadc_task_t.NRF_SAADC_TASK_SAMPLE", "NRF_SAADC_TASK_SAMPLE"], [142, 1, 1, "c.nrf_saadc_task_t.NRF_SAADC_TASK_START", "NRF_SAADC_TASK_START"], [142, 1, 1, "c.nrf_saadc_task_t.NRF_SAADC_TASK_STOP", "NRF_SAADC_TASK_STOP"]], "nrf_saadc_task_trigger": [[142, 3, 1, "c.nrf_saadc_task_trigger", "p_reg"], [142, 3, 1, "c.nrf_saadc_task_trigger", "task"]], "nrf_saadc_value_max_get": [[142, 3, 1, "c.nrf_saadc_value_max_get", "resolution"]], "nrf_saadc_value_min_get": [[142, 3, 1, "c.nrf_saadc_value_min_get", "resolution"]], "nrf_spi_bit_order_t": [[146, 1, 1, "c.nrf_spi_bit_order_t.NRF_SPI_BIT_ORDER_LSB_FIRST", "NRF_SPI_BIT_ORDER_LSB_FIRST"], [146, 1, 1, "c.nrf_spi_bit_order_t.NRF_SPI_BIT_ORDER_MSB_FIRST", "NRF_SPI_BIT_ORDER_MSB_FIRST"]], "nrf_spi_configure": [[146, 3, 1, "c.nrf_spi_configure", "p_reg"], [146, 3, 1, "c.nrf_spi_configure", "spi_bit_order"], [146, 3, 1, "c.nrf_spi_configure", "spi_mode"]], "nrf_spi_disable": [[146, 3, 1, "c.nrf_spi_disable", "p_reg"]], "nrf_spi_enable": [[146, 3, 1, "c.nrf_spi_enable", "p_reg"]], "nrf_spi_event_address_get": [[146, 3, 1, "c.nrf_spi_event_address_get", "event"], [146, 3, 1, "c.nrf_spi_event_address_get", "p_reg"]], "nrf_spi_event_check": [[146, 3, 1, "c.nrf_spi_event_check", "event"], [146, 3, 1, "c.nrf_spi_event_check", "p_reg"]], "nrf_spi_event_clear": [[146, 3, 1, "c.nrf_spi_event_clear", "event"], [146, 3, 1, "c.nrf_spi_event_clear", "p_reg"]], "nrf_spi_event_t": [[146, 1, 1, "c.nrf_spi_event_t.NRF_SPI_EVENT_READY", "NRF_SPI_EVENT_READY"]], "nrf_spi_frequency_set": [[146, 3, 1, "c.nrf_spi_frequency_set", "frequency"], [146, 3, 1, "c.nrf_spi_frequency_set", "p_reg"]], "nrf_spi_frequency_t": [[146, 1, 1, "c.nrf_spi_frequency_t.NRF_SPI_FREQ_125K", "NRF_SPI_FREQ_125K"], [146, 1, 1, "c.nrf_spi_frequency_t.NRF_SPI_FREQ_1M", "NRF_SPI_FREQ_1M"], [146, 1, 1, "c.nrf_spi_frequency_t.NRF_SPI_FREQ_250K", "NRF_SPI_FREQ_250K"], [146, 1, 1, "c.nrf_spi_frequency_t.NRF_SPI_FREQ_2M", "NRF_SPI_FREQ_2M"], [146, 1, 1, "c.nrf_spi_frequency_t.NRF_SPI_FREQ_4M", "NRF_SPI_FREQ_4M"], [146, 1, 1, "c.nrf_spi_frequency_t.NRF_SPI_FREQ_500K", "NRF_SPI_FREQ_500K"], [146, 1, 1, "c.nrf_spi_frequency_t.NRF_SPI_FREQ_8M", "NRF_SPI_FREQ_8M"]], "nrf_spi_int_disable": [[146, 3, 1, "c.nrf_spi_int_disable", "mask"], [146, 3, 1, "c.nrf_spi_int_disable", "p_reg"]], "nrf_spi_int_enable": [[146, 3, 1, "c.nrf_spi_int_enable", "mask"], [146, 3, 1, "c.nrf_spi_int_enable", "p_reg"]], "nrf_spi_int_enable_check": [[146, 3, 1, "c.nrf_spi_int_enable_check", "mask"], [146, 3, 1, "c.nrf_spi_int_enable_check", "p_reg"]], "nrf_spi_int_mask_t": [[146, 1, 1, "c.nrf_spi_int_mask_t.NRF_SPI_ALL_INTS_MASK", "NRF_SPI_ALL_INTS_MASK"], [146, 1, 1, "c.nrf_spi_int_mask_t.NRF_SPI_INT_READY_MASK", "NRF_SPI_INT_READY_MASK"]], "nrf_spi_miso_pin_get": [[146, 3, 1, "c.nrf_spi_miso_pin_get", "p_reg"]], "nrf_spi_mode_t": [[146, 1, 1, "c.nrf_spi_mode_t.NRF_SPI_MODE_0", "NRF_SPI_MODE_0"], [146, 1, 1, "c.nrf_spi_mode_t.NRF_SPI_MODE_1", "NRF_SPI_MODE_1"], [146, 1, 1, "c.nrf_spi_mode_t.NRF_SPI_MODE_2", "NRF_SPI_MODE_2"], [146, 1, 1, "c.nrf_spi_mode_t.NRF_SPI_MODE_3", "NRF_SPI_MODE_3"]], "nrf_spi_mosi_pin_get": [[146, 3, 1, "c.nrf_spi_mosi_pin_get", "p_reg"]], "nrf_spi_pins_set": [[146, 3, 1, "c.nrf_spi_pins_set", "miso_pin"], [146, 3, 1, "c.nrf_spi_pins_set", "mosi_pin"], [146, 3, 1, "c.nrf_spi_pins_set", "p_reg"], [146, 3, 1, "c.nrf_spi_pins_set", "sck_pin"]], "nrf_spi_rxd_get": [[146, 3, 1, "c.nrf_spi_rxd_get", "p_reg"]], "nrf_spi_sck_pin_get": [[146, 3, 1, "c.nrf_spi_sck_pin_get", "p_reg"]], "nrf_spi_txd_set": [[146, 3, 1, "c.nrf_spi_txd_set", "data"], [146, 3, 1, "c.nrf_spi_txd_set", "p_reg"]], "nrf_spim_bit_order_t": [[149, 1, 1, "c.nrf_spim_bit_order_t.NRF_SPIM_BIT_ORDER_LSB_FIRST", "NRF_SPIM_BIT_ORDER_LSB_FIRST"], [149, 1, 1, "c.nrf_spim_bit_order_t.NRF_SPIM_BIT_ORDER_MSB_FIRST", "NRF_SPIM_BIT_ORDER_MSB_FIRST"]], "nrf_spim_configure": [[149, 3, 1, "c.nrf_spim_configure", "p_reg"], [149, 3, 1, "c.nrf_spim_configure", "spi_bit_order"], [149, 3, 1, "c.nrf_spim_configure", "spi_mode"]], "nrf_spim_csn_configure": [[149, 3, 1, "c.nrf_spim_csn_configure", "duration"], [149, 3, 1, "c.nrf_spim_csn_configure", "p_reg"], [149, 3, 1, "c.nrf_spim_csn_configure", "pin"], [149, 3, 1, "c.nrf_spim_csn_configure", "polarity"]], "nrf_spim_csn_pin_get": [[149, 3, 1, "c.nrf_spim_csn_pin_get", "p_reg"]], "nrf_spim_csn_pol_t": [[149, 1, 1, "c.nrf_spim_csn_pol_t.NRF_SPIM_CSN_POL_HIGH", "NRF_SPIM_CSN_POL_HIGH"], [149, 1, 1, "c.nrf_spim_csn_pol_t.NRF_SPIM_CSN_POL_LOW", "NRF_SPIM_CSN_POL_LOW"]], "nrf_spim_dcx_cnt_set": [[149, 3, 1, "c.nrf_spim_dcx_cnt_set", "count"], [149, 3, 1, "c.nrf_spim_dcx_cnt_set", "p_reg"]], "nrf_spim_dcx_pin_get": [[149, 3, 1, "c.nrf_spim_dcx_pin_get", "p_reg"]], "nrf_spim_dcx_pin_set": [[149, 3, 1, "c.nrf_spim_dcx_pin_set", "dcx_pin"], [149, 3, 1, "c.nrf_spim_dcx_pin_set", "p_reg"]], "nrf_spim_disable": [[149, 3, 1, "c.nrf_spim_disable", "p_reg"]], "nrf_spim_enable": [[149, 3, 1, "c.nrf_spim_enable", "p_reg"]], "nrf_spim_enable_check": [[149, 3, 1, "c.nrf_spim_enable_check", "p_reg"]], "nrf_spim_event_address_get": [[149, 3, 1, "c.nrf_spim_event_address_get", "event"], [149, 3, 1, "c.nrf_spim_event_address_get", "p_reg"]], "nrf_spim_event_check": [[149, 3, 1, "c.nrf_spim_event_check", "event"], [149, 3, 1, "c.nrf_spim_event_check", "p_reg"]], "nrf_spim_event_clear": [[149, 3, 1, "c.nrf_spim_event_clear", "event"], [149, 3, 1, "c.nrf_spim_event_clear", "p_reg"]], "nrf_spim_event_t": [[149, 1, 1, "c.nrf_spim_event_t.NRF_SPIM_EVENT_END", "NRF_SPIM_EVENT_END"], [149, 1, 1, "c.nrf_spim_event_t.NRF_SPIM_EVENT_ENDRX", "NRF_SPIM_EVENT_ENDRX"], [149, 1, 1, "c.nrf_spim_event_t.NRF_SPIM_EVENT_ENDTX", "NRF_SPIM_EVENT_ENDTX"], [149, 1, 1, "c.nrf_spim_event_t.NRF_SPIM_EVENT_RXBUSERROR", "NRF_SPIM_EVENT_RXBUSERROR"], [149, 1, 1, "c.nrf_spim_event_t.NRF_SPIM_EVENT_RXMATCH0", "NRF_SPIM_EVENT_RXMATCH0"], [149, 1, 1, "c.nrf_spim_event_t.NRF_SPIM_EVENT_RXMATCH1", "NRF_SPIM_EVENT_RXMATCH1"], [149, 1, 1, "c.nrf_spim_event_t.NRF_SPIM_EVENT_RXMATCH2", "NRF_SPIM_EVENT_RXMATCH2"], [149, 1, 1, "c.nrf_spim_event_t.NRF_SPIM_EVENT_RXMATCH3", "NRF_SPIM_EVENT_RXMATCH3"], [149, 1, 1, "c.nrf_spim_event_t.NRF_SPIM_EVENT_RXSTARTED", "NRF_SPIM_EVENT_RXSTARTED"], [149, 1, 1, "c.nrf_spim_event_t.NRF_SPIM_EVENT_STARTED", "NRF_SPIM_EVENT_STARTED"], [149, 1, 1, "c.nrf_spim_event_t.NRF_SPIM_EVENT_STOPPED", "NRF_SPIM_EVENT_STOPPED"], [149, 1, 1, "c.nrf_spim_event_t.NRF_SPIM_EVENT_TXBUSERROR", "NRF_SPIM_EVENT_TXBUSERROR"], [149, 1, 1, "c.nrf_spim_event_t.NRF_SPIM_EVENT_TXSTARTED", "NRF_SPIM_EVENT_TXSTARTED"]], "nrf_spim_frequency_get": [[149, 3, 1, "c.nrf_spim_frequency_get", "p_reg"]], "nrf_spim_frequency_set": [[149, 3, 1, "c.nrf_spim_frequency_set", "frequency"], [149, 3, 1, "c.nrf_spim_frequency_set", "p_reg"]], "nrf_spim_frequency_t": [[149, 1, 1, "c.nrf_spim_frequency_t.NRF_SPIM_FREQ_125K", "NRF_SPIM_FREQ_125K"], [149, 1, 1, "c.nrf_spim_frequency_t.NRF_SPIM_FREQ_16M", "NRF_SPIM_FREQ_16M"], [149, 1, 1, "c.nrf_spim_frequency_t.NRF_SPIM_FREQ_1M", "NRF_SPIM_FREQ_1M"], [149, 1, 1, "c.nrf_spim_frequency_t.NRF_SPIM_FREQ_250K", "NRF_SPIM_FREQ_250K"], [149, 1, 1, "c.nrf_spim_frequency_t.NRF_SPIM_FREQ_2M", "NRF_SPIM_FREQ_2M"], [149, 1, 1, "c.nrf_spim_frequency_t.NRF_SPIM_FREQ_32M", "NRF_SPIM_FREQ_32M"], [149, 1, 1, "c.nrf_spim_frequency_t.NRF_SPIM_FREQ_4M", "NRF_SPIM_FREQ_4M"], [149, 1, 1, "c.nrf_spim_frequency_t.NRF_SPIM_FREQ_500K", "NRF_SPIM_FREQ_500K"], [149, 1, 1, "c.nrf_spim_frequency_t.NRF_SPIM_FREQ_8M", "NRF_SPIM_FREQ_8M"]], "nrf_spim_iftiming_set": [[149, 3, 1, "c.nrf_spim_iftiming_set", "p_reg"], [149, 3, 1, "c.nrf_spim_iftiming_set", "rxdelay"]], "nrf_spim_int_disable": [[149, 3, 1, "c.nrf_spim_int_disable", "mask"], [149, 3, 1, "c.nrf_spim_int_disable", "p_reg"]], "nrf_spim_int_enable": [[149, 3, 1, "c.nrf_spim_int_enable", "mask"], [149, 3, 1, "c.nrf_spim_int_enable", "p_reg"]], "nrf_spim_int_enable_check": [[149, 3, 1, "c.nrf_spim_int_enable_check", "mask"], [149, 3, 1, "c.nrf_spim_int_enable_check", "p_reg"]], "nrf_spim_int_mask_t": [[149, 1, 1, "c.nrf_spim_int_mask_t.NRF_SPIM_ALL_INTS_MASK", "NRF_SPIM_ALL_INTS_MASK"], [149, 1, 1, "c.nrf_spim_int_mask_t.NRF_SPIM_INT_ENDRX_MASK", "NRF_SPIM_INT_ENDRX_MASK"], [149, 1, 1, "c.nrf_spim_int_mask_t.NRF_SPIM_INT_ENDTX_MASK", "NRF_SPIM_INT_ENDTX_MASK"], [149, 1, 1, "c.nrf_spim_int_mask_t.NRF_SPIM_INT_END_MASK", "NRF_SPIM_INT_END_MASK"], [149, 1, 1, "c.nrf_spim_int_mask_t.NRF_SPIM_INT_RXBUSERROR_MASK", "NRF_SPIM_INT_RXBUSERROR_MASK"], [149, 1, 1, "c.nrf_spim_int_mask_t.NRF_SPIM_INT_RXMATCH0_MASK", "NRF_SPIM_INT_RXMATCH0_MASK"], [149, 1, 1, "c.nrf_spim_int_mask_t.NRF_SPIM_INT_RXMATCH1_MASK", "NRF_SPIM_INT_RXMATCH1_MASK"], [149, 1, 1, "c.nrf_spim_int_mask_t.NRF_SPIM_INT_RXMATCH2_MASK", "NRF_SPIM_INT_RXMATCH2_MASK"], [149, 1, 1, "c.nrf_spim_int_mask_t.NRF_SPIM_INT_RXMATCH3_MASK", "NRF_SPIM_INT_RXMATCH3_MASK"], [149, 1, 1, "c.nrf_spim_int_mask_t.NRF_SPIM_INT_RXREADY_MASK", "NRF_SPIM_INT_RXREADY_MASK"], [149, 1, 1, "c.nrf_spim_int_mask_t.NRF_SPIM_INT_STARTED_MASK", "NRF_SPIM_INT_STARTED_MASK"], [149, 1, 1, "c.nrf_spim_int_mask_t.NRF_SPIM_INT_STOPPED_MASK", "NRF_SPIM_INT_STOPPED_MASK"], [149, 1, 1, "c.nrf_spim_int_mask_t.NRF_SPIM_INT_TXBUSERROR_MASK", "NRF_SPIM_INT_TXBUSERROR_MASK"], [149, 1, 1, "c.nrf_spim_int_mask_t.NRF_SPIM_INT_TXREADY_MASK", "NRF_SPIM_INT_TXREADY_MASK"]], "nrf_spim_miso_pin_get": [[149, 3, 1, "c.nrf_spim_miso_pin_get", "p_reg"]], "nrf_spim_mode_t": [[149, 1, 1, "c.nrf_spim_mode_t.NRF_SPIM_MODE_0", "NRF_SPIM_MODE_0"], [149, 1, 1, "c.nrf_spim_mode_t.NRF_SPIM_MODE_1", "NRF_SPIM_MODE_1"], [149, 1, 1, "c.nrf_spim_mode_t.NRF_SPIM_MODE_2", "NRF_SPIM_MODE_2"], [149, 1, 1, "c.nrf_spim_mode_t.NRF_SPIM_MODE_3", "NRF_SPIM_MODE_3"]], "nrf_spim_mosi_pin_get": [[149, 3, 1, "c.nrf_spim_mosi_pin_get", "p_reg"]], "nrf_spim_orc_set": [[149, 3, 1, "c.nrf_spim_orc_set", "orc"], [149, 3, 1, "c.nrf_spim_orc_set", "p_reg"]], "nrf_spim_pins_set": [[149, 3, 1, "c.nrf_spim_pins_set", "miso_pin"], [149, 3, 1, "c.nrf_spim_pins_set", "mosi_pin"], [149, 3, 1, "c.nrf_spim_pins_set", "p_reg"], [149, 3, 1, "c.nrf_spim_pins_set", "sck_pin"]], "nrf_spim_prescaler_get": [[149, 3, 1, "c.nrf_spim_prescaler_get", "p_reg"]], "nrf_spim_prescaler_set": [[149, 3, 1, "c.nrf_spim_prescaler_set", "p_reg"], [149, 3, 1, "c.nrf_spim_prescaler_set", "prescaler"]], "nrf_spim_publish_clear": [[149, 3, 1, "c.nrf_spim_publish_clear", "event"], [149, 3, 1, "c.nrf_spim_publish_clear", "p_reg"]], "nrf_spim_publish_set": [[149, 3, 1, "c.nrf_spim_publish_set", "channel"], [149, 3, 1, "c.nrf_spim_publish_set", "event"], [149, 3, 1, "c.nrf_spim_publish_set", "p_reg"]], "nrf_spim_rx_amount_get": [[149, 3, 1, "c.nrf_spim_rx_amount_get", "p_reg"]], "nrf_spim_rx_buffer_set": [[149, 3, 1, "c.nrf_spim_rx_buffer_set", "length"], [149, 3, 1, "c.nrf_spim_rx_buffer_set", "p_buffer"], [149, 3, 1, "c.nrf_spim_rx_buffer_set", "p_reg"]], "nrf_spim_rx_list_disable": [[149, 3, 1, "c.nrf_spim_rx_list_disable", "p_reg"]], "nrf_spim_rx_list_enable": [[149, 3, 1, "c.nrf_spim_rx_list_enable", "p_reg"]], "nrf_spim_rx_maxcnt_get": [[149, 3, 1, "c.nrf_spim_rx_maxcnt_get", "p_reg"]], "nrf_spim_rx_pattern_match_candidate_get": [[149, 3, 1, "c.nrf_spim_rx_pattern_match_candidate_get", "index"], [149, 3, 1, "c.nrf_spim_rx_pattern_match_candidate_get", "p_reg"]], "nrf_spim_rx_pattern_match_candidate_set": [[149, 3, 1, "c.nrf_spim_rx_pattern_match_candidate_set", "index"], [149, 3, 1, "c.nrf_spim_rx_pattern_match_candidate_set", "p_reg"], [149, 3, 1, "c.nrf_spim_rx_pattern_match_candidate_set", "pattern"]], "nrf_spim_rx_pattern_match_enable_check": [[149, 3, 1, "c.nrf_spim_rx_pattern_match_enable_check", "index"], [149, 3, 1, "c.nrf_spim_rx_pattern_match_enable_check", "p_reg"]], "nrf_spim_rx_pattern_match_enable_set": [[149, 3, 1, "c.nrf_spim_rx_pattern_match_enable_set", "enable"], [149, 3, 1, "c.nrf_spim_rx_pattern_match_enable_set", "index"], [149, 3, 1, "c.nrf_spim_rx_pattern_match_enable_set", "p_reg"]], "nrf_spim_rx_pattern_match_one_shot_check": [[149, 3, 1, "c.nrf_spim_rx_pattern_match_one_shot_check", "index"], [149, 3, 1, "c.nrf_spim_rx_pattern_match_one_shot_check", "p_reg"]], "nrf_spim_rx_pattern_match_one_shot_disable": [[149, 3, 1, "c.nrf_spim_rx_pattern_match_one_shot_disable", "index"], [149, 3, 1, "c.nrf_spim_rx_pattern_match_one_shot_disable", "p_reg"]], "nrf_spim_rx_pattern_match_one_shot_enable": [[149, 3, 1, "c.nrf_spim_rx_pattern_match_one_shot_enable", "index"], [149, 3, 1, "c.nrf_spim_rx_pattern_match_one_shot_enable", "p_reg"]], "nrf_spim_rx_terminate_on_bus_error_check": [[149, 3, 1, "c.nrf_spim_rx_terminate_on_bus_error_check", "p_reg"]], "nrf_spim_rx_terminate_on_bus_error_disable": [[149, 3, 1, "c.nrf_spim_rx_terminate_on_bus_error_disable", "p_reg"]], "nrf_spim_rx_terminate_on_bus_error_enable": [[149, 3, 1, "c.nrf_spim_rx_terminate_on_bus_error_enable", "p_reg"]], "nrf_spim_sck_pin_get": [[149, 3, 1, "c.nrf_spim_sck_pin_get", "p_reg"]], "nrf_spim_short_mask_t": [[149, 1, 1, "c.nrf_spim_short_mask_t.NRF_SPIM_ALL_SHORTS_MASK", "NRF_SPIM_ALL_SHORTS_MASK"], [149, 1, 1, "c.nrf_spim_short_mask_t.NRF_SPIM_SHORT_END_START_MASK", "NRF_SPIM_SHORT_END_START_MASK"], [149, 1, 1, "c.nrf_spim_short_mask_t.NRF_SPIM_SHORT_RXMATCH0_DISABLERXMATCH0_MASK", "NRF_SPIM_SHORT_RXMATCH0_DISABLERXMATCH0_MASK"], [149, 1, 1, "c.nrf_spim_short_mask_t.NRF_SPIM_SHORT_RXMATCH0_ENABLERXMATCH1_MASK", "NRF_SPIM_SHORT_RXMATCH0_ENABLERXMATCH1_MASK"], [149, 1, 1, "c.nrf_spim_short_mask_t.NRF_SPIM_SHORT_RXMATCH1_DISABLERXMATCH1_MASK", "NRF_SPIM_SHORT_RXMATCH1_DISABLERXMATCH1_MASK"], [149, 1, 1, "c.nrf_spim_short_mask_t.NRF_SPIM_SHORT_RXMATCH1_ENABLERXMATCH2_MASK", "NRF_SPIM_SHORT_RXMATCH1_ENABLERXMATCH2_MASK"], [149, 1, 1, "c.nrf_spim_short_mask_t.NRF_SPIM_SHORT_RXMATCH2_DISABLERXMATCH2_MASK", "NRF_SPIM_SHORT_RXMATCH2_DISABLERXMATCH2_MASK"], [149, 1, 1, "c.nrf_spim_short_mask_t.NRF_SPIM_SHORT_RXMATCH2_ENABLERXMATCH3_MASK", "NRF_SPIM_SHORT_RXMATCH2_ENABLERXMATCH3_MASK"], [149, 1, 1, "c.nrf_spim_short_mask_t.NRF_SPIM_SHORT_RXMATCH3_DISABLERXMATCH3_MASK", "NRF_SPIM_SHORT_RXMATCH3_DISABLERXMATCH3_MASK"], [149, 1, 1, "c.nrf_spim_short_mask_t.NRF_SPIM_SHORT_RXMATCH3_ENABLERXMATCH0_MASK", "NRF_SPIM_SHORT_RXMATCH3_ENABLERXMATCH0_MASK"]], "nrf_spim_shorts_disable": [[149, 3, 1, "c.nrf_spim_shorts_disable", "mask"], [149, 3, 1, "c.nrf_spim_shorts_disable", "p_reg"]], "nrf_spim_shorts_enable": [[149, 3, 1, "c.nrf_spim_shorts_enable", "mask"], [149, 3, 1, "c.nrf_spim_shorts_enable", "p_reg"]], "nrf_spim_shorts_get": [[149, 3, 1, "c.nrf_spim_shorts_get", "p_reg"]], "nrf_spim_stallstat_rx_clear": [[149, 3, 1, "c.nrf_spim_stallstat_rx_clear", "p_reg"]], "nrf_spim_stallstat_rx_get": [[149, 3, 1, "c.nrf_spim_stallstat_rx_get", "p_reg"]], "nrf_spim_stallstat_tx_clear": [[149, 3, 1, "c.nrf_spim_stallstat_tx_clear", "p_reg"]], "nrf_spim_stallstat_tx_get": [[149, 3, 1, "c.nrf_spim_stallstat_tx_get", "p_reg"]], "nrf_spim_subscribe_clear": [[149, 3, 1, "c.nrf_spim_subscribe_clear", "p_reg"], [149, 3, 1, "c.nrf_spim_subscribe_clear", "task"]], "nrf_spim_subscribe_set": [[149, 3, 1, "c.nrf_spim_subscribe_set", "channel"], [149, 3, 1, "c.nrf_spim_subscribe_set", "p_reg"], [149, 3, 1, "c.nrf_spim_subscribe_set", "task"]], "nrf_spim_task_address_get": [[149, 3, 1, "c.nrf_spim_task_address_get", "p_reg"], [149, 3, 1, "c.nrf_spim_task_address_get", "task"]], "nrf_spim_task_t": [[149, 1, 1, "c.nrf_spim_task_t.NRF_SPIM_TASK_DISABLERXMATCH0", "NRF_SPIM_TASK_DISABLERXMATCH0"], [149, 1, 1, "c.nrf_spim_task_t.NRF_SPIM_TASK_DISABLERXMATCH1", "NRF_SPIM_TASK_DISABLERXMATCH1"], [149, 1, 1, "c.nrf_spim_task_t.NRF_SPIM_TASK_DISABLERXMATCH2", "NRF_SPIM_TASK_DISABLERXMATCH2"], [149, 1, 1, "c.nrf_spim_task_t.NRF_SPIM_TASK_DISABLERXMATCH3", "NRF_SPIM_TASK_DISABLERXMATCH3"], [149, 1, 1, "c.nrf_spim_task_t.NRF_SPIM_TASK_ENABLERXMATCH0", "NRF_SPIM_TASK_ENABLERXMATCH0"], [149, 1, 1, "c.nrf_spim_task_t.NRF_SPIM_TASK_ENABLERXMATCH1", "NRF_SPIM_TASK_ENABLERXMATCH1"], [149, 1, 1, "c.nrf_spim_task_t.NRF_SPIM_TASK_ENABLERXMATCH2", "NRF_SPIM_TASK_ENABLERXMATCH2"], [149, 1, 1, "c.nrf_spim_task_t.NRF_SPIM_TASK_ENABLERXMATCH3", "NRF_SPIM_TASK_ENABLERXMATCH3"], [149, 1, 1, "c.nrf_spim_task_t.NRF_SPIM_TASK_RESUME", "NRF_SPIM_TASK_RESUME"], [149, 1, 1, "c.nrf_spim_task_t.NRF_SPIM_TASK_START", "NRF_SPIM_TASK_START"], [149, 1, 1, "c.nrf_spim_task_t.NRF_SPIM_TASK_STOP", "NRF_SPIM_TASK_STOP"], [149, 1, 1, "c.nrf_spim_task_t.NRF_SPIM_TASK_SUSPEND", "NRF_SPIM_TASK_SUSPEND"]], "nrf_spim_task_trigger": [[149, 3, 1, "c.nrf_spim_task_trigger", "p_reg"], [149, 3, 1, "c.nrf_spim_task_trigger", "task"]], "nrf_spim_tx_amount_get": [[149, 3, 1, "c.nrf_spim_tx_amount_get", "p_reg"]], "nrf_spim_tx_buffer_set": [[149, 3, 1, "c.nrf_spim_tx_buffer_set", "length"], [149, 3, 1, "c.nrf_spim_tx_buffer_set", "p_buffer"], [149, 3, 1, "c.nrf_spim_tx_buffer_set", "p_reg"]], "nrf_spim_tx_list_disable": [[149, 3, 1, "c.nrf_spim_tx_list_disable", "p_reg"]], "nrf_spim_tx_list_enable": [[149, 3, 1, "c.nrf_spim_tx_list_enable", "p_reg"]], "nrf_spim_tx_maxcnt_get": [[149, 3, 1, "c.nrf_spim_tx_maxcnt_get", "p_reg"]], "nrf_spim_tx_terminate_on_bus_error_check": [[149, 3, 1, "c.nrf_spim_tx_terminate_on_bus_error_check", "p_reg"]], "nrf_spim_tx_terminate_on_bus_error_disable": [[149, 3, 1, "c.nrf_spim_tx_terminate_on_bus_error_disable", "p_reg"]], "nrf_spim_tx_terminate_on_bus_error_enable": [[149, 3, 1, "c.nrf_spim_tx_terminate_on_bus_error_enable", "p_reg"]], "nrf_spis_bit_order_t": [[153, 1, 1, "c.nrf_spis_bit_order_t.NRF_SPIS_BIT_ORDER_LSB_FIRST", "NRF_SPIS_BIT_ORDER_LSB_FIRST"], [153, 1, 1, "c.nrf_spis_bit_order_t.NRF_SPIS_BIT_ORDER_MSB_FIRST", "NRF_SPIS_BIT_ORDER_MSB_FIRST"]], "nrf_spis_configure": [[153, 3, 1, "c.nrf_spis_configure", "p_reg"], [153, 3, 1, "c.nrf_spis_configure", "spi_bit_order"], [153, 3, 1, "c.nrf_spis_configure", "spi_mode"]], "nrf_spis_csn_pin_get": [[153, 3, 1, "c.nrf_spis_csn_pin_get", "p_reg"]], "nrf_spis_def_set": [[153, 3, 1, "c.nrf_spis_def_set", "def"], [153, 3, 1, "c.nrf_spis_def_set", "p_reg"]], "nrf_spis_disable": [[153, 3, 1, "c.nrf_spis_disable", "p_reg"]], "nrf_spis_enable": [[153, 3, 1, "c.nrf_spis_enable", "p_reg"]], "nrf_spis_enable_check": [[153, 3, 1, "c.nrf_spis_enable_check", "p_reg"]], "nrf_spis_event_address_get": [[153, 3, 1, "c.nrf_spis_event_address_get", "event"], [153, 3, 1, "c.nrf_spis_event_address_get", "p_reg"]], "nrf_spis_event_check": [[153, 3, 1, "c.nrf_spis_event_check", "event"], [153, 3, 1, "c.nrf_spis_event_check", "p_reg"]], "nrf_spis_event_clear": [[153, 3, 1, "c.nrf_spis_event_clear", "event"], [153, 3, 1, "c.nrf_spis_event_clear", "p_reg"]], "nrf_spis_event_t": [[153, 1, 1, "c.nrf_spis_event_t.NRF_SPIS_EVENT_ACQUIRED", "NRF_SPIS_EVENT_ACQUIRED"], [153, 1, 1, "c.nrf_spis_event_t.NRF_SPIS_EVENT_END", "NRF_SPIS_EVENT_END"], [153, 1, 1, "c.nrf_spis_event_t.NRF_SPIS_EVENT_ENDRX", "NRF_SPIS_EVENT_ENDRX"], [153, 1, 1, "c.nrf_spis_event_t.NRF_SPIS_EVENT_ENDTX", "NRF_SPIS_EVENT_ENDTX"], [153, 1, 1, "c.nrf_spis_event_t.NRF_SPIS_EVENT_RXBUSERROR", "NRF_SPIS_EVENT_RXBUSERROR"], [153, 1, 1, "c.nrf_spis_event_t.NRF_SPIS_EVENT_RXMATCH0", "NRF_SPIS_EVENT_RXMATCH0"], [153, 1, 1, "c.nrf_spis_event_t.NRF_SPIS_EVENT_RXMATCH1", "NRF_SPIS_EVENT_RXMATCH1"], [153, 1, 1, "c.nrf_spis_event_t.NRF_SPIS_EVENT_RXMATCH2", "NRF_SPIS_EVENT_RXMATCH2"], [153, 1, 1, "c.nrf_spis_event_t.NRF_SPIS_EVENT_RXMATCH3", "NRF_SPIS_EVENT_RXMATCH3"], [153, 1, 1, "c.nrf_spis_event_t.NRF_SPIS_EVENT_RXSTARTED", "NRF_SPIS_EVENT_RXSTARTED"], [153, 1, 1, "c.nrf_spis_event_t.NRF_SPIS_EVENT_TXBUSERROR", "NRF_SPIS_EVENT_TXBUSERROR"], [153, 1, 1, "c.nrf_spis_event_t.NRF_SPIS_EVENT_TXSTARTED", "NRF_SPIS_EVENT_TXSTARTED"]], "nrf_spis_int_disable": [[153, 3, 1, "c.nrf_spis_int_disable", "mask"], [153, 3, 1, "c.nrf_spis_int_disable", "p_reg"]], "nrf_spis_int_enable": [[153, 3, 1, "c.nrf_spis_int_enable", "mask"], [153, 3, 1, "c.nrf_spis_int_enable", "p_reg"]], "nrf_spis_int_enable_check": [[153, 3, 1, "c.nrf_spis_int_enable_check", "mask"], [153, 3, 1, "c.nrf_spis_int_enable_check", "p_reg"]], "nrf_spis_int_mask_t": [[153, 1, 1, "c.nrf_spis_int_mask_t.NRF_SPIS_ALL_INTS_MASK", "NRF_SPIS_ALL_INTS_MASK"], [153, 1, 1, "c.nrf_spis_int_mask_t.NRF_SPIS_INT_ACQUIRED_MASK", "NRF_SPIS_INT_ACQUIRED_MASK"], [153, 1, 1, "c.nrf_spis_int_mask_t.NRF_SPIS_INT_ENDRX_MASK", "NRF_SPIS_INT_ENDRX_MASK"], [153, 1, 1, "c.nrf_spis_int_mask_t.NRF_SPIS_INT_ENDTX_MASK", "NRF_SPIS_INT_ENDTX_MASK"], [153, 1, 1, "c.nrf_spis_int_mask_t.NRF_SPIS_INT_END_MASK", "NRF_SPIS_INT_END_MASK"], [153, 1, 1, "c.nrf_spis_int_mask_t.NRF_SPIS_INT_RXBUSERROR_MASK", "NRF_SPIS_INT_RXBUSERROR_MASK"], [153, 1, 1, "c.nrf_spis_int_mask_t.NRF_SPIS_INT_RXMATCH0_MASK", "NRF_SPIS_INT_RXMATCH0_MASK"], [153, 1, 1, "c.nrf_spis_int_mask_t.NRF_SPIS_INT_RXMATCH1_MASK", "NRF_SPIS_INT_RXMATCH1_MASK"], [153, 1, 1, "c.nrf_spis_int_mask_t.NRF_SPIS_INT_RXMATCH2_MASK", "NRF_SPIS_INT_RXMATCH2_MASK"], [153, 1, 1, "c.nrf_spis_int_mask_t.NRF_SPIS_INT_RXMATCH3_MASK", "NRF_SPIS_INT_RXMATCH3_MASK"], [153, 1, 1, "c.nrf_spis_int_mask_t.NRF_SPIS_INT_RXREADY_MASK", "NRF_SPIS_INT_RXREADY_MASK"], [153, 1, 1, "c.nrf_spis_int_mask_t.NRF_SPIS_INT_TXBUSERROR_MASK", "NRF_SPIS_INT_TXBUSERROR_MASK"], [153, 1, 1, "c.nrf_spis_int_mask_t.NRF_SPIS_INT_TXREADY_MASK", "NRF_SPIS_INT_TXREADY_MASK"]], "nrf_spis_miso_pin_get": [[153, 3, 1, "c.nrf_spis_miso_pin_get", "p_reg"]], "nrf_spis_mode_t": [[153, 1, 1, "c.nrf_spis_mode_t.NRF_SPIS_MODE_0", "NRF_SPIS_MODE_0"], [153, 1, 1, "c.nrf_spis_mode_t.NRF_SPIS_MODE_1", "NRF_SPIS_MODE_1"], [153, 1, 1, "c.nrf_spis_mode_t.NRF_SPIS_MODE_2", "NRF_SPIS_MODE_2"], [153, 1, 1, "c.nrf_spis_mode_t.NRF_SPIS_MODE_3", "NRF_SPIS_MODE_3"]], "nrf_spis_mosi_pin_get": [[153, 3, 1, "c.nrf_spis_mosi_pin_get", "p_reg"]], "nrf_spis_orc_set": [[153, 3, 1, "c.nrf_spis_orc_set", "orc"], [153, 3, 1, "c.nrf_spis_orc_set", "p_reg"]], "nrf_spis_pins_set": [[153, 3, 1, "c.nrf_spis_pins_set", "csn_pin"], [153, 3, 1, "c.nrf_spis_pins_set", "miso_pin"], [153, 3, 1, "c.nrf_spis_pins_set", "mosi_pin"], [153, 3, 1, "c.nrf_spis_pins_set", "p_reg"], [153, 3, 1, "c.nrf_spis_pins_set", "sck_pin"]], "nrf_spis_publish_clear": [[153, 3, 1, "c.nrf_spis_publish_clear", "event"], [153, 3, 1, "c.nrf_spis_publish_clear", "p_reg"]], "nrf_spis_publish_set": [[153, 3, 1, "c.nrf_spis_publish_set", "channel"], [153, 3, 1, "c.nrf_spis_publish_set", "event"], [153, 3, 1, "c.nrf_spis_publish_set", "p_reg"]], "nrf_spis_rx_amount_get": [[153, 3, 1, "c.nrf_spis_rx_amount_get", "p_reg"]], "nrf_spis_rx_buffer_set": [[153, 3, 1, "c.nrf_spis_rx_buffer_set", "length"], [153, 3, 1, "c.nrf_spis_rx_buffer_set", "p_buffer"], [153, 3, 1, "c.nrf_spis_rx_buffer_set", "p_reg"]], "nrf_spis_rx_list_disable": [[153, 3, 1, "c.nrf_spis_rx_list_disable", "p_reg"]], "nrf_spis_rx_list_enable": [[153, 3, 1, "c.nrf_spis_rx_list_enable", "p_reg"]], "nrf_spis_rx_pattern_match_candidate_get": [[153, 3, 1, "c.nrf_spis_rx_pattern_match_candidate_get", "index"], [153, 3, 1, "c.nrf_spis_rx_pattern_match_candidate_get", "p_reg"]], "nrf_spis_rx_pattern_match_candidate_set": [[153, 3, 1, "c.nrf_spis_rx_pattern_match_candidate_set", "index"], [153, 3, 1, "c.nrf_spis_rx_pattern_match_candidate_set", "p_reg"], [153, 3, 1, "c.nrf_spis_rx_pattern_match_candidate_set", "pattern"]], "nrf_spis_rx_pattern_match_enable_check": [[153, 3, 1, "c.nrf_spis_rx_pattern_match_enable_check", "index"], [153, 3, 1, "c.nrf_spis_rx_pattern_match_enable_check", "p_reg"]], "nrf_spis_rx_pattern_match_enable_set": [[153, 3, 1, "c.nrf_spis_rx_pattern_match_enable_set", "enable"], [153, 3, 1, "c.nrf_spis_rx_pattern_match_enable_set", "index"], [153, 3, 1, "c.nrf_spis_rx_pattern_match_enable_set", "p_reg"]], "nrf_spis_rx_pattern_match_one_shot_check": [[153, 3, 1, "c.nrf_spis_rx_pattern_match_one_shot_check", "index"], [153, 3, 1, "c.nrf_spis_rx_pattern_match_one_shot_check", "p_reg"]], "nrf_spis_rx_pattern_match_one_shot_disable": [[153, 3, 1, "c.nrf_spis_rx_pattern_match_one_shot_disable", "index"], [153, 3, 1, "c.nrf_spis_rx_pattern_match_one_shot_disable", "p_reg"]], "nrf_spis_rx_pattern_match_one_shot_enable": [[153, 3, 1, "c.nrf_spis_rx_pattern_match_one_shot_enable", "index"], [153, 3, 1, "c.nrf_spis_rx_pattern_match_one_shot_enable", "p_reg"]], "nrf_spis_rx_terminate_on_bus_error_check": [[153, 3, 1, "c.nrf_spis_rx_terminate_on_bus_error_check", "p_reg"]], "nrf_spis_rx_terminate_on_bus_error_disable": [[153, 3, 1, "c.nrf_spis_rx_terminate_on_bus_error_disable", "p_reg"]], "nrf_spis_rx_terminate_on_bus_error_enable": [[153, 3, 1, "c.nrf_spis_rx_terminate_on_bus_error_enable", "p_reg"]], "nrf_spis_sck_pin_get": [[153, 3, 1, "c.nrf_spis_sck_pin_get", "p_reg"]], "nrf_spis_semaphore_status_get": [[153, 3, 1, "c.nrf_spis_semaphore_status_get", "p_reg"]], "nrf_spis_semstat_t": [[153, 1, 1, "c.nrf_spis_semstat_t.NRF_SPIS_SEMSTAT_CPU", "NRF_SPIS_SEMSTAT_CPU"], [153, 1, 1, "c.nrf_spis_semstat_t.NRF_SPIS_SEMSTAT_CPUPENDING", "NRF_SPIS_SEMSTAT_CPUPENDING"], [153, 1, 1, "c.nrf_spis_semstat_t.NRF_SPIS_SEMSTAT_FREE", "NRF_SPIS_SEMSTAT_FREE"], [153, 1, 1, "c.nrf_spis_semstat_t.NRF_SPIS_SEMSTAT_SPIS", "NRF_SPIS_SEMSTAT_SPIS"]], "nrf_spis_short_mask_t": [[153, 1, 1, "c.nrf_spis_short_mask_t.NRF_SPIS_ALL_SHORTS_MASK", "NRF_SPIS_ALL_SHORTS_MASK"], [153, 1, 1, "c.nrf_spis_short_mask_t.NRF_SPIS_SHORT_END_ACQUIRE", "NRF_SPIS_SHORT_END_ACQUIRE"], [153, 1, 1, "c.nrf_spis_short_mask_t.NRF_SPIS_SHORT_RXMATCH0_DISABLERXMATCH0_MASK", "NRF_SPIS_SHORT_RXMATCH0_DISABLERXMATCH0_MASK"], [153, 1, 1, "c.nrf_spis_short_mask_t.NRF_SPIS_SHORT_RXMATCH0_ENABLERXMATCH1_MASK", "NRF_SPIS_SHORT_RXMATCH0_ENABLERXMATCH1_MASK"], [153, 1, 1, "c.nrf_spis_short_mask_t.NRF_SPIS_SHORT_RXMATCH1_DISABLERXMATCH1_MASK", "NRF_SPIS_SHORT_RXMATCH1_DISABLERXMATCH1_MASK"], [153, 1, 1, "c.nrf_spis_short_mask_t.NRF_SPIS_SHORT_RXMATCH1_ENABLERXMATCH2_MASK", "NRF_SPIS_SHORT_RXMATCH1_ENABLERXMATCH2_MASK"], [153, 1, 1, "c.nrf_spis_short_mask_t.NRF_SPIS_SHORT_RXMATCH2_DISABLERXMATCH2_MASK", "NRF_SPIS_SHORT_RXMATCH2_DISABLERXMATCH2_MASK"], [153, 1, 1, "c.nrf_spis_short_mask_t.NRF_SPIS_SHORT_RXMATCH2_ENABLERXMATCH3_MASK", "NRF_SPIS_SHORT_RXMATCH2_ENABLERXMATCH3_MASK"], [153, 1, 1, "c.nrf_spis_short_mask_t.NRF_SPIS_SHORT_RXMATCH3_DISABLERXMATCH3_MASK", "NRF_SPIS_SHORT_RXMATCH3_DISABLERXMATCH3_MASK"], [153, 1, 1, "c.nrf_spis_short_mask_t.NRF_SPIS_SHORT_RXMATCH3_ENABLERXMATCH0_MASK", "NRF_SPIS_SHORT_RXMATCH3_ENABLERXMATCH0_MASK"]], "nrf_spis_shorts_disable": [[153, 3, 1, "c.nrf_spis_shorts_disable", "mask"], [153, 3, 1, "c.nrf_spis_shorts_disable", "p_reg"]], "nrf_spis_shorts_enable": [[153, 3, 1, "c.nrf_spis_shorts_enable", "mask"], [153, 3, 1, "c.nrf_spis_shorts_enable", "p_reg"]], "nrf_spis_status_get": [[153, 3, 1, "c.nrf_spis_status_get", "p_reg"]], "nrf_spis_status_mask_t": [[153, 1, 1, "c.nrf_spis_status_mask_t.NRF_SPIS_STATUS_OVERFLOW", "NRF_SPIS_STATUS_OVERFLOW"], [153, 1, 1, "c.nrf_spis_status_mask_t.NRF_SPIS_STATUS_OVERREAD", "NRF_SPIS_STATUS_OVERREAD"]], "nrf_spis_subscribe_clear": [[153, 3, 1, "c.nrf_spis_subscribe_clear", "p_reg"], [153, 3, 1, "c.nrf_spis_subscribe_clear", "task"]], "nrf_spis_subscribe_set": [[153, 3, 1, "c.nrf_spis_subscribe_set", "channel"], [153, 3, 1, "c.nrf_spis_subscribe_set", "p_reg"], [153, 3, 1, "c.nrf_spis_subscribe_set", "task"]], "nrf_spis_task_address_get": [[153, 3, 1, "c.nrf_spis_task_address_get", "p_reg"], [153, 3, 1, "c.nrf_spis_task_address_get", "task"]], "nrf_spis_task_t": [[153, 1, 1, "c.nrf_spis_task_t.NRF_SPIS_TASK_ACQUIRE", "NRF_SPIS_TASK_ACQUIRE"], [153, 1, 1, "c.nrf_spis_task_t.NRF_SPIS_TASK_DISABLERXMATCH0", "NRF_SPIS_TASK_DISABLERXMATCH0"], [153, 1, 1, "c.nrf_spis_task_t.NRF_SPIS_TASK_DISABLERXMATCH1", "NRF_SPIS_TASK_DISABLERXMATCH1"], [153, 1, 1, "c.nrf_spis_task_t.NRF_SPIS_TASK_DISABLERXMATCH2", "NRF_SPIS_TASK_DISABLERXMATCH2"], [153, 1, 1, "c.nrf_spis_task_t.NRF_SPIS_TASK_DISABLERXMATCH3", "NRF_SPIS_TASK_DISABLERXMATCH3"], [153, 1, 1, "c.nrf_spis_task_t.NRF_SPIS_TASK_ENABLERXMATCH0", "NRF_SPIS_TASK_ENABLERXMATCH0"], [153, 1, 1, "c.nrf_spis_task_t.NRF_SPIS_TASK_ENABLERXMATCH1", "NRF_SPIS_TASK_ENABLERXMATCH1"], [153, 1, 1, "c.nrf_spis_task_t.NRF_SPIS_TASK_ENABLERXMATCH2", "NRF_SPIS_TASK_ENABLERXMATCH2"], [153, 1, 1, "c.nrf_spis_task_t.NRF_SPIS_TASK_ENABLERXMATCH3", "NRF_SPIS_TASK_ENABLERXMATCH3"], [153, 1, 1, "c.nrf_spis_task_t.NRF_SPIS_TASK_RELEASE", "NRF_SPIS_TASK_RELEASE"]], "nrf_spis_task_trigger": [[153, 3, 1, "c.nrf_spis_task_trigger", "p_reg"], [153, 3, 1, "c.nrf_spis_task_trigger", "task"]], "nrf_spis_tx_amount_get": [[153, 3, 1, "c.nrf_spis_tx_amount_get", "p_reg"]], "nrf_spis_tx_buffer_set": [[153, 3, 1, "c.nrf_spis_tx_buffer_set", "length"], [153, 3, 1, "c.nrf_spis_tx_buffer_set", "p_buffer"], [153, 3, 1, "c.nrf_spis_tx_buffer_set", "p_reg"]], "nrf_spis_tx_list_disable": [[153, 3, 1, "c.nrf_spis_tx_list_disable", "p_reg"]], "nrf_spis_tx_list_enable": [[153, 3, 1, "c.nrf_spis_tx_list_enable", "p_reg"]], "nrf_spis_tx_terminate_on_bus_error_check": [[153, 3, 1, "c.nrf_spis_tx_terminate_on_bus_error_check", "p_reg"]], "nrf_spis_tx_terminate_on_bus_error_disable": [[153, 3, 1, "c.nrf_spis_tx_terminate_on_bus_error_disable", "p_reg"]], "nrf_spis_tx_terminate_on_bus_error_enable": [[153, 3, 1, "c.nrf_spis_tx_terminate_on_bus_error_enable", "p_reg"]], "nrf_spu_dma_t": [[155, 1, 1, "c.nrf_spu_dma_t.NRF_SPU_DMA_NODMA", "NRF_SPU_DMA_NODMA"], [155, 1, 1, "c.nrf_spu_dma_t.NRF_SPU_DMA_NOSEPARATEATTRIBUTE", "NRF_SPU_DMA_NOSEPARATEATTRIBUTE"], [155, 1, 1, "c.nrf_spu_dma_t.NRF_SPU_DMA_SEPARATEATTRIBUTE", "NRF_SPU_DMA_SEPARATEATTRIBUTE"]], "nrf_spu_dppi_config_set": [[155, 3, 1, "c.nrf_spu_dppi_config_set", "channels_mask"], [155, 3, 1, "c.nrf_spu_dppi_config_set", "dppi_id"], [155, 3, 1, "c.nrf_spu_dppi_config_set", "lock_conf"], [155, 3, 1, "c.nrf_spu_dppi_config_set", "p_reg"]], "nrf_spu_event_check": [[155, 3, 1, "c.nrf_spu_event_check", "event"], [155, 3, 1, "c.nrf_spu_event_check", "p_reg"]], "nrf_spu_event_clear": [[155, 3, 1, "c.nrf_spu_event_clear", "event"], [155, 3, 1, "c.nrf_spu_event_clear", "p_reg"]], "nrf_spu_event_t": [[155, 1, 1, "c.nrf_spu_event_t.NRF_SPU_EVENT_FLASHACCERR", "NRF_SPU_EVENT_FLASHACCERR"], [155, 1, 1, "c.nrf_spu_event_t.NRF_SPU_EVENT_PERIPHACCERR", "NRF_SPU_EVENT_PERIPHACCERR"], [155, 1, 1, "c.nrf_spu_event_t.NRF_SPU_EVENT_RAMACCERR", "NRF_SPU_EVENT_RAMACCERR"]], "nrf_spu_extdomain_set": [[155, 3, 1, "c.nrf_spu_extdomain_set", "domain_id"], [155, 3, 1, "c.nrf_spu_extdomain_set", "lock_conf"], [155, 3, 1, "c.nrf_spu_extdomain_set", "p_reg"], [155, 3, 1, "c.nrf_spu_extdomain_set", "secure_attr"]], "nrf_spu_feature_block_enable": [[155, 3, 1, "c.nrf_spu_feature_block_enable", "feature"], [155, 3, 1, "c.nrf_spu_feature_block_enable", "index"], [155, 3, 1, "c.nrf_spu_feature_block_enable", "p_reg"], [155, 3, 1, "c.nrf_spu_feature_block_enable", "subindex"]], "nrf_spu_feature_block_get": [[155, 3, 1, "c.nrf_spu_feature_block_get", "feature"], [155, 3, 1, "c.nrf_spu_feature_block_get", "index"], [155, 3, 1, "c.nrf_spu_feature_block_get", "p_reg"], [155, 3, 1, "c.nrf_spu_feature_block_get", "subindex"]], "nrf_spu_feature_lock_enable": [[155, 3, 1, "c.nrf_spu_feature_lock_enable", "feature"], [155, 3, 1, "c.nrf_spu_feature_lock_enable", "index"], [155, 3, 1, "c.nrf_spu_feature_lock_enable", "p_reg"], [155, 3, 1, "c.nrf_spu_feature_lock_enable", "subindex"]], "nrf_spu_feature_lock_get": [[155, 3, 1, "c.nrf_spu_feature_lock_get", "feature"], [155, 3, 1, "c.nrf_spu_feature_lock_get", "index"], [155, 3, 1, "c.nrf_spu_feature_lock_get", "p_reg"], [155, 3, 1, "c.nrf_spu_feature_lock_get", "subindex"]], "nrf_spu_feature_ownerid_get": [[155, 3, 1, "c.nrf_spu_feature_ownerid_get", "feature"], [155, 3, 1, "c.nrf_spu_feature_ownerid_get", "index"], [155, 3, 1, "c.nrf_spu_feature_ownerid_get", "p_reg"], [155, 3, 1, "c.nrf_spu_feature_ownerid_get", "subindex"]], "nrf_spu_feature_ownerid_set": [[155, 3, 1, "c.nrf_spu_feature_ownerid_set", "feature"], [155, 3, 1, "c.nrf_spu_feature_ownerid_set", "index"], [155, 3, 1, "c.nrf_spu_feature_ownerid_set", "owner_id"], [155, 3, 1, "c.nrf_spu_feature_ownerid_set", "p_reg"], [155, 3, 1, "c.nrf_spu_feature_ownerid_set", "subindex"]], "nrf_spu_feature_secattr_get": [[155, 3, 1, "c.nrf_spu_feature_secattr_get", "feature"], [155, 3, 1, "c.nrf_spu_feature_secattr_get", "index"], [155, 3, 1, "c.nrf_spu_feature_secattr_get", "p_reg"], [155, 3, 1, "c.nrf_spu_feature_secattr_get", "subindex"]], "nrf_spu_feature_secattr_set": [[155, 3, 1, "c.nrf_spu_feature_secattr_set", "enable"], [155, 3, 1, "c.nrf_spu_feature_secattr_set", "feature"], [155, 3, 1, "c.nrf_spu_feature_secattr_set", "index"], [155, 3, 1, "c.nrf_spu_feature_secattr_set", "p_reg"], [155, 3, 1, "c.nrf_spu_feature_secattr_set", "subindex"]], "nrf_spu_feature_t": [[155, 1, 1, "c.nrf_spu_feature_t.NRF_SPU_FEATURE_BELLS_BELL", "NRF_SPU_FEATURE_BELLS_BELL"], [155, 1, 1, "c.nrf_spu_feature_t.NRF_SPU_FEATURE_DPPI_CHANNEL", "NRF_SPU_FEATURE_DPPI_CHANNEL"], [155, 1, 1, "c.nrf_spu_feature_t.NRF_SPU_FEATURE_DPPI_CHANNEL_GROUP", "NRF_SPU_FEATURE_DPPI_CHANNEL_GROUP"], [155, 1, 1, "c.nrf_spu_feature_t.NRF_SPU_FEATURE_GPIOTE_CHANNEL", "NRF_SPU_FEATURE_GPIOTE_CHANNEL"], [155, 1, 1, "c.nrf_spu_feature_t.NRF_SPU_FEATURE_GPIOTE_INTERRUPT", "NRF_SPU_FEATURE_GPIOTE_INTERRUPT"], [155, 1, 1, "c.nrf_spu_feature_t.NRF_SPU_FEATURE_GPIO_PIN", "NRF_SPU_FEATURE_GPIO_PIN"], [155, 1, 1, "c.nrf_spu_feature_t.NRF_SPU_FEATURE_GRTC_CC", "NRF_SPU_FEATURE_GRTC_CC"], [155, 1, 1, "c.nrf_spu_feature_t.NRF_SPU_FEATURE_GRTC_INTERRUPT", "NRF_SPU_FEATURE_GRTC_INTERRUPT"], [155, 1, 1, "c.nrf_spu_feature_t.NRF_SPU_FEATURE_GRTC_SYSCOUNTER", "NRF_SPU_FEATURE_GRTC_SYSCOUNTER"], [155, 1, 1, "c.nrf_spu_feature_t.NRF_SPU_FEATURE_IPCT_CHANNEL", "NRF_SPU_FEATURE_IPCT_CHANNEL"], [155, 1, 1, "c.nrf_spu_feature_t.NRF_SPU_FEATURE_IPCT_INTERRUPT", "NRF_SPU_FEATURE_IPCT_INTERRUPT"], [155, 1, 1, "c.nrf_spu_feature_t.NRF_SPU_FEATURE_MRAMC_AUTODPOWERDOWN", "NRF_SPU_FEATURE_MRAMC_AUTODPOWERDOWN"], [155, 1, 1, "c.nrf_spu_feature_t.NRF_SPU_FEATURE_MRAMC_READY", "NRF_SPU_FEATURE_MRAMC_READY"], [155, 1, 1, "c.nrf_spu_feature_t.NRF_SPU_FEATURE_MRAMC_WAITSTATES", "NRF_SPU_FEATURE_MRAMC_WAITSTATES"], [155, 1, 1, "c.nrf_spu_feature_t.NRF_SPU_FEATURE_TDD", "NRF_SPU_FEATURE_TDD"]], "nrf_spu_flashnsc_set": [[155, 3, 1, "c.nrf_spu_flashnsc_set", "flash_nsc_id"], [155, 3, 1, "c.nrf_spu_flashnsc_set", "flash_nsc_size"], [155, 3, 1, "c.nrf_spu_flashnsc_set", "lock_conf"], [155, 3, 1, "c.nrf_spu_flashnsc_set", "p_reg"], [155, 3, 1, "c.nrf_spu_flashnsc_set", "region_number"]], "nrf_spu_flashregion_set": [[155, 3, 1, "c.nrf_spu_flashregion_set", "lock_conf"], [155, 3, 1, "c.nrf_spu_flashregion_set", "p_reg"], [155, 3, 1, "c.nrf_spu_flashregion_set", "permissions"], [155, 3, 1, "c.nrf_spu_flashregion_set", "region_id"], [155, 3, 1, "c.nrf_spu_flashregion_set", "secure_attr"]], "nrf_spu_gpio_config_set": [[155, 3, 1, "c.nrf_spu_gpio_config_set", "gpio_mask"], [155, 3, 1, "c.nrf_spu_gpio_config_set", "gpio_port"], [155, 3, 1, "c.nrf_spu_gpio_config_set", "lock_conf"], [155, 3, 1, "c.nrf_spu_gpio_config_set", "p_reg"]], "nrf_spu_int_disable": [[155, 3, 1, "c.nrf_spu_int_disable", "mask"], [155, 3, 1, "c.nrf_spu_int_disable", "p_reg"]], "nrf_spu_int_enable": [[155, 3, 1, "c.nrf_spu_int_enable", "mask"], [155, 3, 1, "c.nrf_spu_int_enable", "p_reg"]], "nrf_spu_int_enable_check": [[155, 3, 1, "c.nrf_spu_int_enable_check", "mask"], [155, 3, 1, "c.nrf_spu_int_enable_check", "p_reg"]], "nrf_spu_int_mask_t": [[155, 1, 1, "c.nrf_spu_int_mask_t.NRF_SPU_INT_FLASHACCERR_MASK", "NRF_SPU_INT_FLASHACCERR_MASK"], [155, 1, 1, "c.nrf_spu_int_mask_t.NRF_SPU_INT_PERIPHACCERR_MASK", "NRF_SPU_INT_PERIPHACCERR_MASK"], [155, 1, 1, "c.nrf_spu_int_mask_t.NRF_SPU_INT_RAMACCERR_MASK", "NRF_SPU_INT_RAMACCERR_MASK"]], "nrf_spu_mem_perm_t": [[155, 1, 1, "c.nrf_spu_mem_perm_t.NRF_SPU_MEM_PERM_EXECUTE", "NRF_SPU_MEM_PERM_EXECUTE"], [155, 1, 1, "c.nrf_spu_mem_perm_t.NRF_SPU_MEM_PERM_READ", "NRF_SPU_MEM_PERM_READ"], [155, 1, 1, "c.nrf_spu_mem_perm_t.NRF_SPU_MEM_PERM_WRITE", "NRF_SPU_MEM_PERM_WRITE"]], "nrf_spu_nsc_size_t": [[155, 1, 1, "c.nrf_spu_nsc_size_t.NRF_SPU_NSC_SIZE_1024B", "NRF_SPU_NSC_SIZE_1024B"], [155, 1, 1, "c.nrf_spu_nsc_size_t.NRF_SPU_NSC_SIZE_128B", "NRF_SPU_NSC_SIZE_128B"], [155, 1, 1, "c.nrf_spu_nsc_size_t.NRF_SPU_NSC_SIZE_2048B", "NRF_SPU_NSC_SIZE_2048B"], [155, 1, 1, "c.nrf_spu_nsc_size_t.NRF_SPU_NSC_SIZE_256B", "NRF_SPU_NSC_SIZE_256B"], [155, 1, 1, "c.nrf_spu_nsc_size_t.NRF_SPU_NSC_SIZE_32B", "NRF_SPU_NSC_SIZE_32B"], [155, 1, 1, "c.nrf_spu_nsc_size_t.NRF_SPU_NSC_SIZE_4096B", "NRF_SPU_NSC_SIZE_4096B"], [155, 1, 1, "c.nrf_spu_nsc_size_t.NRF_SPU_NSC_SIZE_512B", "NRF_SPU_NSC_SIZE_512B"], [155, 1, 1, "c.nrf_spu_nsc_size_t.NRF_SPU_NSC_SIZE_64B", "NRF_SPU_NSC_SIZE_64B"], [155, 1, 1, "c.nrf_spu_nsc_size_t.NRF_SPU_NSC_SIZE_DISABLED", "NRF_SPU_NSC_SIZE_DISABLED"]], "nrf_spu_periph_perm_block_enable": [[155, 3, 1, "c.nrf_spu_periph_perm_block_enable", "index"], [155, 3, 1, "c.nrf_spu_periph_perm_block_enable", "p_reg"]], "nrf_spu_periph_perm_block_get": [[155, 3, 1, "c.nrf_spu_periph_perm_block_get", "index"], [155, 3, 1, "c.nrf_spu_periph_perm_block_get", "p_reg"]], "nrf_spu_periph_perm_dma_get": [[155, 3, 1, "c.nrf_spu_periph_perm_dma_get", "index"], [155, 3, 1, "c.nrf_spu_periph_perm_dma_get", "p_reg"]], "nrf_spu_periph_perm_dmasec_get": [[155, 3, 1, "c.nrf_spu_periph_perm_dmasec_get", "index"], [155, 3, 1, "c.nrf_spu_periph_perm_dmasec_get", "p_reg"]], "nrf_spu_periph_perm_dmasec_set": [[155, 3, 1, "c.nrf_spu_periph_perm_dmasec_set", "enable"], [155, 3, 1, "c.nrf_spu_periph_perm_dmasec_set", "index"], [155, 3, 1, "c.nrf_spu_periph_perm_dmasec_set", "p_reg"]], "nrf_spu_periph_perm_lock_enable": [[155, 3, 1, "c.nrf_spu_periph_perm_lock_enable", "index"], [155, 3, 1, "c.nrf_spu_periph_perm_lock_enable", "p_reg"]], "nrf_spu_periph_perm_lock_get": [[155, 3, 1, "c.nrf_spu_periph_perm_lock_get", "index"], [155, 3, 1, "c.nrf_spu_periph_perm_lock_get", "p_reg"]], "nrf_spu_periph_perm_ownerid_get": [[155, 3, 1, "c.nrf_spu_periph_perm_ownerid_get", "index"], [155, 3, 1, "c.nrf_spu_periph_perm_ownerid_get", "p_reg"]], "nrf_spu_periph_perm_ownerid_set": [[155, 3, 1, "c.nrf_spu_periph_perm_ownerid_set", "index"], [155, 3, 1, "c.nrf_spu_periph_perm_ownerid_set", "owner_id"], [155, 3, 1, "c.nrf_spu_periph_perm_ownerid_set", "p_reg"]], "nrf_spu_periph_perm_ownerprog_get": [[155, 3, 1, "c.nrf_spu_periph_perm_ownerprog_get", "index"], [155, 3, 1, "c.nrf_spu_periph_perm_ownerprog_get", "p_reg"]], "nrf_spu_periph_perm_present_get": [[155, 3, 1, "c.nrf_spu_periph_perm_present_get", "index"], [155, 3, 1, "c.nrf_spu_periph_perm_present_get", "p_reg"]], "nrf_spu_periph_perm_secattr_get": [[155, 3, 1, "c.nrf_spu_periph_perm_secattr_get", "index"], [155, 3, 1, "c.nrf_spu_periph_perm_secattr_get", "p_reg"]], "nrf_spu_periph_perm_secattr_set": [[155, 3, 1, "c.nrf_spu_periph_perm_secattr_set", "enable"], [155, 3, 1, "c.nrf_spu_periph_perm_secattr_set", "index"], [155, 3, 1, "c.nrf_spu_periph_perm_secattr_set", "p_reg"]], "nrf_spu_periph_perm_securemapping_get": [[155, 3, 1, "c.nrf_spu_periph_perm_securemapping_get", "index"], [155, 3, 1, "c.nrf_spu_periph_perm_securemapping_get", "p_reg"]], "nrf_spu_periphaccerr_address_get": [[155, 3, 1, "c.nrf_spu_periphaccerr_address_get", "p_reg"]], "nrf_spu_periphaccerr_ownerid_get": [[155, 3, 1, "c.nrf_spu_periphaccerr_ownerid_get", "p_reg"]], "nrf_spu_peripheral_set": [[155, 3, 1, "c.nrf_spu_peripheral_set", "lock_conf"], [155, 3, 1, "c.nrf_spu_peripheral_set", "p_reg"], [155, 3, 1, "c.nrf_spu_peripheral_set", "peripheral_id"], [155, 3, 1, "c.nrf_spu_peripheral_set", "secure_attr"], [155, 3, 1, "c.nrf_spu_peripheral_set", "secure_dma"]], "nrf_spu_publish_clear": [[155, 3, 1, "c.nrf_spu_publish_clear", "event"], [155, 3, 1, "c.nrf_spu_publish_clear", "p_reg"]], "nrf_spu_publish_set": [[155, 3, 1, "c.nrf_spu_publish_set", "channel"], [155, 3, 1, "c.nrf_spu_publish_set", "event"], [155, 3, 1, "c.nrf_spu_publish_set", "p_reg"]], "nrf_spu_ramnsc_set": [[155, 3, 1, "c.nrf_spu_ramnsc_set", "lock_conf"], [155, 3, 1, "c.nrf_spu_ramnsc_set", "p_reg"], [155, 3, 1, "c.nrf_spu_ramnsc_set", "ram_nsc_id"], [155, 3, 1, "c.nrf_spu_ramnsc_set", "ram_nsc_size"], [155, 3, 1, "c.nrf_spu_ramnsc_set", "region_number"]], "nrf_spu_ramregion_set": [[155, 3, 1, "c.nrf_spu_ramregion_set", "lock_conf"], [155, 3, 1, "c.nrf_spu_ramregion_set", "p_reg"], [155, 3, 1, "c.nrf_spu_ramregion_set", "permissions"], [155, 3, 1, "c.nrf_spu_ramregion_set", "region_id"], [155, 3, 1, "c.nrf_spu_ramregion_set", "secure_attr"]], "nrf_spu_securemapping_t": [[155, 1, 1, "c.nrf_spu_securemapping_t.NRF_SPU_SECUREMAPPING_NONSECURE", "NRF_SPU_SECUREMAPPING_NONSECURE"], [155, 1, 1, "c.nrf_spu_securemapping_t.NRF_SPU_SECUREMAPPING_SECURE", "NRF_SPU_SECUREMAPPING_SECURE"], [155, 1, 1, "c.nrf_spu_securemapping_t.NRF_SPU_SECUREMAPPING_SPLIT", "NRF_SPU_SECUREMAPPING_SPLIT"], [155, 1, 1, "c.nrf_spu_securemapping_t.NRF_SPU_SECUREMAPPING_USERSELECTABLE", "NRF_SPU_SECUREMAPPING_USERSELECTABLE"]], "nrf_spu_tz_is_available": [[155, 3, 1, "c.nrf_spu_tz_is_available", "p_reg"]], "nrf_stm_devid_numsp_get": [[157, 3, 1, "c.nrf_stm_devid_numsp_get", "p_reg"]], "nrf_stm_devtype_major_get": [[157, 3, 1, "c.nrf_stm_devtype_major_get", "p_reg"]], "nrf_stm_devtype_major_t": [[157, 1, 1, "c.nrf_stm_devtype_major_t.NRF_STM_DEVTYPE_MAJOR_TRACE_SOURCE", "NRF_STM_DEVTYPE_MAJOR_TRACE_SOURCE"]], "nrf_stm_devtype_sub_get": [[157, 3, 1, "c.nrf_stm_devtype_sub_get", "p_reg"]], "nrf_stm_devtype_sub_t": [[157, 1, 1, "c.nrf_stm_devtype_sub_t.NRF_STM_DEVTYPE_SUB_STIMULUS_TRACE", "NRF_STM_DEVTYPE_SUB_STIMULUS_TRACE"]], "nrf_stm_dma_sens_t": [[157, 1, 1, "c.nrf_stm_dma_sens_t.NRF_STM_DMACTLR_LT100", "NRF_STM_DMACTLR_LT100"], [157, 1, 1, "c.nrf_stm_dma_sens_t.NRF_STM_DMACTLR_LT25", "NRF_STM_DMACTLR_LT25"], [157, 1, 1, "c.nrf_stm_dma_sens_t.NRF_STM_DMACTLR_LT50", "NRF_STM_DMACTLR_LT50"], [157, 1, 1, "c.nrf_stm_dma_sens_t.NRF_STM_DMACTLR_LT75", "NRF_STM_DMACTLR_LT75"]], "nrf_stm_dmactlr_sens_get": [[157, 3, 1, "c.nrf_stm_dmactlr_sens_get", "p_reg"]], "nrf_stm_dmactlr_sens_set": [[157, 3, 1, "c.nrf_stm_dmactlr_sens_set", "p_reg"], [157, 3, 1, "c.nrf_stm_dmactlr_sens_set", "sens"]], "nrf_stm_feature_check": [[157, 3, 1, "c.nrf_stm_feature_check", "feature"], [157, 3, 1, "c.nrf_stm_feature_check", "p_reg"]], "nrf_stm_feature_set": [[157, 3, 1, "c.nrf_stm_feature_set", "enable"], [157, 3, 1, "c.nrf_stm_feature_set", "feature"], [157, 3, 1, "c.nrf_stm_feature_set", "p_reg"]], "nrf_stm_feature_t": [[157, 1, 1, "c.nrf_stm_feature_t.NRF_STM_FEATURE_AFREADYHIGH", "NRF_STM_FEATURE_AFREADYHIGH"], [157, 1, 1, "c.nrf_stm_feature_t.NRF_STM_FEATURE_ASYNCPE", "NRF_STM_FEATURE_ASYNCPE"], [157, 1, 1, "c.nrf_stm_feature_t.NRF_STM_FEATURE_BUSY", "NRF_STM_FEATURE_BUSY"], [157, 1, 1, "c.nrf_stm_feature_t.NRF_STM_FEATURE_CLKON", "NRF_STM_FEATURE_CLKON"], [157, 1, 1, "c.nrf_stm_feature_t.NRF_STM_FEATURE_COMPEN", "NRF_STM_FEATURE_COMPEN"], [157, 1, 1, "c.nrf_stm_feature_t.NRF_STM_FEATURE_FIFOAF", "NRF_STM_FEATURE_FIFOAF"], [157, 1, 1, "c.nrf_stm_feature_t.NRF_STM_FEATURE_FORCETS", "NRF_STM_FEATURE_FORCETS"], [157, 1, 1, "c.nrf_stm_feature_t.NRF_STM_FEATURE_HEERR", "NRF_STM_FEATURE_HEERR"], [157, 1, 1, "c.nrf_stm_feature_t.NRF_STM_FEATURE_HEMASTR", "NRF_STM_FEATURE_HEMASTR"], [157, 1, 1, "c.nrf_stm_feature_t.NRF_STM_FEATURE_HETER", "NRF_STM_FEATURE_HETER"], [157, 1, 1, "c.nrf_stm_feature_t.NRF_STM_FEATURE_HWTEN", "NRF_STM_FEATURE_HWTEN"], [157, 1, 1, "c.nrf_stm_feature_t.NRF_STM_FEATURE_INTEGRATION", "NRF_STM_FEATURE_INTEGRATION"], [157, 1, 1, "c.nrf_stm_feature_t.NRF_STM_FEATURE_LC_LOCKED", "NRF_STM_FEATURE_LC_LOCKED"], [157, 1, 1, "c.nrf_stm_feature_t.NRF_STM_FEATURE_LC_PRESENT", "NRF_STM_FEATURE_LC_PRESENT"], [157, 1, 1, "c.nrf_stm_feature_t.NRF_STM_FEATURE_NSID", "NRF_STM_FEATURE_NSID"], [157, 1, 1, "c.nrf_stm_feature_t.NRF_STM_FEATURE_NSNID", "NRF_STM_FEATURE_NSNID"], [157, 1, 1, "c.nrf_stm_feature_t.NRF_STM_FEATURE_PRIORINVDIS", "NRF_STM_FEATURE_PRIORINVDIS"], [157, 1, 1, "c.nrf_stm_feature_t.NRF_STM_FEATURE_PRIVMASK", "NRF_STM_FEATURE_PRIVMASK"], [157, 1, 1, "c.nrf_stm_feature_t.NRF_STM_FEATURE_SID", "NRF_STM_FEATURE_SID"], [157, 1, 1, "c.nrf_stm_feature_t.NRF_STM_FEATURE_SNID", "NRF_STM_FEATURE_SNID"], [157, 1, 1, "c.nrf_stm_feature_t.NRF_STM_FEATURE_SPER", "NRF_STM_FEATURE_SPER"], [157, 1, 1, "c.nrf_stm_feature_t.NRF_STM_FEATURE_SPOVERRIDE", "NRF_STM_FEATURE_SPOVERRIDE"], [157, 1, 1, "c.nrf_stm_feature_t.NRF_STM_FEATURE_SPTER", "NRF_STM_FEATURE_SPTER"], [157, 1, 1, "c.nrf_stm_feature_t.NRF_STM_FEATURE_STM", "NRF_STM_FEATURE_STM"], [157, 1, 1, "c.nrf_stm_feature_t.NRF_STM_FEATURE_SWOEN", "NRF_STM_FEATURE_SWOEN"], [157, 1, 1, "c.nrf_stm_feature_t.NRF_STM_FEATURE_SYNCEN", "NRF_STM_FEATURE_SYNCEN"], [157, 1, 1, "c.nrf_stm_feature_t.NRF_STM_FEATURE_TSEN", "NRF_STM_FEATURE_TSEN"], [157, 1, 1, "c.nrf_stm_feature_t.NRF_STM_FEATURE_TSFREQ", "NRF_STM_FEATURE_TSFREQ"], [157, 1, 1, "c.nrf_stm_feature_t.NRF_STM_FEATURE_TSPRESCALE", "NRF_STM_FEATURE_TSPRESCALE"]], "nrf_stm_hefeat1r_numhe_get": [[157, 3, 1, "c.nrf_stm_hefeat1r_numhe_get", "p_reg"]], "nrf_stm_heidr_class_get": [[157, 3, 1, "c.nrf_stm_heidr_class_get", "p_reg"]], "nrf_stm_heidr_class_t": [[157, 1, 1, "c.nrf_stm_heidr_class_t.NRF_STM_HEIDR_CLASS_HARDWARE_EVENT_CONTROL", "NRF_STM_HEIDR_CLASS_HARDWARE_EVENT_CONTROL"]], "nrf_stm_heidr_classrev_get": [[157, 3, 1, "c.nrf_stm_heidr_classrev_get", "p_reg"]], "nrf_stm_heidr_vendspec_get": [[157, 3, 1, "c.nrf_stm_heidr_vendspec_get", "p_reg"]], "nrf_stm_hemastr_get": [[157, 3, 1, "c.nrf_stm_hemastr_get", "p_reg"]], "nrf_stm_input_check": [[157, 3, 1, "c.nrf_stm_input_check", "input"], [157, 3, 1, "c.nrf_stm_input_check", "p_reg"]], "nrf_stm_input_t": [[157, 1, 1, "c.nrf_stm_input_t.NRF_STM_INPUT_AFVALIDM", "NRF_STM_INPUT_AFVALIDM"], [157, 1, 1, "c.nrf_stm_input_t.NRF_STM_INPUT_ATREADYM", "NRF_STM_INPUT_ATREADYM"]], "nrf_stm_lar_access_set": [[157, 3, 1, "c.nrf_stm_lar_access_set", "p_reg"], [157, 3, 1, "c.nrf_stm_lar_access_set", "value"]], "nrf_stm_lsr_type_get": [[157, 3, 1, "c.nrf_stm_lsr_type_get", "p_reg"]], "nrf_stm_lsr_type_t": [[157, 1, 1, "c.nrf_stm_lsr_type_t.NRF_STM_LSR_TYPE_32", "NRF_STM_LSR_TYPE_32"], [157, 1, 1, "c.nrf_stm_lsr_type_t.NRF_STM_LSR_TYPE_8", "NRF_STM_LSR_TYPE_8"]], "nrf_stm_output_set": [[157, 3, 1, "c.nrf_stm_output_set", "enable"], [157, 3, 1, "c.nrf_stm_output_set", "output"], [157, 3, 1, "c.nrf_stm_output_set", "p_reg"]], "nrf_stm_output_t": [[157, 1, 1, "c.nrf_stm_output_t.NRF_STM_OUTPUT_AFREADYM", "NRF_STM_OUTPUT_AFREADYM"], [157, 1, 1, "c.nrf_stm_output_t.NRF_STM_OUTPUT_ASYNCOUT", "NRF_STM_OUTPUT_ASYNCOUT"], [157, 1, 1, "c.nrf_stm_output_t.NRF_STM_OUTPUT_ATBYTESM_0", "NRF_STM_OUTPUT_ATBYTESM_0"], [157, 1, 1, "c.nrf_stm_output_t.NRF_STM_OUTPUT_ATBYTESM_1", "NRF_STM_OUTPUT_ATBYTESM_1"], [157, 1, 1, "c.nrf_stm_output_t.NRF_STM_OUTPUT_ATDATAM_0", "NRF_STM_OUTPUT_ATDATAM_0"], [157, 1, 1, "c.nrf_stm_output_t.NRF_STM_OUTPUT_ATDATAM_15", "NRF_STM_OUTPUT_ATDATAM_15"], [157, 1, 1, "c.nrf_stm_output_t.NRF_STM_OUTPUT_ATDATAM_23", "NRF_STM_OUTPUT_ATDATAM_23"], [157, 1, 1, "c.nrf_stm_output_t.NRF_STM_OUTPUT_ATDATAM_31", "NRF_STM_OUTPUT_ATDATAM_31"], [157, 1, 1, "c.nrf_stm_output_t.NRF_STM_OUTPUT_ATDATAM_7", "NRF_STM_OUTPUT_ATDATAM_7"], [157, 1, 1, "c.nrf_stm_output_t.NRF_STM_OUTPUT_ATIDM_0", "NRF_STM_OUTPUT_ATIDM_0"], [157, 1, 1, "c.nrf_stm_output_t.NRF_STM_OUTPUT_ATIDM_1", "NRF_STM_OUTPUT_ATIDM_1"], [157, 1, 1, "c.nrf_stm_output_t.NRF_STM_OUTPUT_ATIDM_2", "NRF_STM_OUTPUT_ATIDM_2"], [157, 1, 1, "c.nrf_stm_output_t.NRF_STM_OUTPUT_ATIDM_3", "NRF_STM_OUTPUT_ATIDM_3"], [157, 1, 1, "c.nrf_stm_output_t.NRF_STM_OUTPUT_ATIDM_4", "NRF_STM_OUTPUT_ATIDM_4"], [157, 1, 1, "c.nrf_stm_output_t.NRF_STM_OUTPUT_ATIDM_5", "NRF_STM_OUTPUT_ATIDM_5"], [157, 1, 1, "c.nrf_stm_output_t.NRF_STM_OUTPUT_ATIDM_6", "NRF_STM_OUTPUT_ATIDM_6"], [157, 1, 1, "c.nrf_stm_output_t.NRF_STM_OUTPUT_ATVALIDM", "NRF_STM_OUTPUT_ATVALIDM"], [157, 1, 1, "c.nrf_stm_output_t.NRF_STM_OUTPUT_TRIGOUTHETE", "NRF_STM_OUTPUT_TRIGOUTHETE"], [157, 1, 1, "c.nrf_stm_output_t.NRF_STM_OUTPUT_TRIGOUTSPTE", "NRF_STM_OUTPUT_TRIGOUTSPTE"], [157, 1, 1, "c.nrf_stm_output_t.NRF_STM_OUTPUT_TRIGOUTSW", "NRF_STM_OUTPUT_TRIGOUTSW"]], "nrf_stm_spfeat1r_prot_get": [[157, 3, 1, "c.nrf_stm_spfeat1r_prot_get", "p_reg"]], "nrf_stm_spfeat1r_prot_t": [[157, 1, 1, "c.nrf_stm_spfeat1r_prot_t.NRF_STM_SFPEAT1R_PROT_STPV2", "NRF_STM_SFPEAT1R_PROT_STPV2"]], "nrf_stm_spfeat1r_syncen_get": [[157, 3, 1, "c.nrf_stm_spfeat1r_syncen_get", "p_reg"]], "nrf_stm_spfeat1r_syncen_t": [[157, 1, 1, "c.nrf_stm_spfeat1r_syncen_t.NRF_STM_SPFEAT1R_SYNCEN_READ_AS_ONE", "NRF_STM_SPFEAT1R_SYNCEN_READ_AS_ONE"]], "nrf_stm_spfeat1r_tracebus_get": [[157, 3, 1, "c.nrf_stm_spfeat1r_tracebus_get", "p_reg"]], "nrf_stm_spfeat1r_trigctl_get": [[157, 3, 1, "c.nrf_stm_spfeat1r_trigctl_get", "p_reg"]], "nrf_stm_spfeat1r_ts_get": [[157, 3, 1, "c.nrf_stm_spfeat1r_ts_get", "p_reg"]], "nrf_stm_spfeat1r_ts_t": [[157, 1, 1, "c.nrf_stm_spfeat1r_ts_t.NRF_STM_SPFEAT1R_TS_ABSOLUTE", "NRF_STM_SPFEAT1R_TS_ABSOLUTE"]], "nrf_stm_spfeat2r_dsize_get": [[157, 3, 1, "c.nrf_stm_spfeat2r_dsize_get", "p_reg"]], "nrf_stm_spfeat2r_dsize_t": [[157, 1, 1, "c.nrf_stm_spfeat2r_dsize_t.NRF_STM_SPFEAT2R_DSIZE_32", "NRF_STM_SPFEAT2R_DSIZE_32"]], "nrf_stm_spfeat2r_spcomp_get": [[157, 3, 1, "c.nrf_stm_spfeat2r_spcomp_get", "p_reg"]], "nrf_stm_spfeat2r_spcomp_t": [[157, 1, 1, "c.nrf_stm_spfeat2r_spcomp_t.NRF_STM_SPFEAT2R_SPCOMP_PROGRAMMABLE", "NRF_STM_SPFEAT2R_SPCOMP_PROGRAMMABLE"]], "nrf_stm_spfeat2r_sptrtype_get": [[157, 3, 1, "c.nrf_stm_spfeat2r_sptrtype_get", "p_reg"]], "nrf_stm_spfeat2r_sptrtype_t": [[157, 1, 1, "c.nrf_stm_spfeat2r_sptrtype_t.NRF_STM_SPFEAT2R_SPTRTYPE_INVARIANT_AND_GUARANTEED", "NRF_STM_SPFEAT2R_SPTRTYPE_INVARIANT_AND_GUARANTEED"]], "nrf_stm_spfeat3r_nummast_get": [[157, 3, 1, "c.nrf_stm_spfeat3r_nummast_get", "p_reg"]], "nrf_stm_tcsr_traceid_get": [[157, 3, 1, "c.nrf_stm_tcsr_traceid_get", "p_reg"]], "nrf_stm_tcsr_traceid_set": [[157, 3, 1, "c.nrf_stm_tcsr_traceid_set", "p_reg"], [157, 3, 1, "c.nrf_stm_tcsr_traceid_set", "trace_id"]], "nrf_systick_csr_flags_t": [[160, 1, 1, "c.nrf_systick_csr_flags_t.NRF_SYSTICK_CSR_CLKSOURCE_CPU", "NRF_SYSTICK_CSR_CLKSOURCE_CPU"], [160, 1, 1, "c.nrf_systick_csr_flags_t.NRF_SYSTICK_CSR_CLKSOURCE_MASK", "NRF_SYSTICK_CSR_CLKSOURCE_MASK"], [160, 1, 1, "c.nrf_systick_csr_flags_t.NRF_SYSTICK_CSR_CLKSOURCE_REF", "NRF_SYSTICK_CSR_CLKSOURCE_REF"], [160, 1, 1, "c.nrf_systick_csr_flags_t.NRF_SYSTICK_CSR_COUNTFLAG_MASK", "NRF_SYSTICK_CSR_COUNTFLAG_MASK"], [160, 1, 1, "c.nrf_systick_csr_flags_t.NRF_SYSTICK_CSR_DISABLE", "NRF_SYSTICK_CSR_DISABLE"], [160, 1, 1, "c.nrf_systick_csr_flags_t.NRF_SYSTICK_CSR_ENABLE", "NRF_SYSTICK_CSR_ENABLE"], [160, 1, 1, "c.nrf_systick_csr_flags_t.NRF_SYSTICK_CSR_ENABLE_MASK", "NRF_SYSTICK_CSR_ENABLE_MASK"], [160, 1, 1, "c.nrf_systick_csr_flags_t.NRF_SYSTICK_CSR_TICKINT_DISABLE", "NRF_SYSTICK_CSR_TICKINT_DISABLE"], [160, 1, 1, "c.nrf_systick_csr_flags_t.NRF_SYSTICK_CSR_TICKINT_ENABLE", "NRF_SYSTICK_CSR_TICKINT_ENABLE"], [160, 1, 1, "c.nrf_systick_csr_flags_t.NRF_SYSTICK_CSR_TICKINT_MASK", "NRF_SYSTICK_CSR_TICKINT_MASK"]], "nrf_systick_csr_set": [[160, 3, 1, "c.nrf_systick_csr_set", "val"]], "nrf_systick_load_set": [[160, 3, 1, "c.nrf_systick_load_set", "val"]], "nrf_tampc_activeshield_channel_disable": [[162, 3, 1, "c.nrf_tampc_activeshield_channel_disable", "mask"], [162, 3, 1, "c.nrf_tampc_activeshield_channel_disable", "p_reg"]], "nrf_tampc_activeshield_channel_enable": [[162, 3, 1, "c.nrf_tampc_activeshield_channel_enable", "mask"], [162, 3, 1, "c.nrf_tampc_activeshield_channel_enable", "p_reg"]], "nrf_tampc_activeshield_channel_enable_check": [[162, 3, 1, "c.nrf_tampc_activeshield_channel_enable_check", "mask"], [162, 3, 1, "c.nrf_tampc_activeshield_channel_enable_check", "p_reg"]], "nrf_tampc_activeshield_mask_t": [[162, 1, 1, "c.nrf_tampc_activeshield_mask_t.NRF_TAMPC_ACTIVESHIELD_CHANNEL_0_MASK", "NRF_TAMPC_ACTIVESHIELD_CHANNEL_0_MASK"], [162, 1, 1, "c.nrf_tampc_activeshield_mask_t.NRF_TAMPC_ACTIVESHIELD_CHANNEL_1_MASK", "NRF_TAMPC_ACTIVESHIELD_CHANNEL_1_MASK"], [162, 1, 1, "c.nrf_tampc_activeshield_mask_t.NRF_TAMPC_ACTIVESHIELD_CHANNEL_2_MASK", "NRF_TAMPC_ACTIVESHIELD_CHANNEL_2_MASK"], [162, 1, 1, "c.nrf_tampc_activeshield_mask_t.NRF_TAMPC_ACTIVESHIELD_CHANNEL_3_MASK", "NRF_TAMPC_ACTIVESHIELD_CHANNEL_3_MASK"], [162, 1, 1, "c.nrf_tampc_activeshield_mask_t.NRF_TAMPC_ALL_ACTIVESHIELD_CHANNELS_MASK", "NRF_TAMPC_ALL_ACTIVESHIELD_CHANNELS_MASK"]], "nrf_tampc_ap_ctrl_lock_get": [[162, 3, 1, "c.nrf_tampc_ap_ctrl_lock_get", "domain"], [162, 3, 1, "c.nrf_tampc_ap_ctrl_lock_get", "p_reg"], [162, 3, 1, "c.nrf_tampc_ap_ctrl_lock_get", "type"]], "nrf_tampc_ap_ctrl_lock_set": [[162, 3, 1, "c.nrf_tampc_ap_ctrl_lock_set", "domain"], [162, 3, 1, "c.nrf_tampc_ap_ctrl_lock_set", "enable"], [162, 3, 1, "c.nrf_tampc_ap_ctrl_lock_set", "p_reg"], [162, 3, 1, "c.nrf_tampc_ap_ctrl_lock_set", "type"]], "nrf_tampc_ap_ctrl_value_get": [[162, 3, 1, "c.nrf_tampc_ap_ctrl_value_get", "domain"], [162, 3, 1, "c.nrf_tampc_ap_ctrl_value_get", "p_reg"], [162, 3, 1, "c.nrf_tampc_ap_ctrl_value_get", "type"]], "nrf_tampc_ap_ctrl_value_set": [[162, 3, 1, "c.nrf_tampc_ap_ctrl_value_set", "domain"], [162, 3, 1, "c.nrf_tampc_ap_ctrl_value_set", "enable"], [162, 3, 1, "c.nrf_tampc_ap_ctrl_value_set", "p_reg"], [162, 3, 1, "c.nrf_tampc_ap_ctrl_value_set", "type"]], "nrf_tampc_coresight_ctrl_fault_get": [[162, 3, 1, "c.nrf_tampc_coresight_ctrl_fault_get", "p_reg"], [162, 3, 1, "c.nrf_tampc_coresight_ctrl_fault_get", "type"]], "nrf_tampc_coresight_ctrl_fault_set": [[162, 3, 1, "c.nrf_tampc_coresight_ctrl_fault_set", "enable"], [162, 3, 1, "c.nrf_tampc_coresight_ctrl_fault_set", "p_reg"], [162, 3, 1, "c.nrf_tampc_coresight_ctrl_fault_set", "type"]], "nrf_tampc_coresight_ctrl_lock_get": [[162, 3, 1, "c.nrf_tampc_coresight_ctrl_lock_get", "p_reg"], [162, 3, 1, "c.nrf_tampc_coresight_ctrl_lock_get", "type"]], "nrf_tampc_coresight_ctrl_lock_set": [[162, 3, 1, "c.nrf_tampc_coresight_ctrl_lock_set", "enable"], [162, 3, 1, "c.nrf_tampc_coresight_ctrl_lock_set", "p_reg"], [162, 3, 1, "c.nrf_tampc_coresight_ctrl_lock_set", "type"]], "nrf_tampc_coresight_ctrl_value_get": [[162, 3, 1, "c.nrf_tampc_coresight_ctrl_value_get", "p_reg"], [162, 3, 1, "c.nrf_tampc_coresight_ctrl_value_get", "type"]], "nrf_tampc_coresight_ctrl_value_set": [[162, 3, 1, "c.nrf_tampc_coresight_ctrl_value_set", "enable"], [162, 3, 1, "c.nrf_tampc_coresight_ctrl_value_set", "p_reg"], [162, 3, 1, "c.nrf_tampc_coresight_ctrl_value_set", "type"]], "nrf_tampc_debug_type_t": [[162, 1, 1, "c.nrf_tampc_debug_type_t.NRF_TAMPC_DEBUG_TYPE_DBGEN", "NRF_TAMPC_DEBUG_TYPE_DBGEN"], [162, 1, 1, "c.nrf_tampc_debug_type_t.NRF_TAMPC_DEBUG_TYPE_DEVICEEN", "NRF_TAMPC_DEBUG_TYPE_DEVICEEN"], [162, 1, 1, "c.nrf_tampc_debug_type_t.NRF_TAMPC_DEBUG_TYPE_NIDEN", "NRF_TAMPC_DEBUG_TYPE_NIDEN"], [162, 1, 1, "c.nrf_tampc_debug_type_t.NRF_TAMPC_DEBUG_TYPE_SPIDEN", "NRF_TAMPC_DEBUG_TYPE_SPIDEN"], [162, 1, 1, "c.nrf_tampc_debug_type_t.NRF_TAMPC_DEBUG_TYPE_SPNIDEN", "NRF_TAMPC_DEBUG_TYPE_SPNIDEN"]], "nrf_tampc_detector_status_check": [[162, 3, 1, "c.nrf_tampc_detector_status_check", "detector"], [162, 3, 1, "c.nrf_tampc_detector_status_check", "p_reg"]], "nrf_tampc_detector_status_clear": [[162, 3, 1, "c.nrf_tampc_detector_status_clear", "detector"], [162, 3, 1, "c.nrf_tampc_detector_status_clear", "p_reg"]], "nrf_tampc_detector_t": [[162, 1, 1, "c.nrf_tampc_detector_t.NRF_TAMPC_DETECTOR_ACTIVE_SHIELD", "NRF_TAMPC_DETECTOR_ACTIVE_SHIELD"], [162, 1, 1, "c.nrf_tampc_detector_t.NRF_TAMPC_DETECTOR_CRACEN", "NRF_TAMPC_DETECTOR_CRACEN"], [162, 1, 1, "c.nrf_tampc_detector_t.NRF_TAMPC_DETECTOR_GLITCH_DOMAIN_FAST", "NRF_TAMPC_DETECTOR_GLITCH_DOMAIN_FAST"], [162, 1, 1, "c.nrf_tampc_detector_t.NRF_TAMPC_DETECTOR_GLITCH_DOMAIN_SLOW", "NRF_TAMPC_DETECTOR_GLITCH_DOMAIN_SLOW"], [162, 1, 1, "c.nrf_tampc_detector_t.NRF_TAMPC_DETECTOR_PROTECTED_SIGNAL", "NRF_TAMPC_DETECTOR_PROTECTED_SIGNAL"], [162, 1, 1, "c.nrf_tampc_detector_t.NRF_TAMPC_DETECTOR_TAMPER_SWITCH", "NRF_TAMPC_DETECTOR_TAMPER_SWITCH"]], "nrf_tampc_domain_ctrl_lock_get": [[162, 3, 1, "c.nrf_tampc_domain_ctrl_lock_get", "domain"], [162, 3, 1, "c.nrf_tampc_domain_ctrl_lock_get", "p_reg"], [162, 3, 1, "c.nrf_tampc_domain_ctrl_lock_get", "type"]], "nrf_tampc_domain_ctrl_lock_set": [[162, 3, 1, "c.nrf_tampc_domain_ctrl_lock_set", "domain"], [162, 3, 1, "c.nrf_tampc_domain_ctrl_lock_set", "enable"], [162, 3, 1, "c.nrf_tampc_domain_ctrl_lock_set", "p_reg"], [162, 3, 1, "c.nrf_tampc_domain_ctrl_lock_set", "type"]], "nrf_tampc_domain_ctrl_value_get": [[162, 3, 1, "c.nrf_tampc_domain_ctrl_value_get", "domain"], [162, 3, 1, "c.nrf_tampc_domain_ctrl_value_get", "p_reg"], [162, 3, 1, "c.nrf_tampc_domain_ctrl_value_get", "type"]], "nrf_tampc_domain_ctrl_value_set": [[162, 3, 1, "c.nrf_tampc_domain_ctrl_value_set", "domain"], [162, 3, 1, "c.nrf_tampc_domain_ctrl_value_set", "enable"], [162, 3, 1, "c.nrf_tampc_domain_ctrl_value_set", "p_reg"], [162, 3, 1, "c.nrf_tampc_domain_ctrl_value_set", "type"]], "nrf_tampc_event_address_get": [[162, 3, 1, "c.nrf_tampc_event_address_get", "event"], [162, 3, 1, "c.nrf_tampc_event_address_get", "p_reg"]], "nrf_tampc_event_check": [[162, 3, 1, "c.nrf_tampc_event_check", "event"], [162, 3, 1, "c.nrf_tampc_event_check", "p_reg"]], "nrf_tampc_event_clear": [[162, 3, 1, "c.nrf_tampc_event_clear", "event"], [162, 3, 1, "c.nrf_tampc_event_clear", "p_reg"]], "nrf_tampc_event_t": [[162, 1, 1, "c.nrf_tampc_event_t.NRF_TAMPC_EVENT_TAMPER", "NRF_TAMPC_EVENT_TAMPER"], [162, 1, 1, "c.nrf_tampc_event_t.NRF_TAMPC_EVENT_WRITE_ERROR", "NRF_TAMPC_EVENT_WRITE_ERROR"]], "nrf_tampc_int_disable": [[162, 3, 1, "c.nrf_tampc_int_disable", "mask"], [162, 3, 1, "c.nrf_tampc_int_disable", "p_reg"]], "nrf_tampc_int_enable": [[162, 3, 1, "c.nrf_tampc_int_enable", "mask"], [162, 3, 1, "c.nrf_tampc_int_enable", "p_reg"]], "nrf_tampc_int_enable_check": [[162, 3, 1, "c.nrf_tampc_int_enable_check", "mask"], [162, 3, 1, "c.nrf_tampc_int_enable_check", "p_reg"]], "nrf_tampc_int_pending_get": [[162, 3, 1, "c.nrf_tampc_int_pending_get", "p_reg"]], "nrf_tampc_protect_t": [[162, 1, 1, "c.nrf_tampc_protect_t.NRF_TAMPC_PROTECT_ACTIVE_SHIELD", "NRF_TAMPC_PROTECT_ACTIVE_SHIELD"], [162, 1, 1, "c.nrf_tampc_protect_t.NRF_TAMPC_PROTECT_CRACEN", "NRF_TAMPC_PROTECT_CRACEN"], [162, 1, 1, "c.nrf_tampc_protect_t.NRF_TAMPC_PROTECT_ERASE_PROTECT", "NRF_TAMPC_PROTECT_ERASE_PROTECT"], [162, 1, 1, "c.nrf_tampc_protect_t.NRF_TAMPC_PROTECT_GLITCH_DOMAIN_FAST", "NRF_TAMPC_PROTECT_GLITCH_DOMAIN_FAST"], [162, 1, 1, "c.nrf_tampc_protect_t.NRF_TAMPC_PROTECT_GLITCH_DOMAIN_SLOW", "NRF_TAMPC_PROTECT_GLITCH_DOMAIN_SLOW"], [162, 1, 1, "c.nrf_tampc_protect_t.NRF_TAMPC_PROTECT_RESETEN_EXT", "NRF_TAMPC_PROTECT_RESETEN_EXT"], [162, 1, 1, "c.nrf_tampc_protect_t.NRF_TAMPC_PROTECT_RESETEN_INT", "NRF_TAMPC_PROTECT_RESETEN_INT"], [162, 1, 1, "c.nrf_tampc_protect_t.NRF_TAMPC_PROTECT_TAMPER_SWITCH", "NRF_TAMPC_PROTECT_TAMPER_SWITCH"]], "nrf_tampc_protector_ctrl_lock_get": [[162, 3, 1, "c.nrf_tampc_protector_ctrl_lock_get", "ctrl"], [162, 3, 1, "c.nrf_tampc_protector_ctrl_lock_get", "p_reg"]], "nrf_tampc_protector_ctrl_lock_set": [[162, 3, 1, "c.nrf_tampc_protector_ctrl_lock_set", "ctrl"], [162, 3, 1, "c.nrf_tampc_protector_ctrl_lock_set", "enable"], [162, 3, 1, "c.nrf_tampc_protector_ctrl_lock_set", "p_reg"]], "nrf_tampc_protector_ctrl_value_get": [[162, 3, 1, "c.nrf_tampc_protector_ctrl_value_get", "ctrl"], [162, 3, 1, "c.nrf_tampc_protector_ctrl_value_get", "p_reg"]], "nrf_tampc_protector_ctrl_value_set": [[162, 3, 1, "c.nrf_tampc_protector_ctrl_value_set", "ctrl"], [162, 3, 1, "c.nrf_tampc_protector_ctrl_value_set", "enable"], [162, 3, 1, "c.nrf_tampc_protector_ctrl_value_set", "p_reg"]], "nrf_tampc_protector_status_check": [[162, 3, 1, "c.nrf_tampc_protector_status_check", "p_reg"], [162, 3, 1, "c.nrf_tampc_protector_status_check", "status"]], "nrf_tampc_protector_status_clear": [[162, 3, 1, "c.nrf_tampc_protector_status_clear", "p_reg"], [162, 3, 1, "c.nrf_tampc_protector_status_clear", "status"]], "nrf_tampc_warmboot_ctrl_fault_get": [[162, 3, 1, "c.nrf_tampc_warmboot_ctrl_fault_get", "mode"], [162, 3, 1, "c.nrf_tampc_warmboot_ctrl_fault_get", "p_reg"]], "nrf_tampc_warmboot_ctrl_fault_set": [[162, 3, 1, "c.nrf_tampc_warmboot_ctrl_fault_set", "enable"], [162, 3, 1, "c.nrf_tampc_warmboot_ctrl_fault_set", "mode"], [162, 3, 1, "c.nrf_tampc_warmboot_ctrl_fault_set", "p_reg"]], "nrf_tampc_warmboot_ctrl_lock_get": [[162, 3, 1, "c.nrf_tampc_warmboot_ctrl_lock_get", "mode"], [162, 3, 1, "c.nrf_tampc_warmboot_ctrl_lock_get", "p_reg"]], "nrf_tampc_warmboot_ctrl_lock_set": [[162, 3, 1, "c.nrf_tampc_warmboot_ctrl_lock_set", "enable"], [162, 3, 1, "c.nrf_tampc_warmboot_ctrl_lock_set", "mode"], [162, 3, 1, "c.nrf_tampc_warmboot_ctrl_lock_set", "p_reg"]], "nrf_tampc_warmboot_ctrl_value_get": [[162, 3, 1, "c.nrf_tampc_warmboot_ctrl_value_get", "mode"], [162, 3, 1, "c.nrf_tampc_warmboot_ctrl_value_get", "p_reg"]], "nrf_tampc_warmboot_ctrl_value_set": [[162, 3, 1, "c.nrf_tampc_warmboot_ctrl_value_set", "enable"], [162, 3, 1, "c.nrf_tampc_warmboot_ctrl_value_set", "mode"], [162, 3, 1, "c.nrf_tampc_warmboot_ctrl_value_set", "p_reg"]], "nrf_tampc_warmboot_mode_t": [[162, 1, 1, "c.nrf_tampc_warmboot_mode_t.NRF_TAMPC_WARMBOOT_MODE_SYSTEMOFF", "NRF_TAMPC_WARMBOOT_MODE_SYSTEMOFF"], [162, 1, 1, "c.nrf_tampc_warmboot_mode_t.NRF_TAMPC_WARMBOOT_MODE_UNRET_IDLE", "NRF_TAMPC_WARMBOOT_MODE_UNRET_IDLE"]], "nrf_tampc_warmboot_status_check": [[162, 3, 1, "c.nrf_tampc_warmboot_status_check", "mode"], [162, 3, 1, "c.nrf_tampc_warmboot_status_check", "p_reg"]], "nrf_tampc_warmboot_status_clear": [[162, 3, 1, "c.nrf_tampc_warmboot_status_clear", "mode"], [162, 3, 1, "c.nrf_tampc_warmboot_status_clear", "p_reg"]], "nrf_tapmc_int_mask_t": [[162, 1, 1, "c.nrf_tapmc_int_mask_t.NRF_TAMPC_ALL_INTS_MASK", "NRF_TAMPC_ALL_INTS_MASK"], [162, 1, 1, "c.nrf_tapmc_int_mask_t.NRF_TAMPC_INT_TAMPER_MASK", "NRF_TAMPC_INT_TAMPER_MASK"], [162, 1, 1, "c.nrf_tapmc_int_mask_t.NRF_TAMPC_INT_WRITE_ERROR_MASK", "NRF_TAMPC_INT_WRITE_ERROR_MASK"]], "nrf_tbm_buffersize_set": [[165, 3, 1, "c.nrf_tbm_buffersize_set", "p_reg"], [165, 3, 1, "c.nrf_tbm_buffersize_set", "size"]], "nrf_tbm_count_get": [[165, 3, 1, "c.nrf_tbm_count_get", "p_reg"]], "nrf_tbm_event_check": [[165, 3, 1, "c.nrf_tbm_event_check", "event"], [165, 3, 1, "c.nrf_tbm_event_check", "p_reg"]], "nrf_tbm_event_clear": [[165, 3, 1, "c.nrf_tbm_event_clear", "event"], [165, 3, 1, "c.nrf_tbm_event_clear", "p_reg"]], "nrf_tbm_event_t": [[165, 1, 1, "c.nrf_tbm_event_t.NRF_TBM_EVENT_FLUSH", "NRF_TBM_EVENT_FLUSH"], [165, 1, 1, "c.nrf_tbm_event_t.NRF_TBM_EVENT_FULL", "NRF_TBM_EVENT_FULL"], [165, 1, 1, "c.nrf_tbm_event_t.NRF_TBM_EVENT_HALFFULL", "NRF_TBM_EVENT_HALFFULL"]], "nrf_tbm_int_disable": [[165, 3, 1, "c.nrf_tbm_int_disable", "mask"], [165, 3, 1, "c.nrf_tbm_int_disable", "p_reg"]], "nrf_tbm_int_enable": [[165, 3, 1, "c.nrf_tbm_int_enable", "mask"], [165, 3, 1, "c.nrf_tbm_int_enable", "p_reg"]], "nrf_tbm_int_enable_check": [[165, 3, 1, "c.nrf_tbm_int_enable_check", "mask"], [165, 3, 1, "c.nrf_tbm_int_enable_check", "p_reg"]], "nrf_tbm_int_mask_t": [[165, 1, 1, "c.nrf_tbm_int_mask_t.NRF_TBM_INT_FLUSH_MASK", "NRF_TBM_INT_FLUSH_MASK"], [165, 1, 1, "c.nrf_tbm_int_mask_t.NRF_TBM_INT_FULL_MASK", "NRF_TBM_INT_FULL_MASK"], [165, 1, 1, "c.nrf_tbm_int_mask_t.NRF_TBM_INT_HALFFULL_MASK", "NRF_TBM_INT_HALFFULL_MASK"]], "nrf_tbm_int_pending_get": [[165, 3, 1, "c.nrf_tbm_int_pending_get", "p_reg"]], "nrf_tbm_int_set": [[165, 3, 1, "c.nrf_tbm_int_set", "mask"], [165, 3, 1, "c.nrf_tbm_int_set", "p_reg"]], "nrf_tbm_task_t": [[165, 1, 1, "c.nrf_tbm_task_t.NRF_TBM_TASK_FLUSH", "NRF_TBM_TASK_FLUSH"], [165, 1, 1, "c.nrf_tbm_task_t.NRF_TBM_TASK_START", "NRF_TBM_TASK_START"], [165, 1, 1, "c.nrf_tbm_task_t.NRF_TBM_TASK_STOP", "NRF_TBM_TASK_STOP"]], "nrf_tbm_task_trigger": [[165, 3, 1, "c.nrf_tbm_task_trigger", "p_reg"], [165, 3, 1, "c.nrf_tbm_task_trigger", "task"]], "nrf_tdm_align_t": [[168, 1, 1, "c.nrf_tdm_align_t.NRF_TDM_ALIGN_LEFT", "NRF_TDM_ALIGN_LEFT"], [168, 1, 1, "c.nrf_tdm_align_t.NRF_TDM_ALIGN_RIGHT", "NRF_TDM_ALIGN_RIGHT"]], "nrf_tdm_channel_delay_t": [[168, 1, 1, "c.nrf_tdm_channel_delay_t.NRF_TDM_CHANNEL_DELAY_1CK", "NRF_TDM_CHANNEL_DELAY_1CK"], [168, 1, 1, "c.nrf_tdm_channel_delay_t.NRF_TDM_CHANNEL_DELAY_2CK", "NRF_TDM_CHANNEL_DELAY_2CK"], [168, 1, 1, "c.nrf_tdm_channel_delay_t.NRF_TDM_CHANNEL_DELAY_NONE", "NRF_TDM_CHANNEL_DELAY_NONE"]], "nrf_tdm_channel_mask_t": [[168, 1, 1, "c.nrf_tdm_channel_mask_t.NRF_TDM_CHANNEL_RX0_MASK", "NRF_TDM_CHANNEL_RX0_MASK"], [168, 1, 1, "c.nrf_tdm_channel_mask_t.NRF_TDM_CHANNEL_RX1_MASK", "NRF_TDM_CHANNEL_RX1_MASK"], [168, 1, 1, "c.nrf_tdm_channel_mask_t.NRF_TDM_CHANNEL_RX2_MASK", "NRF_TDM_CHANNEL_RX2_MASK"], [168, 1, 1, "c.nrf_tdm_channel_mask_t.NRF_TDM_CHANNEL_RX3_MASK", "NRF_TDM_CHANNEL_RX3_MASK"], [168, 1, 1, "c.nrf_tdm_channel_mask_t.NRF_TDM_CHANNEL_RX4_MASK", "NRF_TDM_CHANNEL_RX4_MASK"], [168, 1, 1, "c.nrf_tdm_channel_mask_t.NRF_TDM_CHANNEL_RX5_MASK", "NRF_TDM_CHANNEL_RX5_MASK"], [168, 1, 1, "c.nrf_tdm_channel_mask_t.NRF_TDM_CHANNEL_RX6_MASK", "NRF_TDM_CHANNEL_RX6_MASK"], [168, 1, 1, "c.nrf_tdm_channel_mask_t.NRF_TDM_CHANNEL_RX7_MASK", "NRF_TDM_CHANNEL_RX7_MASK"], [168, 1, 1, "c.nrf_tdm_channel_mask_t.NRF_TDM_CHANNEL_TX0_MASK", "NRF_TDM_CHANNEL_TX0_MASK"], [168, 1, 1, "c.nrf_tdm_channel_mask_t.NRF_TDM_CHANNEL_TX1_MASK", "NRF_TDM_CHANNEL_TX1_MASK"], [168, 1, 1, "c.nrf_tdm_channel_mask_t.NRF_TDM_CHANNEL_TX2_MASK", "NRF_TDM_CHANNEL_TX2_MASK"], [168, 1, 1, "c.nrf_tdm_channel_mask_t.NRF_TDM_CHANNEL_TX3_MASK", "NRF_TDM_CHANNEL_TX3_MASK"], [168, 1, 1, "c.nrf_tdm_channel_mask_t.NRF_TDM_CHANNEL_TX4_MASK", "NRF_TDM_CHANNEL_TX4_MASK"], [168, 1, 1, "c.nrf_tdm_channel_mask_t.NRF_TDM_CHANNEL_TX5_MASK", "NRF_TDM_CHANNEL_TX5_MASK"], [168, 1, 1, "c.nrf_tdm_channel_mask_t.NRF_TDM_CHANNEL_TX6_MASK", "NRF_TDM_CHANNEL_TX6_MASK"], [168, 1, 1, "c.nrf_tdm_channel_mask_t.NRF_TDM_CHANNEL_TX7_MASK", "NRF_TDM_CHANNEL_TX7_MASK"]], "nrf_tdm_channels_count_t": [[168, 1, 1, "c.nrf_tdm_channels_count_t.NRF_TDM_CHANNELS_COUNT_1", "NRF_TDM_CHANNELS_COUNT_1"], [168, 1, 1, "c.nrf_tdm_channels_count_t.NRF_TDM_CHANNELS_COUNT_2", "NRF_TDM_CHANNELS_COUNT_2"], [168, 1, 1, "c.nrf_tdm_channels_count_t.NRF_TDM_CHANNELS_COUNT_3", "NRF_TDM_CHANNELS_COUNT_3"], [168, 1, 1, "c.nrf_tdm_channels_count_t.NRF_TDM_CHANNELS_COUNT_4", "NRF_TDM_CHANNELS_COUNT_4"], [168, 1, 1, "c.nrf_tdm_channels_count_t.NRF_TDM_CHANNELS_COUNT_5", "NRF_TDM_CHANNELS_COUNT_5"], [168, 1, 1, "c.nrf_tdm_channels_count_t.NRF_TDM_CHANNELS_COUNT_6", "NRF_TDM_CHANNELS_COUNT_6"], [168, 1, 1, "c.nrf_tdm_channels_count_t.NRF_TDM_CHANNELS_COUNT_7", "NRF_TDM_CHANNELS_COUNT_7"], [168, 1, 1, "c.nrf_tdm_channels_count_t.NRF_TDM_CHANNELS_COUNT_8", "NRF_TDM_CHANNELS_COUNT_8"]], "nrf_tdm_config_t": [[168, 6, 1, "c.nrf_tdm_config_t.alignment", "alignment"], [168, 6, 1, "c.nrf_tdm_config_t.channel_delay", "channel_delay"], [168, 6, 1, "c.nrf_tdm_config_t.channels", "channels"], [168, 6, 1, "c.nrf_tdm_config_t.fsync_duration", "fsync_duration"], [168, 6, 1, "c.nrf_tdm_config_t.fsync_polarity", "fsync_polarity"], [168, 6, 1, "c.nrf_tdm_config_t.mck_setup", "mck_setup"], [168, 6, 1, "c.nrf_tdm_config_t.mode", "mode"], [168, 6, 1, "c.nrf_tdm_config_t.num_of_channels", "num_of_channels"], [168, 6, 1, "c.nrf_tdm_config_t.sample_width", "sample_width"], [168, 6, 1, "c.nrf_tdm_config_t.sck_polarity", "sck_polarity"], [168, 6, 1, "c.nrf_tdm_config_t.sck_setup", "sck_setup"]], "nrf_tdm_configure": [[168, 3, 1, "c.nrf_tdm_configure", "p_config"], [168, 3, 1, "c.nrf_tdm_configure", "p_reg"]], "nrf_tdm_current_rx_transfer_amount_get": [[168, 3, 1, "c.nrf_tdm_current_rx_transfer_amount_get", "p_reg"]], "nrf_tdm_current_tx_transfer_amount_get": [[168, 3, 1, "c.nrf_tdm_current_tx_transfer_amount_get", "p_reg"]], "nrf_tdm_disable": [[168, 3, 1, "c.nrf_tdm_disable", "p_reg"]], "nrf_tdm_enable": [[168, 3, 1, "c.nrf_tdm_enable", "p_reg"]], "nrf_tdm_enable_check": [[168, 3, 1, "c.nrf_tdm_enable_check", "p_reg"]], "nrf_tdm_event_address_get": [[168, 3, 1, "c.nrf_tdm_event_address_get", "event"], [168, 3, 1, "c.nrf_tdm_event_address_get", "p_reg"]], "nrf_tdm_event_check": [[168, 3, 1, "c.nrf_tdm_event_check", "event"], [168, 3, 1, "c.nrf_tdm_event_check", "p_reg"]], "nrf_tdm_event_clear": [[168, 3, 1, "c.nrf_tdm_event_clear", "event"], [168, 3, 1, "c.nrf_tdm_event_clear", "p_reg"]], "nrf_tdm_event_t": [[168, 1, 1, "c.nrf_tdm_event_t.NRF_TDM_EVENT_ABORTED", "NRF_TDM_EVENT_ABORTED"], [168, 1, 1, "c.nrf_tdm_event_t.NRF_TDM_EVENT_MAXCNT", "NRF_TDM_EVENT_MAXCNT"], [168, 1, 1, "c.nrf_tdm_event_t.NRF_TDM_EVENT_RXPTRUPD", "NRF_TDM_EVENT_RXPTRUPD"], [168, 1, 1, "c.nrf_tdm_event_t.NRF_TDM_EVENT_STOPPED", "NRF_TDM_EVENT_STOPPED"], [168, 1, 1, "c.nrf_tdm_event_t.NRF_TDM_EVENT_TXPTRUPD", "NRF_TDM_EVENT_TXPTRUPD"]], "nrf_tdm_fsync_duration_t": [[168, 1, 1, "c.nrf_tdm_fsync_duration_t.NRF_TDM_FSYNC_DURATION_CHANNEL", "NRF_TDM_FSYNC_DURATION_CHANNEL"], [168, 1, 1, "c.nrf_tdm_fsync_duration_t.NRF_TDM_FSYNC_DURATION_SCK", "NRF_TDM_FSYNC_DURATION_SCK"]], "nrf_tdm_fsync_pin_get": [[168, 3, 1, "c.nrf_tdm_fsync_pin_get", "p_reg"]], "nrf_tdm_int_disable": [[168, 3, 1, "c.nrf_tdm_int_disable", "mask"], [168, 3, 1, "c.nrf_tdm_int_disable", "p_reg"]], "nrf_tdm_int_enable": [[168, 3, 1, "c.nrf_tdm_int_enable", "mask"], [168, 3, 1, "c.nrf_tdm_int_enable", "p_reg"]], "nrf_tdm_int_enable_check": [[168, 3, 1, "c.nrf_tdm_int_enable_check", "mask"], [168, 3, 1, "c.nrf_tdm_int_enable_check", "p_reg"]], "nrf_tdm_int_mask_t": [[168, 1, 1, "c.nrf_tdm_int_mask_t.NRF_TDM_INT_ABORTED_MASK", "NRF_TDM_INT_ABORTED_MASK"], [168, 1, 1, "c.nrf_tdm_int_mask_t.NRF_TDM_INT_MAXCNT_MASK", "NRF_TDM_INT_MAXCNT_MASK"], [168, 1, 1, "c.nrf_tdm_int_mask_t.NRF_TDM_INT_RXPTRUPD_MASK_MASK", "NRF_TDM_INT_RXPTRUPD_MASK_MASK"], [168, 1, 1, "c.nrf_tdm_int_mask_t.NRF_TDM_INT_STOPPED_MASK_MASK", "NRF_TDM_INT_STOPPED_MASK_MASK"], [168, 1, 1, "c.nrf_tdm_int_mask_t.NRF_TDM_INT_TXPTRUPD_MASK_MASK", "NRF_TDM_INT_TXPTRUPD_MASK_MASK"]], "nrf_tdm_last_rx_transfer_amount_get": [[168, 3, 1, "c.nrf_tdm_last_rx_transfer_amount_get", "p_reg"]], "nrf_tdm_last_tx_transfer_amount_get": [[168, 3, 1, "c.nrf_tdm_last_tx_transfer_amount_get", "p_reg"]], "nrf_tdm_mck_configure": [[168, 3, 1, "c.nrf_tdm_mck_configure", "clksrc"], [168, 3, 1, "c.nrf_tdm_mck_configure", "enable_bypass"], [168, 3, 1, "c.nrf_tdm_mck_configure", "p_reg"]], "nrf_tdm_mck_div_t": [[168, 1, 1, "c.nrf_tdm_mck_div_t.NRF_TDM_MCK_DIV_10", "NRF_TDM_MCK_DIV_10"], [168, 1, 1, "c.nrf_tdm_mck_div_t.NRF_TDM_MCK_DIV_11", "NRF_TDM_MCK_DIV_11"], [168, 1, 1, "c.nrf_tdm_mck_div_t.NRF_TDM_MCK_DIV_125", "NRF_TDM_MCK_DIV_125"], [168, 1, 1, "c.nrf_tdm_mck_div_t.NRF_TDM_MCK_DIV_15", "NRF_TDM_MCK_DIV_15"], [168, 1, 1, "c.nrf_tdm_mck_div_t.NRF_TDM_MCK_DIV_16", "NRF_TDM_MCK_DIV_16"], [168, 1, 1, "c.nrf_tdm_mck_div_t.NRF_TDM_MCK_DIV_2", "NRF_TDM_MCK_DIV_2"], [168, 1, 1, "c.nrf_tdm_mck_div_t.NRF_TDM_MCK_DIV_21", "NRF_TDM_MCK_DIV_21"], [168, 1, 1, "c.nrf_tdm_mck_div_t.NRF_TDM_MCK_DIV_23", "NRF_TDM_MCK_DIV_23"], [168, 1, 1, "c.nrf_tdm_mck_div_t.NRF_TDM_MCK_DIV_3", "NRF_TDM_MCK_DIV_3"], [168, 1, 1, "c.nrf_tdm_mck_div_t.NRF_TDM_MCK_DIV_30", "NRF_TDM_MCK_DIV_30"], [168, 1, 1, "c.nrf_tdm_mck_div_t.NRF_TDM_MCK_DIV_31", "NRF_TDM_MCK_DIV_31"], [168, 1, 1, "c.nrf_tdm_mck_div_t.NRF_TDM_MCK_DIV_32", "NRF_TDM_MCK_DIV_32"], [168, 1, 1, "c.nrf_tdm_mck_div_t.NRF_TDM_MCK_DIV_4", "NRF_TDM_MCK_DIV_4"], [168, 1, 1, "c.nrf_tdm_mck_div_t.NRF_TDM_MCK_DIV_42", "NRF_TDM_MCK_DIV_42"], [168, 1, 1, "c.nrf_tdm_mck_div_t.NRF_TDM_MCK_DIV_5", "NRF_TDM_MCK_DIV_5"], [168, 1, 1, "c.nrf_tdm_mck_div_t.NRF_TDM_MCK_DIV_6", "NRF_TDM_MCK_DIV_6"], [168, 1, 1, "c.nrf_tdm_mck_div_t.NRF_TDM_MCK_DIV_63", "NRF_TDM_MCK_DIV_63"], [168, 1, 1, "c.nrf_tdm_mck_div_t.NRF_TDM_MCK_DIV_8", "NRF_TDM_MCK_DIV_8"]], "nrf_tdm_mck_pin_get": [[168, 3, 1, "c.nrf_tdm_mck_pin_get", "p_reg"]], "nrf_tdm_mck_set": [[168, 3, 1, "c.nrf_tdm_mck_set", "enable"], [168, 3, 1, "c.nrf_tdm_mck_set", "p_reg"]], "nrf_tdm_mode_t": [[168, 1, 1, "c.nrf_tdm_mode_t.NRF_TDM_MODE_MASTER", "NRF_TDM_MODE_MASTER"], [168, 1, 1, "c.nrf_tdm_mode_t.NRF_TDM_MODE_SLAVE", "NRF_TDM_MODE_SLAVE"]], "nrf_tdm_pins_set": [[168, 3, 1, "c.nrf_tdm_pins_set", "p_pins"], [168, 3, 1, "c.nrf_tdm_pins_set", "p_reg"]], "nrf_tdm_pins_t": [[168, 6, 1, "c.nrf_tdm_pins_t.fsync_pin", "fsync_pin"], [168, 6, 1, "c.nrf_tdm_pins_t.mck_pin", "mck_pin"], [168, 6, 1, "c.nrf_tdm_pins_t.sck_pin", "sck_pin"], [168, 6, 1, "c.nrf_tdm_pins_t.sdin_pin", "sdin_pin"], [168, 6, 1, "c.nrf_tdm_pins_t.sdout_pin", "sdout_pin"]], "nrf_tdm_polarity_t": [[168, 1, 1, "c.nrf_tdm_polarity_t.NRF_TDM_POLARITY_NEGEDGE", "NRF_TDM_POLARITY_NEGEDGE"], [168, 1, 1, "c.nrf_tdm_polarity_t.NRF_TDM_POLARITY_POSEDGE", "NRF_TDM_POLARITY_POSEDGE"]], "nrf_tdm_publish_clear": [[168, 3, 1, "c.nrf_tdm_publish_clear", "event"], [168, 3, 1, "c.nrf_tdm_publish_clear", "p_reg"]], "nrf_tdm_publish_set": [[168, 3, 1, "c.nrf_tdm_publish_set", "channel"], [168, 3, 1, "c.nrf_tdm_publish_set", "event"], [168, 3, 1, "c.nrf_tdm_publish_set", "p_reg"]], "nrf_tdm_rx_buffer_get": [[168, 3, 1, "c.nrf_tdm_rx_buffer_get", "p_reg"]], "nrf_tdm_rx_buffer_set": [[168, 3, 1, "c.nrf_tdm_rx_buffer_set", "p_buffer"], [168, 3, 1, "c.nrf_tdm_rx_buffer_set", "p_reg"]], "nrf_tdm_rx_count_set": [[168, 3, 1, "c.nrf_tdm_rx_count_set", "p_reg"], [168, 3, 1, "c.nrf_tdm_rx_count_set", "size"]], "nrf_tdm_rxtxen_t": [[168, 1, 1, "c.nrf_tdm_rxtxen_t.NRF_TDM_RXTXEN_DUPLEX", "NRF_TDM_RXTXEN_DUPLEX"], [168, 1, 1, "c.nrf_tdm_rxtxen_t.NRF_TDM_RXTXEN_RX", "NRF_TDM_RXTXEN_RX"], [168, 1, 1, "c.nrf_tdm_rxtxen_t.NRF_TDM_RXTXEN_TX", "NRF_TDM_RXTXEN_TX"]], "nrf_tdm_sck_configure": [[168, 3, 1, "c.nrf_tdm_sck_configure", "clksrc"], [168, 3, 1, "c.nrf_tdm_sck_configure", "enable_bypass"], [168, 3, 1, "c.nrf_tdm_sck_configure", "p_reg"]], "nrf_tdm_sck_div_t": [[168, 1, 1, "c.nrf_tdm_sck_div_t.NRF_TDM_SCK_DIV_10", "NRF_TDM_SCK_DIV_10"], [168, 1, 1, "c.nrf_tdm_sck_div_t.NRF_TDM_SCK_DIV_11", "NRF_TDM_SCK_DIV_11"], [168, 1, 1, "c.nrf_tdm_sck_div_t.NRF_TDM_SCK_DIV_125", "NRF_TDM_SCK_DIV_125"], [168, 1, 1, "c.nrf_tdm_sck_div_t.NRF_TDM_SCK_DIV_15", "NRF_TDM_SCK_DIV_15"], [168, 1, 1, "c.nrf_tdm_sck_div_t.NRF_TDM_SCK_DIV_16", "NRF_TDM_SCK_DIV_16"], [168, 1, 1, "c.nrf_tdm_sck_div_t.NRF_TDM_SCK_DIV_2", "NRF_TDM_SCK_DIV_2"], [168, 1, 1, "c.nrf_tdm_sck_div_t.NRF_TDM_SCK_DIV_21", "NRF_TDM_SCK_DIV_21"], [168, 1, 1, "c.nrf_tdm_sck_div_t.NRF_TDM_SCK_DIV_23", "NRF_TDM_SCK_DIV_23"], [168, 1, 1, "c.nrf_tdm_sck_div_t.NRF_TDM_SCK_DIV_3", "NRF_TDM_SCK_DIV_3"], [168, 1, 1, "c.nrf_tdm_sck_div_t.NRF_TDM_SCK_DIV_30", "NRF_TDM_SCK_DIV_30"], [168, 1, 1, "c.nrf_tdm_sck_div_t.NRF_TDM_SCK_DIV_31", "NRF_TDM_SCK_DIV_31"], [168, 1, 1, "c.nrf_tdm_sck_div_t.NRF_TDM_SCK_DIV_32", "NRF_TDM_SCK_DIV_32"], [168, 1, 1, "c.nrf_tdm_sck_div_t.NRF_TDM_SCK_DIV_4", "NRF_TDM_SCK_DIV_4"], [168, 1, 1, "c.nrf_tdm_sck_div_t.NRF_TDM_SCK_DIV_42", "NRF_TDM_SCK_DIV_42"], [168, 1, 1, "c.nrf_tdm_sck_div_t.NRF_TDM_SCK_DIV_5", "NRF_TDM_SCK_DIV_5"], [168, 1, 1, "c.nrf_tdm_sck_div_t.NRF_TDM_SCK_DIV_6", "NRF_TDM_SCK_DIV_6"], [168, 1, 1, "c.nrf_tdm_sck_div_t.NRF_TDM_SCK_DIV_63", "NRF_TDM_SCK_DIV_63"], [168, 1, 1, "c.nrf_tdm_sck_div_t.NRF_TDM_SCK_DIV_8", "NRF_TDM_SCK_DIV_8"]], "nrf_tdm_sck_pin_get": [[168, 3, 1, "c.nrf_tdm_sck_pin_get", "p_reg"]], "nrf_tdm_sdin_pin_get": [[168, 3, 1, "c.nrf_tdm_sdin_pin_get", "p_reg"]], "nrf_tdm_sdout_pin_get": [[168, 3, 1, "c.nrf_tdm_sdout_pin_get", "p_reg"]], "nrf_tdm_src_t": [[168, 1, 1, "c.nrf_tdm_src_t.NRF_TDM_SRC_ACLK", "NRF_TDM_SRC_ACLK"], [168, 1, 1, "c.nrf_tdm_src_t.NRF_TDM_SRC_PCLK32M", "NRF_TDM_SRC_PCLK32M"]], "nrf_tdm_subscribe_clear": [[168, 3, 1, "c.nrf_tdm_subscribe_clear", "p_reg"], [168, 3, 1, "c.nrf_tdm_subscribe_clear", "task"]], "nrf_tdm_subscribe_set": [[168, 3, 1, "c.nrf_tdm_subscribe_set", "channel"], [168, 3, 1, "c.nrf_tdm_subscribe_set", "p_reg"], [168, 3, 1, "c.nrf_tdm_subscribe_set", "task"]], "nrf_tdm_swidth_t": [[168, 1, 1, "c.nrf_tdm_swidth_t.NRF_TDM_SWIDTH_16BIT", "NRF_TDM_SWIDTH_16BIT"], [168, 1, 1, "c.nrf_tdm_swidth_t.NRF_TDM_SWIDTH_16BIT_IN32BIT", "NRF_TDM_SWIDTH_16BIT_IN32BIT"], [168, 1, 1, "c.nrf_tdm_swidth_t.NRF_TDM_SWIDTH_24BIT", "NRF_TDM_SWIDTH_24BIT"], [168, 1, 1, "c.nrf_tdm_swidth_t.NRF_TDM_SWIDTH_24BIT_IN32BIT", "NRF_TDM_SWIDTH_24BIT_IN32BIT"], [168, 1, 1, "c.nrf_tdm_swidth_t.NRF_TDM_SWIDTH_32BIT", "NRF_TDM_SWIDTH_32BIT"], [168, 1, 1, "c.nrf_tdm_swidth_t.NRF_TDM_SWIDTH_8BIT", "NRF_TDM_SWIDTH_8BIT"], [168, 1, 1, "c.nrf_tdm_swidth_t.NRF_TDM_SWIDTH_8BIT_IN16BIT", "NRF_TDM_SWIDTH_8BIT_IN16BIT"], [168, 1, 1, "c.nrf_tdm_swidth_t.NRF_TDM_SWIDTH_8BIT_IN32BIT", "NRF_TDM_SWIDTH_8BIT_IN32BIT"]], "nrf_tdm_task_address_get": [[168, 3, 1, "c.nrf_tdm_task_address_get", "p_reg"], [168, 3, 1, "c.nrf_tdm_task_address_get", "task"]], "nrf_tdm_task_t": [[168, 1, 1, "c.nrf_tdm_task_t.NRF_TDM_TASK_ABORT", "NRF_TDM_TASK_ABORT"], [168, 1, 1, "c.nrf_tdm_task_t.NRF_TDM_TASK_START", "NRF_TDM_TASK_START"], [168, 1, 1, "c.nrf_tdm_task_t.NRF_TDM_TASK_STOP", "NRF_TDM_TASK_STOP"]], "nrf_tdm_task_trigger": [[168, 3, 1, "c.nrf_tdm_task_trigger", "p_reg"], [168, 3, 1, "c.nrf_tdm_task_trigger", "task"]], "nrf_tdm_transfer_direction_set": [[168, 3, 1, "c.nrf_tdm_transfer_direction_set", "dir"], [168, 3, 1, "c.nrf_tdm_transfer_direction_set", "p_reg"]], "nrf_tdm_tx_buffer_get": [[168, 3, 1, "c.nrf_tdm_tx_buffer_get", "p_reg"]], "nrf_tdm_tx_buffer_set": [[168, 3, 1, "c.nrf_tdm_tx_buffer_set", "p_buffer"], [168, 3, 1, "c.nrf_tdm_tx_buffer_set", "p_reg"]], "nrf_tdm_tx_count_set": [[168, 3, 1, "c.nrf_tdm_tx_count_set", "p_reg"], [168, 3, 1, "c.nrf_tdm_tx_count_set", "size"]], "nrf_temp_calibration_coeff_get": [[171, 3, 1, "c.nrf_temp_calibration_coeff_get", "p_reg"]], "nrf_temp_calibration_coeff_set": [[171, 3, 1, "c.nrf_temp_calibration_coeff_set", "coeff"], [171, 3, 1, "c.nrf_temp_calibration_coeff_set", "p_reg"]], "nrf_temp_event_address_get": [[171, 3, 1, "c.nrf_temp_event_address_get", "event"], [171, 3, 1, "c.nrf_temp_event_address_get", "p_reg"]], "nrf_temp_event_check": [[171, 3, 1, "c.nrf_temp_event_check", "event"], [171, 3, 1, "c.nrf_temp_event_check", "p_reg"]], "nrf_temp_event_clear": [[171, 3, 1, "c.nrf_temp_event_clear", "event"], [171, 3, 1, "c.nrf_temp_event_clear", "p_reg"]], "nrf_temp_event_t": [[171, 1, 1, "c.nrf_temp_event_t.NRF_TEMP_EVENT_DATARDY", "NRF_TEMP_EVENT_DATARDY"]], "nrf_temp_int_disable": [[171, 3, 1, "c.nrf_temp_int_disable", "mask"], [171, 3, 1, "c.nrf_temp_int_disable", "p_reg"]], "nrf_temp_int_enable": [[171, 3, 1, "c.nrf_temp_int_enable", "mask"], [171, 3, 1, "c.nrf_temp_int_enable", "p_reg"]], "nrf_temp_int_enable_check": [[171, 3, 1, "c.nrf_temp_int_enable_check", "mask"], [171, 3, 1, "c.nrf_temp_int_enable_check", "p_reg"]], "nrf_temp_int_mask_t": [[171, 1, 1, "c.nrf_temp_int_mask_t.NRF_TEMP_INT_DATARDY_MASK", "NRF_TEMP_INT_DATARDY_MASK"]], "nrf_temp_publish_clear": [[171, 3, 1, "c.nrf_temp_publish_clear", "event"], [171, 3, 1, "c.nrf_temp_publish_clear", "p_reg"]], "nrf_temp_publish_set": [[171, 3, 1, "c.nrf_temp_publish_set", "channel"], [171, 3, 1, "c.nrf_temp_publish_set", "event"], [171, 3, 1, "c.nrf_temp_publish_set", "p_reg"]], "nrf_temp_result_get": [[171, 3, 1, "c.nrf_temp_result_get", "p_reg"]], "nrf_temp_subscribe_clear": [[171, 3, 1, "c.nrf_temp_subscribe_clear", "p_reg"], [171, 3, 1, "c.nrf_temp_subscribe_clear", "task"]], "nrf_temp_subscribe_set": [[171, 3, 1, "c.nrf_temp_subscribe_set", "channel"], [171, 3, 1, "c.nrf_temp_subscribe_set", "p_reg"], [171, 3, 1, "c.nrf_temp_subscribe_set", "task"]], "nrf_temp_task_address_get": [[171, 3, 1, "c.nrf_temp_task_address_get", "p_reg"], [171, 3, 1, "c.nrf_temp_task_address_get", "task"]], "nrf_temp_task_t": [[171, 1, 1, "c.nrf_temp_task_t.NRF_TEMP_TASK_START", "NRF_TEMP_TASK_START"], [171, 1, 1, "c.nrf_temp_task_t.NRF_TEMP_TASK_STOP", "NRF_TEMP_TASK_STOP"]], "nrf_temp_task_trigger": [[171, 3, 1, "c.nrf_temp_task_trigger", "p_reg"], [171, 3, 1, "c.nrf_temp_task_trigger", "task"]], "nrf_timer_bit_width_get": [[175, 3, 1, "c.nrf_timer_bit_width_get", "p_reg"]], "nrf_timer_bit_width_set": [[175, 3, 1, "c.nrf_timer_bit_width_set", "bit_width"], [175, 3, 1, "c.nrf_timer_bit_width_set", "p_reg"]], "nrf_timer_bit_width_t": [[175, 1, 1, "c.nrf_timer_bit_width_t.NRF_TIMER_BIT_WIDTH_16", "NRF_TIMER_BIT_WIDTH_16"], [175, 1, 1, "c.nrf_timer_bit_width_t.NRF_TIMER_BIT_WIDTH_24", "NRF_TIMER_BIT_WIDTH_24"], [175, 1, 1, "c.nrf_timer_bit_width_t.NRF_TIMER_BIT_WIDTH_32", "NRF_TIMER_BIT_WIDTH_32"], [175, 1, 1, "c.nrf_timer_bit_width_t.NRF_TIMER_BIT_WIDTH_8", "NRF_TIMER_BIT_WIDTH_8"]], "nrf_timer_capture_task_get": [[175, 3, 1, "c.nrf_timer_capture_task_get", "channel"]], "nrf_timer_cc_channel_t": [[175, 1, 1, "c.nrf_timer_cc_channel_t.NRF_TIMER_CC_CHANNEL0", "NRF_TIMER_CC_CHANNEL0"], [175, 1, 1, "c.nrf_timer_cc_channel_t.NRF_TIMER_CC_CHANNEL1", "NRF_TIMER_CC_CHANNEL1"], [175, 1, 1, "c.nrf_timer_cc_channel_t.NRF_TIMER_CC_CHANNEL2", "NRF_TIMER_CC_CHANNEL2"], [175, 1, 1, "c.nrf_timer_cc_channel_t.NRF_TIMER_CC_CHANNEL3", "NRF_TIMER_CC_CHANNEL3"], [175, 1, 1, "c.nrf_timer_cc_channel_t.NRF_TIMER_CC_CHANNEL4", "NRF_TIMER_CC_CHANNEL4"], [175, 1, 1, "c.nrf_timer_cc_channel_t.NRF_TIMER_CC_CHANNEL5", "NRF_TIMER_CC_CHANNEL5"], [175, 1, 1, "c.nrf_timer_cc_channel_t.NRF_TIMER_CC_CHANNEL6", "NRF_TIMER_CC_CHANNEL6"], [175, 1, 1, "c.nrf_timer_cc_channel_t.NRF_TIMER_CC_CHANNEL7", "NRF_TIMER_CC_CHANNEL7"]], "nrf_timer_cc_get": [[175, 3, 1, "c.nrf_timer_cc_get", "cc_channel"], [175, 3, 1, "c.nrf_timer_cc_get", "p_reg"]], "nrf_timer_cc_set": [[175, 3, 1, "c.nrf_timer_cc_set", "cc_channel"], [175, 3, 1, "c.nrf_timer_cc_set", "cc_value"], [175, 3, 1, "c.nrf_timer_cc_set", "p_reg"]], "nrf_timer_compare_event_get": [[175, 3, 1, "c.nrf_timer_compare_event_get", "channel"]], "nrf_timer_compare_int_get": [[175, 3, 1, "c.nrf_timer_compare_int_get", "channel"]], "nrf_timer_event_address_get": [[175, 3, 1, "c.nrf_timer_event_address_get", "event"], [175, 3, 1, "c.nrf_timer_event_address_get", "p_reg"]], "nrf_timer_event_check": [[175, 3, 1, "c.nrf_timer_event_check", "event"], [175, 3, 1, "c.nrf_timer_event_check", "p_reg"]], "nrf_timer_event_clear": [[175, 3, 1, "c.nrf_timer_event_clear", "event"], [175, 3, 1, "c.nrf_timer_event_clear", "p_reg"]], "nrf_timer_event_t": [[175, 1, 1, "c.nrf_timer_event_t.NRF_TIMER_EVENT_COMPARE0", "NRF_TIMER_EVENT_COMPARE0"], [175, 1, 1, "c.nrf_timer_event_t.NRF_TIMER_EVENT_COMPARE1", "NRF_TIMER_EVENT_COMPARE1"], [175, 1, 1, "c.nrf_timer_event_t.NRF_TIMER_EVENT_COMPARE2", "NRF_TIMER_EVENT_COMPARE2"], [175, 1, 1, "c.nrf_timer_event_t.NRF_TIMER_EVENT_COMPARE3", "NRF_TIMER_EVENT_COMPARE3"], [175, 1, 1, "c.nrf_timer_event_t.NRF_TIMER_EVENT_COMPARE4", "NRF_TIMER_EVENT_COMPARE4"], [175, 1, 1, "c.nrf_timer_event_t.NRF_TIMER_EVENT_COMPARE5", "NRF_TIMER_EVENT_COMPARE5"], [175, 1, 1, "c.nrf_timer_event_t.NRF_TIMER_EVENT_COMPARE6", "NRF_TIMER_EVENT_COMPARE6"], [175, 1, 1, "c.nrf_timer_event_t.NRF_TIMER_EVENT_COMPARE7", "NRF_TIMER_EVENT_COMPARE7"]], "nrf_timer_frequency_t": [[175, 1, 1, "c.nrf_timer_frequency_t.NRF_TIMER_FREQ_125kHz", "NRF_TIMER_FREQ_125kHz"], [175, 1, 1, "c.nrf_timer_frequency_t.NRF_TIMER_FREQ_16MHz", "NRF_TIMER_FREQ_16MHz"], [175, 1, 1, "c.nrf_timer_frequency_t.NRF_TIMER_FREQ_1MHz", "NRF_TIMER_FREQ_1MHz"], [175, 1, 1, "c.nrf_timer_frequency_t.NRF_TIMER_FREQ_250kHz", "NRF_TIMER_FREQ_250kHz"], [175, 1, 1, "c.nrf_timer_frequency_t.NRF_TIMER_FREQ_2MHz", "NRF_TIMER_FREQ_2MHz"], [175, 1, 1, "c.nrf_timer_frequency_t.NRF_TIMER_FREQ_31250Hz", "NRF_TIMER_FREQ_31250Hz"], [175, 1, 1, "c.nrf_timer_frequency_t.NRF_TIMER_FREQ_4MHz", "NRF_TIMER_FREQ_4MHz"], [175, 1, 1, "c.nrf_timer_frequency_t.NRF_TIMER_FREQ_500kHz", "NRF_TIMER_FREQ_500kHz"], [175, 1, 1, "c.nrf_timer_frequency_t.NRF_TIMER_FREQ_62500Hz", "NRF_TIMER_FREQ_62500Hz"], [175, 1, 1, "c.nrf_timer_frequency_t.NRF_TIMER_FREQ_8MHz", "NRF_TIMER_FREQ_8MHz"]], "nrf_timer_int_disable": [[175, 3, 1, "c.nrf_timer_int_disable", "mask"], [175, 3, 1, "c.nrf_timer_int_disable", "p_reg"]], "nrf_timer_int_enable": [[175, 3, 1, "c.nrf_timer_int_enable", "mask"], [175, 3, 1, "c.nrf_timer_int_enable", "p_reg"]], "nrf_timer_int_enable_check": [[175, 3, 1, "c.nrf_timer_int_enable_check", "mask"], [175, 3, 1, "c.nrf_timer_int_enable_check", "p_reg"]], "nrf_timer_int_mask_t": [[175, 1, 1, "c.nrf_timer_int_mask_t.NRF_TIMER_INT_COMPARE0_MASK", "NRF_TIMER_INT_COMPARE0_MASK"], [175, 1, 1, "c.nrf_timer_int_mask_t.NRF_TIMER_INT_COMPARE1_MASK", "NRF_TIMER_INT_COMPARE1_MASK"], [175, 1, 1, "c.nrf_timer_int_mask_t.NRF_TIMER_INT_COMPARE2_MASK", "NRF_TIMER_INT_COMPARE2_MASK"], [175, 1, 1, "c.nrf_timer_int_mask_t.NRF_TIMER_INT_COMPARE3_MASK", "NRF_TIMER_INT_COMPARE3_MASK"], [175, 1, 1, "c.nrf_timer_int_mask_t.NRF_TIMER_INT_COMPARE4_MASK", "NRF_TIMER_INT_COMPARE4_MASK"], [175, 1, 1, "c.nrf_timer_int_mask_t.NRF_TIMER_INT_COMPARE5_MASK", "NRF_TIMER_INT_COMPARE5_MASK"], [175, 1, 1, "c.nrf_timer_int_mask_t.NRF_TIMER_INT_COMPARE6_MASK", "NRF_TIMER_INT_COMPARE6_MASK"], [175, 1, 1, "c.nrf_timer_int_mask_t.NRF_TIMER_INT_COMPARE7_MASK", "NRF_TIMER_INT_COMPARE7_MASK"]], "nrf_timer_mode_get": [[175, 3, 1, "c.nrf_timer_mode_get", "p_reg"]], "nrf_timer_mode_set": [[175, 3, 1, "c.nrf_timer_mode_set", "mode"], [175, 3, 1, "c.nrf_timer_mode_set", "p_reg"]], "nrf_timer_mode_t": [[175, 1, 1, "c.nrf_timer_mode_t.NRF_TIMER_MODE_COUNTER", "NRF_TIMER_MODE_COUNTER"], [175, 1, 1, "c.nrf_timer_mode_t.NRF_TIMER_MODE_LOW_POWER_COUNTER", "NRF_TIMER_MODE_LOW_POWER_COUNTER"], [175, 1, 1, "c.nrf_timer_mode_t.NRF_TIMER_MODE_TIMER", "NRF_TIMER_MODE_TIMER"]], "nrf_timer_ms_to_ticks": [[175, 3, 1, "c.nrf_timer_ms_to_ticks", "frequency"], [175, 3, 1, "c.nrf_timer_ms_to_ticks", "time_ms"]], "nrf_timer_one_shot_disable": [[175, 3, 1, "c.nrf_timer_one_shot_disable", "cc_channel"], [175, 3, 1, "c.nrf_timer_one_shot_disable", "p_reg"]], "nrf_timer_one_shot_enable": [[175, 3, 1, "c.nrf_timer_one_shot_enable", "cc_channel"], [175, 3, 1, "c.nrf_timer_one_shot_enable", "p_reg"]], "nrf_timer_prescaler_get": [[175, 3, 1, "c.nrf_timer_prescaler_get", "p_reg"]], "nrf_timer_prescaler_set": [[175, 3, 1, "c.nrf_timer_prescaler_set", "p_reg"], [175, 3, 1, "c.nrf_timer_prescaler_set", "prescaler_factor"]], "nrf_timer_publish_clear": [[175, 3, 1, "c.nrf_timer_publish_clear", "event"], [175, 3, 1, "c.nrf_timer_publish_clear", "p_reg"]], "nrf_timer_publish_set": [[175, 3, 1, "c.nrf_timer_publish_set", "channel"], [175, 3, 1, "c.nrf_timer_publish_set", "event"], [175, 3, 1, "c.nrf_timer_publish_set", "p_reg"]], "nrf_timer_short_compare_clear_get": [[175, 3, 1, "c.nrf_timer_short_compare_clear_get", "channel"]], "nrf_timer_short_compare_stop_get": [[175, 3, 1, "c.nrf_timer_short_compare_stop_get", "channel"]], "nrf_timer_short_mask_t": [[175, 1, 1, "c.nrf_timer_short_mask_t.NRF_TIMER_SHORT_COMPARE0_CLEAR_MASK", "NRF_TIMER_SHORT_COMPARE0_CLEAR_MASK"], [175, 1, 1, "c.nrf_timer_short_mask_t.NRF_TIMER_SHORT_COMPARE0_STOP_MASK", "NRF_TIMER_SHORT_COMPARE0_STOP_MASK"], [175, 1, 1, "c.nrf_timer_short_mask_t.NRF_TIMER_SHORT_COMPARE1_CLEAR_MASK", "NRF_TIMER_SHORT_COMPARE1_CLEAR_MASK"], [175, 1, 1, "c.nrf_timer_short_mask_t.NRF_TIMER_SHORT_COMPARE1_STOP_MASK", "NRF_TIMER_SHORT_COMPARE1_STOP_MASK"], [175, 1, 1, "c.nrf_timer_short_mask_t.NRF_TIMER_SHORT_COMPARE2_CLEAR_MASK", "NRF_TIMER_SHORT_COMPARE2_CLEAR_MASK"], [175, 1, 1, "c.nrf_timer_short_mask_t.NRF_TIMER_SHORT_COMPARE2_STOP_MASK", "NRF_TIMER_SHORT_COMPARE2_STOP_MASK"], [175, 1, 1, "c.nrf_timer_short_mask_t.NRF_TIMER_SHORT_COMPARE3_CLEAR_MASK", "NRF_TIMER_SHORT_COMPARE3_CLEAR_MASK"], [175, 1, 1, "c.nrf_timer_short_mask_t.NRF_TIMER_SHORT_COMPARE3_STOP_MASK", "NRF_TIMER_SHORT_COMPARE3_STOP_MASK"], [175, 1, 1, "c.nrf_timer_short_mask_t.NRF_TIMER_SHORT_COMPARE4_CLEAR_MASK", "NRF_TIMER_SHORT_COMPARE4_CLEAR_MASK"], [175, 1, 1, "c.nrf_timer_short_mask_t.NRF_TIMER_SHORT_COMPARE4_STOP_MASK", "NRF_TIMER_SHORT_COMPARE4_STOP_MASK"], [175, 1, 1, "c.nrf_timer_short_mask_t.NRF_TIMER_SHORT_COMPARE5_CLEAR_MASK", "NRF_TIMER_SHORT_COMPARE5_CLEAR_MASK"], [175, 1, 1, "c.nrf_timer_short_mask_t.NRF_TIMER_SHORT_COMPARE5_STOP_MASK", "NRF_TIMER_SHORT_COMPARE5_STOP_MASK"], [175, 1, 1, "c.nrf_timer_short_mask_t.NRF_TIMER_SHORT_COMPARE6_CLEAR_MASK", "NRF_TIMER_SHORT_COMPARE6_CLEAR_MASK"], [175, 1, 1, "c.nrf_timer_short_mask_t.NRF_TIMER_SHORT_COMPARE6_STOP_MASK", "NRF_TIMER_SHORT_COMPARE6_STOP_MASK"], [175, 1, 1, "c.nrf_timer_short_mask_t.NRF_TIMER_SHORT_COMPARE7_CLEAR_MASK", "NRF_TIMER_SHORT_COMPARE7_CLEAR_MASK"], [175, 1, 1, "c.nrf_timer_short_mask_t.NRF_TIMER_SHORT_COMPARE7_STOP_MASK", "NRF_TIMER_SHORT_COMPARE7_STOP_MASK"]], "nrf_timer_shorts_disable": [[175, 3, 1, "c.nrf_timer_shorts_disable", "mask"], [175, 3, 1, "c.nrf_timer_shorts_disable", "p_reg"]], "nrf_timer_shorts_enable": [[175, 3, 1, "c.nrf_timer_shorts_enable", "mask"], [175, 3, 1, "c.nrf_timer_shorts_enable", "p_reg"]], "nrf_timer_shorts_set": [[175, 3, 1, "c.nrf_timer_shorts_set", "mask"], [175, 3, 1, "c.nrf_timer_shorts_set", "p_reg"]], "nrf_timer_subscribe_clear": [[175, 3, 1, "c.nrf_timer_subscribe_clear", "p_reg"], [175, 3, 1, "c.nrf_timer_subscribe_clear", "task"]], "nrf_timer_subscribe_set": [[175, 3, 1, "c.nrf_timer_subscribe_set", "channel"], [175, 3, 1, "c.nrf_timer_subscribe_set", "p_reg"], [175, 3, 1, "c.nrf_timer_subscribe_set", "task"]], "nrf_timer_task_address_get": [[175, 3, 1, "c.nrf_timer_task_address_get", "p_reg"], [175, 3, 1, "c.nrf_timer_task_address_get", "task"]], "nrf_timer_task_t": [[175, 1, 1, "c.nrf_timer_task_t.NRF_TIMER_TASK_CAPTURE0", "NRF_TIMER_TASK_CAPTURE0"], [175, 1, 1, "c.nrf_timer_task_t.NRF_TIMER_TASK_CAPTURE1", "NRF_TIMER_TASK_CAPTURE1"], [175, 1, 1, "c.nrf_timer_task_t.NRF_TIMER_TASK_CAPTURE2", "NRF_TIMER_TASK_CAPTURE2"], [175, 1, 1, "c.nrf_timer_task_t.NRF_TIMER_TASK_CAPTURE3", "NRF_TIMER_TASK_CAPTURE3"], [175, 1, 1, "c.nrf_timer_task_t.NRF_TIMER_TASK_CAPTURE4", "NRF_TIMER_TASK_CAPTURE4"], [175, 1, 1, "c.nrf_timer_task_t.NRF_TIMER_TASK_CAPTURE5", "NRF_TIMER_TASK_CAPTURE5"], [175, 1, 1, "c.nrf_timer_task_t.NRF_TIMER_TASK_CAPTURE6", "NRF_TIMER_TASK_CAPTURE6"], [175, 1, 1, "c.nrf_timer_task_t.NRF_TIMER_TASK_CAPTURE7", "NRF_TIMER_TASK_CAPTURE7"], [175, 1, 1, "c.nrf_timer_task_t.NRF_TIMER_TASK_CLEAR", "NRF_TIMER_TASK_CLEAR"], [175, 1, 1, "c.nrf_timer_task_t.NRF_TIMER_TASK_COUNT", "NRF_TIMER_TASK_COUNT"], [175, 1, 1, "c.nrf_timer_task_t.NRF_TIMER_TASK_SHUTDOWN", "NRF_TIMER_TASK_SHUTDOWN"], [175, 1, 1, "c.nrf_timer_task_t.NRF_TIMER_TASK_START", "NRF_TIMER_TASK_START"], [175, 1, 1, "c.nrf_timer_task_t.NRF_TIMER_TASK_STOP", "NRF_TIMER_TASK_STOP"]], "nrf_timer_task_trigger": [[175, 3, 1, "c.nrf_timer_task_trigger", "p_reg"], [175, 3, 1, "c.nrf_timer_task_trigger", "task"]], "nrf_timer_us_to_ticks": [[175, 3, 1, "c.nrf_timer_us_to_ticks", "frequency"], [175, 3, 1, "c.nrf_timer_us_to_ticks", "time_us"]], "nrf_twi_address_set": [[179, 3, 1, "c.nrf_twi_address_set", "address"], [179, 3, 1, "c.nrf_twi_address_set", "p_reg"]], "nrf_twi_disable": [[179, 3, 1, "c.nrf_twi_disable", "p_reg"]], "nrf_twi_enable": [[179, 3, 1, "c.nrf_twi_enable", "p_reg"]], "nrf_twi_error_t": [[179, 1, 1, "c.nrf_twi_error_t.NRF_TWI_ERROR_ADDRESS_NACK", "NRF_TWI_ERROR_ADDRESS_NACK"], [179, 1, 1, "c.nrf_twi_error_t.NRF_TWI_ERROR_DATA_NACK", "NRF_TWI_ERROR_DATA_NACK"], [179, 1, 1, "c.nrf_twi_error_t.NRF_TWI_ERROR_OVERRUN", "NRF_TWI_ERROR_OVERRUN"]], "nrf_twi_errorsrc_get_and_clear": [[179, 3, 1, "c.nrf_twi_errorsrc_get_and_clear", "p_reg"]], "nrf_twi_event_address_get": [[179, 3, 1, "c.nrf_twi_event_address_get", "event"], [179, 3, 1, "c.nrf_twi_event_address_get", "p_reg"]], "nrf_twi_event_check": [[179, 3, 1, "c.nrf_twi_event_check", "event"], [179, 3, 1, "c.nrf_twi_event_check", "p_reg"]], "nrf_twi_event_clear": [[179, 3, 1, "c.nrf_twi_event_clear", "event"], [179, 3, 1, "c.nrf_twi_event_clear", "p_reg"]], "nrf_twi_event_t": [[179, 1, 1, "c.nrf_twi_event_t.NRF_TWI_EVENT_BB", "NRF_TWI_EVENT_BB"], [179, 1, 1, "c.nrf_twi_event_t.NRF_TWI_EVENT_ERROR", "NRF_TWI_EVENT_ERROR"], [179, 1, 1, "c.nrf_twi_event_t.NRF_TWI_EVENT_RXDREADY", "NRF_TWI_EVENT_RXDREADY"], [179, 1, 1, "c.nrf_twi_event_t.NRF_TWI_EVENT_STOPPED", "NRF_TWI_EVENT_STOPPED"], [179, 1, 1, "c.nrf_twi_event_t.NRF_TWI_EVENT_SUSPENDED", "NRF_TWI_EVENT_SUSPENDED"], [179, 1, 1, "c.nrf_twi_event_t.NRF_TWI_EVENT_TXDSENT", "NRF_TWI_EVENT_TXDSENT"]], "nrf_twi_frequency_set": [[179, 3, 1, "c.nrf_twi_frequency_set", "frequency"], [179, 3, 1, "c.nrf_twi_frequency_set", "p_reg"]], "nrf_twi_frequency_t": [[179, 1, 1, "c.nrf_twi_frequency_t.NRF_TWI_FREQ_100K", "NRF_TWI_FREQ_100K"], [179, 1, 1, "c.nrf_twi_frequency_t.NRF_TWI_FREQ_250K", "NRF_TWI_FREQ_250K"], [179, 1, 1, "c.nrf_twi_frequency_t.NRF_TWI_FREQ_400K", "NRF_TWI_FREQ_400K"]], "nrf_twi_int_disable": [[179, 3, 1, "c.nrf_twi_int_disable", "mask"], [179, 3, 1, "c.nrf_twi_int_disable", "p_reg"]], "nrf_twi_int_enable": [[179, 3, 1, "c.nrf_twi_int_enable", "mask"], [179, 3, 1, "c.nrf_twi_int_enable", "p_reg"]], "nrf_twi_int_enable_check": [[179, 3, 1, "c.nrf_twi_int_enable_check", "mask"], [179, 3, 1, "c.nrf_twi_int_enable_check", "p_reg"]], "nrf_twi_int_mask_t": [[179, 1, 1, "c.nrf_twi_int_mask_t.NRF_TWI_ALL_INTS_MASK", "NRF_TWI_ALL_INTS_MASK"], [179, 1, 1, "c.nrf_twi_int_mask_t.NRF_TWI_INT_BB_MASK", "NRF_TWI_INT_BB_MASK"], [179, 1, 1, "c.nrf_twi_int_mask_t.NRF_TWI_INT_ERROR_MASK", "NRF_TWI_INT_ERROR_MASK"], [179, 1, 1, "c.nrf_twi_int_mask_t.NRF_TWI_INT_RXDREADY_MASK", "NRF_TWI_INT_RXDREADY_MASK"], [179, 1, 1, "c.nrf_twi_int_mask_t.NRF_TWI_INT_STOPPED_MASK", "NRF_TWI_INT_STOPPED_MASK"], [179, 1, 1, "c.nrf_twi_int_mask_t.NRF_TWI_INT_SUSPENDED_MASK", "NRF_TWI_INT_SUSPENDED_MASK"], [179, 1, 1, "c.nrf_twi_int_mask_t.NRF_TWI_INT_TXDSENT_MASK", "NRF_TWI_INT_TXDSENT_MASK"]], "nrf_twi_pins_set": [[179, 3, 1, "c.nrf_twi_pins_set", "p_reg"], [179, 3, 1, "c.nrf_twi_pins_set", "scl_pin"], [179, 3, 1, "c.nrf_twi_pins_set", "sda_pin"]], "nrf_twi_rxd_get": [[179, 3, 1, "c.nrf_twi_rxd_get", "p_reg"]], "nrf_twi_scl_pin_get": [[179, 3, 1, "c.nrf_twi_scl_pin_get", "p_reg"]], "nrf_twi_sda_pin_get": [[179, 3, 1, "c.nrf_twi_sda_pin_get", "p_reg"]], "nrf_twi_short_mask_t": [[179, 1, 1, "c.nrf_twi_short_mask_t.NRF_TWI_ALL_SHORTS_MASK", "NRF_TWI_ALL_SHORTS_MASK"], [179, 1, 1, "c.nrf_twi_short_mask_t.NRF_TWI_SHORT_BB_STOP_MASK", "NRF_TWI_SHORT_BB_STOP_MASK"], [179, 1, 1, "c.nrf_twi_short_mask_t.NRF_TWI_SHORT_BB_SUSPEND_MASK", "NRF_TWI_SHORT_BB_SUSPEND_MASK"]], "nrf_twi_shorts_disable": [[179, 3, 1, "c.nrf_twi_shorts_disable", "mask"], [179, 3, 1, "c.nrf_twi_shorts_disable", "p_reg"]], "nrf_twi_shorts_enable": [[179, 3, 1, "c.nrf_twi_shorts_enable", "mask"], [179, 3, 1, "c.nrf_twi_shorts_enable", "p_reg"]], "nrf_twi_shorts_set": [[179, 3, 1, "c.nrf_twi_shorts_set", "mask"], [179, 3, 1, "c.nrf_twi_shorts_set", "p_reg"]], "nrf_twi_task_address_get": [[179, 3, 1, "c.nrf_twi_task_address_get", "p_reg"], [179, 3, 1, "c.nrf_twi_task_address_get", "task"]], "nrf_twi_task_t": [[179, 1, 1, "c.nrf_twi_task_t.NRF_TWI_TASK_RESUME", "NRF_TWI_TASK_RESUME"], [179, 1, 1, "c.nrf_twi_task_t.NRF_TWI_TASK_STARTRX", "NRF_TWI_TASK_STARTRX"], [179, 1, 1, "c.nrf_twi_task_t.NRF_TWI_TASK_STARTTX", "NRF_TWI_TASK_STARTTX"], [179, 1, 1, "c.nrf_twi_task_t.NRF_TWI_TASK_STOP", "NRF_TWI_TASK_STOP"], [179, 1, 1, "c.nrf_twi_task_t.NRF_TWI_TASK_SUSPEND", "NRF_TWI_TASK_SUSPEND"]], "nrf_twi_task_trigger": [[179, 3, 1, "c.nrf_twi_task_trigger", "p_reg"], [179, 3, 1, "c.nrf_twi_task_trigger", "task"]], "nrf_twi_txd_set": [[179, 3, 1, "c.nrf_twi_txd_set", "data"], [179, 3, 1, "c.nrf_twi_txd_set", "p_reg"]], "nrf_twim_address_get": [[182, 3, 1, "c.nrf_twim_address_get", "p_reg"]], "nrf_twim_address_set": [[182, 3, 1, "c.nrf_twim_address_set", "address"], [182, 3, 1, "c.nrf_twim_address_set", "p_reg"]], "nrf_twim_disable": [[182, 3, 1, "c.nrf_twim_disable", "p_reg"]], "nrf_twim_enable": [[182, 3, 1, "c.nrf_twim_enable", "p_reg"]], "nrf_twim_error_t": [[182, 1, 1, "c.nrf_twim_error_t.NRF_TWIM_ERROR_ADDRESS_NACK", "NRF_TWIM_ERROR_ADDRESS_NACK"], [182, 1, 1, "c.nrf_twim_error_t.NRF_TWIM_ERROR_DATA_NACK", "NRF_TWIM_ERROR_DATA_NACK"], [182, 1, 1, "c.nrf_twim_error_t.NRF_TWIM_ERROR_OVERRUN", "NRF_TWIM_ERROR_OVERRUN"]], "nrf_twim_errorsrc_get_and_clear": [[182, 3, 1, "c.nrf_twim_errorsrc_get_and_clear", "p_reg"]], "nrf_twim_event_address_get": [[182, 3, 1, "c.nrf_twim_event_address_get", "event"], [182, 3, 1, "c.nrf_twim_event_address_get", "p_reg"]], "nrf_twim_event_check": [[182, 3, 1, "c.nrf_twim_event_check", "event"], [182, 3, 1, "c.nrf_twim_event_check", "p_reg"]], "nrf_twim_event_clear": [[182, 3, 1, "c.nrf_twim_event_clear", "event"], [182, 3, 1, "c.nrf_twim_event_clear", "p_reg"]], "nrf_twim_event_t": [[182, 1, 1, "c.nrf_twim_event_t.NRF_TWIM_EVENT_ENDRX", "NRF_TWIM_EVENT_ENDRX"], [182, 1, 1, "c.nrf_twim_event_t.NRF_TWIM_EVENT_ENDTX", "NRF_TWIM_EVENT_ENDTX"], [182, 1, 1, "c.nrf_twim_event_t.NRF_TWIM_EVENT_ERROR", "NRF_TWIM_EVENT_ERROR"], [182, 1, 1, "c.nrf_twim_event_t.NRF_TWIM_EVENT_LASTRX", "NRF_TWIM_EVENT_LASTRX"], [182, 1, 1, "c.nrf_twim_event_t.NRF_TWIM_EVENT_LASTTX", "NRF_TWIM_EVENT_LASTTX"], [182, 1, 1, "c.nrf_twim_event_t.NRF_TWIM_EVENT_RXBUSERROR", "NRF_TWIM_EVENT_RXBUSERROR"], [182, 1, 1, "c.nrf_twim_event_t.NRF_TWIM_EVENT_RXMATCH0", "NRF_TWIM_EVENT_RXMATCH0"], [182, 1, 1, "c.nrf_twim_event_t.NRF_TWIM_EVENT_RXMATCH1", "NRF_TWIM_EVENT_RXMATCH1"], [182, 1, 1, "c.nrf_twim_event_t.NRF_TWIM_EVENT_RXMATCH2", "NRF_TWIM_EVENT_RXMATCH2"], [182, 1, 1, "c.nrf_twim_event_t.NRF_TWIM_EVENT_RXMATCH3", "NRF_TWIM_EVENT_RXMATCH3"], [182, 1, 1, "c.nrf_twim_event_t.NRF_TWIM_EVENT_RXSTARTED", "NRF_TWIM_EVENT_RXSTARTED"], [182, 1, 1, "c.nrf_twim_event_t.NRF_TWIM_EVENT_STOPPED", "NRF_TWIM_EVENT_STOPPED"], [182, 1, 1, "c.nrf_twim_event_t.NRF_TWIM_EVENT_SUSPENDED", "NRF_TWIM_EVENT_SUSPENDED"], [182, 1, 1, "c.nrf_twim_event_t.NRF_TWIM_EVENT_TXBUSERROR", "NRF_TWIM_EVENT_TXBUSERROR"], [182, 1, 1, "c.nrf_twim_event_t.NRF_TWIM_EVENT_TXSTARTED", "NRF_TWIM_EVENT_TXSTARTED"]], "nrf_twim_frequency_set": [[182, 3, 1, "c.nrf_twim_frequency_set", "frequency"], [182, 3, 1, "c.nrf_twim_frequency_set", "p_reg"]], "nrf_twim_frequency_t": [[182, 1, 1, "c.nrf_twim_frequency_t.NRF_TWIM_FREQ_1000K", "NRF_TWIM_FREQ_1000K"], [182, 1, 1, "c.nrf_twim_frequency_t.NRF_TWIM_FREQ_100K", "NRF_TWIM_FREQ_100K"], [182, 1, 1, "c.nrf_twim_frequency_t.NRF_TWIM_FREQ_250K", "NRF_TWIM_FREQ_250K"], [182, 1, 1, "c.nrf_twim_frequency_t.NRF_TWIM_FREQ_400K", "NRF_TWIM_FREQ_400K"]], "nrf_twim_int_disable": [[182, 3, 1, "c.nrf_twim_int_disable", "mask"], [182, 3, 1, "c.nrf_twim_int_disable", "p_reg"]], "nrf_twim_int_enable": [[182, 3, 1, "c.nrf_twim_int_enable", "mask"], [182, 3, 1, "c.nrf_twim_int_enable", "p_reg"]], "nrf_twim_int_enable_check": [[182, 3, 1, "c.nrf_twim_int_enable_check", "mask"], [182, 3, 1, "c.nrf_twim_int_enable_check", "p_reg"]], "nrf_twim_int_mask_t": [[182, 1, 1, "c.nrf_twim_int_mask_t.NRF_TWIM_ALL_INTS_MASK", "NRF_TWIM_ALL_INTS_MASK"], [182, 1, 1, "c.nrf_twim_int_mask_t.NRF_TWIM_INT_ENDRX_MASK", "NRF_TWIM_INT_ENDRX_MASK"], [182, 1, 1, "c.nrf_twim_int_mask_t.NRF_TWIM_INT_ENDTX_MASK", "NRF_TWIM_INT_ENDTX_MASK"], [182, 1, 1, "c.nrf_twim_int_mask_t.NRF_TWIM_INT_ERROR_MASK", "NRF_TWIM_INT_ERROR_MASK"], [182, 1, 1, "c.nrf_twim_int_mask_t.NRF_TWIM_INT_LASTRX_MASK", "NRF_TWIM_INT_LASTRX_MASK"], [182, 1, 1, "c.nrf_twim_int_mask_t.NRF_TWIM_INT_LASTTX_MASK", "NRF_TWIM_INT_LASTTX_MASK"], [182, 1, 1, "c.nrf_twim_int_mask_t.NRF_TWIM_INT_RXBUSERROR_MASK", "NRF_TWIM_INT_RXBUSERROR_MASK"], [182, 1, 1, "c.nrf_twim_int_mask_t.NRF_TWIM_INT_RXMATCH0_MASK", "NRF_TWIM_INT_RXMATCH0_MASK"], [182, 1, 1, "c.nrf_twim_int_mask_t.NRF_TWIM_INT_RXMATCH1_MASK", "NRF_TWIM_INT_RXMATCH1_MASK"], [182, 1, 1, "c.nrf_twim_int_mask_t.NRF_TWIM_INT_RXMATCH2_MASK", "NRF_TWIM_INT_RXMATCH2_MASK"], [182, 1, 1, "c.nrf_twim_int_mask_t.NRF_TWIM_INT_RXMATCH3_MASK", "NRF_TWIM_INT_RXMATCH3_MASK"], [182, 1, 1, "c.nrf_twim_int_mask_t.NRF_TWIM_INT_RXREADY_MASK", "NRF_TWIM_INT_RXREADY_MASK"], [182, 1, 1, "c.nrf_twim_int_mask_t.NRF_TWIM_INT_RXSTARTED_MASK", "NRF_TWIM_INT_RXSTARTED_MASK"], [182, 1, 1, "c.nrf_twim_int_mask_t.NRF_TWIM_INT_STOPPED_MASK", "NRF_TWIM_INT_STOPPED_MASK"], [182, 1, 1, "c.nrf_twim_int_mask_t.NRF_TWIM_INT_SUSPENDED_MASK", "NRF_TWIM_INT_SUSPENDED_MASK"], [182, 1, 1, "c.nrf_twim_int_mask_t.NRF_TWIM_INT_TXBUSERROR_MASK", "NRF_TWIM_INT_TXBUSERROR_MASK"], [182, 1, 1, "c.nrf_twim_int_mask_t.NRF_TWIM_INT_TXREADY_MASK", "NRF_TWIM_INT_TXREADY_MASK"], [182, 1, 1, "c.nrf_twim_int_mask_t.NRF_TWIM_INT_TXSTARTED_MASK", "NRF_TWIM_INT_TXSTARTED_MASK"]], "nrf_twim_pins_set": [[182, 3, 1, "c.nrf_twim_pins_set", "p_reg"], [182, 3, 1, "c.nrf_twim_pins_set", "scl_pin"], [182, 3, 1, "c.nrf_twim_pins_set", "sda_pin"]], "nrf_twim_publish_clear": [[182, 3, 1, "c.nrf_twim_publish_clear", "event"], [182, 3, 1, "c.nrf_twim_publish_clear", "p_reg"]], "nrf_twim_publish_set": [[182, 3, 1, "c.nrf_twim_publish_set", "channel"], [182, 3, 1, "c.nrf_twim_publish_set", "event"], [182, 3, 1, "c.nrf_twim_publish_set", "p_reg"]], "nrf_twim_rx_buffer_set": [[182, 3, 1, "c.nrf_twim_rx_buffer_set", "length"], [182, 3, 1, "c.nrf_twim_rx_buffer_set", "p_buffer"], [182, 3, 1, "c.nrf_twim_rx_buffer_set", "p_reg"]], "nrf_twim_rx_list_disable": [[182, 3, 1, "c.nrf_twim_rx_list_disable", "p_reg"]], "nrf_twim_rx_list_enable": [[182, 3, 1, "c.nrf_twim_rx_list_enable", "p_reg"]], "nrf_twim_rx_pattern_match_candidate_get": [[182, 3, 1, "c.nrf_twim_rx_pattern_match_candidate_get", "index"], [182, 3, 1, "c.nrf_twim_rx_pattern_match_candidate_get", "p_reg"]], "nrf_twim_rx_pattern_match_candidate_set": [[182, 3, 1, "c.nrf_twim_rx_pattern_match_candidate_set", "index"], [182, 3, 1, "c.nrf_twim_rx_pattern_match_candidate_set", "p_reg"], [182, 3, 1, "c.nrf_twim_rx_pattern_match_candidate_set", "pattern"]], "nrf_twim_rx_pattern_match_enable_check": [[182, 3, 1, "c.nrf_twim_rx_pattern_match_enable_check", "index"], [182, 3, 1, "c.nrf_twim_rx_pattern_match_enable_check", "p_reg"]], "nrf_twim_rx_pattern_match_enable_set": [[182, 3, 1, "c.nrf_twim_rx_pattern_match_enable_set", "enable"], [182, 3, 1, "c.nrf_twim_rx_pattern_match_enable_set", "index"], [182, 3, 1, "c.nrf_twim_rx_pattern_match_enable_set", "p_reg"]], "nrf_twim_rx_pattern_match_one_shot_check": [[182, 3, 1, "c.nrf_twim_rx_pattern_match_one_shot_check", "index"], [182, 3, 1, "c.nrf_twim_rx_pattern_match_one_shot_check", "p_reg"]], "nrf_twim_rx_pattern_match_one_shot_disable": [[182, 3, 1, "c.nrf_twim_rx_pattern_match_one_shot_disable", "index"], [182, 3, 1, "c.nrf_twim_rx_pattern_match_one_shot_disable", "p_reg"]], "nrf_twim_rx_pattern_match_one_shot_enable": [[182, 3, 1, "c.nrf_twim_rx_pattern_match_one_shot_enable", "index"], [182, 3, 1, "c.nrf_twim_rx_pattern_match_one_shot_enable", "p_reg"]], "nrf_twim_rx_terminate_on_bus_error_check": [[182, 3, 1, "c.nrf_twim_rx_terminate_on_bus_error_check", "p_reg"]], "nrf_twim_rx_terminate_on_bus_error_enable_set": [[182, 3, 1, "c.nrf_twim_rx_terminate_on_bus_error_enable_set", "enable"], [182, 3, 1, "c.nrf_twim_rx_terminate_on_bus_error_enable_set", "p_reg"]], "nrf_twim_rxd_amount_get": [[182, 3, 1, "c.nrf_twim_rxd_amount_get", "p_reg"]], "nrf_twim_rxd_curr_amount_get": [[182, 3, 1, "c.nrf_twim_rxd_curr_amount_get", "p_reg"]], "nrf_twim_scl_pin_get": [[182, 3, 1, "c.nrf_twim_scl_pin_get", "p_reg"]], "nrf_twim_sda_pin_get": [[182, 3, 1, "c.nrf_twim_sda_pin_get", "p_reg"]], "nrf_twim_short_mask_t": [[182, 1, 1, "c.nrf_twim_short_mask_t.NRF_TWIM_ALL_SHORTS_MASK", "NRF_TWIM_ALL_SHORTS_MASK"], [182, 1, 1, "c.nrf_twim_short_mask_t.NRF_TWIM_SHORT_LASTRX_STARTTX_MASK", "NRF_TWIM_SHORT_LASTRX_STARTTX_MASK"], [182, 1, 1, "c.nrf_twim_short_mask_t.NRF_TWIM_SHORT_LASTRX_STOP_MASK", "NRF_TWIM_SHORT_LASTRX_STOP_MASK"], [182, 1, 1, "c.nrf_twim_short_mask_t.NRF_TWIM_SHORT_LASTTX_STARTRX_MASK", "NRF_TWIM_SHORT_LASTTX_STARTRX_MASK"], [182, 1, 1, "c.nrf_twim_short_mask_t.NRF_TWIM_SHORT_LASTTX_STOP_MASK", "NRF_TWIM_SHORT_LASTTX_STOP_MASK"], [182, 1, 1, "c.nrf_twim_short_mask_t.NRF_TWIM_SHORT_LASTTX_SUSPEND_MASK", "NRF_TWIM_SHORT_LASTTX_SUSPEND_MASK"], [182, 1, 1, "c.nrf_twim_short_mask_t.NRF_TWIM_SHORT_RXMATCH0_DISABLERXMATCH0_MASK", "NRF_TWIM_SHORT_RXMATCH0_DISABLERXMATCH0_MASK"], [182, 1, 1, "c.nrf_twim_short_mask_t.NRF_TWIM_SHORT_RXMATCH0_ENABLERXMATCH1_MASK", "NRF_TWIM_SHORT_RXMATCH0_ENABLERXMATCH1_MASK"], [182, 1, 1, "c.nrf_twim_short_mask_t.NRF_TWIM_SHORT_RXMATCH1_DISABLERXMATCH1_MASK", "NRF_TWIM_SHORT_RXMATCH1_DISABLERXMATCH1_MASK"], [182, 1, 1, "c.nrf_twim_short_mask_t.NRF_TWIM_SHORT_RXMATCH1_ENABLERXMATCH2_MASK", "NRF_TWIM_SHORT_RXMATCH1_ENABLERXMATCH2_MASK"], [182, 1, 1, "c.nrf_twim_short_mask_t.NRF_TWIM_SHORT_RXMATCH2_DISABLERXMATCH2_MASK", "NRF_TWIM_SHORT_RXMATCH2_DISABLERXMATCH2_MASK"], [182, 1, 1, "c.nrf_twim_short_mask_t.NRF_TWIM_SHORT_RXMATCH2_ENABLERXMATCH3_MASK", "NRF_TWIM_SHORT_RXMATCH2_ENABLERXMATCH3_MASK"], [182, 1, 1, "c.nrf_twim_short_mask_t.NRF_TWIM_SHORT_RXMATCH3_DISABLERXMATCH3_MASK", "NRF_TWIM_SHORT_RXMATCH3_DISABLERXMATCH3_MASK"], [182, 1, 1, "c.nrf_twim_short_mask_t.NRF_TWIM_SHORT_RXMATCH3_ENABLERXMATCH0_MASK", "NRF_TWIM_SHORT_RXMATCH3_ENABLERXMATCH0_MASK"]], "nrf_twim_shorts_disable": [[182, 3, 1, "c.nrf_twim_shorts_disable", "mask"], [182, 3, 1, "c.nrf_twim_shorts_disable", "p_reg"]], "nrf_twim_shorts_enable": [[182, 3, 1, "c.nrf_twim_shorts_enable", "mask"], [182, 3, 1, "c.nrf_twim_shorts_enable", "p_reg"]], "nrf_twim_shorts_get": [[182, 3, 1, "c.nrf_twim_shorts_get", "p_reg"]], "nrf_twim_shorts_set": [[182, 3, 1, "c.nrf_twim_shorts_set", "mask"], [182, 3, 1, "c.nrf_twim_shorts_set", "p_reg"]], "nrf_twim_subscribe_clear": [[182, 3, 1, "c.nrf_twim_subscribe_clear", "p_reg"], [182, 3, 1, "c.nrf_twim_subscribe_clear", "task"]], "nrf_twim_subscribe_set": [[182, 3, 1, "c.nrf_twim_subscribe_set", "channel"], [182, 3, 1, "c.nrf_twim_subscribe_set", "p_reg"], [182, 3, 1, "c.nrf_twim_subscribe_set", "task"]], "nrf_twim_task_address_get": [[182, 3, 1, "c.nrf_twim_task_address_get", "p_reg"], [182, 3, 1, "c.nrf_twim_task_address_get", "task"]], "nrf_twim_task_t": [[182, 1, 1, "c.nrf_twim_task_t.NRF_TWIM_TASK_DISABLERXMATCH0", "NRF_TWIM_TASK_DISABLERXMATCH0"], [182, 1, 1, "c.nrf_twim_task_t.NRF_TWIM_TASK_DISABLERXMATCH1", "NRF_TWIM_TASK_DISABLERXMATCH1"], [182, 1, 1, "c.nrf_twim_task_t.NRF_TWIM_TASK_DISABLERXMATCH2", "NRF_TWIM_TASK_DISABLERXMATCH2"], [182, 1, 1, "c.nrf_twim_task_t.NRF_TWIM_TASK_DISABLERXMATCH3", "NRF_TWIM_TASK_DISABLERXMATCH3"], [182, 1, 1, "c.nrf_twim_task_t.NRF_TWIM_TASK_ENABLERXMATCH0", "NRF_TWIM_TASK_ENABLERXMATCH0"], [182, 1, 1, "c.nrf_twim_task_t.NRF_TWIM_TASK_ENABLERXMATCH1", "NRF_TWIM_TASK_ENABLERXMATCH1"], [182, 1, 1, "c.nrf_twim_task_t.NRF_TWIM_TASK_ENABLERXMATCH2", "NRF_TWIM_TASK_ENABLERXMATCH2"], [182, 1, 1, "c.nrf_twim_task_t.NRF_TWIM_TASK_ENABLERXMATCH3", "NRF_TWIM_TASK_ENABLERXMATCH3"], [182, 1, 1, "c.nrf_twim_task_t.NRF_TWIM_TASK_RESUME", "NRF_TWIM_TASK_RESUME"], [182, 1, 1, "c.nrf_twim_task_t.NRF_TWIM_TASK_STARTRX", "NRF_TWIM_TASK_STARTRX"], [182, 1, 1, "c.nrf_twim_task_t.NRF_TWIM_TASK_STARTTX", "NRF_TWIM_TASK_STARTTX"], [182, 1, 1, "c.nrf_twim_task_t.NRF_TWIM_TASK_STOP", "NRF_TWIM_TASK_STOP"], [182, 1, 1, "c.nrf_twim_task_t.NRF_TWIM_TASK_STOPRX", "NRF_TWIM_TASK_STOPRX"], [182, 1, 1, "c.nrf_twim_task_t.NRF_TWIM_TASK_STOPTX", "NRF_TWIM_TASK_STOPTX"], [182, 1, 1, "c.nrf_twim_task_t.NRF_TWIM_TASK_SUSPEND", "NRF_TWIM_TASK_SUSPEND"]], "nrf_twim_task_trigger": [[182, 3, 1, "c.nrf_twim_task_trigger", "p_reg"], [182, 3, 1, "c.nrf_twim_task_trigger", "task"]], "nrf_twim_tx_buffer_set": [[182, 3, 1, "c.nrf_twim_tx_buffer_set", "length"], [182, 3, 1, "c.nrf_twim_tx_buffer_set", "p_buffer"], [182, 3, 1, "c.nrf_twim_tx_buffer_set", "p_reg"]], "nrf_twim_tx_list_disable": [[182, 3, 1, "c.nrf_twim_tx_list_disable", "p_reg"]], "nrf_twim_tx_list_enable": [[182, 3, 1, "c.nrf_twim_tx_list_enable", "p_reg"]], "nrf_twim_tx_terminate_on_bus_error_check": [[182, 3, 1, "c.nrf_twim_tx_terminate_on_bus_error_check", "p_reg"]], "nrf_twim_tx_terminate_on_bus_error_enable_set": [[182, 3, 1, "c.nrf_twim_tx_terminate_on_bus_error_enable_set", "enable"], [182, 3, 1, "c.nrf_twim_tx_terminate_on_bus_error_enable_set", "p_reg"]], "nrf_twim_txd_amount_get": [[182, 3, 1, "c.nrf_twim_txd_amount_get", "p_reg"]], "nrf_twim_txd_curr_amount_get": [[182, 3, 1, "c.nrf_twim_txd_curr_amount_get", "p_reg"]], "nrf_twis_address_get": [[186, 3, 1, "c.nrf_twis_address_get", "n"], [186, 3, 1, "c.nrf_twis_address_get", "p_reg"]], "nrf_twis_address_set": [[186, 3, 1, "c.nrf_twis_address_set", "addr"], [186, 3, 1, "c.nrf_twis_address_set", "n"], [186, 3, 1, "c.nrf_twis_address_set", "p_reg"]], "nrf_twis_config_addr_mask_t": [[186, 1, 1, "c.nrf_twis_config_addr_mask_t.NRF_TWIS_CONFIG_ADDRESS01_MASK", "NRF_TWIS_CONFIG_ADDRESS01_MASK"], [186, 1, 1, "c.nrf_twis_config_addr_mask_t.NRF_TWIS_CONFIG_ADDRESS0_MASK", "NRF_TWIS_CONFIG_ADDRESS0_MASK"], [186, 1, 1, "c.nrf_twis_config_addr_mask_t.NRF_TWIS_CONFIG_ADDRESS1_MASK", "NRF_TWIS_CONFIG_ADDRESS1_MASK"]], "nrf_twis_config_address_get": [[186, 3, 1, "c.nrf_twis_config_address_get", "p_reg"]], "nrf_twis_config_address_set": [[186, 3, 1, "c.nrf_twis_config_address_set", "addr_mask"], [186, 3, 1, "c.nrf_twis_config_address_set", "p_reg"]], "nrf_twis_disable": [[186, 3, 1, "c.nrf_twis_disable", "p_reg"]], "nrf_twis_enable": [[186, 3, 1, "c.nrf_twis_enable", "p_reg"]], "nrf_twis_enable_check": [[186, 3, 1, "c.nrf_twis_enable_check", "p_reg"]], "nrf_twis_error_source_get_and_clear": [[186, 3, 1, "c.nrf_twis_error_source_get_and_clear", "p_reg"]], "nrf_twis_error_t": [[186, 1, 1, "c.nrf_twis_error_t.NRF_TWIS_ERROR_DATA_NACK", "NRF_TWIS_ERROR_DATA_NACK"], [186, 1, 1, "c.nrf_twis_error_t.NRF_TWIS_ERROR_OVERFLOW", "NRF_TWIS_ERROR_OVERFLOW"], [186, 1, 1, "c.nrf_twis_error_t.NRF_TWIS_ERROR_OVERREAD", "NRF_TWIS_ERROR_OVERREAD"]], "nrf_twis_event_address_get": [[186, 3, 1, "c.nrf_twis_event_address_get", "event"], [186, 3, 1, "c.nrf_twis_event_address_get", "p_reg"]], "nrf_twis_event_check": [[186, 3, 1, "c.nrf_twis_event_check", "event"], [186, 3, 1, "c.nrf_twis_event_check", "p_reg"]], "nrf_twis_event_clear": [[186, 3, 1, "c.nrf_twis_event_clear", "event"], [186, 3, 1, "c.nrf_twis_event_clear", "p_reg"]], "nrf_twis_event_get_and_clear": [[186, 3, 1, "c.nrf_twis_event_get_and_clear", "event"], [186, 3, 1, "c.nrf_twis_event_get_and_clear", "p_reg"]], "nrf_twis_event_t": [[186, 1, 1, "c.nrf_twis_event_t.NRF_TWIS_EVENT_ERROR", "NRF_TWIS_EVENT_ERROR"], [186, 1, 1, "c.nrf_twis_event_t.NRF_TWIS_EVENT_READ", "NRF_TWIS_EVENT_READ"], [186, 1, 1, "c.nrf_twis_event_t.NRF_TWIS_EVENT_RXSTARTED", "NRF_TWIS_EVENT_RXSTARTED"], [186, 1, 1, "c.nrf_twis_event_t.NRF_TWIS_EVENT_STOPPED", "NRF_TWIS_EVENT_STOPPED"], [186, 1, 1, "c.nrf_twis_event_t.NRF_TWIS_EVENT_TXSTARTED", "NRF_TWIS_EVENT_TXSTARTED"], [186, 1, 1, "c.nrf_twis_event_t.NRF_TWIS_EVENT_WRITE", "NRF_TWIS_EVENT_WRITE"]], "nrf_twis_int_disable": [[186, 3, 1, "c.nrf_twis_int_disable", "mask"], [186, 3, 1, "c.nrf_twis_int_disable", "p_reg"]], "nrf_twis_int_enable": [[186, 3, 1, "c.nrf_twis_int_enable", "mask"], [186, 3, 1, "c.nrf_twis_int_enable", "p_reg"]], "nrf_twis_int_enable_check": [[186, 3, 1, "c.nrf_twis_int_enable_check", "mask"], [186, 3, 1, "c.nrf_twis_int_enable_check", "p_reg"]], "nrf_twis_int_mask_t": [[186, 1, 1, "c.nrf_twis_int_mask_t.NRF_TWIS_INT_ERROR_MASK", "NRF_TWIS_INT_ERROR_MASK"], [186, 1, 1, "c.nrf_twis_int_mask_t.NRF_TWIS_INT_READ_MASK", "NRF_TWIS_INT_READ_MASK"], [186, 1, 1, "c.nrf_twis_int_mask_t.NRF_TWIS_INT_RXSTARTED_MASK", "NRF_TWIS_INT_RXSTARTED_MASK"], [186, 1, 1, "c.nrf_twis_int_mask_t.NRF_TWIS_INT_STOPPED_MASK", "NRF_TWIS_INT_STOPPED_MASK"], [186, 1, 1, "c.nrf_twis_int_mask_t.NRF_TWIS_INT_TXSTARTED_MASK", "NRF_TWIS_INT_TXSTARTED_MASK"], [186, 1, 1, "c.nrf_twis_int_mask_t.NRF_TWIS_INT_WRITE_MASK", "NRF_TWIS_INT_WRITE_MASK"]], "nrf_twis_match_get": [[186, 3, 1, "c.nrf_twis_match_get", "p_reg"]], "nrf_twis_orc_get": [[186, 3, 1, "c.nrf_twis_orc_get", "p_reg"]], "nrf_twis_orc_set": [[186, 3, 1, "c.nrf_twis_orc_set", "orc"], [186, 3, 1, "c.nrf_twis_orc_set", "p_reg"]], "nrf_twis_pins_set": [[186, 3, 1, "c.nrf_twis_pins_set", "p_reg"], [186, 3, 1, "c.nrf_twis_pins_set", "scl"], [186, 3, 1, "c.nrf_twis_pins_set", "sda"]], "nrf_twis_publish_clear": [[186, 3, 1, "c.nrf_twis_publish_clear", "event"], [186, 3, 1, "c.nrf_twis_publish_clear", "p_reg"]], "nrf_twis_publish_set": [[186, 3, 1, "c.nrf_twis_publish_set", "channel"], [186, 3, 1, "c.nrf_twis_publish_set", "event"], [186, 3, 1, "c.nrf_twis_publish_set", "p_reg"]], "nrf_twis_rx_amount_get": [[186, 3, 1, "c.nrf_twis_rx_amount_get", "p_reg"]], "nrf_twis_rx_buffer_get": [[186, 3, 1, "c.nrf_twis_rx_buffer_get", "p_reg"]], "nrf_twis_rx_buffer_set": [[186, 3, 1, "c.nrf_twis_rx_buffer_set", "length"], [186, 3, 1, "c.nrf_twis_rx_buffer_set", "p_buf"], [186, 3, 1, "c.nrf_twis_rx_buffer_set", "p_reg"]], "nrf_twis_rx_list_disable": [[186, 3, 1, "c.nrf_twis_rx_list_disable", "p_reg"]], "nrf_twis_rx_list_enable": [[186, 3, 1, "c.nrf_twis_rx_list_enable", "p_reg"]], "nrf_twis_rx_prepare": [[186, 3, 1, "c.nrf_twis_rx_prepare", "length"], [186, 3, 1, "c.nrf_twis_rx_prepare", "p_buf"], [186, 3, 1, "c.nrf_twis_rx_prepare", "p_reg"]], "nrf_twis_scl_pin_get": [[186, 3, 1, "c.nrf_twis_scl_pin_get", "p_reg"]], "nrf_twis_sda_pin_get": [[186, 3, 1, "c.nrf_twis_sda_pin_get", "p_reg"]], "nrf_twis_short_mask_t": [[186, 1, 1, "c.nrf_twis_short_mask_t.NRF_TWIS_SHORT_READ_SUSPEND_MASK", "NRF_TWIS_SHORT_READ_SUSPEND_MASK"], [186, 1, 1, "c.nrf_twis_short_mask_t.NRF_TWIS_SHORT_WRITE_SUSPEND_MASK", "NRF_TWIS_SHORT_WRITE_SUSPEND_MASK"]], "nrf_twis_shorts_disable": [[186, 3, 1, "c.nrf_twis_shorts_disable", "mask"], [186, 3, 1, "c.nrf_twis_shorts_disable", "p_reg"]], "nrf_twis_shorts_enable": [[186, 3, 1, "c.nrf_twis_shorts_enable", "mask"], [186, 3, 1, "c.nrf_twis_shorts_enable", "p_reg"]], "nrf_twis_shorts_get": [[186, 3, 1, "c.nrf_twis_shorts_get", "p_reg"]], "nrf_twis_subscribe_clear": [[186, 3, 1, "c.nrf_twis_subscribe_clear", "p_reg"], [186, 3, 1, "c.nrf_twis_subscribe_clear", "task"]], "nrf_twis_subscribe_set": [[186, 3, 1, "c.nrf_twis_subscribe_set", "channel"], [186, 3, 1, "c.nrf_twis_subscribe_set", "p_reg"], [186, 3, 1, "c.nrf_twis_subscribe_set", "task"]], "nrf_twis_task_address_get": [[186, 3, 1, "c.nrf_twis_task_address_get", "p_reg"], [186, 3, 1, "c.nrf_twis_task_address_get", "task"]], "nrf_twis_task_t": [[186, 1, 1, "c.nrf_twis_task_t.NRF_TWIS_TASK_PREPARERX", "NRF_TWIS_TASK_PREPARERX"], [186, 1, 1, "c.nrf_twis_task_t.NRF_TWIS_TASK_PREPARETX", "NRF_TWIS_TASK_PREPARETX"], [186, 1, 1, "c.nrf_twis_task_t.NRF_TWIS_TASK_RESUME", "NRF_TWIS_TASK_RESUME"], [186, 1, 1, "c.nrf_twis_task_t.NRF_TWIS_TASK_STOP", "NRF_TWIS_TASK_STOP"], [186, 1, 1, "c.nrf_twis_task_t.NRF_TWIS_TASK_SUSPEND", "NRF_TWIS_TASK_SUSPEND"]], "nrf_twis_task_trigger": [[186, 3, 1, "c.nrf_twis_task_trigger", "p_reg"], [186, 3, 1, "c.nrf_twis_task_trigger", "task"]], "nrf_twis_tx_amount_get": [[186, 3, 1, "c.nrf_twis_tx_amount_get", "p_reg"]], "nrf_twis_tx_buffer_get": [[186, 3, 1, "c.nrf_twis_tx_buffer_get", "p_reg"]], "nrf_twis_tx_buffer_set": [[186, 3, 1, "c.nrf_twis_tx_buffer_set", "length"], [186, 3, 1, "c.nrf_twis_tx_buffer_set", "p_buf"], [186, 3, 1, "c.nrf_twis_tx_buffer_set", "p_reg"]], "nrf_twis_tx_list_disable": [[186, 3, 1, "c.nrf_twis_tx_list_disable", "p_reg"]], "nrf_twis_tx_list_enable": [[186, 3, 1, "c.nrf_twis_tx_list_enable", "p_reg"]], "nrf_twis_tx_prepare": [[186, 3, 1, "c.nrf_twis_tx_prepare", "length"], [186, 3, 1, "c.nrf_twis_tx_prepare", "p_buf"], [186, 3, 1, "c.nrf_twis_tx_prepare", "p_reg"]], "nrf_uart_baudrate_set": [[189, 3, 1, "c.nrf_uart_baudrate_set", "baudrate"], [189, 3, 1, "c.nrf_uart_baudrate_set", "p_reg"]], "nrf_uart_baudrate_t": [[189, 1, 1, "c.nrf_uart_baudrate_t.NRF_UART_BAUDRATE_1000000", "NRF_UART_BAUDRATE_1000000"], [189, 1, 1, "c.nrf_uart_baudrate_t.NRF_UART_BAUDRATE_115200", "NRF_UART_BAUDRATE_115200"], [189, 1, 1, "c.nrf_uart_baudrate_t.NRF_UART_BAUDRATE_1200", "NRF_UART_BAUDRATE_1200"], [189, 1, 1, "c.nrf_uart_baudrate_t.NRF_UART_BAUDRATE_14400", "NRF_UART_BAUDRATE_14400"], [189, 1, 1, "c.nrf_uart_baudrate_t.NRF_UART_BAUDRATE_19200", "NRF_UART_BAUDRATE_19200"], [189, 1, 1, "c.nrf_uart_baudrate_t.NRF_UART_BAUDRATE_230400", "NRF_UART_BAUDRATE_230400"], [189, 1, 1, "c.nrf_uart_baudrate_t.NRF_UART_BAUDRATE_2400", "NRF_UART_BAUDRATE_2400"], [189, 1, 1, "c.nrf_uart_baudrate_t.NRF_UART_BAUDRATE_250000", "NRF_UART_BAUDRATE_250000"], [189, 1, 1, "c.nrf_uart_baudrate_t.NRF_UART_BAUDRATE_28800", "NRF_UART_BAUDRATE_28800"], [189, 1, 1, "c.nrf_uart_baudrate_t.NRF_UART_BAUDRATE_31250", "NRF_UART_BAUDRATE_31250"], [189, 1, 1, "c.nrf_uart_baudrate_t.NRF_UART_BAUDRATE_38400", "NRF_UART_BAUDRATE_38400"], [189, 1, 1, "c.nrf_uart_baudrate_t.NRF_UART_BAUDRATE_460800", "NRF_UART_BAUDRATE_460800"], [189, 1, 1, "c.nrf_uart_baudrate_t.NRF_UART_BAUDRATE_4800", "NRF_UART_BAUDRATE_4800"], [189, 1, 1, "c.nrf_uart_baudrate_t.NRF_UART_BAUDRATE_56000", "NRF_UART_BAUDRATE_56000"], [189, 1, 1, "c.nrf_uart_baudrate_t.NRF_UART_BAUDRATE_57600", "NRF_UART_BAUDRATE_57600"], [189, 1, 1, "c.nrf_uart_baudrate_t.NRF_UART_BAUDRATE_76800", "NRF_UART_BAUDRATE_76800"], [189, 1, 1, "c.nrf_uart_baudrate_t.NRF_UART_BAUDRATE_921600", "NRF_UART_BAUDRATE_921600"], [189, 1, 1, "c.nrf_uart_baudrate_t.NRF_UART_BAUDRATE_9600", "NRF_UART_BAUDRATE_9600"]], "nrf_uart_config_t": [[189, 6, 1, "c.nrf_uart_config_t.hwfc", "hwfc"], [189, 6, 1, "c.nrf_uart_config_t.parity", "parity"], [189, 6, 1, "c.nrf_uart_config_t.paritytype", "paritytype"], [189, 6, 1, "c.nrf_uart_config_t.stop", "stop"]], "nrf_uart_configure": [[189, 3, 1, "c.nrf_uart_configure", "p_cfg"], [189, 3, 1, "c.nrf_uart_configure", "p_reg"]], "nrf_uart_cts_pin_get": [[189, 3, 1, "c.nrf_uart_cts_pin_get", "p_reg"]], "nrf_uart_disable": [[189, 3, 1, "c.nrf_uart_disable", "p_reg"]], "nrf_uart_enable": [[189, 3, 1, "c.nrf_uart_enable", "p_reg"]], "nrf_uart_error_mask_t": [[189, 1, 1, "c.nrf_uart_error_mask_t.NRF_UART_ERROR_BREAK_MASK", "NRF_UART_ERROR_BREAK_MASK"], [189, 1, 1, "c.nrf_uart_error_mask_t.NRF_UART_ERROR_FRAMING_MASK", "NRF_UART_ERROR_FRAMING_MASK"], [189, 1, 1, "c.nrf_uart_error_mask_t.NRF_UART_ERROR_OVERRUN_MASK", "NRF_UART_ERROR_OVERRUN_MASK"], [189, 1, 1, "c.nrf_uart_error_mask_t.NRF_UART_ERROR_PARITY_MASK", "NRF_UART_ERROR_PARITY_MASK"]], "nrf_uart_errorsrc_get_and_clear": [[189, 3, 1, "c.nrf_uart_errorsrc_get_and_clear", "p_reg"]], "nrf_uart_event_address_get": [[189, 3, 1, "c.nrf_uart_event_address_get", "event"], [189, 3, 1, "c.nrf_uart_event_address_get", "p_reg"]], "nrf_uart_event_check": [[189, 3, 1, "c.nrf_uart_event_check", "event"], [189, 3, 1, "c.nrf_uart_event_check", "p_reg"]], "nrf_uart_event_clear": [[189, 3, 1, "c.nrf_uart_event_clear", "event"], [189, 3, 1, "c.nrf_uart_event_clear", "p_reg"]], "nrf_uart_event_t": [[189, 1, 1, "c.nrf_uart_event_t.NRF_UART_EVENT_CTS", "NRF_UART_EVENT_CTS"], [189, 1, 1, "c.nrf_uart_event_t.NRF_UART_EVENT_ERROR", "NRF_UART_EVENT_ERROR"], [189, 1, 1, "c.nrf_uart_event_t.NRF_UART_EVENT_NCTS", "NRF_UART_EVENT_NCTS"], [189, 1, 1, "c.nrf_uart_event_t.NRF_UART_EVENT_RXDRDY", "NRF_UART_EVENT_RXDRDY"], [189, 1, 1, "c.nrf_uart_event_t.NRF_UART_EVENT_RXTO", "NRF_UART_EVENT_RXTO"], [189, 1, 1, "c.nrf_uart_event_t.NRF_UART_EVENT_TXDRDY", "NRF_UART_EVENT_TXDRDY"]], "nrf_uart_hwfc_pins_disconnect": [[189, 3, 1, "c.nrf_uart_hwfc_pins_disconnect", "p_reg"]], "nrf_uart_hwfc_pins_set": [[189, 3, 1, "c.nrf_uart_hwfc_pins_set", "p_reg"], [189, 3, 1, "c.nrf_uart_hwfc_pins_set", "pselcts"], [189, 3, 1, "c.nrf_uart_hwfc_pins_set", "pselrts"]], "nrf_uart_hwfc_t": [[189, 1, 1, "c.nrf_uart_hwfc_t.NRF_UART_HWFC_DISABLED", "NRF_UART_HWFC_DISABLED"], [189, 1, 1, "c.nrf_uart_hwfc_t.NRF_UART_HWFC_ENABLED", "NRF_UART_HWFC_ENABLED"]], "nrf_uart_int_disable": [[189, 3, 1, "c.nrf_uart_int_disable", "mask"], [189, 3, 1, "c.nrf_uart_int_disable", "p_reg"]], "nrf_uart_int_enable": [[189, 3, 1, "c.nrf_uart_int_enable", "mask"], [189, 3, 1, "c.nrf_uart_int_enable", "p_reg"]], "nrf_uart_int_enable_check": [[189, 3, 1, "c.nrf_uart_int_enable_check", "mask"], [189, 3, 1, "c.nrf_uart_int_enable_check", "p_reg"]], "nrf_uart_int_mask_t": [[189, 1, 1, "c.nrf_uart_int_mask_t.NRF_UART_INT_MASK_CTS", "NRF_UART_INT_MASK_CTS"], [189, 1, 1, "c.nrf_uart_int_mask_t.NRF_UART_INT_MASK_ERROR", "NRF_UART_INT_MASK_ERROR"], [189, 1, 1, "c.nrf_uart_int_mask_t.NRF_UART_INT_MASK_NCTS", "NRF_UART_INT_MASK_NCTS"], [189, 1, 1, "c.nrf_uart_int_mask_t.NRF_UART_INT_MASK_RXDRDY", "NRF_UART_INT_MASK_RXDRDY"], [189, 1, 1, "c.nrf_uart_int_mask_t.NRF_UART_INT_MASK_RXTO", "NRF_UART_INT_MASK_RXTO"], [189, 1, 1, "c.nrf_uart_int_mask_t.NRF_UART_INT_MASK_TXDRDY", "NRF_UART_INT_MASK_TXDRDY"]], "nrf_uart_parity_t": [[189, 1, 1, "c.nrf_uart_parity_t.NRF_UART_PARITY_EXCLUDED", "NRF_UART_PARITY_EXCLUDED"], [189, 1, 1, "c.nrf_uart_parity_t.NRF_UART_PARITY_INCLUDED", "NRF_UART_PARITY_INCLUDED"]], "nrf_uart_paritytype_t": [[189, 1, 1, "c.nrf_uart_paritytype_t.NRF_UART_PARITYTYPE_EVEN", "NRF_UART_PARITYTYPE_EVEN"], [189, 1, 1, "c.nrf_uart_paritytype_t.NRF_UART_PARITYTYPE_ODD", "NRF_UART_PARITYTYPE_ODD"]], "nrf_uart_rts_pin_get": [[189, 3, 1, "c.nrf_uart_rts_pin_get", "p_reg"]], "nrf_uart_rx_pin_get": [[189, 3, 1, "c.nrf_uart_rx_pin_get", "p_reg"]], "nrf_uart_rxd_get": [[189, 3, 1, "c.nrf_uart_rxd_get", "p_reg"]], "nrf_uart_stop_t": [[189, 1, 1, "c.nrf_uart_stop_t.NRF_UART_STOP_ONE", "NRF_UART_STOP_ONE"], [189, 1, 1, "c.nrf_uart_stop_t.NRF_UART_STOP_TWO", "NRF_UART_STOP_TWO"]], "nrf_uart_task_address_get": [[189, 3, 1, "c.nrf_uart_task_address_get", "p_reg"], [189, 3, 1, "c.nrf_uart_task_address_get", "task"]], "nrf_uart_task_t": [[189, 1, 1, "c.nrf_uart_task_t.NRF_UART_TASK_STARTRX", "NRF_UART_TASK_STARTRX"], [189, 1, 1, "c.nrf_uart_task_t.NRF_UART_TASK_STARTTX", "NRF_UART_TASK_STARTTX"], [189, 1, 1, "c.nrf_uart_task_t.NRF_UART_TASK_STOPRX", "NRF_UART_TASK_STOPRX"], [189, 1, 1, "c.nrf_uart_task_t.NRF_UART_TASK_STOPTX", "NRF_UART_TASK_STOPTX"], [189, 1, 1, "c.nrf_uart_task_t.NRF_UART_TASK_SUSPEND", "NRF_UART_TASK_SUSPEND"]], "nrf_uart_task_trigger": [[189, 3, 1, "c.nrf_uart_task_trigger", "p_reg"], [189, 3, 1, "c.nrf_uart_task_trigger", "task"]], "nrf_uart_tx_pin_get": [[189, 3, 1, "c.nrf_uart_tx_pin_get", "p_reg"]], "nrf_uart_txd_set": [[189, 3, 1, "c.nrf_uart_txd_set", "p_reg"], [189, 3, 1, "c.nrf_uart_txd_set", "txd"]], "nrf_uart_txrx_pins_disconnect": [[189, 3, 1, "c.nrf_uart_txrx_pins_disconnect", "p_reg"]], "nrf_uart_txrx_pins_set": [[189, 3, 1, "c.nrf_uart_txrx_pins_set", "p_reg"], [189, 3, 1, "c.nrf_uart_txrx_pins_set", "pselrxd"], [189, 3, 1, "c.nrf_uart_txrx_pins_set", "pseltxd"]], "nrf_uarte_baudrate_set": [[192, 3, 1, "c.nrf_uarte_baudrate_set", "baudrate"], [192, 3, 1, "c.nrf_uarte_baudrate_set", "p_reg"]], "nrf_uarte_baudrate_t": [[192, 1, 1, "c.nrf_uarte_baudrate_t.NRF_UARTE_BAUDRATE_1000000", "NRF_UARTE_BAUDRATE_1000000"], [192, 1, 1, "c.nrf_uarte_baudrate_t.NRF_UARTE_BAUDRATE_115200", "NRF_UARTE_BAUDRATE_115200"], [192, 1, 1, "c.nrf_uarte_baudrate_t.NRF_UARTE_BAUDRATE_1200", "NRF_UARTE_BAUDRATE_1200"], [192, 1, 1, "c.nrf_uarte_baudrate_t.NRF_UARTE_BAUDRATE_14400", "NRF_UARTE_BAUDRATE_14400"], [192, 1, 1, "c.nrf_uarte_baudrate_t.NRF_UARTE_BAUDRATE_19200", "NRF_UARTE_BAUDRATE_19200"], [192, 1, 1, "c.nrf_uarte_baudrate_t.NRF_UARTE_BAUDRATE_230400", "NRF_UARTE_BAUDRATE_230400"], [192, 1, 1, "c.nrf_uarte_baudrate_t.NRF_UARTE_BAUDRATE_2400", "NRF_UARTE_BAUDRATE_2400"], [192, 1, 1, "c.nrf_uarte_baudrate_t.NRF_UARTE_BAUDRATE_250000", "NRF_UARTE_BAUDRATE_250000"], [192, 1, 1, "c.nrf_uarte_baudrate_t.NRF_UARTE_BAUDRATE_28800", "NRF_UARTE_BAUDRATE_28800"], [192, 1, 1, "c.nrf_uarte_baudrate_t.NRF_UARTE_BAUDRATE_31250", "NRF_UARTE_BAUDRATE_31250"], [192, 1, 1, "c.nrf_uarte_baudrate_t.NRF_UARTE_BAUDRATE_38400", "NRF_UARTE_BAUDRATE_38400"], [192, 1, 1, "c.nrf_uarte_baudrate_t.NRF_UARTE_BAUDRATE_460800", "NRF_UARTE_BAUDRATE_460800"], [192, 1, 1, "c.nrf_uarte_baudrate_t.NRF_UARTE_BAUDRATE_4800", "NRF_UARTE_BAUDRATE_4800"], [192, 1, 1, "c.nrf_uarte_baudrate_t.NRF_UARTE_BAUDRATE_56000", "NRF_UARTE_BAUDRATE_56000"], [192, 1, 1, "c.nrf_uarte_baudrate_t.NRF_UARTE_BAUDRATE_57600", "NRF_UARTE_BAUDRATE_57600"], [192, 1, 1, "c.nrf_uarte_baudrate_t.NRF_UARTE_BAUDRATE_76800", "NRF_UARTE_BAUDRATE_76800"], [192, 1, 1, "c.nrf_uarte_baudrate_t.NRF_UARTE_BAUDRATE_921600", "NRF_UARTE_BAUDRATE_921600"], [192, 1, 1, "c.nrf_uarte_baudrate_t.NRF_UARTE_BAUDRATE_9600", "NRF_UARTE_BAUDRATE_9600"]], "nrf_uarte_config_t": [[192, 6, 1, "c.nrf_uarte_config_t.hwfc", "hwfc"], [192, 6, 1, "c.nrf_uarte_config_t.parity", "parity"], [192, 6, 1, "c.nrf_uarte_config_t.paritytype", "paritytype"], [192, 6, 1, "c.nrf_uarte_config_t.stop", "stop"]], "nrf_uarte_configure": [[192, 3, 1, "c.nrf_uarte_configure", "p_cfg"], [192, 3, 1, "c.nrf_uarte_configure", "p_reg"]], "nrf_uarte_cts_pin_get": [[192, 3, 1, "c.nrf_uarte_cts_pin_get", "p_reg"]], "nrf_uarte_disable": [[192, 3, 1, "c.nrf_uarte_disable", "p_reg"]], "nrf_uarte_enable": [[192, 3, 1, "c.nrf_uarte_enable", "p_reg"]], "nrf_uarte_enable_check": [[192, 3, 1, "c.nrf_uarte_enable_check", "p_reg"]], "nrf_uarte_error_mask_t": [[192, 1, 1, "c.nrf_uarte_error_mask_t.NRF_UARTE_ERROR_BREAK_MASK", "NRF_UARTE_ERROR_BREAK_MASK"], [192, 1, 1, "c.nrf_uarte_error_mask_t.NRF_UARTE_ERROR_FRAMING_MASK", "NRF_UARTE_ERROR_FRAMING_MASK"], [192, 1, 1, "c.nrf_uarte_error_mask_t.NRF_UARTE_ERROR_OVERRUN_MASK", "NRF_UARTE_ERROR_OVERRUN_MASK"], [192, 1, 1, "c.nrf_uarte_error_mask_t.NRF_UARTE_ERROR_PARITY_MASK", "NRF_UARTE_ERROR_PARITY_MASK"]], "nrf_uarte_errorsrc_get_and_clear": [[192, 3, 1, "c.nrf_uarte_errorsrc_get_and_clear", "p_reg"]], "nrf_uarte_event_address_get": [[192, 3, 1, "c.nrf_uarte_event_address_get", "event"], [192, 3, 1, "c.nrf_uarte_event_address_get", "p_reg"]], "nrf_uarte_event_check": [[192, 3, 1, "c.nrf_uarte_event_check", "event"], [192, 3, 1, "c.nrf_uarte_event_check", "p_reg"]], "nrf_uarte_event_clear": [[192, 3, 1, "c.nrf_uarte_event_clear", "event"], [192, 3, 1, "c.nrf_uarte_event_clear", "p_reg"]], "nrf_uarte_event_t": [[192, 1, 1, "c.nrf_uarte_event_t.NRF_UARTE_EVENT_CTS", "NRF_UARTE_EVENT_CTS"], [192, 1, 1, "c.nrf_uarte_event_t.NRF_UARTE_EVENT_ENDRX", "NRF_UARTE_EVENT_ENDRX"], [192, 1, 1, "c.nrf_uarte_event_t.NRF_UARTE_EVENT_ENDTX", "NRF_UARTE_EVENT_ENDTX"], [192, 1, 1, "c.nrf_uarte_event_t.NRF_UARTE_EVENT_ERROR", "NRF_UARTE_EVENT_ERROR"], [192, 1, 1, "c.nrf_uarte_event_t.NRF_UARTE_EVENT_NCTS", "NRF_UARTE_EVENT_NCTS"], [192, 1, 1, "c.nrf_uarte_event_t.NRF_UARTE_EVENT_RXDRDY", "NRF_UARTE_EVENT_RXDRDY"], [192, 1, 1, "c.nrf_uarte_event_t.NRF_UARTE_EVENT_RXSTARTED", "NRF_UARTE_EVENT_RXSTARTED"], [192, 1, 1, "c.nrf_uarte_event_t.NRF_UARTE_EVENT_RXTO", "NRF_UARTE_EVENT_RXTO"], [192, 1, 1, "c.nrf_uarte_event_t.NRF_UARTE_EVENT_TXDRDY", "NRF_UARTE_EVENT_TXDRDY"], [192, 1, 1, "c.nrf_uarte_event_t.NRF_UARTE_EVENT_TXSTARTED", "NRF_UARTE_EVENT_TXSTARTED"], [192, 1, 1, "c.nrf_uarte_event_t.NRF_UARTE_EVENT_TXSTOPPED", "NRF_UARTE_EVENT_TXSTOPPED"]], "nrf_uarte_hwfc_pins_disconnect": [[192, 3, 1, "c.nrf_uarte_hwfc_pins_disconnect", "p_reg"]], "nrf_uarte_hwfc_pins_set": [[192, 3, 1, "c.nrf_uarte_hwfc_pins_set", "p_reg"], [192, 3, 1, "c.nrf_uarte_hwfc_pins_set", "pselcts"], [192, 3, 1, "c.nrf_uarte_hwfc_pins_set", "pselrts"]], "nrf_uarte_hwfc_t": [[192, 1, 1, "c.nrf_uarte_hwfc_t.NRF_UARTE_HWFC_DISABLED", "NRF_UARTE_HWFC_DISABLED"], [192, 1, 1, "c.nrf_uarte_hwfc_t.NRF_UARTE_HWFC_ENABLED", "NRF_UARTE_HWFC_ENABLED"]], "nrf_uarte_int_disable": [[192, 3, 1, "c.nrf_uarte_int_disable", "mask"], [192, 3, 1, "c.nrf_uarte_int_disable", "p_reg"]], "nrf_uarte_int_enable": [[192, 3, 1, "c.nrf_uarte_int_enable", "mask"], [192, 3, 1, "c.nrf_uarte_int_enable", "p_reg"]], "nrf_uarte_int_enable_check": [[192, 3, 1, "c.nrf_uarte_int_enable_check", "mask"], [192, 3, 1, "c.nrf_uarte_int_enable_check", "p_reg"]], "nrf_uarte_int_mask_t": [[192, 1, 1, "c.nrf_uarte_int_mask_t.NRF_UARTE_INT_CTS_MASK", "NRF_UARTE_INT_CTS_MASK"], [192, 1, 1, "c.nrf_uarte_int_mask_t.NRF_UARTE_INT_ENDRX_MASK", "NRF_UARTE_INT_ENDRX_MASK"], [192, 1, 1, "c.nrf_uarte_int_mask_t.NRF_UARTE_INT_ENDTX_MASK", "NRF_UARTE_INT_ENDTX_MASK"], [192, 1, 1, "c.nrf_uarte_int_mask_t.NRF_UARTE_INT_ERROR_MASK", "NRF_UARTE_INT_ERROR_MASK"], [192, 1, 1, "c.nrf_uarte_int_mask_t.NRF_UARTE_INT_NCTS_MASK", "NRF_UARTE_INT_NCTS_MASK"], [192, 1, 1, "c.nrf_uarte_int_mask_t.NRF_UARTE_INT_RXDRDY_MASK", "NRF_UARTE_INT_RXDRDY_MASK"], [192, 1, 1, "c.nrf_uarte_int_mask_t.NRF_UARTE_INT_RXSTARTED_MASK", "NRF_UARTE_INT_RXSTARTED_MASK"], [192, 1, 1, "c.nrf_uarte_int_mask_t.NRF_UARTE_INT_RXTO_MASK", "NRF_UARTE_INT_RXTO_MASK"], [192, 1, 1, "c.nrf_uarte_int_mask_t.NRF_UARTE_INT_TXDRDY_MASK", "NRF_UARTE_INT_TXDRDY_MASK"], [192, 1, 1, "c.nrf_uarte_int_mask_t.NRF_UARTE_INT_TXSTARTED_MASK", "NRF_UARTE_INT_TXSTARTED_MASK"], [192, 1, 1, "c.nrf_uarte_int_mask_t.NRF_UARTE_INT_TXSTOPPED_MASK", "NRF_UARTE_INT_TXSTOPPED_MASK"]], "nrf_uarte_parity_t": [[192, 1, 1, "c.nrf_uarte_parity_t.NRF_UARTE_PARITY_EXCLUDED", "NRF_UARTE_PARITY_EXCLUDED"], [192, 1, 1, "c.nrf_uarte_parity_t.NRF_UARTE_PARITY_INCLUDED", "NRF_UARTE_PARITY_INCLUDED"]], "nrf_uarte_paritytype_t": [[192, 1, 1, "c.nrf_uarte_paritytype_t.NRF_UARTE_PARITYTYPE_EVEN", "NRF_UARTE_PARITYTYPE_EVEN"], [192, 1, 1, "c.nrf_uarte_paritytype_t.NRF_UARTE_PARITYTYPE_ODD", "NRF_UARTE_PARITYTYPE_ODD"]], "nrf_uarte_publish_clear": [[192, 3, 1, "c.nrf_uarte_publish_clear", "event"], [192, 3, 1, "c.nrf_uarte_publish_clear", "p_reg"]], "nrf_uarte_publish_set": [[192, 3, 1, "c.nrf_uarte_publish_set", "channel"], [192, 3, 1, "c.nrf_uarte_publish_set", "event"], [192, 3, 1, "c.nrf_uarte_publish_set", "p_reg"]], "nrf_uarte_rts_pin_get": [[192, 3, 1, "c.nrf_uarte_rts_pin_get", "p_reg"]], "nrf_uarte_rx_amount_get": [[192, 3, 1, "c.nrf_uarte_rx_amount_get", "p_reg"]], "nrf_uarte_rx_buffer_get": [[192, 3, 1, "c.nrf_uarte_rx_buffer_get", "p_reg"]], "nrf_uarte_rx_buffer_set": [[192, 3, 1, "c.nrf_uarte_rx_buffer_set", "length"], [192, 3, 1, "c.nrf_uarte_rx_buffer_set", "p_buffer"], [192, 3, 1, "c.nrf_uarte_rx_buffer_set", "p_reg"]], "nrf_uarte_rx_pin_get": [[192, 3, 1, "c.nrf_uarte_rx_pin_get", "p_reg"]], "nrf_uarte_short_t": [[192, 1, 1, "c.nrf_uarte_short_t.NRF_UARTE_SHORT_ENDRX_STARTRX", "NRF_UARTE_SHORT_ENDRX_STARTRX"], [192, 1, 1, "c.nrf_uarte_short_t.NRF_UARTE_SHORT_ENDRX_STOPRX", "NRF_UARTE_SHORT_ENDRX_STOPRX"], [192, 1, 1, "c.nrf_uarte_short_t.NRF_UARTE_SHORT_ENDTX_STOPTX", "NRF_UARTE_SHORT_ENDTX_STOPTX"]], "nrf_uarte_shorts_disable": [[192, 3, 1, "c.nrf_uarte_shorts_disable", "mask"], [192, 3, 1, "c.nrf_uarte_shorts_disable", "p_reg"]], "nrf_uarte_shorts_enable": [[192, 3, 1, "c.nrf_uarte_shorts_enable", "mask"], [192, 3, 1, "c.nrf_uarte_shorts_enable", "p_reg"]], "nrf_uarte_shorts_get": [[192, 3, 1, "c.nrf_uarte_shorts_get", "mask"], [192, 3, 1, "c.nrf_uarte_shorts_get", "p_reg"]], "nrf_uarte_shorts_set": [[192, 3, 1, "c.nrf_uarte_shorts_set", "mask"], [192, 3, 1, "c.nrf_uarte_shorts_set", "p_reg"]], "nrf_uarte_stop_t": [[192, 1, 1, "c.nrf_uarte_stop_t.NRF_UARTE_STOP_ONE", "NRF_UARTE_STOP_ONE"], [192, 1, 1, "c.nrf_uarte_stop_t.NRF_UARTE_STOP_TWO", "NRF_UARTE_STOP_TWO"]], "nrf_uarte_subscribe_clear": [[192, 3, 1, "c.nrf_uarte_subscribe_clear", "p_reg"], [192, 3, 1, "c.nrf_uarte_subscribe_clear", "task"]], "nrf_uarte_subscribe_set": [[192, 3, 1, "c.nrf_uarte_subscribe_set", "channel"], [192, 3, 1, "c.nrf_uarte_subscribe_set", "p_reg"], [192, 3, 1, "c.nrf_uarte_subscribe_set", "task"]], "nrf_uarte_task_address_get": [[192, 3, 1, "c.nrf_uarte_task_address_get", "p_reg"], [192, 3, 1, "c.nrf_uarte_task_address_get", "task"]], "nrf_uarte_task_t": [[192, 1, 1, "c.nrf_uarte_task_t.NRF_UARTE_TASK_FLUSHRX", "NRF_UARTE_TASK_FLUSHRX"], [192, 1, 1, "c.nrf_uarte_task_t.NRF_UARTE_TASK_STARTRX", "NRF_UARTE_TASK_STARTRX"], [192, 1, 1, "c.nrf_uarte_task_t.NRF_UARTE_TASK_STARTTX", "NRF_UARTE_TASK_STARTTX"], [192, 1, 1, "c.nrf_uarte_task_t.NRF_UARTE_TASK_STOPRX", "NRF_UARTE_TASK_STOPRX"], [192, 1, 1, "c.nrf_uarte_task_t.NRF_UARTE_TASK_STOPTX", "NRF_UARTE_TASK_STOPTX"]], "nrf_uarte_task_trigger": [[192, 3, 1, "c.nrf_uarte_task_trigger", "p_reg"], [192, 3, 1, "c.nrf_uarte_task_trigger", "task"]], "nrf_uarte_tx_amount_get": [[192, 3, 1, "c.nrf_uarte_tx_amount_get", "p_reg"]], "nrf_uarte_tx_buffer_get": [[192, 3, 1, "c.nrf_uarte_tx_buffer_get", "p_reg"]], "nrf_uarte_tx_buffer_set": [[192, 3, 1, "c.nrf_uarte_tx_buffer_set", "length"], [192, 3, 1, "c.nrf_uarte_tx_buffer_set", "p_buffer"], [192, 3, 1, "c.nrf_uarte_tx_buffer_set", "p_reg"]], "nrf_uarte_tx_pin_get": [[192, 3, 1, "c.nrf_uarte_tx_pin_get", "p_reg"]], "nrf_uarte_txrx_pins_disconnect": [[192, 3, 1, "c.nrf_uarte_txrx_pins_disconnect", "p_reg"]], "nrf_uarte_txrx_pins_set": [[192, 3, 1, "c.nrf_uarte_txrx_pins_set", "p_reg"], [192, 3, 1, "c.nrf_uarte_txrx_pins_set", "pselrxd"], [192, 3, 1, "c.nrf_uarte_txrx_pins_set", "pseltxd"]], "nrf_uicr_boot_region_config_get": [[195, 3, 1, "c.nrf_uicr_boot_region_config_get", "p_config"], [195, 3, 1, "c.nrf_uicr_boot_region_config_get", "p_reg"]], "nrf_uicr_boot_region_config_set": [[195, 3, 1, "c.nrf_uicr_boot_region_config_set", "p_config"], [195, 3, 1, "c.nrf_uicr_boot_region_config_set", "p_reg"]], "nrf_uicr_boot_region_config_t": [[195, 6, 1, "c.nrf_uicr_boot_region_config_t.lock", "lock"], [195, 6, 1, "c.nrf_uicr_boot_region_config_t.permissions", "permissions"], [195, 6, 1, "c.nrf_uicr_boot_region_config_t.size_kb", "size_kb"], [195, 6, 1, "c.nrf_uicr_boot_region_config_t.writeonce", "writeonce"]], "nrf_uicr_boot_region_perm_mask_t": [[195, 1, 1, "c.nrf_uicr_boot_region_perm_mask_t.NRF_UICR_BOOT_REGION_PERM_EXECUTE_MASK", "NRF_UICR_BOOT_REGION_PERM_EXECUTE_MASK"], [195, 1, 1, "c.nrf_uicr_boot_region_perm_mask_t.NRF_UICR_BOOT_REGION_PERM_READ_MASK", "NRF_UICR_BOOT_REGION_PERM_READ_MASK"], [195, 1, 1, "c.nrf_uicr_boot_region_perm_mask_t.NRF_UICR_BOOT_REGION_PERM_SECURE_MASK", "NRF_UICR_BOOT_REGION_PERM_SECURE_MASK"], [195, 1, 1, "c.nrf_uicr_boot_region_perm_mask_t.NRF_UICR_BOOT_REGION_PERM_WRITE_MASK", "NRF_UICR_BOOT_REGION_PERM_WRITE_MASK"]], "nrf_uicr_dppi_link_t": [[195, 6, 1, "c.nrf_uicr_dppi_link_t.sink", "sink"], [195, 6, 1, "c.nrf_uicr_dppi_link_t.source", "source"]], "nrf_uicr_feature_index_mask_t": [[195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_0_MASK", "NRF_UICR_FEATURE_INDEX_0_MASK"], [195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_10_MASK", "NRF_UICR_FEATURE_INDEX_10_MASK"], [195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_11_MASK", "NRF_UICR_FEATURE_INDEX_11_MASK"], [195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_12_MASK", "NRF_UICR_FEATURE_INDEX_12_MASK"], [195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_13_MASK", "NRF_UICR_FEATURE_INDEX_13_MASK"], [195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_14_MASK", "NRF_UICR_FEATURE_INDEX_14_MASK"], [195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_15_MASK", "NRF_UICR_FEATURE_INDEX_15_MASK"], [195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_16_MASK", "NRF_UICR_FEATURE_INDEX_16_MASK"], [195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_17_MASK", "NRF_UICR_FEATURE_INDEX_17_MASK"], [195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_18_MASK", "NRF_UICR_FEATURE_INDEX_18_MASK"], [195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_19_MASK", "NRF_UICR_FEATURE_INDEX_19_MASK"], [195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_1_MASK", "NRF_UICR_FEATURE_INDEX_1_MASK"], [195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_20_MASK", "NRF_UICR_FEATURE_INDEX_20_MASK"], [195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_21_MASK", "NRF_UICR_FEATURE_INDEX_21_MASK"], [195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_22_MASK", "NRF_UICR_FEATURE_INDEX_22_MASK"], [195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_23_MASK", "NRF_UICR_FEATURE_INDEX_23_MASK"], [195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_24_MASK", "NRF_UICR_FEATURE_INDEX_24_MASK"], [195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_25_MASK", "NRF_UICR_FEATURE_INDEX_25_MASK"], [195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_26_MASK", "NRF_UICR_FEATURE_INDEX_26_MASK"], [195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_27_MASK", "NRF_UICR_FEATURE_INDEX_27_MASK"], [195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_28_MASK", "NRF_UICR_FEATURE_INDEX_28_MASK"], [195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_29_MASK", "NRF_UICR_FEATURE_INDEX_29_MASK"], [195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_2_MASK", "NRF_UICR_FEATURE_INDEX_2_MASK"], [195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_30_MASK", "NRF_UICR_FEATURE_INDEX_30_MASK"], [195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_31_MASK", "NRF_UICR_FEATURE_INDEX_31_MASK"], [195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_3_MASK", "NRF_UICR_FEATURE_INDEX_3_MASK"], [195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_4_MASK", "NRF_UICR_FEATURE_INDEX_4_MASK"], [195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_5_MASK", "NRF_UICR_FEATURE_INDEX_5_MASK"], [195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_6_MASK", "NRF_UICR_FEATURE_INDEX_6_MASK"], [195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_7_MASK", "NRF_UICR_FEATURE_INDEX_7_MASK"], [195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_8_MASK", "NRF_UICR_FEATURE_INDEX_8_MASK"], [195, 1, 1, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_9_MASK", "NRF_UICR_FEATURE_INDEX_9_MASK"]], "nrf_uicr_feature_link_get": [[195, 3, 1, "c.nrf_uicr_feature_link_get", "feature"], [195, 3, 1, "c.nrf_uicr_feature_link_get", "index"], [195, 3, 1, "c.nrf_uicr_feature_link_get", "p_reg"]], "nrf_uicr_feature_own_get": [[195, 3, 1, "c.nrf_uicr_feature_own_get", "feature"], [195, 3, 1, "c.nrf_uicr_feature_own_get", "index"], [195, 3, 1, "c.nrf_uicr_feature_own_get", "p_reg"]], "nrf_uicr_feature_secure_get": [[195, 3, 1, "c.nrf_uicr_feature_secure_get", "feature"], [195, 3, 1, "c.nrf_uicr_feature_secure_get", "index"], [195, 3, 1, "c.nrf_uicr_feature_secure_get", "p_reg"]], "nrf_uicr_feature_t": [[195, 1, 1, "c.nrf_uicr_feature_t.NRF_UICR_FEATURE_DPPI_GLOBAL_CH", "NRF_UICR_FEATURE_DPPI_GLOBAL_CH"], [195, 1, 1, "c.nrf_uicr_feature_t.NRF_UICR_FEATURE_DPPI_GLOBAL_CHG", "NRF_UICR_FEATURE_DPPI_GLOBAL_CHG"], [195, 1, 1, "c.nrf_uicr_feature_t.NRF_UICR_FEATURE_DPPI_LOCAL_CH", "NRF_UICR_FEATURE_DPPI_LOCAL_CH"], [195, 1, 1, "c.nrf_uicr_feature_t.NRF_UICR_FEATURE_DPPI_LOCAL_CHG", "NRF_UICR_FEATURE_DPPI_LOCAL_CHG"], [195, 1, 1, "c.nrf_uicr_feature_t.NRF_UICR_FEATURE_GPIO", "NRF_UICR_FEATURE_GPIO"], [195, 1, 1, "c.nrf_uicr_feature_t.NRF_UICR_FEATURE_GPIOTE_CH", "NRF_UICR_FEATURE_GPIOTE_CH"], [195, 1, 1, "c.nrf_uicr_feature_t.NRF_UICR_FEATURE_GRTC_CC", "NRF_UICR_FEATURE_GRTC_CC"], [195, 1, 1, "c.nrf_uicr_feature_t.NRF_UICR_FEATURE_IPCT_GLOBAL_CH", "NRF_UICR_FEATURE_IPCT_GLOBAL_CH"], [195, 1, 1, "c.nrf_uicr_feature_t.NRF_UICR_FEATURE_IPCT_GLOBAL_INTERRUPT", "NRF_UICR_FEATURE_IPCT_GLOBAL_INTERRUPT"], [195, 1, 1, "c.nrf_uicr_feature_t.NRF_UICR_FEATURE_IPCT_LOCAL_CH", "NRF_UICR_FEATURE_IPCT_LOCAL_CH"], [195, 1, 1, "c.nrf_uicr_feature_t.NRF_UICR_FEATURE_IPCT_LOCAL_INTERRUPT", "NRF_UICR_FEATURE_IPCT_LOCAL_INTERRUPT"]], "nrf_uicr_gpio_ctrlsel_get": [[195, 3, 1, "c.nrf_uicr_gpio_ctrlsel_get", "p_reg"], [195, 3, 1, "c.nrf_uicr_gpio_ctrlsel_get", "pin_number"]], "nrf_uicr_gpio_instance_get": [[195, 3, 1, "c.nrf_uicr_gpio_instance_get", "index"], [195, 3, 1, "c.nrf_uicr_gpio_instance_get", "p_reg"]], "nrf_uicr_initnsvtor_get": [[195, 3, 1, "c.nrf_uicr_initnsvtor_get", "p_reg"]], "nrf_uicr_initsvtor_get": [[195, 3, 1, "c.nrf_uicr_initsvtor_get", "p_reg"]], "nrf_uicr_ipcmap_config_get": [[195, 3, 1, "c.nrf_uicr_ipcmap_config_get", "index"], [195, 3, 1, "c.nrf_uicr_ipcmap_config_get", "p_reg"]], "nrf_uicr_ipcmap_config_t": [[195, 6, 1, "c.nrf_uicr_ipcmap_config_t.sink", "sink"], [195, 6, 1, "c.nrf_uicr_ipcmap_config_t.source", "source"]], "nrf_uicr_ipcmap_pair_t": [[195, 6, 1, "c.nrf_uicr_ipcmap_pair_t.domain", "domain"], [195, 6, 1, "c.nrf_uicr_ipcmap_pair_t.ipct_channel", "ipct_channel"]], "nrf_uicr_mailbox_address_get": [[195, 3, 1, "c.nrf_uicr_mailbox_address_get", "index"], [195, 3, 1, "c.nrf_uicr_mailbox_address_get", "p_reg"]], "nrf_uicr_mailbox_config_get": [[195, 3, 1, "c.nrf_uicr_mailbox_config_get", "index"], [195, 3, 1, "c.nrf_uicr_mailbox_config_get", "p_reg"]], "nrf_uicr_mailbox_config_t": [[195, 6, 1, "c.nrf_uicr_mailbox_config_t.owner", "owner"], [195, 6, 1, "c.nrf_uicr_mailbox_config_t.secure", "secure"], [195, 6, 1, "c.nrf_uicr_mailbox_config_t.size", "size"]], "nrf_uicr_mem_config_get": [[195, 3, 1, "c.nrf_uicr_mem_config_get", "index"], [195, 3, 1, "c.nrf_uicr_mem_config_get", "p_reg"]], "nrf_uicr_mem_config_perm_mask_t": [[195, 1, 1, "c.nrf_uicr_mem_config_perm_mask_t.NRF_UICR_MEM_CONFIG_PERM_EXECUTE_MASK", "NRF_UICR_MEM_CONFIG_PERM_EXECUTE_MASK"], [195, 1, 1, "c.nrf_uicr_mem_config_perm_mask_t.NRF_UICR_MEM_CONFIG_PERM_NONSECURE_MASK", "NRF_UICR_MEM_CONFIG_PERM_NONSECURE_MASK"], [195, 1, 1, "c.nrf_uicr_mem_config_perm_mask_t.NRF_UICR_MEM_CONFIG_PERM_READ_MASK", "NRF_UICR_MEM_CONFIG_PERM_READ_MASK"], [195, 1, 1, "c.nrf_uicr_mem_config_perm_mask_t.NRF_UICR_MEM_CONFIG_PERM_WRITE_MASK", "NRF_UICR_MEM_CONFIG_PERM_WRITE_MASK"]], "nrf_uicr_mem_config_t": [[195, 6, 1, "c.nrf_uicr_mem_config_t.address", "address"], [195, 6, 1, "c.nrf_uicr_mem_config_t.owner", "owner"], [195, 6, 1, "c.nrf_uicr_mem_config_t.permissions", "permissions"]], "nrf_uicr_mem_size_get": [[195, 3, 1, "c.nrf_uicr_mem_size_get", "index"], [195, 3, 1, "c.nrf_uicr_mem_size_get", "p_reg"]], "nrf_uicr_periph_config_get": [[195, 3, 1, "c.nrf_uicr_periph_config_get", "index"], [195, 3, 1, "c.nrf_uicr_periph_config_get", "p_reg"]], "nrf_uicr_periph_config_t": [[195, 6, 1, "c.nrf_uicr_periph_config_t.address", "address"], [195, 6, 1, "c.nrf_uicr_periph_config_t.dmasec", "dmasec"], [195, 6, 1, "c.nrf_uicr_periph_config_t.processor", "processor"], [195, 6, 1, "c.nrf_uicr_periph_config_t.secattr", "secattr"]], "nrf_uicr_ptrextuicr_get": [[195, 3, 1, "c.nrf_uicr_ptrextuicr_get", "p_reg"]], "nrf_usbd_dataepstatus_mask_t": [[197, 1, 1, "c.nrf_usbd_dataepstatus_mask_t.NRF_USBD_EPDATASTATUS_EPIN1_MASK", "NRF_USBD_EPDATASTATUS_EPIN1_MASK"], [197, 1, 1, "c.nrf_usbd_dataepstatus_mask_t.NRF_USBD_EPDATASTATUS_EPIN2_MASK", "NRF_USBD_EPDATASTATUS_EPIN2_MASK"], [197, 1, 1, "c.nrf_usbd_dataepstatus_mask_t.NRF_USBD_EPDATASTATUS_EPIN3_MASK", "NRF_USBD_EPDATASTATUS_EPIN3_MASK"], [197, 1, 1, "c.nrf_usbd_dataepstatus_mask_t.NRF_USBD_EPDATASTATUS_EPIN4_MASK", "NRF_USBD_EPDATASTATUS_EPIN4_MASK"], [197, 1, 1, "c.nrf_usbd_dataepstatus_mask_t.NRF_USBD_EPDATASTATUS_EPIN5_MASK", "NRF_USBD_EPDATASTATUS_EPIN5_MASK"], [197, 1, 1, "c.nrf_usbd_dataepstatus_mask_t.NRF_USBD_EPDATASTATUS_EPIN6_MASK", "NRF_USBD_EPDATASTATUS_EPIN6_MASK"], [197, 1, 1, "c.nrf_usbd_dataepstatus_mask_t.NRF_USBD_EPDATASTATUS_EPIN7_MASK", "NRF_USBD_EPDATASTATUS_EPIN7_MASK"], [197, 1, 1, "c.nrf_usbd_dataepstatus_mask_t.NRF_USBD_EPDATASTATUS_EPOUT1_MASK", "NRF_USBD_EPDATASTATUS_EPOUT1_MASK"], [197, 1, 1, "c.nrf_usbd_dataepstatus_mask_t.NRF_USBD_EPDATASTATUS_EPOUT2_MASK", "NRF_USBD_EPDATASTATUS_EPOUT2_MASK"], [197, 1, 1, "c.nrf_usbd_dataepstatus_mask_t.NRF_USBD_EPDATASTATUS_EPOUT3_MASK", "NRF_USBD_EPDATASTATUS_EPOUT3_MASK"], [197, 1, 1, "c.nrf_usbd_dataepstatus_mask_t.NRF_USBD_EPDATASTATUS_EPOUT4_MASK", "NRF_USBD_EPDATASTATUS_EPOUT4_MASK"], [197, 1, 1, "c.nrf_usbd_dataepstatus_mask_t.NRF_USBD_EPDATASTATUS_EPOUT5_MASK", "NRF_USBD_EPDATASTATUS_EPOUT5_MASK"], [197, 1, 1, "c.nrf_usbd_dataepstatus_mask_t.NRF_USBD_EPDATASTATUS_EPOUT6_MASK", "NRF_USBD_EPDATASTATUS_EPOUT6_MASK"], [197, 1, 1, "c.nrf_usbd_dataepstatus_mask_t.NRF_USBD_EPDATASTATUS_EPOUT7_MASK", "NRF_USBD_EPDATASTATUS_EPOUT7_MASK"]], "nrf_usbd_disable": [[197, 3, 1, "c.nrf_usbd_disable", "p_reg"]], "nrf_usbd_dpdmvalue_set": [[197, 3, 1, "c.nrf_usbd_dpdmvalue_set", "p_reg"], [197, 3, 1, "c.nrf_usbd_dpdmvalue_set", "val"]], "nrf_usbd_dpdmvalue_t": [[197, 1, 1, "c.nrf_usbd_dpdmvalue_t.NRF_USBD_DPDMVALUE_J", "NRF_USBD_DPDMVALUE_J"], [197, 1, 1, "c.nrf_usbd_dpdmvalue_t.NRF_USBD_DPDMVALUE_RESUME", "NRF_USBD_DPDMVALUE_RESUME"], [197, 1, 1, "c.nrf_usbd_dpdmvalue_t.NRF_USBD_DPMVALUE_K", "NRF_USBD_DPMVALUE_K"]], "nrf_usbd_dtoggle_get": [[197, 3, 1, "c.nrf_usbd_dtoggle_get", "ep"], [197, 3, 1, "c.nrf_usbd_dtoggle_get", "p_reg"]], "nrf_usbd_dtoggle_set": [[197, 3, 1, "c.nrf_usbd_dtoggle_set", "ep"], [197, 3, 1, "c.nrf_usbd_dtoggle_set", "op"], [197, 3, 1, "c.nrf_usbd_dtoggle_set", "p_reg"]], "nrf_usbd_dtoggle_t": [[197, 1, 1, "c.nrf_usbd_dtoggle_t.NRF_USBD_DTOGGLE_DATA0", "NRF_USBD_DTOGGLE_DATA0"], [197, 1, 1, "c.nrf_usbd_dtoggle_t.NRF_USBD_DTOGGLE_DATA1", "NRF_USBD_DTOGGLE_DATA1"], [197, 1, 1, "c.nrf_usbd_dtoggle_t.NRF_USBD_DTOGGLE_NOP", "NRF_USBD_DTOGGLE_NOP"]], "nrf_usbd_enable": [[197, 3, 1, "c.nrf_usbd_enable", "p_reg"]], "nrf_usbd_ep_all_disable": [[197, 3, 1, "c.nrf_usbd_ep_all_disable", "p_reg"]], "nrf_usbd_ep_amount_get": [[197, 3, 1, "c.nrf_usbd_ep_amount_get", "ep"], [197, 3, 1, "c.nrf_usbd_ep_amount_get", "p_reg"]], "nrf_usbd_ep_default_config": [[197, 3, 1, "c.nrf_usbd_ep_default_config", "p_reg"]], "nrf_usbd_ep_disable": [[197, 3, 1, "c.nrf_usbd_ep_disable", "ep"], [197, 3, 1, "c.nrf_usbd_ep_disable", "p_reg"]], "nrf_usbd_ep_easydma_set": [[197, 3, 1, "c.nrf_usbd_ep_easydma_set", "ep"], [197, 3, 1, "c.nrf_usbd_ep_easydma_set", "maxcnt"], [197, 3, 1, "c.nrf_usbd_ep_easydma_set", "p_reg"], [197, 3, 1, "c.nrf_usbd_ep_easydma_set", "ptr"]], "nrf_usbd_ep_enable": [[197, 3, 1, "c.nrf_usbd_ep_enable", "ep"], [197, 3, 1, "c.nrf_usbd_ep_enable", "p_reg"]], "nrf_usbd_ep_enable_check": [[197, 3, 1, "c.nrf_usbd_ep_enable_check", "ep"], [197, 3, 1, "c.nrf_usbd_ep_enable_check", "p_reg"]], "nrf_usbd_ep_is_stall": [[197, 3, 1, "c.nrf_usbd_ep_is_stall", "ep"], [197, 3, 1, "c.nrf_usbd_ep_is_stall", "p_reg"]], "nrf_usbd_ep_stall": [[197, 3, 1, "c.nrf_usbd_ep_stall", "ep"], [197, 3, 1, "c.nrf_usbd_ep_stall", "p_reg"]], "nrf_usbd_ep_unstall": [[197, 3, 1, "c.nrf_usbd_ep_unstall", "ep"], [197, 3, 1, "c.nrf_usbd_ep_unstall", "p_reg"]], "nrf_usbd_epdatastatus_clear": [[197, 3, 1, "c.nrf_usbd_epdatastatus_clear", "flags"], [197, 3, 1, "c.nrf_usbd_epdatastatus_clear", "p_reg"]], "nrf_usbd_epdatastatus_get": [[197, 3, 1, "c.nrf_usbd_epdatastatus_get", "p_reg"]], "nrf_usbd_epdatastatus_get_and_clear": [[197, 3, 1, "c.nrf_usbd_epdatastatus_get_and_clear", "p_reg"]], "nrf_usbd_episoout_size_get": [[197, 3, 1, "c.nrf_usbd_episoout_size_get", "ep"], [197, 3, 1, "c.nrf_usbd_episoout_size_get", "p_reg"]], "nrf_usbd_epout_clear": [[197, 3, 1, "c.nrf_usbd_epout_clear", "ep"], [197, 3, 1, "c.nrf_usbd_epout_clear", "p_reg"]], "nrf_usbd_epout_size_get": [[197, 3, 1, "c.nrf_usbd_epout_size_get", "ep"], [197, 3, 1, "c.nrf_usbd_epout_size_get", "p_reg"]], "nrf_usbd_epstatus_clear": [[197, 3, 1, "c.nrf_usbd_epstatus_clear", "flags"], [197, 3, 1, "c.nrf_usbd_epstatus_clear", "p_reg"]], "nrf_usbd_epstatus_get": [[197, 3, 1, "c.nrf_usbd_epstatus_get", "p_reg"]], "nrf_usbd_epstatus_get_and_clear": [[197, 3, 1, "c.nrf_usbd_epstatus_get_and_clear", "p_reg"]], "nrf_usbd_epstatus_mask_t": [[197, 1, 1, "c.nrf_usbd_epstatus_mask_t.NRF_USBD_EPSTATUS_EPIN0_MASK", "NRF_USBD_EPSTATUS_EPIN0_MASK"], [197, 1, 1, "c.nrf_usbd_epstatus_mask_t.NRF_USBD_EPSTATUS_EPIN1_MASK", "NRF_USBD_EPSTATUS_EPIN1_MASK"], [197, 1, 1, "c.nrf_usbd_epstatus_mask_t.NRF_USBD_EPSTATUS_EPIN2_MASK", "NRF_USBD_EPSTATUS_EPIN2_MASK"], [197, 1, 1, "c.nrf_usbd_epstatus_mask_t.NRF_USBD_EPSTATUS_EPIN3_MASK", "NRF_USBD_EPSTATUS_EPIN3_MASK"], [197, 1, 1, "c.nrf_usbd_epstatus_mask_t.NRF_USBD_EPSTATUS_EPIN4_MASK", "NRF_USBD_EPSTATUS_EPIN4_MASK"], [197, 1, 1, "c.nrf_usbd_epstatus_mask_t.NRF_USBD_EPSTATUS_EPIN5_MASK", "NRF_USBD_EPSTATUS_EPIN5_MASK"], [197, 1, 1, "c.nrf_usbd_epstatus_mask_t.NRF_USBD_EPSTATUS_EPIN6_MASK", "NRF_USBD_EPSTATUS_EPIN6_MASK"], [197, 1, 1, "c.nrf_usbd_epstatus_mask_t.NRF_USBD_EPSTATUS_EPIN7_MASK", "NRF_USBD_EPSTATUS_EPIN7_MASK"], [197, 1, 1, "c.nrf_usbd_epstatus_mask_t.NRF_USBD_EPSTATUS_EPOUT0_MASK", "NRF_USBD_EPSTATUS_EPOUT0_MASK"], [197, 1, 1, "c.nrf_usbd_epstatus_mask_t.NRF_USBD_EPSTATUS_EPOUT1_MASK", "NRF_USBD_EPSTATUS_EPOUT1_MASK"], [197, 1, 1, "c.nrf_usbd_epstatus_mask_t.NRF_USBD_EPSTATUS_EPOUT2_MASK", "NRF_USBD_EPSTATUS_EPOUT2_MASK"], [197, 1, 1, "c.nrf_usbd_epstatus_mask_t.NRF_USBD_EPSTATUS_EPOUT3_MASK", "NRF_USBD_EPSTATUS_EPOUT3_MASK"], [197, 1, 1, "c.nrf_usbd_epstatus_mask_t.NRF_USBD_EPSTATUS_EPOUT4_MASK", "NRF_USBD_EPSTATUS_EPOUT4_MASK"], [197, 1, 1, "c.nrf_usbd_epstatus_mask_t.NRF_USBD_EPSTATUS_EPOUT5_MASK", "NRF_USBD_EPSTATUS_EPOUT5_MASK"], [197, 1, 1, "c.nrf_usbd_epstatus_mask_t.NRF_USBD_EPSTATUS_EPOUT6_MASK", "NRF_USBD_EPSTATUS_EPOUT6_MASK"], [197, 1, 1, "c.nrf_usbd_epstatus_mask_t.NRF_USBD_EPSTATUS_EPOUT7_MASK", "NRF_USBD_EPSTATUS_EPOUT7_MASK"]], "nrf_usbd_event_address_get": [[197, 3, 1, "c.nrf_usbd_event_address_get", "event"], [197, 3, 1, "c.nrf_usbd_event_address_get", "p_reg"]], "nrf_usbd_event_check": [[197, 3, 1, "c.nrf_usbd_event_check", "event"], [197, 3, 1, "c.nrf_usbd_event_check", "p_reg"]], "nrf_usbd_event_clear": [[197, 3, 1, "c.nrf_usbd_event_clear", "event"], [197, 3, 1, "c.nrf_usbd_event_clear", "p_reg"]], "nrf_usbd_event_get_and_clear": [[197, 3, 1, "c.nrf_usbd_event_get_and_clear", "event"], [197, 3, 1, "c.nrf_usbd_event_get_and_clear", "p_reg"]], "nrf_usbd_event_t": [[197, 1, 1, "c.nrf_usbd_event_t.NRF_USBD_EVENT_DATAEP", "NRF_USBD_EVENT_DATAEP"], [197, 1, 1, "c.nrf_usbd_event_t.NRF_USBD_EVENT_ENDEPIN0", "NRF_USBD_EVENT_ENDEPIN0"], [197, 1, 1, "c.nrf_usbd_event_t.NRF_USBD_EVENT_ENDEPIN1", "NRF_USBD_EVENT_ENDEPIN1"], [197, 1, 1, "c.nrf_usbd_event_t.NRF_USBD_EVENT_ENDEPIN2", "NRF_USBD_EVENT_ENDEPIN2"], [197, 1, 1, "c.nrf_usbd_event_t.NRF_USBD_EVENT_ENDEPIN3", "NRF_USBD_EVENT_ENDEPIN3"], [197, 1, 1, "c.nrf_usbd_event_t.NRF_USBD_EVENT_ENDEPIN4", "NRF_USBD_EVENT_ENDEPIN4"], [197, 1, 1, "c.nrf_usbd_event_t.NRF_USBD_EVENT_ENDEPIN5", "NRF_USBD_EVENT_ENDEPIN5"], [197, 1, 1, "c.nrf_usbd_event_t.NRF_USBD_EVENT_ENDEPIN6", "NRF_USBD_EVENT_ENDEPIN6"], [197, 1, 1, "c.nrf_usbd_event_t.NRF_USBD_EVENT_ENDEPIN7", "NRF_USBD_EVENT_ENDEPIN7"], [197, 1, 1, "c.nrf_usbd_event_t.NRF_USBD_EVENT_ENDEPOUT0", "NRF_USBD_EVENT_ENDEPOUT0"], [197, 1, 1, "c.nrf_usbd_event_t.NRF_USBD_EVENT_ENDEPOUT1", "NRF_USBD_EVENT_ENDEPOUT1"], [197, 1, 1, "c.nrf_usbd_event_t.NRF_USBD_EVENT_ENDEPOUT2", "NRF_USBD_EVENT_ENDEPOUT2"], [197, 1, 1, "c.nrf_usbd_event_t.NRF_USBD_EVENT_ENDEPOUT3", "NRF_USBD_EVENT_ENDEPOUT3"], [197, 1, 1, "c.nrf_usbd_event_t.NRF_USBD_EVENT_ENDEPOUT4", "NRF_USBD_EVENT_ENDEPOUT4"], [197, 1, 1, "c.nrf_usbd_event_t.NRF_USBD_EVENT_ENDEPOUT5", "NRF_USBD_EVENT_ENDEPOUT5"], [197, 1, 1, "c.nrf_usbd_event_t.NRF_USBD_EVENT_ENDEPOUT6", "NRF_USBD_EVENT_ENDEPOUT6"], [197, 1, 1, "c.nrf_usbd_event_t.NRF_USBD_EVENT_ENDEPOUT7", "NRF_USBD_EVENT_ENDEPOUT7"], [197, 1, 1, "c.nrf_usbd_event_t.NRF_USBD_EVENT_ENDISOIN0", "NRF_USBD_EVENT_ENDISOIN0"], [197, 1, 1, "c.nrf_usbd_event_t.NRF_USBD_EVENT_ENDISOOUT0", "NRF_USBD_EVENT_ENDISOOUT0"], [197, 1, 1, "c.nrf_usbd_event_t.NRF_USBD_EVENT_EP0DATADONE", "NRF_USBD_EVENT_EP0DATADONE"], [197, 1, 1, "c.nrf_usbd_event_t.NRF_USBD_EVENT_EP0SETUP", "NRF_USBD_EVENT_EP0SETUP"], [197, 1, 1, "c.nrf_usbd_event_t.NRF_USBD_EVENT_SOF", "NRF_USBD_EVENT_SOF"], [197, 1, 1, "c.nrf_usbd_event_t.NRF_USBD_EVENT_STARTED", "NRF_USBD_EVENT_STARTED"], [197, 1, 1, "c.nrf_usbd_event_t.NRF_USBD_EVENT_USBEVENT", "NRF_USBD_EVENT_USBEVENT"], [197, 1, 1, "c.nrf_usbd_event_t.NRF_USBD_EVENT_USBRESET", "NRF_USBD_EVENT_USBRESET"]], "nrf_usbd_eventcause_clear": [[197, 3, 1, "c.nrf_usbd_eventcause_clear", "flags"], [197, 3, 1, "c.nrf_usbd_eventcause_clear", "p_reg"]], "nrf_usbd_eventcause_get": [[197, 3, 1, "c.nrf_usbd_eventcause_get", "p_reg"]], "nrf_usbd_eventcause_get_and_clear": [[197, 3, 1, "c.nrf_usbd_eventcause_get_and_clear", "p_reg"]], "nrf_usbd_eventcause_mask_t": [[197, 1, 1, "c.nrf_usbd_eventcause_mask_t.NRF_USBD_EVENTCAUSE_ISOOUTCRC_MASK", "NRF_USBD_EVENTCAUSE_ISOOUTCRC_MASK"], [197, 1, 1, "c.nrf_usbd_eventcause_mask_t.NRF_USBD_EVENTCAUSE_READY_MASK", "NRF_USBD_EVENTCAUSE_READY_MASK"], [197, 1, 1, "c.nrf_usbd_eventcause_mask_t.NRF_USBD_EVENTCAUSE_RESUME_MASK", "NRF_USBD_EVENTCAUSE_RESUME_MASK"], [197, 1, 1, "c.nrf_usbd_eventcause_mask_t.NRF_USBD_EVENTCAUSE_SUSPEND_MASK", "NRF_USBD_EVENTCAUSE_SUSPEND_MASK"], [197, 1, 1, "c.nrf_usbd_eventcause_mask_t.NRF_USBD_EVENTCAUSE_WUREQ_MASK", "NRF_USBD_EVENTCAUSE_WUREQ_MASK"]], "nrf_usbd_framecntr_get": [[197, 3, 1, "c.nrf_usbd_framecntr_get", "p_reg"]], "nrf_usbd_halted_get": [[197, 3, 1, "c.nrf_usbd_halted_get", "ep"], [197, 3, 1, "c.nrf_usbd_halted_get", "p_reg"]], "nrf_usbd_int_disable": [[197, 3, 1, "c.nrf_usbd_int_disable", "mask"], [197, 3, 1, "c.nrf_usbd_int_disable", "p_reg"]], "nrf_usbd_int_enable": [[197, 3, 1, "c.nrf_usbd_int_enable", "mask"], [197, 3, 1, "c.nrf_usbd_int_enable", "p_reg"]], "nrf_usbd_int_enable_check": [[197, 3, 1, "c.nrf_usbd_int_enable_check", "mask"], [197, 3, 1, "c.nrf_usbd_int_enable_check", "p_reg"]], "nrf_usbd_int_enable_get": [[197, 3, 1, "c.nrf_usbd_int_enable_get", "p_reg"]], "nrf_usbd_int_mask_t": [[197, 1, 1, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_DATAEP_MASK", "NRF_USBD_INT_DATAEP_MASK"], [197, 1, 1, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_ENDEPIN0_MASK", "NRF_USBD_INT_ENDEPIN0_MASK"], [197, 1, 1, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_ENDEPIN1_MASK", "NRF_USBD_INT_ENDEPIN1_MASK"], [197, 1, 1, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_ENDEPIN2_MASK", "NRF_USBD_INT_ENDEPIN2_MASK"], [197, 1, 1, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_ENDEPIN3_MASK", "NRF_USBD_INT_ENDEPIN3_MASK"], [197, 1, 1, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_ENDEPIN4_MASK", "NRF_USBD_INT_ENDEPIN4_MASK"], [197, 1, 1, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_ENDEPIN5_MASK", "NRF_USBD_INT_ENDEPIN5_MASK"], [197, 1, 1, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_ENDEPIN6_MASK", "NRF_USBD_INT_ENDEPIN6_MASK"], [197, 1, 1, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_ENDEPIN7_MASK", "NRF_USBD_INT_ENDEPIN7_MASK"], [197, 1, 1, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_ENDEPOUT0_MASK", "NRF_USBD_INT_ENDEPOUT0_MASK"], [197, 1, 1, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_ENDEPOUT1_MASK", "NRF_USBD_INT_ENDEPOUT1_MASK"], [197, 1, 1, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_ENDEPOUT2_MASK", "NRF_USBD_INT_ENDEPOUT2_MASK"], [197, 1, 1, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_ENDEPOUT3_MASK", "NRF_USBD_INT_ENDEPOUT3_MASK"], [197, 1, 1, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_ENDEPOUT4_MASK", "NRF_USBD_INT_ENDEPOUT4_MASK"], [197, 1, 1, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_ENDEPOUT5_MASK", "NRF_USBD_INT_ENDEPOUT5_MASK"], [197, 1, 1, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_ENDEPOUT6_MASK", "NRF_USBD_INT_ENDEPOUT6_MASK"], [197, 1, 1, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_ENDEPOUT7_MASK", "NRF_USBD_INT_ENDEPOUT7_MASK"], [197, 1, 1, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_ENDISOIN0_MASK", "NRF_USBD_INT_ENDISOIN0_MASK"], [197, 1, 1, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_ENDISOOUT0_MASK", "NRF_USBD_INT_ENDISOOUT0_MASK"], [197, 1, 1, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_EP0DATADONE_MASK", "NRF_USBD_INT_EP0DATADONE_MASK"], [197, 1, 1, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_EP0SETUP_MASK", "NRF_USBD_INT_EP0SETUP_MASK"], [197, 1, 1, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_SOF_MASK", "NRF_USBD_INT_SOF_MASK"], [197, 1, 1, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_STARTED_MASK", "NRF_USBD_INT_STARTED_MASK"], [197, 1, 1, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_USBEVENT_MASK", "NRF_USBD_INT_USBEVENT_MASK"], [197, 1, 1, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_USBRESET_MASK", "NRF_USBD_INT_USBRESET_MASK"]], "nrf_usbd_isoinconfig_get": [[197, 3, 1, "c.nrf_usbd_isoinconfig_get", "p_reg"]], "nrf_usbd_isoinconfig_set": [[197, 3, 1, "c.nrf_usbd_isoinconfig_set", "config"], [197, 3, 1, "c.nrf_usbd_isoinconfig_set", "p_reg"]], "nrf_usbd_isoinconfig_t": [[197, 1, 1, "c.nrf_usbd_isoinconfig_t.NRF_USBD_ISOINCONFIG_NORESP", "NRF_USBD_ISOINCONFIG_NORESP"], [197, 1, 1, "c.nrf_usbd_isoinconfig_t.NRF_USBD_ISOINCONFIG_ZERODATA", "NRF_USBD_ISOINCONFIG_ZERODATA"]], "nrf_usbd_isosplit_get": [[197, 3, 1, "c.nrf_usbd_isosplit_get", "p_reg"]], "nrf_usbd_isosplit_set": [[197, 3, 1, "c.nrf_usbd_isosplit_set", "p_reg"], [197, 3, 1, "c.nrf_usbd_isosplit_set", "split"]], "nrf_usbd_isosplit_t": [[197, 1, 1, "c.nrf_usbd_isosplit_t.NRF_USBD_ISOSPLIT_HALF", "NRF_USBD_ISOSPLIT_HALF"], [197, 1, 1, "c.nrf_usbd_isosplit_t.NRF_USBD_ISOSPLIT_ONEDIR", "NRF_USBD_ISOSPLIT_ONEDIR"]], "nrf_usbd_lowpower_check": [[197, 3, 1, "c.nrf_usbd_lowpower_check", "p_reg"]], "nrf_usbd_lowpower_disable": [[197, 3, 1, "c.nrf_usbd_lowpower_disable", "p_reg"]], "nrf_usbd_lowpower_enable": [[197, 3, 1, "c.nrf_usbd_lowpower_enable", "p_reg"]], "nrf_usbd_pullup_check": [[197, 3, 1, "c.nrf_usbd_pullup_check", "p_reg"]], "nrf_usbd_pullup_disable": [[197, 3, 1, "c.nrf_usbd_pullup_disable", "p_reg"]], "nrf_usbd_pullup_enable": [[197, 3, 1, "c.nrf_usbd_pullup_enable", "p_reg"]], "nrf_usbd_setup_bmrequesttype_get": [[197, 3, 1, "c.nrf_usbd_setup_bmrequesttype_get", "p_reg"]], "nrf_usbd_setup_brequest_get": [[197, 3, 1, "c.nrf_usbd_setup_brequest_get", "p_reg"]], "nrf_usbd_setup_windex_get": [[197, 3, 1, "c.nrf_usbd_setup_windex_get", "p_reg"]], "nrf_usbd_setup_wlength_get": [[197, 3, 1, "c.nrf_usbd_setup_wlength_get", "p_reg"]], "nrf_usbd_setup_wvalue_get": [[197, 3, 1, "c.nrf_usbd_setup_wvalue_get", "p_reg"]], "nrf_usbd_short_mask_t": [[197, 1, 1, "c.nrf_usbd_short_mask_t.NRF_USBD_SHORT_ENDEPOUT0_EP0RCVOUT_MASK", "NRF_USBD_SHORT_ENDEPOUT0_EP0RCVOUT_MASK"], [197, 1, 1, "c.nrf_usbd_short_mask_t.NRF_USBD_SHORT_ENDEPOUT0_EP0STATUS_MASK", "NRF_USBD_SHORT_ENDEPOUT0_EP0STATUS_MASK"], [197, 1, 1, "c.nrf_usbd_short_mask_t.NRF_USBD_SHORT_EP0DATADONE_EP0STATUS_MASK", "NRF_USBD_SHORT_EP0DATADONE_EP0STATUS_MASK"], [197, 1, 1, "c.nrf_usbd_short_mask_t.NRF_USBD_SHORT_EP0DATADONE_STARTEPIN0_MASK", "NRF_USBD_SHORT_EP0DATADONE_STARTEPIN0_MASK"], [197, 1, 1, "c.nrf_usbd_short_mask_t.NRF_USBD_SHORT_EP0DATADONE_STARTEPOUT0_MASK", "NRF_USBD_SHORT_EP0DATADONE_STARTEPOUT0_MASK"]], "nrf_usbd_shorts_disable": [[197, 3, 1, "c.nrf_usbd_shorts_disable", "mask"], [197, 3, 1, "c.nrf_usbd_shorts_disable", "p_reg"]], "nrf_usbd_shorts_enable": [[197, 3, 1, "c.nrf_usbd_shorts_enable", "mask"], [197, 3, 1, "c.nrf_usbd_shorts_enable", "p_reg"]], "nrf_usbd_shorts_get": [[197, 3, 1, "c.nrf_usbd_shorts_get", "p_reg"]], "nrf_usbd_task_address_get": [[197, 3, 1, "c.nrf_usbd_task_address_get", "p_reg"], [197, 3, 1, "c.nrf_usbd_task_address_get", "task"]], "nrf_usbd_task_t": [[197, 1, 1, "c.nrf_usbd_task_t.NRF_USBD_TASK_DRIVEDPDM", "NRF_USBD_TASK_DRIVEDPDM"], [197, 1, 1, "c.nrf_usbd_task_t.NRF_USBD_TASK_EP0RCVOUT", "NRF_USBD_TASK_EP0RCVOUT"], [197, 1, 1, "c.nrf_usbd_task_t.NRF_USBD_TASK_EP0STALL", "NRF_USBD_TASK_EP0STALL"], [197, 1, 1, "c.nrf_usbd_task_t.NRF_USBD_TASK_EP0STATUS", "NRF_USBD_TASK_EP0STATUS"], [197, 1, 1, "c.nrf_usbd_task_t.NRF_USBD_TASK_NODRIVEDPDM", "NRF_USBD_TASK_NODRIVEDPDM"], [197, 1, 1, "c.nrf_usbd_task_t.NRF_USBD_TASK_STARTEPIN0", "NRF_USBD_TASK_STARTEPIN0"], [197, 1, 1, "c.nrf_usbd_task_t.NRF_USBD_TASK_STARTEPIN1", "NRF_USBD_TASK_STARTEPIN1"], [197, 1, 1, "c.nrf_usbd_task_t.NRF_USBD_TASK_STARTEPIN2", "NRF_USBD_TASK_STARTEPIN2"], [197, 1, 1, "c.nrf_usbd_task_t.NRF_USBD_TASK_STARTEPIN3", "NRF_USBD_TASK_STARTEPIN3"], [197, 1, 1, "c.nrf_usbd_task_t.NRF_USBD_TASK_STARTEPIN4", "NRF_USBD_TASK_STARTEPIN4"], [197, 1, 1, "c.nrf_usbd_task_t.NRF_USBD_TASK_STARTEPIN5", "NRF_USBD_TASK_STARTEPIN5"], [197, 1, 1, "c.nrf_usbd_task_t.NRF_USBD_TASK_STARTEPIN6", "NRF_USBD_TASK_STARTEPIN6"], [197, 1, 1, "c.nrf_usbd_task_t.NRF_USBD_TASK_STARTEPIN7", "NRF_USBD_TASK_STARTEPIN7"], [197, 1, 1, "c.nrf_usbd_task_t.NRF_USBD_TASK_STARTEPOUT0", "NRF_USBD_TASK_STARTEPOUT0"], [197, 1, 1, "c.nrf_usbd_task_t.NRF_USBD_TASK_STARTEPOUT1", "NRF_USBD_TASK_STARTEPOUT1"], [197, 1, 1, "c.nrf_usbd_task_t.NRF_USBD_TASK_STARTEPOUT2", "NRF_USBD_TASK_STARTEPOUT2"], [197, 1, 1, "c.nrf_usbd_task_t.NRF_USBD_TASK_STARTEPOUT3", "NRF_USBD_TASK_STARTEPOUT3"], [197, 1, 1, "c.nrf_usbd_task_t.NRF_USBD_TASK_STARTEPOUT4", "NRF_USBD_TASK_STARTEPOUT4"], [197, 1, 1, "c.nrf_usbd_task_t.NRF_USBD_TASK_STARTEPOUT5", "NRF_USBD_TASK_STARTEPOUT5"], [197, 1, 1, "c.nrf_usbd_task_t.NRF_USBD_TASK_STARTEPOUT6", "NRF_USBD_TASK_STARTEPOUT6"], [197, 1, 1, "c.nrf_usbd_task_t.NRF_USBD_TASK_STARTEPOUT7", "NRF_USBD_TASK_STARTEPOUT7"], [197, 1, 1, "c.nrf_usbd_task_t.NRF_USBD_TASK_STARTISOIN", "NRF_USBD_TASK_STARTISOIN"], [197, 1, 1, "c.nrf_usbd_task_t.NRF_USBD_TASK_STARTISOOUT", "NRF_USBD_TASK_STARTISOOUT"]], "nrf_usbd_task_trigger": [[197, 3, 1, "c.nrf_usbd_task_trigger", "p_reg"], [197, 3, 1, "c.nrf_usbd_task_trigger", "task"]], "nrf_usbhs_disable": [[199, 3, 1, "c.nrf_usbhs_disable", "p_reg"]], "nrf_usbhs_enable": [[199, 3, 1, "c.nrf_usbhs_enable", "p_reg"]], "nrf_usbhs_event_address_get": [[199, 3, 1, "c.nrf_usbhs_event_address_get", "event"], [199, 3, 1, "c.nrf_usbhs_event_address_get", "p_reg"]], "nrf_usbhs_event_check": [[199, 3, 1, "c.nrf_usbhs_event_check", "event"], [199, 3, 1, "c.nrf_usbhs_event_check", "p_reg"]], "nrf_usbhs_event_clear": [[199, 3, 1, "c.nrf_usbhs_event_clear", "event"], [199, 3, 1, "c.nrf_usbhs_event_clear", "p_reg"]], "nrf_usbhs_event_get_and_clear": [[199, 3, 1, "c.nrf_usbhs_event_get_and_clear", "event"], [199, 3, 1, "c.nrf_usbhs_event_get_and_clear", "p_reg"]], "nrf_usbhs_event_t": [[199, 1, 1, "c.nrf_usbhs_event_t.NRF_USBHS_EVENT_CORE", "NRF_USBHS_EVENT_CORE"]], "nrf_usbhs_int_disable": [[199, 3, 1, "c.nrf_usbhs_int_disable", "mask"], [199, 3, 1, "c.nrf_usbhs_int_disable", "p_reg"]], "nrf_usbhs_int_enable": [[199, 3, 1, "c.nrf_usbhs_int_enable", "mask"], [199, 3, 1, "c.nrf_usbhs_int_enable", "p_reg"]], "nrf_usbhs_int_enable_check": [[199, 3, 1, "c.nrf_usbhs_int_enable_check", "mask"], [199, 3, 1, "c.nrf_usbhs_int_enable_check", "p_reg"]], "nrf_usbhs_int_enable_get": [[199, 3, 1, "c.nrf_usbhs_int_enable_get", "p_reg"]], "nrf_usbhs_int_mask_t": [[199, 1, 1, "c.nrf_usbhs_int_mask_t.NRF_USBHS_INT_USBCORE_MASK", "NRF_USBHS_INT_USBCORE_MASK"]], "nrf_usbhs_task_address_get": [[199, 3, 1, "c.nrf_usbhs_task_address_get", "p_reg"], [199, 3, 1, "c.nrf_usbhs_task_address_get", "task"]], "nrf_usbhs_task_t": [[199, 1, 1, "c.nrf_usbhs_task_t.NRF_USBHS_TASK_START", "NRF_USBHS_TASK_START"]], "nrf_usbhs_task_trigger": [[199, 3, 1, "c.nrf_usbhs_task_trigger", "p_reg"], [199, 3, 1, "c.nrf_usbhs_task_trigger", "task"]], "nrf_usbreg_event_check": [[202, 3, 1, "c.nrf_usbreg_event_check", "event"], [202, 3, 1, "c.nrf_usbreg_event_check", "p_reg"]], "nrf_usbreg_event_clear": [[202, 3, 1, "c.nrf_usbreg_event_clear", "event"], [202, 3, 1, "c.nrf_usbreg_event_clear", "p_reg"]], "nrf_usbreg_event_t": [[202, 1, 1, "c.nrf_usbreg_event_t.NRF_USBREG_EVENT_USBDETECTED", "NRF_USBREG_EVENT_USBDETECTED"], [202, 1, 1, "c.nrf_usbreg_event_t.NRF_USBREG_EVENT_USBPWRRDY", "NRF_USBREG_EVENT_USBPWRRDY"], [202, 1, 1, "c.nrf_usbreg_event_t.NRF_USBREG_EVENT_USBREMOVED", "NRF_USBREG_EVENT_USBREMOVED"]], "nrf_usbreg_int_disable": [[202, 3, 1, "c.nrf_usbreg_int_disable", "mask"], [202, 3, 1, "c.nrf_usbreg_int_disable", "p_reg"]], "nrf_usbreg_int_enable": [[202, 3, 1, "c.nrf_usbreg_int_enable", "mask"], [202, 3, 1, "c.nrf_usbreg_int_enable", "p_reg"]], "nrf_usbreg_int_enable_check": [[202, 3, 1, "c.nrf_usbreg_int_enable_check", "mask"], [202, 3, 1, "c.nrf_usbreg_int_enable_check", "p_reg"]], "nrf_usbreg_int_mask_t": [[202, 1, 1, "c.nrf_usbreg_int_mask_t.NRF_USBREG_INT_USBDETECTED", "NRF_USBREG_INT_USBDETECTED"], [202, 1, 1, "c.nrf_usbreg_int_mask_t.NRF_USBREG_INT_USBPWRRDY", "NRF_USBREG_INT_USBPWRRDY"], [202, 1, 1, "c.nrf_usbreg_int_mask_t.NRF_USBREG_INT_USBREMOVED", "NRF_USBREG_INT_USBREMOVED"]], "nrf_usbreg_status_get": [[202, 3, 1, "c.nrf_usbreg_status_get", "p_reg"]], "nrf_usbreg_status_mask_t": [[202, 1, 1, "c.nrf_usbreg_status_mask_t.NRF_USBREG_STATUS_OUTPUTRDY_MASK", "NRF_USBREG_STATUS_OUTPUTRDY_MASK"], [202, 1, 1, "c.nrf_usbreg_status_mask_t.NRF_USBREG_STATUS_VBUSDETECT_MASK", "NRF_USBREG_STATUS_VBUSDETECT_MASK"]], "nrf_vdma_attributes_t": [[249, 1, 1, "c.nrf_vdma_attributes_t.NRF_VDMA_ATTRIBUTE_BUFFER_FILL", "NRF_VDMA_ATTRIBUTE_BUFFER_FILL"], [249, 1, 1, "c.nrf_vdma_attributes_t.NRF_VDMA_ATTRIBUTE_BYTE_SWAP", "NRF_VDMA_ATTRIBUTE_BYTE_SWAP"], [249, 1, 1, "c.nrf_vdma_attributes_t.NRF_VDMA_ATTRIBUTE_CRC", "NRF_VDMA_ATTRIBUTE_CRC"], [249, 1, 1, "c.nrf_vdma_attributes_t.NRF_VDMA_ATTRIBUTE_FIXED_ATTR", "NRF_VDMA_ATTRIBUTE_FIXED_ATTR"], [249, 1, 1, "c.nrf_vdma_attributes_t.NRF_VDMA_ATTRIBUTE_JOB_LIST", "NRF_VDMA_ATTRIBUTE_JOB_LIST"], [249, 1, 1, "c.nrf_vdma_attributes_t.NRF_VDMA_ATTRIBUTE_PLAIN_DATA", "NRF_VDMA_ATTRIBUTE_PLAIN_DATA"], [249, 1, 1, "c.nrf_vdma_attributes_t.NRF_VDMA_ATTRIBUTE_PLAIN_DATA_BUF_WRITE", "NRF_VDMA_ATTRIBUTE_PLAIN_DATA_BUF_WRITE"], [249, 1, 1, "c.nrf_vdma_attributes_t.NRF_VDMA_ATTRIBUTE_STATIC_ADDR", "NRF_VDMA_ATTRIBUTE_STATIC_ADDR"]], "nrf_vdma_ext_attribute_t": [[249, 1, 1, "c.nrf_vdma_ext_attribute_t.NRF_VDMA_EXT_ATTRIBUTE_EVENT_ENABLE", "NRF_VDMA_EXT_ATTRIBUTE_EVENT_ENABLE"], [249, 1, 1, "c.nrf_vdma_ext_attribute_t.NRF_VDMA_EXT_ATTRIBUTE_PERIPHERAL_MODE", "NRF_VDMA_EXT_ATTRIBUTE_PERIPHERAL_MODE"]], "nrf_vdma_job_buffer_get": [[249, 3, 1, "c.nrf_vdma_job_buffer_get", "p_job"]], "nrf_vdma_job_fill": [[249, 3, 1, "c.nrf_vdma_job_fill", "attributes"], [249, 3, 1, "c.nrf_vdma_job_fill", "p_buffer"], [249, 3, 1, "c.nrf_vdma_job_fill", "p_job"], [249, 3, 1, "c.nrf_vdma_job_fill", "size"]], "nrf_vdma_job_link": [[249, 3, 1, "c.nrf_vdma_job_link", "p_job"], [249, 3, 1, "c.nrf_vdma_job_link", "p_job_linked"]], "nrf_vdma_job_reduced_fill": [[249, 3, 1, "c.nrf_vdma_job_reduced_fill", "p_buffer"], [249, 3, 1, "c.nrf_vdma_job_reduced_fill", "p_job"]], "nrf_vdma_job_reduced_init": [[249, 3, 1, "c.nrf_vdma_job_reduced_init", "attributes"], [249, 3, 1, "c.nrf_vdma_job_reduced_init", "p_buffer"], [249, 3, 1, "c.nrf_vdma_job_reduced_init", "p_job"], [249, 3, 1, "c.nrf_vdma_job_reduced_init", "size"]], "nrf_vdma_job_size_get": [[249, 3, 1, "c.nrf_vdma_job_size_get", "p_job"]], "nrf_vdma_job_t": [[249, 6, 1, "c.nrf_vdma_job_t.attributes", "attributes"], [249, 6, 1, "c.nrf_vdma_job_t.p_buffer", "p_buffer"], [249, 6, 1, "c.nrf_vdma_job_t.size", "size"]], "nrf_vdma_job_terminate": [[249, 3, 1, "c.nrf_vdma_job_terminate", "p_job"]], "nrf_vmc_power_t": [[203, 1, 1, "c.nrf_vmc_power_t.NRF_VMC_POWER_S0", "NRF_VMC_POWER_S0"], [203, 1, 1, "c.nrf_vmc_power_t.NRF_VMC_POWER_S1", "NRF_VMC_POWER_S1"], [203, 1, 1, "c.nrf_vmc_power_t.NRF_VMC_POWER_S10", "NRF_VMC_POWER_S10"], [203, 1, 1, "c.nrf_vmc_power_t.NRF_VMC_POWER_S11", "NRF_VMC_POWER_S11"], [203, 1, 1, "c.nrf_vmc_power_t.NRF_VMC_POWER_S12", "NRF_VMC_POWER_S12"], [203, 1, 1, "c.nrf_vmc_power_t.NRF_VMC_POWER_S13", "NRF_VMC_POWER_S13"], [203, 1, 1, "c.nrf_vmc_power_t.NRF_VMC_POWER_S14", "NRF_VMC_POWER_S14"], [203, 1, 1, "c.nrf_vmc_power_t.NRF_VMC_POWER_S15", "NRF_VMC_POWER_S15"], [203, 1, 1, "c.nrf_vmc_power_t.NRF_VMC_POWER_S2", "NRF_VMC_POWER_S2"], [203, 1, 1, "c.nrf_vmc_power_t.NRF_VMC_POWER_S3", "NRF_VMC_POWER_S3"], [203, 1, 1, "c.nrf_vmc_power_t.NRF_VMC_POWER_S4", "NRF_VMC_POWER_S4"], [203, 1, 1, "c.nrf_vmc_power_t.NRF_VMC_POWER_S5", "NRF_VMC_POWER_S5"], [203, 1, 1, "c.nrf_vmc_power_t.NRF_VMC_POWER_S6", "NRF_VMC_POWER_S6"], [203, 1, 1, "c.nrf_vmc_power_t.NRF_VMC_POWER_S7", "NRF_VMC_POWER_S7"], [203, 1, 1, "c.nrf_vmc_power_t.NRF_VMC_POWER_S8", "NRF_VMC_POWER_S8"], [203, 1, 1, "c.nrf_vmc_power_t.NRF_VMC_POWER_S9", "NRF_VMC_POWER_S9"]], "nrf_vmc_ram_block_clear": [[203, 3, 1, "c.nrf_vmc_ram_block_clear", "p_reg"], [203, 3, 1, "c.nrf_vmc_ram_block_clear", "ram_block_num"]], "nrf_vmc_ram_block_config": [[203, 3, 1, "c.nrf_vmc_ram_block_config", "p_reg"], [203, 3, 1, "c.nrf_vmc_ram_block_config", "power_mask"], [203, 3, 1, "c.nrf_vmc_ram_block_config", "ram_block_num"], [203, 3, 1, "c.nrf_vmc_ram_block_config", "retention_mask"]], "nrf_vmc_ram_block_power_all_set": [[203, 3, 1, "c.nrf_vmc_ram_block_power_all_set", "p_reg"]], "nrf_vmc_ram_block_power_clear": [[203, 3, 1, "c.nrf_vmc_ram_block_power_clear", "p_reg"], [203, 3, 1, "c.nrf_vmc_ram_block_power_clear", "ram_block_num"], [203, 3, 1, "c.nrf_vmc_ram_block_power_clear", "sect_power"]], "nrf_vmc_ram_block_power_mask_get": [[203, 3, 1, "c.nrf_vmc_ram_block_power_mask_get", "p_reg"], [203, 3, 1, "c.nrf_vmc_ram_block_power_mask_get", "ram_block_num"]], "nrf_vmc_ram_block_power_set": [[203, 3, 1, "c.nrf_vmc_ram_block_power_set", "p_reg"], [203, 3, 1, "c.nrf_vmc_ram_block_power_set", "ram_block_num"], [203, 3, 1, "c.nrf_vmc_ram_block_power_set", "sect_power"]], "nrf_vmc_ram_block_retention_all_set": [[203, 3, 1, "c.nrf_vmc_ram_block_retention_all_set", "p_reg"]], "nrf_vmc_ram_block_retention_clear": [[203, 3, 1, "c.nrf_vmc_ram_block_retention_clear", "p_reg"], [203, 3, 1, "c.nrf_vmc_ram_block_retention_clear", "ram_block_num"], [203, 3, 1, "c.nrf_vmc_ram_block_retention_clear", "sect_retention"]], "nrf_vmc_ram_block_retention_mask_get": [[203, 3, 1, "c.nrf_vmc_ram_block_retention_mask_get", "p_reg"], [203, 3, 1, "c.nrf_vmc_ram_block_retention_mask_get", "ram_block_num"]], "nrf_vmc_ram_block_retention_set": [[203, 3, 1, "c.nrf_vmc_ram_block_retention_set", "p_reg"], [203, 3, 1, "c.nrf_vmc_ram_block_retention_set", "ram_block_num"], [203, 3, 1, "c.nrf_vmc_ram_block_retention_set", "sect_retention"]], "nrf_vmc_retention_t": [[203, 1, 1, "c.nrf_vmc_retention_t.NRF_VMC_RETENTION_S0", "NRF_VMC_RETENTION_S0"], [203, 1, 1, "c.nrf_vmc_retention_t.NRF_VMC_RETENTION_S1", "NRF_VMC_RETENTION_S1"], [203, 1, 1, "c.nrf_vmc_retention_t.NRF_VMC_RETENTION_S10", "NRF_VMC_RETENTION_S10"], [203, 1, 1, "c.nrf_vmc_retention_t.NRF_VMC_RETENTION_S11", "NRF_VMC_RETENTION_S11"], [203, 1, 1, "c.nrf_vmc_retention_t.NRF_VMC_RETENTION_S12", "NRF_VMC_RETENTION_S12"], [203, 1, 1, "c.nrf_vmc_retention_t.NRF_VMC_RETENTION_S13", "NRF_VMC_RETENTION_S13"], [203, 1, 1, "c.nrf_vmc_retention_t.NRF_VMC_RETENTION_S14", "NRF_VMC_RETENTION_S14"], [203, 1, 1, "c.nrf_vmc_retention_t.NRF_VMC_RETENTION_S15", "NRF_VMC_RETENTION_S15"], [203, 1, 1, "c.nrf_vmc_retention_t.NRF_VMC_RETENTION_S2", "NRF_VMC_RETENTION_S2"], [203, 1, 1, "c.nrf_vmc_retention_t.NRF_VMC_RETENTION_S3", "NRF_VMC_RETENTION_S3"], [203, 1, 1, "c.nrf_vmc_retention_t.NRF_VMC_RETENTION_S4", "NRF_VMC_RETENTION_S4"], [203, 1, 1, "c.nrf_vmc_retention_t.NRF_VMC_RETENTION_S5", "NRF_VMC_RETENTION_S5"], [203, 1, 1, "c.nrf_vmc_retention_t.NRF_VMC_RETENTION_S6", "NRF_VMC_RETENTION_S6"], [203, 1, 1, "c.nrf_vmc_retention_t.NRF_VMC_RETENTION_S7", "NRF_VMC_RETENTION_S7"], [203, 1, 1, "c.nrf_vmc_retention_t.NRF_VMC_RETENTION_S8", "NRF_VMC_RETENTION_S8"], [203, 1, 1, "c.nrf_vmc_retention_t.NRF_VMC_RETENTION_S9", "NRF_VMC_RETENTION_S9"]], "nrf_vpr_clic_attr_t": [[205, 6, 1, "c.nrf_vpr_clic_attr_t.hw_vectoring", "hw_vectoring"], [205, 6, 1, "c.nrf_vpr_clic_attr_t.privilege", "privilege"], [205, 6, 1, "c.nrf_vpr_clic_attr_t.trigger", "trigger"]], "nrf_vpr_clic_config_get": [[205, 3, 1, "c.nrf_vpr_clic_config_get", "p_config"], [205, 3, 1, "c.nrf_vpr_clic_config_get", "p_reg"]], "nrf_vpr_clic_config_t": [[205, 6, 1, "c.nrf_vpr_clic_config_t.hw_vectoring", "hw_vectoring"], [205, 6, 1, "c.nrf_vpr_clic_config_t.level_encoding", "level_encoding"], [205, 6, 1, "c.nrf_vpr_clic_config_t.privilege_mode", "privilege_mode"]], "nrf_vpr_clic_info_get": [[205, 3, 1, "c.nrf_vpr_clic_info_get", "p_info"], [205, 3, 1, "c.nrf_vpr_clic_info_get", "p_reg"]], "nrf_vpr_clic_info_t": [[205, 6, 1, "c.nrf_vpr_clic_info_t.interrupt_count", "interrupt_count"], [205, 6, 1, "c.nrf_vpr_clic_info_t.trigger_count", "trigger_count"], [205, 6, 1, "c.nrf_vpr_clic_info_t.version", "version"]], "nrf_vpr_clic_int_attr_get": [[205, 3, 1, "c.nrf_vpr_clic_int_attr_get", "irq_num"], [205, 3, 1, "c.nrf_vpr_clic_int_attr_get", "p_attr"], [205, 3, 1, "c.nrf_vpr_clic_int_attr_get", "p_reg"]], "nrf_vpr_clic_int_enable_check": [[205, 3, 1, "c.nrf_vpr_clic_int_enable_check", "irq_num"], [205, 3, 1, "c.nrf_vpr_clic_int_enable_check", "p_reg"]], "nrf_vpr_clic_int_enable_set": [[205, 3, 1, "c.nrf_vpr_clic_int_enable_set", "enable"], [205, 3, 1, "c.nrf_vpr_clic_int_enable_set", "irq_num"], [205, 3, 1, "c.nrf_vpr_clic_int_enable_set", "p_reg"]], "nrf_vpr_clic_int_pending_check": [[205, 3, 1, "c.nrf_vpr_clic_int_pending_check", "irq_num"], [205, 3, 1, "c.nrf_vpr_clic_int_pending_check", "p_reg"]], "nrf_vpr_clic_int_pending_clear": [[205, 3, 1, "c.nrf_vpr_clic_int_pending_clear", "irq_num"], [205, 3, 1, "c.nrf_vpr_clic_int_pending_clear", "p_reg"]], "nrf_vpr_clic_int_pending_set": [[205, 3, 1, "c.nrf_vpr_clic_int_pending_set", "irq_num"], [205, 3, 1, "c.nrf_vpr_clic_int_pending_set", "p_reg"]], "nrf_vpr_clic_int_priority_get": [[205, 3, 1, "c.nrf_vpr_clic_int_priority_get", "irq_num"], [205, 3, 1, "c.nrf_vpr_clic_int_priority_get", "p_reg"]], "nrf_vpr_clic_int_priority_set": [[205, 3, 1, "c.nrf_vpr_clic_int_priority_set", "irq_num"], [205, 3, 1, "c.nrf_vpr_clic_int_priority_set", "p_reg"], [205, 3, 1, "c.nrf_vpr_clic_int_priority_set", "priority"]], "nrf_vpr_clic_mode_t": [[205, 1, 1, "c.nrf_vpr_clic_mode_t.NRF_VPR_CLIC_MODE_M", "NRF_VPR_CLIC_MODE_M"]], "nrf_vpr_clic_priority_t": [[205, 1, 1, "c.nrf_vpr_clic_priority_t.NRF_VPR_CLIC_PRIORITY_LEVEL0", "NRF_VPR_CLIC_PRIORITY_LEVEL0"], [205, 1, 1, "c.nrf_vpr_clic_priority_t.NRF_VPR_CLIC_PRIORITY_LEVEL1", "NRF_VPR_CLIC_PRIORITY_LEVEL1"], [205, 1, 1, "c.nrf_vpr_clic_priority_t.NRF_VPR_CLIC_PRIORITY_LEVEL2", "NRF_VPR_CLIC_PRIORITY_LEVEL2"], [205, 1, 1, "c.nrf_vpr_clic_priority_t.NRF_VPR_CLIC_PRIORITY_LEVEL3", "NRF_VPR_CLIC_PRIORITY_LEVEL3"]], "nrf_vpr_clic_priv_t": [[205, 1, 1, "c.nrf_vpr_clic_priv_t.NRF_VPR_CLIC_PRIV_MACHINE", "NRF_VPR_CLIC_PRIV_MACHINE"]], "nrf_vpr_clic_trigger_t": [[205, 1, 1, "c.nrf_vpr_clic_trigger_t.NRF_VPR_CLIC_TRIGGER_EDGE_POS", "NRF_VPR_CLIC_TRIGGER_EDGE_POS"]], "nrf_vpr_cpurun_get": [[210, 3, 1, "c.nrf_vpr_cpurun_get", "p_reg"]], "nrf_vpr_cpurun_set": [[210, 3, 1, "c.nrf_vpr_cpurun_set", "enable"], [210, 3, 1, "c.nrf_vpr_cpurun_set", "p_reg"]], "nrf_vpr_csr_clic_round_robin_set": [[206, 3, 1, "c.nrf_vpr_csr_clic_round_robin_set", "enable"]], "nrf_vpr_csr_cnt_irq_enable_set": [[206, 3, 1, "c.nrf_vpr_csr_cnt_irq_enable_set", "enable"]], "nrf_vpr_csr_int_threshold_t": [[206, 1, 1, "c.nrf_vpr_csr_int_threshold_t.NRF_VPR_CSR_INT_THRESHOLD_DISABLED", "NRF_VPR_CSR_INT_THRESHOLD_DISABLED"], [206, 1, 1, "c.nrf_vpr_csr_int_threshold_t.NRF_VPR_CSR_INT_THRESHOLD_LEVEL0", "NRF_VPR_CSR_INT_THRESHOLD_LEVEL0"], [206, 1, 1, "c.nrf_vpr_csr_int_threshold_t.NRF_VPR_CSR_INT_THRESHOLD_LEVEL1", "NRF_VPR_CSR_INT_THRESHOLD_LEVEL1"], [206, 1, 1, "c.nrf_vpr_csr_int_threshold_t.NRF_VPR_CSR_INT_THRESHOLD_LEVEL2", "NRF_VPR_CSR_INT_THRESHOLD_LEVEL2"], [206, 1, 1, "c.nrf_vpr_csr_int_threshold_t.NRF_VPR_CSR_INT_THRESHOLD_LEVEL3", "NRF_VPR_CSR_INT_THRESHOLD_LEVEL3"]], "nrf_vpr_csr_machine_cycle_counter_enable_set": [[206, 3, 1, "c.nrf_vpr_csr_machine_cycle_counter_enable_set", "enable"]], "nrf_vpr_csr_machine_instruction_counter_enable_set": [[206, 3, 1, "c.nrf_vpr_csr_machine_instruction_counter_enable_set", "enable"]], "nrf_vpr_csr_machine_interrupt_threshold_set": [[206, 3, 1, "c.nrf_vpr_csr_machine_interrupt_threshold_set", "th"]], "nrf_vpr_csr_machine_trap_vector_table_addr_set": [[206, 3, 1, "c.nrf_vpr_csr_machine_trap_vector_table_addr_set", "address"]], "nrf_vpr_csr_return_to_sleep_set": [[206, 3, 1, "c.nrf_vpr_csr_return_to_sleep_set", "enable"]], "nrf_vpr_csr_rtperiph_enable_set": [[206, 3, 1, "c.nrf_vpr_csr_rtperiph_enable_set", "enable"]], "nrf_vpr_csr_sleep_state_set": [[206, 3, 1, "c.nrf_vpr_csr_sleep_state_set", "state"]], "nrf_vpr_csr_sleep_state_t": [[206, 1, 1, "c.nrf_vpr_csr_sleep_state_t.NRF_VPR_CSR_SLEEP_STATE_DEEP_SLEEP", "NRF_VPR_CSR_SLEEP_STATE_DEEP_SLEEP"], [206, 1, 1, "c.nrf_vpr_csr_sleep_state_t.NRF_VPR_CSR_SLEEP_STATE_HIBERNATE", "NRF_VPR_CSR_SLEEP_STATE_HIBERNATE"], [206, 1, 1, "c.nrf_vpr_csr_sleep_state_t.NRF_VPR_CSR_SLEEP_STATE_RESET", "NRF_VPR_CSR_SLEEP_STATE_RESET"], [206, 1, 1, "c.nrf_vpr_csr_sleep_state_t.NRF_VPR_CSR_SLEEP_STATE_SLEEP", "NRF_VPR_CSR_SLEEP_STATE_SLEEP"], [206, 1, 1, "c.nrf_vpr_csr_sleep_state_t.NRF_VPR_CSR_SLEEP_STATE_WAIT", "NRF_VPR_CSR_SLEEP_STATE_WAIT"]], "nrf_vpr_csr_stack_on_sleep_set": [[206, 3, 1, "c.nrf_vpr_csr_stack_on_sleep_set", "enable"]], "nrf_vpr_csr_trap_cause_t": [[206, 1, 1, "c.nrf_vpr_csr_trap_cause_t.NRF_VPR_CSR_TRAP_CAUSE_BREAKPOINT", "NRF_VPR_CSR_TRAP_CAUSE_BREAKPOINT"], [206, 1, 1, "c.nrf_vpr_csr_trap_cause_t.NRF_VPR_CSR_TRAP_CAUSE_ECALL_M", "NRF_VPR_CSR_TRAP_CAUSE_ECALL_M"], [206, 1, 1, "c.nrf_vpr_csr_trap_cause_t.NRF_VPR_CSR_TRAP_CAUSE_INSTR_ACCESS_FAULT", "NRF_VPR_CSR_TRAP_CAUSE_INSTR_ACCESS_FAULT"], [206, 1, 1, "c.nrf_vpr_csr_trap_cause_t.NRF_VPR_CSR_TRAP_CAUSE_INSTR_ADDR_MISALIGNED", "NRF_VPR_CSR_TRAP_CAUSE_INSTR_ADDR_MISALIGNED"], [206, 1, 1, "c.nrf_vpr_csr_trap_cause_t.NRF_VPR_CSR_TRAP_CAUSE_INSTR_ILLEGAL", "NRF_VPR_CSR_TRAP_CAUSE_INSTR_ILLEGAL"], [206, 1, 1, "c.nrf_vpr_csr_trap_cause_t.NRF_VPR_CSR_TRAP_CAUSE_LOAD_ACCESS_FAULT", "NRF_VPR_CSR_TRAP_CAUSE_LOAD_ACCESS_FAULT"], [206, 1, 1, "c.nrf_vpr_csr_trap_cause_t.NRF_VPR_CSR_TRAP_CAUSE_LOAD_ADDR_MISALIGNED", "NRF_VPR_CSR_TRAP_CAUSE_LOAD_ADDR_MISALIGNED"], [206, 1, 1, "c.nrf_vpr_csr_trap_cause_t.NRF_VPR_CSR_TRAP_CAUSE_LOAD_TIMEOUT_FAULT", "NRF_VPR_CSR_TRAP_CAUSE_LOAD_TIMEOUT_FAULT"], [206, 1, 1, "c.nrf_vpr_csr_trap_cause_t.NRF_VPR_CSR_TRAP_CAUSE_STACKING_BUS_FAULT", "NRF_VPR_CSR_TRAP_CAUSE_STACKING_BUS_FAULT"], [206, 1, 1, "c.nrf_vpr_csr_trap_cause_t.NRF_VPR_CSR_TRAP_CAUSE_STACKING_UNALIGNED", "NRF_VPR_CSR_TRAP_CAUSE_STACKING_UNALIGNED"], [206, 1, 1, "c.nrf_vpr_csr_trap_cause_t.NRF_VPR_CSR_TRAP_CAUSE_STACKING_UNALIGNED_EX", "NRF_VPR_CSR_TRAP_CAUSE_STACKING_UNALIGNED_EX"], [206, 1, 1, "c.nrf_vpr_csr_trap_cause_t.NRF_VPR_CSR_TRAP_CAUSE_STORE_ACCESS_FAULT", "NRF_VPR_CSR_TRAP_CAUSE_STORE_ACCESS_FAULT"], [206, 1, 1, "c.nrf_vpr_csr_trap_cause_t.NRF_VPR_CSR_TRAP_CAUSE_STORE_ADDR_MISALIGNED", "NRF_VPR_CSR_TRAP_CAUSE_STORE_ADDR_MISALIGNED"], [206, 1, 1, "c.nrf_vpr_csr_trap_cause_t.NRF_VPR_CSR_TRAP_CAUSE_STORE_TIMEOUT_FAULT", "NRF_VPR_CSR_TRAP_CAUSE_STORE_TIMEOUT_FAULT"], [206, 1, 1, "c.nrf_vpr_csr_trap_cause_t.NRF_VPR_CSR_TRAP_CAUSE_UNSTACKING_BUS_FAULT", "NRF_VPR_CSR_TRAP_CAUSE_UNSTACKING_BUS_FAULT"], [206, 1, 1, "c.nrf_vpr_csr_trap_cause_t.NRF_VPR_CSR_TRAP_CAUSE_UNSTACKING_UNALIGNED", "NRF_VPR_CSR_TRAP_CAUSE_UNSTACKING_UNALIGNED"], [206, 1, 1, "c.nrf_vpr_csr_trap_cause_t.NRF_VPR_CSR_TRAP_CAUSE_VECTOR_FAULT", "NRF_VPR_CSR_TRAP_CAUSE_VECTOR_FAULT"]], "nrf_vpr_csr_unrecoverable_return_set": [[206, 3, 1, "c.nrf_vpr_csr_unrecoverable_return_set", "enable"]], "nrf_vpr_csr_vevif_events_buffered_set": [[207, 3, 1, "c.nrf_vpr_csr_vevif_events_buffered_set", "value"]], "nrf_vpr_csr_vevif_events_set": [[207, 3, 1, "c.nrf_vpr_csr_vevif_events_set", "value"]], "nrf_vpr_csr_vevif_events_trigger": [[207, 3, 1, "c.nrf_vpr_csr_vevif_events_trigger", "mask"]], "nrf_vpr_csr_vevif_int_disable": [[207, 3, 1, "c.nrf_vpr_csr_vevif_int_disable", "mask"]], "nrf_vpr_csr_vevif_int_enable": [[207, 3, 1, "c.nrf_vpr_csr_vevif_int_enable", "mask"]], "nrf_vpr_csr_vevif_int_enable_check": [[207, 3, 1, "c.nrf_vpr_csr_vevif_int_enable_check", "mask"]], "nrf_vpr_csr_vevif_publish_set": [[207, 3, 1, "c.nrf_vpr_csr_vevif_publish_set", "value"]], "nrf_vpr_csr_vevif_subscribe_set": [[207, 3, 1, "c.nrf_vpr_csr_vevif_subscribe_set", "value"]], "nrf_vpr_csr_vevif_tasks_clear": [[207, 3, 1, "c.nrf_vpr_csr_vevif_tasks_clear", "mask"]], "nrf_vpr_csr_vevif_tasks_set": [[207, 3, 1, "c.nrf_vpr_csr_vevif_tasks_set", "value"]], "nrf_vpr_csr_vio_dir_buffered_set": [[208, 3, 1, "c.nrf_vpr_csr_vio_dir_buffered_set", "value"]], "nrf_vpr_csr_vio_dir_buffered_toggle_set": [[208, 3, 1, "c.nrf_vpr_csr_vio_dir_buffered_toggle_set", "mask"]], "nrf_vpr_csr_vio_dir_set": [[208, 3, 1, "c.nrf_vpr_csr_vio_dir_set", "value"]], "nrf_vpr_csr_vio_dir_toggle_set": [[208, 3, 1, "c.nrf_vpr_csr_vio_dir_toggle_set", "mask"]], "nrf_vpr_csr_vio_dirout_buffered_set": [[208, 3, 1, "c.nrf_vpr_csr_vio_dirout_buffered_set", "value"]], "nrf_vpr_csr_vio_dirout_set": [[208, 3, 1, "c.nrf_vpr_csr_vio_dirout_set", "value"]], "nrf_vpr_csr_vio_dirout_toggle_buffered_set": [[208, 3, 1, "c.nrf_vpr_csr_vio_dirout_toggle_buffered_set", "mask"]], "nrf_vpr_csr_vio_dirout_toggle_set": [[208, 3, 1, "c.nrf_vpr_csr_vio_dirout_toggle_set", "mask"]], "nrf_vpr_csr_vio_mode_in_set": [[208, 3, 1, "c.nrf_vpr_csr_vio_mode_in_set", "mode"]], "nrf_vpr_csr_vio_mode_in_t": [[208, 1, 1, "c.nrf_vpr_csr_vio_mode_in_t.NRF_VPR_CSR_VIO_MODE_IN_CONTINUOUS", "NRF_VPR_CSR_VIO_MODE_IN_CONTINUOUS"], [208, 1, 1, "c.nrf_vpr_csr_vio_mode_in_t.NRF_VPR_CSR_VIO_MODE_IN_EVENT", "NRF_VPR_CSR_VIO_MODE_IN_EVENT"]], "nrf_vpr_csr_vio_mode_out_get": [[208, 3, 1, "c.nrf_vpr_csr_vio_mode_out_get", "p_mode"]], "nrf_vpr_csr_vio_mode_out_set": [[208, 3, 1, "c.nrf_vpr_csr_vio_mode_out_set", "p_mode"]], "nrf_vpr_csr_vio_mode_out_t": [[208, 6, 1, "c.nrf_vpr_csr_vio_mode_out_t.shift_enable", "shift_enable"], [208, 6, 1, "c.nrf_vpr_csr_vio_mode_out_t.shift_size", "shift_size"]], "nrf_vpr_csr_vio_out_buffered_set": [[208, 3, 1, "c.nrf_vpr_csr_vio_out_buffered_set", "value"]], "nrf_vpr_csr_vio_out_combined_set": [[208, 3, 1, "c.nrf_vpr_csr_vio_out_combined_set", "value"]], "nrf_vpr_csr_vio_out_combined_toggle_set": [[208, 3, 1, "c.nrf_vpr_csr_vio_out_combined_toggle_set", "mask"]], "nrf_vpr_csr_vio_out_set": [[208, 3, 1, "c.nrf_vpr_csr_vio_out_set", "value"]], "nrf_vpr_csr_vio_out_shift_t": [[208, 1, 1, "c.nrf_vpr_csr_vio_out_shift_t.NRF_VPR_CSR_VIO_OUT_SHIFT_1", "NRF_VPR_CSR_VIO_OUT_SHIFT_1"], [208, 1, 1, "c.nrf_vpr_csr_vio_out_shift_t.NRF_VPR_CSR_VIO_OUT_SHIFT_16", "NRF_VPR_CSR_VIO_OUT_SHIFT_16"], [208, 1, 1, "c.nrf_vpr_csr_vio_out_shift_t.NRF_VPR_CSR_VIO_OUT_SHIFT_2", "NRF_VPR_CSR_VIO_OUT_SHIFT_2"], [208, 1, 1, "c.nrf_vpr_csr_vio_out_shift_t.NRF_VPR_CSR_VIO_OUT_SHIFT_4", "NRF_VPR_CSR_VIO_OUT_SHIFT_4"], [208, 1, 1, "c.nrf_vpr_csr_vio_out_shift_t.NRF_VPR_CSR_VIO_OUT_SHIFT_8", "NRF_VPR_CSR_VIO_OUT_SHIFT_8"]], "nrf_vpr_csr_vio_out_toggle_buffered_set": [[208, 3, 1, "c.nrf_vpr_csr_vio_out_toggle_buffered_set", "mask"]], "nrf_vpr_csr_vio_out_toggle_set": [[208, 3, 1, "c.nrf_vpr_csr_vio_out_toggle_set", "mask"]], "nrf_vpr_csr_vtim_combined_counter_add_set": [[209, 3, 1, "c.nrf_vpr_csr_vtim_combined_counter_add_set", "value"]], "nrf_vpr_csr_vtim_combined_counter_set": [[209, 3, 1, "c.nrf_vpr_csr_vtim_combined_counter_set", "value"]], "nrf_vpr_csr_vtim_combined_counter_top_set": [[209, 3, 1, "c.nrf_vpr_csr_vtim_combined_counter_top_set", "value"]], "nrf_vpr_csr_vtim_count_mode_set": [[209, 3, 1, "c.nrf_vpr_csr_vtim_count_mode_set", "counter"], [209, 3, 1, "c.nrf_vpr_csr_vtim_count_mode_set", "mode"]], "nrf_vpr_csr_vtim_count_t": [[209, 1, 1, "c.nrf_vpr_csr_vtim_count_t.NRF_VPR_CSR_VTIM_COUNT_RELOAD", "NRF_VPR_CSR_VTIM_COUNT_RELOAD"], [209, 1, 1, "c.nrf_vpr_csr_vtim_count_t.NRF_VPR_CSR_VTIM_COUNT_STOP", "NRF_VPR_CSR_VTIM_COUNT_STOP"], [209, 1, 1, "c.nrf_vpr_csr_vtim_count_t.NRF_VPR_CSR_VTIM_COUNT_TRIGGER_COMBINED", "NRF_VPR_CSR_VTIM_COUNT_TRIGGER_COMBINED"], [209, 1, 1, "c.nrf_vpr_csr_vtim_count_t.NRF_VPR_CSR_VTIM_COUNT_WRAP", "NRF_VPR_CSR_VTIM_COUNT_WRAP"]], "nrf_vpr_csr_vtim_simple_counter_add_set": [[209, 3, 1, "c.nrf_vpr_csr_vtim_simple_counter_add_set", "counter"], [209, 3, 1, "c.nrf_vpr_csr_vtim_simple_counter_add_set", "value"]], "nrf_vpr_csr_vtim_simple_counter_get": [[209, 3, 1, "c.nrf_vpr_csr_vtim_simple_counter_get", "counter"]], "nrf_vpr_csr_vtim_simple_counter_set": [[209, 3, 1, "c.nrf_vpr_csr_vtim_simple_counter_set", "counter"], [209, 3, 1, "c.nrf_vpr_csr_vtim_simple_counter_set", "value"]], "nrf_vpr_csr_vtim_simple_counter_top_get": [[209, 3, 1, "c.nrf_vpr_csr_vtim_simple_counter_top_get", "counter"]], "nrf_vpr_csr_vtim_simple_counter_top_set": [[209, 3, 1, "c.nrf_vpr_csr_vtim_simple_counter_top_set", "counter"], [209, 3, 1, "c.nrf_vpr_csr_vtim_simple_counter_top_set", "value"]], "nrf_vpr_csr_vtim_simple_wait_set": [[209, 3, 1, "c.nrf_vpr_csr_vtim_simple_wait_set", "counter"], [209, 3, 1, "c.nrf_vpr_csr_vtim_simple_wait_set", "value"], [209, 3, 1, "c.nrf_vpr_csr_vtim_simple_wait_set", "write"]], "nrf_vpr_cst_vtim_count_mode_get": [[209, 3, 1, "c.nrf_vpr_cst_vtim_count_mode_get", "counter"]], "nrf_vpr_debugif_dmcontrol_get": [[210, 3, 1, "c.nrf_vpr_debugif_dmcontrol_get", "p_reg"], [210, 3, 1, "c.nrf_vpr_debugif_dmcontrol_get", "signal"]], "nrf_vpr_debugif_dmcontrol_mask_set": [[210, 3, 1, "c.nrf_vpr_debugif_dmcontrol_mask_set", "mask"], [210, 3, 1, "c.nrf_vpr_debugif_dmcontrol_mask_set", "p_reg"]], "nrf_vpr_debugif_dmcontrol_set": [[210, 3, 1, "c.nrf_vpr_debugif_dmcontrol_set", "enable"], [210, 3, 1, "c.nrf_vpr_debugif_dmcontrol_set", "p_reg"], [210, 3, 1, "c.nrf_vpr_debugif_dmcontrol_set", "signal"]], "nrf_vpr_dmcontrol_mask_t": [[210, 1, 1, "c.nrf_vpr_dmcontrol_mask_t.NRF_VPR_DMCONTROL_DMACTIVE_MASK", "NRF_VPR_DMCONTROL_DMACTIVE_MASK"], [210, 1, 1, "c.nrf_vpr_dmcontrol_mask_t.NRF_VPR_DMCONTROL_NDMRESET_MASK", "NRF_VPR_DMCONTROL_NDMRESET_MASK"]], "nrf_vpr_dmcontrol_t": [[210, 1, 1, "c.nrf_vpr_dmcontrol_t.NRF_VPR_DMCONTROL_DMACTIVE", "NRF_VPR_DMCONTROL_DMACTIVE"], [210, 1, 1, "c.nrf_vpr_dmcontrol_t.NRF_VPR_DMCONTROL_NDMRESET", "NRF_VPR_DMCONTROL_NDMRESET"]], "nrf_vpr_event_address_get": [[210, 3, 1, "c.nrf_vpr_event_address_get", "event"], [210, 3, 1, "c.nrf_vpr_event_address_get", "p_reg"]], "nrf_vpr_event_check": [[210, 3, 1, "c.nrf_vpr_event_check", "event"], [210, 3, 1, "c.nrf_vpr_event_check", "p_reg"]], "nrf_vpr_event_clear": [[210, 3, 1, "c.nrf_vpr_event_clear", "event"], [210, 3, 1, "c.nrf_vpr_event_clear", "p_reg"]], "nrf_vpr_event_t": [[210, 1, 1, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_0", "NRF_VPR_EVENT_TRIGGERED_0"], [210, 1, 1, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_1", "NRF_VPR_EVENT_TRIGGERED_1"], [210, 1, 1, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_10", "NRF_VPR_EVENT_TRIGGERED_10"], [210, 1, 1, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_11", "NRF_VPR_EVENT_TRIGGERED_11"], [210, 1, 1, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_12", "NRF_VPR_EVENT_TRIGGERED_12"], [210, 1, 1, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_13", "NRF_VPR_EVENT_TRIGGERED_13"], [210, 1, 1, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_14", "NRF_VPR_EVENT_TRIGGERED_14"], [210, 1, 1, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_15", "NRF_VPR_EVENT_TRIGGERED_15"], [210, 1, 1, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_16", "NRF_VPR_EVENT_TRIGGERED_16"], [210, 1, 1, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_17", "NRF_VPR_EVENT_TRIGGERED_17"], [210, 1, 1, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_18", "NRF_VPR_EVENT_TRIGGERED_18"], [210, 1, 1, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_19", "NRF_VPR_EVENT_TRIGGERED_19"], [210, 1, 1, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_2", "NRF_VPR_EVENT_TRIGGERED_2"], [210, 1, 1, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_20", "NRF_VPR_EVENT_TRIGGERED_20"], [210, 1, 1, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_21", "NRF_VPR_EVENT_TRIGGERED_21"], [210, 1, 1, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_22", "NRF_VPR_EVENT_TRIGGERED_22"], [210, 1, 1, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_3", "NRF_VPR_EVENT_TRIGGERED_3"], [210, 1, 1, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_4", "NRF_VPR_EVENT_TRIGGERED_4"], [210, 1, 1, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_5", "NRF_VPR_EVENT_TRIGGERED_5"], [210, 1, 1, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_6", "NRF_VPR_EVENT_TRIGGERED_6"], [210, 1, 1, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_7", "NRF_VPR_EVENT_TRIGGERED_7"], [210, 1, 1, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_8", "NRF_VPR_EVENT_TRIGGERED_8"], [210, 1, 1, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_9", "NRF_VPR_EVENT_TRIGGERED_9"]], "nrf_vpr_initpc_get": [[210, 3, 1, "c.nrf_vpr_initpc_get", "p_reg"]], "nrf_vpr_initpc_set": [[210, 3, 1, "c.nrf_vpr_initpc_set", "p_reg"], [210, 3, 1, "c.nrf_vpr_initpc_set", "pc"]], "nrf_vpr_int_disable": [[210, 3, 1, "c.nrf_vpr_int_disable", "mask"], [210, 3, 1, "c.nrf_vpr_int_disable", "p_reg"]], "nrf_vpr_int_enable": [[210, 3, 1, "c.nrf_vpr_int_enable", "mask"], [210, 3, 1, "c.nrf_vpr_int_enable", "p_reg"]], "nrf_vpr_int_enable_check": [[210, 3, 1, "c.nrf_vpr_int_enable_check", "mask"], [210, 3, 1, "c.nrf_vpr_int_enable_check", "p_reg"]], "nrf_vpr_int_mask_t": [[210, 1, 1, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_0_MASK", "NRF_VPR_INT_TRIGGERED_0_MASK"], [210, 1, 1, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_10_MASK", "NRF_VPR_INT_TRIGGERED_10_MASK"], [210, 1, 1, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_11_MASK", "NRF_VPR_INT_TRIGGERED_11_MASK"], [210, 1, 1, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_12_MASK", "NRF_VPR_INT_TRIGGERED_12_MASK"], [210, 1, 1, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_13_MASK", "NRF_VPR_INT_TRIGGERED_13_MASK"], [210, 1, 1, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_14_MASK", "NRF_VPR_INT_TRIGGERED_14_MASK"], [210, 1, 1, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_15_MASK", "NRF_VPR_INT_TRIGGERED_15_MASK"], [210, 1, 1, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_16_MASK", "NRF_VPR_INT_TRIGGERED_16_MASK"], [210, 1, 1, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_17_MASK", "NRF_VPR_INT_TRIGGERED_17_MASK"], [210, 1, 1, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_18_MASK", "NRF_VPR_INT_TRIGGERED_18_MASK"], [210, 1, 1, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_19_MASK", "NRF_VPR_INT_TRIGGERED_19_MASK"], [210, 1, 1, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_1_MASK", "NRF_VPR_INT_TRIGGERED_1_MASK"], [210, 1, 1, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_20_MASK", "NRF_VPR_INT_TRIGGERED_20_MASK"], [210, 1, 1, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_21_MASK", "NRF_VPR_INT_TRIGGERED_21_MASK"], [210, 1, 1, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_22_MASK", "NRF_VPR_INT_TRIGGERED_22_MASK"], [210, 1, 1, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_2_MASK", "NRF_VPR_INT_TRIGGERED_2_MASK"], [210, 1, 1, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_3_MASK", "NRF_VPR_INT_TRIGGERED_3_MASK"], [210, 1, 1, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_4_MASK", "NRF_VPR_INT_TRIGGERED_4_MASK"], [210, 1, 1, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_5_MASK", "NRF_VPR_INT_TRIGGERED_5_MASK"], [210, 1, 1, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_6_MASK", "NRF_VPR_INT_TRIGGERED_6_MASK"], [210, 1, 1, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_7_MASK", "NRF_VPR_INT_TRIGGERED_7_MASK"], [210, 1, 1, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_8_MASK", "NRF_VPR_INT_TRIGGERED_8_MASK"], [210, 1, 1, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_9_MASK", "NRF_VPR_INT_TRIGGERED_9_MASK"]], "nrf_vpr_task_address_get": [[210, 3, 1, "c.nrf_vpr_task_address_get", "p_reg"], [210, 3, 1, "c.nrf_vpr_task_address_get", "task"]], "nrf_vpr_task_t": [[210, 1, 1, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_0", "NRF_VPR_TASK_TRIGGER_0"], [210, 1, 1, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_1", "NRF_VPR_TASK_TRIGGER_1"], [210, 1, 1, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_10", "NRF_VPR_TASK_TRIGGER_10"], [210, 1, 1, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_11", "NRF_VPR_TASK_TRIGGER_11"], [210, 1, 1, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_12", "NRF_VPR_TASK_TRIGGER_12"], [210, 1, 1, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_13", "NRF_VPR_TASK_TRIGGER_13"], [210, 1, 1, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_14", "NRF_VPR_TASK_TRIGGER_14"], [210, 1, 1, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_15", "NRF_VPR_TASK_TRIGGER_15"], [210, 1, 1, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_16", "NRF_VPR_TASK_TRIGGER_16"], [210, 1, 1, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_17", "NRF_VPR_TASK_TRIGGER_17"], [210, 1, 1, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_18", "NRF_VPR_TASK_TRIGGER_18"], [210, 1, 1, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_19", "NRF_VPR_TASK_TRIGGER_19"], [210, 1, 1, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_2", "NRF_VPR_TASK_TRIGGER_2"], [210, 1, 1, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_20", "NRF_VPR_TASK_TRIGGER_20"], [210, 1, 1, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_21", "NRF_VPR_TASK_TRIGGER_21"], [210, 1, 1, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_22", "NRF_VPR_TASK_TRIGGER_22"], [210, 1, 1, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_3", "NRF_VPR_TASK_TRIGGER_3"], [210, 1, 1, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_4", "NRF_VPR_TASK_TRIGGER_4"], [210, 1, 1, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_5", "NRF_VPR_TASK_TRIGGER_5"], [210, 1, 1, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_6", "NRF_VPR_TASK_TRIGGER_6"], [210, 1, 1, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_7", "NRF_VPR_TASK_TRIGGER_7"], [210, 1, 1, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_8", "NRF_VPR_TASK_TRIGGER_8"], [210, 1, 1, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_9", "NRF_VPR_TASK_TRIGGER_9"]], "nrf_vpr_task_trigger": [[210, 3, 1, "c.nrf_vpr_task_trigger", "p_reg"], [210, 3, 1, "c.nrf_vpr_task_trigger", "task"]], "nrf_vpr_trigger_task_get": [[210, 3, 1, "c.nrf_vpr_trigger_task_get", "index"]], "nrf_vpr_triggered_event_get": [[210, 3, 1, "c.nrf_vpr_triggered_event_get", "index"]], "nrf_vreqctrl_radio_high_voltage_check": [[214, 3, 1, "c.nrf_vreqctrl_radio_high_voltage_check", "p_reg"]], "nrf_vreqctrl_radio_high_voltage_set": [[214, 3, 1, "c.nrf_vreqctrl_radio_high_voltage_set", "enable"], [214, 3, 1, "c.nrf_vreqctrl_radio_high_voltage_set", "p_reg"]], "nrf_wdt_behaviour_mask_t": [[216, 1, 1, "c.nrf_wdt_behaviour_mask_t.NRF_WDT_BEHAVIOUR_RUN_HALT_MASK", "NRF_WDT_BEHAVIOUR_RUN_HALT_MASK"], [216, 1, 1, "c.nrf_wdt_behaviour_mask_t.NRF_WDT_BEHAVIOUR_RUN_SLEEP_MASK", "NRF_WDT_BEHAVIOUR_RUN_SLEEP_MASK"], [216, 1, 1, "c.nrf_wdt_behaviour_mask_t.NRF_WDT_BEHAVIOUR_STOP_ENABLE_MASK", "NRF_WDT_BEHAVIOUR_STOP_ENABLE_MASK"]], "nrf_wdt_behaviour_set": [[216, 3, 1, "c.nrf_wdt_behaviour_set", "mask"], [216, 3, 1, "c.nrf_wdt_behaviour_set", "p_reg"]], "nrf_wdt_event_address_get": [[216, 3, 1, "c.nrf_wdt_event_address_get", "event"], [216, 3, 1, "c.nrf_wdt_event_address_get", "p_reg"]], "nrf_wdt_event_check": [[216, 3, 1, "c.nrf_wdt_event_check", "event"], [216, 3, 1, "c.nrf_wdt_event_check", "p_reg"]], "nrf_wdt_event_clear": [[216, 3, 1, "c.nrf_wdt_event_clear", "event"], [216, 3, 1, "c.nrf_wdt_event_clear", "p_reg"]], "nrf_wdt_event_t": [[216, 1, 1, "c.nrf_wdt_event_t.NRF_WDT_EVENT_STOPPED", "NRF_WDT_EVENT_STOPPED"], [216, 1, 1, "c.nrf_wdt_event_t.NRF_WDT_EVENT_TIMEOUT", "NRF_WDT_EVENT_TIMEOUT"]], "nrf_wdt_int_disable": [[216, 3, 1, "c.nrf_wdt_int_disable", "mask"], [216, 3, 1, "c.nrf_wdt_int_disable", "p_reg"]], "nrf_wdt_int_enable": [[216, 3, 1, "c.nrf_wdt_int_enable", "mask"], [216, 3, 1, "c.nrf_wdt_int_enable", "p_reg"]], "nrf_wdt_int_enable_check": [[216, 3, 1, "c.nrf_wdt_int_enable_check", "mask"], [216, 3, 1, "c.nrf_wdt_int_enable_check", "p_reg"]], "nrf_wdt_int_mask_t": [[216, 1, 1, "c.nrf_wdt_int_mask_t.NRF_WDT_INT_STOPPED_MASK", "NRF_WDT_INT_STOPPED_MASK"], [216, 1, 1, "c.nrf_wdt_int_mask_t.NRF_WDT_INT_TIMEOUT_MASK", "NRF_WDT_INT_TIMEOUT_MASK"]], "nrf_wdt_nmi_int_disable": [[216, 3, 1, "c.nrf_wdt_nmi_int_disable", "mask"], [216, 3, 1, "c.nrf_wdt_nmi_int_disable", "p_reg"]], "nrf_wdt_nmi_int_enable": [[216, 3, 1, "c.nrf_wdt_nmi_int_enable", "mask"], [216, 3, 1, "c.nrf_wdt_nmi_int_enable", "p_reg"]], "nrf_wdt_nmi_int_enable_check": [[216, 3, 1, "c.nrf_wdt_nmi_int_enable_check", "mask"], [216, 3, 1, "c.nrf_wdt_nmi_int_enable_check", "p_reg"]], "nrf_wdt_publish_clear": [[216, 3, 1, "c.nrf_wdt_publish_clear", "event"], [216, 3, 1, "c.nrf_wdt_publish_clear", "p_reg"]], "nrf_wdt_publish_set": [[216, 3, 1, "c.nrf_wdt_publish_set", "channel"], [216, 3, 1, "c.nrf_wdt_publish_set", "event"], [216, 3, 1, "c.nrf_wdt_publish_set", "p_reg"]], "nrf_wdt_reload_request_disable": [[216, 3, 1, "c.nrf_wdt_reload_request_disable", "p_reg"], [216, 3, 1, "c.nrf_wdt_reload_request_disable", "rr_register"]], "nrf_wdt_reload_request_enable": [[216, 3, 1, "c.nrf_wdt_reload_request_enable", "p_reg"], [216, 3, 1, "c.nrf_wdt_reload_request_enable", "rr_register"]], "nrf_wdt_reload_request_enable_check": [[216, 3, 1, "c.nrf_wdt_reload_request_enable_check", "p_reg"], [216, 3, 1, "c.nrf_wdt_reload_request_enable_check", "rr_register"]], "nrf_wdt_reload_request_set": [[216, 3, 1, "c.nrf_wdt_reload_request_set", "p_reg"], [216, 3, 1, "c.nrf_wdt_reload_request_set", "rr_register"]], "nrf_wdt_reload_value_get": [[216, 3, 1, "c.nrf_wdt_reload_value_get", "p_reg"]], "nrf_wdt_reload_value_set": [[216, 3, 1, "c.nrf_wdt_reload_value_set", "p_reg"], [216, 3, 1, "c.nrf_wdt_reload_value_set", "reload_value"]], "nrf_wdt_request_status_check": [[216, 3, 1, "c.nrf_wdt_request_status_check", "p_reg"], [216, 3, 1, "c.nrf_wdt_request_status_check", "rr_register"]], "nrf_wdt_request_status_get": [[216, 3, 1, "c.nrf_wdt_request_status_get", "p_reg"]], "nrf_wdt_rr_register_mask_t": [[216, 1, 1, "c.nrf_wdt_rr_register_mask_t.NRF_WDT_RR0_MASK", "NRF_WDT_RR0_MASK"], [216, 1, 1, "c.nrf_wdt_rr_register_mask_t.NRF_WDT_RR1_MASK", "NRF_WDT_RR1_MASK"], [216, 1, 1, "c.nrf_wdt_rr_register_mask_t.NRF_WDT_RR2_MASK", "NRF_WDT_RR2_MASK"], [216, 1, 1, "c.nrf_wdt_rr_register_mask_t.NRF_WDT_RR3_MASK", "NRF_WDT_RR3_MASK"], [216, 1, 1, "c.nrf_wdt_rr_register_mask_t.NRF_WDT_RR4_MASK", "NRF_WDT_RR4_MASK"], [216, 1, 1, "c.nrf_wdt_rr_register_mask_t.NRF_WDT_RR5_MASK", "NRF_WDT_RR5_MASK"], [216, 1, 1, "c.nrf_wdt_rr_register_mask_t.NRF_WDT_RR6_MASK", "NRF_WDT_RR6_MASK"], [216, 1, 1, "c.nrf_wdt_rr_register_mask_t.NRF_WDT_RR7_MASK", "NRF_WDT_RR7_MASK"]], "nrf_wdt_rr_register_t": [[216, 1, 1, "c.nrf_wdt_rr_register_t.NRF_WDT_RR0", "NRF_WDT_RR0"], [216, 1, 1, "c.nrf_wdt_rr_register_t.NRF_WDT_RR1", "NRF_WDT_RR1"], [216, 1, 1, "c.nrf_wdt_rr_register_t.NRF_WDT_RR2", "NRF_WDT_RR2"], [216, 1, 1, "c.nrf_wdt_rr_register_t.NRF_WDT_RR3", "NRF_WDT_RR3"], [216, 1, 1, "c.nrf_wdt_rr_register_t.NRF_WDT_RR4", "NRF_WDT_RR4"], [216, 1, 1, "c.nrf_wdt_rr_register_t.NRF_WDT_RR5", "NRF_WDT_RR5"], [216, 1, 1, "c.nrf_wdt_rr_register_t.NRF_WDT_RR6", "NRF_WDT_RR6"], [216, 1, 1, "c.nrf_wdt_rr_register_t.NRF_WDT_RR7", "NRF_WDT_RR7"]], "nrf_wdt_started_check": [[216, 3, 1, "c.nrf_wdt_started_check", "p_reg"]], "nrf_wdt_subscribe_clear": [[216, 3, 1, "c.nrf_wdt_subscribe_clear", "p_reg"], [216, 3, 1, "c.nrf_wdt_subscribe_clear", "task"]], "nrf_wdt_subscribe_set": [[216, 3, 1, "c.nrf_wdt_subscribe_set", "channel"], [216, 3, 1, "c.nrf_wdt_subscribe_set", "p_reg"], [216, 3, 1, "c.nrf_wdt_subscribe_set", "task"]], "nrf_wdt_task_address_get": [[216, 3, 1, "c.nrf_wdt_task_address_get", "p_reg"], [216, 3, 1, "c.nrf_wdt_task_address_get", "task"]], "nrf_wdt_task_stop_enable_set": [[216, 3, 1, "c.nrf_wdt_task_stop_enable_set", "enable"], [216, 3, 1, "c.nrf_wdt_task_stop_enable_set", "p_reg"]], "nrf_wdt_task_t": [[216, 1, 1, "c.nrf_wdt_task_t.NRF_WDT_TASK_START", "NRF_WDT_TASK_START"], [216, 1, 1, "c.nrf_wdt_task_t.NRF_WDT_TASK_STOP", "NRF_WDT_TASK_STOP"]], "nrf_wdt_task_trigger": [[216, 3, 1, "c.nrf_wdt_task_trigger", "p_reg"], [216, 3, 1, "c.nrf_wdt_task_trigger", "task"]], "nrfx_adc_buffer_convert": [[6, 3, 1, "c.nrfx_adc_buffer_convert", "buffer"], [6, 3, 1, "c.nrfx_adc_buffer_convert", "size"]], "nrfx_adc_channel_disable": [[6, 3, 1, "c.nrfx_adc_channel_disable", "p_channel"]], "nrfx_adc_channel_enable": [[6, 3, 1, "c.nrfx_adc_channel_enable", "p_channel"]], "nrfx_adc_channel_s": [[6, 6, 1, "c.nrfx_adc_channel_s.config", "config"], [6, 6, 1, "c.nrfx_adc_channel_s.p_next", "p_next"]], "nrfx_adc_config_t": [[6, 6, 1, "c.nrfx_adc_config_t.interrupt_priority", "interrupt_priority"]], "nrfx_adc_done_evt_t": [[6, 6, 1, "c.nrfx_adc_done_evt_t.p_buffer", "p_buffer"], [6, 6, 1, "c.nrfx_adc_done_evt_t.size", "size"]], "nrfx_adc_evt_t": [[6, 6, 1, "c.nrfx_adc_evt_t.data", "data"], [6, 6, 1, "c.nrfx_adc_evt_t.done", "done"], [6, 6, 1, "c.nrfx_adc_evt_t.sample", "sample"], [6, 6, 1, "c.nrfx_adc_evt_t.type", "type"]], "nrfx_adc_evt_type_t": [[6, 1, 1, "c.nrfx_adc_evt_type_t.NRFX_ADC_EVT_DONE", "NRFX_ADC_EVT_DONE"], [6, 1, 1, "c.nrfx_adc_evt_type_t.NRFX_ADC_EVT_SAMPLE", "NRFX_ADC_EVT_SAMPLE"]], "nrfx_adc_init": [[6, 3, 1, "c.nrfx_adc_init", "event_handler"], [6, 3, 1, "c.nrfx_adc_init", "p_config"]], "nrfx_adc_sample_convert": [[6, 3, 1, "c.nrfx_adc_sample_convert", "p_channel"], [6, 3, 1, "c.nrfx_adc_sample_convert", "p_value"]], "nrfx_adc_sample_evt_t": [[6, 6, 1, "c.nrfx_adc_sample_evt_t.sample", "sample"]], "nrfx_atomic_flag_clear": [[232, 3, 1, "c.nrfx_atomic_flag_clear", "p_data"]], "nrfx_atomic_flag_clear_fetch": [[232, 3, 1, "c.nrfx_atomic_flag_clear_fetch", "p_data"]], "nrfx_atomic_flag_set": [[232, 3, 1, "c.nrfx_atomic_flag_set", "p_data"]], "nrfx_atomic_flag_set_fetch": [[232, 3, 1, "c.nrfx_atomic_flag_set_fetch", "p_data"]], "nrfx_atomic_u32_add": [[232, 3, 1, "c.nrfx_atomic_u32_add", "p_data"], [232, 3, 1, "c.nrfx_atomic_u32_add", "value"]], "nrfx_atomic_u32_and": [[232, 3, 1, "c.nrfx_atomic_u32_and", "p_data"], [232, 3, 1, "c.nrfx_atomic_u32_and", "value"]], "nrfx_atomic_u32_cmp_exch": [[232, 3, 1, "c.nrfx_atomic_u32_cmp_exch", "desired"], [232, 3, 1, "c.nrfx_atomic_u32_cmp_exch", "p_data"], [232, 3, 1, "c.nrfx_atomic_u32_cmp_exch", "p_expected"]], "nrfx_atomic_u32_fetch_add": [[232, 3, 1, "c.nrfx_atomic_u32_fetch_add", "p_data"], [232, 3, 1, "c.nrfx_atomic_u32_fetch_add", "value"]], "nrfx_atomic_u32_fetch_and": [[232, 3, 1, "c.nrfx_atomic_u32_fetch_and", "p_data"], [232, 3, 1, "c.nrfx_atomic_u32_fetch_and", "value"]], "nrfx_atomic_u32_fetch_or": [[232, 3, 1, "c.nrfx_atomic_u32_fetch_or", "p_data"], [232, 3, 1, "c.nrfx_atomic_u32_fetch_or", "value"]], "nrfx_atomic_u32_fetch_store": [[232, 3, 1, "c.nrfx_atomic_u32_fetch_store", "p_data"], [232, 3, 1, "c.nrfx_atomic_u32_fetch_store", "value"]], "nrfx_atomic_u32_fetch_sub": [[232, 3, 1, "c.nrfx_atomic_u32_fetch_sub", "p_data"], [232, 3, 1, "c.nrfx_atomic_u32_fetch_sub", "value"]], "nrfx_atomic_u32_fetch_sub_hs": [[232, 3, 1, "c.nrfx_atomic_u32_fetch_sub_hs", "p_data"], [232, 3, 1, "c.nrfx_atomic_u32_fetch_sub_hs", "value"]], "nrfx_atomic_u32_fetch_xor": [[232, 3, 1, "c.nrfx_atomic_u32_fetch_xor", "p_data"], [232, 3, 1, "c.nrfx_atomic_u32_fetch_xor", "value"]], "nrfx_atomic_u32_or": [[232, 3, 1, "c.nrfx_atomic_u32_or", "p_data"], [232, 3, 1, "c.nrfx_atomic_u32_or", "value"]], "nrfx_atomic_u32_store": [[232, 3, 1, "c.nrfx_atomic_u32_store", "p_data"], [232, 3, 1, "c.nrfx_atomic_u32_store", "value"]], "nrfx_atomic_u32_sub": [[232, 3, 1, "c.nrfx_atomic_u32_sub", "p_data"], [232, 3, 1, "c.nrfx_atomic_u32_sub", "value"]], "nrfx_atomic_u32_sub_hs": [[232, 3, 1, "c.nrfx_atomic_u32_sub_hs", "p_data"], [232, 3, 1, "c.nrfx_atomic_u32_sub_hs", "value"]], "nrfx_atomic_u32_xor": [[232, 3, 1, "c.nrfx_atomic_u32_xor", "p_data"], [232, 3, 1, "c.nrfx_atomic_u32_xor", "value"]], "nrfx_bellboard_init": [[10, 3, 1, "c.nrfx_bellboard_init", "event_handler"], [10, 3, 1, "c.nrfx_bellboard_init", "irq_priority"], [10, 3, 1, "c.nrfx_bellboard_init", "p_context"], [10, 3, 1, "c.nrfx_bellboard_init", "p_instance"]], "nrfx_bellboard_init_check": [[10, 3, 1, "c.nrfx_bellboard_init_check", "p_instance"]], "nrfx_bellboard_int_disable": [[10, 3, 1, "c.nrfx_bellboard_int_disable", "mask"], [10, 3, 1, "c.nrfx_bellboard_int_disable", "p_instance"]], "nrfx_bellboard_int_enable": [[10, 3, 1, "c.nrfx_bellboard_int_enable", "mask"], [10, 3, 1, "c.nrfx_bellboard_int_enable", "p_instance"]], "nrfx_bellboard_t": [[10, 6, 1, "c.nrfx_bellboard_t.drv_inst_idx", "drv_inst_idx"], [10, 6, 1, "c.nrfx_bellboard_t.int_idx", "int_idx"]], "nrfx_bellboard_uninit": [[10, 3, 1, "c.nrfx_bellboard_uninit", "p_instance"]], "nrfx_bitpos_to_event": [[234, 3, 1, "c.nrfx_bitpos_to_event", "bit"]], "nrfx_clock_calibration_timer_start": [[20, 3, 1, "c.nrfx_clock_calibration_timer_start", "interval"]], "nrfx_clock_divider_get": [[20, 3, 1, "c.nrfx_clock_divider_get", "domain"]], "nrfx_clock_divider_set": [[20, 3, 1, "c.nrfx_clock_divider_set", "div"], [20, 3, 1, "c.nrfx_clock_divider_set", "domain"]], "nrfx_clock_event_address_get": [[20, 3, 1, "c.nrfx_clock_event_address_get", "event"]], "nrfx_clock_evt_type_t": [[20, 1, 1, "c.nrfx_clock_evt_type_t.NRFX_CLOCK_EVT_CAL_DONE", "NRFX_CLOCK_EVT_CAL_DONE"], [20, 1, 1, "c.nrfx_clock_evt_type_t.NRFX_CLOCK_EVT_CTTO", "NRFX_CLOCK_EVT_CTTO"], [20, 1, 1, "c.nrfx_clock_evt_type_t.NRFX_CLOCK_EVT_HFCLK192M_STARTED", "NRFX_CLOCK_EVT_HFCLK192M_STARTED"], [20, 1, 1, "c.nrfx_clock_evt_type_t.NRFX_CLOCK_EVT_HFCLKAUDIO_STARTED", "NRFX_CLOCK_EVT_HFCLKAUDIO_STARTED"], [20, 1, 1, "c.nrfx_clock_evt_type_t.NRFX_CLOCK_EVT_HFCLK_STARTED", "NRFX_CLOCK_EVT_HFCLK_STARTED"], [20, 1, 1, "c.nrfx_clock_evt_type_t.NRFX_CLOCK_EVT_LFCLK_STARTED", "NRFX_CLOCK_EVT_LFCLK_STARTED"], [20, 1, 1, "c.nrfx_clock_evt_type_t.NRFX_CLOCK_EVT_PLL_STARTED", "NRFX_CLOCK_EVT_PLL_STARTED"]], "nrfx_clock_hfclkaudio_config_set": [[20, 3, 1, "c.nrfx_clock_hfclkaudio_config_set", "freq_value"]], "nrfx_clock_init": [[20, 3, 1, "c.nrfx_clock_init", "event_handler"]], "nrfx_clock_is_running": [[20, 3, 1, "c.nrfx_clock_is_running", "domain"], [20, 3, 1, "c.nrfx_clock_is_running", "p_clk_src"]], "nrfx_clock_start": [[20, 3, 1, "c.nrfx_clock_start", "domain"]], "nrfx_clock_stop": [[20, 3, 1, "c.nrfx_clock_stop", "domain"]], "nrfx_clock_task_address_get": [[20, 3, 1, "c.nrfx_clock_task_address_get", "task"]], "nrfx_comp_config_t": [[23, 6, 1, "c.nrfx_comp_config_t.ext_ref", "ext_ref"], [23, 6, 1, "c.nrfx_comp_config_t.hyst", "hyst"], [23, 6, 1, "c.nrfx_comp_config_t.input", "input"], [23, 6, 1, "c.nrfx_comp_config_t.interrupt_priority", "interrupt_priority"], [23, 6, 1, "c.nrfx_comp_config_t.main_mode", "main_mode"], [23, 6, 1, "c.nrfx_comp_config_t.reference", "reference"], [23, 6, 1, "c.nrfx_comp_config_t.speed_mode", "speed_mode"], [23, 6, 1, "c.nrfx_comp_config_t.threshold", "threshold"]], "nrfx_comp_event_address_get": [[23, 3, 1, "c.nrfx_comp_event_address_get", "event"]], "nrfx_comp_evt_en_mask_t": [[23, 1, 1, "c.nrfx_comp_evt_en_mask_t.NRFX_COMP_EVT_EN_CROSS_MASK", "NRFX_COMP_EVT_EN_CROSS_MASK"], [23, 1, 1, "c.nrfx_comp_evt_en_mask_t.NRFX_COMP_EVT_EN_DOWN_MASK", "NRFX_COMP_EVT_EN_DOWN_MASK"], [23, 1, 1, "c.nrfx_comp_evt_en_mask_t.NRFX_COMP_EVT_EN_READY_MASK", "NRFX_COMP_EVT_EN_READY_MASK"], [23, 1, 1, "c.nrfx_comp_evt_en_mask_t.NRFX_COMP_EVT_EN_UP_MASK", "NRFX_COMP_EVT_EN_UP_MASK"]], "nrfx_comp_init": [[23, 3, 1, "c.nrfx_comp_init", "event_handler"], [23, 3, 1, "c.nrfx_comp_init", "p_config"]], "nrfx_comp_pin_select": [[23, 3, 1, "c.nrfx_comp_pin_select", "psel"]], "nrfx_comp_reconfigure": [[23, 3, 1, "c.nrfx_comp_reconfigure", "p_config"]], "nrfx_comp_short_mask_t": [[23, 1, 1, "c.nrfx_comp_short_mask_t.NRFX_COMP_SHORT_STOP_AFTER_CROSS_EVT", "NRFX_COMP_SHORT_STOP_AFTER_CROSS_EVT"], [23, 1, 1, "c.nrfx_comp_short_mask_t.NRFX_COMP_SHORT_STOP_AFTER_DOWN_EVT", "NRFX_COMP_SHORT_STOP_AFTER_DOWN_EVT"], [23, 1, 1, "c.nrfx_comp_short_mask_t.NRFX_COMP_SHORT_STOP_AFTER_UP_EVT", "NRFX_COMP_SHORT_STOP_AFTER_UP_EVT"]], "nrfx_comp_start": [[23, 3, 1, "c.nrfx_comp_start", "comp_evt_en_mask"], [23, 3, 1, "c.nrfx_comp_start", "comp_shorts_mask"]], "nrfx_comp_task_address_get": [[23, 3, 1, "c.nrfx_comp_task_address_get", "task"]], "nrfx_coredep_delay_us": [[237, 3, 1, "c.nrfx_coredep_delay_us", "time_us"]], "nrfx_dppi_channel_alloc": [[33, 3, 1, "c.nrfx_dppi_channel_alloc", "p_channel"]], "nrfx_dppi_channel_disable": [[33, 3, 1, "c.nrfx_dppi_channel_disable", "channel"]], "nrfx_dppi_channel_enable": [[33, 3, 1, "c.nrfx_dppi_channel_enable", "channel"]], "nrfx_dppi_channel_free": [[33, 3, 1, "c.nrfx_dppi_channel_free", "channel"]], "nrfx_dppi_channel_include_in_group": [[33, 3, 1, "c.nrfx_dppi_channel_include_in_group", "channel"], [33, 3, 1, "c.nrfx_dppi_channel_include_in_group", "group"]], "nrfx_dppi_channel_remove_from_group": [[33, 3, 1, "c.nrfx_dppi_channel_remove_from_group", "channel"], [33, 3, 1, "c.nrfx_dppi_channel_remove_from_group", "group"]], "nrfx_dppi_group_alloc": [[33, 3, 1, "c.nrfx_dppi_group_alloc", "p_group"]], "nrfx_dppi_group_clear": [[33, 3, 1, "c.nrfx_dppi_group_clear", "group"]], "nrfx_dppi_group_disable": [[33, 3, 1, "c.nrfx_dppi_group_disable", "group"]], "nrfx_dppi_group_enable": [[33, 3, 1, "c.nrfx_dppi_group_enable", "group"]], "nrfx_dppi_group_free": [[33, 3, 1, "c.nrfx_dppi_group_free", "group"]], "nrfx_drv_state_t": [[234, 1, 1, "c.nrfx_drv_state_t.NRFX_DRV_STATE_INITIALIZED", "NRFX_DRV_STATE_INITIALIZED"], [234, 1, 1, "c.nrfx_drv_state_t.NRFX_DRV_STATE_POWERED_ON", "NRFX_DRV_STATE_POWERED_ON"], [234, 1, 1, "c.nrfx_drv_state_t.NRFX_DRV_STATE_UNINITIALIZED", "NRFX_DRV_STATE_UNINITIALIZED"]], "nrfx_egu_event_address_get": [[39, 3, 1, "c.nrfx_egu_event_address_get", "event"], [39, 3, 1, "c.nrfx_egu_event_address_get", "p_instance"]], "nrfx_egu_init": [[39, 3, 1, "c.nrfx_egu_init", "event_handler"], [39, 3, 1, "c.nrfx_egu_init", "interrupt_priority"], [39, 3, 1, "c.nrfx_egu_init", "p_context"], [39, 3, 1, "c.nrfx_egu_init", "p_instance"]], "nrfx_egu_init_check": [[39, 3, 1, "c.nrfx_egu_init_check", "p_instance"]], "nrfx_egu_int_disable": [[39, 3, 1, "c.nrfx_egu_int_disable", "mask"], [39, 3, 1, "c.nrfx_egu_int_disable", "p_instance"]], "nrfx_egu_int_enable": [[39, 3, 1, "c.nrfx_egu_int_enable", "mask"], [39, 3, 1, "c.nrfx_egu_int_enable", "p_instance"]], "nrfx_egu_t": [[39, 6, 1, "c.nrfx_egu_t.drv_inst_idx", "drv_inst_idx"], [39, 6, 1, "c.nrfx_egu_t.p_reg", "p_reg"]], "nrfx_egu_task_address_get": [[39, 3, 1, "c.nrfx_egu_task_address_get", "p_instance"], [39, 3, 1, "c.nrfx_egu_task_address_get", "task"]], "nrfx_egu_trigger": [[39, 3, 1, "c.nrfx_egu_trigger", "event_idx"], [39, 3, 1, "c.nrfx_egu_trigger", "p_instance"]], "nrfx_egu_uninit": [[39, 3, 1, "c.nrfx_egu_uninit", "p_instance"]], "nrfx_err_t": [[238, 1, 1, "c.nrfx_err_t.NRFX_ERROR_ALREADY", "NRFX_ERROR_ALREADY"], [238, 1, 1, "c.nrfx_err_t.NRFX_ERROR_ALREADY_INITIALIZED", "NRFX_ERROR_ALREADY_INITIALIZED"], [238, 1, 1, "c.nrfx_err_t.NRFX_ERROR_BUSY", "NRFX_ERROR_BUSY"], [238, 1, 1, "c.nrfx_err_t.NRFX_ERROR_DRV_TWI_ERR_ANACK", "NRFX_ERROR_DRV_TWI_ERR_ANACK"], [238, 1, 1, "c.nrfx_err_t.NRFX_ERROR_DRV_TWI_ERR_DNACK", "NRFX_ERROR_DRV_TWI_ERR_DNACK"], [238, 1, 1, "c.nrfx_err_t.NRFX_ERROR_DRV_TWI_ERR_OVERRUN", "NRFX_ERROR_DRV_TWI_ERR_OVERRUN"], [238, 1, 1, "c.nrfx_err_t.NRFX_ERROR_FORBIDDEN", "NRFX_ERROR_FORBIDDEN"], [238, 1, 1, "c.nrfx_err_t.NRFX_ERROR_INTERNAL", "NRFX_ERROR_INTERNAL"], [238, 1, 1, "c.nrfx_err_t.NRFX_ERROR_INVALID_ADDR", "NRFX_ERROR_INVALID_ADDR"], [238, 1, 1, "c.nrfx_err_t.NRFX_ERROR_INVALID_LENGTH", "NRFX_ERROR_INVALID_LENGTH"], [238, 1, 1, "c.nrfx_err_t.NRFX_ERROR_INVALID_PARAM", "NRFX_ERROR_INVALID_PARAM"], [238, 1, 1, "c.nrfx_err_t.NRFX_ERROR_INVALID_STATE", "NRFX_ERROR_INVALID_STATE"], [238, 1, 1, "c.nrfx_err_t.NRFX_ERROR_NOT_SUPPORTED", "NRFX_ERROR_NOT_SUPPORTED"], [238, 1, 1, "c.nrfx_err_t.NRFX_ERROR_NO_MEM", "NRFX_ERROR_NO_MEM"], [238, 1, 1, "c.nrfx_err_t.NRFX_ERROR_NULL", "NRFX_ERROR_NULL"], [238, 1, 1, "c.nrfx_err_t.NRFX_ERROR_TIMEOUT", "NRFX_ERROR_TIMEOUT"], [238, 1, 1, "c.nrfx_err_t.NRFX_SUCCESS", "NRFX_SUCCESS"]], "nrfx_event_to_bitpos": [[234, 3, 1, "c.nrfx_event_to_bitpos", "event"]], "nrfx_flag32_alloc": [[239, 3, 1, "c.nrfx_flag32_alloc", "p_flag"], [239, 3, 1, "c.nrfx_flag32_alloc", "p_mask"]], "nrfx_flag32_free": [[239, 3, 1, "c.nrfx_flag32_free", "flag"], [239, 3, 1, "c.nrfx_flag32_free", "p_mask"]], "nrfx_flag32_init": [[239, 3, 1, "c.nrfx_flag32_init", "init_mask"], [239, 3, 1, "c.nrfx_flag32_init", "p_mask"]], "nrfx_flag32_is_allocated": [[239, 3, 1, "c.nrfx_flag32_is_allocated", "bitpos"], [239, 3, 1, "c.nrfx_flag32_is_allocated", "mask"]], "nrfx_get_irq_number": [[234, 3, 1, "c.nrfx_get_irq_number", "p_reg"]], "nrfx_gpiote_channel_alloc": [[51, 3, 1, "c.nrfx_gpiote_channel_alloc", "p_channel"], [51, 3, 1, "c.nrfx_gpiote_channel_alloc", "p_instance"]], "nrfx_gpiote_channel_free": [[51, 3, 1, "c.nrfx_gpiote_channel_free", "channel"], [51, 3, 1, "c.nrfx_gpiote_channel_free", "p_instance"]], "nrfx_gpiote_channel_get": [[51, 3, 1, "c.nrfx_gpiote_channel_get", "p_channel"], [51, 3, 1, "c.nrfx_gpiote_channel_get", "p_instance"], [51, 3, 1, "c.nrfx_gpiote_channel_get", "pin"]], "nrfx_gpiote_channels_number_get": [[51, 3, 1, "c.nrfx_gpiote_channels_number_get", "p_instance"]], "nrfx_gpiote_clr_task_address_get": [[51, 3, 1, "c.nrfx_gpiote_clr_task_address_get", "p_instance"], [51, 3, 1, "c.nrfx_gpiote_clr_task_address_get", "pin"]], "nrfx_gpiote_clr_task_get": [[51, 3, 1, "c.nrfx_gpiote_clr_task_get", "p_instance"], [51, 3, 1, "c.nrfx_gpiote_clr_task_get", "pin"]], "nrfx_gpiote_clr_task_trigger": [[51, 3, 1, "c.nrfx_gpiote_clr_task_trigger", "p_instance"], [51, 3, 1, "c.nrfx_gpiote_clr_task_trigger", "pin"]], "nrfx_gpiote_global_callback_set": [[51, 3, 1, "c.nrfx_gpiote_global_callback_set", "handler"], [51, 3, 1, "c.nrfx_gpiote_global_callback_set", "p_context"], [51, 3, 1, "c.nrfx_gpiote_global_callback_set", "p_instance"]], "nrfx_gpiote_handler_config_t": [[51, 6, 1, "c.nrfx_gpiote_handler_config_t.handler", "handler"], [51, 6, 1, "c.nrfx_gpiote_handler_config_t.p_context", "p_context"]], "nrfx_gpiote_in_event_address_get": [[51, 3, 1, "c.nrfx_gpiote_in_event_address_get", "p_instance"], [51, 3, 1, "c.nrfx_gpiote_in_event_address_get", "pin"]], "nrfx_gpiote_in_event_get": [[51, 3, 1, "c.nrfx_gpiote_in_event_get", "p_instance"], [51, 3, 1, "c.nrfx_gpiote_in_event_get", "pin"]], "nrfx_gpiote_in_is_set": [[51, 3, 1, "c.nrfx_gpiote_in_is_set", "pin"]], "nrfx_gpiote_init": [[51, 3, 1, "c.nrfx_gpiote_init", "interrupt_priority"], [51, 3, 1, "c.nrfx_gpiote_init", "p_instance"]], "nrfx_gpiote_init_check": [[51, 3, 1, "c.nrfx_gpiote_init_check", "p_instance"]], "nrfx_gpiote_input_config_t": [[51, 6, 1, "c.nrfx_gpiote_input_config_t.pull", "pull"]], "nrfx_gpiote_input_configure": [[51, 3, 1, "c.nrfx_gpiote_input_configure", "p_config"], [51, 3, 1, "c.nrfx_gpiote_input_configure", "p_instance"], [51, 3, 1, "c.nrfx_gpiote_input_configure", "pin"]], "nrfx_gpiote_input_pin_config_t": [[51, 6, 1, "c.nrfx_gpiote_input_pin_config_t.p_handler_config", "p_handler_config"], [51, 6, 1, "c.nrfx_gpiote_input_pin_config_t.p_pull_config", "p_pull_config"], [51, 6, 1, "c.nrfx_gpiote_input_pin_config_t.p_trigger_config", "p_trigger_config"]], "nrfx_gpiote_latency_get": [[51, 3, 1, "c.nrfx_gpiote_latency_get", "p_instance"]], "nrfx_gpiote_latency_set": [[51, 3, 1, "c.nrfx_gpiote_latency_set", "latency"], [51, 3, 1, "c.nrfx_gpiote_latency_set", "p_instance"]], "nrfx_gpiote_out_clear": [[51, 3, 1, "c.nrfx_gpiote_out_clear", "p_instance"], [51, 3, 1, "c.nrfx_gpiote_out_clear", "pin"]], "nrfx_gpiote_out_set": [[51, 3, 1, "c.nrfx_gpiote_out_set", "p_instance"], [51, 3, 1, "c.nrfx_gpiote_out_set", "pin"]], "nrfx_gpiote_out_task_address_get": [[51, 3, 1, "c.nrfx_gpiote_out_task_address_get", "p_instance"], [51, 3, 1, "c.nrfx_gpiote_out_task_address_get", "pin"]], "nrfx_gpiote_out_task_disable": [[51, 3, 1, "c.nrfx_gpiote_out_task_disable", "p_instance"], [51, 3, 1, "c.nrfx_gpiote_out_task_disable", "pin"]], "nrfx_gpiote_out_task_enable": [[51, 3, 1, "c.nrfx_gpiote_out_task_enable", "p_instance"], [51, 3, 1, "c.nrfx_gpiote_out_task_enable", "pin"]], "nrfx_gpiote_out_task_force": [[51, 3, 1, "c.nrfx_gpiote_out_task_force", "p_instance"], [51, 3, 1, "c.nrfx_gpiote_out_task_force", "pin"], [51, 3, 1, "c.nrfx_gpiote_out_task_force", "state"]], "nrfx_gpiote_out_task_get": [[51, 3, 1, "c.nrfx_gpiote_out_task_get", "p_instance"], [51, 3, 1, "c.nrfx_gpiote_out_task_get", "pin"]], "nrfx_gpiote_out_task_trigger": [[51, 3, 1, "c.nrfx_gpiote_out_task_trigger", "p_instance"], [51, 3, 1, "c.nrfx_gpiote_out_task_trigger", "pin"]], "nrfx_gpiote_out_toggle": [[51, 3, 1, "c.nrfx_gpiote_out_toggle", "p_instance"], [51, 3, 1, "c.nrfx_gpiote_out_toggle", "pin"]], "nrfx_gpiote_output_config_t": [[51, 6, 1, "c.nrfx_gpiote_output_config_t.drive", "drive"], [51, 6, 1, "c.nrfx_gpiote_output_config_t.input_connect", "input_connect"], [51, 6, 1, "c.nrfx_gpiote_output_config_t.pull", "pull"]], "nrfx_gpiote_output_configure": [[51, 3, 1, "c.nrfx_gpiote_output_configure", "p_config"], [51, 3, 1, "c.nrfx_gpiote_output_configure", "p_instance"], [51, 3, 1, "c.nrfx_gpiote_output_configure", "p_task_config"], [51, 3, 1, "c.nrfx_gpiote_output_configure", "pin"]], "nrfx_gpiote_pin_uninit": [[51, 3, 1, "c.nrfx_gpiote_pin_uninit", "p_instance"], [51, 3, 1, "c.nrfx_gpiote_pin_uninit", "pin"]], "nrfx_gpiote_set_task_address_get": [[51, 3, 1, "c.nrfx_gpiote_set_task_address_get", "p_instance"], [51, 3, 1, "c.nrfx_gpiote_set_task_address_get", "pin"]], "nrfx_gpiote_set_task_get": [[51, 3, 1, "c.nrfx_gpiote_set_task_get", "p_instance"], [51, 3, 1, "c.nrfx_gpiote_set_task_get", "pin"]], "nrfx_gpiote_set_task_trigger": [[51, 3, 1, "c.nrfx_gpiote_set_task_trigger", "p_instance"], [51, 3, 1, "c.nrfx_gpiote_set_task_trigger", "pin"]], "nrfx_gpiote_t": [[51, 6, 1, "c.nrfx_gpiote_t.drv_inst_idx", "drv_inst_idx"], [51, 6, 1, "c.nrfx_gpiote_t.p_reg", "p_reg"]], "nrfx_gpiote_task_config_t": [[51, 6, 1, "c.nrfx_gpiote_task_config_t.init_val", "init_val"], [51, 6, 1, "c.nrfx_gpiote_task_config_t.polarity", "polarity"], [51, 6, 1, "c.nrfx_gpiote_task_config_t.task_ch", "task_ch"]], "nrfx_gpiote_trigger_config_t": [[51, 6, 1, "c.nrfx_gpiote_trigger_config_t.p_in_channel", "p_in_channel"], [51, 6, 1, "c.nrfx_gpiote_trigger_config_t.trigger", "trigger"]], "nrfx_gpiote_trigger_disable": [[51, 3, 1, "c.nrfx_gpiote_trigger_disable", "p_instance"], [51, 3, 1, "c.nrfx_gpiote_trigger_disable", "pin"]], "nrfx_gpiote_trigger_enable": [[51, 3, 1, "c.nrfx_gpiote_trigger_enable", "int_enable"], [51, 3, 1, "c.nrfx_gpiote_trigger_enable", "p_instance"], [51, 3, 1, "c.nrfx_gpiote_trigger_enable", "pin"]], "nrfx_gpiote_trigger_t": [[51, 1, 1, "c.nrfx_gpiote_trigger_t.NRFX_GPIOTE_TRIGGER_HIGH", "NRFX_GPIOTE_TRIGGER_HIGH"], [51, 1, 1, "c.nrfx_gpiote_trigger_t.NRFX_GPIOTE_TRIGGER_HITOLO", "NRFX_GPIOTE_TRIGGER_HITOLO"], [51, 1, 1, "c.nrfx_gpiote_trigger_t.NRFX_GPIOTE_TRIGGER_LOTOHI", "NRFX_GPIOTE_TRIGGER_LOTOHI"], [51, 1, 1, "c.nrfx_gpiote_trigger_t.NRFX_GPIOTE_TRIGGER_LOW", "NRFX_GPIOTE_TRIGGER_LOW"], [51, 1, 1, "c.nrfx_gpiote_trigger_t.NRFX_GPIOTE_TRIGGER_MAX", "NRFX_GPIOTE_TRIGGER_MAX"], [51, 1, 1, "c.nrfx_gpiote_trigger_t.NRFX_GPIOTE_TRIGGER_NONE", "NRFX_GPIOTE_TRIGGER_NONE"], [51, 1, 1, "c.nrfx_gpiote_trigger_t.NRFX_GPIOTE_TRIGGER_TOGGLE", "NRFX_GPIOTE_TRIGGER_TOGGLE"]], "nrfx_gpiote_uninit": [[51, 3, 1, "c.nrfx_gpiote_uninit", "p_instance"]], "nrfx_gppi_channel_alloc": [[241, 3, 1, "c.nrfx_gppi_channel_alloc", "p_channel"]], "nrfx_gppi_channel_check": [[241, 3, 1, "c.nrfx_gppi_channel_check", "channel"]], "nrfx_gppi_channel_endpoints_clear": [[241, 3, 1, "c.nrfx_gppi_channel_endpoints_clear", "channel"], [241, 3, 1, "c.nrfx_gppi_channel_endpoints_clear", "eep"], [241, 3, 1, "c.nrfx_gppi_channel_endpoints_clear", "tep"]], "nrfx_gppi_channel_endpoints_setup": [[241, 3, 1, "c.nrfx_gppi_channel_endpoints_setup", "channel"], [241, 3, 1, "c.nrfx_gppi_channel_endpoints_setup", "eep"], [241, 3, 1, "c.nrfx_gppi_channel_endpoints_setup", "tep"]], "nrfx_gppi_channel_free": [[241, 3, 1, "c.nrfx_gppi_channel_free", "channel"]], "nrfx_gppi_channel_group_t": [[241, 1, 1, "c.nrfx_gppi_channel_group_t.NRFX_GPPI_CHANNEL_GROUP0", "NRFX_GPPI_CHANNEL_GROUP0"], [241, 1, 1, "c.nrfx_gppi_channel_group_t.NRFX_GPPI_CHANNEL_GROUP1", "NRFX_GPPI_CHANNEL_GROUP1"], [241, 1, 1, "c.nrfx_gppi_channel_group_t.NRFX_GPPI_CHANNEL_GROUP2", "NRFX_GPPI_CHANNEL_GROUP2"], [241, 1, 1, "c.nrfx_gppi_channel_group_t.NRFX_GPPI_CHANNEL_GROUP3", "NRFX_GPPI_CHANNEL_GROUP3"], [241, 1, 1, "c.nrfx_gppi_channel_group_t.NRFX_GPPI_CHANNEL_GROUP4", "NRFX_GPPI_CHANNEL_GROUP4"], [241, 1, 1, "c.nrfx_gppi_channel_group_t.NRFX_GPPI_CHANNEL_GROUP5", "NRFX_GPPI_CHANNEL_GROUP5"]], "nrfx_gppi_channels_disable": [[241, 3, 1, "c.nrfx_gppi_channels_disable", "mask"]], "nrfx_gppi_channels_enable": [[241, 3, 1, "c.nrfx_gppi_channels_enable", "mask"]], "nrfx_gppi_channels_group_set": [[241, 3, 1, "c.nrfx_gppi_channels_group_set", "channel_group"], [241, 3, 1, "c.nrfx_gppi_channels_group_set", "channel_mask"]], "nrfx_gppi_channels_include_in_group": [[241, 3, 1, "c.nrfx_gppi_channels_include_in_group", "channel_group"], [241, 3, 1, "c.nrfx_gppi_channels_include_in_group", "channel_mask"]], "nrfx_gppi_channels_remove_from_group": [[241, 3, 1, "c.nrfx_gppi_channels_remove_from_group", "channel_group"], [241, 3, 1, "c.nrfx_gppi_channels_remove_from_group", "channel_mask"]], "nrfx_gppi_event_endpoint_clear": [[241, 3, 1, "c.nrfx_gppi_event_endpoint_clear", "channel"], [241, 3, 1, "c.nrfx_gppi_event_endpoint_clear", "eep"]], "nrfx_gppi_event_endpoint_setup": [[241, 3, 1, "c.nrfx_gppi_event_endpoint_setup", "channel"], [241, 3, 1, "c.nrfx_gppi_event_endpoint_setup", "eep"]], "nrfx_gppi_fork_endpoint_clear": [[241, 3, 1, "c.nrfx_gppi_fork_endpoint_clear", "channel"], [241, 3, 1, "c.nrfx_gppi_fork_endpoint_clear", "fork_tep"]], "nrfx_gppi_fork_endpoint_setup": [[241, 3, 1, "c.nrfx_gppi_fork_endpoint_setup", "channel"], [241, 3, 1, "c.nrfx_gppi_fork_endpoint_setup", "fork_tep"]], "nrfx_gppi_group_alloc": [[241, 3, 1, "c.nrfx_gppi_group_alloc", "p_group"]], "nrfx_gppi_group_clear": [[241, 3, 1, "c.nrfx_gppi_group_clear", "channel_group"]], "nrfx_gppi_group_disable": [[241, 3, 1, "c.nrfx_gppi_group_disable", "channel_group"]], "nrfx_gppi_group_disable_task_get": [[241, 3, 1, "c.nrfx_gppi_group_disable_task_get", "group"]], "nrfx_gppi_group_enable": [[241, 3, 1, "c.nrfx_gppi_group_enable", "channel_group"]], "nrfx_gppi_group_enable_task_get": [[241, 3, 1, "c.nrfx_gppi_group_enable_task_get", "group"]], "nrfx_gppi_group_free": [[241, 3, 1, "c.nrfx_gppi_group_free", "group"]], "nrfx_gppi_task_address_get": [[241, 3, 1, "c.nrfx_gppi_task_address_get", "task"]], "nrfx_gppi_task_endpoint_clear": [[241, 3, 1, "c.nrfx_gppi_task_endpoint_clear", "channel"], [241, 3, 1, "c.nrfx_gppi_task_endpoint_clear", "tep"]], "nrfx_gppi_task_endpoint_setup": [[241, 3, 1, "c.nrfx_gppi_task_endpoint_setup", "channel"], [241, 3, 1, "c.nrfx_gppi_task_endpoint_setup", "tep"]], "nrfx_gppi_task_t": [[241, 1, 1, "c.nrfx_gppi_task_t.NRFX_GPPI_TASK_CHG0_DIS", "NRFX_GPPI_TASK_CHG0_DIS"], [241, 1, 1, "c.nrfx_gppi_task_t.NRFX_GPPI_TASK_CHG0_EN", "NRFX_GPPI_TASK_CHG0_EN"], [241, 1, 1, "c.nrfx_gppi_task_t.NRFX_GPPI_TASK_CHG1_DIS", "NRFX_GPPI_TASK_CHG1_DIS"], [241, 1, 1, "c.nrfx_gppi_task_t.NRFX_GPPI_TASK_CHG1_EN", "NRFX_GPPI_TASK_CHG1_EN"], [241, 1, 1, "c.nrfx_gppi_task_t.NRFX_GPPI_TASK_CHG2_DIS", "NRFX_GPPI_TASK_CHG2_DIS"], [241, 1, 1, "c.nrfx_gppi_task_t.NRFX_GPPI_TASK_CHG2_EN", "NRFX_GPPI_TASK_CHG2_EN"], [241, 1, 1, "c.nrfx_gppi_task_t.NRFX_GPPI_TASK_CHG3_DIS", "NRFX_GPPI_TASK_CHG3_DIS"], [241, 1, 1, "c.nrfx_gppi_task_t.NRFX_GPPI_TASK_CHG3_EN", "NRFX_GPPI_TASK_CHG3_EN"], [241, 1, 1, "c.nrfx_gppi_task_t.NRFX_GPPI_TASK_CHG4_DIS", "NRFX_GPPI_TASK_CHG4_DIS"], [241, 1, 1, "c.nrfx_gppi_task_t.NRFX_GPPI_TASK_CHG4_EN", "NRFX_GPPI_TASK_CHG4_EN"], [241, 1, 1, "c.nrfx_gppi_task_t.NRFX_GPPI_TASK_CHG5_DIS", "NRFX_GPPI_TASK_CHG5_DIS"], [241, 1, 1, "c.nrfx_gppi_task_t.NRFX_GPPI_TASK_CHG5_EN", "NRFX_GPPI_TASK_CHG5_EN"]], "nrfx_gppi_task_trigger": [[241, 3, 1, "c.nrfx_gppi_task_trigger", "task"]], "nrfx_grtc_action_perform": [[55, 3, 1, "c.nrfx_grtc_action_perform", "action"]], "nrfx_grtc_action_t": [[55, 1, 1, "c.nrfx_grtc_action_t.NRFX_GRTC_ACTION_CLEAR", "NRFX_GRTC_ACTION_CLEAR"], [55, 1, 1, "c.nrfx_grtc_action_t.NRFX_GRTC_ACTION_START", "NRFX_GRTC_ACTION_START"], [55, 1, 1, "c.nrfx_grtc_action_t.NRFX_GRTC_ACTION_STOP", "NRFX_GRTC_ACTION_STOP"]], "nrfx_grtc_active_request_set": [[55, 3, 1, "c.nrfx_grtc_active_request_set", "active"]], "nrfx_grtc_capture_task_address_get": [[55, 3, 1, "c.nrfx_grtc_capture_task_address_get", "channel"]], "nrfx_grtc_cc_relative_reference_t": [[55, 1, 1, "c.nrfx_grtc_cc_relative_reference_t.NRFX_GRTC_CC_RELATIVE_COMPARE", "NRFX_GRTC_CC_RELATIVE_COMPARE"], [55, 1, 1, "c.nrfx_grtc_cc_relative_reference_t.NRFX_GRTC_CC_RELATIVE_SYSCOUNTER", "NRFX_GRTC_CC_RELATIVE_SYSCOUNTER"]], "nrfx_grtc_channel_alloc": [[55, 3, 1, "c.nrfx_grtc_channel_alloc", "p_channel"]], "nrfx_grtc_channel_free": [[55, 3, 1, "c.nrfx_grtc_channel_free", "channel"]], "nrfx_grtc_channel_t": [[55, 6, 1, "c.nrfx_grtc_channel_t.channel", "channel"], [55, 6, 1, "c.nrfx_grtc_channel_t.handler", "handler"], [55, 6, 1, "c.nrfx_grtc_channel_t.p_context", "p_context"]], "nrfx_grtc_clock_source_set": [[55, 3, 1, "c.nrfx_grtc_clock_source_set", "clk_src"]], "nrfx_grtc_event_address_get": [[55, 3, 1, "c.nrfx_grtc_event_address_get", "event"]], "nrfx_grtc_event_compare_address_get": [[55, 3, 1, "c.nrfx_grtc_event_compare_address_get", "channel"]], "nrfx_grtc_init": [[55, 3, 1, "c.nrfx_grtc_init", "interrupt_priority"]], "nrfx_grtc_is_channel_used": [[55, 3, 1, "c.nrfx_grtc_is_channel_used", "channel"]], "nrfx_grtc_rtcomparesync_int_enable": [[55, 3, 1, "c.nrfx_grtc_rtcomparesync_int_enable", "handler"], [55, 3, 1, "c.nrfx_grtc_rtcomparesync_int_enable", "p_context"]], "nrfx_grtc_rtcounter_cc_absolute_set": [[55, 3, 1, "c.nrfx_grtc_rtcounter_cc_absolute_set", "enable_irq"], [55, 3, 1, "c.nrfx_grtc_rtcounter_cc_absolute_set", "handler_data"], [55, 3, 1, "c.nrfx_grtc_rtcounter_cc_absolute_set", "sync"], [55, 3, 1, "c.nrfx_grtc_rtcounter_cc_absolute_set", "val"]], "nrfx_grtc_rtcounter_cc_int_enable": [[55, 3, 1, "c.nrfx_grtc_rtcounter_cc_int_enable", "sync"]], "nrfx_grtc_rtcounter_handler_data_t": [[55, 6, 1, "c.nrfx_grtc_rtcounter_handler_data_t.handler", "handler"], [55, 6, 1, "c.nrfx_grtc_rtcounter_handler_data_t.p_context", "p_context"]], "nrfx_grtc_sleep_config_t": [[55, 6, 1, "c.nrfx_grtc_sleep_config_t.auto_mode", "auto_mode"], [55, 6, 1, "c.nrfx_grtc_sleep_config_t.timeout", "timeout"], [55, 6, 1, "c.nrfx_grtc_sleep_config_t.waketime", "waketime"]], "nrfx_grtc_sleep_configuration_get": [[55, 3, 1, "c.nrfx_grtc_sleep_configuration_get", "p_sleep_cfg"]], "nrfx_grtc_sleep_configure": [[55, 3, 1, "c.nrfx_grtc_sleep_configure", "p_sleep_cfg"]], "nrfx_grtc_sys_counter_cc_enable_check": [[55, 3, 1, "c.nrfx_grtc_sys_counter_cc_enable_check", "channel"]], "nrfx_grtc_syscounter_capture": [[55, 3, 1, "c.nrfx_grtc_syscounter_capture", "channel"]], "nrfx_grtc_syscounter_cc_absolute_set": [[55, 3, 1, "c.nrfx_grtc_syscounter_cc_absolute_set", "enable_irq"], [55, 3, 1, "c.nrfx_grtc_syscounter_cc_absolute_set", "p_chan_data"], [55, 3, 1, "c.nrfx_grtc_syscounter_cc_absolute_set", "val"]], "nrfx_grtc_syscounter_cc_disable": [[55, 3, 1, "c.nrfx_grtc_syscounter_cc_disable", "channel"]], "nrfx_grtc_syscounter_cc_int_disable": [[55, 3, 1, "c.nrfx_grtc_syscounter_cc_int_disable", "channel"]], "nrfx_grtc_syscounter_cc_int_enable": [[55, 3, 1, "c.nrfx_grtc_syscounter_cc_int_enable", "channel"]], "nrfx_grtc_syscounter_cc_int_enable_check": [[55, 3, 1, "c.nrfx_grtc_syscounter_cc_int_enable_check", "channel"]], "nrfx_grtc_syscounter_cc_relative_set": [[55, 3, 1, "c.nrfx_grtc_syscounter_cc_relative_set", "enable_irq"], [55, 3, 1, "c.nrfx_grtc_syscounter_cc_relative_set", "p_chan_data"], [55, 3, 1, "c.nrfx_grtc_syscounter_cc_relative_set", "reference"], [55, 3, 1, "c.nrfx_grtc_syscounter_cc_relative_set", "val"]], "nrfx_grtc_syscounter_cc_value_read": [[55, 3, 1, "c.nrfx_grtc_syscounter_cc_value_read", "channel"], [55, 3, 1, "c.nrfx_grtc_syscounter_cc_value_read", "p_val"]], "nrfx_grtc_syscounter_compare_event_check": [[55, 3, 1, "c.nrfx_grtc_syscounter_compare_event_check", "channel"]], "nrfx_grtc_syscounter_get": [[55, 3, 1, "c.nrfx_grtc_syscounter_get", "p_counter"]], "nrfx_grtc_syscounter_start": [[55, 3, 1, "c.nrfx_grtc_syscounter_start", "busy_wait"], [55, 3, 1, "c.nrfx_grtc_syscounter_start", "p_main_cc_channel"]], "nrfx_grtc_syscountervalid_int_enable": [[55, 3, 1, "c.nrfx_grtc_syscountervalid_int_enable", "handler"], [55, 3, 1, "c.nrfx_grtc_syscountervalid_int_enable", "p_context"]], "nrfx_grtc_task_address_get": [[55, 3, 1, "c.nrfx_grtc_task_address_get", "task"]], "nrfx_i2s_config_t": [[60, 6, 1, "c.nrfx_i2s_config_t.alignment", "alignment"], [60, 6, 1, "c.nrfx_i2s_config_t.channels", "channels"], [60, 6, 1, "c.nrfx_i2s_config_t.format", "format"], [60, 6, 1, "c.nrfx_i2s_config_t.irq_priority", "irq_priority"], [60, 6, 1, "c.nrfx_i2s_config_t.lrck_pin", "lrck_pin"], [60, 6, 1, "c.nrfx_i2s_config_t.mck_pin", "mck_pin"], [60, 6, 1, "c.nrfx_i2s_config_t.mck_setup", "mck_setup"], [60, 6, 1, "c.nrfx_i2s_config_t.mode", "mode"], [60, 6, 1, "c.nrfx_i2s_config_t.ratio", "ratio"], [60, 6, 1, "c.nrfx_i2s_config_t.sample_width", "sample_width"], [60, 6, 1, "c.nrfx_i2s_config_t.sck_pin", "sck_pin"], [60, 6, 1, "c.nrfx_i2s_config_t.sdin_pin", "sdin_pin"], [60, 6, 1, "c.nrfx_i2s_config_t.sdout_pin", "sdout_pin"], [60, 6, 1, "c.nrfx_i2s_config_t.skip_gpio_cfg", "skip_gpio_cfg"], [60, 6, 1, "c.nrfx_i2s_config_t.skip_psel_cfg", "skip_psel_cfg"]], "nrfx_i2s_init": [[60, 3, 1, "c.nrfx_i2s_init", "handler"], [60, 3, 1, "c.nrfx_i2s_init", "p_config"], [60, 3, 1, "c.nrfx_i2s_init", "p_instance"]], "nrfx_i2s_init_check": [[60, 3, 1, "c.nrfx_i2s_init_check", "p_instance"]], "nrfx_i2s_next_buffers_set": [[60, 3, 1, "c.nrfx_i2s_next_buffers_set", "p_buffers"], [60, 3, 1, "c.nrfx_i2s_next_buffers_set", "p_instance"]], "nrfx_i2s_start": [[60, 3, 1, "c.nrfx_i2s_start", "flags"], [60, 3, 1, "c.nrfx_i2s_start", "p_initial_buffers"], [60, 3, 1, "c.nrfx_i2s_start", "p_instance"]], "nrfx_i2s_stop": [[60, 3, 1, "c.nrfx_i2s_stop", "p_instance"]], "nrfx_i2s_t": [[60, 6, 1, "c.nrfx_i2s_t.drv_inst_idx", "drv_inst_idx"], [60, 6, 1, "c.nrfx_i2s_t.p_reg", "p_reg"]], "nrfx_i2s_uninit": [[60, 3, 1, "c.nrfx_i2s_uninit", "p_instance"]], "nrfx_interconnect_apb_domain_get": [[243, 3, 1, "c.nrfx_interconnect_apb_domain_get", "p_apb_prop"]], "nrfx_interconnect_apb_get": [[243, 3, 1, "c.nrfx_interconnect_apb_get", "addr"]], "nrfx_interconnect_apb_t": [[243, 6, 1, "c.nrfx_interconnect_apb_t.dppi_pub_channels_mask", "dppi_pub_channels_mask"], [243, 6, 1, "c.nrfx_interconnect_apb_t.dppi_sub_channels_mask", "dppi_sub_channels_mask"], [243, 6, 1, "c.nrfx_interconnect_apb_t.p_dppi", "p_dppi"], [243, 6, 1, "c.nrfx_interconnect_apb_t.p_dppi_channels", "p_dppi_channels"], [243, 6, 1, "c.nrfx_interconnect_apb_t.p_ppib", "p_ppib"], [243, 6, 1, "c.nrfx_interconnect_apb_t.size", "size"]], "nrfx_interconnect_ipct_domain_get": [[244, 3, 1, "c.nrfx_interconnect_ipct_domain_get", "p_ipct_prop"]], "nrfx_interconnect_ipct_get": [[244, 3, 1, "c.nrfx_interconnect_ipct_get", "p_apb_prop"]], "nrfx_interconnect_ipct_global_by_idx_get": [[244, 3, 1, "c.nrfx_interconnect_ipct_global_by_idx_get", "idx"]], "nrfx_interconnect_ipct_t": [[244, 6, 1, "c.nrfx_interconnect_ipct_t.ipct_pub_channels_mask", "ipct_pub_channels_mask"], [244, 6, 1, "c.nrfx_interconnect_ipct_t.ipct_sub_channels_mask", "ipct_sub_channels_mask"], [244, 6, 1, "c.nrfx_interconnect_ipct_t.p_ipct", "p_ipct"], [244, 6, 1, "c.nrfx_interconnect_ipct_t.p_ipct_channels", "p_ipct_channels"]], "nrfx_ipc_config_load": [[66, 3, 1, "c.nrfx_ipc_config_load", "p_config"]], "nrfx_ipc_config_t": [[66, 6, 1, "c.nrfx_ipc_config_t.receive_event_config", "receive_event_config"], [66, 6, 1, "c.nrfx_ipc_config_t.receive_events_enabled", "receive_events_enabled"], [66, 6, 1, "c.nrfx_ipc_config_t.send_task_config", "send_task_config"]], "nrfx_ipc_gpmem_get": [[66, 3, 1, "c.nrfx_ipc_gpmem_get", "mem_index"]], "nrfx_ipc_gpmem_set": [[66, 3, 1, "c.nrfx_ipc_gpmem_set", "data"], [66, 3, 1, "c.nrfx_ipc_gpmem_set", "mem_index"]], "nrfx_ipc_init": [[66, 3, 1, "c.nrfx_ipc_init", "handler"], [66, 3, 1, "c.nrfx_ipc_init", "irq_priority"], [66, 3, 1, "c.nrfx_ipc_init", "p_context"]], "nrfx_ipc_receive_config_set": [[66, 3, 1, "c.nrfx_ipc_receive_config_set", "channel_bitmask"], [66, 3, 1, "c.nrfx_ipc_receive_config_set", "event_index"]], "nrfx_ipc_receive_event_channel_assign": [[66, 3, 1, "c.nrfx_ipc_receive_event_channel_assign", "channel_index"], [66, 3, 1, "c.nrfx_ipc_receive_event_channel_assign", "event_index"]], "nrfx_ipc_receive_event_disable": [[66, 3, 1, "c.nrfx_ipc_receive_event_disable", "event_index"]], "nrfx_ipc_receive_event_enable": [[66, 3, 1, "c.nrfx_ipc_receive_event_enable", "event_index"]], "nrfx_ipc_receive_event_group_disable": [[66, 3, 1, "c.nrfx_ipc_receive_event_group_disable", "event_bitmask"]], "nrfx_ipc_receive_event_group_enable": [[66, 3, 1, "c.nrfx_ipc_receive_event_group_enable", "event_bitmask"]], "nrfx_ipc_send_config_set": [[66, 3, 1, "c.nrfx_ipc_send_config_set", "channel_bitmask"], [66, 3, 1, "c.nrfx_ipc_send_config_set", "send_index"]], "nrfx_ipc_send_task_channel_assign": [[66, 3, 1, "c.nrfx_ipc_send_task_channel_assign", "channel_index"], [66, 3, 1, "c.nrfx_ipc_send_task_channel_assign", "send_index"]], "nrfx_ipc_signal": [[66, 3, 1, "c.nrfx_ipc_signal", "send_index"]], "nrfx_is_in_ram": [[234, 3, 1, "c.nrfx_is_in_ram", "p_object"]], "nrfx_is_word_aligned": [[234, 3, 1, "c.nrfx_is_word_aligned", "p_object"]], "nrfx_lpcomp_config_t": [[73, 6, 1, "c.nrfx_lpcomp_config_t.detection", "detection"], [73, 6, 1, "c.nrfx_lpcomp_config_t.ext_ref", "ext_ref"], [73, 6, 1, "c.nrfx_lpcomp_config_t.input", "input"], [73, 6, 1, "c.nrfx_lpcomp_config_t.interrupt_priority", "interrupt_priority"], [73, 6, 1, "c.nrfx_lpcomp_config_t.reference", "reference"]], "nrfx_lpcomp_init": [[73, 3, 1, "c.nrfx_lpcomp_init", "event_handler"], [73, 3, 1, "c.nrfx_lpcomp_init", "p_config"]], "nrfx_nfct_active_state_t": [[92, 1, 1, "c.nrfx_nfct_active_state_t.NRFX_NFCT_ACTIVE_STATE_DEFAULT", "NRFX_NFCT_ACTIVE_STATE_DEFAULT"], [92, 1, 1, "c.nrfx_nfct_active_state_t.NRFX_NFCT_ACTIVE_STATE_IDLE", "NRFX_NFCT_ACTIVE_STATE_IDLE"], [92, 1, 1, "c.nrfx_nfct_active_state_t.NRFX_NFCT_ACTIVE_STATE_SLEEP", "NRFX_NFCT_ACTIVE_STATE_SLEEP"]], "nrfx_nfct_bits_tx": [[92, 3, 1, "c.nrfx_nfct_bits_tx", "delay_mode"], [92, 3, 1, "c.nrfx_nfct_bits_tx", "p_tx_data"]], "nrfx_nfct_config_t": [[92, 6, 1, "c.nrfx_nfct_config_t.cb", "cb"], [92, 6, 1, "c.nrfx_nfct_config_t.irq_priority", "irq_priority"], [92, 6, 1, "c.nrfx_nfct_config_t.rxtx_int_mask", "rxtx_int_mask"]], "nrfx_nfct_data_desc_t": [[92, 6, 1, "c.nrfx_nfct_data_desc_t.data_size", "data_size"], [92, 6, 1, "c.nrfx_nfct_data_desc_t.p_data", "p_data"]], "nrfx_nfct_error_t": [[92, 1, 1, "c.nrfx_nfct_error_t.NRFX_NFCT_ERROR_FRAMEDELAYTIMEOUT", "NRFX_NFCT_ERROR_FRAMEDELAYTIMEOUT"], [92, 1, 1, "c.nrfx_nfct_error_t.NRFX_NFCT_ERROR_NUM", "NRFX_NFCT_ERROR_NUM"]], "nrfx_nfct_evt_error_t": [[92, 6, 1, "c.nrfx_nfct_evt_error_t.reason", "reason"]], "nrfx_nfct_evt_id_t": [[92, 1, 1, "c.nrfx_nfct_evt_id_t.NRFX_NFCT_EVT_ERROR", "NRFX_NFCT_EVT_ERROR"], [92, 1, 1, "c.nrfx_nfct_evt_id_t.NRFX_NFCT_EVT_FIELD_DETECTED", "NRFX_NFCT_EVT_FIELD_DETECTED"], [92, 1, 1, "c.nrfx_nfct_evt_id_t.NRFX_NFCT_EVT_FIELD_LOST", "NRFX_NFCT_EVT_FIELD_LOST"], [92, 1, 1, "c.nrfx_nfct_evt_id_t.NRFX_NFCT_EVT_RX_FRAMEEND", "NRFX_NFCT_EVT_RX_FRAMEEND"], [92, 1, 1, "c.nrfx_nfct_evt_id_t.NRFX_NFCT_EVT_RX_FRAMESTART", "NRFX_NFCT_EVT_RX_FRAMESTART"], [92, 1, 1, "c.nrfx_nfct_evt_id_t.NRFX_NFCT_EVT_SELECTED", "NRFX_NFCT_EVT_SELECTED"], [92, 1, 1, "c.nrfx_nfct_evt_id_t.NRFX_NFCT_EVT_TX_FRAMEEND", "NRFX_NFCT_EVT_TX_FRAMEEND"], [92, 1, 1, "c.nrfx_nfct_evt_id_t.NRFX_NFCT_EVT_TX_FRAMESTART", "NRFX_NFCT_EVT_TX_FRAMESTART"]], "nrfx_nfct_evt_rx_frameend_t": [[92, 6, 1, "c.nrfx_nfct_evt_rx_frameend_t.rx_data", "rx_data"], [92, 6, 1, "c.nrfx_nfct_evt_rx_frameend_t.rx_status", "rx_status"]], "nrfx_nfct_evt_t": [[92, 6, 1, "c.nrfx_nfct_evt_t.error", "error"], [92, 6, 1, "c.nrfx_nfct_evt_t.evt_id", "evt_id"], [92, 6, 1, "c.nrfx_nfct_evt_t.params", "params"], [92, 6, 1, "c.nrfx_nfct_evt_t.rx_frameend", "rx_frameend"], [92, 6, 1, "c.nrfx_nfct_evt_t.tx_framestart", "tx_framestart"]], "nrfx_nfct_evt_tx_framestart_t": [[92, 6, 1, "c.nrfx_nfct_evt_tx_framestart_t.tx_data", "tx_data"]], "nrfx_nfct_init": [[92, 3, 1, "c.nrfx_nfct_init", "p_config"]], "nrfx_nfct_init_substate_force": [[92, 3, 1, "c.nrfx_nfct_init_substate_force", "sub_state"]], "nrfx_nfct_nfcid1_default_bytes_get": [[92, 3, 1, "c.nrfx_nfct_nfcid1_default_bytes_get", "nfcid1_buff_len"], [92, 3, 1, "c.nrfx_nfct_nfcid1_default_bytes_get", "p_nfcid1_buff"]], "nrfx_nfct_nfcid1_t": [[92, 6, 1, "c.nrfx_nfct_nfcid1_t.id_size", "id_size"], [92, 6, 1, "c.nrfx_nfct_nfcid1_t.p_id", "p_id"]], "nrfx_nfct_param_id_t": [[92, 1, 1, "c.nrfx_nfct_param_id_t.NRFX_NFCT_PARAM_ID_FDT", "NRFX_NFCT_PARAM_ID_FDT"], [92, 1, 1, "c.nrfx_nfct_param_id_t.NRFX_NFCT_PARAM_ID_FDT_MIN", "NRFX_NFCT_PARAM_ID_FDT_MIN"], [92, 1, 1, "c.nrfx_nfct_param_id_t.NRFX_NFCT_PARAM_ID_NFCID1", "NRFX_NFCT_PARAM_ID_NFCID1"], [92, 1, 1, "c.nrfx_nfct_param_id_t.NRFX_NFCT_PARAM_ID_SEL_RES", "NRFX_NFCT_PARAM_ID_SEL_RES"]], "nrfx_nfct_param_t": [[92, 6, 1, "c.nrfx_nfct_param_t.data", "data"], [92, 6, 1, "c.nrfx_nfct_param_t.fdt", "fdt"], [92, 6, 1, "c.nrfx_nfct_param_t.fdt_min", "fdt_min"], [92, 6, 1, "c.nrfx_nfct_param_t.id", "id"], [92, 6, 1, "c.nrfx_nfct_param_t.nfcid1", "nfcid1"], [92, 6, 1, "c.nrfx_nfct_param_t.sel_res_protocol", "sel_res_protocol"]], "nrfx_nfct_parameter_set": [[92, 3, 1, "c.nrfx_nfct_parameter_set", "p_param"]], "nrfx_nfct_rx": [[92, 3, 1, "c.nrfx_nfct_rx", "p_rx_data"]], "nrfx_nfct_state_force": [[92, 3, 1, "c.nrfx_nfct_state_force", "state"]], "nrfx_nfct_state_t": [[92, 1, 1, "c.nrfx_nfct_state_t.NRFX_NFCT_STATE_ACTIVATED", "NRFX_NFCT_STATE_ACTIVATED"], [92, 1, 1, "c.nrfx_nfct_state_t.NRFX_NFCT_STATE_DISABLED", "NRFX_NFCT_STATE_DISABLED"], [92, 1, 1, "c.nrfx_nfct_state_t.NRFX_NFCT_STATE_SENSING", "NRFX_NFCT_STATE_SENSING"]], "nrfx_nfct_tx": [[92, 3, 1, "c.nrfx_nfct_tx", "delay_mode"], [92, 3, 1, "c.nrfx_nfct_tx", "p_tx_data"]], "nrfx_nvmc_byte_writable_check": [[95, 3, 1, "c.nrfx_nvmc_byte_writable_check", "address"], [95, 3, 1, "c.nrfx_nvmc_byte_writable_check", "value"]], "nrfx_nvmc_byte_write": [[95, 3, 1, "c.nrfx_nvmc_byte_write", "address"], [95, 3, 1, "c.nrfx_nvmc_byte_write", "value"]], "nrfx_nvmc_bytes_write": [[95, 3, 1, "c.nrfx_nvmc_bytes_write", "address"], [95, 3, 1, "c.nrfx_nvmc_bytes_write", "num_bytes"], [95, 3, 1, "c.nrfx_nvmc_bytes_write", "src"]], "nrfx_nvmc_halfword_writable_check": [[95, 3, 1, "c.nrfx_nvmc_halfword_writable_check", "address"], [95, 3, 1, "c.nrfx_nvmc_halfword_writable_check", "value"]], "nrfx_nvmc_halfword_write": [[95, 3, 1, "c.nrfx_nvmc_halfword_write", "address"], [95, 3, 1, "c.nrfx_nvmc_halfword_write", "value"]], "nrfx_nvmc_otp_halfword_read": [[95, 3, 1, "c.nrfx_nvmc_otp_halfword_read", "address"]], "nrfx_nvmc_page_erase": [[95, 3, 1, "c.nrfx_nvmc_page_erase", "address"]], "nrfx_nvmc_page_partial_erase_init": [[95, 3, 1, "c.nrfx_nvmc_page_partial_erase_init", "address"], [95, 3, 1, "c.nrfx_nvmc_page_partial_erase_init", "duration_ms"]], "nrfx_nvmc_uicr_word_read": [[95, 3, 1, "c.nrfx_nvmc_uicr_word_read", "address"]], "nrfx_nvmc_word_writable_check": [[95, 3, 1, "c.nrfx_nvmc_word_writable_check", "address"], [95, 3, 1, "c.nrfx_nvmc_word_writable_check", "value"]], "nrfx_nvmc_word_write": [[95, 3, 1, "c.nrfx_nvmc_word_write", "address"], [95, 3, 1, "c.nrfx_nvmc_word_write", "value"]], "nrfx_nvmc_words_write": [[95, 3, 1, "c.nrfx_nvmc_words_write", "address"], [95, 3, 1, "c.nrfx_nvmc_words_write", "num_words"], [95, 3, 1, "c.nrfx_nvmc_words_write", "src"]], "nrfx_pdm_buffer_set": [[99, 3, 1, "c.nrfx_pdm_buffer_set", "buffer"], [99, 3, 1, "c.nrfx_pdm_buffer_set", "buffer_length"]], "nrfx_pdm_config_t": [[99, 6, 1, "c.nrfx_pdm_config_t.clk_pin", "clk_pin"], [99, 6, 1, "c.nrfx_pdm_config_t.clock_freq", "clock_freq"], [99, 6, 1, "c.nrfx_pdm_config_t.din_pin", "din_pin"], [99, 6, 1, "c.nrfx_pdm_config_t.edge", "edge"], [99, 6, 1, "c.nrfx_pdm_config_t.gain_l", "gain_l"], [99, 6, 1, "c.nrfx_pdm_config_t.gain_r", "gain_r"], [99, 6, 1, "c.nrfx_pdm_config_t.interrupt_priority", "interrupt_priority"], [99, 6, 1, "c.nrfx_pdm_config_t.mode", "mode"], [99, 6, 1, "c.nrfx_pdm_config_t.skip_gpio_cfg", "skip_gpio_cfg"], [99, 6, 1, "c.nrfx_pdm_config_t.skip_psel_cfg", "skip_psel_cfg"]], "nrfx_pdm_error_t": [[99, 1, 1, "c.nrfx_pdm_error_t.NRFX_PDM_ERROR_OVERFLOW", "NRFX_PDM_ERROR_OVERFLOW"], [99, 1, 1, "c.nrfx_pdm_error_t.NRFX_PDM_NO_ERROR", "NRFX_PDM_NO_ERROR"]], "nrfx_pdm_evt_t": [[99, 6, 1, "c.nrfx_pdm_evt_t.buffer_released", "buffer_released"], [99, 6, 1, "c.nrfx_pdm_evt_t.buffer_requested", "buffer_requested"], [99, 6, 1, "c.nrfx_pdm_evt_t.error", "error"]], "nrfx_pdm_init": [[99, 3, 1, "c.nrfx_pdm_init", "event_handler"], [99, 3, 1, "c.nrfx_pdm_init", "p_config"]], "nrfx_pdm_reconfigure": [[99, 3, 1, "c.nrfx_pdm_reconfigure", "p_config"]], "nrfx_pdm_task_address_get": [[99, 3, 1, "c.nrfx_pdm_task_address_get", "task"]], "nrfx_power_config_t": [[103, 6, 1, "c.nrfx_power_config_t.dcdcen", "dcdcen"], [103, 6, 1, "c.nrfx_power_config_t.dcdcenhv", "dcdcenhv"]], "nrfx_power_init": [[103, 3, 1, "c.nrfx_power_init", "p_config"]], "nrfx_power_mode_t": [[103, 1, 1, "c.nrfx_power_mode_t.NRFX_POWER_MODE_CONSTLAT", "NRFX_POWER_MODE_CONSTLAT"], [103, 1, 1, "c.nrfx_power_mode_t.NRFX_POWER_MODE_LOWPWR", "NRFX_POWER_MODE_LOWPWR"]], "nrfx_power_pof_enable": [[103, 3, 1, "c.nrfx_power_pof_enable", "p_config"]], "nrfx_power_pof_init": [[103, 3, 1, "c.nrfx_power_pof_init", "p_config"]], "nrfx_power_pofwarn_config_t": [[103, 6, 1, "c.nrfx_power_pofwarn_config_t.handler", "handler"], [103, 6, 1, "c.nrfx_power_pofwarn_config_t.thr", "thr"], [103, 6, 1, "c.nrfx_power_pofwarn_config_t.thrvddh", "thrvddh"]], "nrfx_power_sleep_evt_t": [[103, 1, 1, "c.nrfx_power_sleep_evt_t.NRFX_POWER_SLEEP_EVT_ENTER", "NRFX_POWER_SLEEP_EVT_ENTER"], [103, 1, 1, "c.nrfx_power_sleep_evt_t.NRFX_POWER_SLEEP_EVT_EXIT", "NRFX_POWER_SLEEP_EVT_EXIT"]], "nrfx_power_sleepevt_config_t": [[103, 6, 1, "c.nrfx_power_sleepevt_config_t.en_enter", "en_enter"], [103, 6, 1, "c.nrfx_power_sleepevt_config_t.en_exit", "en_exit"], [103, 6, 1, "c.nrfx_power_sleepevt_config_t.handler", "handler"]], "nrfx_power_sleepevt_enable": [[103, 3, 1, "c.nrfx_power_sleepevt_enable", "p_config"]], "nrfx_power_sleepevt_init": [[103, 3, 1, "c.nrfx_power_sleepevt_init", "p_config"]], "nrfx_power_usb_evt_t": [[103, 1, 1, "c.nrfx_power_usb_evt_t.NRFX_POWER_USB_EVT_DETECTED", "NRFX_POWER_USB_EVT_DETECTED"], [103, 1, 1, "c.nrfx_power_usb_evt_t.NRFX_POWER_USB_EVT_READY", "NRFX_POWER_USB_EVT_READY"], [103, 1, 1, "c.nrfx_power_usb_evt_t.NRFX_POWER_USB_EVT_REMOVED", "NRFX_POWER_USB_EVT_REMOVED"]], "nrfx_power_usb_state_t": [[103, 1, 1, "c.nrfx_power_usb_state_t.NRFX_POWER_USB_STATE_CONNECTED", "NRFX_POWER_USB_STATE_CONNECTED"], [103, 1, 1, "c.nrfx_power_usb_state_t.NRFX_POWER_USB_STATE_DISCONNECTED", "NRFX_POWER_USB_STATE_DISCONNECTED"], [103, 1, 1, "c.nrfx_power_usb_state_t.NRFX_POWER_USB_STATE_READY", "NRFX_POWER_USB_STATE_READY"]], "nrfx_power_usbevt_config_t": [[103, 6, 1, "c.nrfx_power_usbevt_config_t.handler", "handler"]], "nrfx_power_usbevt_init": [[103, 3, 1, "c.nrfx_power_usbevt_init", "p_config"]], "nrfx_ppi_channel_alloc": [[106, 3, 1, "c.nrfx_ppi_channel_alloc", "p_channel"]], "nrfx_ppi_channel_assign": [[106, 3, 1, "c.nrfx_ppi_channel_assign", "channel"], [106, 3, 1, "c.nrfx_ppi_channel_assign", "eep"], [106, 3, 1, "c.nrfx_ppi_channel_assign", "tep"]], "nrfx_ppi_channel_disable": [[106, 3, 1, "c.nrfx_ppi_channel_disable", "channel"]], "nrfx_ppi_channel_enable": [[106, 3, 1, "c.nrfx_ppi_channel_enable", "channel"]], "nrfx_ppi_channel_fork_assign": [[106, 3, 1, "c.nrfx_ppi_channel_fork_assign", "channel"], [106, 3, 1, "c.nrfx_ppi_channel_fork_assign", "fork_tep"]], "nrfx_ppi_channel_free": [[106, 3, 1, "c.nrfx_ppi_channel_free", "channel"]], "nrfx_ppi_channel_include_in_group": [[106, 3, 1, "c.nrfx_ppi_channel_include_in_group", "channel"], [106, 3, 1, "c.nrfx_ppi_channel_include_in_group", "group"]], "nrfx_ppi_channel_remove_from_group": [[106, 3, 1, "c.nrfx_ppi_channel_remove_from_group", "channel"], [106, 3, 1, "c.nrfx_ppi_channel_remove_from_group", "group"]], "nrfx_ppi_channel_to_mask": [[106, 3, 1, "c.nrfx_ppi_channel_to_mask", "channel"]], "nrfx_ppi_channels_include_in_group": [[106, 3, 1, "c.nrfx_ppi_channels_include_in_group", "channel_mask"], [106, 3, 1, "c.nrfx_ppi_channels_include_in_group", "group"]], "nrfx_ppi_channels_remove_from_group": [[106, 3, 1, "c.nrfx_ppi_channels_remove_from_group", "channel_mask"], [106, 3, 1, "c.nrfx_ppi_channels_remove_from_group", "group"]], "nrfx_ppi_group_alloc": [[106, 3, 1, "c.nrfx_ppi_group_alloc", "p_group"]], "nrfx_ppi_group_clear": [[106, 3, 1, "c.nrfx_ppi_group_clear", "group"]], "nrfx_ppi_group_disable": [[106, 3, 1, "c.nrfx_ppi_group_disable", "group"]], "nrfx_ppi_group_enable": [[106, 3, 1, "c.nrfx_ppi_group_enable", "group"]], "nrfx_ppi_group_free": [[106, 3, 1, "c.nrfx_ppi_group_free", "group"]], "nrfx_ppi_task_address_get": [[106, 3, 1, "c.nrfx_ppi_task_address_get", "task"]], "nrfx_ppi_task_group_disable_address_get": [[106, 3, 1, "c.nrfx_ppi_task_group_disable_address_get", "group"]], "nrfx_ppi_task_group_enable_address_get": [[106, 3, 1, "c.nrfx_ppi_task_group_enable_address_get", "group"]], "nrfx_prs_acquire": [[246, 3, 1, "c.nrfx_prs_acquire", "irq_handler"], [246, 3, 1, "c.nrfx_prs_acquire", "p_base_addr"]], "nrfx_prs_release": [[246, 3, 1, "c.nrfx_prs_release", "p_base_addr"]], "nrfx_pwm_complex_playback": [[111, 3, 1, "c.nrfx_pwm_complex_playback", "flags"], [111, 3, 1, "c.nrfx_pwm_complex_playback", "p_instance"], [111, 3, 1, "c.nrfx_pwm_complex_playback", "p_sequence_0"], [111, 3, 1, "c.nrfx_pwm_complex_playback", "p_sequence_1"], [111, 3, 1, "c.nrfx_pwm_complex_playback", "playback_count"]], "nrfx_pwm_config_t": [[111, 6, 1, "c.nrfx_pwm_config_t.base_clock", "base_clock"], [111, 6, 1, "c.nrfx_pwm_config_t.count_mode", "count_mode"], [111, 6, 1, "c.nrfx_pwm_config_t.irq_priority", "irq_priority"], [111, 6, 1, "c.nrfx_pwm_config_t.load_mode", "load_mode"], [111, 6, 1, "c.nrfx_pwm_config_t.output_pins", "output_pins"], [111, 6, 1, "c.nrfx_pwm_config_t.pin_inverted", "pin_inverted"], [111, 6, 1, "c.nrfx_pwm_config_t.skip_gpio_cfg", "skip_gpio_cfg"], [111, 6, 1, "c.nrfx_pwm_config_t.skip_psel_cfg", "skip_psel_cfg"], [111, 6, 1, "c.nrfx_pwm_config_t.step_mode", "step_mode"], [111, 6, 1, "c.nrfx_pwm_config_t.top_value", "top_value"]], "nrfx_pwm_event_address_get": [[111, 3, 1, "c.nrfx_pwm_event_address_get", "event"], [111, 3, 1, "c.nrfx_pwm_event_address_get", "p_instance"]], "nrfx_pwm_evt_type_t": [[111, 1, 1, "c.nrfx_pwm_evt_type_t.NRFX_PWM_EVT_END_SEQ0", "NRFX_PWM_EVT_END_SEQ0"], [111, 1, 1, "c.nrfx_pwm_evt_type_t.NRFX_PWM_EVT_END_SEQ1", "NRFX_PWM_EVT_END_SEQ1"], [111, 1, 1, "c.nrfx_pwm_evt_type_t.NRFX_PWM_EVT_FINISHED", "NRFX_PWM_EVT_FINISHED"], [111, 1, 1, "c.nrfx_pwm_evt_type_t.NRFX_PWM_EVT_STOPPED", "NRFX_PWM_EVT_STOPPED"]], "nrfx_pwm_flag_t": [[111, 1, 1, "c.nrfx_pwm_flag_t.NRFX_PWM_FLAG_LOOP", "NRFX_PWM_FLAG_LOOP"], [111, 1, 1, "c.nrfx_pwm_flag_t.NRFX_PWM_FLAG_NO_EVT_FINISHED", "NRFX_PWM_FLAG_NO_EVT_FINISHED"], [111, 1, 1, "c.nrfx_pwm_flag_t.NRFX_PWM_FLAG_SIGNAL_END_SEQ0", "NRFX_PWM_FLAG_SIGNAL_END_SEQ0"], [111, 1, 1, "c.nrfx_pwm_flag_t.NRFX_PWM_FLAG_SIGNAL_END_SEQ1", "NRFX_PWM_FLAG_SIGNAL_END_SEQ1"], [111, 1, 1, "c.nrfx_pwm_flag_t.NRFX_PWM_FLAG_START_VIA_TASK", "NRFX_PWM_FLAG_START_VIA_TASK"], [111, 1, 1, "c.nrfx_pwm_flag_t.NRFX_PWM_FLAG_STOP", "NRFX_PWM_FLAG_STOP"]], "nrfx_pwm_init": [[111, 3, 1, "c.nrfx_pwm_init", "handler"], [111, 3, 1, "c.nrfx_pwm_init", "p_config"], [111, 3, 1, "c.nrfx_pwm_init", "p_context"], [111, 3, 1, "c.nrfx_pwm_init", "p_instance"]], "nrfx_pwm_init_check": [[111, 3, 1, "c.nrfx_pwm_init_check", "p_instance"]], "nrfx_pwm_reconfigure": [[111, 3, 1, "c.nrfx_pwm_reconfigure", "p_config"], [111, 3, 1, "c.nrfx_pwm_reconfigure", "p_instance"]], "nrfx_pwm_sequence_update": [[111, 3, 1, "c.nrfx_pwm_sequence_update", "p_instance"], [111, 3, 1, "c.nrfx_pwm_sequence_update", "p_sequence"], [111, 3, 1, "c.nrfx_pwm_sequence_update", "seq_id"]], "nrfx_pwm_simple_playback": [[111, 3, 1, "c.nrfx_pwm_simple_playback", "flags"], [111, 3, 1, "c.nrfx_pwm_simple_playback", "p_instance"], [111, 3, 1, "c.nrfx_pwm_simple_playback", "p_sequence"], [111, 3, 1, "c.nrfx_pwm_simple_playback", "playback_count"]], "nrfx_pwm_step": [[111, 3, 1, "c.nrfx_pwm_step", "p_instance"]], "nrfx_pwm_stop": [[111, 3, 1, "c.nrfx_pwm_stop", "p_instance"], [111, 3, 1, "c.nrfx_pwm_stop", "wait_until_stopped"]], "nrfx_pwm_stopped_check": [[111, 3, 1, "c.nrfx_pwm_stopped_check", "p_instance"]], "nrfx_pwm_t": [[111, 6, 1, "c.nrfx_pwm_t.instance_id", "instance_id"], [111, 6, 1, "c.nrfx_pwm_t.p_reg", "p_reg"]], "nrfx_pwm_task_address_get": [[111, 3, 1, "c.nrfx_pwm_task_address_get", "p_instance"], [111, 3, 1, "c.nrfx_pwm_task_address_get", "task"]], "nrfx_pwm_uninit": [[111, 3, 1, "c.nrfx_pwm_uninit", "p_instance"]], "nrfx_qdec_accumulators_read": [[115, 3, 1, "c.nrfx_qdec_accumulators_read", "p_acc"], [115, 3, 1, "c.nrfx_qdec_accumulators_read", "p_accdbl"], [115, 3, 1, "c.nrfx_qdec_accumulators_read", "p_instance"]], "nrfx_qdec_config_t": [[115, 6, 1, "c.nrfx_qdec_config_t.dbfen", "dbfen"], [115, 6, 1, "c.nrfx_qdec_config_t.interrupt_priority", "interrupt_priority"], [115, 6, 1, "c.nrfx_qdec_config_t.ledpol", "ledpol"], [115, 6, 1, "c.nrfx_qdec_config_t.ledpre", "ledpre"], [115, 6, 1, "c.nrfx_qdec_config_t.psela", "psela"], [115, 6, 1, "c.nrfx_qdec_config_t.pselb", "pselb"], [115, 6, 1, "c.nrfx_qdec_config_t.pselled", "pselled"], [115, 6, 1, "c.nrfx_qdec_config_t.reportper", "reportper"], [115, 6, 1, "c.nrfx_qdec_config_t.reportper_inten", "reportper_inten"], [115, 6, 1, "c.nrfx_qdec_config_t.sample_inten", "sample_inten"], [115, 6, 1, "c.nrfx_qdec_config_t.sampleper", "sampleper"], [115, 6, 1, "c.nrfx_qdec_config_t.skip_gpio_cfg", "skip_gpio_cfg"], [115, 6, 1, "c.nrfx_qdec_config_t.skip_psel_cfg", "skip_psel_cfg"]], "nrfx_qdec_disable": [[115, 3, 1, "c.nrfx_qdec_disable", "p_instance"]], "nrfx_qdec_enable": [[115, 3, 1, "c.nrfx_qdec_enable", "p_instance"]], "nrfx_qdec_event_address_get": [[115, 3, 1, "c.nrfx_qdec_event_address_get", "event"], [115, 3, 1, "c.nrfx_qdec_event_address_get", "p_instance"]], "nrfx_qdec_event_t": [[115, 6, 1, "c.nrfx_qdec_event_t.data", "data"], [115, 6, 1, "c.nrfx_qdec_event_t.report", "report"], [115, 6, 1, "c.nrfx_qdec_event_t.sample", "sample"], [115, 6, 1, "c.nrfx_qdec_event_t.type", "type"]], "nrfx_qdec_init": [[115, 3, 1, "c.nrfx_qdec_init", "handler"], [115, 3, 1, "c.nrfx_qdec_init", "p_config"], [115, 3, 1, "c.nrfx_qdec_init", "p_context"], [115, 3, 1, "c.nrfx_qdec_init", "p_instance"]], "nrfx_qdec_init_check": [[115, 3, 1, "c.nrfx_qdec_init_check", "p_instance"]], "nrfx_qdec_reconfigure": [[115, 3, 1, "c.nrfx_qdec_reconfigure", "p_config"], [115, 3, 1, "c.nrfx_qdec_reconfigure", "p_instance"]], "nrfx_qdec_report_data_evt_t": [[115, 6, 1, "c.nrfx_qdec_report_data_evt_t.acc", "acc"], [115, 6, 1, "c.nrfx_qdec_report_data_evt_t.accdbl", "accdbl"]], "nrfx_qdec_sample_data_evt_t": [[115, 6, 1, "c.nrfx_qdec_sample_data_evt_t.value", "value"]], "nrfx_qdec_t": [[115, 6, 1, "c.nrfx_qdec_t.drv_inst_idx", "drv_inst_idx"], [115, 6, 1, "c.nrfx_qdec_t.p_reg", "p_reg"]], "nrfx_qdec_task_address_get": [[115, 3, 1, "c.nrfx_qdec_task_address_get", "p_instance"], [115, 3, 1, "c.nrfx_qdec_task_address_get", "task"]], "nrfx_qdec_uninit": [[115, 3, 1, "c.nrfx_qdec_uninit", "p_instance"]], "nrfx_qspi_activate": [[119, 3, 1, "c.nrfx_qspi_activate", "wait"]], "nrfx_qspi_cinstr_quick_send": [[119, 3, 1, "c.nrfx_qspi_cinstr_quick_send", "length"], [119, 3, 1, "c.nrfx_qspi_cinstr_quick_send", "opcode"], [119, 3, 1, "c.nrfx_qspi_cinstr_quick_send", "p_tx_buffer"]], "nrfx_qspi_cinstr_xfer": [[119, 3, 1, "c.nrfx_qspi_cinstr_xfer", "p_config"], [119, 3, 1, "c.nrfx_qspi_cinstr_xfer", "p_rx_buffer"], [119, 3, 1, "c.nrfx_qspi_cinstr_xfer", "p_tx_buffer"]], "nrfx_qspi_config_t": [[119, 6, 1, "c.nrfx_qspi_config_t.irq_priority", "irq_priority"], [119, 6, 1, "c.nrfx_qspi_config_t.phy_if", "phy_if"], [119, 6, 1, "c.nrfx_qspi_config_t.pins", "pins"], [119, 6, 1, "c.nrfx_qspi_config_t.prot_if", "prot_if"], [119, 6, 1, "c.nrfx_qspi_config_t.skip_gpio_cfg", "skip_gpio_cfg"], [119, 6, 1, "c.nrfx_qspi_config_t.skip_psel_cfg", "skip_psel_cfg"], [119, 6, 1, "c.nrfx_qspi_config_t.timeout", "timeout"], [119, 6, 1, "c.nrfx_qspi_config_t.xip_offset", "xip_offset"]], "nrfx_qspi_dma_encrypt": [[119, 3, 1, "c.nrfx_qspi_dma_encrypt", "p_config"]], "nrfx_qspi_erase": [[119, 3, 1, "c.nrfx_qspi_erase", "length"], [119, 3, 1, "c.nrfx_qspi_erase", "start_address"]], "nrfx_qspi_evt_ext_erase_t": [[119, 6, 1, "c.nrfx_qspi_evt_ext_erase_t.addr", "addr"], [119, 6, 1, "c.nrfx_qspi_evt_ext_erase_t.len", "len"]], "nrfx_qspi_evt_ext_t": [[119, 6, 1, "c.nrfx_qspi_evt_ext_t.data", "data"], [119, 6, 1, "c.nrfx_qspi_evt_ext_t.erase", "erase"], [119, 6, 1, "c.nrfx_qspi_evt_ext_t.type", "type"], [119, 6, 1, "c.nrfx_qspi_evt_ext_t.xfer", "xfer"]], "nrfx_qspi_evt_ext_type_t": [[119, 1, 1, "c.nrfx_qspi_evt_ext_type_t.NRFX_QSPI_EVENT_ERASE_DONE", "NRFX_QSPI_EVENT_ERASE_DONE"], [119, 1, 1, "c.nrfx_qspi_evt_ext_type_t.NRFX_QSPI_EVENT_NONE", "NRFX_QSPI_EVENT_NONE"], [119, 1, 1, "c.nrfx_qspi_evt_ext_type_t.NRFX_QSPI_EVENT_READ_DONE", "NRFX_QSPI_EVENT_READ_DONE"], [119, 1, 1, "c.nrfx_qspi_evt_ext_type_t.NRFX_QSPI_EVENT_WRITE_DONE", "NRFX_QSPI_EVENT_WRITE_DONE"]], "nrfx_qspi_evt_ext_xfer_t": [[119, 6, 1, "c.nrfx_qspi_evt_ext_xfer_t.addr", "addr"], [119, 6, 1, "c.nrfx_qspi_evt_ext_xfer_t.p_buffer", "p_buffer"], [119, 6, 1, "c.nrfx_qspi_evt_ext_xfer_t.size", "size"]], "nrfx_qspi_evt_t": [[119, 1, 1, "c.nrfx_qspi_evt_t.NRFX_QSPI_EVENT_DONE", "NRFX_QSPI_EVENT_DONE"]], "nrfx_qspi_init": [[119, 3, 1, "c.nrfx_qspi_init", "handler"], [119, 3, 1, "c.nrfx_qspi_init", "p_config"], [119, 3, 1, "c.nrfx_qspi_init", "p_context"]], "nrfx_qspi_lfm_start": [[119, 3, 1, "c.nrfx_qspi_lfm_start", "p_config"]], "nrfx_qspi_lfm_xfer": [[119, 3, 1, "c.nrfx_qspi_lfm_xfer", "finalize"], [119, 3, 1, "c.nrfx_qspi_lfm_xfer", "p_rx_buffer"], [119, 3, 1, "c.nrfx_qspi_lfm_xfer", "p_tx_buffer"], [119, 3, 1, "c.nrfx_qspi_lfm_xfer", "transfer_length"]], "nrfx_qspi_read": [[119, 3, 1, "c.nrfx_qspi_read", "p_rx_buffer"], [119, 3, 1, "c.nrfx_qspi_read", "rx_buffer_length"], [119, 3, 1, "c.nrfx_qspi_read", "src_address"]], "nrfx_qspi_reconfigure": [[119, 3, 1, "c.nrfx_qspi_reconfigure", "p_config"]], "nrfx_qspi_write": [[119, 3, 1, "c.nrfx_qspi_write", "dst_address"], [119, 3, 1, "c.nrfx_qspi_write", "p_tx_buffer"], [119, 3, 1, "c.nrfx_qspi_write", "tx_buffer_length"]], "nrfx_qspi_xip_encrypt": [[119, 3, 1, "c.nrfx_qspi_xip_encrypt", "p_config"]], "nrfx_ram_ctrl_power_enable_set": [[247, 3, 1, "c.nrfx_ram_ctrl_power_enable_set", "enable"], [247, 3, 1, "c.nrfx_ram_ctrl_power_enable_set", "length"], [247, 3, 1, "c.nrfx_ram_ctrl_power_enable_set", "p_object"]], "nrfx_ram_ctrl_retention_enable_set": [[247, 3, 1, "c.nrfx_ram_ctrl_retention_enable_set", "enable"], [247, 3, 1, "c.nrfx_ram_ctrl_retention_enable_set", "length"], [247, 3, 1, "c.nrfx_ram_ctrl_retention_enable_set", "p_object"]], "nrfx_ram_ctrl_section_power_mask_enable_set": [[247, 3, 1, "c.nrfx_ram_ctrl_section_power_mask_enable_set", "block_idx"], [247, 3, 1, "c.nrfx_ram_ctrl_section_power_mask_enable_set", "enable"], [247, 3, 1, "c.nrfx_ram_ctrl_section_power_mask_enable_set", "section_mask"]], "nrfx_ram_ctrl_section_retention_mask_enable_set": [[247, 3, 1, "c.nrfx_ram_ctrl_section_retention_mask_enable_set", "block_idx"], [247, 3, 1, "c.nrfx_ram_ctrl_section_retention_mask_enable_set", "enable"], [247, 3, 1, "c.nrfx_ram_ctrl_section_retention_mask_enable_set", "section_mask"]], "nrfx_reset_reason_clear": [[248, 3, 1, "c.nrfx_reset_reason_clear", "mask"]], "nrfx_reset_reason_mask_t": [[248, 1, 1, "c.nrfx_reset_reason_mask_t.NRFX_RESETREAS_SREQ_MASK", "NRFX_RESETREAS_SREQ_MASK"], [248, 1, 1, "c.nrfx_reset_reason_mask_t.NRFX_RESET_REASON_CTRLAPHARD_MASK", "NRFX_RESET_REASON_CTRLAPHARD_MASK"], [248, 1, 1, "c.nrfx_reset_reason_mask_t.NRFX_RESET_REASON_CTRLAPPIN_MASK", "NRFX_RESET_REASON_CTRLAPPIN_MASK"], [248, 1, 1, "c.nrfx_reset_reason_mask_t.NRFX_RESET_REASON_CTRLAP_MASK", "NRFX_RESET_REASON_CTRLAP_MASK"], [248, 1, 1, "c.nrfx_reset_reason_mask_t.NRFX_RESET_REASON_DIF_MASK", "NRFX_RESET_REASON_DIF_MASK"], [248, 1, 1, "c.nrfx_reset_reason_mask_t.NRFX_RESET_REASON_DOG0_MASK", "NRFX_RESET_REASON_DOG0_MASK"], [248, 1, 1, "c.nrfx_reset_reason_mask_t.NRFX_RESET_REASON_DOG1_MASK", "NRFX_RESET_REASON_DOG1_MASK"], [248, 1, 1, "c.nrfx_reset_reason_mask_t.NRFX_RESET_REASON_DOG_MASK", "NRFX_RESET_REASON_DOG_MASK"], [248, 1, 1, "c.nrfx_reset_reason_mask_t.NRFX_RESET_REASON_GRTC_MASK", "NRFX_RESET_REASON_GRTC_MASK"], [248, 1, 1, "c.nrfx_reset_reason_mask_t.NRFX_RESET_REASON_LCTRLAP_MASK", "NRFX_RESET_REASON_LCTRLAP_MASK"], [248, 1, 1, "c.nrfx_reset_reason_mask_t.NRFX_RESET_REASON_LDOG_MASK", "NRFX_RESET_REASON_LDOG_MASK"], [248, 1, 1, "c.nrfx_reset_reason_mask_t.NRFX_RESET_REASON_LLOCKUP_MASK", "NRFX_RESET_REASON_LLOCKUP_MASK"], [248, 1, 1, "c.nrfx_reset_reason_mask_t.NRFX_RESET_REASON_LOCKUP_MASK", "NRFX_RESET_REASON_LOCKUP_MASK"], [248, 1, 1, "c.nrfx_reset_reason_mask_t.NRFX_RESET_REASON_LPCOMP_MASK", "NRFX_RESET_REASON_LPCOMP_MASK"], [248, 1, 1, "c.nrfx_reset_reason_mask_t.NRFX_RESET_REASON_LSREQ_MASK", "NRFX_RESET_REASON_LSREQ_MASK"], [248, 1, 1, "c.nrfx_reset_reason_mask_t.NRFX_RESET_REASON_MFORCEOFF_MASK", "NRFX_RESET_REASON_MFORCEOFF_MASK"], [248, 1, 1, "c.nrfx_reset_reason_mask_t.NRFX_RESET_REASON_NFC_MASK", "NRFX_RESET_REASON_NFC_MASK"], [248, 1, 1, "c.nrfx_reset_reason_mask_t.NRFX_RESET_REASON_OFF_MASK", "NRFX_RESET_REASON_OFF_MASK"], [248, 1, 1, "c.nrfx_reset_reason_mask_t.NRFX_RESET_REASON_RESETPIN_MASK", "NRFX_RESET_REASON_RESETPIN_MASK"], [248, 1, 1, "c.nrfx_reset_reason_mask_t.NRFX_RESET_REASON_SECTAMPER_MASK", "NRFX_RESET_REASON_SECTAMPER_MASK"], [248, 1, 1, "c.nrfx_reset_reason_mask_t.NRFX_RESET_REASON_SREQ_MASK", "NRFX_RESET_REASON_SREQ_MASK"], [248, 1, 1, "c.nrfx_reset_reason_mask_t.NRFX_RESET_REASON_VBUS_MASK", "NRFX_RESET_REASON_VBUS_MASK"]], "nrfx_rng_config_t": [[130, 6, 1, "c.nrfx_rng_config_t.error_correction", "error_correction"], [130, 6, 1, "c.nrfx_rng_config_t.interrupt_priority", "interrupt_priority"]], "nrfx_rng_init": [[130, 3, 1, "c.nrfx_rng_init", "handler"], [130, 3, 1, "c.nrfx_rng_init", "p_config"]], "nrfx_rramc_buffer_read": [[133, 3, 1, "c.nrfx_rramc_buffer_read", "address"], [133, 3, 1, "c.nrfx_rramc_buffer_read", "dst"], [133, 3, 1, "c.nrfx_rramc_buffer_read", "num_bytes"]], "nrfx_rramc_byte_read": [[133, 3, 1, "c.nrfx_rramc_byte_read", "address"]], "nrfx_rramc_byte_write": [[133, 3, 1, "c.nrfx_rramc_byte_write", "address"], [133, 3, 1, "c.nrfx_rramc_byte_write", "value"]], "nrfx_rramc_bytes_write": [[133, 3, 1, "c.nrfx_rramc_bytes_write", "address"], [133, 3, 1, "c.nrfx_rramc_bytes_write", "num_bytes"], [133, 3, 1, "c.nrfx_rramc_bytes_write", "src"]], "nrfx_rramc_config_t": [[133, 6, 1, "c.nrfx_rramc_config_t.abort_on_pof", "abort_on_pof"], [133, 6, 1, "c.nrfx_rramc_config_t.access_timeout", "access_timeout"], [133, 6, 1, "c.nrfx_rramc_config_t.irq_priority", "irq_priority"], [133, 6, 1, "c.nrfx_rramc_config_t.mode_write", "mode_write"], [133, 6, 1, "c.nrfx_rramc_config_t.preload_timeout", "preload_timeout"], [133, 6, 1, "c.nrfx_rramc_config_t.preload_timeout_enable", "preload_timeout_enable"], [133, 6, 1, "c.nrfx_rramc_config_t.write_buff_size", "write_buff_size"]], "nrfx_rramc_init": [[133, 3, 1, "c.nrfx_rramc_init", "handler"], [133, 3, 1, "c.nrfx_rramc_init", "p_config"]], "nrfx_rramc_otp_word_read": [[133, 3, 1, "c.nrfx_rramc_otp_word_read", "index"]], "nrfx_rramc_otp_word_write": [[133, 3, 1, "c.nrfx_rramc_otp_word_write", "index"], [133, 3, 1, "c.nrfx_rramc_otp_word_write", "value"]], "nrfx_rramc_reconfigure": [[133, 3, 1, "c.nrfx_rramc_reconfigure", "p_config"]], "nrfx_rramc_word_read": [[133, 3, 1, "c.nrfx_rramc_word_read", "address"]], "nrfx_rramc_word_write": [[133, 3, 1, "c.nrfx_rramc_word_write", "address"], [133, 3, 1, "c.nrfx_rramc_word_write", "value"]], "nrfx_rramc_words_write": [[133, 3, 1, "c.nrfx_rramc_words_write", "address"], [133, 3, 1, "c.nrfx_rramc_words_write", "num_words"], [133, 3, 1, "c.nrfx_rramc_words_write", "src"]], "nrfx_rramc_write_enable_set": [[133, 3, 1, "c.nrfx_rramc_write_enable_set", "enable"], [133, 3, 1, "c.nrfx_rramc_write_enable_set", "write_buff_size"]], "nrfx_rtc_cc_disable": [[137, 3, 1, "c.nrfx_rtc_cc_disable", "channel"], [137, 3, 1, "c.nrfx_rtc_cc_disable", "p_instance"]], "nrfx_rtc_cc_set": [[137, 3, 1, "c.nrfx_rtc_cc_set", "channel"], [137, 3, 1, "c.nrfx_rtc_cc_set", "enable_irq"], [137, 3, 1, "c.nrfx_rtc_cc_set", "p_instance"], [137, 3, 1, "c.nrfx_rtc_cc_set", "val"]], "nrfx_rtc_config_t": [[137, 6, 1, "c.nrfx_rtc_config_t.interrupt_priority", "interrupt_priority"], [137, 6, 1, "c.nrfx_rtc_config_t.prescaler", "prescaler"], [137, 6, 1, "c.nrfx_rtc_config_t.reliable", "reliable"], [137, 6, 1, "c.nrfx_rtc_config_t.tick_latency", "tick_latency"]], "nrfx_rtc_counter_clear": [[137, 3, 1, "c.nrfx_rtc_counter_clear", "p_instance"]], "nrfx_rtc_counter_get": [[137, 3, 1, "c.nrfx_rtc_counter_get", "p_instance"]], "nrfx_rtc_disable": [[137, 3, 1, "c.nrfx_rtc_disable", "p_instance"]], "nrfx_rtc_enable": [[137, 3, 1, "c.nrfx_rtc_enable", "p_instance"]], "nrfx_rtc_event_address_get": [[137, 3, 1, "c.nrfx_rtc_event_address_get", "event"], [137, 3, 1, "c.nrfx_rtc_event_address_get", "p_instance"]], "nrfx_rtc_init": [[137, 3, 1, "c.nrfx_rtc_init", "handler"], [137, 3, 1, "c.nrfx_rtc_init", "p_config"], [137, 3, 1, "c.nrfx_rtc_init", "p_instance"]], "nrfx_rtc_init_check": [[137, 3, 1, "c.nrfx_rtc_init_check", "p_instance"]], "nrfx_rtc_int_disable": [[137, 3, 1, "c.nrfx_rtc_int_disable", "p_instance"], [137, 3, 1, "c.nrfx_rtc_int_disable", "p_mask"]], "nrfx_rtc_int_enable": [[137, 3, 1, "c.nrfx_rtc_int_enable", "mask"], [137, 3, 1, "c.nrfx_rtc_int_enable", "p_instance"]], "nrfx_rtc_int_type_t": [[137, 1, 1, "c.nrfx_rtc_int_type_t.NRFX_RTC_INT_COMPARE0", "NRFX_RTC_INT_COMPARE0"], [137, 1, 1, "c.nrfx_rtc_int_type_t.NRFX_RTC_INT_COMPARE1", "NRFX_RTC_INT_COMPARE1"], [137, 1, 1, "c.nrfx_rtc_int_type_t.NRFX_RTC_INT_COMPARE2", "NRFX_RTC_INT_COMPARE2"], [137, 1, 1, "c.nrfx_rtc_int_type_t.NRFX_RTC_INT_COMPARE3", "NRFX_RTC_INT_COMPARE3"], [137, 1, 1, "c.nrfx_rtc_int_type_t.NRFX_RTC_INT_OVERFLOW", "NRFX_RTC_INT_OVERFLOW"], [137, 1, 1, "c.nrfx_rtc_int_type_t.NRFX_RTC_INT_TICK", "NRFX_RTC_INT_TICK"]], "nrfx_rtc_max_ticks_get": [[137, 3, 1, "c.nrfx_rtc_max_ticks_get", "p_instance"]], "nrfx_rtc_overflow_disable": [[137, 3, 1, "c.nrfx_rtc_overflow_disable", "p_instance"]], "nrfx_rtc_overflow_enable": [[137, 3, 1, "c.nrfx_rtc_overflow_enable", "enable_irq"], [137, 3, 1, "c.nrfx_rtc_overflow_enable", "p_instance"]], "nrfx_rtc_t": [[137, 6, 1, "c.nrfx_rtc_t.cc_channel_count", "cc_channel_count"], [137, 6, 1, "c.nrfx_rtc_t.instance_id", "instance_id"], [137, 6, 1, "c.nrfx_rtc_t.p_reg", "p_reg"]], "nrfx_rtc_task_address_get": [[137, 3, 1, "c.nrfx_rtc_task_address_get", "p_instance"], [137, 3, 1, "c.nrfx_rtc_task_address_get", "task"]], "nrfx_rtc_tick_disable": [[137, 3, 1, "c.nrfx_rtc_tick_disable", "p_instance"]], "nrfx_rtc_tick_enable": [[137, 3, 1, "c.nrfx_rtc_tick_enable", "enable_irq"], [137, 3, 1, "c.nrfx_rtc_tick_enable", "p_instance"]], "nrfx_rtc_uninit": [[137, 3, 1, "c.nrfx_rtc_uninit", "p_instance"]], "nrfx_saadc_adv_config_t": [[141, 6, 1, "c.nrfx_saadc_adv_config_t.burst", "burst"], [141, 6, 1, "c.nrfx_saadc_adv_config_t.internal_timer_cc", "internal_timer_cc"], [141, 6, 1, "c.nrfx_saadc_adv_config_t.oversampling", "oversampling"], [141, 6, 1, "c.nrfx_saadc_adv_config_t.start_on_end", "start_on_end"]], "nrfx_saadc_advanced_mode_set": [[141, 3, 1, "c.nrfx_saadc_advanced_mode_set", "channel_mask"], [141, 3, 1, "c.nrfx_saadc_advanced_mode_set", "event_handler"], [141, 3, 1, "c.nrfx_saadc_advanced_mode_set", "p_config"], [141, 3, 1, "c.nrfx_saadc_advanced_mode_set", "resolution"]], "nrfx_saadc_buffer_set": [[141, 3, 1, "c.nrfx_saadc_buffer_set", "p_buffer"], [141, 3, 1, "c.nrfx_saadc_buffer_set", "size"]], "nrfx_saadc_channel_config": [[141, 3, 1, "c.nrfx_saadc_channel_config", "p_channel"]], "nrfx_saadc_channel_t": [[141, 6, 1, "c.nrfx_saadc_channel_t.channel_config", "channel_config"], [141, 6, 1, "c.nrfx_saadc_channel_t.channel_index", "channel_index"], [141, 6, 1, "c.nrfx_saadc_channel_t.pin_n", "pin_n"], [141, 6, 1, "c.nrfx_saadc_channel_t.pin_p", "pin_p"]], "nrfx_saadc_channels_config": [[141, 3, 1, "c.nrfx_saadc_channels_config", "channel_count"], [141, 3, 1, "c.nrfx_saadc_channels_config", "p_channels"]], "nrfx_saadc_channels_deconfig": [[141, 3, 1, "c.nrfx_saadc_channels_deconfig", "channel_mask"]], "nrfx_saadc_done_evt_t": [[141, 6, 1, "c.nrfx_saadc_done_evt_t.p_buffer", "p_buffer"], [141, 6, 1, "c.nrfx_saadc_done_evt_t.size", "size"]], "nrfx_saadc_evt_t": [[141, 6, 1, "c.nrfx_saadc_evt_t.data", "data"], [141, 6, 1, "c.nrfx_saadc_evt_t.done", "done"], [141, 6, 1, "c.nrfx_saadc_evt_t.limit", "limit"], [141, 6, 1, "c.nrfx_saadc_evt_t.type", "type"]], "nrfx_saadc_evt_type_t": [[141, 1, 1, "c.nrfx_saadc_evt_type_t.NRFX_SAADC_EVT_BUF_REQ", "NRFX_SAADC_EVT_BUF_REQ"], [141, 1, 1, "c.nrfx_saadc_evt_type_t.NRFX_SAADC_EVT_CALIBRATEDONE", "NRFX_SAADC_EVT_CALIBRATEDONE"], [141, 1, 1, "c.nrfx_saadc_evt_type_t.NRFX_SAADC_EVT_DONE", "NRFX_SAADC_EVT_DONE"], [141, 1, 1, "c.nrfx_saadc_evt_type_t.NRFX_SAADC_EVT_FINISHED", "NRFX_SAADC_EVT_FINISHED"], [141, 1, 1, "c.nrfx_saadc_evt_type_t.NRFX_SAADC_EVT_LIMIT", "NRFX_SAADC_EVT_LIMIT"], [141, 1, 1, "c.nrfx_saadc_evt_type_t.NRFX_SAADC_EVT_READY", "NRFX_SAADC_EVT_READY"]], "nrfx_saadc_init": [[141, 3, 1, "c.nrfx_saadc_init", "interrupt_priority"]], "nrfx_saadc_limit_evt_t": [[141, 6, 1, "c.nrfx_saadc_limit_evt_t.channel", "channel"], [141, 6, 1, "c.nrfx_saadc_limit_evt_t.limit_type", "limit_type"]], "nrfx_saadc_limits_set": [[141, 3, 1, "c.nrfx_saadc_limits_set", "channel"], [141, 3, 1, "c.nrfx_saadc_limits_set", "limit_high"], [141, 3, 1, "c.nrfx_saadc_limits_set", "limit_low"]], "nrfx_saadc_offset_calibrate": [[141, 3, 1, "c.nrfx_saadc_offset_calibrate", "calib_event_handler"]], "nrfx_saadc_simple_mode_set": [[141, 3, 1, "c.nrfx_saadc_simple_mode_set", "channel_mask"], [141, 3, 1, "c.nrfx_saadc_simple_mode_set", "event_handler"], [141, 3, 1, "c.nrfx_saadc_simple_mode_set", "oversampling"], [141, 3, 1, "c.nrfx_saadc_simple_mode_set", "resolution"]], "nrfx_spi_abort": [[145, 3, 1, "c.nrfx_spi_abort", "p_instance"]], "nrfx_spi_config_t": [[145, 6, 1, "c.nrfx_spi_config_t.bit_order", "bit_order"], [145, 6, 1, "c.nrfx_spi_config_t.frequency", "frequency"], [145, 6, 1, "c.nrfx_spi_config_t.irq_priority", "irq_priority"], [145, 6, 1, "c.nrfx_spi_config_t.miso_pin", "miso_pin"], [145, 6, 1, "c.nrfx_spi_config_t.miso_pull", "miso_pull"], [145, 6, 1, "c.nrfx_spi_config_t.mode", "mode"], [145, 6, 1, "c.nrfx_spi_config_t.mosi_pin", "mosi_pin"], [145, 6, 1, "c.nrfx_spi_config_t.orc", "orc"], [145, 6, 1, "c.nrfx_spi_config_t.sck_pin", "sck_pin"], [145, 6, 1, "c.nrfx_spi_config_t.skip_gpio_cfg", "skip_gpio_cfg"], [145, 6, 1, "c.nrfx_spi_config_t.skip_psel_cfg", "skip_psel_cfg"], [145, 6, 1, "c.nrfx_spi_config_t.ss_pin", "ss_pin"]], "nrfx_spi_evt_t": [[145, 6, 1, "c.nrfx_spi_evt_t.type", "type"], [145, 6, 1, "c.nrfx_spi_evt_t.xfer_desc", "xfer_desc"]], "nrfx_spi_evt_type_t": [[145, 1, 1, "c.nrfx_spi_evt_type_t.NRFX_SPI_EVENT_DONE", "NRFX_SPI_EVENT_DONE"]], "nrfx_spi_init": [[145, 3, 1, "c.nrfx_spi_init", "handler"], [145, 3, 1, "c.nrfx_spi_init", "p_config"], [145, 3, 1, "c.nrfx_spi_init", "p_context"], [145, 3, 1, "c.nrfx_spi_init", "p_instance"]], "nrfx_spi_init_check": [[145, 3, 1, "c.nrfx_spi_init_check", "p_instance"]], "nrfx_spi_reconfigure": [[145, 3, 1, "c.nrfx_spi_reconfigure", "p_config"], [145, 3, 1, "c.nrfx_spi_reconfigure", "p_instance"]], "nrfx_spi_t": [[145, 6, 1, "c.nrfx_spi_t.drv_inst_idx", "drv_inst_idx"], [145, 6, 1, "c.nrfx_spi_t.p_reg", "p_reg"]], "nrfx_spi_uninit": [[145, 3, 1, "c.nrfx_spi_uninit", "p_instance"]], "nrfx_spi_xfer": [[145, 3, 1, "c.nrfx_spi_xfer", "flags"], [145, 3, 1, "c.nrfx_spi_xfer", "p_instance"], [145, 3, 1, "c.nrfx_spi_xfer", "p_xfer_desc"]], "nrfx_spi_xfer_desc_t": [[145, 6, 1, "c.nrfx_spi_xfer_desc_t.p_rx_buffer", "p_rx_buffer"], [145, 6, 1, "c.nrfx_spi_xfer_desc_t.p_tx_buffer", "p_tx_buffer"], [145, 6, 1, "c.nrfx_spi_xfer_desc_t.rx_length", "rx_length"], [145, 6, 1, "c.nrfx_spi_xfer_desc_t.tx_length", "tx_length"]], "nrfx_spim_abort": [[148, 3, 1, "c.nrfx_spim_abort", "p_instance"]], "nrfx_spim_config_t": [[148, 6, 1, "c.nrfx_spim_config_t.bit_order", "bit_order"], [148, 6, 1, "c.nrfx_spim_config_t.dcx_pin", "dcx_pin"], [148, 6, 1, "c.nrfx_spim_config_t.frequency", "frequency"], [148, 6, 1, "c.nrfx_spim_config_t.irq_priority", "irq_priority"], [148, 6, 1, "c.nrfx_spim_config_t.miso_pin", "miso_pin"], [148, 6, 1, "c.nrfx_spim_config_t.miso_pull", "miso_pull"], [148, 6, 1, "c.nrfx_spim_config_t.mode", "mode"], [148, 6, 1, "c.nrfx_spim_config_t.mosi_pin", "mosi_pin"], [148, 6, 1, "c.nrfx_spim_config_t.orc", "orc"], [148, 6, 1, "c.nrfx_spim_config_t.rx_delay", "rx_delay"], [148, 6, 1, "c.nrfx_spim_config_t.sck_pin", "sck_pin"], [148, 6, 1, "c.nrfx_spim_config_t.skip_gpio_cfg", "skip_gpio_cfg"], [148, 6, 1, "c.nrfx_spim_config_t.skip_psel_cfg", "skip_psel_cfg"], [148, 6, 1, "c.nrfx_spim_config_t.ss_active_high", "ss_active_high"], [148, 6, 1, "c.nrfx_spim_config_t.ss_duration", "ss_duration"], [148, 6, 1, "c.nrfx_spim_config_t.ss_pin", "ss_pin"], [148, 6, 1, "c.nrfx_spim_config_t.use_hw_ss", "use_hw_ss"]], "nrfx_spim_end_event_address_get": [[148, 3, 1, "c.nrfx_spim_end_event_address_get", "p_instance"]], "nrfx_spim_evt_t": [[148, 6, 1, "c.nrfx_spim_evt_t.type", "type"], [148, 6, 1, "c.nrfx_spim_evt_t.xfer_desc", "xfer_desc"]], "nrfx_spim_evt_type_t": [[148, 1, 1, "c.nrfx_spim_evt_type_t.NRFX_SPIM_EVENT_DONE", "NRFX_SPIM_EVENT_DONE"]], "nrfx_spim_init": [[148, 3, 1, "c.nrfx_spim_init", "handler"], [148, 3, 1, "c.nrfx_spim_init", "p_config"], [148, 3, 1, "c.nrfx_spim_init", "p_context"], [148, 3, 1, "c.nrfx_spim_init", "p_instance"]], "nrfx_spim_init_check": [[148, 3, 1, "c.nrfx_spim_init_check", "p_instance"]], "nrfx_spim_reconfigure": [[148, 3, 1, "c.nrfx_spim_reconfigure", "p_config"], [148, 3, 1, "c.nrfx_spim_reconfigure", "p_instance"]], "nrfx_spim_start_task_address_get": [[148, 3, 1, "c.nrfx_spim_start_task_address_get", "p_instance"]], "nrfx_spim_t": [[148, 6, 1, "c.nrfx_spim_t.drv_inst_idx", "drv_inst_idx"], [148, 6, 1, "c.nrfx_spim_t.p_reg", "p_reg"]], "nrfx_spim_uninit": [[148, 3, 1, "c.nrfx_spim_uninit", "p_instance"]], "nrfx_spim_xfer": [[148, 3, 1, "c.nrfx_spim_xfer", "flags"], [148, 3, 1, "c.nrfx_spim_xfer", "p_instance"], [148, 3, 1, "c.nrfx_spim_xfer", "p_xfer_desc"]], "nrfx_spim_xfer_dcx": [[148, 3, 1, "c.nrfx_spim_xfer_dcx", "cmd_length"], [148, 3, 1, "c.nrfx_spim_xfer_dcx", "flags"], [148, 3, 1, "c.nrfx_spim_xfer_dcx", "p_instance"], [148, 3, 1, "c.nrfx_spim_xfer_dcx", "p_xfer_desc"]], "nrfx_spis_buffers_set": [[152, 3, 1, "c.nrfx_spis_buffers_set", "p_instance"], [152, 3, 1, "c.nrfx_spis_buffers_set", "p_rx_buffer"], [152, 3, 1, "c.nrfx_spis_buffers_set", "p_tx_buffer"], [152, 3, 1, "c.nrfx_spis_buffers_set", "rx_buffer_length"], [152, 3, 1, "c.nrfx_spis_buffers_set", "tx_buffer_length"]], "nrfx_spis_config_t": [[152, 6, 1, "c.nrfx_spis_config_t.bit_order", "bit_order"], [152, 6, 1, "c.nrfx_spis_config_t.csn_pin", "csn_pin"], [152, 6, 1, "c.nrfx_spis_config_t.csn_pullup", "csn_pullup"], [152, 6, 1, "c.nrfx_spis_config_t.def", "def"], [152, 6, 1, "c.nrfx_spis_config_t.irq_priority", "irq_priority"], [152, 6, 1, "c.nrfx_spis_config_t.miso_drive", "miso_drive"], [152, 6, 1, "c.nrfx_spis_config_t.miso_pin", "miso_pin"], [152, 6, 1, "c.nrfx_spis_config_t.mode", "mode"], [152, 6, 1, "c.nrfx_spis_config_t.mosi_pin", "mosi_pin"], [152, 6, 1, "c.nrfx_spis_config_t.orc", "orc"], [152, 6, 1, "c.nrfx_spis_config_t.sck_pin", "sck_pin"], [152, 6, 1, "c.nrfx_spis_config_t.skip_gpio_cfg", "skip_gpio_cfg"], [152, 6, 1, "c.nrfx_spis_config_t.skip_psel_cfg", "skip_psel_cfg"]], "nrfx_spis_evt_t": [[152, 6, 1, "c.nrfx_spis_evt_t.evt_type", "evt_type"], [152, 6, 1, "c.nrfx_spis_evt_t.rx_amount", "rx_amount"], [152, 6, 1, "c.nrfx_spis_evt_t.tx_amount", "tx_amount"]], "nrfx_spis_evt_type_t": [[152, 1, 1, "c.nrfx_spis_evt_type_t.NRFX_SPIS_BUFFERS_SET_DONE", "NRFX_SPIS_BUFFERS_SET_DONE"], [152, 1, 1, "c.nrfx_spis_evt_type_t.NRFX_SPIS_EVT_TYPE_MAX", "NRFX_SPIS_EVT_TYPE_MAX"], [152, 1, 1, "c.nrfx_spis_evt_type_t.NRFX_SPIS_XFER_DONE", "NRFX_SPIS_XFER_DONE"]], "nrfx_spis_init": [[152, 3, 1, "c.nrfx_spis_init", "event_handler"], [152, 3, 1, "c.nrfx_spis_init", "p_config"], [152, 3, 1, "c.nrfx_spis_init", "p_context"], [152, 3, 1, "c.nrfx_spis_init", "p_instance"]], "nrfx_spis_init_check": [[152, 3, 1, "c.nrfx_spis_init_check", "p_instance"]], "nrfx_spis_reconfigure": [[152, 3, 1, "c.nrfx_spis_reconfigure", "p_config"], [152, 3, 1, "c.nrfx_spis_reconfigure", "p_instance"]], "nrfx_spis_t": [[152, 6, 1, "c.nrfx_spis_t.drv_inst_idx", "drv_inst_idx"], [152, 6, 1, "c.nrfx_spis_t.p_reg", "p_reg"]], "nrfx_spis_uninit": [[152, 3, 1, "c.nrfx_spis_uninit", "p_instance"]], "nrfx_systick_delay_ms": [[159, 3, 1, "c.nrfx_systick_delay_ms", "ms"]], "nrfx_systick_delay_ticks": [[159, 3, 1, "c.nrfx_systick_delay_ticks", "ticks"]], "nrfx_systick_delay_us": [[159, 3, 1, "c.nrfx_systick_delay_us", "us"]], "nrfx_systick_get": [[159, 3, 1, "c.nrfx_systick_get", "p_state"]], "nrfx_systick_state_t": [[159, 6, 1, "c.nrfx_systick_state_t.time", "time"]], "nrfx_systick_test": [[159, 3, 1, "c.nrfx_systick_test", "p_state"], [159, 3, 1, "c.nrfx_systick_test", "us"]], "nrfx_tbm_config_t": [[164, 6, 1, "c.nrfx_tbm_config_t.interrupt_priority", "interrupt_priority"], [164, 6, 1, "c.nrfx_tbm_config_t.size", "size"]], "nrfx_tbm_init": [[164, 3, 1, "c.nrfx_tbm_init", "handler"], [164, 3, 1, "c.nrfx_tbm_init", "p_config"]], "nrfx_temp_calculate": [[170, 3, 1, "c.nrfx_temp_calculate", "raw_measurement"]], "nrfx_temp_config_t": [[170, 6, 1, "c.nrfx_temp_config_t.interrupt_priority", "interrupt_priority"]], "nrfx_temp_init": [[170, 3, 1, "c.nrfx_temp_init", "handler"], [170, 3, 1, "c.nrfx_temp_init", "p_config"]], "nrfx_timer_capture": [[174, 3, 1, "c.nrfx_timer_capture", "cc_channel"], [174, 3, 1, "c.nrfx_timer_capture", "p_instance"]], "nrfx_timer_capture_get": [[174, 3, 1, "c.nrfx_timer_capture_get", "cc_channel"], [174, 3, 1, "c.nrfx_timer_capture_get", "p_instance"]], "nrfx_timer_capture_task_address_get": [[174, 3, 1, "c.nrfx_timer_capture_task_address_get", "channel"], [174, 3, 1, "c.nrfx_timer_capture_task_address_get", "p_instance"]], "nrfx_timer_clear": [[174, 3, 1, "c.nrfx_timer_clear", "p_instance"]], "nrfx_timer_compare": [[174, 3, 1, "c.nrfx_timer_compare", "cc_channel"], [174, 3, 1, "c.nrfx_timer_compare", "cc_value"], [174, 3, 1, "c.nrfx_timer_compare", "enable_int"], [174, 3, 1, "c.nrfx_timer_compare", "p_instance"]], "nrfx_timer_compare_event_address_get": [[174, 3, 1, "c.nrfx_timer_compare_event_address_get", "channel"], [174, 3, 1, "c.nrfx_timer_compare_event_address_get", "p_instance"]], "nrfx_timer_compare_int_disable": [[174, 3, 1, "c.nrfx_timer_compare_int_disable", "channel"], [174, 3, 1, "c.nrfx_timer_compare_int_disable", "p_instance"]], "nrfx_timer_compare_int_enable": [[174, 3, 1, "c.nrfx_timer_compare_int_enable", "channel"], [174, 3, 1, "c.nrfx_timer_compare_int_enable", "p_instance"]], "nrfx_timer_config_t": [[174, 6, 1, "c.nrfx_timer_config_t.bit_width", "bit_width"], [174, 6, 1, "c.nrfx_timer_config_t.frequency", "frequency"], [174, 6, 1, "c.nrfx_timer_config_t.interrupt_priority", "interrupt_priority"], [174, 6, 1, "c.nrfx_timer_config_t.mode", "mode"], [174, 6, 1, "c.nrfx_timer_config_t.p_context", "p_context"]], "nrfx_timer_disable": [[174, 3, 1, "c.nrfx_timer_disable", "p_instance"]], "nrfx_timer_enable": [[174, 3, 1, "c.nrfx_timer_enable", "p_instance"]], "nrfx_timer_event_address_get": [[174, 3, 1, "c.nrfx_timer_event_address_get", "p_instance"], [174, 3, 1, "c.nrfx_timer_event_address_get", "timer_event"]], "nrfx_timer_extended_compare": [[174, 3, 1, "c.nrfx_timer_extended_compare", "cc_channel"], [174, 3, 1, "c.nrfx_timer_extended_compare", "cc_value"], [174, 3, 1, "c.nrfx_timer_extended_compare", "enable_int"], [174, 3, 1, "c.nrfx_timer_extended_compare", "p_instance"], [174, 3, 1, "c.nrfx_timer_extended_compare", "timer_short_mask"]], "nrfx_timer_increment": [[174, 3, 1, "c.nrfx_timer_increment", "p_instance"]], "nrfx_timer_init": [[174, 3, 1, "c.nrfx_timer_init", "p_config"], [174, 3, 1, "c.nrfx_timer_init", "p_instance"], [174, 3, 1, "c.nrfx_timer_init", "timer_event_handler"]], "nrfx_timer_init_check": [[174, 3, 1, "c.nrfx_timer_init_check", "p_instance"]], "nrfx_timer_is_enabled": [[174, 3, 1, "c.nrfx_timer_is_enabled", "p_instance"]], "nrfx_timer_ms_to_ticks": [[174, 3, 1, "c.nrfx_timer_ms_to_ticks", "p_instance"], [174, 3, 1, "c.nrfx_timer_ms_to_ticks", "time_ms"]], "nrfx_timer_pause": [[174, 3, 1, "c.nrfx_timer_pause", "p_instance"]], "nrfx_timer_reconfigure": [[174, 3, 1, "c.nrfx_timer_reconfigure", "p_config"], [174, 3, 1, "c.nrfx_timer_reconfigure", "p_instance"]], "nrfx_timer_resume": [[174, 3, 1, "c.nrfx_timer_resume", "p_instance"]], "nrfx_timer_t": [[174, 6, 1, "c.nrfx_timer_t.cc_channel_count", "cc_channel_count"], [174, 6, 1, "c.nrfx_timer_t.instance_id", "instance_id"], [174, 6, 1, "c.nrfx_timer_t.p_reg", "p_reg"]], "nrfx_timer_task_address_get": [[174, 3, 1, "c.nrfx_timer_task_address_get", "p_instance"], [174, 3, 1, "c.nrfx_timer_task_address_get", "timer_task"]], "nrfx_timer_uninit": [[174, 3, 1, "c.nrfx_timer_uninit", "p_instance"]], "nrfx_timer_us_to_ticks": [[174, 3, 1, "c.nrfx_timer_us_to_ticks", "p_instance"], [174, 3, 1, "c.nrfx_timer_us_to_ticks", "time_us"]], "nrfx_twi_bus_recover": [[178, 3, 1, "c.nrfx_twi_bus_recover", "scl_pin"], [178, 3, 1, "c.nrfx_twi_bus_recover", "sda_pin"]], "nrfx_twi_config_t": [[178, 6, 1, "c.nrfx_twi_config_t.frequency", "frequency"], [178, 6, 1, "c.nrfx_twi_config_t.hold_bus_uninit", "hold_bus_uninit"], [178, 6, 1, "c.nrfx_twi_config_t.interrupt_priority", "interrupt_priority"], [178, 6, 1, "c.nrfx_twi_config_t.scl", "scl"], [178, 6, 1, "c.nrfx_twi_config_t.sda", "sda"], [178, 6, 1, "c.nrfx_twi_config_t.skip_gpio_cfg", "skip_gpio_cfg"], [178, 6, 1, "c.nrfx_twi_config_t.skip_psel_cfg", "skip_psel_cfg"]], "nrfx_twi_data_count_get": [[178, 3, 1, "c.nrfx_twi_data_count_get", "p_instance"]], "nrfx_twi_disable": [[178, 3, 1, "c.nrfx_twi_disable", "p_instance"]], "nrfx_twi_enable": [[178, 3, 1, "c.nrfx_twi_enable", "p_instance"]], "nrfx_twi_evt_t": [[178, 6, 1, "c.nrfx_twi_evt_t.type", "type"], [178, 6, 1, "c.nrfx_twi_evt_t.xfer_desc", "xfer_desc"]], "nrfx_twi_evt_type_t": [[178, 1, 1, "c.nrfx_twi_evt_type_t.NRFX_TWI_EVT_ADDRESS_NACK", "NRFX_TWI_EVT_ADDRESS_NACK"], [178, 1, 1, "c.nrfx_twi_evt_type_t.NRFX_TWI_EVT_BUS_ERROR", "NRFX_TWI_EVT_BUS_ERROR"], [178, 1, 1, "c.nrfx_twi_evt_type_t.NRFX_TWI_EVT_DATA_NACK", "NRFX_TWI_EVT_DATA_NACK"], [178, 1, 1, "c.nrfx_twi_evt_type_t.NRFX_TWI_EVT_DONE", "NRFX_TWI_EVT_DONE"], [178, 1, 1, "c.nrfx_twi_evt_type_t.NRFX_TWI_EVT_OVERRUN", "NRFX_TWI_EVT_OVERRUN"]], "nrfx_twi_init": [[178, 3, 1, "c.nrfx_twi_init", "event_handler"], [178, 3, 1, "c.nrfx_twi_init", "p_config"], [178, 3, 1, "c.nrfx_twi_init", "p_context"], [178, 3, 1, "c.nrfx_twi_init", "p_instance"]], "nrfx_twi_init_check": [[178, 3, 1, "c.nrfx_twi_init_check", "p_instance"]], "nrfx_twi_is_busy": [[178, 3, 1, "c.nrfx_twi_is_busy", "p_instance"]], "nrfx_twi_reconfigure": [[178, 3, 1, "c.nrfx_twi_reconfigure", "p_config"], [178, 3, 1, "c.nrfx_twi_reconfigure", "p_instance"]], "nrfx_twi_stopped_event_get": [[178, 3, 1, "c.nrfx_twi_stopped_event_get", "p_instance"]], "nrfx_twi_t": [[178, 6, 1, "c.nrfx_twi_t.drv_inst_idx", "drv_inst_idx"], [178, 6, 1, "c.nrfx_twi_t.p_twi", "p_twi"]], "nrfx_twi_uninit": [[178, 3, 1, "c.nrfx_twi_uninit", "p_instance"]], "nrfx_twi_xfer": [[178, 3, 1, "c.nrfx_twi_xfer", "flags"], [178, 3, 1, "c.nrfx_twi_xfer", "p_instance"], [178, 3, 1, "c.nrfx_twi_xfer", "p_xfer_desc"]], "nrfx_twi_xfer_desc_t": [[178, 6, 1, "c.nrfx_twi_xfer_desc_t.address", "address"], [178, 6, 1, "c.nrfx_twi_xfer_desc_t.p_primary_buf", "p_primary_buf"], [178, 6, 1, "c.nrfx_twi_xfer_desc_t.p_secondary_buf", "p_secondary_buf"], [178, 6, 1, "c.nrfx_twi_xfer_desc_t.primary_length", "primary_length"], [178, 6, 1, "c.nrfx_twi_xfer_desc_t.secondary_length", "secondary_length"], [178, 6, 1, "c.nrfx_twi_xfer_desc_t.type", "type"]], "nrfx_twi_xfer_type_t": [[178, 1, 1, "c.nrfx_twi_xfer_type_t.NRFX_TWI_XFER_RX", "NRFX_TWI_XFER_RX"], [178, 1, 1, "c.nrfx_twi_xfer_type_t.NRFX_TWI_XFER_TX", "NRFX_TWI_XFER_TX"], [178, 1, 1, "c.nrfx_twi_xfer_type_t.NRFX_TWI_XFER_TXRX", "NRFX_TWI_XFER_TXRX"], [178, 1, 1, "c.nrfx_twi_xfer_type_t.NRFX_TWI_XFER_TXTX", "NRFX_TWI_XFER_TXTX"]], "nrfx_twim_bus_recover": [[181, 3, 1, "c.nrfx_twim_bus_recover", "scl_pin"], [181, 3, 1, "c.nrfx_twim_bus_recover", "sda_pin"]], "nrfx_twim_config_t": [[181, 6, 1, "c.nrfx_twim_config_t.frequency", "frequency"], [181, 6, 1, "c.nrfx_twim_config_t.hold_bus_uninit", "hold_bus_uninit"], [181, 6, 1, "c.nrfx_twim_config_t.interrupt_priority", "interrupt_priority"], [181, 6, 1, "c.nrfx_twim_config_t.scl_pin", "scl_pin"], [181, 6, 1, "c.nrfx_twim_config_t.sda_pin", "sda_pin"], [181, 6, 1, "c.nrfx_twim_config_t.skip_gpio_cfg", "skip_gpio_cfg"], [181, 6, 1, "c.nrfx_twim_config_t.skip_psel_cfg", "skip_psel_cfg"]], "nrfx_twim_disable": [[181, 3, 1, "c.nrfx_twim_disable", "p_instance"]], "nrfx_twim_enable": [[181, 3, 1, "c.nrfx_twim_enable", "p_instance"]], "nrfx_twim_evt_t": [[181, 6, 1, "c.nrfx_twim_evt_t.type", "type"], [181, 6, 1, "c.nrfx_twim_evt_t.xfer_desc", "xfer_desc"]], "nrfx_twim_evt_type_t": [[181, 1, 1, "c.nrfx_twim_evt_type_t.NRFX_TWIM_EVT_ADDRESS_NACK", "NRFX_TWIM_EVT_ADDRESS_NACK"], [181, 1, 1, "c.nrfx_twim_evt_type_t.NRFX_TWIM_EVT_BUS_ERROR", "NRFX_TWIM_EVT_BUS_ERROR"], [181, 1, 1, "c.nrfx_twim_evt_type_t.NRFX_TWIM_EVT_DATA_NACK", "NRFX_TWIM_EVT_DATA_NACK"], [181, 1, 1, "c.nrfx_twim_evt_type_t.NRFX_TWIM_EVT_DONE", "NRFX_TWIM_EVT_DONE"], [181, 1, 1, "c.nrfx_twim_evt_type_t.NRFX_TWIM_EVT_OVERRUN", "NRFX_TWIM_EVT_OVERRUN"]], "nrfx_twim_init": [[181, 3, 1, "c.nrfx_twim_init", "event_handler"], [181, 3, 1, "c.nrfx_twim_init", "p_config"], [181, 3, 1, "c.nrfx_twim_init", "p_context"], [181, 3, 1, "c.nrfx_twim_init", "p_instance"]], "nrfx_twim_init_check": [[181, 3, 1, "c.nrfx_twim_init_check", "p_instance"]], "nrfx_twim_is_busy": [[181, 3, 1, "c.nrfx_twim_is_busy", "p_instance"]], "nrfx_twim_reconfigure": [[181, 3, 1, "c.nrfx_twim_reconfigure", "p_config"], [181, 3, 1, "c.nrfx_twim_reconfigure", "p_instance"]], "nrfx_twim_start_task_address_get": [[181, 3, 1, "c.nrfx_twim_start_task_address_get", "p_instance"], [181, 3, 1, "c.nrfx_twim_start_task_address_get", "xfer_type"]], "nrfx_twim_stopped_event_address_get": [[181, 3, 1, "c.nrfx_twim_stopped_event_address_get", "p_instance"]], "nrfx_twim_t": [[181, 6, 1, "c.nrfx_twim_t.drv_inst_idx", "drv_inst_idx"], [181, 6, 1, "c.nrfx_twim_t.p_twim", "p_twim"]], "nrfx_twim_uninit": [[181, 3, 1, "c.nrfx_twim_uninit", "p_instance"]], "nrfx_twim_xfer": [[181, 3, 1, "c.nrfx_twim_xfer", "flags"], [181, 3, 1, "c.nrfx_twim_xfer", "p_instance"], [181, 3, 1, "c.nrfx_twim_xfer", "p_xfer_desc"]], "nrfx_twim_xfer_desc_t": [[181, 6, 1, "c.nrfx_twim_xfer_desc_t.address", "address"], [181, 6, 1, "c.nrfx_twim_xfer_desc_t.p_primary_buf", "p_primary_buf"], [181, 6, 1, "c.nrfx_twim_xfer_desc_t.p_secondary_buf", "p_secondary_buf"], [181, 6, 1, "c.nrfx_twim_xfer_desc_t.primary_length", "primary_length"], [181, 6, 1, "c.nrfx_twim_xfer_desc_t.secondary_length", "secondary_length"], [181, 6, 1, "c.nrfx_twim_xfer_desc_t.type", "type"]], "nrfx_twim_xfer_type_t": [[181, 1, 1, "c.nrfx_twim_xfer_type_t.NRFX_TWIM_XFER_RX", "NRFX_TWIM_XFER_RX"], [181, 1, 1, "c.nrfx_twim_xfer_type_t.NRFX_TWIM_XFER_TX", "NRFX_TWIM_XFER_TX"], [181, 1, 1, "c.nrfx_twim_xfer_type_t.NRFX_TWIM_XFER_TXRX", "NRFX_TWIM_XFER_TXRX"], [181, 1, 1, "c.nrfx_twim_xfer_type_t.NRFX_TWIM_XFER_TXTX", "NRFX_TWIM_XFER_TXTX"]], "nrfx_twis_config_t": [[185, 6, 1, "c.nrfx_twis_config_t.addr", "addr"], [185, 6, 1, "c.nrfx_twis_config_t.interrupt_priority", "interrupt_priority"], [185, 6, 1, "c.nrfx_twis_config_t.scl_pin", "scl_pin"], [185, 6, 1, "c.nrfx_twis_config_t.scl_pull", "scl_pull"], [185, 6, 1, "c.nrfx_twis_config_t.sda_pin", "sda_pin"], [185, 6, 1, "c.nrfx_twis_config_t.sda_pull", "sda_pull"], [185, 6, 1, "c.nrfx_twis_config_t.skip_gpio_cfg", "skip_gpio_cfg"], [185, 6, 1, "c.nrfx_twis_config_t.skip_psel_cfg", "skip_psel_cfg"]], "nrfx_twis_disable": [[185, 3, 1, "c.nrfx_twis_disable", "p_instance"]], "nrfx_twis_enable": [[185, 3, 1, "c.nrfx_twis_enable", "p_instance"]], "nrfx_twis_error_get_and_clear": [[185, 3, 1, "c.nrfx_twis_error_get_and_clear", "p_instance"]], "nrfx_twis_error_t": [[185, 1, 1, "c.nrfx_twis_error_t.NRFX_TWIS_ERROR_DATA_NACK", "NRFX_TWIS_ERROR_DATA_NACK"], [185, 1, 1, "c.nrfx_twis_error_t.NRFX_TWIS_ERROR_OVERFLOW", "NRFX_TWIS_ERROR_OVERFLOW"], [185, 1, 1, "c.nrfx_twis_error_t.NRFX_TWIS_ERROR_OVERREAD", "NRFX_TWIS_ERROR_OVERREAD"], [185, 1, 1, "c.nrfx_twis_error_t.NRFX_TWIS_ERROR_UNEXPECTED_EVENT", "NRFX_TWIS_ERROR_UNEXPECTED_EVENT"]], "nrfx_twis_evt_t": [[185, 6, 1, "c.nrfx_twis_evt_t.buf_req", "buf_req"], [185, 6, 1, "c.nrfx_twis_evt_t.data", "data"], [185, 6, 1, "c.nrfx_twis_evt_t.error", "error"], [185, 6, 1, "c.nrfx_twis_evt_t.rx_amount", "rx_amount"], [185, 6, 1, "c.nrfx_twis_evt_t.tx_amount", "tx_amount"], [185, 6, 1, "c.nrfx_twis_evt_t.type", "type"]], "nrfx_twis_evt_type_t": [[185, 1, 1, "c.nrfx_twis_evt_type_t.NRFX_TWIS_EVT_GENERAL_ERROR", "NRFX_TWIS_EVT_GENERAL_ERROR"], [185, 1, 1, "c.nrfx_twis_evt_type_t.NRFX_TWIS_EVT_READ_DONE", "NRFX_TWIS_EVT_READ_DONE"], [185, 1, 1, "c.nrfx_twis_evt_type_t.NRFX_TWIS_EVT_READ_ERROR", "NRFX_TWIS_EVT_READ_ERROR"], [185, 1, 1, "c.nrfx_twis_evt_type_t.NRFX_TWIS_EVT_READ_REQ", "NRFX_TWIS_EVT_READ_REQ"], [185, 1, 1, "c.nrfx_twis_evt_type_t.NRFX_TWIS_EVT_WRITE_DONE", "NRFX_TWIS_EVT_WRITE_DONE"], [185, 1, 1, "c.nrfx_twis_evt_type_t.NRFX_TWIS_EVT_WRITE_ERROR", "NRFX_TWIS_EVT_WRITE_ERROR"], [185, 1, 1, "c.nrfx_twis_evt_type_t.NRFX_TWIS_EVT_WRITE_REQ", "NRFX_TWIS_EVT_WRITE_REQ"]], "nrfx_twis_init": [[185, 3, 1, "c.nrfx_twis_init", "event_handler"], [185, 3, 1, "c.nrfx_twis_init", "p_config"], [185, 3, 1, "c.nrfx_twis_init", "p_instance"]], "nrfx_twis_init_check": [[185, 3, 1, "c.nrfx_twis_init_check", "p_instance"]], "nrfx_twis_is_busy": [[185, 3, 1, "c.nrfx_twis_is_busy", "p_instance"]], "nrfx_twis_is_pending_rx": [[185, 3, 1, "c.nrfx_twis_is_pending_rx", "p_instance"]], "nrfx_twis_is_pending_tx": [[185, 3, 1, "c.nrfx_twis_is_pending_tx", "p_instance"]], "nrfx_twis_is_waiting_rx_buff": [[185, 3, 1, "c.nrfx_twis_is_waiting_rx_buff", "p_instance"]], "nrfx_twis_is_waiting_tx_buff": [[185, 3, 1, "c.nrfx_twis_is_waiting_tx_buff", "p_instance"]], "nrfx_twis_reconfigure": [[185, 3, 1, "c.nrfx_twis_reconfigure", "p_config"], [185, 3, 1, "c.nrfx_twis_reconfigure", "p_instance"]], "nrfx_twis_rx_amount": [[185, 3, 1, "c.nrfx_twis_rx_amount", "p_instance"]], "nrfx_twis_rx_prepare": [[185, 3, 1, "c.nrfx_twis_rx_prepare", "p_buf"], [185, 3, 1, "c.nrfx_twis_rx_prepare", "p_instance"], [185, 3, 1, "c.nrfx_twis_rx_prepare", "size"]], "nrfx_twis_t": [[185, 6, 1, "c.nrfx_twis_t.drv_inst_idx", "drv_inst_idx"], [185, 6, 1, "c.nrfx_twis_t.p_reg", "p_reg"]], "nrfx_twis_tx_amount": [[185, 3, 1, "c.nrfx_twis_tx_amount", "p_instance"]], "nrfx_twis_tx_prepare": [[185, 3, 1, "c.nrfx_twis_tx_prepare", "p_buf"], [185, 3, 1, "c.nrfx_twis_tx_prepare", "p_instance"], [185, 3, 1, "c.nrfx_twis_tx_prepare", "size"]], "nrfx_twis_uninit": [[185, 3, 1, "c.nrfx_twis_uninit", "p_instance"]], "nrfx_uart_config_t": [[188, 6, 1, "c.nrfx_uart_config_t.baudrate", "baudrate"], [188, 6, 1, "c.nrfx_uart_config_t.hal_cfg", "hal_cfg"], [188, 6, 1, "c.nrfx_uart_config_t.interrupt_priority", "interrupt_priority"], [188, 6, 1, "c.nrfx_uart_config_t.p_context", "p_context"], [188, 6, 1, "c.nrfx_uart_config_t.pselcts", "pselcts"], [188, 6, 1, "c.nrfx_uart_config_t.pselrts", "pselrts"], [188, 6, 1, "c.nrfx_uart_config_t.pselrxd", "pselrxd"], [188, 6, 1, "c.nrfx_uart_config_t.pseltxd", "pseltxd"], [188, 6, 1, "c.nrfx_uart_config_t.skip_gpio_cfg", "skip_gpio_cfg"], [188, 6, 1, "c.nrfx_uart_config_t.skip_psel_cfg", "skip_psel_cfg"]], "nrfx_uart_error_evt_t": [[188, 6, 1, "c.nrfx_uart_error_evt_t.error_mask", "error_mask"], [188, 6, 1, "c.nrfx_uart_error_evt_t.rxtx", "rxtx"]], "nrfx_uart_errorsrc_get": [[188, 3, 1, "c.nrfx_uart_errorsrc_get", "p_instance"]], "nrfx_uart_event_address_get": [[188, 3, 1, "c.nrfx_uart_event_address_get", "event"], [188, 3, 1, "c.nrfx_uart_event_address_get", "p_instance"]], "nrfx_uart_event_t": [[188, 6, 1, "c.nrfx_uart_event_t.data", "data"], [188, 6, 1, "c.nrfx_uart_event_t.error", "error"], [188, 6, 1, "c.nrfx_uart_event_t.rxtx", "rxtx"], [188, 6, 1, "c.nrfx_uart_event_t.type", "type"]], "nrfx_uart_evt_type_t": [[188, 1, 1, "c.nrfx_uart_evt_type_t.NRFX_UART_EVT_ERROR", "NRFX_UART_EVT_ERROR"], [188, 1, 1, "c.nrfx_uart_evt_type_t.NRFX_UART_EVT_RX_DONE", "NRFX_UART_EVT_RX_DONE"], [188, 1, 1, "c.nrfx_uart_evt_type_t.NRFX_UART_EVT_TX_DONE", "NRFX_UART_EVT_TX_DONE"]], "nrfx_uart_init": [[188, 3, 1, "c.nrfx_uart_init", "event_handler"], [188, 3, 1, "c.nrfx_uart_init", "p_config"], [188, 3, 1, "c.nrfx_uart_init", "p_instance"]], "nrfx_uart_init_check": [[188, 3, 1, "c.nrfx_uart_init_check", "p_instance"]], "nrfx_uart_reconfigure": [[188, 3, 1, "c.nrfx_uart_reconfigure", "p_config"], [188, 3, 1, "c.nrfx_uart_reconfigure", "p_instance"]], "nrfx_uart_rx": [[188, 3, 1, "c.nrfx_uart_rx", "length"], [188, 3, 1, "c.nrfx_uart_rx", "p_data"], [188, 3, 1, "c.nrfx_uart_rx", "p_instance"]], "nrfx_uart_rx_abort": [[188, 3, 1, "c.nrfx_uart_rx_abort", "p_instance"]], "nrfx_uart_rx_disable": [[188, 3, 1, "c.nrfx_uart_rx_disable", "p_instance"]], "nrfx_uart_rx_enable": [[188, 3, 1, "c.nrfx_uart_rx_enable", "p_instance"]], "nrfx_uart_rx_ready": [[188, 3, 1, "c.nrfx_uart_rx_ready", "p_instance"]], "nrfx_uart_t": [[188, 6, 1, "c.nrfx_uart_t.drv_inst_idx", "drv_inst_idx"], [188, 6, 1, "c.nrfx_uart_t.p_reg", "p_reg"]], "nrfx_uart_task_address_get": [[188, 3, 1, "c.nrfx_uart_task_address_get", "p_instance"], [188, 3, 1, "c.nrfx_uart_task_address_get", "task"]], "nrfx_uart_tx": [[188, 3, 1, "c.nrfx_uart_tx", "length"], [188, 3, 1, "c.nrfx_uart_tx", "p_data"], [188, 3, 1, "c.nrfx_uart_tx", "p_instance"]], "nrfx_uart_tx_abort": [[188, 3, 1, "c.nrfx_uart_tx_abort", "p_instance"]], "nrfx_uart_tx_in_progress": [[188, 3, 1, "c.nrfx_uart_tx_in_progress", "p_instance"]], "nrfx_uart_uninit": [[188, 3, 1, "c.nrfx_uart_uninit", "p_instance"]], "nrfx_uart_xfer_evt_t": [[188, 6, 1, "c.nrfx_uart_xfer_evt_t.bytes", "bytes"], [188, 6, 1, "c.nrfx_uart_xfer_evt_t.p_data", "p_data"]], "nrfx_uarte_config_t": [[191, 6, 1, "c.nrfx_uarte_config_t.baudrate", "baudrate"], [191, 6, 1, "c.nrfx_uarte_config_t.config", "config"], [191, 6, 1, "c.nrfx_uarte_config_t.cts_pin", "cts_pin"], [191, 6, 1, "c.nrfx_uarte_config_t.interrupt_priority", "interrupt_priority"], [191, 6, 1, "c.nrfx_uarte_config_t.p_context", "p_context"], [191, 6, 1, "c.nrfx_uarte_config_t.p_rx_cache_scratch", "p_rx_cache_scratch"], [191, 6, 1, "c.nrfx_uarte_config_t.rts_pin", "rts_pin"], [191, 6, 1, "c.nrfx_uarte_config_t.rx_cache", "rx_cache"], [191, 6, 1, "c.nrfx_uarte_config_t.rxd_pin", "rxd_pin"], [191, 6, 1, "c.nrfx_uarte_config_t.skip_gpio_cfg", "skip_gpio_cfg"], [191, 6, 1, "c.nrfx_uarte_config_t.skip_psel_cfg", "skip_psel_cfg"], [191, 6, 1, "c.nrfx_uarte_config_t.tx_cache", "tx_cache"], [191, 6, 1, "c.nrfx_uarte_config_t.tx_stop_on_end", "tx_stop_on_end"], [191, 6, 1, "c.nrfx_uarte_config_t.txd_pin", "txd_pin"]], "nrfx_uarte_error_evt_t": [[191, 6, 1, "c.nrfx_uarte_error_evt_t.error_mask", "error_mask"], [191, 6, 1, "c.nrfx_uarte_error_evt_t.rx", "rx"]], "nrfx_uarte_errorsrc_get": [[191, 3, 1, "c.nrfx_uarte_errorsrc_get", "p_instance"]], "nrfx_uarte_event_address_get": [[191, 3, 1, "c.nrfx_uarte_event_address_get", "event"], [191, 3, 1, "c.nrfx_uarte_event_address_get", "p_instance"]], "nrfx_uarte_event_t": [[191, 6, 1, "c.nrfx_uarte_event_t.data", "data"], [191, 6, 1, "c.nrfx_uarte_event_t.error", "error"], [191, 6, 1, "c.nrfx_uarte_event_t.rx", "rx"], [191, 6, 1, "c.nrfx_uarte_event_t.rx_disabled", "rx_disabled"], [191, 6, 1, "c.nrfx_uarte_event_t.tx", "tx"], [191, 6, 1, "c.nrfx_uarte_event_t.type", "type"]], "nrfx_uarte_evt_type_t": [[191, 1, 1, "c.nrfx_uarte_evt_type_t.NRFX_UARTE_EVT_ERROR", "NRFX_UARTE_EVT_ERROR"], [191, 1, 1, "c.nrfx_uarte_evt_type_t.NRFX_UARTE_EVT_RX_BUF_REQUEST", "NRFX_UARTE_EVT_RX_BUF_REQUEST"], [191, 1, 1, "c.nrfx_uarte_evt_type_t.NRFX_UARTE_EVT_RX_BUF_TOO_LATE", "NRFX_UARTE_EVT_RX_BUF_TOO_LATE"], [191, 1, 1, "c.nrfx_uarte_evt_type_t.NRFX_UARTE_EVT_RX_BYTE", "NRFX_UARTE_EVT_RX_BYTE"], [191, 1, 1, "c.nrfx_uarte_evt_type_t.NRFX_UARTE_EVT_RX_DISABLED", "NRFX_UARTE_EVT_RX_DISABLED"], [191, 1, 1, "c.nrfx_uarte_evt_type_t.NRFX_UARTE_EVT_RX_DONE", "NRFX_UARTE_EVT_RX_DONE"], [191, 1, 1, "c.nrfx_uarte_evt_type_t.NRFX_UARTE_EVT_TRIGGER", "NRFX_UARTE_EVT_TRIGGER"], [191, 1, 1, "c.nrfx_uarte_evt_type_t.NRFX_UARTE_EVT_TX_DONE", "NRFX_UARTE_EVT_TX_DONE"]], "nrfx_uarte_init": [[191, 3, 1, "c.nrfx_uarte_init", "event_handler"], [191, 3, 1, "c.nrfx_uarte_init", "p_config"], [191, 3, 1, "c.nrfx_uarte_init", "p_instance"]], "nrfx_uarte_init_check": [[191, 3, 1, "c.nrfx_uarte_init_check", "p_instance"]], "nrfx_uarte_int_trigger": [[191, 3, 1, "c.nrfx_uarte_int_trigger", "p_instance"]], "nrfx_uarte_reconfigure": [[191, 3, 1, "c.nrfx_uarte_reconfigure", "p_config"], [191, 3, 1, "c.nrfx_uarte_reconfigure", "p_instance"]], "nrfx_uarte_rx": [[191, 3, 1, "c.nrfx_uarte_rx", "length"], [191, 3, 1, "c.nrfx_uarte_rx", "p_data"], [191, 3, 1, "c.nrfx_uarte_rx", "p_instance"]], "nrfx_uarte_rx_abort": [[191, 3, 1, "c.nrfx_uarte_rx_abort", "disable_all"], [191, 3, 1, "c.nrfx_uarte_rx_abort", "p_instance"], [191, 3, 1, "c.nrfx_uarte_rx_abort", "sync"]], "nrfx_uarte_rx_buffer_set": [[191, 3, 1, "c.nrfx_uarte_rx_buffer_set", "length"], [191, 3, 1, "c.nrfx_uarte_rx_buffer_set", "p_data"], [191, 3, 1, "c.nrfx_uarte_rx_buffer_set", "p_instance"]], "nrfx_uarte_rx_cache_t": [[191, 6, 1, "c.nrfx_uarte_rx_cache_t.buf_req", "buf_req"], [191, 6, 1, "c.nrfx_uarte_rx_cache_t.cache", "cache"], [191, 6, 1, "c.nrfx_uarte_rx_cache_t.cache_len", "cache_len"], [191, 6, 1, "c.nrfx_uarte_rx_cache_t.idx", "idx"], [191, 6, 1, "c.nrfx_uarte_rx_cache_t.received", "received"], [191, 6, 1, "c.nrfx_uarte_rx_cache_t.started", "started"], [191, 6, 1, "c.nrfx_uarte_rx_cache_t.user", "user"]], "nrfx_uarte_rx_disabled_evt_t": [[191, 6, 1, "c.nrfx_uarte_rx_disabled_evt_t.flush_cnt", "flush_cnt"]], "nrfx_uarte_rx_enable": [[191, 3, 1, "c.nrfx_uarte_rx_enable", "flags"], [191, 3, 1, "c.nrfx_uarte_rx_enable", "p_instance"]], "nrfx_uarte_rx_evt_t": [[191, 6, 1, "c.nrfx_uarte_rx_evt_t.length", "length"], [191, 6, 1, "c.nrfx_uarte_rx_evt_t.p_buffer", "p_buffer"]], "nrfx_uarte_rx_new_data_check": [[191, 3, 1, "c.nrfx_uarte_rx_new_data_check", "p_instance"]], "nrfx_uarte_rx_ready": [[191, 3, 1, "c.nrfx_uarte_rx_ready", "p_instance"], [191, 3, 1, "c.nrfx_uarte_rx_ready", "p_rx_amount"]], "nrfx_uarte_rxdrdy_disable": [[191, 3, 1, "c.nrfx_uarte_rxdrdy_disable", "p_instance"]], "nrfx_uarte_rxdrdy_enable": [[191, 3, 1, "c.nrfx_uarte_rxdrdy_enable", "p_instance"]], "nrfx_uarte_t": [[191, 6, 1, "c.nrfx_uarte_t.drv_inst_idx", "drv_inst_idx"], [191, 6, 1, "c.nrfx_uarte_t.p_reg", "p_reg"]], "nrfx_uarte_task_address_get": [[191, 3, 1, "c.nrfx_uarte_task_address_get", "p_instance"], [191, 3, 1, "c.nrfx_uarte_task_address_get", "task"]], "nrfx_uarte_tx": [[191, 3, 1, "c.nrfx_uarte_tx", "flags"], [191, 3, 1, "c.nrfx_uarte_tx", "length"], [191, 3, 1, "c.nrfx_uarte_tx", "p_data"], [191, 3, 1, "c.nrfx_uarte_tx", "p_instance"]], "nrfx_uarte_tx_abort": [[191, 3, 1, "c.nrfx_uarte_tx_abort", "p_instance"], [191, 3, 1, "c.nrfx_uarte_tx_abort", "sync"]], "nrfx_uarte_tx_evt_t": [[191, 6, 1, "c.nrfx_uarte_tx_evt_t.flags", "flags"], [191, 6, 1, "c.nrfx_uarte_tx_evt_t.length", "length"], [191, 6, 1, "c.nrfx_uarte_tx_evt_t.p_buffer", "p_buffer"]], "nrfx_uarte_tx_in_progress": [[191, 3, 1, "c.nrfx_uarte_tx_in_progress", "p_instance"]], "nrfx_uarte_uninit": [[191, 3, 1, "c.nrfx_uarte_uninit", "p_instance"]], "nrfx_usbd_data_ptr_t": [[196, 6, 1, "c.nrfx_usbd_data_ptr_t.addr", "addr"], [196, 6, 1, "c.nrfx_usbd_data_ptr_t.rx", "rx"], [196, 6, 1, "c.nrfx_usbd_data_ptr_t.tx", "tx"]], "nrfx_usbd_ep_abort": [[196, 3, 1, "c.nrfx_usbd_ep_abort", "ep"]], "nrfx_usbd_ep_disable": [[196, 3, 1, "c.nrfx_usbd_ep_disable", "ep"]], "nrfx_usbd_ep_dtoggle_clear": [[196, 3, 1, "c.nrfx_usbd_ep_dtoggle_clear", "ep"]], "nrfx_usbd_ep_enable": [[196, 3, 1, "c.nrfx_usbd_ep_enable", "ep"]], "nrfx_usbd_ep_enable_check": [[196, 3, 1, "c.nrfx_usbd_ep_enable_check", "ep"]], "nrfx_usbd_ep_handled_transfer": [[196, 3, 1, "c.nrfx_usbd_ep_handled_transfer", "ep"], [196, 3, 1, "c.nrfx_usbd_ep_handled_transfer", "p_handler"]], "nrfx_usbd_ep_is_busy": [[196, 3, 1, "c.nrfx_usbd_ep_is_busy", "ep"]], "nrfx_usbd_ep_max_packet_size_get": [[196, 3, 1, "c.nrfx_usbd_ep_max_packet_size_get", "ep"]], "nrfx_usbd_ep_max_packet_size_set": [[196, 3, 1, "c.nrfx_usbd_ep_max_packet_size_set", "ep"], [196, 3, 1, "c.nrfx_usbd_ep_max_packet_size_set", "size"]], "nrfx_usbd_ep_stall": [[196, 3, 1, "c.nrfx_usbd_ep_stall", "ep"]], "nrfx_usbd_ep_stall_check": [[196, 3, 1, "c.nrfx_usbd_ep_stall_check", "ep"]], "nrfx_usbd_ep_stall_clear": [[196, 3, 1, "c.nrfx_usbd_ep_stall_clear", "ep"]], "nrfx_usbd_ep_status_get": [[196, 3, 1, "c.nrfx_usbd_ep_status_get", "ep"], [196, 3, 1, "c.nrfx_usbd_ep_status_get", "p_size"]], "nrfx_usbd_ep_status_t": [[196, 1, 1, "c.nrfx_usbd_ep_status_t.NRFX_USBD_EP_ABORTED", "NRFX_USBD_EP_ABORTED"], [196, 1, 1, "c.nrfx_usbd_ep_status_t.NRFX_USBD_EP_BUSY", "NRFX_USBD_EP_BUSY"], [196, 1, 1, "c.nrfx_usbd_ep_status_t.NRFX_USBD_EP_OK", "NRFX_USBD_EP_OK"], [196, 1, 1, "c.nrfx_usbd_ep_status_t.NRFX_USBD_EP_OVERLOAD", "NRFX_USBD_EP_OVERLOAD"], [196, 1, 1, "c.nrfx_usbd_ep_status_t.NRFX_USBD_EP_WAITING", "NRFX_USBD_EP_WAITING"]], "nrfx_usbd_ep_t": [[196, 1, 1, "c.nrfx_usbd_ep_t.NRFX_USBD_EPIN0", "NRFX_USBD_EPIN0"], [196, 1, 1, "c.nrfx_usbd_ep_t.NRFX_USBD_EPIN1", "NRFX_USBD_EPIN1"], [196, 1, 1, "c.nrfx_usbd_ep_t.NRFX_USBD_EPIN2", "NRFX_USBD_EPIN2"], [196, 1, 1, "c.nrfx_usbd_ep_t.NRFX_USBD_EPIN3", "NRFX_USBD_EPIN3"], [196, 1, 1, "c.nrfx_usbd_ep_t.NRFX_USBD_EPIN4", "NRFX_USBD_EPIN4"], [196, 1, 1, "c.nrfx_usbd_ep_t.NRFX_USBD_EPIN5", "NRFX_USBD_EPIN5"], [196, 1, 1, "c.nrfx_usbd_ep_t.NRFX_USBD_EPIN6", "NRFX_USBD_EPIN6"], [196, 1, 1, "c.nrfx_usbd_ep_t.NRFX_USBD_EPIN7", "NRFX_USBD_EPIN7"], [196, 1, 1, "c.nrfx_usbd_ep_t.NRFX_USBD_EPIN8", "NRFX_USBD_EPIN8"], [196, 1, 1, "c.nrfx_usbd_ep_t.NRFX_USBD_EPOUT0", "NRFX_USBD_EPOUT0"], [196, 1, 1, "c.nrfx_usbd_ep_t.NRFX_USBD_EPOUT1", "NRFX_USBD_EPOUT1"], [196, 1, 1, "c.nrfx_usbd_ep_t.NRFX_USBD_EPOUT2", "NRFX_USBD_EPOUT2"], [196, 1, 1, "c.nrfx_usbd_ep_t.NRFX_USBD_EPOUT3", "NRFX_USBD_EPOUT3"], [196, 1, 1, "c.nrfx_usbd_ep_t.NRFX_USBD_EPOUT4", "NRFX_USBD_EPOUT4"], [196, 1, 1, "c.nrfx_usbd_ep_t.NRFX_USBD_EPOUT5", "NRFX_USBD_EPOUT5"], [196, 1, 1, "c.nrfx_usbd_ep_t.NRFX_USBD_EPOUT6", "NRFX_USBD_EPOUT6"], [196, 1, 1, "c.nrfx_usbd_ep_t.NRFX_USBD_EPOUT7", "NRFX_USBD_EPOUT7"], [196, 1, 1, "c.nrfx_usbd_ep_t.NRFX_USBD_EPOUT8", "NRFX_USBD_EPOUT8"]], "nrfx_usbd_ep_transfer": [[196, 3, 1, "c.nrfx_usbd_ep_transfer", "ep"], [196, 3, 1, "c.nrfx_usbd_ep_transfer", "p_transfer"]], "nrfx_usbd_ep_transfer_t": [[196, 6, 1, "c.nrfx_usbd_ep_transfer_t.p_data", "p_data"], [196, 6, 1, "c.nrfx_usbd_ep_transfer_t.size", "size"]], "nrfx_usbd_epout_size_get": [[196, 3, 1, "c.nrfx_usbd_epout_size_get", "ep"]], "nrfx_usbd_event_type_t": [[196, 1, 1, "c.nrfx_usbd_event_type_t.NRFX_USBD_EVT_CNT", "NRFX_USBD_EVT_CNT"], [196, 1, 1, "c.nrfx_usbd_event_type_t.NRFX_USBD_EVT_EPTRANSFER", "NRFX_USBD_EVT_EPTRANSFER"], [196, 1, 1, "c.nrfx_usbd_event_type_t.NRFX_USBD_EVT_RESET", "NRFX_USBD_EVT_RESET"], [196, 1, 1, "c.nrfx_usbd_event_type_t.NRFX_USBD_EVT_RESUME", "NRFX_USBD_EVT_RESUME"], [196, 1, 1, "c.nrfx_usbd_event_type_t.NRFX_USBD_EVT_SETUP", "NRFX_USBD_EVT_SETUP"], [196, 1, 1, "c.nrfx_usbd_event_type_t.NRFX_USBD_EVT_SOF", "NRFX_USBD_EVT_SOF"], [196, 1, 1, "c.nrfx_usbd_event_type_t.NRFX_USBD_EVT_SUSPEND", "NRFX_USBD_EVT_SUSPEND"], [196, 1, 1, "c.nrfx_usbd_event_type_t.NRFX_USBD_EVT_WUREQ", "NRFX_USBD_EVT_WUREQ"]], "nrfx_usbd_evt_t": [[196, 6, 1, "c.nrfx_usbd_evt_t.data", "data"], [196, 6, 1, "c.nrfx_usbd_evt_t.ep", "ep"], [196, 6, 1, "c.nrfx_usbd_evt_t.eptransfer", "eptransfer"], [196, 6, 1, "c.nrfx_usbd_evt_t.framecnt", "framecnt"], [196, 6, 1, "c.nrfx_usbd_evt_t.isocrc", "isocrc"], [196, 6, 1, "c.nrfx_usbd_evt_t.sof", "sof"], [196, 6, 1, "c.nrfx_usbd_evt_t.status", "status"], [196, 6, 1, "c.nrfx_usbd_evt_t.type", "type"]], "nrfx_usbd_handler_desc_t": [[196, 6, 1, "c.nrfx_usbd_handler_desc_t.handler", "handler"], [196, 6, 1, "c.nrfx_usbd_handler_desc_t.p_context", "p_context"]], "nrfx_usbd_handler_t": [[196, 6, 1, "c.nrfx_usbd_handler_t.consumer", "consumer"], [196, 6, 1, "c.nrfx_usbd_handler_t.feeder", "feeder"]], "nrfx_usbd_init": [[196, 3, 1, "c.nrfx_usbd_init", "event_handler"]], "nrfx_usbd_setup_get": [[196, 3, 1, "c.nrfx_usbd_setup_get", "p_setup"]], "nrfx_usbd_setup_t": [[196, 6, 1, "c.nrfx_usbd_setup_t.bRequest", "bRequest"], [196, 6, 1, "c.nrfx_usbd_setup_t.bmRequestType", "bmRequestType"], [196, 6, 1, "c.nrfx_usbd_setup_t.wIndex", "wIndex"], [196, 6, 1, "c.nrfx_usbd_setup_t.wLength", "wLength"], [196, 6, 1, "c.nrfx_usbd_setup_t.wValue", "wValue"]], "nrfx_usbd_start": [[196, 3, 1, "c.nrfx_usbd_start", "enable_sof"]], "nrfx_usbd_transfer_flags_t": [[196, 1, 1, "c.nrfx_usbd_transfer_flags_t.NRFX_USBD_TRANSFER_ZLP_FLAG", "NRFX_USBD_TRANSFER_ZLP_FLAG"]], "nrfx_usbd_transfer_out_drop": [[196, 3, 1, "c.nrfx_usbd_transfer_out_drop", "ep"]], "nrfx_usbd_transfer_t": [[196, 6, 1, "c.nrfx_usbd_transfer_t.flags", "flags"], [196, 6, 1, "c.nrfx_usbd_transfer_t.p_data", "p_data"], [196, 6, 1, "c.nrfx_usbd_transfer_t.size", "size"]], "nrfx_usbreg_config_t": [[201, 6, 1, "c.nrfx_usbreg_config_t.handler", "handler"], [201, 6, 1, "c.nrfx_usbreg_config_t.irq_priority", "irq_priority"]], "nrfx_usbreg_evt_t": [[201, 1, 1, "c.nrfx_usbreg_evt_t.NRFX_USBREG_EVT_DETECTED", "NRFX_USBREG_EVT_DETECTED"], [201, 1, 1, "c.nrfx_usbreg_evt_t.NRFX_USBREG_EVT_READY", "NRFX_USBREG_EVT_READY"], [201, 1, 1, "c.nrfx_usbreg_evt_t.NRFX_USBREG_EVT_REMOVED", "NRFX_USBREG_EVT_REMOVED"]], "nrfx_usbreg_init": [[201, 3, 1, "c.nrfx_usbreg_init", "p_config"]], "nrfx_usbreg_state_t": [[201, 1, 1, "c.nrfx_usbreg_state_t.NRFX_USBREG_STATE_CONNECTED", "NRFX_USBREG_STATE_CONNECTED"], [201, 1, 1, "c.nrfx_usbreg_state_t.NRFX_USBREG_STATE_DISCONNECTED", "NRFX_USBREG_STATE_DISCONNECTED"], [201, 1, 1, "c.nrfx_usbreg_state_t.NRFX_USBREG_STATE_READY", "NRFX_USBREG_STATE_READY"]], "nrfx_vevif_init": [[213, 3, 1, "c.nrfx_vevif_init", "event_handler"], [213, 3, 1, "c.nrfx_vevif_init", "interrupt_priority"], [213, 3, 1, "c.nrfx_vevif_init", "p_context"]], "nrfx_vevif_int_disable": [[213, 3, 1, "c.nrfx_vevif_int_disable", "mask"]], "nrfx_vevif_int_enable": [[213, 3, 1, "c.nrfx_vevif_int_enable", "mask"]], "nrfx_wdt_channel_alloc": [[215, 3, 1, "c.nrfx_wdt_channel_alloc", "p_channel_id"], [215, 3, 1, "c.nrfx_wdt_channel_alloc", "p_instance"]], "nrfx_wdt_channel_feed": [[215, 3, 1, "c.nrfx_wdt_channel_feed", "channel_id"], [215, 3, 1, "c.nrfx_wdt_channel_feed", "p_instance"]], "nrfx_wdt_channels_free": [[215, 3, 1, "c.nrfx_wdt_channels_free", "p_instance"]], "nrfx_wdt_config_t": [[215, 6, 1, "c.nrfx_wdt_config_t.behaviour", "behaviour"], [215, 6, 1, "c.nrfx_wdt_config_t.interrupt_priority", "interrupt_priority"], [215, 6, 1, "c.nrfx_wdt_config_t.reload_value", "reload_value"]], "nrfx_wdt_enable": [[215, 3, 1, "c.nrfx_wdt_enable", "p_instance"]], "nrfx_wdt_event_address_get": [[215, 3, 1, "c.nrfx_wdt_event_address_get", "event"], [215, 3, 1, "c.nrfx_wdt_event_address_get", "p_instance"]], "nrfx_wdt_feed": [[215, 3, 1, "c.nrfx_wdt_feed", "p_instance"]], "nrfx_wdt_init": [[215, 3, 1, "c.nrfx_wdt_init", "p_config"], [215, 3, 1, "c.nrfx_wdt_init", "p_context"], [215, 3, 1, "c.nrfx_wdt_init", "p_instance"], [215, 3, 1, "c.nrfx_wdt_init", "wdt_event_handler"]], "nrfx_wdt_init_check": [[215, 3, 1, "c.nrfx_wdt_init_check", "p_instance"]], "nrfx_wdt_reconfigure": [[215, 3, 1, "c.nrfx_wdt_reconfigure", "p_config"], [215, 3, 1, "c.nrfx_wdt_reconfigure", "p_instance"]], "nrfx_wdt_stop": [[215, 3, 1, "c.nrfx_wdt_stop", "p_instance"]], "nrfx_wdt_t": [[215, 6, 1, "c.nrfx_wdt_t.drv_inst_idx", "drv_inst_idx"], [215, 6, 1, "c.nrfx_wdt_t.p_reg", "p_reg"]], "nrfx_wdt_task_address_get": [[215, 3, 1, "c.nrfx_wdt_task_address_get", "p_instance"], [215, 3, 1, "c.nrfx_wdt_task_address_get", "task"]], "nrfx_wdt_uninit": [[215, 3, 1, "c.nrfx_wdt_uninit", "p_instance"]], "nrfy_bellboard_event_address_get": [[12, 3, 1, "c.nrfy_bellboard_event_address_get", "event"], [12, 3, 1, "c.nrfy_bellboard_event_address_get", "p_reg"]], "nrfy_bellboard_event_check": [[12, 3, 1, "c.nrfy_bellboard_event_check", "event"], [12, 3, 1, "c.nrfy_bellboard_event_check", "p_reg"]], "nrfy_bellboard_event_clear": [[12, 3, 1, "c.nrfy_bellboard_event_clear", "event"], [12, 3, 1, "c.nrfy_bellboard_event_clear", "p_reg"]], "nrfy_bellboard_events_process": [[12, 3, 1, "c.nrfy_bellboard_events_process", "mask"], [12, 3, 1, "c.nrfy_bellboard_events_process", "p_reg"]], "nrfy_bellboard_int_disable": [[12, 3, 1, "c.nrfy_bellboard_int_disable", "group_idx"], [12, 3, 1, "c.nrfy_bellboard_int_disable", "mask"], [12, 3, 1, "c.nrfy_bellboard_int_disable", "p_reg"]], "nrfy_bellboard_int_enable": [[12, 3, 1, "c.nrfy_bellboard_int_enable", "group_idx"], [12, 3, 1, "c.nrfy_bellboard_int_enable", "mask"], [12, 3, 1, "c.nrfy_bellboard_int_enable", "p_reg"]], "nrfy_bellboard_int_enable_check": [[12, 3, 1, "c.nrfy_bellboard_int_enable_check", "group_idx"], [12, 3, 1, "c.nrfy_bellboard_int_enable_check", "mask"], [12, 3, 1, "c.nrfy_bellboard_int_enable_check", "p_reg"]], "nrfy_bellboard_int_init": [[12, 3, 1, "c.nrfy_bellboard_int_init", "enable"], [12, 3, 1, "c.nrfy_bellboard_int_init", "group_idx"], [12, 3, 1, "c.nrfy_bellboard_int_init", "irq_priority"], [12, 3, 1, "c.nrfy_bellboard_int_init", "mask"], [12, 3, 1, "c.nrfy_bellboard_int_init", "p_reg"]], "nrfy_bellboard_int_pending_get": [[12, 3, 1, "c.nrfy_bellboard_int_pending_get", "group_idx"], [12, 3, 1, "c.nrfy_bellboard_int_pending_get", "p_reg"]], "nrfy_bellboard_int_uninit": [[12, 3, 1, "c.nrfy_bellboard_int_uninit", "group_idx"]], "nrfy_bellboard_task_address_get": [[12, 3, 1, "c.nrfy_bellboard_task_address_get", "p_reg"], [12, 3, 1, "c.nrfy_bellboard_task_address_get", "task"]], "nrfy_bellboard_task_trigger": [[12, 3, 1, "c.nrfy_bellboard_task_trigger", "p_reg"], [12, 3, 1, "c.nrfy_bellboard_task_trigger", "task"]], "nrfy_comp_config_t": [[25, 6, 1, "c.nrfy_comp_config_t.ext_ref", "ext_ref"], [25, 6, 1, "c.nrfy_comp_config_t.hyst", "hyst"], [25, 6, 1, "c.nrfy_comp_config_t.input", "input"], [25, 6, 1, "c.nrfy_comp_config_t.isource", "isource"], [25, 6, 1, "c.nrfy_comp_config_t.main_mode", "main_mode"], [25, 6, 1, "c.nrfy_comp_config_t.reference", "reference"], [25, 6, 1, "c.nrfy_comp_config_t.speed_mode", "speed_mode"], [25, 6, 1, "c.nrfy_comp_config_t.threshold", "threshold"]], "nrfy_comp_disable": [[25, 3, 1, "c.nrfy_comp_disable", "p_reg"]], "nrfy_comp_enable": [[25, 3, 1, "c.nrfy_comp_enable", "p_reg"]], "nrfy_comp_enable_check": [[25, 3, 1, "c.nrfy_comp_enable_check", "p_reg"]], "nrfy_comp_event_address_get": [[25, 3, 1, "c.nrfy_comp_event_address_get", "event"], [25, 3, 1, "c.nrfy_comp_event_address_get", "p_reg"]], "nrfy_comp_event_check": [[25, 3, 1, "c.nrfy_comp_event_check", "event"], [25, 3, 1, "c.nrfy_comp_event_check", "p_reg"]], "nrfy_comp_event_clear": [[25, 3, 1, "c.nrfy_comp_event_clear", "event"], [25, 3, 1, "c.nrfy_comp_event_clear", "p_reg"]], "nrfy_comp_events_process": [[25, 3, 1, "c.nrfy_comp_events_process", "mask"], [25, 3, 1, "c.nrfy_comp_events_process", "p_reg"]], "nrfy_comp_ext_ref_set": [[25, 3, 1, "c.nrfy_comp_ext_ref_set", "ext_ref"], [25, 3, 1, "c.nrfy_comp_ext_ref_set", "p_reg"]], "nrfy_comp_hysteresis_set": [[25, 3, 1, "c.nrfy_comp_hysteresis_set", "hyst"], [25, 3, 1, "c.nrfy_comp_hysteresis_set", "p_reg"]], "nrfy_comp_input_select": [[25, 3, 1, "c.nrfy_comp_input_select", "input"], [25, 3, 1, "c.nrfy_comp_input_select", "p_reg"]], "nrfy_comp_int_disable": [[25, 3, 1, "c.nrfy_comp_int_disable", "mask"], [25, 3, 1, "c.nrfy_comp_int_disable", "p_reg"]], "nrfy_comp_int_enable": [[25, 3, 1, "c.nrfy_comp_int_enable", "mask"], [25, 3, 1, "c.nrfy_comp_int_enable", "p_reg"]], "nrfy_comp_int_enable_check": [[25, 3, 1, "c.nrfy_comp_int_enable_check", "mask"], [25, 3, 1, "c.nrfy_comp_int_enable_check", "p_reg"]], "nrfy_comp_int_init": [[25, 3, 1, "c.nrfy_comp_int_init", "enable"], [25, 3, 1, "c.nrfy_comp_int_init", "irq_priority"], [25, 3, 1, "c.nrfy_comp_int_init", "mask"], [25, 3, 1, "c.nrfy_comp_int_init", "p_reg"]], "nrfy_comp_int_uninit": [[25, 3, 1, "c.nrfy_comp_int_uninit", "p_reg"]], "nrfy_comp_isource_set": [[25, 3, 1, "c.nrfy_comp_isource_set", "isource"], [25, 3, 1, "c.nrfy_comp_isource_set", "p_reg"]], "nrfy_comp_main_mode_set": [[25, 3, 1, "c.nrfy_comp_main_mode_set", "main_mode"], [25, 3, 1, "c.nrfy_comp_main_mode_set", "p_reg"]], "nrfy_comp_periph_configure": [[25, 3, 1, "c.nrfy_comp_periph_configure", "p_config"], [25, 3, 1, "c.nrfy_comp_periph_configure", "p_reg"]], "nrfy_comp_ref_set": [[25, 3, 1, "c.nrfy_comp_ref_set", "p_reg"], [25, 3, 1, "c.nrfy_comp_ref_set", "reference"]], "nrfy_comp_result_get": [[25, 3, 1, "c.nrfy_comp_result_get", "p_reg"]], "nrfy_comp_sample": [[25, 3, 1, "c.nrfy_comp_sample", "p_reg"]], "nrfy_comp_shorts_disable": [[25, 3, 1, "c.nrfy_comp_shorts_disable", "mask"], [25, 3, 1, "c.nrfy_comp_shorts_disable", "p_reg"]], "nrfy_comp_shorts_enable": [[25, 3, 1, "c.nrfy_comp_shorts_enable", "mask"], [25, 3, 1, "c.nrfy_comp_shorts_enable", "p_reg"]], "nrfy_comp_speed_mode_set": [[25, 3, 1, "c.nrfy_comp_speed_mode_set", "p_reg"], [25, 3, 1, "c.nrfy_comp_speed_mode_set", "speed_mode"]], "nrfy_comp_task_address_get": [[25, 3, 1, "c.nrfy_comp_task_address_get", "p_reg"], [25, 3, 1, "c.nrfy_comp_task_address_get", "task"]], "nrfy_comp_task_trigger": [[25, 3, 1, "c.nrfy_comp_task_trigger", "p_reg"], [25, 3, 1, "c.nrfy_comp_task_trigger", "task"]], "nrfy_comp_th_set": [[25, 3, 1, "c.nrfy_comp_th_set", "p_reg"], [25, 3, 1, "c.nrfy_comp_th_set", "threshold"]], "nrfy_dppi_channel_check": [[35, 3, 1, "c.nrfy_dppi_channel_check", "channel"], [35, 3, 1, "c.nrfy_dppi_channel_check", "p_reg"]], "nrfy_dppi_channel_number_get": [[35, 3, 1, "c.nrfy_dppi_channel_number_get", "p_reg"]], "nrfy_dppi_channels_disable": [[35, 3, 1, "c.nrfy_dppi_channels_disable", "mask"], [35, 3, 1, "c.nrfy_dppi_channels_disable", "p_reg"]], "nrfy_dppi_channels_disable_all": [[35, 3, 1, "c.nrfy_dppi_channels_disable_all", "p_reg"]], "nrfy_dppi_channels_enable": [[35, 3, 1, "c.nrfy_dppi_channels_enable", "mask"], [35, 3, 1, "c.nrfy_dppi_channels_enable", "p_reg"]], "nrfy_dppi_channels_group_set": [[35, 3, 1, "c.nrfy_dppi_channels_group_set", "channel_group"], [35, 3, 1, "c.nrfy_dppi_channels_group_set", "channel_mask"], [35, 3, 1, "c.nrfy_dppi_channels_group_set", "p_reg"]], "nrfy_dppi_channels_include_in_group": [[35, 3, 1, "c.nrfy_dppi_channels_include_in_group", "channel_group"], [35, 3, 1, "c.nrfy_dppi_channels_include_in_group", "channel_mask"], [35, 3, 1, "c.nrfy_dppi_channels_include_in_group", "p_reg"]], "nrfy_dppi_channels_remove_from_group": [[35, 3, 1, "c.nrfy_dppi_channels_remove_from_group", "channel_group"], [35, 3, 1, "c.nrfy_dppi_channels_remove_from_group", "channel_mask"], [35, 3, 1, "c.nrfy_dppi_channels_remove_from_group", "p_reg"]], "nrfy_dppi_channels_set": [[35, 3, 1, "c.nrfy_dppi_channels_set", "enable"], [35, 3, 1, "c.nrfy_dppi_channels_set", "mask"], [35, 3, 1, "c.nrfy_dppi_channels_set", "p_reg"]], "nrfy_dppi_group_clear": [[35, 3, 1, "c.nrfy_dppi_group_clear", "group"], [35, 3, 1, "c.nrfy_dppi_group_clear", "p_reg"]], "nrfy_dppi_group_disable": [[35, 3, 1, "c.nrfy_dppi_group_disable", "group"], [35, 3, 1, "c.nrfy_dppi_group_disable", "p_reg"]], "nrfy_dppi_group_disable_task_get": [[35, 3, 1, "c.nrfy_dppi_group_disable_task_get", "index"]], "nrfy_dppi_group_enable": [[35, 3, 1, "c.nrfy_dppi_group_enable", "group"], [35, 3, 1, "c.nrfy_dppi_group_enable", "p_reg"]], "nrfy_dppi_group_enable_task_get": [[35, 3, 1, "c.nrfy_dppi_group_enable_task_get", "index"]], "nrfy_dppi_group_number_get": [[35, 3, 1, "c.nrfy_dppi_group_number_get", "p_reg"]], "nrfy_dppi_subscribe_clear": [[35, 3, 1, "c.nrfy_dppi_subscribe_clear", "p_reg"], [35, 3, 1, "c.nrfy_dppi_subscribe_clear", "task"]], "nrfy_dppi_subscribe_set": [[35, 3, 1, "c.nrfy_dppi_subscribe_set", "channel"], [35, 3, 1, "c.nrfy_dppi_subscribe_set", "p_reg"], [35, 3, 1, "c.nrfy_dppi_subscribe_set", "task"]], "nrfy_dppi_task_address_get": [[35, 3, 1, "c.nrfy_dppi_task_address_get", "p_reg"], [35, 3, 1, "c.nrfy_dppi_task_address_get", "task"]], "nrfy_dppi_task_trigger": [[35, 3, 1, "c.nrfy_dppi_task_trigger", "dppi_task"], [35, 3, 1, "c.nrfy_dppi_task_trigger", "p_reg"]], "nrfy_gpio_cfg": [[49, 3, 1, "c.nrfy_gpio_cfg", "dir"], [49, 3, 1, "c.nrfy_gpio_cfg", "drive"], [49, 3, 1, "c.nrfy_gpio_cfg", "input"], [49, 3, 1, "c.nrfy_gpio_cfg", "pin_number"], [49, 3, 1, "c.nrfy_gpio_cfg", "pull"], [49, 3, 1, "c.nrfy_gpio_cfg", "sense"]], "nrfy_gpio_cfg_default": [[49, 3, 1, "c.nrfy_gpio_cfg_default", "pin_number"]], "nrfy_gpio_cfg_input": [[49, 3, 1, "c.nrfy_gpio_cfg_input", "pin_number"], [49, 3, 1, "c.nrfy_gpio_cfg_input", "pull_config"]], "nrfy_gpio_cfg_output": [[49, 3, 1, "c.nrfy_gpio_cfg_output", "pin_number"]], "nrfy_gpio_cfg_sense_input": [[49, 3, 1, "c.nrfy_gpio_cfg_sense_input", "pin_number"], [49, 3, 1, "c.nrfy_gpio_cfg_sense_input", "pull_config"], [49, 3, 1, "c.nrfy_gpio_cfg_sense_input", "sense_config"]], "nrfy_gpio_cfg_sense_set": [[49, 3, 1, "c.nrfy_gpio_cfg_sense_set", "pin_number"], [49, 3, 1, "c.nrfy_gpio_cfg_sense_set", "sense_config"]], "nrfy_gpio_cfg_watcher": [[49, 3, 1, "c.nrfy_gpio_cfg_watcher", "pin_number"]], "nrfy_gpio_input_disconnect": [[49, 3, 1, "c.nrfy_gpio_input_disconnect", "pin_number"]], "nrfy_gpio_pin_clear": [[49, 3, 1, "c.nrfy_gpio_pin_clear", "pin_number"]], "nrfy_gpio_pin_dir_get": [[49, 3, 1, "c.nrfy_gpio_pin_dir_get", "pin_number"]], "nrfy_gpio_pin_dir_set": [[49, 3, 1, "c.nrfy_gpio_pin_dir_set", "direction"], [49, 3, 1, "c.nrfy_gpio_pin_dir_set", "pin_number"]], "nrfy_gpio_pin_input_get": [[49, 3, 1, "c.nrfy_gpio_pin_input_get", "pin_number"]], "nrfy_gpio_pin_out_read": [[49, 3, 1, "c.nrfy_gpio_pin_out_read", "pin_number"]], "nrfy_gpio_pin_port_number_extract": [[49, 3, 1, "c.nrfy_gpio_pin_port_number_extract", "p_pin"]], "nrfy_gpio_pin_present_check": [[49, 3, 1, "c.nrfy_gpio_pin_present_check", "pin_number"]], "nrfy_gpio_pin_pull_get": [[49, 3, 1, "c.nrfy_gpio_pin_pull_get", "pin_number"]], "nrfy_gpio_pin_read": [[49, 3, 1, "c.nrfy_gpio_pin_read", "pin_number"]], "nrfy_gpio_pin_sense_get": [[49, 3, 1, "c.nrfy_gpio_pin_sense_get", "pin_number"]], "nrfy_gpio_pin_set": [[49, 3, 1, "c.nrfy_gpio_pin_set", "pin_number"]], "nrfy_gpio_pin_toggle": [[49, 3, 1, "c.nrfy_gpio_pin_toggle", "pin_number"]], "nrfy_gpio_pin_write": [[49, 3, 1, "c.nrfy_gpio_pin_write", "pin_number"], [49, 3, 1, "c.nrfy_gpio_pin_write", "value"]], "nrfy_gpio_port_dir_input_set": [[49, 3, 1, "c.nrfy_gpio_port_dir_input_set", "in_mask"], [49, 3, 1, "c.nrfy_gpio_port_dir_input_set", "p_reg"]], "nrfy_gpio_port_dir_output_set": [[49, 3, 1, "c.nrfy_gpio_port_dir_output_set", "out_mask"], [49, 3, 1, "c.nrfy_gpio_port_dir_output_set", "p_reg"]], "nrfy_gpio_port_dir_read": [[49, 3, 1, "c.nrfy_gpio_port_dir_read", "p_reg"]], "nrfy_gpio_port_dir_write": [[49, 3, 1, "c.nrfy_gpio_port_dir_write", "dir_mask"], [49, 3, 1, "c.nrfy_gpio_port_dir_write", "p_reg"]], "nrfy_gpio_port_in_read": [[49, 3, 1, "c.nrfy_gpio_port_in_read", "p_reg"]], "nrfy_gpio_port_out_clear": [[49, 3, 1, "c.nrfy_gpio_port_out_clear", "clr_mask"], [49, 3, 1, "c.nrfy_gpio_port_out_clear", "p_reg"]], "nrfy_gpio_port_out_read": [[49, 3, 1, "c.nrfy_gpio_port_out_read", "p_reg"]], "nrfy_gpio_port_out_set": [[49, 3, 1, "c.nrfy_gpio_port_out_set", "p_reg"], [49, 3, 1, "c.nrfy_gpio_port_out_set", "set_mask"]], "nrfy_gpio_port_out_write": [[49, 3, 1, "c.nrfy_gpio_port_out_write", "p_reg"], [49, 3, 1, "c.nrfy_gpio_port_out_write", "value"]], "nrfy_gpio_ports_read": [[49, 3, 1, "c.nrfy_gpio_ports_read", "length"], [49, 3, 1, "c.nrfy_gpio_ports_read", "p_masks"], [49, 3, 1, "c.nrfy_gpio_ports_read", "start_port"]], "nrfy_gpio_range_cfg_input": [[49, 3, 1, "c.nrfy_gpio_range_cfg_input", "pin_range_end"], [49, 3, 1, "c.nrfy_gpio_range_cfg_input", "pin_range_start"], [49, 3, 1, "c.nrfy_gpio_range_cfg_input", "pull_config"]], "nrfy_gpio_range_cfg_output": [[49, 3, 1, "c.nrfy_gpio_range_cfg_output", "pin_range_end"], [49, 3, 1, "c.nrfy_gpio_range_cfg_output", "pin_range_start"]], "nrfy_gpio_reconfigure": [[49, 3, 1, "c.nrfy_gpio_reconfigure", "p_dir"], [49, 3, 1, "c.nrfy_gpio_reconfigure", "p_drive"], [49, 3, 1, "c.nrfy_gpio_reconfigure", "p_input"], [49, 3, 1, "c.nrfy_gpio_reconfigure", "p_pull"], [49, 3, 1, "c.nrfy_gpio_reconfigure", "p_sense"], [49, 3, 1, "c.nrfy_gpio_reconfigure", "pin_number"]], "nrfy_gpiote_clr_task_get": [[53, 3, 1, "c.nrfy_gpiote_clr_task_get", "index"]], "nrfy_gpiote_event_address_get": [[53, 3, 1, "c.nrfy_gpiote_event_address_get", "event"], [53, 3, 1, "c.nrfy_gpiote_event_address_get", "p_reg"]], "nrfy_gpiote_event_check": [[53, 3, 1, "c.nrfy_gpiote_event_check", "event"], [53, 3, 1, "c.nrfy_gpiote_event_check", "p_reg"]], "nrfy_gpiote_event_clear": [[53, 3, 1, "c.nrfy_gpiote_event_clear", "event"], [53, 3, 1, "c.nrfy_gpiote_event_clear", "p_reg"]], "nrfy_gpiote_event_configure": [[53, 3, 1, "c.nrfy_gpiote_event_configure", "idx"], [53, 3, 1, "c.nrfy_gpiote_event_configure", "p_reg"], [53, 3, 1, "c.nrfy_gpiote_event_configure", "pin"], [53, 3, 1, "c.nrfy_gpiote_event_configure", "polarity"]], "nrfy_gpiote_event_disable": [[53, 3, 1, "c.nrfy_gpiote_event_disable", "idx"], [53, 3, 1, "c.nrfy_gpiote_event_disable", "p_reg"]], "nrfy_gpiote_event_enable": [[53, 3, 1, "c.nrfy_gpiote_event_enable", "idx"], [53, 3, 1, "c.nrfy_gpiote_event_enable", "p_reg"]], "nrfy_gpiote_event_pin_get": [[53, 3, 1, "c.nrfy_gpiote_event_pin_get", "idx"], [53, 3, 1, "c.nrfy_gpiote_event_pin_get", "p_reg"]], "nrfy_gpiote_event_polarity_get": [[53, 3, 1, "c.nrfy_gpiote_event_polarity_get", "idx"], [53, 3, 1, "c.nrfy_gpiote_event_polarity_get", "p_reg"]], "nrfy_gpiote_events_process": [[53, 3, 1, "c.nrfy_gpiote_events_process", "channels_number"], [53, 3, 1, "c.nrfy_gpiote_events_process", "mask"], [53, 3, 1, "c.nrfy_gpiote_events_process", "p_reg"]], "nrfy_gpiote_in_event_get": [[53, 3, 1, "c.nrfy_gpiote_in_event_get", "index"]], "nrfy_gpiote_int_disable": [[53, 3, 1, "c.nrfy_gpiote_int_disable", "mask"], [53, 3, 1, "c.nrfy_gpiote_int_disable", "p_reg"]], "nrfy_gpiote_int_enable": [[53, 3, 1, "c.nrfy_gpiote_int_enable", "mask"], [53, 3, 1, "c.nrfy_gpiote_int_enable", "p_reg"]], "nrfy_gpiote_int_enable_check": [[53, 3, 1, "c.nrfy_gpiote_int_enable_check", "mask"], [53, 3, 1, "c.nrfy_gpiote_int_enable_check", "p_reg"]], "nrfy_gpiote_int_init": [[53, 3, 1, "c.nrfy_gpiote_int_init", "channels_number"], [53, 3, 1, "c.nrfy_gpiote_int_init", "enable"], [53, 3, 1, "c.nrfy_gpiote_int_init", "irq_priority"], [53, 3, 1, "c.nrfy_gpiote_int_init", "mask"], [53, 3, 1, "c.nrfy_gpiote_int_init", "p_reg"]], "nrfy_gpiote_latency_get": [[53, 3, 1, "c.nrfy_gpiote_latency_get", "p_reg"]], "nrfy_gpiote_latency_set": [[53, 3, 1, "c.nrfy_gpiote_latency_set", "latency"], [53, 3, 1, "c.nrfy_gpiote_latency_set", "p_reg"]], "nrfy_gpiote_out_task_get": [[53, 3, 1, "c.nrfy_gpiote_out_task_get", "index"]], "nrfy_gpiote_publish_clear": [[53, 3, 1, "c.nrfy_gpiote_publish_clear", "event"], [53, 3, 1, "c.nrfy_gpiote_publish_clear", "p_reg"]], "nrfy_gpiote_publish_set": [[53, 3, 1, "c.nrfy_gpiote_publish_set", "channel"], [53, 3, 1, "c.nrfy_gpiote_publish_set", "event"], [53, 3, 1, "c.nrfy_gpiote_publish_set", "p_reg"]], "nrfy_gpiote_set_task_get": [[53, 3, 1, "c.nrfy_gpiote_set_task_get", "index"]], "nrfy_gpiote_subscribe_clear": [[53, 3, 1, "c.nrfy_gpiote_subscribe_clear", "p_reg"], [53, 3, 1, "c.nrfy_gpiote_subscribe_clear", "task"]], "nrfy_gpiote_subscribe_set": [[53, 3, 1, "c.nrfy_gpiote_subscribe_set", "channel"], [53, 3, 1, "c.nrfy_gpiote_subscribe_set", "p_reg"], [53, 3, 1, "c.nrfy_gpiote_subscribe_set", "task"]], "nrfy_gpiote_task_address_get": [[53, 3, 1, "c.nrfy_gpiote_task_address_get", "p_reg"], [53, 3, 1, "c.nrfy_gpiote_task_address_get", "task"]], "nrfy_gpiote_task_configure": [[53, 3, 1, "c.nrfy_gpiote_task_configure", "idx"], [53, 3, 1, "c.nrfy_gpiote_task_configure", "init_val"], [53, 3, 1, "c.nrfy_gpiote_task_configure", "p_reg"], [53, 3, 1, "c.nrfy_gpiote_task_configure", "pin"], [53, 3, 1, "c.nrfy_gpiote_task_configure", "polarity"]], "nrfy_gpiote_task_disable": [[53, 3, 1, "c.nrfy_gpiote_task_disable", "idx"], [53, 3, 1, "c.nrfy_gpiote_task_disable", "p_reg"]], "nrfy_gpiote_task_enable": [[53, 3, 1, "c.nrfy_gpiote_task_enable", "idx"], [53, 3, 1, "c.nrfy_gpiote_task_enable", "p_reg"]], "nrfy_gpiote_task_force": [[53, 3, 1, "c.nrfy_gpiote_task_force", "idx"], [53, 3, 1, "c.nrfy_gpiote_task_force", "init_val"], [53, 3, 1, "c.nrfy_gpiote_task_force", "p_reg"]], "nrfy_gpiote_task_trigger": [[53, 3, 1, "c.nrfy_gpiote_task_trigger", "p_reg"], [53, 3, 1, "c.nrfy_gpiote_task_trigger", "task"]], "nrfy_gpiote_te_default": [[53, 3, 1, "c.nrfy_gpiote_te_default", "idx"], [53, 3, 1, "c.nrfy_gpiote_te_default", "p_reg"]], "nrfy_gpiote_te_is_enabled": [[53, 3, 1, "c.nrfy_gpiote_te_is_enabled", "idx"], [53, 3, 1, "c.nrfy_gpiote_te_is_enabled", "p_reg"]], "nrfy_grtc_clkout_divider_get": [[57, 3, 1, "c.nrfy_grtc_clkout_divider_get", "p_reg"]], "nrfy_grtc_clkout_divider_set": [[57, 3, 1, "c.nrfy_grtc_clkout_divider_set", "p_reg"], [57, 3, 1, "c.nrfy_grtc_clkout_divider_set", "value"]], "nrfy_grtc_clkout_enable_check": [[57, 3, 1, "c.nrfy_grtc_clkout_enable_check", "clkout"], [57, 3, 1, "c.nrfy_grtc_clkout_enable_check", "p_reg"]], "nrfy_grtc_clkout_set": [[57, 3, 1, "c.nrfy_grtc_clkout_set", "clkout"], [57, 3, 1, "c.nrfy_grtc_clkout_set", "enable"], [57, 3, 1, "c.nrfy_grtc_clkout_set", "p_reg"]], "nrfy_grtc_clksel_get": [[57, 3, 1, "c.nrfy_grtc_clksel_get", "p_reg"]], "nrfy_grtc_clksel_set": [[57, 3, 1, "c.nrfy_grtc_clksel_set", "clksel"], [57, 3, 1, "c.nrfy_grtc_clksel_set", "p_reg"]], "nrfy_grtc_event_address_get": [[57, 3, 1, "c.nrfy_grtc_event_address_get", "event"], [57, 3, 1, "c.nrfy_grtc_event_address_get", "p_reg"]], "nrfy_grtc_event_check": [[57, 3, 1, "c.nrfy_grtc_event_check", "event"], [57, 3, 1, "c.nrfy_grtc_event_check", "p_reg"]], "nrfy_grtc_event_clear": [[57, 3, 1, "c.nrfy_grtc_event_clear", "event"], [57, 3, 1, "c.nrfy_grtc_event_clear", "p_reg"]], "nrfy_grtc_events_process": [[57, 3, 1, "c.nrfy_grtc_events_process", "mask"], [57, 3, 1, "c.nrfy_grtc_events_process", "p_reg"]], "nrfy_grtc_int_disable": [[57, 3, 1, "c.nrfy_grtc_int_disable", "mask"], [57, 3, 1, "c.nrfy_grtc_int_disable", "p_reg"]], "nrfy_grtc_int_enable": [[57, 3, 1, "c.nrfy_grtc_int_enable", "mask"], [57, 3, 1, "c.nrfy_grtc_int_enable", "p_reg"]], "nrfy_grtc_int_enable_check": [[57, 3, 1, "c.nrfy_grtc_int_enable_check", "mask"], [57, 3, 1, "c.nrfy_grtc_int_enable_check", "p_reg"]], "nrfy_grtc_int_init": [[57, 3, 1, "c.nrfy_grtc_int_init", "enable"], [57, 3, 1, "c.nrfy_grtc_int_init", "irq_priority"], [57, 3, 1, "c.nrfy_grtc_int_init", "mask"], [57, 3, 1, "c.nrfy_grtc_int_init", "p_reg"]], "nrfy_grtc_int_pending_get": [[57, 3, 1, "c.nrfy_grtc_int_pending_get", "p_reg"]], "nrfy_grtc_int_uninit": [[57, 3, 1, "c.nrfy_grtc_int_uninit", "p_reg"]], "nrfy_grtc_prepare": [[57, 3, 1, "c.nrfy_grtc_prepare", "busy_wait"], [57, 3, 1, "c.nrfy_grtc_prepare", "p_reg"]], "nrfy_grtc_publish_clear": [[57, 3, 1, "c.nrfy_grtc_publish_clear", "event"], [57, 3, 1, "c.nrfy_grtc_publish_clear", "p_reg"]], "nrfy_grtc_publish_set": [[57, 3, 1, "c.nrfy_grtc_publish_set", "channel"], [57, 3, 1, "c.nrfy_grtc_publish_set", "event"], [57, 3, 1, "c.nrfy_grtc_publish_set", "p_reg"]], "nrfy_grtc_pwm_compare_get": [[57, 3, 1, "c.nrfy_grtc_pwm_compare_get", "p_reg"]], "nrfy_grtc_pwm_compare_set": [[57, 3, 1, "c.nrfy_grtc_pwm_compare_set", "p_reg"], [57, 3, 1, "c.nrfy_grtc_pwm_compare_set", "value"]], "nrfy_grtc_rt_counter_cc_get": [[57, 3, 1, "c.nrfy_grtc_rt_counter_cc_get", "p_reg"]], "nrfy_grtc_rt_counter_cc_set": [[57, 3, 1, "c.nrfy_grtc_rt_counter_cc_set", "cc_value"], [57, 3, 1, "c.nrfy_grtc_rt_counter_cc_set", "p_reg"], [57, 3, 1, "c.nrfy_grtc_rt_counter_cc_set", "sync"]], "nrfy_grtc_rt_counter_get": [[57, 3, 1, "c.nrfy_grtc_rt_counter_get", "p_reg"]], "nrfy_grtc_shorts_disable": [[57, 3, 1, "c.nrfy_grtc_shorts_disable", "mask"], [57, 3, 1, "c.nrfy_grtc_shorts_disable", "p_reg"]], "nrfy_grtc_shorts_enable": [[57, 3, 1, "c.nrfy_grtc_shorts_enable", "mask"], [57, 3, 1, "c.nrfy_grtc_shorts_enable", "p_reg"]], "nrfy_grtc_shorts_set": [[57, 3, 1, "c.nrfy_grtc_shorts_set", "mask"], [57, 3, 1, "c.nrfy_grtc_shorts_set", "p_reg"]], "nrfy_grtc_subscribe_clear": [[57, 3, 1, "c.nrfy_grtc_subscribe_clear", "p_reg"], [57, 3, 1, "c.nrfy_grtc_subscribe_clear", "task"]], "nrfy_grtc_subscribe_set": [[57, 3, 1, "c.nrfy_grtc_subscribe_set", "channel"], [57, 3, 1, "c.nrfy_grtc_subscribe_set", "p_reg"], [57, 3, 1, "c.nrfy_grtc_subscribe_set", "task"]], "nrfy_grtc_sys_conter_ready_check": [[57, 3, 1, "c.nrfy_grtc_sys_conter_ready_check", "p_reg"]], "nrfy_grtc_sys_counter_active_check": [[57, 3, 1, "c.nrfy_grtc_sys_counter_active_check", "p_reg"]], "nrfy_grtc_sys_counter_active_set": [[57, 3, 1, "c.nrfy_grtc_sys_counter_active_set", "enable"], [57, 3, 1, "c.nrfy_grtc_sys_counter_active_set", "p_reg"]], "nrfy_grtc_sys_counter_active_state_request_check": [[57, 3, 1, "c.nrfy_grtc_sys_counter_active_state_request_check", "p_reg"]], "nrfy_grtc_sys_counter_active_state_request_get": [[57, 3, 1, "c.nrfy_grtc_sys_counter_active_state_request_get", "mask"], [57, 3, 1, "c.nrfy_grtc_sys_counter_active_state_request_get", "p_reg"]], "nrfy_grtc_sys_counter_active_state_request_set": [[57, 3, 1, "c.nrfy_grtc_sys_counter_active_state_request_set", "enable"], [57, 3, 1, "c.nrfy_grtc_sys_counter_active_state_request_set", "p_reg"]], "nrfy_grtc_sys_counter_auto_mode_check": [[57, 3, 1, "c.nrfy_grtc_sys_counter_auto_mode_check", "p_reg"]], "nrfy_grtc_sys_counter_auto_mode_set": [[57, 3, 1, "c.nrfy_grtc_sys_counter_auto_mode_set", "enable"], [57, 3, 1, "c.nrfy_grtc_sys_counter_auto_mode_set", "p_reg"]], "nrfy_grtc_sys_counter_capture_subscribe_clear": [[57, 3, 1, "c.nrfy_grtc_sys_counter_capture_subscribe_clear", "cc_channel"], [57, 3, 1, "c.nrfy_grtc_sys_counter_capture_subscribe_clear", "p_reg"]], "nrfy_grtc_sys_counter_capture_subscribe_set": [[57, 3, 1, "c.nrfy_grtc_sys_counter_capture_subscribe_set", "cc_channel"], [57, 3, 1, "c.nrfy_grtc_sys_counter_capture_subscribe_set", "channel"], [57, 3, 1, "c.nrfy_grtc_sys_counter_capture_subscribe_set", "p_reg"]], "nrfy_grtc_sys_counter_capture_task_get": [[57, 3, 1, "c.nrfy_grtc_sys_counter_capture_task_get", "cc_channel"]], "nrfy_grtc_sys_counter_cc_add_set": [[57, 3, 1, "c.nrfy_grtc_sys_counter_cc_add_set", "cc_channel"], [57, 3, 1, "c.nrfy_grtc_sys_counter_cc_add_set", "p_reg"], [57, 3, 1, "c.nrfy_grtc_sys_counter_cc_add_set", "reference"], [57, 3, 1, "c.nrfy_grtc_sys_counter_cc_add_set", "value"]], "nrfy_grtc_sys_counter_cc_enable_check": [[57, 3, 1, "c.nrfy_grtc_sys_counter_cc_enable_check", "cc_channel"], [57, 3, 1, "c.nrfy_grtc_sys_counter_cc_enable_check", "p_reg"]], "nrfy_grtc_sys_counter_cc_get": [[57, 3, 1, "c.nrfy_grtc_sys_counter_cc_get", "cc_channel"], [57, 3, 1, "c.nrfy_grtc_sys_counter_cc_get", "p_reg"]], "nrfy_grtc_sys_counter_cc_set": [[57, 3, 1, "c.nrfy_grtc_sys_counter_cc_set", "cc_channel"], [57, 3, 1, "c.nrfy_grtc_sys_counter_cc_set", "cc_value"], [57, 3, 1, "c.nrfy_grtc_sys_counter_cc_set", "p_reg"]], "nrfy_grtc_sys_counter_check": [[57, 3, 1, "c.nrfy_grtc_sys_counter_check", "p_reg"]], "nrfy_grtc_sys_counter_compare_event_check": [[57, 3, 1, "c.nrfy_grtc_sys_counter_compare_event_check", "cc_channel"], [57, 3, 1, "c.nrfy_grtc_sys_counter_compare_event_check", "p_reg"]], "nrfy_grtc_sys_counter_compare_event_clear": [[57, 3, 1, "c.nrfy_grtc_sys_counter_compare_event_clear", "cc_channel"], [57, 3, 1, "c.nrfy_grtc_sys_counter_compare_event_clear", "p_reg"]], "nrfy_grtc_sys_counter_compare_event_disable": [[57, 3, 1, "c.nrfy_grtc_sys_counter_compare_event_disable", "cc_channel"], [57, 3, 1, "c.nrfy_grtc_sys_counter_compare_event_disable", "p_reg"]], "nrfy_grtc_sys_counter_compare_event_enable": [[57, 3, 1, "c.nrfy_grtc_sys_counter_compare_event_enable", "cc_channel"], [57, 3, 1, "c.nrfy_grtc_sys_counter_compare_event_enable", "p_reg"]], "nrfy_grtc_sys_counter_compare_event_get": [[57, 3, 1, "c.nrfy_grtc_sys_counter_compare_event_get", "cc_channel"]], "nrfy_grtc_sys_counter_compare_event_int_clear_enable": [[57, 3, 1, "c.nrfy_grtc_sys_counter_compare_event_int_clear_enable", "channel"], [57, 3, 1, "c.nrfy_grtc_sys_counter_compare_event_int_clear_enable", "enable"], [57, 3, 1, "c.nrfy_grtc_sys_counter_compare_event_int_clear_enable", "p_reg"]], "nrfy_grtc_sys_counter_compare_publish_clear": [[57, 3, 1, "c.nrfy_grtc_sys_counter_compare_publish_clear", "cc_channel"], [57, 3, 1, "c.nrfy_grtc_sys_counter_compare_publish_clear", "p_reg"]], "nrfy_grtc_sys_counter_compare_publish_set": [[57, 3, 1, "c.nrfy_grtc_sys_counter_compare_publish_set", "cc_channel"], [57, 3, 1, "c.nrfy_grtc_sys_counter_compare_publish_set", "channel"], [57, 3, 1, "c.nrfy_grtc_sys_counter_compare_publish_set", "p_reg"]], "nrfy_grtc_sys_counter_get": [[57, 3, 1, "c.nrfy_grtc_sys_counter_get", "p_reg"]], "nrfy_grtc_sys_counter_interval_get": [[57, 3, 1, "c.nrfy_grtc_sys_counter_interval_get", "p_reg"]], "nrfy_grtc_sys_counter_interval_set": [[57, 3, 1, "c.nrfy_grtc_sys_counter_interval_set", "p_reg"], [57, 3, 1, "c.nrfy_grtc_sys_counter_interval_set", "value"]], "nrfy_grtc_sys_counter_overflow_check": [[57, 3, 1, "c.nrfy_grtc_sys_counter_overflow_check", "p_reg"]], "nrfy_grtc_sys_counter_set": [[57, 3, 1, "c.nrfy_grtc_sys_counter_set", "enable"], [57, 3, 1, "c.nrfy_grtc_sys_counter_set", "p_reg"]], "nrfy_grtc_sys_counter_start": [[57, 3, 1, "c.nrfy_grtc_sys_counter_start", "busy_wait"], [57, 3, 1, "c.nrfy_grtc_sys_counter_start", "p_reg"]], "nrfy_grtc_task_address_get": [[57, 3, 1, "c.nrfy_grtc_task_address_get", "p_reg"], [57, 3, 1, "c.nrfy_grtc_task_address_get", "task"]], "nrfy_grtc_task_trigger": [[57, 3, 1, "c.nrfy_grtc_task_trigger", "p_reg"], [57, 3, 1, "c.nrfy_grtc_task_trigger", "task"]], "nrfy_grtc_timeout_get": [[57, 3, 1, "c.nrfy_grtc_timeout_get", "p_reg"]], "nrfy_grtc_timeout_set": [[57, 3, 1, "c.nrfy_grtc_timeout_set", "p_reg"], [57, 3, 1, "c.nrfy_grtc_timeout_set", "value"]], "nrfy_grtc_waketime_get": [[57, 3, 1, "c.nrfy_grtc_waketime_get", "p_reg"]], "nrfy_grtc_waketime_set": [[57, 3, 1, "c.nrfy_grtc_waketime_set", "p_reg"], [57, 3, 1, "c.nrfy_grtc_waketime_set", "value"]], "nrfy_i2s_abort": [[62, 3, 1, "c.nrfy_i2s_abort", "p_reg"], [62, 3, 1, "c.nrfy_i2s_abort", "p_xfer"]], "nrfy_i2s_buffers_set": [[62, 3, 1, "c.nrfy_i2s_buffers_set", "p_reg"], [62, 3, 1, "c.nrfy_i2s_buffers_set", "p_xfer"]], "nrfy_i2s_buffers_t": [[62, 6, 1, "c.nrfy_i2s_buffers_t.p_rx_buffer", "p_rx_buffer"], [62, 6, 1, "c.nrfy_i2s_buffers_t.p_tx_buffer", "p_tx_buffer"]], "nrfy_i2s_config_t": [[62, 6, 1, "c.nrfy_i2s_config_t.config", "config"], [62, 6, 1, "c.nrfy_i2s_config_t.pins", "pins"], [62, 6, 1, "c.nrfy_i2s_config_t.skip_psel_cfg", "skip_psel_cfg"]], "nrfy_i2s_configure": [[62, 3, 1, "c.nrfy_i2s_configure", "p_config"], [62, 3, 1, "c.nrfy_i2s_configure", "p_reg"]], "nrfy_i2s_disable": [[62, 3, 1, "c.nrfy_i2s_disable", "p_reg"]], "nrfy_i2s_enable": [[62, 3, 1, "c.nrfy_i2s_enable", "p_reg"]], "nrfy_i2s_event_address_get": [[62, 3, 1, "c.nrfy_i2s_event_address_get", "event"], [62, 3, 1, "c.nrfy_i2s_event_address_get", "p_reg"]], "nrfy_i2s_event_check": [[62, 3, 1, "c.nrfy_i2s_event_check", "event"], [62, 3, 1, "c.nrfy_i2s_event_check", "p_reg"]], "nrfy_i2s_event_clear": [[62, 3, 1, "c.nrfy_i2s_event_clear", "event"], [62, 3, 1, "c.nrfy_i2s_event_clear", "p_reg"]], "nrfy_i2s_events_process": [[62, 3, 1, "c.nrfy_i2s_events_process", "mask"], [62, 3, 1, "c.nrfy_i2s_events_process", "p_reg"], [62, 3, 1, "c.nrfy_i2s_events_process", "p_xfer"]], "nrfy_i2s_int_disable": [[62, 3, 1, "c.nrfy_i2s_int_disable", "mask"], [62, 3, 1, "c.nrfy_i2s_int_disable", "p_reg"]], "nrfy_i2s_int_enable": [[62, 3, 1, "c.nrfy_i2s_int_enable", "mask"], [62, 3, 1, "c.nrfy_i2s_int_enable", "p_reg"]], "nrfy_i2s_int_enable_check": [[62, 3, 1, "c.nrfy_i2s_int_enable_check", "mask"], [62, 3, 1, "c.nrfy_i2s_int_enable_check", "p_reg"]], "nrfy_i2s_int_init": [[62, 3, 1, "c.nrfy_i2s_int_init", "enable"], [62, 3, 1, "c.nrfy_i2s_int_init", "irq_priority"], [62, 3, 1, "c.nrfy_i2s_int_init", "mask"], [62, 3, 1, "c.nrfy_i2s_int_init", "p_reg"]], "nrfy_i2s_int_uninit": [[62, 3, 1, "c.nrfy_i2s_int_uninit", "p_reg"]], "nrfy_i2s_lrck_pin_get": [[62, 3, 1, "c.nrfy_i2s_lrck_pin_get", "p_reg"]], "nrfy_i2s_mck_pin_get": [[62, 3, 1, "c.nrfy_i2s_mck_pin_get", "p_reg"]], "nrfy_i2s_periph_configure": [[62, 3, 1, "c.nrfy_i2s_periph_configure", "p_config"], [62, 3, 1, "c.nrfy_i2s_periph_configure", "p_reg"]], "nrfy_i2s_pins_get": [[62, 3, 1, "c.nrfy_i2s_pins_get", "p_pins"], [62, 3, 1, "c.nrfy_i2s_pins_get", "p_reg"]], "nrfy_i2s_pins_set": [[62, 3, 1, "c.nrfy_i2s_pins_set", "p_pins"], [62, 3, 1, "c.nrfy_i2s_pins_set", "p_reg"]], "nrfy_i2s_publish_clear": [[62, 3, 1, "c.nrfy_i2s_publish_clear", "event"], [62, 3, 1, "c.nrfy_i2s_publish_clear", "p_reg"]], "nrfy_i2s_publish_set": [[62, 3, 1, "c.nrfy_i2s_publish_set", "channel"], [62, 3, 1, "c.nrfy_i2s_publish_set", "event"], [62, 3, 1, "c.nrfy_i2s_publish_set", "p_reg"]], "nrfy_i2s_rx_buffer_get": [[62, 3, 1, "c.nrfy_i2s_rx_buffer_get", "p_reg"]], "nrfy_i2s_rx_buffer_set": [[62, 3, 1, "c.nrfy_i2s_rx_buffer_set", "p_buffer"], [62, 3, 1, "c.nrfy_i2s_rx_buffer_set", "p_reg"]], "nrfy_i2s_sck_pin_get": [[62, 3, 1, "c.nrfy_i2s_sck_pin_get", "p_reg"]], "nrfy_i2s_sdin_pin_get": [[62, 3, 1, "c.nrfy_i2s_sdin_pin_get", "p_reg"]], "nrfy_i2s_sdout_pin_get": [[62, 3, 1, "c.nrfy_i2s_sdout_pin_get", "p_reg"]], "nrfy_i2s_subscribe_clear": [[62, 3, 1, "c.nrfy_i2s_subscribe_clear", "p_reg"], [62, 3, 1, "c.nrfy_i2s_subscribe_clear", "task"]], "nrfy_i2s_subscribe_set": [[62, 3, 1, "c.nrfy_i2s_subscribe_set", "channel"], [62, 3, 1, "c.nrfy_i2s_subscribe_set", "p_reg"], [62, 3, 1, "c.nrfy_i2s_subscribe_set", "task"]], "nrfy_i2s_task_address_get": [[62, 3, 1, "c.nrfy_i2s_task_address_get", "p_reg"], [62, 3, 1, "c.nrfy_i2s_task_address_get", "task"]], "nrfy_i2s_task_trigger": [[62, 3, 1, "c.nrfy_i2s_task_trigger", "p_reg"], [62, 3, 1, "c.nrfy_i2s_task_trigger", "task"]], "nrfy_i2s_transfer_set": [[62, 3, 1, "c.nrfy_i2s_transfer_set", "p_reg"], [62, 3, 1, "c.nrfy_i2s_transfer_set", "p_rx_buffer"], [62, 3, 1, "c.nrfy_i2s_transfer_set", "p_tx_buffer"], [62, 3, 1, "c.nrfy_i2s_transfer_set", "size"]], "nrfy_i2s_tx_buffer_get": [[62, 3, 1, "c.nrfy_i2s_tx_buffer_get", "p_reg"]], "nrfy_i2s_tx_buffer_set": [[62, 3, 1, "c.nrfy_i2s_tx_buffer_set", "p_buffer"], [62, 3, 1, "c.nrfy_i2s_tx_buffer_set", "p_reg"]], "nrfy_i2s_xfer_desc_t": [[62, 6, 1, "c.nrfy_i2s_xfer_desc_t.buffer_size", "buffer_size"], [62, 6, 1, "c.nrfy_i2s_xfer_desc_t.p_rx_buffer", "p_rx_buffer"], [62, 6, 1, "c.nrfy_i2s_xfer_desc_t.p_tx_buffer", "p_tx_buffer"]], "nrfy_i2s_xfer_start": [[62, 3, 1, "c.nrfy_i2s_xfer_start", "p_reg"], [62, 3, 1, "c.nrfy_i2s_xfer_start", "p_xfer"]], "nrfy_lpcomp_config_t": [[75, 6, 1, "c.nrfy_lpcomp_config_t.config", "config"], [75, 6, 1, "c.nrfy_lpcomp_config_t.detection", "detection"], [75, 6, 1, "c.nrfy_lpcomp_config_t.ext_ref", "ext_ref"], [75, 6, 1, "c.nrfy_lpcomp_config_t.input", "input"], [75, 6, 1, "c.nrfy_lpcomp_config_t.reference", "reference"]], "nrfy_lpcomp_configure": [[75, 3, 1, "c.nrfy_lpcomp_configure", "p_config"], [75, 3, 1, "c.nrfy_lpcomp_configure", "p_reg"]], "nrfy_lpcomp_detection_set": [[75, 3, 1, "c.nrfy_lpcomp_detection_set", "detection"], [75, 3, 1, "c.nrfy_lpcomp_detection_set", "p_reg"]], "nrfy_lpcomp_disable": [[75, 3, 1, "c.nrfy_lpcomp_disable", "p_reg"]], "nrfy_lpcomp_enable": [[75, 3, 1, "c.nrfy_lpcomp_enable", "p_reg"]], "nrfy_lpcomp_event_address_get": [[75, 3, 1, "c.nrfy_lpcomp_event_address_get", "event"], [75, 3, 1, "c.nrfy_lpcomp_event_address_get", "p_reg"]], "nrfy_lpcomp_event_check": [[75, 3, 1, "c.nrfy_lpcomp_event_check", "event"], [75, 3, 1, "c.nrfy_lpcomp_event_check", "p_reg"]], "nrfy_lpcomp_event_clear": [[75, 3, 1, "c.nrfy_lpcomp_event_clear", "event"], [75, 3, 1, "c.nrfy_lpcomp_event_clear", "p_reg"]], "nrfy_lpcomp_events_process": [[75, 3, 1, "c.nrfy_lpcomp_events_process", "mask"], [75, 3, 1, "c.nrfy_lpcomp_events_process", "p_reg"]], "nrfy_lpcomp_ext_ref_set": [[75, 3, 1, "c.nrfy_lpcomp_ext_ref_set", "ext_ref"], [75, 3, 1, "c.nrfy_lpcomp_ext_ref_set", "p_reg"]], "nrfy_lpcomp_hysteresis_set": [[75, 3, 1, "c.nrfy_lpcomp_hysteresis_set", "hyst"], [75, 3, 1, "c.nrfy_lpcomp_hysteresis_set", "p_reg"]], "nrfy_lpcomp_input_select": [[75, 3, 1, "c.nrfy_lpcomp_input_select", "input"], [75, 3, 1, "c.nrfy_lpcomp_input_select", "p_reg"]], "nrfy_lpcomp_int_disable": [[75, 3, 1, "c.nrfy_lpcomp_int_disable", "mask"], [75, 3, 1, "c.nrfy_lpcomp_int_disable", "p_reg"]], "nrfy_lpcomp_int_enable": [[75, 3, 1, "c.nrfy_lpcomp_int_enable", "mask"], [75, 3, 1, "c.nrfy_lpcomp_int_enable", "p_reg"]], "nrfy_lpcomp_int_enable_check": [[75, 3, 1, "c.nrfy_lpcomp_int_enable_check", "mask"], [75, 3, 1, "c.nrfy_lpcomp_int_enable_check", "p_reg"]], "nrfy_lpcomp_int_init": [[75, 3, 1, "c.nrfy_lpcomp_int_init", "enable"], [75, 3, 1, "c.nrfy_lpcomp_int_init", "irq_priority"], [75, 3, 1, "c.nrfy_lpcomp_int_init", "mask"], [75, 3, 1, "c.nrfy_lpcomp_int_init", "p_reg"]], "nrfy_lpcomp_int_uninit": [[75, 3, 1, "c.nrfy_lpcomp_int_uninit", "p_reg"]], "nrfy_lpcomp_periph_configure": [[75, 3, 1, "c.nrfy_lpcomp_periph_configure", "p_config"], [75, 3, 1, "c.nrfy_lpcomp_periph_configure", "p_reg"]], "nrfy_lpcomp_ref_set": [[75, 3, 1, "c.nrfy_lpcomp_ref_set", "p_reg"], [75, 3, 1, "c.nrfy_lpcomp_ref_set", "reference"]], "nrfy_lpcomp_result_get": [[75, 3, 1, "c.nrfy_lpcomp_result_get", "p_reg"]], "nrfy_lpcomp_sample_check": [[75, 3, 1, "c.nrfy_lpcomp_sample_check", "p_reg"]], "nrfy_lpcomp_shorts_disable": [[75, 3, 1, "c.nrfy_lpcomp_shorts_disable", "mask"], [75, 3, 1, "c.nrfy_lpcomp_shorts_disable", "p_reg"]], "nrfy_lpcomp_shorts_enable": [[75, 3, 1, "c.nrfy_lpcomp_shorts_enable", "mask"], [75, 3, 1, "c.nrfy_lpcomp_shorts_enable", "p_reg"]], "nrfy_lpcomp_task_address_get": [[75, 3, 1, "c.nrfy_lpcomp_task_address_get", "p_reg"], [75, 3, 1, "c.nrfy_lpcomp_task_address_get", "task"]], "nrfy_lpcomp_task_trigger": [[75, 3, 1, "c.nrfy_lpcomp_task_trigger", "p_reg"], [75, 3, 1, "c.nrfy_lpcomp_task_trigger", "task"]], "nrfy_mvdma_abort": [[88, 3, 1, "c.nrfy_mvdma_abort", "p_list_request"], [88, 3, 1, "c.nrfy_mvdma_abort", "p_reg"]], "nrfy_mvdma_activity_check": [[88, 3, 1, "c.nrfy_mvdma_activity_check", "p_reg"]], "nrfy_mvdma_aximode_set": [[88, 3, 1, "c.nrfy_mvdma_aximode_set", "aximode"], [88, 3, 1, "c.nrfy_mvdma_aximode_set", "p_reg"]], "nrfy_mvdma_crc_result_get": [[88, 3, 1, "c.nrfy_mvdma_crc_result_get", "p_reg"]], "nrfy_mvdma_event_address_get": [[88, 3, 1, "c.nrfy_mvdma_event_address_get", "event"], [88, 3, 1, "c.nrfy_mvdma_event_address_get", "p_reg"]], "nrfy_mvdma_event_check": [[88, 3, 1, "c.nrfy_mvdma_event_check", "event"], [88, 3, 1, "c.nrfy_mvdma_event_check", "p_reg"]], "nrfy_mvdma_event_clear": [[88, 3, 1, "c.nrfy_mvdma_event_clear", "event"], [88, 3, 1, "c.nrfy_mvdma_event_clear", "p_reg"]], "nrfy_mvdma_events_process": [[88, 3, 1, "c.nrfy_mvdma_events_process", "mask"], [88, 3, 1, "c.nrfy_mvdma_events_process", "p_list_request"], [88, 3, 1, "c.nrfy_mvdma_events_process", "p_reg"]], "nrfy_mvdma_fifo_status_get": [[88, 3, 1, "c.nrfy_mvdma_fifo_status_get", "p_reg"]], "nrfy_mvdma_int_disable": [[88, 3, 1, "c.nrfy_mvdma_int_disable", "mask"], [88, 3, 1, "c.nrfy_mvdma_int_disable", "p_reg"]], "nrfy_mvdma_int_enable": [[88, 3, 1, "c.nrfy_mvdma_int_enable", "mask"], [88, 3, 1, "c.nrfy_mvdma_int_enable", "p_reg"]], "nrfy_mvdma_int_enable_check": [[88, 3, 1, "c.nrfy_mvdma_int_enable_check", "mask"], [88, 3, 1, "c.nrfy_mvdma_int_enable_check", "p_reg"]], "nrfy_mvdma_int_init": [[88, 3, 1, "c.nrfy_mvdma_int_init", "enable"], [88, 3, 1, "c.nrfy_mvdma_int_init", "irq_priority"], [88, 3, 1, "c.nrfy_mvdma_int_init", "mask"], [88, 3, 1, "c.nrfy_mvdma_int_init", "p_reg"]], "nrfy_mvdma_int_pending_get": [[88, 3, 1, "c.nrfy_mvdma_int_pending_get", "p_reg"]], "nrfy_mvdma_int_uninit": [[88, 3, 1, "c.nrfy_mvdma_int_uninit", "p_reg"]], "nrfy_mvdma_job_list_set": [[88, 3, 1, "c.nrfy_mvdma_job_list_set", "p_list_request"], [88, 3, 1, "c.nrfy_mvdma_job_list_set", "p_reg"]], "nrfy_mvdma_last_sink_address_get": [[88, 3, 1, "c.nrfy_mvdma_last_sink_address_get", "p_reg"]], "nrfy_mvdma_last_source_address_get": [[88, 3, 1, "c.nrfy_mvdma_last_source_address_get", "p_reg"]], "nrfy_mvdma_list_desc_t": [[88, 6, 1, "c.nrfy_mvdma_list_desc_t.job_count", "job_count"], [88, 6, 1, "c.nrfy_mvdma_list_desc_t.last_addr", "last_addr"], [88, 6, 1, "c.nrfy_mvdma_list_desc_t.p_jobs", "p_jobs"]], "nrfy_mvdma_list_request_t": [[88, 6, 1, "c.nrfy_mvdma_list_request_t.p_sink_job_list", "p_sink_job_list"], [88, 6, 1, "c.nrfy_mvdma_list_request_t.p_source_job_list", "p_source_job_list"]], "nrfy_mvdma_mode_set": [[88, 3, 1, "c.nrfy_mvdma_mode_set", "mode"], [88, 3, 1, "c.nrfy_mvdma_mode_set", "p_reg"]], "nrfy_mvdma_multi_job_list_get": [[88, 3, 1, "c.nrfy_mvdma_multi_job_list_get", "p_list_request"], [88, 3, 1, "c.nrfy_mvdma_multi_job_list_get", "p_reg"]], "nrfy_mvdma_multi_job_list_set": [[88, 3, 1, "c.nrfy_mvdma_multi_job_list_set", "p_list_request"], [88, 3, 1, "c.nrfy_mvdma_multi_job_list_set", "p_reg"]], "nrfy_mvdma_multi_start": [[88, 3, 1, "c.nrfy_mvdma_multi_start", "idx"], [88, 3, 1, "c.nrfy_mvdma_multi_start", "p_list_request"], [88, 3, 1, "c.nrfy_mvdma_multi_start", "p_reg"]], "nrfy_mvdma_publish_clear": [[88, 3, 1, "c.nrfy_mvdma_publish_clear", "event"], [88, 3, 1, "c.nrfy_mvdma_publish_clear", "p_reg"]], "nrfy_mvdma_publish_set": [[88, 3, 1, "c.nrfy_mvdma_publish_set", "channel"], [88, 3, 1, "c.nrfy_mvdma_publish_set", "event"], [88, 3, 1, "c.nrfy_mvdma_publish_set", "p_reg"]], "nrfy_mvdma_reset": [[88, 3, 1, "c.nrfy_mvdma_reset", "p_reg"], [88, 3, 1, "c.nrfy_mvdma_reset", "wait"]], "nrfy_mvdma_sink_error_get": [[88, 3, 1, "c.nrfy_mvdma_sink_error_get", "p_reg"]], "nrfy_mvdma_sink_job_count_get": [[88, 3, 1, "c.nrfy_mvdma_sink_job_count_get", "p_reg"]], "nrfy_mvdma_sink_job_description_get": [[88, 3, 1, "c.nrfy_mvdma_sink_job_description_get", "p_job_list_desc"], [88, 3, 1, "c.nrfy_mvdma_sink_job_description_get", "p_reg"]], "nrfy_mvdma_sink_list_ptr_get": [[88, 3, 1, "c.nrfy_mvdma_sink_list_ptr_get", "p_reg"]], "nrfy_mvdma_sink_list_ptr_set": [[88, 3, 1, "c.nrfy_mvdma_sink_list_ptr_set", "p_job"], [88, 3, 1, "c.nrfy_mvdma_sink_list_ptr_set", "p_reg"]], "nrfy_mvdma_source_error_get": [[88, 3, 1, "c.nrfy_mvdma_source_error_get", "p_reg"]], "nrfy_mvdma_source_job_count_get": [[88, 3, 1, "c.nrfy_mvdma_source_job_count_get", "p_reg"]], "nrfy_mvdma_source_job_description_get": [[88, 3, 1, "c.nrfy_mvdma_source_job_description_get", "p_job_list_desc"], [88, 3, 1, "c.nrfy_mvdma_source_job_description_get", "p_reg"]], "nrfy_mvdma_source_list_ptr_get": [[88, 3, 1, "c.nrfy_mvdma_source_list_ptr_get", "p_reg"]], "nrfy_mvdma_source_list_ptr_set": [[88, 3, 1, "c.nrfy_mvdma_source_list_ptr_set", "p_job"], [88, 3, 1, "c.nrfy_mvdma_source_list_ptr_set", "p_reg"]], "nrfy_mvdma_start": [[88, 3, 1, "c.nrfy_mvdma_start", "p_list_request"], [88, 3, 1, "c.nrfy_mvdma_start", "p_reg"]], "nrfy_mvdma_start_task_get": [[88, 3, 1, "c.nrfy_mvdma_start_task_get", "index"], [88, 3, 1, "c.nrfy_mvdma_start_task_get", "p_reg"]], "nrfy_mvdma_subscribe_clear": [[88, 3, 1, "c.nrfy_mvdma_subscribe_clear", "p_reg"], [88, 3, 1, "c.nrfy_mvdma_subscribe_clear", "task"]], "nrfy_mvdma_subscribe_set": [[88, 3, 1, "c.nrfy_mvdma_subscribe_set", "channel"], [88, 3, 1, "c.nrfy_mvdma_subscribe_set", "p_reg"], [88, 3, 1, "c.nrfy_mvdma_subscribe_set", "task"]], "nrfy_mvdma_task_address_get": [[88, 3, 1, "c.nrfy_mvdma_task_address_get", "p_reg"], [88, 3, 1, "c.nrfy_mvdma_task_address_get", "task"]], "nrfy_mvdma_task_trigger": [[88, 3, 1, "c.nrfy_mvdma_task_trigger", "p_reg"], [88, 3, 1, "c.nrfy_mvdma_task_trigger", "task"]], "nrfy_pdm_abort": [[101, 3, 1, "c.nrfy_pdm_abort", "p_buffer"], [101, 3, 1, "c.nrfy_pdm_abort", "p_reg"]], "nrfy_pdm_buffer_get": [[101, 3, 1, "c.nrfy_pdm_buffer_get", "p_reg"]], "nrfy_pdm_buffer_set": [[101, 3, 1, "c.nrfy_pdm_buffer_set", "p_buffer"], [101, 3, 1, "c.nrfy_pdm_buffer_set", "p_reg"]], "nrfy_pdm_buffer_t": [[101, 6, 1, "c.nrfy_pdm_buffer_t.length", "length"], [101, 6, 1, "c.nrfy_pdm_buffer_t.p_buff", "p_buff"]], "nrfy_pdm_clock_get": [[101, 3, 1, "c.nrfy_pdm_clock_get", "p_reg"]], "nrfy_pdm_clock_set": [[101, 3, 1, "c.nrfy_pdm_clock_set", "p_reg"], [101, 3, 1, "c.nrfy_pdm_clock_set", "pdm_freq"]], "nrfy_pdm_config_t": [[101, 6, 1, "c.nrfy_pdm_config_t.clock_freq", "clock_freq"], [101, 6, 1, "c.nrfy_pdm_config_t.edge", "edge"], [101, 6, 1, "c.nrfy_pdm_config_t.gain_l", "gain_l"], [101, 6, 1, "c.nrfy_pdm_config_t.gain_r", "gain_r"], [101, 6, 1, "c.nrfy_pdm_config_t.mode", "mode"], [101, 6, 1, "c.nrfy_pdm_config_t.pins", "pins"], [101, 6, 1, "c.nrfy_pdm_config_t.skip_psel_cfg", "skip_psel_cfg"]], "nrfy_pdm_disable": [[101, 3, 1, "c.nrfy_pdm_disable", "p_reg"]], "nrfy_pdm_enable": [[101, 3, 1, "c.nrfy_pdm_enable", "p_reg"]], "nrfy_pdm_enable_check": [[101, 3, 1, "c.nrfy_pdm_enable_check", "p_reg"]], "nrfy_pdm_event_address_get": [[101, 3, 1, "c.nrfy_pdm_event_address_get", "event"], [101, 3, 1, "c.nrfy_pdm_event_address_get", "p_reg"]], "nrfy_pdm_event_check": [[101, 3, 1, "c.nrfy_pdm_event_check", "event"], [101, 3, 1, "c.nrfy_pdm_event_check", "p_reg"]], "nrfy_pdm_event_clear": [[101, 3, 1, "c.nrfy_pdm_event_clear", "event"], [101, 3, 1, "c.nrfy_pdm_event_clear", "p_reg"]], "nrfy_pdm_events_process": [[101, 3, 1, "c.nrfy_pdm_events_process", "mask"], [101, 3, 1, "c.nrfy_pdm_events_process", "p_buffer"], [101, 3, 1, "c.nrfy_pdm_events_process", "p_reg"]], "nrfy_pdm_gain_get": [[101, 3, 1, "c.nrfy_pdm_gain_get", "p_gain_l"], [101, 3, 1, "c.nrfy_pdm_gain_get", "p_gain_r"], [101, 3, 1, "c.nrfy_pdm_gain_get", "p_reg"]], "nrfy_pdm_gain_set": [[101, 3, 1, "c.nrfy_pdm_gain_set", "gain_l"], [101, 3, 1, "c.nrfy_pdm_gain_set", "gain_r"], [101, 3, 1, "c.nrfy_pdm_gain_set", "p_reg"]], "nrfy_pdm_int_disable": [[101, 3, 1, "c.nrfy_pdm_int_disable", "mask"], [101, 3, 1, "c.nrfy_pdm_int_disable", "p_reg"]], "nrfy_pdm_int_enable": [[101, 3, 1, "c.nrfy_pdm_int_enable", "mask"], [101, 3, 1, "c.nrfy_pdm_int_enable", "p_reg"]], "nrfy_pdm_int_enable_check": [[101, 3, 1, "c.nrfy_pdm_int_enable_check", "mask"], [101, 3, 1, "c.nrfy_pdm_int_enable_check", "p_reg"]], "nrfy_pdm_int_init": [[101, 3, 1, "c.nrfy_pdm_int_init", "enable"], [101, 3, 1, "c.nrfy_pdm_int_init", "irq_priority"], [101, 3, 1, "c.nrfy_pdm_int_init", "mask"], [101, 3, 1, "c.nrfy_pdm_int_init", "p_reg"]], "nrfy_pdm_int_uninit": [[101, 3, 1, "c.nrfy_pdm_int_uninit", "p_reg"]], "nrfy_pdm_mode_get": [[101, 3, 1, "c.nrfy_pdm_mode_get", "p_pdm_edge"], [101, 3, 1, "c.nrfy_pdm_mode_get", "p_pdm_mode"], [101, 3, 1, "c.nrfy_pdm_mode_get", "p_reg"]], "nrfy_pdm_mode_set": [[101, 3, 1, "c.nrfy_pdm_mode_set", "p_reg"], [101, 3, 1, "c.nrfy_pdm_mode_set", "pdm_edge"], [101, 3, 1, "c.nrfy_pdm_mode_set", "pdm_mode"]], "nrfy_pdm_periph_configure": [[101, 3, 1, "c.nrfy_pdm_periph_configure", "p_config"], [101, 3, 1, "c.nrfy_pdm_periph_configure", "p_reg"]], "nrfy_pdm_pin_disconnect": [[101, 3, 1, "c.nrfy_pdm_pin_disconnect", "p_reg"]], "nrfy_pdm_pins_get": [[101, 3, 1, "c.nrfy_pdm_pins_get", "p_pins"], [101, 3, 1, "c.nrfy_pdm_pins_get", "p_reg"]], "nrfy_pdm_pins_set": [[101, 3, 1, "c.nrfy_pdm_pins_set", "p_pins"], [101, 3, 1, "c.nrfy_pdm_pins_set", "p_reg"]], "nrfy_pdm_pins_t": [[101, 6, 1, "c.nrfy_pdm_pins_t.clk_pin", "clk_pin"], [101, 6, 1, "c.nrfy_pdm_pins_t.din_pin", "din_pin"]], "nrfy_pdm_publish_clear": [[101, 3, 1, "c.nrfy_pdm_publish_clear", "event"], [101, 3, 1, "c.nrfy_pdm_publish_clear", "p_reg"]], "nrfy_pdm_publish_set": [[101, 3, 1, "c.nrfy_pdm_publish_set", "channel"], [101, 3, 1, "c.nrfy_pdm_publish_set", "event"], [101, 3, 1, "c.nrfy_pdm_publish_set", "p_reg"]], "nrfy_pdm_start": [[101, 3, 1, "c.nrfy_pdm_start", "p_buffer"], [101, 3, 1, "c.nrfy_pdm_start", "p_reg"]], "nrfy_pdm_subscribe_clear": [[101, 3, 1, "c.nrfy_pdm_subscribe_clear", "p_reg"], [101, 3, 1, "c.nrfy_pdm_subscribe_clear", "task"]], "nrfy_pdm_subscribe_set": [[101, 3, 1, "c.nrfy_pdm_subscribe_set", "channel"], [101, 3, 1, "c.nrfy_pdm_subscribe_set", "p_reg"], [101, 3, 1, "c.nrfy_pdm_subscribe_set", "task"]], "nrfy_pdm_task_address_get": [[101, 3, 1, "c.nrfy_pdm_task_address_get", "p_reg"], [101, 3, 1, "c.nrfy_pdm_task_address_get", "task"]], "nrfy_pdm_task_trigger": [[101, 3, 1, "c.nrfy_pdm_task_trigger", "p_reg"], [101, 3, 1, "c.nrfy_pdm_task_trigger", "task"]], "nrfy_pwm_abort": [[113, 3, 1, "c.nrfy_pwm_abort", "p_reg"], [113, 3, 1, "c.nrfy_pwm_abort", "wait"]], "nrfy_pwm_config_t": [[113, 6, 1, "c.nrfy_pwm_config_t.base_clock", "base_clock"], [113, 6, 1, "c.nrfy_pwm_config_t.count_mode", "count_mode"], [113, 6, 1, "c.nrfy_pwm_config_t.load_mode", "load_mode"], [113, 6, 1, "c.nrfy_pwm_config_t.output_pins", "output_pins"], [113, 6, 1, "c.nrfy_pwm_config_t.skip_psel_cfg", "skip_psel_cfg"], [113, 6, 1, "c.nrfy_pwm_config_t.step_mode", "step_mode"], [113, 6, 1, "c.nrfy_pwm_config_t.top_value", "top_value"]], "nrfy_pwm_configure": [[113, 3, 1, "c.nrfy_pwm_configure", "base_clock"], [113, 3, 1, "c.nrfy_pwm_configure", "mode"], [113, 3, 1, "c.nrfy_pwm_configure", "p_reg"], [113, 3, 1, "c.nrfy_pwm_configure", "top_value"]], "nrfy_pwm_decoder_set": [[113, 3, 1, "c.nrfy_pwm_decoder_set", "dec_load"], [113, 3, 1, "c.nrfy_pwm_decoder_set", "dec_step"], [113, 3, 1, "c.nrfy_pwm_decoder_set", "p_reg"]], "nrfy_pwm_disable": [[113, 3, 1, "c.nrfy_pwm_disable", "p_reg"]], "nrfy_pwm_enable": [[113, 3, 1, "c.nrfy_pwm_enable", "p_reg"]], "nrfy_pwm_enable_check": [[113, 3, 1, "c.nrfy_pwm_enable_check", "p_reg"]], "nrfy_pwm_event_address_get": [[113, 3, 1, "c.nrfy_pwm_event_address_get", "event"], [113, 3, 1, "c.nrfy_pwm_event_address_get", "p_reg"]], "nrfy_pwm_event_check": [[113, 3, 1, "c.nrfy_pwm_event_check", "event"], [113, 3, 1, "c.nrfy_pwm_event_check", "p_reg"]], "nrfy_pwm_event_clear": [[113, 3, 1, "c.nrfy_pwm_event_clear", "event"], [113, 3, 1, "c.nrfy_pwm_event_clear", "p_reg"]], "nrfy_pwm_events_process": [[113, 3, 1, "c.nrfy_pwm_events_process", "mask"], [113, 3, 1, "c.nrfy_pwm_events_process", "p_reg"]], "nrfy_pwm_int_disable": [[113, 3, 1, "c.nrfy_pwm_int_disable", "mask"], [113, 3, 1, "c.nrfy_pwm_int_disable", "p_reg"]], "nrfy_pwm_int_enable": [[113, 3, 1, "c.nrfy_pwm_int_enable", "mask"], [113, 3, 1, "c.nrfy_pwm_int_enable", "p_reg"]], "nrfy_pwm_int_enable_check": [[113, 3, 1, "c.nrfy_pwm_int_enable_check", "mask"], [113, 3, 1, "c.nrfy_pwm_int_enable_check", "p_reg"]], "nrfy_pwm_int_init": [[113, 3, 1, "c.nrfy_pwm_int_init", "enable"], [113, 3, 1, "c.nrfy_pwm_int_init", "irq_priority"], [113, 3, 1, "c.nrfy_pwm_int_init", "mask"], [113, 3, 1, "c.nrfy_pwm_int_init", "p_reg"]], "nrfy_pwm_int_set": [[113, 3, 1, "c.nrfy_pwm_int_set", "mask"], [113, 3, 1, "c.nrfy_pwm_int_set", "p_reg"]], "nrfy_pwm_int_uninit": [[113, 3, 1, "c.nrfy_pwm_int_uninit", "p_reg"]], "nrfy_pwm_loop_set": [[113, 3, 1, "c.nrfy_pwm_loop_set", "loop_count"], [113, 3, 1, "c.nrfy_pwm_loop_set", "p_reg"]], "nrfy_pwm_periph_configure": [[113, 3, 1, "c.nrfy_pwm_periph_configure", "p_config"], [113, 3, 1, "c.nrfy_pwm_periph_configure", "p_reg"]], "nrfy_pwm_pin_get": [[113, 3, 1, "c.nrfy_pwm_pin_get", "channel"], [113, 3, 1, "c.nrfy_pwm_pin_get", "p_reg"]], "nrfy_pwm_pins_set": [[113, 3, 1, "c.nrfy_pwm_pins_set", "out_pins"], [113, 3, 1, "c.nrfy_pwm_pins_set", "p_reg"]], "nrfy_pwm_publish_clear": [[113, 3, 1, "c.nrfy_pwm_publish_clear", "event"], [113, 3, 1, "c.nrfy_pwm_publish_clear", "p_reg"]], "nrfy_pwm_publish_set": [[113, 3, 1, "c.nrfy_pwm_publish_set", "channel"], [113, 3, 1, "c.nrfy_pwm_publish_set", "event"], [113, 3, 1, "c.nrfy_pwm_publish_set", "p_reg"]], "nrfy_pwm_seqend_event_get": [[113, 3, 1, "c.nrfy_pwm_seqend_event_get", "seq_id"]], "nrfy_pwm_seqstart_task_get": [[113, 3, 1, "c.nrfy_pwm_seqstart_task_get", "seq_id"]], "nrfy_pwm_sequence_set": [[113, 3, 1, "c.nrfy_pwm_sequence_set", "p_reg"], [113, 3, 1, "c.nrfy_pwm_sequence_set", "p_seq"], [113, 3, 1, "c.nrfy_pwm_sequence_set", "seq_id"]], "nrfy_pwm_shorts_disable": [[113, 3, 1, "c.nrfy_pwm_shorts_disable", "mask"], [113, 3, 1, "c.nrfy_pwm_shorts_disable", "p_reg"]], "nrfy_pwm_shorts_enable": [[113, 3, 1, "c.nrfy_pwm_shorts_enable", "mask"], [113, 3, 1, "c.nrfy_pwm_shorts_enable", "p_reg"]], "nrfy_pwm_shorts_set": [[113, 3, 1, "c.nrfy_pwm_shorts_set", "mask"], [113, 3, 1, "c.nrfy_pwm_shorts_set", "p_reg"]], "nrfy_pwm_start": [[113, 3, 1, "c.nrfy_pwm_start", "p_reg"], [113, 3, 1, "c.nrfy_pwm_start", "seq_id"], [113, 3, 1, "c.nrfy_pwm_start", "wait"]], "nrfy_pwm_subscribe_clear": [[113, 3, 1, "c.nrfy_pwm_subscribe_clear", "p_reg"], [113, 3, 1, "c.nrfy_pwm_subscribe_clear", "task"]], "nrfy_pwm_subscribe_set": [[113, 3, 1, "c.nrfy_pwm_subscribe_set", "channel"], [113, 3, 1, "c.nrfy_pwm_subscribe_set", "p_reg"], [113, 3, 1, "c.nrfy_pwm_subscribe_set", "task"]], "nrfy_pwm_task_address_get": [[113, 3, 1, "c.nrfy_pwm_task_address_get", "p_reg"], [113, 3, 1, "c.nrfy_pwm_task_address_get", "task"]], "nrfy_pwm_task_trigger": [[113, 3, 1, "c.nrfy_pwm_task_trigger", "p_reg"], [113, 3, 1, "c.nrfy_pwm_task_trigger", "task"]], "nrfy_qdec_a_pin_get": [[117, 3, 1, "c.nrfy_qdec_a_pin_get", "p_reg"]], "nrfy_qdec_acc_get": [[117, 3, 1, "c.nrfy_qdec_acc_get", "p_reg"]], "nrfy_qdec_accdbl_get": [[117, 3, 1, "c.nrfy_qdec_accdbl_get", "p_reg"]], "nrfy_qdec_accdblread_get": [[117, 3, 1, "c.nrfy_qdec_accdblread_get", "p_reg"]], "nrfy_qdec_accread_get": [[117, 3, 1, "c.nrfy_qdec_accread_get", "p_reg"]], "nrfy_qdec_accumulators_read": [[117, 3, 1, "c.nrfy_qdec_accumulators_read", "p_acc"], [117, 3, 1, "c.nrfy_qdec_accumulators_read", "p_accdbl"], [117, 3, 1, "c.nrfy_qdec_accumulators_read", "p_reg"]], "nrfy_qdec_b_pin_get": [[117, 3, 1, "c.nrfy_qdec_b_pin_get", "p_reg"]], "nrfy_qdec_config_t": [[117, 6, 1, "c.nrfy_qdec_config_t.dbfen", "dbfen"], [117, 6, 1, "c.nrfy_qdec_config_t.ledpol", "ledpol"], [117, 6, 1, "c.nrfy_qdec_config_t.ledpre", "ledpre"], [117, 6, 1, "c.nrfy_qdec_config_t.pins", "pins"], [117, 6, 1, "c.nrfy_qdec_config_t.reportper", "reportper"], [117, 6, 1, "c.nrfy_qdec_config_t.sampleper", "sampleper"], [117, 6, 1, "c.nrfy_qdec_config_t.skip_psel_cfg", "skip_psel_cfg"]], "nrfy_qdec_dbfen_disable": [[117, 3, 1, "c.nrfy_qdec_dbfen_disable", "p_reg"]], "nrfy_qdec_dbfen_enable": [[117, 3, 1, "c.nrfy_qdec_dbfen_enable", "p_reg"]], "nrfy_qdec_dbfen_get": [[117, 3, 1, "c.nrfy_qdec_dbfen_get", "p_reg"]], "nrfy_qdec_disable": [[117, 3, 1, "c.nrfy_qdec_disable", "p_reg"]], "nrfy_qdec_enable": [[117, 3, 1, "c.nrfy_qdec_enable", "p_reg"]], "nrfy_qdec_enable_get": [[117, 3, 1, "c.nrfy_qdec_enable_get", "p_reg"]], "nrfy_qdec_event_address_get": [[117, 3, 1, "c.nrfy_qdec_event_address_get", "event"], [117, 3, 1, "c.nrfy_qdec_event_address_get", "p_reg"]], "nrfy_qdec_event_check": [[117, 3, 1, "c.nrfy_qdec_event_check", "event"], [117, 3, 1, "c.nrfy_qdec_event_check", "p_reg"]], "nrfy_qdec_event_clear": [[117, 3, 1, "c.nrfy_qdec_event_clear", "event"], [117, 3, 1, "c.nrfy_qdec_event_clear", "p_reg"]], "nrfy_qdec_events_process": [[117, 3, 1, "c.nrfy_qdec_events_process", "mask"], [117, 3, 1, "c.nrfy_qdec_events_process", "p_reg"]], "nrfy_qdec_int_disable": [[117, 3, 1, "c.nrfy_qdec_int_disable", "mask"], [117, 3, 1, "c.nrfy_qdec_int_disable", "p_reg"]], "nrfy_qdec_int_enable": [[117, 3, 1, "c.nrfy_qdec_int_enable", "mask"], [117, 3, 1, "c.nrfy_qdec_int_enable", "p_reg"]], "nrfy_qdec_int_enable_check": [[117, 3, 1, "c.nrfy_qdec_int_enable_check", "mask"], [117, 3, 1, "c.nrfy_qdec_int_enable_check", "p_reg"]], "nrfy_qdec_int_init": [[117, 3, 1, "c.nrfy_qdec_int_init", "enable"], [117, 3, 1, "c.nrfy_qdec_int_init", "irq_priority"], [117, 3, 1, "c.nrfy_qdec_int_init", "mask"], [117, 3, 1, "c.nrfy_qdec_int_init", "p_reg"]], "nrfy_qdec_int_uninit": [[117, 3, 1, "c.nrfy_qdec_int_uninit", "p_reg"]], "nrfy_qdec_led_pin_get": [[117, 3, 1, "c.nrfy_qdec_led_pin_get", "p_reg"]], "nrfy_qdec_ledpol_get": [[117, 3, 1, "c.nrfy_qdec_ledpol_get", "p_reg"]], "nrfy_qdec_ledpol_set": [[117, 3, 1, "c.nrfy_qdec_ledpol_set", "p_reg"], [117, 3, 1, "c.nrfy_qdec_ledpol_set", "pol"]], "nrfy_qdec_ledpre_get": [[117, 3, 1, "c.nrfy_qdec_ledpre_get", "p_reg"]], "nrfy_qdec_ledpre_set": [[117, 3, 1, "c.nrfy_qdec_ledpre_set", "p_reg"], [117, 3, 1, "c.nrfy_qdec_ledpre_set", "time_us"]], "nrfy_qdec_periph_configure": [[117, 3, 1, "c.nrfy_qdec_periph_configure", "p_config"], [117, 3, 1, "c.nrfy_qdec_periph_configure", "p_reg"]], "nrfy_qdec_pins_get": [[117, 3, 1, "c.nrfy_qdec_pins_get", "p_pins"], [117, 3, 1, "c.nrfy_qdec_pins_get", "p_reg"]], "nrfy_qdec_pins_set": [[117, 3, 1, "c.nrfy_qdec_pins_set", "p_pins"], [117, 3, 1, "c.nrfy_qdec_pins_set", "p_reg"]], "nrfy_qdec_pins_t": [[117, 6, 1, "c.nrfy_qdec_pins_t.a_pin", "a_pin"], [117, 6, 1, "c.nrfy_qdec_pins_t.b_pin", "b_pin"], [117, 6, 1, "c.nrfy_qdec_pins_t.led_pin", "led_pin"]], "nrfy_qdec_reportper_get": [[117, 3, 1, "c.nrfy_qdec_reportper_get", "p_reg"]], "nrfy_qdec_reportper_set": [[117, 3, 1, "c.nrfy_qdec_reportper_set", "p_reg"], [117, 3, 1, "c.nrfy_qdec_reportper_set", "reportper"]], "nrfy_qdec_reportper_to_value": [[117, 3, 1, "c.nrfy_qdec_reportper_to_value", "reportper"]], "nrfy_qdec_sample_get": [[117, 3, 1, "c.nrfy_qdec_sample_get", "p_reg"]], "nrfy_qdec_sampleper_get": [[117, 3, 1, "c.nrfy_qdec_sampleper_get", "p_reg"]], "nrfy_qdec_sampleper_set": [[117, 3, 1, "c.nrfy_qdec_sampleper_set", "p_reg"], [117, 3, 1, "c.nrfy_qdec_sampleper_set", "sampleper"]], "nrfy_qdec_sampleper_to_value": [[117, 3, 1, "c.nrfy_qdec_sampleper_to_value", "sampleper"]], "nrfy_qdec_shorts_disable": [[117, 3, 1, "c.nrfy_qdec_shorts_disable", "mask"], [117, 3, 1, "c.nrfy_qdec_shorts_disable", "p_reg"]], "nrfy_qdec_shorts_enable": [[117, 3, 1, "c.nrfy_qdec_shorts_enable", "mask"], [117, 3, 1, "c.nrfy_qdec_shorts_enable", "p_reg"]], "nrfy_qdec_task_address_get": [[117, 3, 1, "c.nrfy_qdec_task_address_get", "p_reg"], [117, 3, 1, "c.nrfy_qdec_task_address_get", "task"]], "nrfy_qdec_task_trigger": [[117, 3, 1, "c.nrfy_qdec_task_trigger", "p_reg"], [117, 3, 1, "c.nrfy_qdec_task_trigger", "task"]], "nrfy_rramc_buffer_read": [[135, 3, 1, "c.nrfy_rramc_buffer_read", "address"], [135, 3, 1, "c.nrfy_rramc_buffer_read", "dst"], [135, 3, 1, "c.nrfy_rramc_buffer_read", "num_bytes"]], "nrfy_rramc_byte_read": [[135, 3, 1, "c.nrfy_rramc_byte_read", "address"]], "nrfy_rramc_byte_write": [[135, 3, 1, "c.nrfy_rramc_byte_write", "address"], [135, 3, 1, "c.nrfy_rramc_byte_write", "p_reg"], [135, 3, 1, "c.nrfy_rramc_byte_write", "value"]], "nrfy_rramc_bytes_write": [[135, 3, 1, "c.nrfy_rramc_bytes_write", "address"], [135, 3, 1, "c.nrfy_rramc_bytes_write", "num_bytes"], [135, 3, 1, "c.nrfy_rramc_bytes_write", "p_reg"], [135, 3, 1, "c.nrfy_rramc_bytes_write", "src"]], "nrfy_rramc_config_get": [[135, 3, 1, "c.nrfy_rramc_config_get", "p_config"], [135, 3, 1, "c.nrfy_rramc_config_get", "p_reg"]], "nrfy_rramc_config_set": [[135, 3, 1, "c.nrfy_rramc_config_set", "p_config"], [135, 3, 1, "c.nrfy_rramc_config_set", "p_reg"]], "nrfy_rramc_config_t": [[135, 6, 1, "c.nrfy_rramc_config_t.config", "config"], [135, 6, 1, "c.nrfy_rramc_config_t.power", "power"], [135, 6, 1, "c.nrfy_rramc_config_t.preload_timeout", "preload_timeout"]], "nrfy_rramc_configure": [[135, 3, 1, "c.nrfy_rramc_configure", "p_config"], [135, 3, 1, "c.nrfy_rramc_configure", "p_reg"]], "nrfy_rramc_empty_buffer_check": [[135, 3, 1, "c.nrfy_rramc_empty_buffer_check", "p_reg"]], "nrfy_rramc_erase_all_check": [[135, 3, 1, "c.nrfy_rramc_erase_all_check", "p_reg"]], "nrfy_rramc_erase_all_set": [[135, 3, 1, "c.nrfy_rramc_erase_all_set", "p_reg"]], "nrfy_rramc_error_access_addr_get": [[135, 3, 1, "c.nrfy_rramc_error_access_addr_get", "p_reg"]], "nrfy_rramc_event_address_get": [[135, 3, 1, "c.nrfy_rramc_event_address_get", "event"], [135, 3, 1, "c.nrfy_rramc_event_address_get", "p_reg"]], "nrfy_rramc_event_check": [[135, 3, 1, "c.nrfy_rramc_event_check", "event"], [135, 3, 1, "c.nrfy_rramc_event_check", "p_reg"]], "nrfy_rramc_event_clear": [[135, 3, 1, "c.nrfy_rramc_event_clear", "event"], [135, 3, 1, "c.nrfy_rramc_event_clear", "p_reg"]], "nrfy_rramc_events_process": [[135, 3, 1, "c.nrfy_rramc_events_process", "mask"], [135, 3, 1, "c.nrfy_rramc_events_process", "p_reg"]], "nrfy_rramc_int_disable": [[135, 3, 1, "c.nrfy_rramc_int_disable", "mask"], [135, 3, 1, "c.nrfy_rramc_int_disable", "p_reg"]], "nrfy_rramc_int_enable": [[135, 3, 1, "c.nrfy_rramc_int_enable", "mask"], [135, 3, 1, "c.nrfy_rramc_int_enable", "p_reg"]], "nrfy_rramc_int_enable_check": [[135, 3, 1, "c.nrfy_rramc_int_enable_check", "mask"], [135, 3, 1, "c.nrfy_rramc_int_enable_check", "p_reg"]], "nrfy_rramc_int_init": [[135, 3, 1, "c.nrfy_rramc_int_init", "enable"], [135, 3, 1, "c.nrfy_rramc_int_init", "irq_priority"], [135, 3, 1, "c.nrfy_rramc_int_init", "mask"], [135, 3, 1, "c.nrfy_rramc_int_init", "p_reg"]], "nrfy_rramc_int_uninit": [[135, 3, 1, "c.nrfy_rramc_int_uninit", "p_reg"]], "nrfy_rramc_otp_word_read": [[135, 3, 1, "c.nrfy_rramc_otp_word_read", "index"]], "nrfy_rramc_otp_word_write": [[135, 3, 1, "c.nrfy_rramc_otp_word_write", "index"], [135, 3, 1, "c.nrfy_rramc_otp_word_write", "p_reg"], [135, 3, 1, "c.nrfy_rramc_otp_word_write", "value"]], "nrfy_rramc_power_config_get": [[135, 3, 1, "c.nrfy_rramc_power_config_get", "p_config"], [135, 3, 1, "c.nrfy_rramc_power_config_get", "p_reg"]], "nrfy_rramc_power_config_set": [[135, 3, 1, "c.nrfy_rramc_power_config_set", "p_config"], [135, 3, 1, "c.nrfy_rramc_power_config_set", "p_reg"]], "nrfy_rramc_publish_clear": [[135, 3, 1, "c.nrfy_rramc_publish_clear", "event"], [135, 3, 1, "c.nrfy_rramc_publish_clear", "p_reg"]], "nrfy_rramc_publish_set": [[135, 3, 1, "c.nrfy_rramc_publish_set", "channel"], [135, 3, 1, "c.nrfy_rramc_publish_set", "event"], [135, 3, 1, "c.nrfy_rramc_publish_set", "p_reg"]], "nrfy_rramc_ready_check": [[135, 3, 1, "c.nrfy_rramc_ready_check", "p_reg"]], "nrfy_rramc_ready_next_timeout_get": [[135, 3, 1, "c.nrfy_rramc_ready_next_timeout_get", "p_config"], [135, 3, 1, "c.nrfy_rramc_ready_next_timeout_get", "p_reg"]], "nrfy_rramc_ready_next_timeout_set": [[135, 3, 1, "c.nrfy_rramc_ready_next_timeout_set", "p_config"], [135, 3, 1, "c.nrfy_rramc_ready_next_timeout_set", "p_reg"]], "nrfy_rramc_subscribe_clear": [[135, 3, 1, "c.nrfy_rramc_subscribe_clear", "p_reg"], [135, 3, 1, "c.nrfy_rramc_subscribe_clear", "task"]], "nrfy_rramc_subscribe_set": [[135, 3, 1, "c.nrfy_rramc_subscribe_set", "channel"], [135, 3, 1, "c.nrfy_rramc_subscribe_set", "p_reg"], [135, 3, 1, "c.nrfy_rramc_subscribe_set", "task"]], "nrfy_rramc_task_address_get": [[135, 3, 1, "c.nrfy_rramc_task_address_get", "p_reg"], [135, 3, 1, "c.nrfy_rramc_task_address_get", "task"]], "nrfy_rramc_task_trigger": [[135, 3, 1, "c.nrfy_rramc_task_trigger", "p_reg"], [135, 3, 1, "c.nrfy_rramc_task_trigger", "task"]], "nrfy_rramc_word_read": [[135, 3, 1, "c.nrfy_rramc_word_read", "address"]], "nrfy_rramc_word_write": [[135, 3, 1, "c.nrfy_rramc_word_write", "address"], [135, 3, 1, "c.nrfy_rramc_word_write", "p_reg"], [135, 3, 1, "c.nrfy_rramc_word_write", "value"]], "nrfy_rramc_words_write": [[135, 3, 1, "c.nrfy_rramc_words_write", "address"], [135, 3, 1, "c.nrfy_rramc_words_write", "num_words"], [135, 3, 1, "c.nrfy_rramc_words_write", "p_reg"], [135, 3, 1, "c.nrfy_rramc_words_write", "src"]], "nrfy_rramc_write_ready_check": [[135, 3, 1, "c.nrfy_rramc_write_ready_check", "p_reg"]], "nrfy_rtc_capture_task_get": [[139, 3, 1, "c.nrfy_rtc_capture_task_get", "index"]], "nrfy_rtc_cc_get": [[139, 3, 1, "c.nrfy_rtc_cc_get", "ch"], [139, 3, 1, "c.nrfy_rtc_cc_get", "p_reg"]], "nrfy_rtc_cc_set": [[139, 3, 1, "c.nrfy_rtc_cc_set", "cc_val"], [139, 3, 1, "c.nrfy_rtc_cc_set", "ch"], [139, 3, 1, "c.nrfy_rtc_cc_set", "p_reg"]], "nrfy_rtc_compare_event_get": [[139, 3, 1, "c.nrfy_rtc_compare_event_get", "index"]], "nrfy_rtc_config_t": [[139, 6, 1, "c.nrfy_rtc_config_t.prescaler", "prescaler"]], "nrfy_rtc_counter_get": [[139, 3, 1, "c.nrfy_rtc_counter_get", "p_reg"]], "nrfy_rtc_event_address_get": [[139, 3, 1, "c.nrfy_rtc_event_address_get", "event"], [139, 3, 1, "c.nrfy_rtc_event_address_get", "p_reg"]], "nrfy_rtc_event_check": [[139, 3, 1, "c.nrfy_rtc_event_check", "event"], [139, 3, 1, "c.nrfy_rtc_event_check", "p_reg"]], "nrfy_rtc_event_clear": [[139, 3, 1, "c.nrfy_rtc_event_clear", "event"], [139, 3, 1, "c.nrfy_rtc_event_clear", "p_reg"]], "nrfy_rtc_event_disable": [[139, 3, 1, "c.nrfy_rtc_event_disable", "mask"], [139, 3, 1, "c.nrfy_rtc_event_disable", "p_reg"]], "nrfy_rtc_event_enable": [[139, 3, 1, "c.nrfy_rtc_event_enable", "mask"], [139, 3, 1, "c.nrfy_rtc_event_enable", "p_reg"]], "nrfy_rtc_event_int_clear_enable": [[139, 3, 1, "c.nrfy_rtc_event_int_clear_enable", "enable"], [139, 3, 1, "c.nrfy_rtc_event_int_clear_enable", "event"], [139, 3, 1, "c.nrfy_rtc_event_int_clear_enable", "p_reg"]], "nrfy_rtc_event_int_disable": [[139, 3, 1, "c.nrfy_rtc_event_int_disable", "mask"], [139, 3, 1, "c.nrfy_rtc_event_int_disable", "p_reg"]], "nrfy_rtc_events_process": [[139, 3, 1, "c.nrfy_rtc_events_process", "mask"], [139, 3, 1, "c.nrfy_rtc_events_process", "p_reg"]], "nrfy_rtc_int_disable": [[139, 3, 1, "c.nrfy_rtc_int_disable", "mask"], [139, 3, 1, "c.nrfy_rtc_int_disable", "p_reg"]], "nrfy_rtc_int_enable": [[139, 3, 1, "c.nrfy_rtc_int_enable", "mask"], [139, 3, 1, "c.nrfy_rtc_int_enable", "p_reg"]], "nrfy_rtc_int_enable_check": [[139, 3, 1, "c.nrfy_rtc_int_enable_check", "mask"], [139, 3, 1, "c.nrfy_rtc_int_enable_check", "p_reg"]], "nrfy_rtc_int_init": [[139, 3, 1, "c.nrfy_rtc_int_init", "enable"], [139, 3, 1, "c.nrfy_rtc_int_init", "irq_priority"], [139, 3, 1, "c.nrfy_rtc_int_init", "mask"], [139, 3, 1, "c.nrfy_rtc_int_init", "p_reg"]], "nrfy_rtc_int_uninit": [[139, 3, 1, "c.nrfy_rtc_int_uninit", "p_reg"]], "nrfy_rtc_periph_configure": [[139, 3, 1, "c.nrfy_rtc_periph_configure", "p_config"], [139, 3, 1, "c.nrfy_rtc_periph_configure", "p_reg"]], "nrfy_rtc_prescaler_get": [[139, 3, 1, "c.nrfy_rtc_prescaler_get", "p_reg"]], "nrfy_rtc_prescaler_set": [[139, 3, 1, "c.nrfy_rtc_prescaler_set", "p_reg"], [139, 3, 1, "c.nrfy_rtc_prescaler_set", "val"]], "nrfy_rtc_publish_clear": [[139, 3, 1, "c.nrfy_rtc_publish_clear", "event"], [139, 3, 1, "c.nrfy_rtc_publish_clear", "p_reg"]], "nrfy_rtc_publish_set": [[139, 3, 1, "c.nrfy_rtc_publish_set", "channel"], [139, 3, 1, "c.nrfy_rtc_publish_set", "event"], [139, 3, 1, "c.nrfy_rtc_publish_set", "p_reg"]], "nrfy_rtc_stop": [[139, 3, 1, "c.nrfy_rtc_stop", "mask"], [139, 3, 1, "c.nrfy_rtc_stop", "p_reg"]], "nrfy_rtc_subscribe_clear": [[139, 3, 1, "c.nrfy_rtc_subscribe_clear", "p_reg"], [139, 3, 1, "c.nrfy_rtc_subscribe_clear", "task"]], "nrfy_rtc_subscribe_set": [[139, 3, 1, "c.nrfy_rtc_subscribe_set", "channel"], [139, 3, 1, "c.nrfy_rtc_subscribe_set", "p_reg"], [139, 3, 1, "c.nrfy_rtc_subscribe_set", "task"]], "nrfy_rtc_task_address_get": [[139, 3, 1, "c.nrfy_rtc_task_address_get", "p_reg"], [139, 3, 1, "c.nrfy_rtc_task_address_get", "task"]], "nrfy_rtc_task_trigger": [[139, 3, 1, "c.nrfy_rtc_task_trigger", "p_reg"], [139, 3, 1, "c.nrfy_rtc_task_trigger", "task"]], "nrfy_saadc_abort": [[143, 3, 1, "c.nrfy_saadc_abort", "p_desc"], [143, 3, 1, "c.nrfy_saadc_abort", "p_reg"]], "nrfy_saadc_amount_get": [[143, 3, 1, "c.nrfy_saadc_amount_get", "p_reg"]], "nrfy_saadc_buffer_init": [[143, 3, 1, "c.nrfy_saadc_buffer_init", "p_buffer"], [143, 3, 1, "c.nrfy_saadc_buffer_init", "p_reg"], [143, 3, 1, "c.nrfy_saadc_buffer_init", "size"]], "nrfy_saadc_buffer_latch": [[143, 3, 1, "c.nrfy_saadc_buffer_latch", "p_reg"], [143, 3, 1, "c.nrfy_saadc_buffer_latch", "wait"]], "nrfy_saadc_buffer_pointer_get": [[143, 3, 1, "c.nrfy_saadc_buffer_pointer_get", "p_reg"]], "nrfy_saadc_buffer_pointer_set": [[143, 3, 1, "c.nrfy_saadc_buffer_pointer_set", "p_buffer"], [143, 3, 1, "c.nrfy_saadc_buffer_pointer_set", "p_reg"]], "nrfy_saadc_buffer_set": [[143, 3, 1, "c.nrfy_saadc_buffer_set", "latch"], [143, 3, 1, "c.nrfy_saadc_buffer_set", "p_desc"], [143, 3, 1, "c.nrfy_saadc_buffer_set", "p_reg"], [143, 3, 1, "c.nrfy_saadc_buffer_set", "wait"]], "nrfy_saadc_buffer_t": [[143, 6, 1, "c.nrfy_saadc_buffer_t.length", "length"], [143, 6, 1, "c.nrfy_saadc_buffer_t.p_buffer", "p_buffer"]], "nrfy_saadc_burst_set": [[143, 3, 1, "c.nrfy_saadc_burst_set", "burst"], [143, 3, 1, "c.nrfy_saadc_burst_set", "channel"], [143, 3, 1, "c.nrfy_saadc_burst_set", "p_reg"]], "nrfy_saadc_busy_check": [[143, 3, 1, "c.nrfy_saadc_busy_check", "p_reg"]], "nrfy_saadc_calibrate": [[143, 3, 1, "c.nrfy_saadc_calibrate", "p_reg"], [143, 3, 1, "c.nrfy_saadc_calibrate", "wait"]], "nrfy_saadc_channel_configure": [[143, 3, 1, "c.nrfy_saadc_channel_configure", "channel"], [143, 3, 1, "c.nrfy_saadc_channel_configure", "p_config"], [143, 3, 1, "c.nrfy_saadc_channel_configure", "p_input"], [143, 3, 1, "c.nrfy_saadc_channel_configure", "p_reg"]], "nrfy_saadc_channel_init": [[143, 3, 1, "c.nrfy_saadc_channel_init", "channel"], [143, 3, 1, "c.nrfy_saadc_channel_init", "config"], [143, 3, 1, "c.nrfy_saadc_channel_init", "p_reg"]], "nrfy_saadc_channel_input_set": [[143, 3, 1, "c.nrfy_saadc_channel_input_set", "channel"], [143, 3, 1, "c.nrfy_saadc_channel_input_set", "p_reg"], [143, 3, 1, "c.nrfy_saadc_channel_input_set", "pseln"], [143, 3, 1, "c.nrfy_saadc_channel_input_set", "pselp"]], "nrfy_saadc_channel_input_t": [[143, 6, 1, "c.nrfy_saadc_channel_input_t.input_n", "input_n"], [143, 6, 1, "c.nrfy_saadc_channel_input_t.input_p", "input_p"]], "nrfy_saadc_channel_limits_set": [[143, 3, 1, "c.nrfy_saadc_channel_limits_set", "channel"], [143, 3, 1, "c.nrfy_saadc_channel_limits_set", "high"], [143, 3, 1, "c.nrfy_saadc_channel_limits_set", "low"], [143, 3, 1, "c.nrfy_saadc_channel_limits_set", "p_reg"]], "nrfy_saadc_channel_pos_input_set": [[143, 3, 1, "c.nrfy_saadc_channel_pos_input_set", "channel"], [143, 3, 1, "c.nrfy_saadc_channel_pos_input_set", "p_reg"], [143, 3, 1, "c.nrfy_saadc_channel_pos_input_set", "pselp"]], "nrfy_saadc_config_t": [[143, 6, 1, "c.nrfy_saadc_config_t.oversampling", "oversampling"], [143, 6, 1, "c.nrfy_saadc_config_t.resolution", "resolution"]], "nrfy_saadc_continuous_mode_disable": [[143, 3, 1, "c.nrfy_saadc_continuous_mode_disable", "p_reg"]], "nrfy_saadc_continuous_mode_enable": [[143, 3, 1, "c.nrfy_saadc_continuous_mode_enable", "cc"], [143, 3, 1, "c.nrfy_saadc_continuous_mode_enable", "p_reg"]], "nrfy_saadc_continuous_mode_enable_check": [[143, 3, 1, "c.nrfy_saadc_continuous_mode_enable_check", "p_reg"]], "nrfy_saadc_disable": [[143, 3, 1, "c.nrfy_saadc_disable", "p_reg"]], "nrfy_saadc_enable": [[143, 3, 1, "c.nrfy_saadc_enable", "p_reg"]], "nrfy_saadc_enable_check": [[143, 3, 1, "c.nrfy_saadc_enable_check", "p_reg"]], "nrfy_saadc_event_address_get": [[143, 3, 1, "c.nrfy_saadc_event_address_get", "event"], [143, 3, 1, "c.nrfy_saadc_event_address_get", "p_reg"]], "nrfy_saadc_event_check": [[143, 3, 1, "c.nrfy_saadc_event_check", "event"], [143, 3, 1, "c.nrfy_saadc_event_check", "p_reg"]], "nrfy_saadc_event_clear": [[143, 3, 1, "c.nrfy_saadc_event_clear", "event"], [143, 3, 1, "c.nrfy_saadc_event_clear", "p_reg"]], "nrfy_saadc_events_process": [[143, 3, 1, "c.nrfy_saadc_events_process", "mask"], [143, 3, 1, "c.nrfy_saadc_events_process", "p_desc"], [143, 3, 1, "c.nrfy_saadc_events_process", "p_reg"]], "nrfy_saadc_int_disable": [[143, 3, 1, "c.nrfy_saadc_int_disable", "mask"], [143, 3, 1, "c.nrfy_saadc_int_disable", "p_reg"]], "nrfy_saadc_int_enable": [[143, 3, 1, "c.nrfy_saadc_int_enable", "mask"], [143, 3, 1, "c.nrfy_saadc_int_enable", "p_reg"]], "nrfy_saadc_int_enable_check": [[143, 3, 1, "c.nrfy_saadc_int_enable_check", "mask"], [143, 3, 1, "c.nrfy_saadc_int_enable_check", "p_reg"]], "nrfy_saadc_int_init": [[143, 3, 1, "c.nrfy_saadc_int_init", "enable"], [143, 3, 1, "c.nrfy_saadc_int_init", "irq_priority"], [143, 3, 1, "c.nrfy_saadc_int_init", "mask"], [143, 3, 1, "c.nrfy_saadc_int_init", "p_reg"]], "nrfy_saadc_int_set": [[143, 3, 1, "c.nrfy_saadc_int_set", "mask"], [143, 3, 1, "c.nrfy_saadc_int_set", "p_reg"]], "nrfy_saadc_int_uninit": [[143, 3, 1, "c.nrfy_saadc_int_uninit", "p_reg"]], "nrfy_saadc_limit_event_get": [[143, 3, 1, "c.nrfy_saadc_limit_event_get", "channel"], [143, 3, 1, "c.nrfy_saadc_limit_event_get", "limit_type"]], "nrfy_saadc_limit_int_get": [[143, 3, 1, "c.nrfy_saadc_limit_int_get", "channel"], [143, 3, 1, "c.nrfy_saadc_limit_int_get", "limit_type"]], "nrfy_saadc_oversample_get": [[143, 3, 1, "c.nrfy_saadc_oversample_get", "p_reg"]], "nrfy_saadc_oversample_sample_count_get": [[143, 3, 1, "c.nrfy_saadc_oversample_sample_count_get", "oversample"]], "nrfy_saadc_oversample_set": [[143, 3, 1, "c.nrfy_saadc_oversample_set", "oversample"], [143, 3, 1, "c.nrfy_saadc_oversample_set", "p_reg"]], "nrfy_saadc_periph_configure": [[143, 3, 1, "c.nrfy_saadc_periph_configure", "p_config"], [143, 3, 1, "c.nrfy_saadc_periph_configure", "p_reg"]], "nrfy_saadc_publish_clear": [[143, 3, 1, "c.nrfy_saadc_publish_clear", "event"], [143, 3, 1, "c.nrfy_saadc_publish_clear", "p_reg"]], "nrfy_saadc_publish_set": [[143, 3, 1, "c.nrfy_saadc_publish_set", "channel"], [143, 3, 1, "c.nrfy_saadc_publish_set", "event"], [143, 3, 1, "c.nrfy_saadc_publish_set", "p_reg"]], "nrfy_saadc_resolution_get": [[143, 3, 1, "c.nrfy_saadc_resolution_get", "p_reg"]], "nrfy_saadc_resolution_set": [[143, 3, 1, "c.nrfy_saadc_resolution_set", "p_reg"], [143, 3, 1, "c.nrfy_saadc_resolution_set", "resolution"]], "nrfy_saadc_sample_start": [[143, 3, 1, "c.nrfy_saadc_sample_start", "p_desc"], [143, 3, 1, "c.nrfy_saadc_sample_start", "p_reg"]], "nrfy_saadc_stop": [[143, 3, 1, "c.nrfy_saadc_stop", "p_reg"], [143, 3, 1, "c.nrfy_saadc_stop", "wait"]], "nrfy_saadc_subscribe_clear": [[143, 3, 1, "c.nrfy_saadc_subscribe_clear", "p_reg"], [143, 3, 1, "c.nrfy_saadc_subscribe_clear", "task"]], "nrfy_saadc_subscribe_set": [[143, 3, 1, "c.nrfy_saadc_subscribe_set", "channel"], [143, 3, 1, "c.nrfy_saadc_subscribe_set", "p_reg"], [143, 3, 1, "c.nrfy_saadc_subscribe_set", "task"]], "nrfy_saadc_task_address_get": [[143, 3, 1, "c.nrfy_saadc_task_address_get", "p_reg"], [143, 3, 1, "c.nrfy_saadc_task_address_get", "task"]], "nrfy_saadc_task_trigger": [[143, 3, 1, "c.nrfy_saadc_task_trigger", "p_reg"], [143, 3, 1, "c.nrfy_saadc_task_trigger", "task"]], "nrfy_saadc_value_max_get": [[143, 3, 1, "c.nrfy_saadc_value_max_get", "resolution"]], "nrfy_saadc_value_min_get": [[143, 3, 1, "c.nrfy_saadc_value_min_get", "resolution"]], "nrfy_spim_abort": [[150, 3, 1, "c.nrfy_spim_abort", "p_reg"], [150, 3, 1, "c.nrfy_spim_abort", "p_xfer"]], "nrfy_spim_buffers_set": [[150, 3, 1, "c.nrfy_spim_buffers_set", "p_reg"], [150, 3, 1, "c.nrfy_spim_buffers_set", "p_xfer"]], "nrfy_spim_config_t": [[150, 6, 1, "c.nrfy_spim_config_t.bit_order", "bit_order"], [150, 6, 1, "c.nrfy_spim_config_t.ext_config", "ext_config"], [150, 6, 1, "c.nrfy_spim_config_t.frequency", "frequency"], [150, 6, 1, "c.nrfy_spim_config_t.mode", "mode"], [150, 6, 1, "c.nrfy_spim_config_t.orc", "orc"], [150, 6, 1, "c.nrfy_spim_config_t.pins", "pins"], [150, 6, 1, "c.nrfy_spim_config_t.skip_psel_cfg", "skip_psel_cfg"]], "nrfy_spim_configure": [[150, 3, 1, "c.nrfy_spim_configure", "p_reg"], [150, 3, 1, "c.nrfy_spim_configure", "spi_bit_order"], [150, 3, 1, "c.nrfy_spim_configure", "spi_mode"]], "nrfy_spim_csn_configure": [[150, 3, 1, "c.nrfy_spim_csn_configure", "duration"], [150, 3, 1, "c.nrfy_spim_csn_configure", "p_reg"], [150, 3, 1, "c.nrfy_spim_csn_configure", "pin"], [150, 3, 1, "c.nrfy_spim_csn_configure", "polarity"]], "nrfy_spim_csn_pin_get": [[150, 3, 1, "c.nrfy_spim_csn_pin_get", "p_reg"]], "nrfy_spim_dcx_cnt_set": [[150, 3, 1, "c.nrfy_spim_dcx_cnt_set", "count"], [150, 3, 1, "c.nrfy_spim_dcx_cnt_set", "p_reg"]], "nrfy_spim_dcx_pin_get": [[150, 3, 1, "c.nrfy_spim_dcx_pin_get", "p_reg"]], "nrfy_spim_dcx_pin_set": [[150, 3, 1, "c.nrfy_spim_dcx_pin_set", "dcx_pin"], [150, 3, 1, "c.nrfy_spim_dcx_pin_set", "p_reg"]], "nrfy_spim_disable": [[150, 3, 1, "c.nrfy_spim_disable", "p_reg"]], "nrfy_spim_enable": [[150, 3, 1, "c.nrfy_spim_enable", "p_reg"]], "nrfy_spim_event_address_get": [[150, 3, 1, "c.nrfy_spim_event_address_get", "event"], [150, 3, 1, "c.nrfy_spim_event_address_get", "p_reg"]], "nrfy_spim_event_check": [[150, 3, 1, "c.nrfy_spim_event_check", "event"], [150, 3, 1, "c.nrfy_spim_event_check", "p_reg"]], "nrfy_spim_event_clear": [[150, 3, 1, "c.nrfy_spim_event_clear", "event"], [150, 3, 1, "c.nrfy_spim_event_clear", "p_reg"]], "nrfy_spim_events_process": [[150, 3, 1, "c.nrfy_spim_events_process", "mask"], [150, 3, 1, "c.nrfy_spim_events_process", "p_reg"], [150, 3, 1, "c.nrfy_spim_events_process", "p_xfer"]], "nrfy_spim_ext_config_t": [[150, 6, 1, "c.nrfy_spim_ext_config_t.csn_duration", "csn_duration"], [150, 6, 1, "c.nrfy_spim_ext_config_t.csn_pol", "csn_pol"], [150, 6, 1, "c.nrfy_spim_ext_config_t.pins", "pins"], [150, 6, 1, "c.nrfy_spim_ext_config_t.rx_delay", "rx_delay"]], "nrfy_spim_ext_pins_get": [[150, 3, 1, "c.nrfy_spim_ext_pins_get", "p_pins"], [150, 3, 1, "c.nrfy_spim_ext_pins_get", "p_reg"]], "nrfy_spim_ext_pins_t": [[150, 6, 1, "c.nrfy_spim_ext_pins_t.csn_pin", "csn_pin"], [150, 6, 1, "c.nrfy_spim_ext_pins_t.dcx_pin", "dcx_pin"]], "nrfy_spim_frequency_set": [[150, 3, 1, "c.nrfy_spim_frequency_set", "frequency"], [150, 3, 1, "c.nrfy_spim_frequency_set", "p_reg"]], "nrfy_spim_iftiming_set": [[150, 3, 1, "c.nrfy_spim_iftiming_set", "p_reg"], [150, 3, 1, "c.nrfy_spim_iftiming_set", "rxdelay"]], "nrfy_spim_int_disable": [[150, 3, 1, "c.nrfy_spim_int_disable", "mask"], [150, 3, 1, "c.nrfy_spim_int_disable", "p_reg"]], "nrfy_spim_int_enable": [[150, 3, 1, "c.nrfy_spim_int_enable", "mask"], [150, 3, 1, "c.nrfy_spim_int_enable", "p_reg"]], "nrfy_spim_int_enable_check": [[150, 3, 1, "c.nrfy_spim_int_enable_check", "mask"], [150, 3, 1, "c.nrfy_spim_int_enable_check", "p_reg"]], "nrfy_spim_int_init": [[150, 3, 1, "c.nrfy_spim_int_init", "enable"], [150, 3, 1, "c.nrfy_spim_int_init", "irq_priority"], [150, 3, 1, "c.nrfy_spim_int_init", "mask"], [150, 3, 1, "c.nrfy_spim_int_init", "p_reg"]], "nrfy_spim_int_uninit": [[150, 3, 1, "c.nrfy_spim_int_uninit", "p_reg"]], "nrfy_spim_miso_pin_get": [[150, 3, 1, "c.nrfy_spim_miso_pin_get", "p_reg"]], "nrfy_spim_mosi_pin_get": [[150, 3, 1, "c.nrfy_spim_mosi_pin_get", "p_reg"]], "nrfy_spim_orc_set": [[150, 3, 1, "c.nrfy_spim_orc_set", "orc"], [150, 3, 1, "c.nrfy_spim_orc_set", "p_reg"]], "nrfy_spim_periph_configure": [[150, 3, 1, "c.nrfy_spim_periph_configure", "p_config"], [150, 3, 1, "c.nrfy_spim_periph_configure", "p_reg"]], "nrfy_spim_pins_get": [[150, 3, 1, "c.nrfy_spim_pins_get", "p_pins"], [150, 3, 1, "c.nrfy_spim_pins_get", "p_reg"]], "nrfy_spim_pins_set": [[150, 3, 1, "c.nrfy_spim_pins_set", "miso_pin"], [150, 3, 1, "c.nrfy_spim_pins_set", "mosi_pin"], [150, 3, 1, "c.nrfy_spim_pins_set", "p_reg"], [150, 3, 1, "c.nrfy_spim_pins_set", "sck_pin"]], "nrfy_spim_pins_t": [[150, 6, 1, "c.nrfy_spim_pins_t.miso_pin", "miso_pin"], [150, 6, 1, "c.nrfy_spim_pins_t.mosi_pin", "mosi_pin"], [150, 6, 1, "c.nrfy_spim_pins_t.sck_pin", "sck_pin"]], "nrfy_spim_prescaler_get": [[150, 3, 1, "c.nrfy_spim_prescaler_get", "p_reg"]], "nrfy_spim_prescaler_set": [[150, 3, 1, "c.nrfy_spim_prescaler_set", "p_reg"], [150, 3, 1, "c.nrfy_spim_prescaler_set", "prescaler"]], "nrfy_spim_publish_clear": [[150, 3, 1, "c.nrfy_spim_publish_clear", "event"], [150, 3, 1, "c.nrfy_spim_publish_clear", "p_reg"]], "nrfy_spim_publish_set": [[150, 3, 1, "c.nrfy_spim_publish_set", "channel"], [150, 3, 1, "c.nrfy_spim_publish_set", "event"], [150, 3, 1, "c.nrfy_spim_publish_set", "p_reg"]], "nrfy_spim_rx_amount_get": [[150, 3, 1, "c.nrfy_spim_rx_amount_get", "p_reg"]], "nrfy_spim_rx_buffer_set": [[150, 3, 1, "c.nrfy_spim_rx_buffer_set", "length"], [150, 3, 1, "c.nrfy_spim_rx_buffer_set", "p_buffer"], [150, 3, 1, "c.nrfy_spim_rx_buffer_set", "p_reg"]], "nrfy_spim_rx_list_set": [[150, 3, 1, "c.nrfy_spim_rx_list_set", "enable"], [150, 3, 1, "c.nrfy_spim_rx_list_set", "p_reg"]], "nrfy_spim_rx_maxcnt_get": [[150, 3, 1, "c.nrfy_spim_rx_maxcnt_get", "p_reg"]], "nrfy_spim_sck_pin_get": [[150, 3, 1, "c.nrfy_spim_sck_pin_get", "p_reg"]], "nrfy_spim_shorts_disable": [[150, 3, 1, "c.nrfy_spim_shorts_disable", "mask"], [150, 3, 1, "c.nrfy_spim_shorts_disable", "p_reg"]], "nrfy_spim_shorts_enable": [[150, 3, 1, "c.nrfy_spim_shorts_enable", "mask"], [150, 3, 1, "c.nrfy_spim_shorts_enable", "p_reg"]], "nrfy_spim_shorts_get": [[150, 3, 1, "c.nrfy_spim_shorts_get", "p_reg"]], "nrfy_spim_stallstat_rx_clear": [[150, 3, 1, "c.nrfy_spim_stallstat_rx_clear", "p_reg"]], "nrfy_spim_stallstat_rx_get": [[150, 3, 1, "c.nrfy_spim_stallstat_rx_get", "p_reg"]], "nrfy_spim_stallstat_tx_clear": [[150, 3, 1, "c.nrfy_spim_stallstat_tx_clear", "p_reg"]], "nrfy_spim_stallstat_tx_get": [[150, 3, 1, "c.nrfy_spim_stallstat_tx_get", "p_reg"]], "nrfy_spim_subscribe_clear": [[150, 3, 1, "c.nrfy_spim_subscribe_clear", "p_reg"], [150, 3, 1, "c.nrfy_spim_subscribe_clear", "task"]], "nrfy_spim_subscribe_set": [[150, 3, 1, "c.nrfy_spim_subscribe_set", "channel"], [150, 3, 1, "c.nrfy_spim_subscribe_set", "p_reg"], [150, 3, 1, "c.nrfy_spim_subscribe_set", "task"]], "nrfy_spim_task_address_get": [[150, 3, 1, "c.nrfy_spim_task_address_get", "p_reg"], [150, 3, 1, "c.nrfy_spim_task_address_get", "task"]], "nrfy_spim_task_trigger": [[150, 3, 1, "c.nrfy_spim_task_trigger", "p_reg"], [150, 3, 1, "c.nrfy_spim_task_trigger", "task"]], "nrfy_spim_tx_amount_get": [[150, 3, 1, "c.nrfy_spim_tx_amount_get", "p_reg"]], "nrfy_spim_tx_buffer_set": [[150, 3, 1, "c.nrfy_spim_tx_buffer_set", "length"], [150, 3, 1, "c.nrfy_spim_tx_buffer_set", "p_buffer"], [150, 3, 1, "c.nrfy_spim_tx_buffer_set", "p_reg"]], "nrfy_spim_tx_list_set": [[150, 3, 1, "c.nrfy_spim_tx_list_set", "enable"], [150, 3, 1, "c.nrfy_spim_tx_list_set", "p_reg"]], "nrfy_spim_tx_maxcnt_get": [[150, 3, 1, "c.nrfy_spim_tx_maxcnt_get", "p_reg"]], "nrfy_spim_xfer_desc_t": [[150, 6, 1, "c.nrfy_spim_xfer_desc_t.p_rx_buffer", "p_rx_buffer"], [150, 6, 1, "c.nrfy_spim_xfer_desc_t.p_tx_buffer", "p_tx_buffer"], [150, 6, 1, "c.nrfy_spim_xfer_desc_t.rx_length", "rx_length"], [150, 6, 1, "c.nrfy_spim_xfer_desc_t.tx_length", "tx_length"]], "nrfy_spim_xfer_start": [[150, 3, 1, "c.nrfy_spim_xfer_start", "p_reg"], [150, 3, 1, "c.nrfy_spim_xfer_start", "p_xfer"]], "nrfy_tbm_configure": [[166, 3, 1, "c.nrfy_tbm_configure", "p_reg"], [166, 3, 1, "c.nrfy_tbm_configure", "size"]], "nrfy_tbm_count_get": [[166, 3, 1, "c.nrfy_tbm_count_get", "p_reg"]], "nrfy_tbm_event_check": [[166, 3, 1, "c.nrfy_tbm_event_check", "event"], [166, 3, 1, "c.nrfy_tbm_event_check", "p_reg"]], "nrfy_tbm_event_clear": [[166, 3, 1, "c.nrfy_tbm_event_clear", "event"], [166, 3, 1, "c.nrfy_tbm_event_clear", "p_reg"]], "nrfy_tbm_events_process": [[166, 3, 1, "c.nrfy_tbm_events_process", "mask"], [166, 3, 1, "c.nrfy_tbm_events_process", "p_reg"]], "nrfy_tbm_int_disable": [[166, 3, 1, "c.nrfy_tbm_int_disable", "mask"], [166, 3, 1, "c.nrfy_tbm_int_disable", "p_reg"]], "nrfy_tbm_int_enable": [[166, 3, 1, "c.nrfy_tbm_int_enable", "mask"], [166, 3, 1, "c.nrfy_tbm_int_enable", "p_reg"]], "nrfy_tbm_int_enable_check": [[166, 3, 1, "c.nrfy_tbm_int_enable_check", "mask"], [166, 3, 1, "c.nrfy_tbm_int_enable_check", "p_reg"]], "nrfy_tbm_int_init": [[166, 3, 1, "c.nrfy_tbm_int_init", "enable"], [166, 3, 1, "c.nrfy_tbm_int_init", "irq_priority"], [166, 3, 1, "c.nrfy_tbm_int_init", "mask"], [166, 3, 1, "c.nrfy_tbm_int_init", "p_reg"]], "nrfy_tbm_int_uninit": [[166, 3, 1, "c.nrfy_tbm_int_uninit", "p_reg"]], "nrfy_tbm_task_trigger": [[166, 3, 1, "c.nrfy_tbm_task_trigger", "p_reg"], [166, 3, 1, "c.nrfy_tbm_task_trigger", "task"]], "nrfy_temp_calibration_coeff_get": [[172, 3, 1, "c.nrfy_temp_calibration_coeff_get", "p_reg"]], "nrfy_temp_calibration_coeff_set": [[172, 3, 1, "c.nrfy_temp_calibration_coeff_set", "coeff"], [172, 3, 1, "c.nrfy_temp_calibration_coeff_set", "p_reg"]], "nrfy_temp_event_address_get": [[172, 3, 1, "c.nrfy_temp_event_address_get", "event"], [172, 3, 1, "c.nrfy_temp_event_address_get", "p_reg"]], "nrfy_temp_event_check": [[172, 3, 1, "c.nrfy_temp_event_check", "event"], [172, 3, 1, "c.nrfy_temp_event_check", "p_reg"]], "nrfy_temp_event_clear": [[172, 3, 1, "c.nrfy_temp_event_clear", "event"], [172, 3, 1, "c.nrfy_temp_event_clear", "p_reg"]], "nrfy_temp_int_disable": [[172, 3, 1, "c.nrfy_temp_int_disable", "mask"], [172, 3, 1, "c.nrfy_temp_int_disable", "p_reg"]], "nrfy_temp_int_enable": [[172, 3, 1, "c.nrfy_temp_int_enable", "mask"], [172, 3, 1, "c.nrfy_temp_int_enable", "p_reg"]], "nrfy_temp_int_enable_check": [[172, 3, 1, "c.nrfy_temp_int_enable_check", "mask"], [172, 3, 1, "c.nrfy_temp_int_enable_check", "p_reg"]], "nrfy_temp_int_init": [[172, 3, 1, "c.nrfy_temp_int_init", "enable"], [172, 3, 1, "c.nrfy_temp_int_init", "irq_priority"], [172, 3, 1, "c.nrfy_temp_int_init", "mask"], [172, 3, 1, "c.nrfy_temp_int_init", "p_reg"]], "nrfy_temp_int_uninit": [[172, 3, 1, "c.nrfy_temp_int_uninit", "p_reg"]], "nrfy_temp_publish_clear": [[172, 3, 1, "c.nrfy_temp_publish_clear", "event"], [172, 3, 1, "c.nrfy_temp_publish_clear", "p_reg"]], "nrfy_temp_publish_set": [[172, 3, 1, "c.nrfy_temp_publish_set", "channel"], [172, 3, 1, "c.nrfy_temp_publish_set", "event"], [172, 3, 1, "c.nrfy_temp_publish_set", "p_reg"]], "nrfy_temp_result_get": [[172, 3, 1, "c.nrfy_temp_result_get", "p_reg"]], "nrfy_temp_subscribe_clear": [[172, 3, 1, "c.nrfy_temp_subscribe_clear", "p_reg"], [172, 3, 1, "c.nrfy_temp_subscribe_clear", "task"]], "nrfy_temp_subscribe_set": [[172, 3, 1, "c.nrfy_temp_subscribe_set", "channel"], [172, 3, 1, "c.nrfy_temp_subscribe_set", "p_reg"], [172, 3, 1, "c.nrfy_temp_subscribe_set", "task"]], "nrfy_temp_task_address_get": [[172, 3, 1, "c.nrfy_temp_task_address_get", "p_reg"], [172, 3, 1, "c.nrfy_temp_task_address_get", "task"]], "nrfy_temp_task_trigger": [[172, 3, 1, "c.nrfy_temp_task_trigger", "p_reg"], [172, 3, 1, "c.nrfy_temp_task_trigger", "task"]], "nrfy_timer_bit_width_get": [[176, 3, 1, "c.nrfy_timer_bit_width_get", "p_reg"]], "nrfy_timer_bit_width_set": [[176, 3, 1, "c.nrfy_timer_bit_width_set", "bit_width"], [176, 3, 1, "c.nrfy_timer_bit_width_set", "p_reg"]], "nrfy_timer_capture_get": [[176, 3, 1, "c.nrfy_timer_capture_get", "channel"], [176, 3, 1, "c.nrfy_timer_capture_get", "p_reg"]], "nrfy_timer_capture_task_get": [[176, 3, 1, "c.nrfy_timer_capture_task_get", "channel"]], "nrfy_timer_cc_get": [[176, 3, 1, "c.nrfy_timer_cc_get", "cc_channel"], [176, 3, 1, "c.nrfy_timer_cc_get", "p_reg"]], "nrfy_timer_cc_set": [[176, 3, 1, "c.nrfy_timer_cc_set", "cc_channel"], [176, 3, 1, "c.nrfy_timer_cc_set", "cc_value"], [176, 3, 1, "c.nrfy_timer_cc_set", "p_reg"]], "nrfy_timer_compare_event_get": [[176, 3, 1, "c.nrfy_timer_compare_event_get", "channel"]], "nrfy_timer_compare_int_get": [[176, 3, 1, "c.nrfy_timer_compare_int_get", "channel"]], "nrfy_timer_config_t": [[176, 6, 1, "c.nrfy_timer_config_t.bit_width", "bit_width"], [176, 6, 1, "c.nrfy_timer_config_t.mode", "mode"], [176, 6, 1, "c.nrfy_timer_config_t.prescaler", "prescaler"]], "nrfy_timer_event_address_get": [[176, 3, 1, "c.nrfy_timer_event_address_get", "event"], [176, 3, 1, "c.nrfy_timer_event_address_get", "p_reg"]], "nrfy_timer_event_check": [[176, 3, 1, "c.nrfy_timer_event_check", "event"], [176, 3, 1, "c.nrfy_timer_event_check", "p_reg"]], "nrfy_timer_event_clear": [[176, 3, 1, "c.nrfy_timer_event_clear", "event"], [176, 3, 1, "c.nrfy_timer_event_clear", "p_reg"]], "nrfy_timer_events_process": [[176, 3, 1, "c.nrfy_timer_events_process", "mask"], [176, 3, 1, "c.nrfy_timer_events_process", "p_reg"]], "nrfy_timer_int_disable": [[176, 3, 1, "c.nrfy_timer_int_disable", "mask"], [176, 3, 1, "c.nrfy_timer_int_disable", "p_reg"]], "nrfy_timer_int_enable": [[176, 3, 1, "c.nrfy_timer_int_enable", "mask"], [176, 3, 1, "c.nrfy_timer_int_enable", "p_reg"]], "nrfy_timer_int_enable_check": [[176, 3, 1, "c.nrfy_timer_int_enable_check", "mask"], [176, 3, 1, "c.nrfy_timer_int_enable_check", "p_reg"]], "nrfy_timer_int_init": [[176, 3, 1, "c.nrfy_timer_int_init", "enable"], [176, 3, 1, "c.nrfy_timer_int_init", "irq_priority"], [176, 3, 1, "c.nrfy_timer_int_init", "mask"], [176, 3, 1, "c.nrfy_timer_int_init", "p_reg"]], "nrfy_timer_int_uninit": [[176, 3, 1, "c.nrfy_timer_int_uninit", "p_reg"]], "nrfy_timer_mode_get": [[176, 3, 1, "c.nrfy_timer_mode_get", "p_reg"]], "nrfy_timer_mode_set": [[176, 3, 1, "c.nrfy_timer_mode_set", "mode"], [176, 3, 1, "c.nrfy_timer_mode_set", "p_reg"]], "nrfy_timer_one_shot_disable": [[176, 3, 1, "c.nrfy_timer_one_shot_disable", "cc_channel"], [176, 3, 1, "c.nrfy_timer_one_shot_disable", "p_reg"]], "nrfy_timer_one_shot_enable": [[176, 3, 1, "c.nrfy_timer_one_shot_enable", "cc_channel"], [176, 3, 1, "c.nrfy_timer_one_shot_enable", "p_reg"]], "nrfy_timer_periph_configure": [[176, 3, 1, "c.nrfy_timer_periph_configure", "p_config"], [176, 3, 1, "c.nrfy_timer_periph_configure", "p_reg"]], "nrfy_timer_prescaler_get": [[176, 3, 1, "c.nrfy_timer_prescaler_get", "p_reg"]], "nrfy_timer_prescaler_set": [[176, 3, 1, "c.nrfy_timer_prescaler_set", "p_reg"], [176, 3, 1, "c.nrfy_timer_prescaler_set", "prescaler_factor"]], "nrfy_timer_publish_clear": [[176, 3, 1, "c.nrfy_timer_publish_clear", "event"], [176, 3, 1, "c.nrfy_timer_publish_clear", "p_reg"]], "nrfy_timer_publish_set": [[176, 3, 1, "c.nrfy_timer_publish_set", "channel"], [176, 3, 1, "c.nrfy_timer_publish_set", "event"], [176, 3, 1, "c.nrfy_timer_publish_set", "p_reg"]], "nrfy_timer_shorts_disable": [[176, 3, 1, "c.nrfy_timer_shorts_disable", "mask"], [176, 3, 1, "c.nrfy_timer_shorts_disable", "p_reg"]], "nrfy_timer_shorts_enable": [[176, 3, 1, "c.nrfy_timer_shorts_enable", "mask"], [176, 3, 1, "c.nrfy_timer_shorts_enable", "p_reg"]], "nrfy_timer_shorts_set": [[176, 3, 1, "c.nrfy_timer_shorts_set", "mask"], [176, 3, 1, "c.nrfy_timer_shorts_set", "p_reg"]], "nrfy_timer_subscribe_clear": [[176, 3, 1, "c.nrfy_timer_subscribe_clear", "p_reg"], [176, 3, 1, "c.nrfy_timer_subscribe_clear", "task"]], "nrfy_timer_subscribe_set": [[176, 3, 1, "c.nrfy_timer_subscribe_set", "channel"], [176, 3, 1, "c.nrfy_timer_subscribe_set", "p_reg"], [176, 3, 1, "c.nrfy_timer_subscribe_set", "task"]], "nrfy_timer_task_address_get": [[176, 3, 1, "c.nrfy_timer_task_address_get", "p_reg"], [176, 3, 1, "c.nrfy_timer_task_address_get", "task"]], "nrfy_timer_task_trigger": [[176, 3, 1, "c.nrfy_timer_task_trigger", "p_reg"], [176, 3, 1, "c.nrfy_timer_task_trigger", "task"]], "nrfy_twim_abort": [[183, 3, 1, "c.nrfy_twim_abort", "p_reg"], [183, 3, 1, "c.nrfy_twim_abort", "p_xfer"]], "nrfy_twim_address_set": [[183, 3, 1, "c.nrfy_twim_address_set", "address"], [183, 3, 1, "c.nrfy_twim_address_set", "p_reg"]], "nrfy_twim_config_t": [[183, 6, 1, "c.nrfy_twim_config_t.frequency", "frequency"], [183, 6, 1, "c.nrfy_twim_config_t.pins", "pins"], [183, 6, 1, "c.nrfy_twim_config_t.skip_psel_cfg", "skip_psel_cfg"]], "nrfy_twim_disable": [[183, 3, 1, "c.nrfy_twim_disable", "p_reg"]], "nrfy_twim_enable": [[183, 3, 1, "c.nrfy_twim_enable", "p_reg"]], "nrfy_twim_errorsrc_get_and_clear": [[183, 3, 1, "c.nrfy_twim_errorsrc_get_and_clear", "p_reg"]], "nrfy_twim_event_address_get": [[183, 3, 1, "c.nrfy_twim_event_address_get", "event"], [183, 3, 1, "c.nrfy_twim_event_address_get", "p_reg"]], "nrfy_twim_event_check": [[183, 3, 1, "c.nrfy_twim_event_check", "event"], [183, 3, 1, "c.nrfy_twim_event_check", "p_reg"]], "nrfy_twim_event_clear": [[183, 3, 1, "c.nrfy_twim_event_clear", "event"], [183, 3, 1, "c.nrfy_twim_event_clear", "p_reg"]], "nrfy_twim_events_process": [[183, 3, 1, "c.nrfy_twim_events_process", "mask"], [183, 3, 1, "c.nrfy_twim_events_process", "p_reg"], [183, 3, 1, "c.nrfy_twim_events_process", "p_xfer"]], "nrfy_twim_frequency_set": [[183, 3, 1, "c.nrfy_twim_frequency_set", "frequency"], [183, 3, 1, "c.nrfy_twim_frequency_set", "p_reg"]], "nrfy_twim_int_disable": [[183, 3, 1, "c.nrfy_twim_int_disable", "mask"], [183, 3, 1, "c.nrfy_twim_int_disable", "p_reg"]], "nrfy_twim_int_enable": [[183, 3, 1, "c.nrfy_twim_int_enable", "mask"], [183, 3, 1, "c.nrfy_twim_int_enable", "p_reg"]], "nrfy_twim_int_enable_check": [[183, 3, 1, "c.nrfy_twim_int_enable_check", "mask"], [183, 3, 1, "c.nrfy_twim_int_enable_check", "p_reg"]], "nrfy_twim_int_init": [[183, 3, 1, "c.nrfy_twim_int_init", "enable"], [183, 3, 1, "c.nrfy_twim_int_init", "irq_priority"], [183, 3, 1, "c.nrfy_twim_int_init", "mask"], [183, 3, 1, "c.nrfy_twim_int_init", "p_reg"]], "nrfy_twim_int_uninit": [[183, 3, 1, "c.nrfy_twim_int_uninit", "p_reg"]], "nrfy_twim_periph_configure": [[183, 3, 1, "c.nrfy_twim_periph_configure", "p_config"], [183, 3, 1, "c.nrfy_twim_periph_configure", "p_reg"]], "nrfy_twim_pins_get": [[183, 3, 1, "c.nrfy_twim_pins_get", "p_pins"], [183, 3, 1, "c.nrfy_twim_pins_get", "p_reg"]], "nrfy_twim_pins_set": [[183, 3, 1, "c.nrfy_twim_pins_set", "p_pins"], [183, 3, 1, "c.nrfy_twim_pins_set", "p_reg"]], "nrfy_twim_pins_t": [[183, 6, 1, "c.nrfy_twim_pins_t.scl_pin", "scl_pin"], [183, 6, 1, "c.nrfy_twim_pins_t.sda_pin", "sda_pin"]], "nrfy_twim_publish_clear": [[183, 3, 1, "c.nrfy_twim_publish_clear", "event"], [183, 3, 1, "c.nrfy_twim_publish_clear", "p_reg"]], "nrfy_twim_publish_set": [[183, 3, 1, "c.nrfy_twim_publish_set", "channel"], [183, 3, 1, "c.nrfy_twim_publish_set", "event"], [183, 3, 1, "c.nrfy_twim_publish_set", "p_reg"]], "nrfy_twim_rx_buffer_set": [[183, 3, 1, "c.nrfy_twim_rx_buffer_set", "p_reg"], [183, 3, 1, "c.nrfy_twim_rx_buffer_set", "p_xfer"]], "nrfy_twim_rx_list_disable": [[183, 3, 1, "c.nrfy_twim_rx_list_disable", "p_reg"]], "nrfy_twim_rx_list_enable": [[183, 3, 1, "c.nrfy_twim_rx_list_enable", "p_reg"]], "nrfy_twim_rx_list_set": [[183, 3, 1, "c.nrfy_twim_rx_list_set", "enable"], [183, 3, 1, "c.nrfy_twim_rx_list_set", "p_reg"]], "nrfy_twim_rx_start": [[183, 3, 1, "c.nrfy_twim_rx_start", "p_reg"], [183, 3, 1, "c.nrfy_twim_rx_start", "p_xfer"]], "nrfy_twim_rxd_amount_get": [[183, 3, 1, "c.nrfy_twim_rxd_amount_get", "p_reg"]], "nrfy_twim_scl_pin_get": [[183, 3, 1, "c.nrfy_twim_scl_pin_get", "p_reg"]], "nrfy_twim_sda_pin_get": [[183, 3, 1, "c.nrfy_twim_sda_pin_get", "p_reg"]], "nrfy_twim_shorts_disable": [[183, 3, 1, "c.nrfy_twim_shorts_disable", "mask"], [183, 3, 1, "c.nrfy_twim_shorts_disable", "p_reg"]], "nrfy_twim_shorts_enable": [[183, 3, 1, "c.nrfy_twim_shorts_enable", "mask"], [183, 3, 1, "c.nrfy_twim_shorts_enable", "p_reg"]], "nrfy_twim_shorts_get": [[183, 3, 1, "c.nrfy_twim_shorts_get", "p_reg"]], "nrfy_twim_shorts_set": [[183, 3, 1, "c.nrfy_twim_shorts_set", "mask"], [183, 3, 1, "c.nrfy_twim_shorts_set", "p_reg"]], "nrfy_twim_stop": [[183, 3, 1, "c.nrfy_twim_stop", "p_reg"]], "nrfy_twim_subscribe_clear": [[183, 3, 1, "c.nrfy_twim_subscribe_clear", "p_reg"], [183, 3, 1, "c.nrfy_twim_subscribe_clear", "task"]], "nrfy_twim_subscribe_set": [[183, 3, 1, "c.nrfy_twim_subscribe_set", "channel"], [183, 3, 1, "c.nrfy_twim_subscribe_set", "p_reg"], [183, 3, 1, "c.nrfy_twim_subscribe_set", "task"]], "nrfy_twim_task_address_get": [[183, 3, 1, "c.nrfy_twim_task_address_get", "p_reg"], [183, 3, 1, "c.nrfy_twim_task_address_get", "task"]], "nrfy_twim_task_trigger": [[183, 3, 1, "c.nrfy_twim_task_trigger", "p_reg"], [183, 3, 1, "c.nrfy_twim_task_trigger", "task"]], "nrfy_twim_tx_buffer_set": [[183, 3, 1, "c.nrfy_twim_tx_buffer_set", "p_reg"], [183, 3, 1, "c.nrfy_twim_tx_buffer_set", "p_xfer"]], "nrfy_twim_tx_list_disable": [[183, 3, 1, "c.nrfy_twim_tx_list_disable", "p_reg"]], "nrfy_twim_tx_list_enable": [[183, 3, 1, "c.nrfy_twim_tx_list_enable", "p_reg"]], "nrfy_twim_tx_list_set": [[183, 3, 1, "c.nrfy_twim_tx_list_set", "enable"], [183, 3, 1, "c.nrfy_twim_tx_list_set", "p_reg"]], "nrfy_twim_tx_start": [[183, 3, 1, "c.nrfy_twim_tx_start", "p_reg"], [183, 3, 1, "c.nrfy_twim_tx_start", "p_xfer"]], "nrfy_twim_txd_amount_get": [[183, 3, 1, "c.nrfy_twim_txd_amount_get", "p_reg"]], "nrfy_twim_xfer_desc_t": [[183, 6, 1, "c.nrfy_twim_xfer_desc_t.length", "length"], [183, 6, 1, "c.nrfy_twim_xfer_desc_t.p_buffer", "p_buffer"]], "nrfy_uarte_baudrate_set": [[193, 3, 1, "c.nrfy_uarte_baudrate_set", "baudrate"], [193, 3, 1, "c.nrfy_uarte_baudrate_set", "p_reg"]], "nrfy_uarte_buffer_t": [[193, 6, 1, "c.nrfy_uarte_buffer_t.length", "length"], [193, 6, 1, "c.nrfy_uarte_buffer_t.p_buffer", "p_buffer"]], "nrfy_uarte_config_t": [[193, 6, 1, "c.nrfy_uarte_config_t.baudrate", "baudrate"], [193, 6, 1, "c.nrfy_uarte_config_t.config", "config"], [193, 6, 1, "c.nrfy_uarte_config_t.pins", "pins"], [193, 6, 1, "c.nrfy_uarte_config_t.skip_psel_cfg", "skip_psel_cfg"]], "nrfy_uarte_configure": [[193, 3, 1, "c.nrfy_uarte_configure", "p_cfg"], [193, 3, 1, "c.nrfy_uarte_configure", "p_reg"]], "nrfy_uarte_cts_pin_get": [[193, 3, 1, "c.nrfy_uarte_cts_pin_get", "p_reg"]], "nrfy_uarte_disable": [[193, 3, 1, "c.nrfy_uarte_disable", "p_reg"]], "nrfy_uarte_enable": [[193, 3, 1, "c.nrfy_uarte_enable", "p_reg"]], "nrfy_uarte_enable_check": [[193, 3, 1, "c.nrfy_uarte_enable_check", "p_reg"]], "nrfy_uarte_errorsrc_get_and_clear": [[193, 3, 1, "c.nrfy_uarte_errorsrc_get_and_clear", "p_reg"]], "nrfy_uarte_event_address_get": [[193, 3, 1, "c.nrfy_uarte_event_address_get", "event"], [193, 3, 1, "c.nrfy_uarte_event_address_get", "p_reg"]], "nrfy_uarte_event_check": [[193, 3, 1, "c.nrfy_uarte_event_check", "event"], [193, 3, 1, "c.nrfy_uarte_event_check", "p_reg"]], "nrfy_uarte_event_clear": [[193, 3, 1, "c.nrfy_uarte_event_clear", "event"], [193, 3, 1, "c.nrfy_uarte_event_clear", "p_reg"]], "nrfy_uarte_events_process": [[193, 3, 1, "c.nrfy_uarte_events_process", "mask"], [193, 3, 1, "c.nrfy_uarte_events_process", "p_reg"], [193, 3, 1, "c.nrfy_uarte_events_process", "p_xfer"]], "nrfy_uarte_hwfc_pins_disconnect": [[193, 3, 1, "c.nrfy_uarte_hwfc_pins_disconnect", "p_reg"]], "nrfy_uarte_hwfc_pins_set": [[193, 3, 1, "c.nrfy_uarte_hwfc_pins_set", "p_reg"], [193, 3, 1, "c.nrfy_uarte_hwfc_pins_set", "pselcts"], [193, 3, 1, "c.nrfy_uarte_hwfc_pins_set", "pselrts"]], "nrfy_uarte_int_disable": [[193, 3, 1, "c.nrfy_uarte_int_disable", "mask"], [193, 3, 1, "c.nrfy_uarte_int_disable", "p_reg"]], "nrfy_uarte_int_enable": [[193, 3, 1, "c.nrfy_uarte_int_enable", "mask"], [193, 3, 1, "c.nrfy_uarte_int_enable", "p_reg"]], "nrfy_uarte_int_enable_check": [[193, 3, 1, "c.nrfy_uarte_int_enable_check", "mask"], [193, 3, 1, "c.nrfy_uarte_int_enable_check", "p_reg"]], "nrfy_uarte_int_init": [[193, 3, 1, "c.nrfy_uarte_int_init", "enable"], [193, 3, 1, "c.nrfy_uarte_int_init", "irq_priority"], [193, 3, 1, "c.nrfy_uarte_int_init", "mask"], [193, 3, 1, "c.nrfy_uarte_int_init", "p_reg"]], "nrfy_uarte_int_uninit": [[193, 3, 1, "c.nrfy_uarte_int_uninit", "p_reg"]], "nrfy_uarte_periph_configure": [[193, 3, 1, "c.nrfy_uarte_periph_configure", "p_config"], [193, 3, 1, "c.nrfy_uarte_periph_configure", "p_reg"]], "nrfy_uarte_pins_disconnect": [[193, 3, 1, "c.nrfy_uarte_pins_disconnect", "p_reg"]], "nrfy_uarte_pins_get": [[193, 3, 1, "c.nrfy_uarte_pins_get", "p_pins"], [193, 3, 1, "c.nrfy_uarte_pins_get", "p_reg"]], "nrfy_uarte_pins_t": [[193, 6, 1, "c.nrfy_uarte_pins_t.cts_pin", "cts_pin"], [193, 6, 1, "c.nrfy_uarte_pins_t.rts_pin", "rts_pin"], [193, 6, 1, "c.nrfy_uarte_pins_t.rxd_pin", "rxd_pin"], [193, 6, 1, "c.nrfy_uarte_pins_t.txd_pin", "txd_pin"]], "nrfy_uarte_publish_clear": [[193, 3, 1, "c.nrfy_uarte_publish_clear", "event"], [193, 3, 1, "c.nrfy_uarte_publish_clear", "p_reg"]], "nrfy_uarte_publish_set": [[193, 3, 1, "c.nrfy_uarte_publish_set", "channel"], [193, 3, 1, "c.nrfy_uarte_publish_set", "event"], [193, 3, 1, "c.nrfy_uarte_publish_set", "p_reg"]], "nrfy_uarte_rts_pin_get": [[193, 3, 1, "c.nrfy_uarte_rts_pin_get", "p_reg"]], "nrfy_uarte_rx_amount_get": [[193, 3, 1, "c.nrfy_uarte_rx_amount_get", "p_reg"]], "nrfy_uarte_rx_buffer_set": [[193, 3, 1, "c.nrfy_uarte_rx_buffer_set", "length"], [193, 3, 1, "c.nrfy_uarte_rx_buffer_set", "p_buffer"], [193, 3, 1, "c.nrfy_uarte_rx_buffer_set", "p_reg"]], "nrfy_uarte_rx_pin_get": [[193, 3, 1, "c.nrfy_uarte_rx_pin_get", "p_reg"]], "nrfy_uarte_rx_start": [[193, 3, 1, "c.nrfy_uarte_rx_start", "p_reg"], [193, 3, 1, "c.nrfy_uarte_rx_start", "p_xfer"]], "nrfy_uarte_shorts_disable": [[193, 3, 1, "c.nrfy_uarte_shorts_disable", "mask"], [193, 3, 1, "c.nrfy_uarte_shorts_disable", "p_reg"]], "nrfy_uarte_shorts_enable": [[193, 3, 1, "c.nrfy_uarte_shorts_enable", "mask"], [193, 3, 1, "c.nrfy_uarte_shorts_enable", "p_reg"]], "nrfy_uarte_shorts_get": [[193, 3, 1, "c.nrfy_uarte_shorts_get", "mask"], [193, 3, 1, "c.nrfy_uarte_shorts_get", "p_reg"]], "nrfy_uarte_shorts_set": [[193, 3, 1, "c.nrfy_uarte_shorts_set", "mask"], [193, 3, 1, "c.nrfy_uarte_shorts_set", "p_reg"]], "nrfy_uarte_stop": [[193, 3, 1, "c.nrfy_uarte_stop", "p_reg"], [193, 3, 1, "c.nrfy_uarte_stop", "p_xfer"]], "nrfy_uarte_subscribe_clear": [[193, 3, 1, "c.nrfy_uarte_subscribe_clear", "p_reg"], [193, 3, 1, "c.nrfy_uarte_subscribe_clear", "task"]], "nrfy_uarte_subscribe_set": [[193, 3, 1, "c.nrfy_uarte_subscribe_set", "channel"], [193, 3, 1, "c.nrfy_uarte_subscribe_set", "p_reg"], [193, 3, 1, "c.nrfy_uarte_subscribe_set", "task"]], "nrfy_uarte_task_address_get": [[193, 3, 1, "c.nrfy_uarte_task_address_get", "p_reg"], [193, 3, 1, "c.nrfy_uarte_task_address_get", "task"]], "nrfy_uarte_task_trigger": [[193, 3, 1, "c.nrfy_uarte_task_trigger", "p_reg"], [193, 3, 1, "c.nrfy_uarte_task_trigger", "task"]], "nrfy_uarte_tx_abort": [[193, 3, 1, "c.nrfy_uarte_tx_abort", "p_reg"], [193, 3, 1, "c.nrfy_uarte_tx_abort", "wait"]], "nrfy_uarte_tx_amount_get": [[193, 3, 1, "c.nrfy_uarte_tx_amount_get", "p_reg"]], "nrfy_uarte_tx_buffer_get": [[193, 3, 1, "c.nrfy_uarte_tx_buffer_get", "p_reg"]], "nrfy_uarte_tx_buffer_set": [[193, 3, 1, "c.nrfy_uarte_tx_buffer_set", "length"], [193, 3, 1, "c.nrfy_uarte_tx_buffer_set", "p_buffer"], [193, 3, 1, "c.nrfy_uarte_tx_buffer_set", "p_reg"]], "nrfy_uarte_tx_pin_get": [[193, 3, 1, "c.nrfy_uarte_tx_pin_get", "p_reg"]], "nrfy_uarte_tx_start": [[193, 3, 1, "c.nrfy_uarte_tx_start", "p_reg"], [193, 3, 1, "c.nrfy_uarte_tx_start", "wait"]], "nrfy_uarte_txrx_pins_disconnect": [[193, 3, 1, "c.nrfy_uarte_txrx_pins_disconnect", "p_reg"]], "nrfy_uarte_txrx_pins_set": [[193, 3, 1, "c.nrfy_uarte_txrx_pins_set", "p_reg"], [193, 3, 1, "c.nrfy_uarte_txrx_pins_set", "pselrxd"], [193, 3, 1, "c.nrfy_uarte_txrx_pins_set", "pseltxd"]], "nrfy_vpr_cpurun_get": [[211, 3, 1, "c.nrfy_vpr_cpurun_get", "p_reg"]], "nrfy_vpr_cpurun_set": [[211, 3, 1, "c.nrfy_vpr_cpurun_set", "enable"], [211, 3, 1, "c.nrfy_vpr_cpurun_set", "p_reg"]], "nrfy_vpr_debugif_dmcontrol_get": [[211, 3, 1, "c.nrfy_vpr_debugif_dmcontrol_get", "p_reg"], [211, 3, 1, "c.nrfy_vpr_debugif_dmcontrol_get", "signal"]], "nrfy_vpr_debugif_dmcontrol_set": [[211, 3, 1, "c.nrfy_vpr_debugif_dmcontrol_set", "enable"], [211, 3, 1, "c.nrfy_vpr_debugif_dmcontrol_set", "p_reg"], [211, 3, 1, "c.nrfy_vpr_debugif_dmcontrol_set", "signal"]], "nrfy_vpr_event_address_get": [[211, 3, 1, "c.nrfy_vpr_event_address_get", "event"], [211, 3, 1, "c.nrfy_vpr_event_address_get", "p_reg"]], "nrfy_vpr_event_check": [[211, 3, 1, "c.nrfy_vpr_event_check", "event"], [211, 3, 1, "c.nrfy_vpr_event_check", "p_reg"]], "nrfy_vpr_event_clear": [[211, 3, 1, "c.nrfy_vpr_event_clear", "event"], [211, 3, 1, "c.nrfy_vpr_event_clear", "p_reg"]], "nrfy_vpr_initpc_get": [[211, 3, 1, "c.nrfy_vpr_initpc_get", "p_reg"]], "nrfy_vpr_initpc_set": [[211, 3, 1, "c.nrfy_vpr_initpc_set", "p_reg"], [211, 3, 1, "c.nrfy_vpr_initpc_set", "pc"]], "nrfy_vpr_int_disable": [[211, 3, 1, "c.nrfy_vpr_int_disable", "mask"], [211, 3, 1, "c.nrfy_vpr_int_disable", "p_reg"]], "nrfy_vpr_int_enable": [[211, 3, 1, "c.nrfy_vpr_int_enable", "mask"], [211, 3, 1, "c.nrfy_vpr_int_enable", "p_reg"]], "nrfy_vpr_int_enable_check": [[211, 3, 1, "c.nrfy_vpr_int_enable_check", "mask"], [211, 3, 1, "c.nrfy_vpr_int_enable_check", "p_reg"]], "nrfy_vpr_task_address_get": [[211, 3, 1, "c.nrfy_vpr_task_address_get", "p_reg"], [211, 3, 1, "c.nrfy_vpr_task_address_get", "task"]], "nrfy_vpr_task_trigger": [[211, 3, 1, "c.nrfy_vpr_task_trigger", "p_reg"], [211, 3, 1, "c.nrfy_vpr_task_trigger", "task"]], "nrfy_vpr_trigger_task_get": [[211, 3, 1, "c.nrfy_vpr_trigger_task_get", "index"]], "nrfy_vpr_triggered_event_get": [[211, 3, 1, "c.nrfy_vpr_triggered_event_get", "index"]], "nrfy_wdt_behaviour_set": [[217, 3, 1, "c.nrfy_wdt_behaviour_set", "mask"], [217, 3, 1, "c.nrfy_wdt_behaviour_set", "p_reg"]], "nrfy_wdt_config_t": [[217, 6, 1, "c.nrfy_wdt_config_t.behaviour", "behaviour"], [217, 6, 1, "c.nrfy_wdt_config_t.reload_value", "reload_value"]], "nrfy_wdt_event_address_get": [[217, 3, 1, "c.nrfy_wdt_event_address_get", "event"], [217, 3, 1, "c.nrfy_wdt_event_address_get", "p_reg"]], "nrfy_wdt_event_check": [[217, 3, 1, "c.nrfy_wdt_event_check", "event"], [217, 3, 1, "c.nrfy_wdt_event_check", "p_reg"]], "nrfy_wdt_event_clear": [[217, 3, 1, "c.nrfy_wdt_event_clear", "event"], [217, 3, 1, "c.nrfy_wdt_event_clear", "p_reg"]], "nrfy_wdt_events_process": [[217, 3, 1, "c.nrfy_wdt_events_process", "mask"], [217, 3, 1, "c.nrfy_wdt_events_process", "p_reg"]], "nrfy_wdt_int_disable": [[217, 3, 1, "c.nrfy_wdt_int_disable", "mask"], [217, 3, 1, "c.nrfy_wdt_int_disable", "p_reg"]], "nrfy_wdt_int_enable": [[217, 3, 1, "c.nrfy_wdt_int_enable", "mask"], [217, 3, 1, "c.nrfy_wdt_int_enable", "p_reg"]], "nrfy_wdt_int_enable_check": [[217, 3, 1, "c.nrfy_wdt_int_enable_check", "mask"], [217, 3, 1, "c.nrfy_wdt_int_enable_check", "p_reg"]], "nrfy_wdt_int_init": [[217, 3, 1, "c.nrfy_wdt_int_init", "enable"], [217, 3, 1, "c.nrfy_wdt_int_init", "irq_priority"], [217, 3, 1, "c.nrfy_wdt_int_init", "mask"], [217, 3, 1, "c.nrfy_wdt_int_init", "p_reg"]], "nrfy_wdt_int_uninit": [[217, 3, 1, "c.nrfy_wdt_int_uninit", "p_reg"]], "nrfy_wdt_periph_configure": [[217, 3, 1, "c.nrfy_wdt_periph_configure", "p_config"], [217, 3, 1, "c.nrfy_wdt_periph_configure", "p_reg"]], "nrfy_wdt_publish_clear": [[217, 3, 1, "c.nrfy_wdt_publish_clear", "event"], [217, 3, 1, "c.nrfy_wdt_publish_clear", "p_reg"]], "nrfy_wdt_publish_set": [[217, 3, 1, "c.nrfy_wdt_publish_set", "channel"], [217, 3, 1, "c.nrfy_wdt_publish_set", "event"], [217, 3, 1, "c.nrfy_wdt_publish_set", "p_reg"]], "nrfy_wdt_reload_request_disable": [[217, 3, 1, "c.nrfy_wdt_reload_request_disable", "p_reg"], [217, 3, 1, "c.nrfy_wdt_reload_request_disable", "rr_register"]], "nrfy_wdt_reload_request_enable": [[217, 3, 1, "c.nrfy_wdt_reload_request_enable", "p_reg"], [217, 3, 1, "c.nrfy_wdt_reload_request_enable", "rr_register"]], "nrfy_wdt_reload_request_enable_check": [[217, 3, 1, "c.nrfy_wdt_reload_request_enable_check", "p_reg"], [217, 3, 1, "c.nrfy_wdt_reload_request_enable_check", "rr_register"]], "nrfy_wdt_reload_request_set": [[217, 3, 1, "c.nrfy_wdt_reload_request_set", "p_reg"], [217, 3, 1, "c.nrfy_wdt_reload_request_set", "rr_register"]], "nrfy_wdt_reload_value_get": [[217, 3, 1, "c.nrfy_wdt_reload_value_get", "p_reg"]], "nrfy_wdt_reload_value_set": [[217, 3, 1, "c.nrfy_wdt_reload_value_set", "p_reg"], [217, 3, 1, "c.nrfy_wdt_reload_value_set", "reload_value"]], "nrfy_wdt_request_status_check": [[217, 3, 1, "c.nrfy_wdt_request_status_check", "p_reg"], [217, 3, 1, "c.nrfy_wdt_request_status_check", "rr_register"]], "nrfy_wdt_request_status_get": [[217, 3, 1, "c.nrfy_wdt_request_status_get", "p_reg"]], "nrfy_wdt_started_check": [[217, 3, 1, "c.nrfy_wdt_started_check", "p_reg"]], "nrfy_wdt_subscribe_clear": [[217, 3, 1, "c.nrfy_wdt_subscribe_clear", "p_reg"], [217, 3, 1, "c.nrfy_wdt_subscribe_clear", "task"]], "nrfy_wdt_subscribe_set": [[217, 3, 1, "c.nrfy_wdt_subscribe_set", "channel"], [217, 3, 1, "c.nrfy_wdt_subscribe_set", "p_reg"], [217, 3, 1, "c.nrfy_wdt_subscribe_set", "task"]], "nrfy_wdt_task_address_get": [[217, 3, 1, "c.nrfy_wdt_task_address_get", "p_reg"], [217, 3, 1, "c.nrfy_wdt_task_address_get", "task"]], "nrfy_wdt_task_stop_enable_set": [[217, 3, 1, "c.nrfy_wdt_task_stop_enable_set", "enable"], [217, 3, 1, "c.nrfy_wdt_task_stop_enable_set", "p_reg"]], "nrfy_wdt_task_trigger": [[217, 3, 1, "c.nrfy_wdt_task_trigger", "p_reg"], [217, 3, 1, "c.nrfy_wdt_task_trigger", "task"]]}, "objtypes": {"0": "c:macro", "1": "c:enumerator", "2": "c:function", "3": "c:functionParam", "4": "c:enum", "5": "c:struct", "6": "c:member", "7": "c:type", "8": "c:union"}, "objnames": {"0": ["c", "macro", "C macro"], "1": ["c", "enumerator", "C enumerator"], "2": ["c", "function", "C function"], "3": ["c", "functionParam", "C function parameter"], "4": ["c", "enum", "C enum"], "5": ["c", "struct", "C struct"], "6": ["c", "member", "C member"], "7": ["c", "type", "C type"], "8": ["c", "union", "C union"]}, "titleterms": {"api": [0, 220, 232, 242], "refer": 0, "changelog": 1, "3": 1, "5": 1, "0": 1, "2024": 1, "05": 1, "10": 1, "ad": 1, "chang": [1, 220], "fix": 1, "4": 1, "03": 1, "08": 1, "2023": 1, "12": 1, "21": 1, "2": 1, "02": 1, "1": 1, "06": 1, "28": 1, "04": 1, "25": 1, "11": 1, "07": 1, "2022": 1, "9": 1, "19": 1, "8": 1, "7": 1, "2021": 1, "16": 1, "6": 1, "22": 1, "2020": 1, "13": 1, "01": 1, "24": 1, "2019": 1, "remov": 1, "27": 1, "29": 1, "18": 1, "2018": 1, "30": 1, "09": 1, "15": 1, "2017": 1, "20": 1, "aar": [2, 3], "hal": [2, 4, 7, 9, 11, 14, 16, 18, 21, 24, 27, 29, 31, 34, 37, 40, 42, 44, 45, 47, 48, 52, 56, 59, 61, 67, 69, 71, 74, 77, 79, 81, 83, 85, 87, 90, 93, 96, 98, 100, 104, 107, 109, 112, 116, 120, 122, 124, 126, 127, 128, 131, 134, 138, 142, 146, 149, 153, 155, 157, 160, 162, 165, 168, 171, 175, 179, 182, 186, 189, 192, 195, 197, 199, 202, 203, 205, 206, 207, 208, 209, 210, 214, 216], "acl": [4, 5], "adc": [6, 7, 8], "driver": [6, 10, 20, 23, 33, 39, 51, 55, 60, 65, 66, 73, 92, 95, 99, 103, 106, 111, 115, 119, 130, 133, 137, 141, 145, 148, 152, 159, 164, 170, 174, 178, 181, 185, 188, 191, 196, 201, 213, 215, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "auxpll": 9, "bellboard": [10, 11, 12, 13], "hali": [12, 25, 35, 49, 53, 57, 62, 75, 88, 101, 113, 117, 135, 139, 143, 150, 166, 172, 176, 183, 193, 211, 217], "bprot": [14, 15], "cach": [16, 17], "ccm": [18, 19], "clock": [20, 21, 22], "comp": [23, 24, 25, 26], "cracen": [27, 28], "ctrl": [29, 30], "ap": [29, 30], "dcnf": [31, 32], "dppi": [33, 34, 35, 36], "ecb": [37, 38], "egu": [39, 40, 41], "exmif": [42, 43], "ficr": 44, "fpu": [45, 46], "glitchdet": 47, "gpio": [48, 49, 50], "gpiot": [51, 52, 53, 54], "grtc": [55, 56, 57, 58], "hsfll": 59, "i2": [60, 61, 62, 63], "icr": 64, "ipc": [66, 67, 68], "ipct": [69, 70, 244], "kmu": [71, 72], "lpcomp": [73, 74, 75, 76], "lrcconf": 77, "lrc": 78, "memconf": [79, 80], "mpc": [81, 82], "mpu": [83, 84], "mutex": [85, 86], "mvdma": [87, 88, 89], "mwu": [90, 91], "nfct": [92, 93, 94], "nvmc": [95, 96, 97], "oscil": 98, "pdm": [99, 100, 101, 102], "power": [103, 104, 105], "ppi": [106, 107, 108, 241], "ppib": [109, 110], "pwm": [111, 112, 113, 114], "qdec": [115, 116, 117, 118], "qspi": [119, 120, 121], "radio": [122, 123], "ramc": [124, 125], "regul": 126, "reset": [127, 248], "resetinfo": [128, 129], "rng": [130, 131, 132], "rramc": [133, 134, 135, 136], "rtc": [137, 138, 139, 140], "saadc": [141, 142, 143, 144], "spi": [145, 146, 147, 152, 153, 154], "spim": [148, 149, 150, 151], "spu": [155, 156], "stm": [157, 158], "systick": [159, 160, 161], "tampc": [162, 163], "tbm": [164, 165, 166, 167], "tdm": [168, 169], "temp": [170, 171, 172, 173], "timer": [174, 175, 176, 177], "twi": [178, 179, 180, 185, 186, 187], "twim": [181, 182, 183, 184], "uart": [188, 189, 190, 191, 192, 193, 194], "uicr": 195, "usbd": [196, 197, 198], "usbh": [199, 200], "usbreg": [201, 202], "vmc": [203, 204], "vpr": [205, 206, 207, 208, 209, 210, 211, 212], "clic": 205, "csr": [206, 207, 208, 209], "vevif": [207, 213], "vio": 208, "vtim": 209, "vreqctrl": 214, "wdt": [215, 216, 217, 218], "support": [219, 243, 244], "overview": 219, "introduct": 220, "configur": [220, 235], "integr": 220, "irq": 220, "handler": 220, "procedur": 220, "addit": 220, "requir": 220, "nrf51": 221, "seri": [221, 231], "nrf52805": 222, "nrf52810": 223, "nrf52811": 223, "nrf52820": 224, "nrf52832": 225, "nrf52833": 226, "nrf52840": 227, "nrf5340": 228, "nrf54h20": 229, "nrf54l15": 230, "enga": 230, "nrf91": 231, "atom": 232, "oper": 232, "bitmask": 233, "modul": [233, 234, 236], "common": [234, 235, 236], "nrfy": 236, "core": 237, "depend": 237, "function": 237, "global": 238, "error": 238, "code": 238, "gener": [239, 241, 247, 248, 249], "flag": 239, "alloc": 239, "nrfx_glue": 240, "h": [240, 245], "layer": [241, 247, 248, 249], "nrfx": 242, "apb": 243, "bu": 243, "nrfx_log": 245, "peripher": 246, "resourc": 246, "share": 246, "pr": 246, "ram": 247, "control": 247, "reason": 248, "vector": 249, "dma": 249}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"API Reference": [[0, "api-reference"]], "Changelog": [[1, "changelog"]], "[3.5.0] - 2024-05-10": [[1, "id1"]], "Added": [[1, "added"], [1, "id3"], [1, "id7"], [1, "id11"], [1, "id15"], [1, "id19"], [1, "id23"], [1, "id27"], [1, "id31"], [1, "id35"], [1, "id39"], [1, "id43"], [1, "id47"], [1, "id51"], [1, "id55"], [1, "id59"], [1, "id63"], [1, "id67"], [1, "id70"], [1, "id73"], [1, "id77"], [1, "id81"], [1, "id84"], [1, "id88"], [1, "id93"], [1, "id97"], [1, "id101"], [1, "id107"], [1, "id111"], [1, "id115"], [1, "id119"], [1, "id123"], [1, "id128"]], "Changed": [[1, "changed"], [1, "id4"], [1, "id8"], [1, "id12"], [1, "id16"], [1, "id20"], [1, "id24"], [1, "id28"], [1, "id32"], [1, "id36"], [1, "id40"], [1, "id44"], [1, "id48"], [1, "id52"], [1, "id56"], [1, "id60"], [1, "id64"], [1, "id68"], [1, "id71"], [1, "id74"], [1, "id78"], [1, "id85"], [1, "id89"], [1, "id94"], [1, "id98"], [1, "id102"], [1, "id108"], [1, "id112"], [1, "id116"], [1, "id120"], [1, "id124"]], "Fixed": [[1, "fixed"], [1, "id5"], [1, "id9"], [1, "id13"], [1, "id17"], [1, "id21"], [1, "id25"], [1, "id29"], [1, "id33"], [1, "id37"], [1, "id41"], [1, "id45"], [1, "id49"], [1, "id53"], [1, "id57"], [1, "id61"], [1, "id65"], [1, "id75"], [1, "id79"], [1, "id82"], [1, "id86"], [1, "id91"], [1, "id95"], [1, "id99"], [1, "id103"], [1, "id105"], [1, "id109"], [1, "id113"], [1, "id117"], [1, "id121"], [1, "id125"]], "[3.4.0] - 2024-03-08": [[1, "id2"]], "[3.3.0] - 2023-12-21": [[1, "id6"]], "[3.2.0] - 2023-10-02": [[1, "id10"]], "[3.1.0] - 2023-06-28": [[1, "id14"]], "[3.0.0] - 2023-04-25": [[1, "id18"]], "[2.11.0] - 2023-04-07": [[1, "id22"]], "[2.10.0] - 2022-10-25": [[1, "id26"]], "[2.9.0] - 2022-07-19": [[1, "id30"]], "[2.8.0] - 2022-04-05": [[1, "id34"]], "[2.7.0] - 2021-12-16": [[1, "id38"]], "[2.6.0] - 2021-11-22": [[1, "id42"]], "[2.5.0] - 2021-05-05": [[1, "id46"]], "[2.4.0] - 2020-11-13": [[1, "id50"]], "[2.3.0] - 2020-08-19": [[1, "id54"]], "[2.2.0] - 2020-04-28": [[1, "id58"]], "[2.1.0] - 2020-01-24": [[1, "id62"]], "[2.0.0] - 2019-11-06": [[1, "id66"]], "Removed": [[1, "removed"], [1, "id126"]], "[1.8.1] - 2019-10-21": [[1, "id69"]], "[1.8.0] - 2019-08-27": [[1, "id72"]], "[1.7.2] - 2019-07-25": [[1, "id76"]], "[1.7.1] - 2019-04-08": [[1, "id80"]], "[1.7.0] - 2019-03-29": [[1, "id83"]], "[1.6.2] - 2019-02-12": [[1, "id87"]], "[1.6.1] - 2019-01-29": [[1, "id90"]], "[1.6.0] - 2019-01-18": [[1, "id92"]], "[1.5.0] - 2018-12-12": [[1, "id96"]], "[1.4.0] - 2018-11-30": [[1, "id100"]], "[1.3.1] - 2018-09-28": [[1, "id104"]], "[1.3.0] - 2018-09-21": [[1, "id106"]], "[1.2.0] - 2018-09-06": [[1, "id110"]], "[1.1.0] - 2018-06-15": [[1, "id114"]], "[1.0.0] - 2018-03-21": [[1, "id118"]], "[0.8.0] - 2017-12-20": [[1, "id122"]], "[0.7.0] - 2017-10-20": [[1, "id127"]], "AAR HAL": [[2, "aar-hal"]], "AAR": [[3, "aar"]], "ACL HAL": [[4, "acl-hal"]], "ACL": [[5, "acl"]], "ADC driver": [[6, "adc-driver"]], "ADC HAL": [[7, "adc-hal"]], "ADC": [[8, "adc"]], "AUXPLL HAL": [[9, "auxpll-hal"]], "BELLBOARD driver": [[10, "bellboard-driver"]], "BELLBOARD HAL": [[11, "bellboard-hal"]], "BELLBOARD HALY": [[12, "bellboard-haly"]], "BELLBOARD": [[13, "bellboard"]], "BPROT HAL": [[14, "bprot-hal"]], "BPROT": [[15, "bprot"]], "CACHE HAL": [[16, "cache-hal"]], "CACHE": [[17, "cache"]], "CCM HAL": [[18, "ccm-hal"]], "CCM": [[19, "ccm"]], "CLOCK driver": [[20, "clock-driver"]], "CLOCK HAL": [[21, "clock-hal"]], "CLOCK": [[22, "clock"]], "COMP driver": [[23, "comp-driver"]], "COMP HAL": [[24, "comp-hal"]], "COMP HALY": [[25, "comp-haly"]], "COMP": [[26, "comp"]], "CRACEN HAL": [[27, "cracen-hal"]], "CRACEN": [[28, "cracen"]], "CTRL-AP HAL": [[29, "ctrl-ap-hal"]], "CTRL-AP": [[30, "ctrl-ap"]], "DCNF HAL": [[31, "dcnf-hal"]], "DCNF": [[32, "dcnf"]], "DPPI driver": [[33, "dppi-driver"]], "DPPI HAL": [[34, "dppi-hal"]], "DPPI HALY": [[35, "dppi-haly"]], "DPPI": [[36, "dppi"]], "ECB HAL": [[37, "ecb-hal"]], "ECB": [[38, "ecb"]], "EGU driver": [[39, "egu-driver"]], "EGU HAL": [[40, "egu-hal"]], "EGU": [[41, "egu"]], "EXMIF HAL": [[42, "exmif-hal"]], "EXMIF": [[43, "exmif"]], "FICR HAL": [[44, "ficr-hal"]], "FPU HAL": [[45, "fpu-hal"]], "FPU": [[46, "fpu"]], "GLITCHDET HAL": [[47, "glitchdet-hal"]], "GPIO HAL": [[48, "gpio-hal"]], "GPIO HALY": [[49, "gpio-haly"]], "GPIO": [[50, "gpio"]], "GPIOTE driver": [[51, "gpiote-driver"]], "GPIOTE HAL": [[52, "gpiote-hal"]], "GPIOTE HALY": [[53, "gpiote-haly"]], "GPIOTE": [[54, "gpiote"]], "GRTC driver": [[55, "grtc-driver"]], "GRTC HAL": [[56, "grtc-hal"]], "GRTC HALY": [[57, "grtc-haly"]], "GRTC": [[58, "grtc"]], "HSFLL HAL": [[59, "hsfll-hal"]], "I2S driver": [[60, "i2s-driver"]], "I2S HAL": [[61, "i2s-hal"]], "I2S HALY": [[62, "i2s-haly"]], "I2S": [[63, "i2s"]], "ICR": [[64, "icr"]], "Drivers": [[65, "drivers"]], "IPC driver": [[66, "ipc-driver"]], "IPC HAL": [[67, "ipc-hal"]], "IPC": [[68, "ipc"]], "IPCT HAL": [[69, "ipct-hal"]], "IPCT": [[70, "ipct"]], "KMU HAL": [[71, "kmu-hal"]], "KMU": [[72, "kmu"]], "LPCOMP driver": [[73, "lpcomp-driver"]], "LPCOMP HAL": [[74, "lpcomp-hal"]], "LPCOMP HALY": [[75, "lpcomp-haly"]], "LPCOMP": [[76, "lpcomp"]], "LRCCONF HAL": [[77, "lrcconf-hal"]], "LRC": [[78, "lrc"]], "MEMCONF HAL": [[79, "memconf-hal"]], "MEMCONF": [[80, "memconf"]], "MPC HAL": [[81, "mpc-hal"]], "MPC": [[82, "mpc"]], "MPU HAL": [[83, "mpu-hal"]], "MPU": [[84, "mpu"]], "MUTEX HAL": [[85, "mutex-hal"]], "MUTEX": [[86, "mutex"]], "MVDMA HAL": [[87, "mvdma-hal"]], "MVDMA HALY": [[88, "mvdma-haly"]], "MVDMA": [[89, "mvdma"]], "MWU HAL": [[90, "mwu-hal"]], "MWU": [[91, "mwu"]], "NFCT driver": [[92, "nfct-driver"]], "NFCT HAL": [[93, "nfct-hal"]], "NFCT": [[94, "nfct"]], "NVMC driver": [[95, "nvmc-driver"]], "NVMC HAL": [[96, "nvmc-hal"]], "NVMC": [[97, "nvmc"]], "OSCILLATORS HAL": [[98, "oscillators-hal"]], "PDM driver": [[99, "pdm-driver"]], "PDM HAL": [[100, "pdm-hal"]], "PDM HALY": [[101, "pdm-haly"]], "PDM": [[102, "pdm"]], "POWER driver": [[103, "power-driver"]], "POWER HAL": [[104, "power-hal"]], "POWER": [[105, "power"]], "PPI driver": [[106, "ppi-driver"]], "PPI HAL": [[107, "ppi-hal"]], "PPI": [[108, "ppi"]], "PPIB HAL": [[109, "ppib-hal"]], "PPIB": [[110, "ppib"]], "PWM driver": [[111, "pwm-driver"]], "PWM HAL": [[112, "pwm-hal"]], "PWM HALY": [[113, "pwm-haly"]], "PWM": [[114, "pwm"]], "QDEC driver": [[115, "qdec-driver"]], "QDEC HAL": [[116, "qdec-hal"]], "QDEC HALY": [[117, "qdec-haly"]], "QDEC": [[118, "qdec"]], "QSPI driver": [[119, "qspi-driver"]], "QSPI HAL": [[120, "qspi-hal"]], "QSPI": [[121, "qspi"]], "RADIO HAL": [[122, "radio-hal"]], "RADIO": [[123, "radio"]], "RAMC HAL": [[124, "ramc-hal"]], "RAMC": [[125, "ramc"]], "REGULATORS HAL": [[126, "regulators-hal"]], "RESET HAL": [[127, "reset-hal"]], "RESETINFO HAL": [[128, "resetinfo-hal"]], "RESETINFO": [[129, "resetinfo"]], "RNG driver": [[130, "rng-driver"]], "RNG HAL": [[131, "rng-hal"]], "RNG": [[132, "rng"]], "RRAMC driver": [[133, "rramc-driver"]], "RRAMC HAL": [[134, "rramc-hal"]], "RRAMC HALY": [[135, "rramc-haly"]], "RRAMC": [[136, "rramc"]], "RTC driver": [[137, "rtc-driver"]], "RTC HAL": [[138, "rtc-hal"]], "RTC HALY": [[139, "rtc-haly"]], "RTC": [[140, "rtc"]], "SAADC driver": [[141, "saadc-driver"]], "SAADC HAL": [[142, "saadc-hal"]], "SAADC HALY": [[143, "saadc-haly"]], "SAADC": [[144, "saadc"]], "SPI driver": [[145, "spi-driver"]], "SPI HAL": [[146, "spi-hal"]], "SPI": [[147, "spi"]], "SPIM driver": [[148, "spim-driver"]], "SPIM HAL": [[149, "spim-hal"]], "SPIM HALY": [[150, "spim-haly"]], "SPIM": [[151, "spim"]], "SPIS driver": [[152, "spis-driver"]], "SPIS HAL": [[153, "spis-hal"]], "SPIS": [[154, "spis"]], "SPU HAL": [[155, "spu-hal"]], "SPU": [[156, "spu"]], "STM HAL": [[157, "stm-hal"]], "STM": [[158, "stm"]], "SYSTICK driver": [[159, "systick-driver"]], "SYSTICK HAL": [[160, "systick-hal"]], "SYSTICK": [[161, "systick"]], "TAMPC HAL": [[162, "tampc-hal"]], "TAMPC": [[163, "tampc"]], "TBM driver": [[164, "tbm-driver"]], "TBM HAL": [[165, "tbm-hal"]], "TBM HALY": [[166, "tbm-haly"]], "TBM": [[167, "tbm"]], "TDM HAL": [[168, "tdm-hal"]], "TDM": [[169, "tdm"]], "TEMP driver": [[170, "temp-driver"]], "TEMP HAL": [[171, "temp-hal"]], "TEMP HALY": [[172, "temp-haly"]], "TEMP": [[173, "temp"]], "TIMER driver": [[174, "timer-driver"]], "TIMER HAL": [[175, "timer-hal"]], "TIMER HALY": [[176, "timer-haly"]], "TIMER": [[177, "timer"]], "TWI driver": [[178, "twi-driver"]], "TWI HAL": [[179, "twi-hal"]], "TWI": [[180, "twi"]], "TWIM driver": [[181, "twim-driver"]], "TWIM HAL": [[182, "twim-hal"]], "TWIM HALY": [[183, "twim-haly"]], "TWIM": [[184, "twim"]], "TWIS driver": [[185, "twis-driver"]], "TWIS HAL": [[186, "twis-hal"]], "TWIS": [[187, "twis"]], "UART driver": [[188, "uart-driver"]], "UART HAL": [[189, "uart-hal"]], "UART": [[190, "uart"]], "UARTE driver": [[191, "uarte-driver"]], "UARTE HAL": [[192, "uarte-hal"]], "UARTE HALY": [[193, "uarte-haly"]], "UARTE": [[194, "uarte"]], "UICR HAL": [[195, "uicr-hal"]], "USBD driver": [[196, "usbd-driver"]], "USBD HAL": [[197, "usbd-hal"]], "USBD": [[198, "usbd"]], "USBHS HAL": [[199, "usbhs-hal"]], "USBHS": [[200, "usbhs"]], "USBREG driver": [[201, "usbreg-driver"]], "USBREG HAL": [[202, "usbreg-hal"]], "VMC HAL": [[203, "vmc-hal"]], "VMC": [[204, "vmc"]], "VPR CLIC HAL": [[205, "vpr-clic-hal"]], "VPR CSR HAL": [[206, "vpr-csr-hal"]], "VPR CSR VEVIF HAL": [[207, "vpr-csr-vevif-hal"]], "VPR CSR VIO HAL": [[208, "vpr-csr-vio-hal"]], "VPR CSR VTIM HAL": [[209, "vpr-csr-vtim-hal"]], "VPR HAL": [[210, "vpr-hal"]], "VPR HALY": [[211, "vpr-haly"]], "VPR": [[212, "vpr"]], "VEVIF driver": [[213, "vevif-driver"]], "VREQCTRL HAL": [[214, "vreqctrl-hal"]], "WDT driver": [[215, "wdt-driver"]], "WDT HAL": [[216, "wdt-hal"]], "WDT HALY": [[217, "wdt-haly"]], "WDT": [[218, "wdt"]], "Driver support overview": [[219, "driver-support-overview"]], "Introduction and configuration": [[220, "introduction-and-configuration"]], "Integration": [[220, "index_1nrfx_integration"]], "IRQ handlers": [[220, "index_1nrfx_irq_handlers"]], "Configuration": [[220, "index_1nrfx_configuration"]], "API change procedure": [[220, "index_1nrfx_api_change_procedure"]], "Additional requirements": [[220, "index_1nrfx_additional_reqs"]], "nRF51 Series Drivers": [[221, "nrf51-series-drivers"]], "nRF52805 Drivers": [[222, "nrf52805-drivers"]], "nRF52810/nRF52811 Drivers": [[223, "nrf52810-nrf52811-drivers"]], "nRF52820 Drivers": [[224, "nrf52820-drivers"]], "nRF52832 Drivers": [[225, "nrf52832-drivers"]], "nRF52833 Drivers": [[226, "nrf52833-drivers"]], "nRF52840 Drivers": [[227, "nrf52840-drivers"]], "nRF5340 drivers": [[228, "nrf5340-drivers"]], "nRF54H20 drivers": [[229, "nrf54h20-drivers"]], "nRF54L15 EngA drivers": [[230, "nrf54l15-enga-drivers"]], "nRF91 Series drivers": [[231, "nrf91-series-drivers"]], "Atomic operations API": [[232, "atomic-operations-api"]], "Bitmask module": [[233, "bitmask-module"]], "Common module": [[234, "common-module"]], "Common configuration": [[235, "common-configuration"]], "Common nrfy module": [[236, "common-nrfy-module"]], "Core-dependent functionality": [[237, "core-dependent-functionality"]], "Global Error Codes": [[238, "global-error-codes"]], "Generic flag allocator": [[239, "generic-flag-allocator"]], "nrfx_glue.h": [[240, "nrfx-glue-h"]], "Generic PPI Layer": [[241, "generic-ppi-layer"]], "nrfx API": [[242, "nrfx-api"]], "APB bus support": [[243, "apb-bus-support"]], "IPCT support": [[244, "ipct-support"]], "nrfx_log.h": [[245, "nrfx-log-h"]], "Peripheral Resource Sharing (PRS)": [[246, "peripheral-resource-sharing-prs"]], "Generic RAM control layer": [[247, "generic-ram-control-layer"]], "Generic Reset Reason layer": [[248, "generic-reset-reason-layer"]], "Generic Vector DMA layer": [[249, "generic-vector-dma-layer"]]}, "indexentries": {"nrf_aar_has_addrptr (c macro)": [[2, "c.NRF_AAR_HAS_ADDRPTR"]], "nrf_aar_has_error (c macro)": [[2, "c.NRF_AAR_HAS_ERROR"]], "nrf_aar_has_in_ptr (c macro)": [[2, "c.NRF_AAR_HAS_IN_PTR"]], "nrf_aar_has_irkptr (c macro)": [[2, "c.NRF_AAR_HAS_IRKPTR"]], "nrf_aar_has_maxresolved (c macro)": [[2, "c.NRF_AAR_HAS_MAXRESOLVED"]], "nrf_aar_has_nirk (c macro)": [[2, "c.NRF_AAR_HAS_NIRK"]], "nrf_aar_has_out_amount (c macro)": [[2, "c.NRF_AAR_HAS_OUT_AMOUNT"]], "nrf_aar_has_out_ptr (c macro)": [[2, "c.NRF_AAR_HAS_OUT_PTR"]], "nrf_aar_has_scratchptr (c macro)": [[2, "c.NRF_AAR_HAS_SCRATCHPTR"]], "nrf_aar_has_status (c macro)": [[2, "c.NRF_AAR_HAS_STATUS"]], "nrf_aar_addr_pointer_get (c function)": [[2, "c.nrf_aar_addr_pointer_get"]], "nrf_aar_addr_pointer_set (c function)": [[2, "c.nrf_aar_addr_pointer_set"]], "nrf_aar_disable (c function)": [[2, "c.nrf_aar_disable"]], "nrf_aar_enable (c function)": [[2, "c.nrf_aar_enable"]], "nrf_aar_error_get (c function)": [[2, "c.nrf_aar_error_get"]], "nrf_aar_error_t (c enum)": [[2, "c.nrf_aar_error_t"]], "nrf_aar_error_t.nrf_aar_error_dma_error (c enumerator)": [[2, "c.nrf_aar_error_t.NRF_AAR_ERROR_DMA_ERROR"]], "nrf_aar_error_t.nrf_aar_error_no_error (c enumerator)": [[2, "c.nrf_aar_error_t.NRF_AAR_ERROR_NO_ERROR"]], "nrf_aar_error_t.nrf_aar_error_premature_inptr_end (c enumerator)": [[2, "c.nrf_aar_error_t.NRF_AAR_ERROR_PREMATURE_INPTR_END"]], "nrf_aar_error_t.nrf_aar_error_premature_outptr_end (c enumerator)": [[2, "c.nrf_aar_error_t.NRF_AAR_ERROR_PREMATURE_OUTPTR_END"]], "nrf_aar_event_address_get (c function)": [[2, "c.nrf_aar_event_address_get"]], "nrf_aar_event_check (c function)": [[2, "c.nrf_aar_event_check"]], "nrf_aar_event_clear (c function)": [[2, "c.nrf_aar_event_clear"]], "nrf_aar_event_t (c enum)": [[2, "c.nrf_aar_event_t"]], "nrf_aar_event_t.nrf_aar_event_end (c enumerator)": [[2, "c.nrf_aar_event_t.NRF_AAR_EVENT_END"]], "nrf_aar_event_t.nrf_aar_event_error (c enumerator)": [[2, "c.nrf_aar_event_t.NRF_AAR_EVENT_ERROR"]], "nrf_aar_event_t.nrf_aar_event_notresolved (c enumerator)": [[2, "c.nrf_aar_event_t.NRF_AAR_EVENT_NOTRESOLVED"]], "nrf_aar_event_t.nrf_aar_event_resolved (c enumerator)": [[2, "c.nrf_aar_event_t.NRF_AAR_EVENT_RESOLVED"]], "nrf_aar_in_ptr_get (c function)": [[2, "c.nrf_aar_in_ptr_get"]], "nrf_aar_in_ptr_set (c function)": [[2, "c.nrf_aar_in_ptr_set"]], "nrf_aar_int_disable (c function)": [[2, "c.nrf_aar_int_disable"]], "nrf_aar_int_enable (c function)": [[2, "c.nrf_aar_int_enable"]], "nrf_aar_int_enable_check (c function)": [[2, "c.nrf_aar_int_enable_check"]], "nrf_aar_int_mask_t (c enum)": [[2, "c.nrf_aar_int_mask_t"]], "nrf_aar_int_mask_t.nrf_aar_int_end_mask (c enumerator)": [[2, "c.nrf_aar_int_mask_t.NRF_AAR_INT_END_MASK"]], "nrf_aar_int_mask_t.nrf_aar_int_error_mask (c enumerator)": [[2, "c.nrf_aar_int_mask_t.NRF_AAR_INT_ERROR_MASK"]], "nrf_aar_int_mask_t.nrf_aar_int_notresolved_mask (c enumerator)": [[2, "c.nrf_aar_int_mask_t.NRF_AAR_INT_NOTRESOLVED_MASK"]], "nrf_aar_int_mask_t.nrf_aar_int_resolved_mask (c enumerator)": [[2, "c.nrf_aar_int_mask_t.NRF_AAR_INT_RESOLVED_MASK"]], "nrf_aar_irk_number_get (c function)": [[2, "c.nrf_aar_irk_number_get"]], "nrf_aar_irk_number_set (c function)": [[2, "c.nrf_aar_irk_number_set"]], "nrf_aar_irk_pointer_get (c function)": [[2, "c.nrf_aar_irk_pointer_get"]], "nrf_aar_irk_pointer_set (c function)": [[2, "c.nrf_aar_irk_pointer_set"]], "nrf_aar_maxresolved_get (c function)": [[2, "c.nrf_aar_maxresolved_get"]], "nrf_aar_maxresolved_set (c function)": [[2, "c.nrf_aar_maxresolved_set"]], "nrf_aar_out_amount_get (c function)": [[2, "c.nrf_aar_out_amount_get"]], "nrf_aar_out_ptr_get (c function)": [[2, "c.nrf_aar_out_ptr_get"]], "nrf_aar_out_ptr_set (c function)": [[2, "c.nrf_aar_out_ptr_set"]], "nrf_aar_publish_clear (c function)": [[2, "c.nrf_aar_publish_clear"]], "nrf_aar_publish_set (c function)": [[2, "c.nrf_aar_publish_set"]], "nrf_aar_resolution_status_get (c function)": [[2, "c.nrf_aar_resolution_status_get"]], "nrf_aar_scratch_pointer_get (c function)": [[2, "c.nrf_aar_scratch_pointer_get"]], "nrf_aar_scratch_pointer_set (c function)": [[2, "c.nrf_aar_scratch_pointer_set"]], "nrf_aar_subscribe_clear (c function)": [[2, "c.nrf_aar_subscribe_clear"]], "nrf_aar_subscribe_set (c function)": [[2, "c.nrf_aar_subscribe_set"]], "nrf_aar_task_address_get (c function)": [[2, "c.nrf_aar_task_address_get"]], "nrf_aar_task_t (c enum)": [[2, "c.nrf_aar_task_t"]], "nrf_aar_task_t.nrf_aar_task_start (c enumerator)": [[2, "c.nrf_aar_task_t.NRF_AAR_TASK_START"]], "nrf_aar_task_t.nrf_aar_task_stop (c enumerator)": [[2, "c.nrf_aar_task_t.NRF_AAR_TASK_STOP"]], "nrf_aar_task_trigger (c function)": [[2, "c.nrf_aar_task_trigger"]], "nrf_acl_perm_t (c enum)": [[4, "c.nrf_acl_perm_t"]], "nrf_acl_perm_t.nrf_acl_perm_no_read_no_write (c enumerator)": [[4, "c.nrf_acl_perm_t.NRF_ACL_PERM_NO_READ_NO_WRITE"]], "nrf_acl_perm_t.nrf_acl_perm_no_read_write (c enumerator)": [[4, "c.nrf_acl_perm_t.NRF_ACL_PERM_NO_READ_WRITE"]], "nrf_acl_perm_t.nrf_acl_perm_read_no_write (c enumerator)": [[4, "c.nrf_acl_perm_t.NRF_ACL_PERM_READ_NO_WRITE"]], "nrf_acl_region_address_get (c function)": [[4, "c.nrf_acl_region_address_get"]], "nrf_acl_region_perm_get (c function)": [[4, "c.nrf_acl_region_perm_get"]], "nrf_acl_region_set (c function)": [[4, "c.nrf_acl_region_set"]], "nrf_acl_region_size_get (c function)": [[4, "c.nrf_acl_region_size_get"]], "nrfx_adc_default_channel (c macro)": [[6, "c.NRFX_ADC_DEFAULT_CHANNEL"]], "nrfx_adc_default_config (c macro)": [[6, "c.NRFX_ADC_DEFAULT_CONFIG"]], "nrfx_adc_all_channels_disable (c function)": [[6, "c.nrfx_adc_all_channels_disable"]], "nrfx_adc_buffer_convert (c function)": [[6, "c.nrfx_adc_buffer_convert"]], "nrfx_adc_channel_disable (c function)": [[6, "c.nrfx_adc_channel_disable"]], "nrfx_adc_channel_enable (c function)": [[6, "c.nrfx_adc_channel_enable"]], "nrfx_adc_channel_s (c struct)": [[6, "c.nrfx_adc_channel_s"]], "nrfx_adc_channel_s.config (c var)": [[6, "c.nrfx_adc_channel_s.config"]], "nrfx_adc_channel_s.p_next (c var)": [[6, "c.nrfx_adc_channel_s.p_next"]], "nrfx_adc_channel_t (c type)": [[6, "c.nrfx_adc_channel_t"]], "nrfx_adc_config_t (c struct)": [[6, "c.nrfx_adc_config_t"]], "nrfx_adc_config_t.interrupt_priority (c var)": [[6, "c.nrfx_adc_config_t.interrupt_priority"]], "nrfx_adc_done_evt_t (c struct)": [[6, "c.nrfx_adc_done_evt_t"]], "nrfx_adc_done_evt_t.p_buffer (c var)": [[6, "c.nrfx_adc_done_evt_t.p_buffer"]], "nrfx_adc_done_evt_t.size (c var)": [[6, "c.nrfx_adc_done_evt_t.size"]], "nrfx_adc_event_handler_t (c type)": [[6, "c.nrfx_adc_event_handler_t"]], "nrfx_adc_evt_t (c struct)": [[6, "c.nrfx_adc_evt_t"]], "nrfx_adc_evt_t.data (c var)": [[6, "c.nrfx_adc_evt_t.data"]], "nrfx_adc_evt_t.done (c var)": [[6, "c.nrfx_adc_evt_t.done"]], "nrfx_adc_evt_t.sample (c var)": [[6, "c.nrfx_adc_evt_t.sample"]], "nrfx_adc_evt_t.type (c var)": [[6, "c.nrfx_adc_evt_t.type"]], "nrfx_adc_evt_type_t (c enum)": [[6, "c.nrfx_adc_evt_type_t"]], "nrfx_adc_evt_type_t.nrfx_adc_evt_done (c enumerator)": [[6, "c.nrfx_adc_evt_type_t.NRFX_ADC_EVT_DONE"]], "nrfx_adc_evt_type_t.nrfx_adc_evt_sample (c enumerator)": [[6, "c.nrfx_adc_evt_type_t.NRFX_ADC_EVT_SAMPLE"]], "nrfx_adc_init (c function)": [[6, "c.nrfx_adc_init"]], "nrfx_adc_init_check (c function)": [[6, "c.nrfx_adc_init_check"]], "nrfx_adc_is_busy (c function)": [[6, "c.nrfx_adc_is_busy"]], "nrfx_adc_sample (c function)": [[6, "c.nrfx_adc_sample"]], "nrfx_adc_sample_convert (c function)": [[6, "c.nrfx_adc_sample_convert"]], "nrfx_adc_sample_evt_t (c struct)": [[6, "c.nrfx_adc_sample_evt_t"]], "nrfx_adc_sample_evt_t.sample (c var)": [[6, "c.nrfx_adc_sample_evt_t.sample"]], "nrfx_adc_start_task_get (c function)": [[6, "c.nrfx_adc_start_task_get"]], "nrfx_adc_uninit (c function)": [[6, "c.nrfx_adc_uninit"]], "nrf_adc_busy_check (c function)": [[7, "c.nrf_adc_busy_check"]], "nrf_adc_config_extref_t (c enum)": [[7, "c.nrf_adc_config_extref_t"]], "nrf_adc_config_extref_t.nrf_adc_config_extrefsel_aref0 (c enumerator)": [[7, "c.nrf_adc_config_extref_t.NRF_ADC_CONFIG_EXTREFSEL_AREF0"]], "nrf_adc_config_extref_t.nrf_adc_config_extrefsel_aref1 (c enumerator)": [[7, "c.nrf_adc_config_extref_t.NRF_ADC_CONFIG_EXTREFSEL_AREF1"]], "nrf_adc_config_extref_t.nrf_adc_config_extrefsel_none (c enumerator)": [[7, "c.nrf_adc_config_extref_t.NRF_ADC_CONFIG_EXTREFSEL_NONE"]], "nrf_adc_config_input_t (c enum)": [[7, "c.nrf_adc_config_input_t"]], "nrf_adc_config_input_t.nrf_adc_config_input_0 (c enumerator)": [[7, "c.nrf_adc_config_input_t.NRF_ADC_CONFIG_INPUT_0"]], "nrf_adc_config_input_t.nrf_adc_config_input_1 (c enumerator)": [[7, "c.nrf_adc_config_input_t.NRF_ADC_CONFIG_INPUT_1"]], "nrf_adc_config_input_t.nrf_adc_config_input_2 (c enumerator)": [[7, "c.nrf_adc_config_input_t.NRF_ADC_CONFIG_INPUT_2"]], "nrf_adc_config_input_t.nrf_adc_config_input_3 (c enumerator)": [[7, "c.nrf_adc_config_input_t.NRF_ADC_CONFIG_INPUT_3"]], "nrf_adc_config_input_t.nrf_adc_config_input_4 (c enumerator)": [[7, "c.nrf_adc_config_input_t.NRF_ADC_CONFIG_INPUT_4"]], "nrf_adc_config_input_t.nrf_adc_config_input_5 (c enumerator)": [[7, "c.nrf_adc_config_input_t.NRF_ADC_CONFIG_INPUT_5"]], "nrf_adc_config_input_t.nrf_adc_config_input_6 (c enumerator)": [[7, "c.nrf_adc_config_input_t.NRF_ADC_CONFIG_INPUT_6"]], "nrf_adc_config_input_t.nrf_adc_config_input_7 (c enumerator)": [[7, "c.nrf_adc_config_input_t.NRF_ADC_CONFIG_INPUT_7"]], "nrf_adc_config_input_t.nrf_adc_config_input_disabled (c enumerator)": [[7, "c.nrf_adc_config_input_t.NRF_ADC_CONFIG_INPUT_DISABLED"]], "nrf_adc_config_reference_t (c enum)": [[7, "c.nrf_adc_config_reference_t"]], "nrf_adc_config_reference_t.nrf_adc_config_ref_ext (c enumerator)": [[7, "c.nrf_adc_config_reference_t.NRF_ADC_CONFIG_REF_EXT"]], "nrf_adc_config_reference_t.nrf_adc_config_ref_supply_one_half (c enumerator)": [[7, "c.nrf_adc_config_reference_t.NRF_ADC_CONFIG_REF_SUPPLY_ONE_HALF"]], "nrf_adc_config_reference_t.nrf_adc_config_ref_supply_one_third (c enumerator)": [[7, "c.nrf_adc_config_reference_t.NRF_ADC_CONFIG_REF_SUPPLY_ONE_THIRD"]], "nrf_adc_config_reference_t.nrf_adc_config_ref_vbg (c enumerator)": [[7, "c.nrf_adc_config_reference_t.NRF_ADC_CONFIG_REF_VBG"]], "nrf_adc_config_resolution_t (c enum)": [[7, "c.nrf_adc_config_resolution_t"]], "nrf_adc_config_resolution_t.nrf_adc_config_res_10bit (c enumerator)": [[7, "c.nrf_adc_config_resolution_t.NRF_ADC_CONFIG_RES_10BIT"]], "nrf_adc_config_resolution_t.nrf_adc_config_res_8bit (c enumerator)": [[7, "c.nrf_adc_config_resolution_t.NRF_ADC_CONFIG_RES_8BIT"]], "nrf_adc_config_resolution_t.nrf_adc_config_res_9bit (c enumerator)": [[7, "c.nrf_adc_config_resolution_t.NRF_ADC_CONFIG_RES_9BIT"]], "nrf_adc_config_scaling_t (c enum)": [[7, "c.nrf_adc_config_scaling_t"]], "nrf_adc_config_scaling_t.nrf_adc_config_scaling_input_full_scale (c enumerator)": [[7, "c.nrf_adc_config_scaling_t.NRF_ADC_CONFIG_SCALING_INPUT_FULL_SCALE"]], "nrf_adc_config_scaling_t.nrf_adc_config_scaling_input_one_third (c enumerator)": [[7, "c.nrf_adc_config_scaling_t.NRF_ADC_CONFIG_SCALING_INPUT_ONE_THIRD"]], "nrf_adc_config_scaling_t.nrf_adc_config_scaling_input_two_thirds (c enumerator)": [[7, "c.nrf_adc_config_scaling_t.NRF_ADC_CONFIG_SCALING_INPUT_TWO_THIRDS"]], "nrf_adc_config_scaling_t.nrf_adc_config_scaling_supply_one_third (c enumerator)": [[7, "c.nrf_adc_config_scaling_t.NRF_ADC_CONFIG_SCALING_SUPPLY_ONE_THIRD"]], "nrf_adc_config_scaling_t.nrf_adc_config_scaling_supply_two_thirds (c enumerator)": [[7, "c.nrf_adc_config_scaling_t.NRF_ADC_CONFIG_SCALING_SUPPLY_TWO_THIRDS"]], "nrf_adc_config_t (c struct)": [[7, "c.nrf_adc_config_t"]], "nrf_adc_config_t.extref (c var)": [[7, "c.nrf_adc_config_t.extref"]], "nrf_adc_config_t.input (c var)": [[7, "c.nrf_adc_config_t.input"]], "nrf_adc_config_t.reference (c var)": [[7, "c.nrf_adc_config_t.reference"]], "nrf_adc_config_t.resolution (c var)": [[7, "c.nrf_adc_config_t.resolution"]], "nrf_adc_config_t.scaling (c var)": [[7, "c.nrf_adc_config_t.scaling"]], "nrf_adc_disable (c function)": [[7, "c.nrf_adc_disable"]], "nrf_adc_enable (c function)": [[7, "c.nrf_adc_enable"]], "nrf_adc_enable_check (c function)": [[7, "c.nrf_adc_enable_check"]], "nrf_adc_event_address_get (c function)": [[7, "c.nrf_adc_event_address_get"]], "nrf_adc_event_check (c function)": [[7, "c.nrf_adc_event_check"]], "nrf_adc_event_clear (c function)": [[7, "c.nrf_adc_event_clear"]], "nrf_adc_event_t (c enum)": [[7, "c.nrf_adc_event_t"]], "nrf_adc_event_t.nrf_adc_event_end (c enumerator)": [[7, "c.nrf_adc_event_t.NRF_ADC_EVENT_END"]], "nrf_adc_init (c function)": [[7, "c.nrf_adc_init"]], "nrf_adc_int_disable (c function)": [[7, "c.nrf_adc_int_disable"]], "nrf_adc_int_enable (c function)": [[7, "c.nrf_adc_int_enable"]], "nrf_adc_int_enable_check (c function)": [[7, "c.nrf_adc_int_enable_check"]], "nrf_adc_int_mask_t (c enum)": [[7, "c.nrf_adc_int_mask_t"]], "nrf_adc_int_mask_t.nrf_adc_int_end_mask (c enumerator)": [[7, "c.nrf_adc_int_mask_t.NRF_ADC_INT_END_MASK"]], "nrf_adc_result_get (c function)": [[7, "c.nrf_adc_result_get"]], "nrf_adc_task_address_get (c function)": [[7, "c.nrf_adc_task_address_get"]], "nrf_adc_task_t (c enum)": [[7, "c.nrf_adc_task_t"]], "nrf_adc_task_t.nrf_adc_task_start (c enumerator)": [[7, "c.nrf_adc_task_t.NRF_ADC_TASK_START"]], "nrf_adc_task_t.nrf_adc_task_stop (c enumerator)": [[7, "c.nrf_adc_task_t.NRF_ADC_TASK_STOP"]], "nrf_adc_task_trigger (c function)": [[7, "c.nrf_adc_task_trigger"]], "nrf_adc_value_t (c type)": [[7, "c.nrf_adc_value_t"]], "nrf_auxpll_config_get (c function)": [[9, "c.nrf_auxpll_config_get"]], "nrf_auxpll_config_set (c function)": [[9, "c.nrf_auxpll_config_set"]], "nrf_auxpll_config_t (c struct)": [[9, "c.nrf_auxpll_config_t"]], "nrf_auxpll_config_t.current_tune (c var)": [[9, "c.nrf_auxpll_config_t.current_tune"]], "nrf_auxpll_config_t.dither_off (c var)": [[9, "c.nrf_auxpll_config_t.dither_off"]], "nrf_auxpll_config_t.outdrive (c var)": [[9, "c.nrf_auxpll_config_t.outdrive"]], "nrf_auxpll_config_t.range (c var)": [[9, "c.nrf_auxpll_config_t.range"]], "nrf_auxpll_config_t.sdm_off (c var)": [[9, "c.nrf_auxpll_config_t.sdm_off"]], "nrf_auxpll_ctrl_freqinc_get (c function)": [[9, "c.nrf_auxpll_ctrl_freqinc_get"]], "nrf_auxpll_ctrl_freqinc_period_get (c function)": [[9, "c.nrf_auxpll_ctrl_freqinc_period_get"]], "nrf_auxpll_ctrl_freqinc_period_set (c function)": [[9, "c.nrf_auxpll_ctrl_freqinc_period_set"]], "nrf_auxpll_ctrl_freqinc_set (c function)": [[9, "c.nrf_auxpll_ctrl_freqinc_set"]], "nrf_auxpll_ctrl_frequency_get (c function)": [[9, "c.nrf_auxpll_ctrl_frequency_get"]], "nrf_auxpll_ctrl_frequency_set (c function)": [[9, "c.nrf_auxpll_ctrl_frequency_set"]], "nrf_auxpll_ctrl_mode_get (c function)": [[9, "c.nrf_auxpll_ctrl_mode_get"]], "nrf_auxpll_ctrl_mode_set (c function)": [[9, "c.nrf_auxpll_ctrl_mode_set"]], "nrf_auxpll_ctrl_mode_t (c enum)": [[9, "c.nrf_auxpll_ctrl_mode_t"]], "nrf_auxpll_ctrl_mode_t.nrf_auxpll_ctrl_mode_auto (c enumerator)": [[9, "c.nrf_auxpll_ctrl_mode_t.NRF_AUXPLL_CTRL_MODE_AUTO"]], "nrf_auxpll_ctrl_mode_t.nrf_auxpll_ctrl_mode_freerun (c enumerator)": [[9, "c.nrf_auxpll_ctrl_mode_t.NRF_AUXPLL_CTRL_MODE_FREERUN"]], "nrf_auxpll_ctrl_mode_t.nrf_auxpll_ctrl_mode_locked (c enumerator)": [[9, "c.nrf_auxpll_ctrl_mode_t.NRF_AUXPLL_CTRL_MODE_LOCKED"]], "nrf_auxpll_ctrl_outsel_get (c function)": [[9, "c.nrf_auxpll_ctrl_outsel_get"]], "nrf_auxpll_ctrl_outsel_set (c function)": [[9, "c.nrf_auxpll_ctrl_outsel_set"]], "nrf_auxpll_ctrl_outsel_t (c enum)": [[9, "c.nrf_auxpll_ctrl_outsel_t"]], "nrf_auxpll_ctrl_outsel_t.nrf_auxpll_ctrl_outsel_div_1 (c enumerator)": [[9, "c.nrf_auxpll_ctrl_outsel_t.NRF_AUXPLL_CTRL_OUTSEL_DIV_1"]], "nrf_auxpll_ctrl_outsel_t.nrf_auxpll_ctrl_outsel_div_12 (c enumerator)": [[9, "c.nrf_auxpll_ctrl_outsel_t.NRF_AUXPLL_CTRL_OUTSEL_DIV_12"]], "nrf_auxpll_ctrl_outsel_t.nrf_auxpll_ctrl_outsel_div_16 (c enumerator)": [[9, "c.nrf_auxpll_ctrl_outsel_t.NRF_AUXPLL_CTRL_OUTSEL_DIV_16"]], "nrf_auxpll_ctrl_outsel_t.nrf_auxpll_ctrl_outsel_div_2 (c enumerator)": [[9, "c.nrf_auxpll_ctrl_outsel_t.NRF_AUXPLL_CTRL_OUTSEL_DIV_2"]], "nrf_auxpll_ctrl_outsel_t.nrf_auxpll_ctrl_outsel_div_3 (c enumerator)": [[9, "c.nrf_auxpll_ctrl_outsel_t.NRF_AUXPLL_CTRL_OUTSEL_DIV_3"]], "nrf_auxpll_ctrl_outsel_t.nrf_auxpll_ctrl_outsel_div_4 (c enumerator)": [[9, "c.nrf_auxpll_ctrl_outsel_t.NRF_AUXPLL_CTRL_OUTSEL_DIV_4"]], "nrf_auxpll_ctrl_outsel_t.nrf_auxpll_ctrl_outsel_div_6 (c enumerator)": [[9, "c.nrf_auxpll_ctrl_outsel_t.NRF_AUXPLL_CTRL_OUTSEL_DIV_6"]], "nrf_auxpll_ctrl_outsel_t.nrf_auxpll_ctrl_outsel_div_8 (c enumerator)": [[9, "c.nrf_auxpll_ctrl_outsel_t.NRF_AUXPLL_CTRL_OUTSEL_DIV_8"]], "nrf_auxpll_ctrl_outsel_t.nrf_auxpll_ctrl_outsel_div_disabled (c enumerator)": [[9, "c.nrf_auxpll_ctrl_outsel_t.NRF_AUXPLL_CTRL_OUTSEL_DIV_DISABLED"]], "nrf_auxpll_divider_range_t (c enum)": [[9, "c.nrf_auxpll_divider_range_t"]], "nrf_auxpll_divider_range_t.nrf_auxpll_divider_range_high (c enumerator)": [[9, "c.nrf_auxpll_divider_range_t.NRF_AUXPLL_DIVIDER_RANGE_HIGH"]], "nrf_auxpll_divider_range_t.nrf_auxpll_divider_range_low (c enumerator)": [[9, "c.nrf_auxpll_divider_range_t.NRF_AUXPLL_DIVIDER_RANGE_LOW"]], "nrf_auxpll_divider_range_t.nrf_auxpll_divider_range_max (c enumerator)": [[9, "c.nrf_auxpll_divider_range_t.NRF_AUXPLL_DIVIDER_RANGE_MAX"]], "nrf_auxpll_divider_range_t.nrf_auxpll_divider_range_mid (c enumerator)": [[9, "c.nrf_auxpll_divider_range_t.NRF_AUXPLL_DIVIDER_RANGE_MID"]], "nrf_auxpll_event_address_get (c function)": [[9, "c.nrf_auxpll_event_address_get"]], "nrf_auxpll_event_check (c function)": [[9, "c.nrf_auxpll_event_check"]], "nrf_auxpll_event_clear (c function)": [[9, "c.nrf_auxpll_event_clear"]], "nrf_auxpll_event_t (c enum)": [[9, "c.nrf_auxpll_event_t"]], "nrf_auxpll_event_t.nrf_auxpll_event_locked (c enumerator)": [[9, "c.nrf_auxpll_event_t.NRF_AUXPLL_EVENT_LOCKED"]], "nrf_auxpll_event_t.nrf_auxpll_event_started (c enumerator)": [[9, "c.nrf_auxpll_event_t.NRF_AUXPLL_EVENT_STARTED"]], "nrf_auxpll_event_t.nrf_auxpll_event_stopped (c enumerator)": [[9, "c.nrf_auxpll_event_t.NRF_AUXPLL_EVENT_STOPPED"]], "nrf_auxpll_int_disable (c function)": [[9, "c.nrf_auxpll_int_disable"]], "nrf_auxpll_int_enable (c function)": [[9, "c.nrf_auxpll_int_enable"]], "nrf_auxpll_int_enable_check (c function)": [[9, "c.nrf_auxpll_int_enable_check"]], "nrf_auxpll_int_mask_t (c enum)": [[9, "c.nrf_auxpll_int_mask_t"]], "nrf_auxpll_int_mask_t.nrf_auxpll_int_locked_mask (c enumerator)": [[9, "c.nrf_auxpll_int_mask_t.NRF_AUXPLL_INT_LOCKED_MASK"]], "nrf_auxpll_int_mask_t.nrf_auxpll_int_started_mask (c enumerator)": [[9, "c.nrf_auxpll_int_mask_t.NRF_AUXPLL_INT_STARTED_MASK"]], "nrf_auxpll_int_mask_t.nrf_auxpll_int_stopped_mask (c enumerator)": [[9, "c.nrf_auxpll_int_mask_t.NRF_AUXPLL_INT_STOPPED_MASK"]], "nrf_auxpll_int_pending_check (c function)": [[9, "c.nrf_auxpll_int_pending_check"]], "nrf_auxpll_lock (c function)": [[9, "c.nrf_auxpll_lock"]], "nrf_auxpll_lock_check (c function)": [[9, "c.nrf_auxpll_lock_check"]], "nrf_auxpll_status_get (c function)": [[9, "c.nrf_auxpll_status_get"]], "nrf_auxpll_status_mask_t (c enum)": [[9, "c.nrf_auxpll_status_mask_t"]], "nrf_auxpll_status_mask_t.mrf_auxpll_status_frequency_actual_mask (c enumerator)": [[9, "c.nrf_auxpll_status_mask_t.MRF_AUXPLL_STATUS_FREQUENCY_ACTUAL_MASK"]], "nrf_auxpll_status_mask_t.nrf_auxpll_status_mode_mask (c enumerator)": [[9, "c.nrf_auxpll_status_mask_t.NRF_AUXPLL_STATUS_MODE_MASK"]], "nrf_auxpll_status_mask_t.nrf_auxpll_status_pll_running_mask (c enumerator)": [[9, "c.nrf_auxpll_status_mask_t.NRF_AUXPLL_STATUS_PLL_RUNNING_MASK"]], "nrf_auxpll_task_address_get (c function)": [[9, "c.nrf_auxpll_task_address_get"]], "nrf_auxpll_task_t (c enum)": [[9, "c.nrf_auxpll_task_t"]], "nrf_auxpll_task_t.nrf_auxpll_task_freq_inc_start (c enumerator)": [[9, "c.nrf_auxpll_task_t.NRF_AUXPLL_TASK_FREQ_INC_START"]], "nrf_auxpll_task_t.nrf_auxpll_task_freq_inc_stop (c enumerator)": [[9, "c.nrf_auxpll_task_t.NRF_AUXPLL_TASK_FREQ_INC_STOP"]], "nrf_auxpll_task_t.nrf_auxpll_task_freq_new_base (c enumerator)": [[9, "c.nrf_auxpll_task_t.NRF_AUXPLL_TASK_FREQ_NEW_BASE"]], "nrf_auxpll_task_t.nrf_auxpll_task_freq_new_fine (c enumerator)": [[9, "c.nrf_auxpll_task_t.NRF_AUXPLL_TASK_FREQ_NEW_FINE"]], "nrf_auxpll_task_t.nrf_auxpll_task_start (c enumerator)": [[9, "c.nrf_auxpll_task_t.NRF_AUXPLL_TASK_START"]], "nrf_auxpll_task_t.nrf_auxpll_task_stop (c enumerator)": [[9, "c.nrf_auxpll_task_t.NRF_AUXPLL_TASK_STOP"]], "nrf_auxpll_task_trigger (c function)": [[9, "c.nrf_auxpll_task_trigger"]], "nrf_auxpll_trim_ctune_get (c function)": [[9, "c.nrf_auxpll_trim_ctune_get"]], "nrf_auxpll_trim_ctune_set (c function)": [[9, "c.nrf_auxpll_trim_ctune_set"]], "nrf_auxpll_unlock (c function)": [[9, "c.nrf_auxpll_unlock"]], "nrfx_bellboard_instance (c macro)": [[10, "c.NRFX_BELLBOARD_INSTANCE"]], "nrfx_bellboard_event_handler_t (c type)": [[10, "c.nrfx_bellboard_event_handler_t"]], "nrfx_bellboard_init (c function)": [[10, "c.nrfx_bellboard_init"]], "nrfx_bellboard_init_check (c function)": [[10, "c.nrfx_bellboard_init_check"]], "nrfx_bellboard_int_disable (c function)": [[10, "c.nrfx_bellboard_int_disable"]], "nrfx_bellboard_int_enable (c function)": [[10, "c.nrfx_bellboard_int_enable"]], "nrfx_bellboard_t (c struct)": [[10, "c.nrfx_bellboard_t"]], "nrfx_bellboard_t.drv_inst_idx (c var)": [[10, "c.nrfx_bellboard_t.drv_inst_idx"]], "nrfx_bellboard_t.int_idx (c var)": [[10, "c.nrfx_bellboard_t.int_idx"]], "nrfx_bellboard_uninit (c function)": [[10, "c.nrfx_bellboard_uninit"]], "nrf_bellboard_events_triggered_count (c macro)": [[11, "c.NRF_BELLBOARD_EVENTS_TRIGGERED_COUNT"]], "nrf_bellboard_event_address_get (c function)": [[11, "c.nrf_bellboard_event_address_get"]], "nrf_bellboard_event_check (c function)": [[11, "c.nrf_bellboard_event_check"]], "nrf_bellboard_event_clear (c function)": [[11, "c.nrf_bellboard_event_clear"]], "nrf_bellboard_event_t (c enum)": [[11, "c.nrf_bellboard_event_t"]], "nrf_bellboard_event_t.nrf_bellboard_event_triggered_0 (c enumerator)": [[11, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_0"]], "nrf_bellboard_event_t.nrf_bellboard_event_triggered_1 (c enumerator)": [[11, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_1"]], "nrf_bellboard_event_t.nrf_bellboard_event_triggered_10 (c enumerator)": [[11, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_10"]], "nrf_bellboard_event_t.nrf_bellboard_event_triggered_11 (c enumerator)": [[11, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_11"]], "nrf_bellboard_event_t.nrf_bellboard_event_triggered_12 (c enumerator)": [[11, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_12"]], "nrf_bellboard_event_t.nrf_bellboard_event_triggered_13 (c enumerator)": [[11, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_13"]], "nrf_bellboard_event_t.nrf_bellboard_event_triggered_14 (c enumerator)": [[11, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_14"]], "nrf_bellboard_event_t.nrf_bellboard_event_triggered_15 (c enumerator)": [[11, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_15"]], "nrf_bellboard_event_t.nrf_bellboard_event_triggered_16 (c enumerator)": [[11, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_16"]], "nrf_bellboard_event_t.nrf_bellboard_event_triggered_17 (c enumerator)": [[11, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_17"]], "nrf_bellboard_event_t.nrf_bellboard_event_triggered_18 (c enumerator)": [[11, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_18"]], "nrf_bellboard_event_t.nrf_bellboard_event_triggered_19 (c enumerator)": [[11, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_19"]], "nrf_bellboard_event_t.nrf_bellboard_event_triggered_2 (c enumerator)": [[11, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_2"]], "nrf_bellboard_event_t.nrf_bellboard_event_triggered_20 (c enumerator)": [[11, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_20"]], "nrf_bellboard_event_t.nrf_bellboard_event_triggered_21 (c enumerator)": [[11, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_21"]], "nrf_bellboard_event_t.nrf_bellboard_event_triggered_22 (c enumerator)": [[11, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_22"]], "nrf_bellboard_event_t.nrf_bellboard_event_triggered_23 (c enumerator)": [[11, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_23"]], "nrf_bellboard_event_t.nrf_bellboard_event_triggered_24 (c enumerator)": [[11, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_24"]], "nrf_bellboard_event_t.nrf_bellboard_event_triggered_25 (c enumerator)": [[11, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_25"]], "nrf_bellboard_event_t.nrf_bellboard_event_triggered_26 (c enumerator)": [[11, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_26"]], "nrf_bellboard_event_t.nrf_bellboard_event_triggered_27 (c enumerator)": [[11, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_27"]], "nrf_bellboard_event_t.nrf_bellboard_event_triggered_28 (c enumerator)": [[11, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_28"]], "nrf_bellboard_event_t.nrf_bellboard_event_triggered_29 (c enumerator)": [[11, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_29"]], "nrf_bellboard_event_t.nrf_bellboard_event_triggered_3 (c enumerator)": [[11, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_3"]], "nrf_bellboard_event_t.nrf_bellboard_event_triggered_30 (c enumerator)": [[11, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_30"]], "nrf_bellboard_event_t.nrf_bellboard_event_triggered_31 (c enumerator)": [[11, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_31"]], "nrf_bellboard_event_t.nrf_bellboard_event_triggered_4 (c enumerator)": [[11, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_4"]], "nrf_bellboard_event_t.nrf_bellboard_event_triggered_5 (c enumerator)": [[11, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_5"]], "nrf_bellboard_event_t.nrf_bellboard_event_triggered_6 (c enumerator)": [[11, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_6"]], "nrf_bellboard_event_t.nrf_bellboard_event_triggered_7 (c enumerator)": [[11, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_7"]], "nrf_bellboard_event_t.nrf_bellboard_event_triggered_8 (c enumerator)": [[11, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_8"]], "nrf_bellboard_event_t.nrf_bellboard_event_triggered_9 (c enumerator)": [[11, "c.nrf_bellboard_event_t.NRF_BELLBOARD_EVENT_TRIGGERED_9"]], "nrf_bellboard_int_disable (c function)": [[11, "c.nrf_bellboard_int_disable"]], "nrf_bellboard_int_enable (c function)": [[11, "c.nrf_bellboard_int_enable"]], "nrf_bellboard_int_enable_check (c function)": [[11, "c.nrf_bellboard_int_enable_check"]], "nrf_bellboard_int_mask_t (c enum)": [[11, "c.nrf_bellboard_int_mask_t"]], "nrf_bellboard_int_mask_t.nrf_bellboard_int_triggered_0_mask (c enumerator)": [[11, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_0_MASK"]], "nrf_bellboard_int_mask_t.nrf_bellboard_int_triggered_10_mask (c enumerator)": [[11, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_10_MASK"]], "nrf_bellboard_int_mask_t.nrf_bellboard_int_triggered_11_mask (c enumerator)": [[11, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_11_MASK"]], "nrf_bellboard_int_mask_t.nrf_bellboard_int_triggered_12_mask (c enumerator)": [[11, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_12_MASK"]], "nrf_bellboard_int_mask_t.nrf_bellboard_int_triggered_13_mask (c enumerator)": [[11, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_13_MASK"]], "nrf_bellboard_int_mask_t.nrf_bellboard_int_triggered_14_mask (c enumerator)": [[11, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_14_MASK"]], "nrf_bellboard_int_mask_t.nrf_bellboard_int_triggered_15_mask (c enumerator)": [[11, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_15_MASK"]], "nrf_bellboard_int_mask_t.nrf_bellboard_int_triggered_16_mask (c enumerator)": [[11, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_16_MASK"]], "nrf_bellboard_int_mask_t.nrf_bellboard_int_triggered_17_mask (c enumerator)": [[11, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_17_MASK"]], "nrf_bellboard_int_mask_t.nrf_bellboard_int_triggered_18_mask (c enumerator)": [[11, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_18_MASK"]], "nrf_bellboard_int_mask_t.nrf_bellboard_int_triggered_19_mask (c enumerator)": [[11, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_19_MASK"]], "nrf_bellboard_int_mask_t.nrf_bellboard_int_triggered_1_mask (c enumerator)": [[11, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_1_MASK"]], "nrf_bellboard_int_mask_t.nrf_bellboard_int_triggered_20_mask (c enumerator)": [[11, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_20_MASK"]], "nrf_bellboard_int_mask_t.nrf_bellboard_int_triggered_21_mask (c enumerator)": [[11, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_21_MASK"]], "nrf_bellboard_int_mask_t.nrf_bellboard_int_triggered_22_mask (c enumerator)": [[11, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_22_MASK"]], "nrf_bellboard_int_mask_t.nrf_bellboard_int_triggered_23_mask (c enumerator)": [[11, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_23_MASK"]], "nrf_bellboard_int_mask_t.nrf_bellboard_int_triggered_24_mask (c enumerator)": [[11, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_24_MASK"]], "nrf_bellboard_int_mask_t.nrf_bellboard_int_triggered_25_mask (c enumerator)": [[11, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_25_MASK"]], "nrf_bellboard_int_mask_t.nrf_bellboard_int_triggered_26_mask (c enumerator)": [[11, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_26_MASK"]], "nrf_bellboard_int_mask_t.nrf_bellboard_int_triggered_27_mask (c enumerator)": [[11, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_27_MASK"]], "nrf_bellboard_int_mask_t.nrf_bellboard_int_triggered_28_mask (c enumerator)": [[11, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_28_MASK"]], "nrf_bellboard_int_mask_t.nrf_bellboard_int_triggered_29_mask (c enumerator)": [[11, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_29_MASK"]], "nrf_bellboard_int_mask_t.nrf_bellboard_int_triggered_2_mask (c enumerator)": [[11, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_2_MASK"]], "nrf_bellboard_int_mask_t.nrf_bellboard_int_triggered_30_mask (c enumerator)": [[11, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_30_MASK"]], "nrf_bellboard_int_mask_t.nrf_bellboard_int_triggered_31_mask (c enumerator)": [[11, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_31_MASK"]], "nrf_bellboard_int_mask_t.nrf_bellboard_int_triggered_3_mask (c enumerator)": [[11, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_3_MASK"]], "nrf_bellboard_int_mask_t.nrf_bellboard_int_triggered_4_mask (c enumerator)": [[11, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_4_MASK"]], "nrf_bellboard_int_mask_t.nrf_bellboard_int_triggered_5_mask (c enumerator)": [[11, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_5_MASK"]], "nrf_bellboard_int_mask_t.nrf_bellboard_int_triggered_6_mask (c enumerator)": [[11, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_6_MASK"]], "nrf_bellboard_int_mask_t.nrf_bellboard_int_triggered_7_mask (c enumerator)": [[11, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_7_MASK"]], "nrf_bellboard_int_mask_t.nrf_bellboard_int_triggered_8_mask (c enumerator)": [[11, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_8_MASK"]], "nrf_bellboard_int_mask_t.nrf_bellboard_int_triggered_9_mask (c enumerator)": [[11, "c.nrf_bellboard_int_mask_t.NRF_BELLBOARD_INT_TRIGGERED_9_MASK"]], "nrf_bellboard_int_pending_get (c function)": [[11, "c.nrf_bellboard_int_pending_get"]], "nrf_bellboard_task_address_get (c function)": [[11, "c.nrf_bellboard_task_address_get"]], "nrf_bellboard_task_t (c enum)": [[11, "c.nrf_bellboard_task_t"]], "nrf_bellboard_task_t.nrf_bellboard_task_trigger_0 (c enumerator)": [[11, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_0"]], "nrf_bellboard_task_t.nrf_bellboard_task_trigger_1 (c enumerator)": [[11, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_1"]], "nrf_bellboard_task_t.nrf_bellboard_task_trigger_10 (c enumerator)": [[11, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_10"]], "nrf_bellboard_task_t.nrf_bellboard_task_trigger_11 (c enumerator)": [[11, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_11"]], "nrf_bellboard_task_t.nrf_bellboard_task_trigger_12 (c enumerator)": [[11, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_12"]], "nrf_bellboard_task_t.nrf_bellboard_task_trigger_13 (c enumerator)": [[11, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_13"]], "nrf_bellboard_task_t.nrf_bellboard_task_trigger_14 (c enumerator)": [[11, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_14"]], "nrf_bellboard_task_t.nrf_bellboard_task_trigger_15 (c enumerator)": [[11, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_15"]], "nrf_bellboard_task_t.nrf_bellboard_task_trigger_16 (c enumerator)": [[11, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_16"]], "nrf_bellboard_task_t.nrf_bellboard_task_trigger_17 (c enumerator)": [[11, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_17"]], "nrf_bellboard_task_t.nrf_bellboard_task_trigger_18 (c enumerator)": [[11, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_18"]], "nrf_bellboard_task_t.nrf_bellboard_task_trigger_19 (c enumerator)": [[11, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_19"]], "nrf_bellboard_task_t.nrf_bellboard_task_trigger_2 (c enumerator)": [[11, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_2"]], "nrf_bellboard_task_t.nrf_bellboard_task_trigger_20 (c enumerator)": [[11, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_20"]], "nrf_bellboard_task_t.nrf_bellboard_task_trigger_21 (c enumerator)": [[11, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_21"]], "nrf_bellboard_task_t.nrf_bellboard_task_trigger_22 (c enumerator)": [[11, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_22"]], "nrf_bellboard_task_t.nrf_bellboard_task_trigger_23 (c enumerator)": [[11, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_23"]], "nrf_bellboard_task_t.nrf_bellboard_task_trigger_24 (c enumerator)": [[11, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_24"]], "nrf_bellboard_task_t.nrf_bellboard_task_trigger_25 (c enumerator)": [[11, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_25"]], "nrf_bellboard_task_t.nrf_bellboard_task_trigger_26 (c enumerator)": [[11, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_26"]], "nrf_bellboard_task_t.nrf_bellboard_task_trigger_27 (c enumerator)": [[11, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_27"]], "nrf_bellboard_task_t.nrf_bellboard_task_trigger_28 (c enumerator)": [[11, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_28"]], "nrf_bellboard_task_t.nrf_bellboard_task_trigger_29 (c enumerator)": [[11, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_29"]], "nrf_bellboard_task_t.nrf_bellboard_task_trigger_3 (c enumerator)": [[11, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_3"]], "nrf_bellboard_task_t.nrf_bellboard_task_trigger_30 (c enumerator)": [[11, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_30"]], "nrf_bellboard_task_t.nrf_bellboard_task_trigger_31 (c enumerator)": [[11, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_31"]], "nrf_bellboard_task_t.nrf_bellboard_task_trigger_4 (c enumerator)": [[11, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_4"]], "nrf_bellboard_task_t.nrf_bellboard_task_trigger_5 (c enumerator)": [[11, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_5"]], "nrf_bellboard_task_t.nrf_bellboard_task_trigger_6 (c enumerator)": [[11, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_6"]], "nrf_bellboard_task_t.nrf_bellboard_task_trigger_7 (c enumerator)": [[11, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_7"]], "nrf_bellboard_task_t.nrf_bellboard_task_trigger_8 (c enumerator)": [[11, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_8"]], "nrf_bellboard_task_t.nrf_bellboard_task_trigger_9 (c enumerator)": [[11, "c.nrf_bellboard_task_t.NRF_BELLBOARD_TASK_TRIGGER_9"]], "nrf_bellboard_task_trigger (c function)": [[11, "c.nrf_bellboard_task_trigger"]], "nrf_bellboard_trigger_task_get (c function)": [[11, "c.nrf_bellboard_trigger_task_get"]], "nrf_bellboard_triggered_event_get (c function)": [[11, "c.nrf_bellboard_triggered_event_get"]], "nrfy_bellboard_event_address_get (c function)": [[12, "c.nrfy_bellboard_event_address_get"]], "nrfy_bellboard_event_check (c function)": [[12, "c.nrfy_bellboard_event_check"]], "nrfy_bellboard_event_clear (c function)": [[12, "c.nrfy_bellboard_event_clear"]], "nrfy_bellboard_events_process (c function)": [[12, "c.nrfy_bellboard_events_process"]], "nrfy_bellboard_int_disable (c function)": [[12, "c.nrfy_bellboard_int_disable"]], "nrfy_bellboard_int_enable (c function)": [[12, "c.nrfy_bellboard_int_enable"]], "nrfy_bellboard_int_enable_check (c function)": [[12, "c.nrfy_bellboard_int_enable_check"]], "nrfy_bellboard_int_init (c function)": [[12, "c.nrfy_bellboard_int_init"]], "nrfy_bellboard_int_pending_get (c function)": [[12, "c.nrfy_bellboard_int_pending_get"]], "nrfy_bellboard_int_uninit (c function)": [[12, "c.nrfy_bellboard_int_uninit"]], "nrfy_bellboard_task_address_get (c function)": [[12, "c.nrfy_bellboard_task_address_get"]], "nrfy_bellboard_task_trigger (c function)": [[12, "c.nrfy_bellboard_task_trigger"]], "nrf_bprot_nvm_blocks_protection_enable (c function)": [[14, "c.nrf_bprot_nvm_blocks_protection_enable"]], "nrf_bprot_nvm_protection_in_debug_set (c function)": [[14, "c.nrf_bprot_nvm_protection_in_debug_set"]], "nrf_cachedata_data_units_max (c macro)": [[16, "c.NRF_CACHEDATA_DATA_UNITS_MAX"]], "nrf_cachedata_data_words_in_unit_max (c macro)": [[16, "c.NRF_CACHEDATA_DATA_WORDS_IN_UNIT_MAX"]], "nrf_cachedata_set_index_max (c macro)": [[16, "c.NRF_CACHEDATA_SET_INDEX_MAX"]], "nrf_cachedata_way_index_max (c macro)": [[16, "c.NRF_CACHEDATA_WAY_INDEX_MAX"]], "nrf_cachedata_word_index_max (c macro)": [[16, "c.NRF_CACHEDATA_WORD_INDEX_MAX"]], "nrf_cacheinfo_data_units_max (c macro)": [[16, "c.NRF_CACHEINFO_DATA_UNITS_MAX"]], "nrf_cacheinfo_data_words_in_unit_max (c macro)": [[16, "c.NRF_CACHEINFO_DATA_WORDS_IN_UNIT_MAX"]], "nrf_cacheinfo_set_index_max (c macro)": [[16, "c.NRF_CACHEINFO_SET_INDEX_MAX"]], "nrf_cacheinfo_way_index_max (c macro)": [[16, "c.NRF_CACHEINFO_WAY_INDEX_MAX"]], "nrf_cacheinfo_word_index_max (c macro)": [[16, "c.NRF_CACHEINFO_WORD_INDEX_MAX"]], "nrf_cache_has_cachedata (c macro)": [[16, "c.NRF_CACHE_HAS_CACHEDATA"]], "nrf_cache_has_cachedata_du (c macro)": [[16, "c.NRF_CACHE_HAS_CACHEDATA_DU"]], "nrf_cache_has_cacheinfo (c macro)": [[16, "c.NRF_CACHE_HAS_CACHEINFO"]], "nrf_cache_has_cacheinfo_du_dirty (c macro)": [[16, "c.NRF_CACHE_HAS_CACHEINFO_DU_DIRTY"]], "nrf_cache_has_cacheinfo_du_validation (c macro)": [[16, "c.NRF_CACHE_HAS_CACHEINFO_DU_VALIDATION"]], "nrf_cache_has_cacheinfo_set_way_info (c macro)": [[16, "c.NRF_CACHE_HAS_CACHEINFO_SET_WAY_INFO"]], "nrf_cache_has_ramsize (c macro)": [[16, "c.NRF_CACHE_HAS_RAMSIZE"]], "nrf_cache_has_ram_mode (c macro)": [[16, "c.NRF_CACHE_HAS_RAM_MODE"]], "nrf_cache_has_status (c macro)": [[16, "c.NRF_CACHE_HAS_STATUS"]], "nrf_cache_has_tasks (c macro)": [[16, "c.NRF_CACHE_HAS_TASKS"]], "nrf_cache_has_task_clean (c macro)": [[16, "c.NRF_CACHE_HAS_TASK_CLEAN"]], "nrf_cache_has_task_flush (c macro)": [[16, "c.NRF_CACHE_HAS_TASK_FLUSH"]], "nrf_cache_has_task_save_restore (c macro)": [[16, "c.NRF_CACHE_HAS_TASK_SAVE_RESTORE"]], "nrf_cache_mode_ramsize_max (c macro)": [[16, "c.NRF_CACHE_MODE_RAMSIZE_MAX"]], "nrf_cache_busy_check (c function)": [[16, "c.nrf_cache_busy_check"]], "nrf_cache_data_get (c function)": [[16, "c.nrf_cache_data_get"]], "nrf_cache_data_hit_counter_get (c function)": [[16, "c.nrf_cache_data_hit_counter_get"]], "nrf_cache_data_miss_counter_get (c function)": [[16, "c.nrf_cache_data_miss_counter_get"]], "nrf_cache_data_unit_validity_check (c function)": [[16, "c.nrf_cache_data_unit_validity_check"]], "nrf_cache_disable (c function)": [[16, "c.nrf_cache_disable"]], "nrf_cache_enable (c function)": [[16, "c.nrf_cache_enable"]], "nrf_cache_enable_check (c function)": [[16, "c.nrf_cache_enable_check"]], "nrf_cache_erase (c function)": [[16, "c.nrf_cache_erase"]], "nrf_cache_erase_status_check (c function)": [[16, "c.nrf_cache_erase_status_check"]], "nrf_cache_erase_status_clear (c function)": [[16, "c.nrf_cache_erase_status_clear"]], "nrf_cache_instruction_hit_counter_get (c function)": [[16, "c.nrf_cache_instruction_hit_counter_get"]], "nrf_cache_instruction_miss_counter_get (c function)": [[16, "c.nrf_cache_instruction_miss_counter_get"]], "nrf_cache_invalidate (c function)": [[16, "c.nrf_cache_invalidate"]], "nrf_cache_is_data_unit_dirty_check (c function)": [[16, "c.nrf_cache_is_data_unit_dirty_check"]], "nrf_cache_line_validity_check (c function)": [[16, "c.nrf_cache_line_validity_check"]], "nrf_cache_lineaddr_get (c function)": [[16, "c.nrf_cache_lineaddr_get"]], "nrf_cache_lineaddr_set (c function)": [[16, "c.nrf_cache_lineaddr_set"]], "nrf_cache_mru_get (c function)": [[16, "c.nrf_cache_mru_get"]], "nrf_cache_profiling_counters_clear (c function)": [[16, "c.nrf_cache_profiling_counters_clear"]], "nrf_cache_profiling_set (c function)": [[16, "c.nrf_cache_profiling_set"]], "nrf_cache_ram_mode_check (c function)": [[16, "c.nrf_cache_ram_mode_check"]], "nrf_cache_ram_mode_set (c function)": [[16, "c.nrf_cache_ram_mode_set"]], "nrf_cache_ramsize_get (c function)": [[16, "c.nrf_cache_ramsize_get"]], "nrf_cache_ramsize_set (c function)": [[16, "c.nrf_cache_ramsize_set"]], "nrf_cache_ramsize_t (c enum)": [[16, "c.nrf_cache_ramsize_t"]], "nrf_cache_ramsize_t.nrf_cache_ramsize_all (c enumerator)": [[16, "c.nrf_cache_ramsize_t.NRF_CACHE_RAMSIZE_ALL"]], "nrf_cache_ramsize_t.nrf_cache_ramsize_half (c enumerator)": [[16, "c.nrf_cache_ramsize_t.NRF_CACHE_RAMSIZE_HALF"]], "nrf_cache_ramsize_t.nrf_cache_ramsize_none (c enumerator)": [[16, "c.nrf_cache_ramsize_t.NRF_CACHE_RAMSIZE_NONE"]], "nrf_cache_ramsize_t.nrf_cache_ramsize_quarter (c enumerator)": [[16, "c.nrf_cache_ramsize_t.NRF_CACHE_RAMSIZE_QUARTER"]], "nrf_cache_read_lock_enable (c function)": [[16, "c.nrf_cache_read_lock_enable"]], "nrf_cache_region_t (c enum)": [[16, "c.nrf_cache_region_t"]], "nrf_cache_region_t.nrf_cache_region_flash (c enumerator)": [[16, "c.nrf_cache_region_t.NRF_CACHE_REGION_FLASH"]], "nrf_cache_region_t.nrf_cache_region_xip (c enumerator)": [[16, "c.nrf_cache_region_t.NRF_CACHE_REGION_XIP"]], "nrf_cache_tag_get (c function)": [[16, "c.nrf_cache_tag_get"]], "nrf_cache_task_address_get (c function)": [[16, "c.nrf_cache_task_address_get"]], "nrf_cache_task_t (c enum)": [[16, "c.nrf_cache_task_t"]], "nrf_cache_task_t.nrf_cache_task_cleancache (c enumerator)": [[16, "c.nrf_cache_task_t.NRF_CACHE_TASK_CLEANCACHE"]], "nrf_cache_task_t.nrf_cache_task_cleanline (c enumerator)": [[16, "c.nrf_cache_task_t.NRF_CACHE_TASK_CLEANLINE"]], "nrf_cache_task_t.nrf_cache_task_erase (c enumerator)": [[16, "c.nrf_cache_task_t.NRF_CACHE_TASK_ERASE"]], "nrf_cache_task_t.nrf_cache_task_flushcache (c enumerator)": [[16, "c.nrf_cache_task_t.NRF_CACHE_TASK_FLUSHCACHE"]], "nrf_cache_task_t.nrf_cache_task_flushline (c enumerator)": [[16, "c.nrf_cache_task_t.NRF_CACHE_TASK_FLUSHLINE"]], "nrf_cache_task_t.nrf_cache_task_invalidatecache (c enumerator)": [[16, "c.nrf_cache_task_t.NRF_CACHE_TASK_INVALIDATECACHE"]], "nrf_cache_task_t.nrf_cache_task_invalidateline (c enumerator)": [[16, "c.nrf_cache_task_t.NRF_CACHE_TASK_INVALIDATELINE"]], "nrf_cache_task_t.nrf_cache_task_restore (c enumerator)": [[16, "c.nrf_cache_task_t.NRF_CACHE_TASK_RESTORE"]], "nrf_cache_task_t.nrf_cache_task_save (c enumerator)": [[16, "c.nrf_cache_task_t.NRF_CACHE_TASK_SAVE"]], "nrf_cache_task_trigger (c function)": [[16, "c.nrf_cache_task_trigger"]], "nrf_cache_update_lock_set (c function)": [[16, "c.nrf_cache_update_lock_set"]], "nrf_ccm_has_adatamask (c macro)": [[18, "c.NRF_CCM_HAS_ADATAMASK"]], "nrf_ccm_has_cnfptr (c macro)": [[18, "c.NRF_CCM_HAS_CNFPTR"]], "nrf_ccm_has_datarate (c macro)": [[18, "c.NRF_CCM_HAS_DATARATE"]], "nrf_ccm_has_errorstatus (c macro)": [[18, "c.NRF_CCM_HAS_ERRORSTATUS"]], "nrf_ccm_has_event_end (c macro)": [[18, "c.NRF_CCM_HAS_EVENT_END"]], "nrf_ccm_has_event_endcrypt (c macro)": [[18, "c.NRF_CCM_HAS_EVENT_ENDCRYPT"]], "nrf_ccm_has_event_endksgen (c macro)": [[18, "c.NRF_CCM_HAS_EVENT_ENDKSGEN"]], "nrf_ccm_has_headermask (c macro)": [[18, "c.NRF_CCM_HAS_HEADERMASK"]], "nrf_ccm_has_inptr (c macro)": [[18, "c.NRF_CCM_HAS_INPTR"]], "nrf_ccm_has_in_amount (c macro)": [[18, "c.NRF_CCM_HAS_IN_AMOUNT"]], "nrf_ccm_has_in_ptr (c macro)": [[18, "c.NRF_CCM_HAS_IN_PTR"]], "nrf_ccm_has_key (c macro)": [[18, "c.NRF_CCM_HAS_KEY"]], "nrf_ccm_has_macstatus (c macro)": [[18, "c.NRF_CCM_HAS_MACSTATUS"]], "nrf_ccm_has_maxpacketsize (c macro)": [[18, "c.NRF_CCM_HAS_MAXPACKETSIZE"]], "nrf_ccm_has_micstatus (c macro)": [[18, "c.NRF_CCM_HAS_MICSTATUS"]], "nrf_ccm_has_mode_datarate_125kbit (c macro)": [[18, "c.NRF_CCM_HAS_MODE_DATARATE_125KBIT"]], "nrf_ccm_has_mode_datarate_125kbps (c macro)": [[18, "c.NRF_CCM_HAS_MODE_DATARATE_125KBPS"]], "nrf_ccm_has_mode_datarate_250kbit (c macro)": [[18, "c.NRF_CCM_HAS_MODE_DATARATE_250KBIT"]], "nrf_ccm_has_mode_datarate_4mbit (c macro)": [[18, "c.NRF_CCM_HAS_MODE_DATARATE_4MBIT"]], "nrf_ccm_has_mode_datarate_500kbit (c macro)": [[18, "c.NRF_CCM_HAS_MODE_DATARATE_500KBIT"]], "nrf_ccm_has_mode_datarate_500kbps (c macro)": [[18, "c.NRF_CCM_HAS_MODE_DATARATE_500KBPS"]], "nrf_ccm_has_mode_fast_decryption (c macro)": [[18, "c.NRF_CCM_HAS_MODE_FAST_DECRYPTION"]], "nrf_ccm_has_mode_length (c macro)": [[18, "c.NRF_CCM_HAS_MODE_LENGTH"]], "nrf_ccm_has_mode_maclen (c macro)": [[18, "c.NRF_CCM_HAS_MODE_MACLEN"]], "nrf_ccm_has_mode_protocol (c macro)": [[18, "c.NRF_CCM_HAS_MODE_PROTOCOL"]], "nrf_ccm_has_mode_protocol_ble (c macro)": [[18, "c.NRF_CCM_HAS_MODE_PROTOCOL_BLE"]], "nrf_ccm_has_mode_protocol_ieee802154 (c macro)": [[18, "c.NRF_CCM_HAS_MODE_PROTOCOL_IEEE802154"]], "nrf_ccm_has_nonce (c macro)": [[18, "c.NRF_CCM_HAS_NONCE"]], "nrf_ccm_has_outptr (c macro)": [[18, "c.NRF_CCM_HAS_OUTPTR"]], "nrf_ccm_has_out_amount (c macro)": [[18, "c.NRF_CCM_HAS_OUT_AMOUNT"]], "nrf_ccm_has_out_ptr (c macro)": [[18, "c.NRF_CCM_HAS_OUT_PTR"]], "nrf_ccm_has_rateoverride (c macro)": [[18, "c.NRF_CCM_HAS_RATEOVERRIDE"]], "nrf_ccm_has_scratchptr (c macro)": [[18, "c.NRF_CCM_HAS_SCRATCHPTR"]], "nrf_ccm_has_task_crypt (c macro)": [[18, "c.NRF_CCM_HAS_TASK_CRYPT"]], "nrf_ccm_has_task_ksgen (c macro)": [[18, "c.NRF_CCM_HAS_TASK_KSGEN"]], "nrf_ccm_has_task_rateoverride (c macro)": [[18, "c.NRF_CCM_HAS_TASK_RATEOVERRIDE"]], "nrf_ccm_has_task_start (c macro)": [[18, "c.NRF_CCM_HAS_TASK_START"]], "nrf_ccm_iv_size (c macro)": [[18, "c.NRF_CCM_IV_SIZE"]], "nrf_ccm_key_size (c macro)": [[18, "c.NRF_CCM_KEY_SIZE"]], "nrf_ccm_pktctr_size (c macro)": [[18, "c.NRF_CCM_PKTCTR_SIZE"]], "nrf_ccm_adatamask_get (c function)": [[18, "c.nrf_ccm_adatamask_get"]], "nrf_ccm_adatamask_set (c function)": [[18, "c.nrf_ccm_adatamask_set"]], "nrf_ccm_cnf_t (c struct)": [[18, "c.nrf_ccm_cnf_t"]], "nrf_ccm_cnf_t.iv (c var)": [[18, "c.nrf_ccm_cnf_t.iv"]], "nrf_ccm_cnf_t.key (c var)": [[18, "c.nrf_ccm_cnf_t.key"]], "nrf_ccm_cnf_t.pktctr (c var)": [[18, "c.nrf_ccm_cnf_t.pktctr"]], "nrf_ccm_cnfptr_get (c function)": [[18, "c.nrf_ccm_cnfptr_get"]], "nrf_ccm_cnfptr_set (c function)": [[18, "c.nrf_ccm_cnfptr_set"]], "nrf_ccm_config_t (c struct)": [[18, "c.nrf_ccm_config_t"]], "nrf_ccm_config_t.datarate (c var)": [[18, "c.nrf_ccm_config_t.datarate"]], "nrf_ccm_config_t.length (c var)": [[18, "c.nrf_ccm_config_t.length"]], "nrf_ccm_config_t.mac_length (c var)": [[18, "c.nrf_ccm_config_t.mac_length"]], "nrf_ccm_config_t.mode (c var)": [[18, "c.nrf_ccm_config_t.mode"]], "nrf_ccm_config_t.protocol (c var)": [[18, "c.nrf_ccm_config_t.protocol"]], "nrf_ccm_configure (c function)": [[18, "c.nrf_ccm_configure"]], "nrf_ccm_datarate_override_get (c function)": [[18, "c.nrf_ccm_datarate_override_get"]], "nrf_ccm_datarate_override_set (c function)": [[18, "c.nrf_ccm_datarate_override_set"]], "nrf_ccm_datarate_t (c enum)": [[18, "c.nrf_ccm_datarate_t"]], "nrf_ccm_datarate_t.nrf_ccm_datarate_125k (c enumerator)": [[18, "c.nrf_ccm_datarate_t.NRF_CCM_DATARATE_125K"]], "nrf_ccm_datarate_t.nrf_ccm_datarate_1m (c enumerator)": [[18, "c.nrf_ccm_datarate_t.NRF_CCM_DATARATE_1M"]], "nrf_ccm_datarate_t.nrf_ccm_datarate_250k (c enumerator)": [[18, "c.nrf_ccm_datarate_t.NRF_CCM_DATARATE_250K"]], "nrf_ccm_datarate_t.nrf_ccm_datarate_2m (c enumerator)": [[18, "c.nrf_ccm_datarate_t.NRF_CCM_DATARATE_2M"]], "nrf_ccm_datarate_t.nrf_ccm_datarate_4m (c enumerator)": [[18, "c.nrf_ccm_datarate_t.NRF_CCM_DATARATE_4M"]], "nrf_ccm_datarate_t.nrf_ccm_datarate_500k (c enumerator)": [[18, "c.nrf_ccm_datarate_t.NRF_CCM_DATARATE_500K"]], "nrf_ccm_disable (c function)": [[18, "c.nrf_ccm_disable"]], "nrf_ccm_enable (c function)": [[18, "c.nrf_ccm_enable"]], "nrf_ccm_error_t (c enum)": [[18, "c.nrf_ccm_error_t"]], "nrf_ccm_error_t.nrf_ccm_error_encryption_too_slow (c enumerator)": [[18, "c.nrf_ccm_error_t.NRF_CCM_ERROR_ENCRYPTION_TOO_SLOW"]], "nrf_ccm_error_t.nrf_ccm_error_no_error (c enumerator)": [[18, "c.nrf_ccm_error_t.NRF_CCM_ERROR_NO_ERROR"]], "nrf_ccm_error_t.nrf_ccm_error_premature_inptr_end (c enumerator)": [[18, "c.nrf_ccm_error_t.NRF_CCM_ERROR_PREMATURE_INPTR_END"]], "nrf_ccm_error_t.nrf_ccm_error_premature_outptr_end (c enumerator)": [[18, "c.nrf_ccm_error_t.NRF_CCM_ERROR_PREMATURE_OUTPTR_END"]], "nrf_ccm_errorstatus_get (c function)": [[18, "c.nrf_ccm_errorstatus_get"]], "nrf_ccm_event_address_get (c function)": [[18, "c.nrf_ccm_event_address_get"]], "nrf_ccm_event_check (c function)": [[18, "c.nrf_ccm_event_check"]], "nrf_ccm_event_clear (c function)": [[18, "c.nrf_ccm_event_clear"]], "nrf_ccm_event_t (c enum)": [[18, "c.nrf_ccm_event_t"]], "nrf_ccm_event_t.nrf_ccm_event_end (c enumerator)": [[18, "c.nrf_ccm_event_t.NRF_CCM_EVENT_END"]], "nrf_ccm_event_t.nrf_ccm_event_endcrypt (c enumerator)": [[18, "c.nrf_ccm_event_t.NRF_CCM_EVENT_ENDCRYPT"]], "nrf_ccm_event_t.nrf_ccm_event_endksgen (c enumerator)": [[18, "c.nrf_ccm_event_t.NRF_CCM_EVENT_ENDKSGEN"]], "nrf_ccm_event_t.nrf_ccm_event_error (c enumerator)": [[18, "c.nrf_ccm_event_t.NRF_CCM_EVENT_ERROR"]], "nrf_ccm_headermask_get (c function)": [[18, "c.nrf_ccm_headermask_get"]], "nrf_ccm_headermask_set (c function)": [[18, "c.nrf_ccm_headermask_set"]], "nrf_ccm_in_amount_get (c function)": [[18, "c.nrf_ccm_in_amount_get"]], "nrf_ccm_in_ptr_get (c function)": [[18, "c.nrf_ccm_in_ptr_get"]], "nrf_ccm_in_ptr_set (c function)": [[18, "c.nrf_ccm_in_ptr_set"]], "nrf_ccm_inptr_get (c function)": [[18, "c.nrf_ccm_inptr_get"]], "nrf_ccm_inptr_set (c function)": [[18, "c.nrf_ccm_inptr_set"]], "nrf_ccm_int_disable (c function)": [[18, "c.nrf_ccm_int_disable"]], "nrf_ccm_int_enable (c function)": [[18, "c.nrf_ccm_int_enable"]], "nrf_ccm_int_enable_check (c function)": [[18, "c.nrf_ccm_int_enable_check"]], "nrf_ccm_int_mask_t (c enum)": [[18, "c.nrf_ccm_int_mask_t"]], "nrf_ccm_int_mask_t.nrf_ccm_int_endcrypt_mask (c enumerator)": [[18, "c.nrf_ccm_int_mask_t.NRF_CCM_INT_ENDCRYPT_MASK"]], "nrf_ccm_int_mask_t.nrf_ccm_int_endksgen_mask (c enumerator)": [[18, "c.nrf_ccm_int_mask_t.NRF_CCM_INT_ENDKSGEN_MASK"]], "nrf_ccm_int_mask_t.nrf_ccm_int_end_mask (c enumerator)": [[18, "c.nrf_ccm_int_mask_t.NRF_CCM_INT_END_MASK"]], "nrf_ccm_int_mask_t.nrf_ccm_int_error_mask (c enumerator)": [[18, "c.nrf_ccm_int_mask_t.NRF_CCM_INT_ERROR_MASK"]], "nrf_ccm_key_get (c function)": [[18, "c.nrf_ccm_key_get"]], "nrf_ccm_key_set (c function)": [[18, "c.nrf_ccm_key_set"]], "nrf_ccm_length_t (c enum)": [[18, "c.nrf_ccm_length_t"]], "nrf_ccm_length_t.nrf_ccm_length_default (c enumerator)": [[18, "c.nrf_ccm_length_t.NRF_CCM_LENGTH_DEFAULT"]], "nrf_ccm_length_t.nrf_ccm_length_extended (c enumerator)": [[18, "c.nrf_ccm_length_t.NRF_CCM_LENGTH_EXTENDED"]], "nrf_ccm_maclen_t (c enum)": [[18, "c.nrf_ccm_maclen_t"]], "nrf_ccm_maclen_t.nrf_ccm_mode_maclen_m0 (c enumerator)": [[18, "c.nrf_ccm_maclen_t.NRF_CCM_MODE_MACLEN_M0"]], "nrf_ccm_maclen_t.nrf_ccm_mode_maclen_m10 (c enumerator)": [[18, "c.nrf_ccm_maclen_t.NRF_CCM_MODE_MACLEN_M10"]], "nrf_ccm_maclen_t.nrf_ccm_mode_maclen_m12 (c enumerator)": [[18, "c.nrf_ccm_maclen_t.NRF_CCM_MODE_MACLEN_M12"]], "nrf_ccm_maclen_t.nrf_ccm_mode_maclen_m14 (c enumerator)": [[18, "c.nrf_ccm_maclen_t.NRF_CCM_MODE_MACLEN_M14"]], "nrf_ccm_maclen_t.nrf_ccm_mode_maclen_m16 (c enumerator)": [[18, "c.nrf_ccm_maclen_t.NRF_CCM_MODE_MACLEN_M16"]], "nrf_ccm_maclen_t.nrf_ccm_mode_maclen_m4 (c enumerator)": [[18, "c.nrf_ccm_maclen_t.NRF_CCM_MODE_MACLEN_M4"]], "nrf_ccm_maclen_t.nrf_ccm_mode_maclen_m6 (c enumerator)": [[18, "c.nrf_ccm_maclen_t.NRF_CCM_MODE_MACLEN_M6"]], "nrf_ccm_maclen_t.nrf_ccm_mode_maclen_m8 (c enumerator)": [[18, "c.nrf_ccm_maclen_t.NRF_CCM_MODE_MACLEN_M8"]], "nrf_ccm_macstatus_get (c function)": [[18, "c.nrf_ccm_macstatus_get"]], "nrf_ccm_maxpacketsize_set (c function)": [[18, "c.nrf_ccm_maxpacketsize_set"]], "nrf_ccm_micstatus_get (c function)": [[18, "c.nrf_ccm_micstatus_get"]], "nrf_ccm_mode_t (c enum)": [[18, "c.nrf_ccm_mode_t"]], "nrf_ccm_mode_t.nrf_ccm_mode_decryption (c enumerator)": [[18, "c.nrf_ccm_mode_t.NRF_CCM_MODE_DECRYPTION"]], "nrf_ccm_mode_t.nrf_ccm_mode_encryption (c enumerator)": [[18, "c.nrf_ccm_mode_t.NRF_CCM_MODE_ENCRYPTION"]], "nrf_ccm_mode_t.nrf_ccm_mode_fast_decryption (c enumerator)": [[18, "c.nrf_ccm_mode_t.NRF_CCM_MODE_FAST_DECRYPTION"]], "nrf_ccm_nonce_get (c function)": [[18, "c.nrf_ccm_nonce_get"]], "nrf_ccm_nonce_set (c function)": [[18, "c.nrf_ccm_nonce_set"]], "nrf_ccm_out_amount_get (c function)": [[18, "c.nrf_ccm_out_amount_get"]], "nrf_ccm_out_ptr_get (c function)": [[18, "c.nrf_ccm_out_ptr_get"]], "nrf_ccm_out_ptr_set (c function)": [[18, "c.nrf_ccm_out_ptr_set"]], "nrf_ccm_outptr_get (c function)": [[18, "c.nrf_ccm_outptr_get"]], "nrf_ccm_outptr_set (c function)": [[18, "c.nrf_ccm_outptr_set"]], "nrf_ccm_protocol_t (c enum)": [[18, "c.nrf_ccm_protocol_t"]], "nrf_ccm_protocol_t.nrf_ccm_mode_protocol_ble (c enumerator)": [[18, "c.nrf_ccm_protocol_t.NRF_CCM_MODE_PROTOCOL_BLE"]], "nrf_ccm_protocol_t.nrf_ccm_mode_protocol_ieee802154 (c enumerator)": [[18, "c.nrf_ccm_protocol_t.NRF_CCM_MODE_PROTOCOL_IEEE802154"]], "nrf_ccm_publish_clear (c function)": [[18, "c.nrf_ccm_publish_clear"]], "nrf_ccm_publish_set (c function)": [[18, "c.nrf_ccm_publish_set"]], "nrf_ccm_scratchptr_get (c function)": [[18, "c.nrf_ccm_scratchptr_get"]], "nrf_ccm_scratchptr_set (c function)": [[18, "c.nrf_ccm_scratchptr_set"]], "nrf_ccm_short_mask_t (c enum)": [[18, "c.nrf_ccm_short_mask_t"]], "nrf_ccm_short_mask_t.nrf_ccm_short_endksgen_crypt_mask (c enumerator)": [[18, "c.nrf_ccm_short_mask_t.NRF_CCM_SHORT_ENDKSGEN_CRYPT_MASK"]], "nrf_ccm_shorts_disable (c function)": [[18, "c.nrf_ccm_shorts_disable"]], "nrf_ccm_shorts_enable (c function)": [[18, "c.nrf_ccm_shorts_enable"]], "nrf_ccm_shorts_set (c function)": [[18, "c.nrf_ccm_shorts_set"]], "nrf_ccm_subscribe_clear (c function)": [[18, "c.nrf_ccm_subscribe_clear"]], "nrf_ccm_subscribe_set (c function)": [[18, "c.nrf_ccm_subscribe_set"]], "nrf_ccm_task_address_get (c function)": [[18, "c.nrf_ccm_task_address_get"]], "nrf_ccm_task_t (c enum)": [[18, "c.nrf_ccm_task_t"]], "nrf_ccm_task_t.nrf_ccm_task_crypt (c enumerator)": [[18, "c.nrf_ccm_task_t.NRF_CCM_TASK_CRYPT"]], "nrf_ccm_task_t.nrf_ccm_task_ksgen (c enumerator)": [[18, "c.nrf_ccm_task_t.NRF_CCM_TASK_KSGEN"]], "nrf_ccm_task_t.nrf_ccm_task_rateoverride (c enumerator)": [[18, "c.nrf_ccm_task_t.NRF_CCM_TASK_RATEOVERRIDE"]], "nrf_ccm_task_t.nrf_ccm_task_start (c enumerator)": [[18, "c.nrf_ccm_task_t.NRF_CCM_TASK_START"]], "nrf_ccm_task_t.nrf_ccm_task_stop (c enumerator)": [[18, "c.nrf_ccm_task_t.NRF_CCM_TASK_STOP"]], "nrf_ccm_task_trigger (c function)": [[18, "c.nrf_ccm_task_trigger"]], "nrfx_clock_calibration_start (c function)": [[20, "c.nrfx_clock_calibration_start"]], "nrfx_clock_calibration_timer_start (c function)": [[20, "c.nrfx_clock_calibration_timer_start"]], "nrfx_clock_calibration_timer_stop (c function)": [[20, "c.nrfx_clock_calibration_timer_stop"]], "nrfx_clock_disable (c function)": [[20, "c.nrfx_clock_disable"]], "nrfx_clock_divider_get (c function)": [[20, "c.nrfx_clock_divider_get"]], "nrfx_clock_divider_set (c function)": [[20, "c.nrfx_clock_divider_set"]], "nrfx_clock_enable (c function)": [[20, "c.nrfx_clock_enable"]], "nrfx_clock_event_address_get (c function)": [[20, "c.nrfx_clock_event_address_get"]], "nrfx_clock_event_handler_t (c type)": [[20, "c.nrfx_clock_event_handler_t"]], "nrfx_clock_evt_type_t (c enum)": [[20, "c.nrfx_clock_evt_type_t"]], "nrfx_clock_evt_type_t.nrfx_clock_evt_cal_done (c enumerator)": [[20, "c.nrfx_clock_evt_type_t.NRFX_CLOCK_EVT_CAL_DONE"]], "nrfx_clock_evt_type_t.nrfx_clock_evt_ctto (c enumerator)": [[20, "c.nrfx_clock_evt_type_t.NRFX_CLOCK_EVT_CTTO"]], "nrfx_clock_evt_type_t.nrfx_clock_evt_hfclk192m_started (c enumerator)": [[20, "c.nrfx_clock_evt_type_t.NRFX_CLOCK_EVT_HFCLK192M_STARTED"]], "nrfx_clock_evt_type_t.nrfx_clock_evt_hfclkaudio_started (c enumerator)": [[20, "c.nrfx_clock_evt_type_t.NRFX_CLOCK_EVT_HFCLKAUDIO_STARTED"]], "nrfx_clock_evt_type_t.nrfx_clock_evt_hfclk_started (c enumerator)": [[20, "c.nrfx_clock_evt_type_t.NRFX_CLOCK_EVT_HFCLK_STARTED"]], "nrfx_clock_evt_type_t.nrfx_clock_evt_lfclk_started (c enumerator)": [[20, "c.nrfx_clock_evt_type_t.NRFX_CLOCK_EVT_LFCLK_STARTED"]], "nrfx_clock_evt_type_t.nrfx_clock_evt_pll_started (c enumerator)": [[20, "c.nrfx_clock_evt_type_t.NRFX_CLOCK_EVT_PLL_STARTED"]], "nrfx_clock_hfclk_is_running (c function)": [[20, "c.nrfx_clock_hfclk_is_running"]], "nrfx_clock_hfclk_start (c function)": [[20, "c.nrfx_clock_hfclk_start"]], "nrfx_clock_hfclk_stop (c function)": [[20, "c.nrfx_clock_hfclk_stop"]], "nrfx_clock_hfclkaudio_config_get (c function)": [[20, "c.nrfx_clock_hfclkaudio_config_get"]], "nrfx_clock_hfclkaudio_config_set (c function)": [[20, "c.nrfx_clock_hfclkaudio_config_set"]], "nrfx_clock_init (c function)": [[20, "c.nrfx_clock_init"]], "nrfx_clock_init_check (c function)": [[20, "c.nrfx_clock_init_check"]], "nrfx_clock_is_calibrating (c function)": [[20, "c.nrfx_clock_is_calibrating"]], "nrfx_clock_is_running (c function)": [[20, "c.nrfx_clock_is_running"]], "nrfx_clock_lfclk_is_running (c function)": [[20, "c.nrfx_clock_lfclk_is_running"]], "nrfx_clock_lfclk_start (c function)": [[20, "c.nrfx_clock_lfclk_start"]], "nrfx_clock_lfclk_stop (c function)": [[20, "c.nrfx_clock_lfclk_stop"]], "nrfx_clock_start (c function)": [[20, "c.nrfx_clock_start"]], "nrfx_clock_stop (c function)": [[20, "c.nrfx_clock_stop"]], "nrfx_clock_task_address_get (c function)": [[20, "c.nrfx_clock_task_address_get"]], "nrfx_clock_uninit (c function)": [[20, "c.nrfx_clock_uninit"]], "nrf_clock_has_calibration (c macro)": [[21, "c.NRF_CLOCK_HAS_CALIBRATION"]], "nrf_clock_has_calibration_timer (c macro)": [[21, "c.NRF_CLOCK_HAS_CALIBRATION_TIMER"]], "nrf_clock_has_hfclk192m (c macro)": [[21, "c.NRF_CLOCK_HAS_HFCLK192M"]], "nrf_clock_has_hfclkaudio (c macro)": [[21, "c.NRF_CLOCK_HAS_HFCLKAUDIO"]], "nrf_clock_has_hfclksrc (c macro)": [[21, "c.NRF_CLOCK_HAS_HFCLKSRC"]], "nrf_clock_has_hfclk_alwaysrun (c macro)": [[21, "c.NRF_CLOCK_HAS_HFCLK_ALWAYSRUN"]], "nrf_clock_has_hfclk_div (c macro)": [[21, "c.NRF_CLOCK_HAS_HFCLK_DIV"]], "nrf_clock_has_lfclk_alwaysrun (c macro)": [[21, "c.NRF_CLOCK_HAS_LFCLK_ALWAYSRUN"]], "nrf_clock_has_lfclk_type (c macro)": [[21, "c.NRF_CLOCK_HAS_LFCLK_TYPE"]], "nrf_clock_has_pll (c macro)": [[21, "c.NRF_CLOCK_HAS_PLL"]], "nrf_clock_has_xo (c macro)": [[21, "c.NRF_CLOCK_HAS_XO"]], "nrf_clock_hfclkrun_status_msk (c macro)": [[21, "c.NRF_CLOCK_HFCLKRUN_STATUS_Msk"]], "nrf_clock_hfclkrun_status_pos (c macro)": [[21, "c.NRF_CLOCK_HFCLKRUN_STATUS_Pos"]], "nrf_clock_hfclkstat_state_msk (c macro)": [[21, "c.NRF_CLOCK_HFCLKSTAT_STATE_Msk"]], "nrf_clock_hfclkstat_state_pos (c macro)": [[21, "c.NRF_CLOCK_HFCLKSTAT_STATE_Pos"]], "nrf_clock_intenset_hfclkstarted_msk (c macro)": [[21, "c.NRF_CLOCK_INTENSET_HFCLKSTARTED_Msk"]], "nrf_clock_intenset_lfclkstarted_msk (c macro)": [[21, "c.NRF_CLOCK_INTENSET_LFCLKSTARTED_Msk"]], "nrf_clock_lfclkalwaysrun_alwaysrun_msk (c macro)": [[21, "c.NRF_CLOCK_LFCLKALWAYSRUN_ALWAYSRUN_Msk"]], "nrf_clock_lfclkalwaysrun_alwaysrun_pos (c macro)": [[21, "c.NRF_CLOCK_LFCLKALWAYSRUN_ALWAYSRUN_Pos"]], "nrf_clock_lfclkrun_status_msk (c macro)": [[21, "c.NRF_CLOCK_LFCLKRUN_STATUS_Msk"]], "nrf_clock_lfclkrun_status_nottriggered (c macro)": [[21, "c.NRF_CLOCK_LFCLKRUN_STATUS_NotTriggered"]], "nrf_clock_lfclkrun_status_pos (c macro)": [[21, "c.NRF_CLOCK_LFCLKRUN_STATUS_Pos"]], "nrf_clock_lfclkrun_status_triggered (c macro)": [[21, "c.NRF_CLOCK_LFCLKRUN_STATUS_Triggered"]], "nrf_clock_lfclksrccopy_src_msk (c macro)": [[21, "c.NRF_CLOCK_LFCLKSRCCOPY_SRC_Msk"]], "nrf_clock_lfclksrccopy_src_pos (c macro)": [[21, "c.NRF_CLOCK_LFCLKSRCCOPY_SRC_Pos"]], "nrf_clock_lfclkstat_alwaysrunning_msk (c macro)": [[21, "c.NRF_CLOCK_LFCLKSTAT_ALWAYSRUNNING_Msk"]], "nrf_clock_lfclkstat_alwaysrunning_pos (c macro)": [[21, "c.NRF_CLOCK_LFCLKSTAT_ALWAYSRUNNING_Pos"]], "nrf_clock_lfclkstat_src_msk (c macro)": [[21, "c.NRF_CLOCK_LFCLKSTAT_SRC_Msk"]], "nrf_clock_lfclkstat_src_pos (c macro)": [[21, "c.NRF_CLOCK_LFCLKSTAT_SRC_Pos"]], "nrf_clock_lfclkstat_state_msk (c macro)": [[21, "c.NRF_CLOCK_LFCLKSTAT_STATE_Msk"]], "nrf_clock_lfclkstat_state_pos (c macro)": [[21, "c.NRF_CLOCK_LFCLKSTAT_STATE_Pos"]], "nrf_events_hfclkstarted (c macro)": [[21, "c.NRF_EVENTS_HFCLKSTARTED"]], "nrf_hfclkrun (c macro)": [[21, "c.NRF_HFCLKRUN"]], "nrf_hfclkstat (c macro)": [[21, "c.NRF_HFCLKSTAT"]], "nrf_lfclkalwaysrun (c macro)": [[21, "c.NRF_LFCLKALWAYSRUN"]], "nrf_lfclkrun (c macro)": [[21, "c.NRF_LFCLKRUN"]], "nrf_lfclksrc (c macro)": [[21, "c.NRF_LFCLKSRC"]], "nrf_lfclksrccopy (c macro)": [[21, "c.NRF_LFCLKSRCCOPY"]], "nrf_lfclkstat (c macro)": [[21, "c.NRF_LFCLKSTAT"]], "nrf_tasks_hfclkstart (c macro)": [[21, "c.NRF_TASKS_HFCLKSTART"]], "nrf_tasks_hfclkstop (c macro)": [[21, "c.NRF_TASKS_HFCLKSTOP"]], "nrf_clock_alwaysrun_active_get (c function)": [[21, "c.nrf_clock_alwaysrun_active_get"]], "nrf_clock_alwaysrun_get (c function)": [[21, "c.nrf_clock_alwaysrun_get"]], "nrf_clock_alwaysrun_set (c function)": [[21, "c.nrf_clock_alwaysrun_set"]], "nrf_clock_cal_timer_timeout_set (c function)": [[21, "c.nrf_clock_cal_timer_timeout_set"]], "nrf_clock_domain_t (c enum)": [[21, "c.nrf_clock_domain_t"]], "nrf_clock_domain_t.nrf_clock_domain_hfclk (c enumerator)": [[21, "c.nrf_clock_domain_t.NRF_CLOCK_DOMAIN_HFCLK"]], "nrf_clock_domain_t.nrf_clock_domain_hfclk192m (c enumerator)": [[21, "c.nrf_clock_domain_t.NRF_CLOCK_DOMAIN_HFCLK192M"]], "nrf_clock_domain_t.nrf_clock_domain_hfclkaudio (c enumerator)": [[21, "c.nrf_clock_domain_t.NRF_CLOCK_DOMAIN_HFCLKAUDIO"]], "nrf_clock_domain_t.nrf_clock_domain_lfclk (c enumerator)": [[21, "c.nrf_clock_domain_t.NRF_CLOCK_DOMAIN_LFCLK"]], "nrf_clock_event_address_get (c function)": [[21, "c.nrf_clock_event_address_get"]], "nrf_clock_event_check (c function)": [[21, "c.nrf_clock_event_check"]], "nrf_clock_event_clear (c function)": [[21, "c.nrf_clock_event_clear"]], "nrf_clock_event_t (c enum)": [[21, "c.nrf_clock_event_t"]], "nrf_clock_event_t.nrf_clock_event_ctstarted (c enumerator)": [[21, "c.nrf_clock_event_t.NRF_CLOCK_EVENT_CTSTARTED"]], "nrf_clock_event_t.nrf_clock_event_ctstopped (c enumerator)": [[21, "c.nrf_clock_event_t.NRF_CLOCK_EVENT_CTSTOPPED"]], "nrf_clock_event_t.nrf_clock_event_ctto (c enumerator)": [[21, "c.nrf_clock_event_t.NRF_CLOCK_EVENT_CTTO"]], "nrf_clock_event_t.nrf_clock_event_done (c enumerator)": [[21, "c.nrf_clock_event_t.NRF_CLOCK_EVENT_DONE"]], "nrf_clock_event_t.nrf_clock_event_hfclk192mstarted (c enumerator)": [[21, "c.nrf_clock_event_t.NRF_CLOCK_EVENT_HFCLK192MSTARTED"]], "nrf_clock_event_t.nrf_clock_event_hfclkstarted (c enumerator)": [[21, "c.nrf_clock_event_t.NRF_CLOCK_EVENT_HFCLKSTARTED"]], "nrf_clock_event_t.nrf_clock_event_lfclkstarted (c enumerator)": [[21, "c.nrf_clock_event_t.NRF_CLOCK_EVENT_LFCLKSTARTED"]], "nrf_clock_event_t.nrf_clock_event_pllstarted (c enumerator)": [[21, "c.nrf_clock_event_t.NRF_CLOCK_EVENT_PLLSTARTED"]], "nrf_clock_hf_is_running (c function)": [[21, "c.nrf_clock_hf_is_running"]], "nrf_clock_hf_src_get (c function)": [[21, "c.nrf_clock_hf_src_get"]], "nrf_clock_hf_src_set (c function)": [[21, "c.nrf_clock_hf_src_set"]], "nrf_clock_hf_start_task_status_get (c function)": [[21, "c.nrf_clock_hf_start_task_status_get"]], "nrf_clock_hfclk192m_div_get (c function)": [[21, "c.nrf_clock_hfclk192m_div_get"]], "nrf_clock_hfclk192m_div_set (c function)": [[21, "c.nrf_clock_hfclk192m_div_set"]], "nrf_clock_hfclk192m_src_get (c function)": [[21, "c.nrf_clock_hfclk192m_src_get"]], "nrf_clock_hfclk192m_src_set (c function)": [[21, "c.nrf_clock_hfclk192m_src_set"]], "nrf_clock_hfclk_div_t (c enum)": [[21, "c.nrf_clock_hfclk_div_t"]], "nrf_clock_hfclk_div_t.nrf_clock_hfclk_div_1 (c enumerator)": [[21, "c.nrf_clock_hfclk_div_t.NRF_CLOCK_HFCLK_DIV_1"]], "nrf_clock_hfclk_div_t.nrf_clock_hfclk_div_2 (c enumerator)": [[21, "c.nrf_clock_hfclk_div_t.NRF_CLOCK_HFCLK_DIV_2"]], "nrf_clock_hfclk_div_t.nrf_clock_hfclk_div_4 (c enumerator)": [[21, "c.nrf_clock_hfclk_div_t.NRF_CLOCK_HFCLK_DIV_4"]], "nrf_clock_hfclk_t (c enum)": [[21, "c.nrf_clock_hfclk_t"]], "nrf_clock_hfclk_t.nrf_clock_hfclk_high_accuracy (c enumerator)": [[21, "c.nrf_clock_hfclk_t.NRF_CLOCK_HFCLK_HIGH_ACCURACY"]], "nrf_clock_hfclk_t.nrf_clock_hfclk_low_accuracy (c enumerator)": [[21, "c.nrf_clock_hfclk_t.NRF_CLOCK_HFCLK_LOW_ACCURACY"]], "nrf_clock_hfclkaudio_config_get (c function)": [[21, "c.nrf_clock_hfclkaudio_config_get"]], "nrf_clock_hfclkaudio_config_set (c function)": [[21, "c.nrf_clock_hfclkaudio_config_set"]], "nrf_clock_int_disable (c function)": [[21, "c.nrf_clock_int_disable"]], "nrf_clock_int_enable (c function)": [[21, "c.nrf_clock_int_enable"]], "nrf_clock_int_enable_check (c function)": [[21, "c.nrf_clock_int_enable_check"]], "nrf_clock_int_mask_t (c enum)": [[21, "c.nrf_clock_int_mask_t"]], "nrf_clock_int_mask_t.nrfx_clock_int_pll_started_mask (c enumerator)": [[21, "c.nrf_clock_int_mask_t.NRFX_CLOCK_INT_PLL_STARTED_MASK"]], "nrf_clock_int_mask_t.nrf_clock_int_ctstarted_mask (c enumerator)": [[21, "c.nrf_clock_int_mask_t.NRF_CLOCK_INT_CTSTARTED_MASK"]], "nrf_clock_int_mask_t.nrf_clock_int_ctstopped_mask (c enumerator)": [[21, "c.nrf_clock_int_mask_t.NRF_CLOCK_INT_CTSTOPPED_MASK"]], "nrf_clock_int_mask_t.nrf_clock_int_ctto_mask (c enumerator)": [[21, "c.nrf_clock_int_mask_t.NRF_CLOCK_INT_CTTO_MASK"]], "nrf_clock_int_mask_t.nrf_clock_int_done_mask (c enumerator)": [[21, "c.nrf_clock_int_mask_t.NRF_CLOCK_INT_DONE_MASK"]], "nrf_clock_int_mask_t.nrf_clock_int_hf192m_started_mask (c enumerator)": [[21, "c.nrf_clock_int_mask_t.NRF_CLOCK_INT_HF192M_STARTED_MASK"]], "nrf_clock_int_mask_t.nrf_clock_int_hf_started_mask (c enumerator)": [[21, "c.nrf_clock_int_mask_t.NRF_CLOCK_INT_HF_STARTED_MASK"]], "nrf_clock_int_mask_t.nrf_clock_int_lf_started_mask (c enumerator)": [[21, "c.nrf_clock_int_mask_t.NRF_CLOCK_INT_LF_STARTED_MASK"]], "nrf_clock_is_running (c function)": [[21, "c.nrf_clock_is_running"]], "nrf_clock_lf_actv_src_get (c function)": [[21, "c.nrf_clock_lf_actv_src_get"]], "nrf_clock_lf_is_running (c function)": [[21, "c.nrf_clock_lf_is_running"]], "nrf_clock_lf_src_get (c function)": [[21, "c.nrf_clock_lf_src_get"]], "nrf_clock_lf_src_set (c function)": [[21, "c.nrf_clock_lf_src_set"]], "nrf_clock_lf_srccopy_get (c function)": [[21, "c.nrf_clock_lf_srccopy_get"]], "nrf_clock_lf_start_task_status_get (c function)": [[21, "c.nrf_clock_lf_start_task_status_get"]], "nrf_clock_lfclk_t (c enum)": [[21, "c.nrf_clock_lfclk_t"]], "nrf_clock_lfclk_t.nrf_clock_lfclk_lfulp (c enumerator)": [[21, "c.nrf_clock_lfclk_t.NRF_CLOCK_LFCLK_LFULP"]], "nrf_clock_lfclk_t.nrf_clock_lfclk_rc (c enumerator)": [[21, "c.nrf_clock_lfclk_t.NRF_CLOCK_LFCLK_RC"]], "nrf_clock_lfclk_t.nrf_clock_lfclk_synth (c enumerator)": [[21, "c.nrf_clock_lfclk_t.NRF_CLOCK_LFCLK_SYNTH"]], "nrf_clock_lfclk_t.nrf_clock_lfclk_xtal (c enumerator)": [[21, "c.nrf_clock_lfclk_t.NRF_CLOCK_LFCLK_XTAL"]], "nrf_clock_lfclk_t.nrf_clock_lfclk_xtal_full_swing (c enumerator)": [[21, "c.nrf_clock_lfclk_t.NRF_CLOCK_LFCLK_XTAL_FULL_SWING"]], "nrf_clock_lfclk_t.nrf_clock_lfclk_xtal_low_swing (c enumerator)": [[21, "c.nrf_clock_lfclk_t.NRF_CLOCK_LFCLK_XTAL_LOW_SWING"]], "nrf_clock_publish_clear (c function)": [[21, "c.nrf_clock_publish_clear"]], "nrf_clock_publish_set (c function)": [[21, "c.nrf_clock_publish_set"]], "nrf_clock_start_task_check (c function)": [[21, "c.nrf_clock_start_task_check"]], "nrf_clock_start_task_status_t (c enum)": [[21, "c.nrf_clock_start_task_status_t"]], "nrf_clock_start_task_status_t.nrf_clock_start_task_not_triggered (c enumerator)": [[21, "c.nrf_clock_start_task_status_t.NRF_CLOCK_START_TASK_NOT_TRIGGERED"]], "nrf_clock_start_task_status_t.nrf_clock_start_task_triggered (c enumerator)": [[21, "c.nrf_clock_start_task_status_t.NRF_CLOCK_START_TASK_TRIGGERED"]], "nrf_clock_subscribe_clear (c function)": [[21, "c.nrf_clock_subscribe_clear"]], "nrf_clock_subscribe_set (c function)": [[21, "c.nrf_clock_subscribe_set"]], "nrf_clock_task_address_get (c function)": [[21, "c.nrf_clock_task_address_get"]], "nrf_clock_task_t (c enum)": [[21, "c.nrf_clock_task_t"]], "nrf_clock_task_t.nrf_clock_task_cal (c enumerator)": [[21, "c.nrf_clock_task_t.NRF_CLOCK_TASK_CAL"]], "nrf_clock_task_t.nrf_clock_task_ctstart (c enumerator)": [[21, "c.nrf_clock_task_t.NRF_CLOCK_TASK_CTSTART"]], "nrf_clock_task_t.nrf_clock_task_ctstop (c enumerator)": [[21, "c.nrf_clock_task_t.NRF_CLOCK_TASK_CTSTOP"]], "nrf_clock_task_t.nrf_clock_task_hfclk192mstart (c enumerator)": [[21, "c.nrf_clock_task_t.NRF_CLOCK_TASK_HFCLK192MSTART"]], "nrf_clock_task_t.nrf_clock_task_hfclk192mstop (c enumerator)": [[21, "c.nrf_clock_task_t.NRF_CLOCK_TASK_HFCLK192MSTOP"]], "nrf_clock_task_t.nrf_clock_task_hfclkaudiostop (c enumerator)": [[21, "c.nrf_clock_task_t.NRF_CLOCK_TASK_HFCLKAUDIOSTOP"]], "nrf_clock_task_t.nrf_clock_task_hfclkstart (c enumerator)": [[21, "c.nrf_clock_task_t.NRF_CLOCK_TASK_HFCLKSTART"]], "nrf_clock_task_t.nrf_clock_task_hfclkstop (c enumerator)": [[21, "c.nrf_clock_task_t.NRF_CLOCK_TASK_HFCLKSTOP"]], "nrf_clock_task_t.nrf_clock_task_lfclkstart (c enumerator)": [[21, "c.nrf_clock_task_t.NRF_CLOCK_TASK_LFCLKSTART"]], "nrf_clock_task_t.nrf_clock_task_lfclkstop (c enumerator)": [[21, "c.nrf_clock_task_t.NRF_CLOCK_TASK_LFCLKSTOP"]], "nrf_clock_task_t.nrf_clock_task_pllstart (c enumerator)": [[21, "c.nrf_clock_task_t.NRF_CLOCK_TASK_PLLSTART"]], "nrf_clock_task_t.nrf_clock_task_pllstop (c enumerator)": [[21, "c.nrf_clock_task_t.NRF_CLOCK_TASK_PLLSTOP"]], "nrf_clock_task_trigger (c function)": [[21, "c.nrf_clock_task_trigger"]], "nrfx_comp_config_th (c macro)": [[23, "c.NRFX_COMP_CONFIG_TH"]], "nrfx_comp_default_config (c macro)": [[23, "c.NRFX_COMP_DEFAULT_CONFIG"]], "nrfx_comp_voltage_threshold_to_int (c macro)": [[23, "c.NRFX_COMP_VOLTAGE_THRESHOLD_TO_INT"]], "nrfx_comp_config_t (c struct)": [[23, "c.nrfx_comp_config_t"]], "nrfx_comp_config_t.ext_ref (c var)": [[23, "c.nrfx_comp_config_t.ext_ref"]], "nrfx_comp_config_t.hyst (c var)": [[23, "c.nrfx_comp_config_t.hyst"]], "nrfx_comp_config_t.input (c var)": [[23, "c.nrfx_comp_config_t.input"]], "nrfx_comp_config_t.interrupt_priority (c var)": [[23, "c.nrfx_comp_config_t.interrupt_priority"]], "nrfx_comp_config_t.main_mode (c var)": [[23, "c.nrfx_comp_config_t.main_mode"]], "nrfx_comp_config_t.reference (c var)": [[23, "c.nrfx_comp_config_t.reference"]], "nrfx_comp_config_t.speed_mode (c var)": [[23, "c.nrfx_comp_config_t.speed_mode"]], "nrfx_comp_config_t.threshold (c var)": [[23, "c.nrfx_comp_config_t.threshold"]], "nrfx_comp_event_address_get (c function)": [[23, "c.nrfx_comp_event_address_get"]], "nrfx_comp_event_handler_t (c type)": [[23, "c.nrfx_comp_event_handler_t"]], "nrfx_comp_evt_en_mask_t (c enum)": [[23, "c.nrfx_comp_evt_en_mask_t"]], "nrfx_comp_evt_en_mask_t.nrfx_comp_evt_en_cross_mask (c enumerator)": [[23, "c.nrfx_comp_evt_en_mask_t.NRFX_COMP_EVT_EN_CROSS_MASK"]], "nrfx_comp_evt_en_mask_t.nrfx_comp_evt_en_down_mask (c enumerator)": [[23, "c.nrfx_comp_evt_en_mask_t.NRFX_COMP_EVT_EN_DOWN_MASK"]], "nrfx_comp_evt_en_mask_t.nrfx_comp_evt_en_ready_mask (c enumerator)": [[23, "c.nrfx_comp_evt_en_mask_t.NRFX_COMP_EVT_EN_READY_MASK"]], "nrfx_comp_evt_en_mask_t.nrfx_comp_evt_en_up_mask (c enumerator)": [[23, "c.nrfx_comp_evt_en_mask_t.NRFX_COMP_EVT_EN_UP_MASK"]], "nrfx_comp_init (c function)": [[23, "c.nrfx_comp_init"]], "nrfx_comp_init_check (c function)": [[23, "c.nrfx_comp_init_check"]], "nrfx_comp_pin_select (c function)": [[23, "c.nrfx_comp_pin_select"]], "nrfx_comp_reconfigure (c function)": [[23, "c.nrfx_comp_reconfigure"]], "nrfx_comp_sample (c function)": [[23, "c.nrfx_comp_sample"]], "nrfx_comp_short_mask_t (c enum)": [[23, "c.nrfx_comp_short_mask_t"]], "nrfx_comp_short_mask_t.nrfx_comp_short_stop_after_cross_evt (c enumerator)": [[23, "c.nrfx_comp_short_mask_t.NRFX_COMP_SHORT_STOP_AFTER_CROSS_EVT"]], "nrfx_comp_short_mask_t.nrfx_comp_short_stop_after_down_evt (c enumerator)": [[23, "c.nrfx_comp_short_mask_t.NRFX_COMP_SHORT_STOP_AFTER_DOWN_EVT"]], "nrfx_comp_short_mask_t.nrfx_comp_short_stop_after_up_evt (c enumerator)": [[23, "c.nrfx_comp_short_mask_t.NRFX_COMP_SHORT_STOP_AFTER_UP_EVT"]], "nrfx_comp_start (c function)": [[23, "c.nrfx_comp_start"]], "nrfx_comp_stop (c function)": [[23, "c.nrfx_comp_stop"]], "nrfx_comp_task_address_get (c function)": [[23, "c.nrfx_comp_task_address_get"]], "nrfx_comp_uninit (c function)": [[23, "c.nrfx_comp_uninit"]], "nrf_comp_has_ain_as_pin (c macro)": [[24, "c.NRF_COMP_HAS_AIN_AS_PIN"]], "nrf_comp_has_isource (c macro)": [[24, "c.NRF_COMP_HAS_ISOURCE"]], "nrf_comp_disable (c function)": [[24, "c.nrf_comp_disable"]], "nrf_comp_enable (c function)": [[24, "c.nrf_comp_enable"]], "nrf_comp_enable_check (c function)": [[24, "c.nrf_comp_enable_check"]], "nrf_comp_event_address_get (c function)": [[24, "c.nrf_comp_event_address_get"]], "nrf_comp_event_check (c function)": [[24, "c.nrf_comp_event_check"]], "nrf_comp_event_clear (c function)": [[24, "c.nrf_comp_event_clear"]], "nrf_comp_event_t (c enum)": [[24, "c.nrf_comp_event_t"]], "nrf_comp_event_t.nrf_comp_event_cross (c enumerator)": [[24, "c.nrf_comp_event_t.NRF_COMP_EVENT_CROSS"]], "nrf_comp_event_t.nrf_comp_event_down (c enumerator)": [[24, "c.nrf_comp_event_t.NRF_COMP_EVENT_DOWN"]], "nrf_comp_event_t.nrf_comp_event_ready (c enumerator)": [[24, "c.nrf_comp_event_t.NRF_COMP_EVENT_READY"]], "nrf_comp_event_t.nrf_comp_event_up (c enumerator)": [[24, "c.nrf_comp_event_t.NRF_COMP_EVENT_UP"]], "nrf_comp_ext_ref_set (c function)": [[24, "c.nrf_comp_ext_ref_set"]], "nrf_comp_ext_ref_t (c type)": [[24, "c.nrf_comp_ext_ref_t"]], "nrf_comp_hyst_t (c enum)": [[24, "c.nrf_comp_hyst_t"]], "nrf_comp_hyst_t.nrf_comp_hyst_40mv (c enumerator)": [[24, "c.nrf_comp_hyst_t.NRF_COMP_HYST_40MV"]], "nrf_comp_hyst_t.nrf_comp_hyst_50mv (c enumerator)": [[24, "c.nrf_comp_hyst_t.NRF_COMP_HYST_50MV"]], "nrf_comp_hyst_t.nrf_comp_hyst_no_hyst (c enumerator)": [[24, "c.nrf_comp_hyst_t.NRF_COMP_HYST_NO_HYST"]], "nrf_comp_hysteresis_set (c function)": [[24, "c.nrf_comp_hysteresis_set"]], "nrf_comp_input_select (c function)": [[24, "c.nrf_comp_input_select"]], "nrf_comp_input_t (c type)": [[24, "c.nrf_comp_input_t"]], "nrf_comp_int_disable (c function)": [[24, "c.nrf_comp_int_disable"]], "nrf_comp_int_enable (c function)": [[24, "c.nrf_comp_int_enable"]], "nrf_comp_int_enable_check (c function)": [[24, "c.nrf_comp_int_enable_check"]], "nrf_comp_int_mask_t (c enum)": [[24, "c.nrf_comp_int_mask_t"]], "nrf_comp_int_mask_t.nrf_comp_int_cross_mask (c enumerator)": [[24, "c.nrf_comp_int_mask_t.NRF_COMP_INT_CROSS_MASK"]], "nrf_comp_int_mask_t.nrf_comp_int_down_mask (c enumerator)": [[24, "c.nrf_comp_int_mask_t.NRF_COMP_INT_DOWN_MASK"]], "nrf_comp_int_mask_t.nrf_comp_int_ready_mask (c enumerator)": [[24, "c.nrf_comp_int_mask_t.NRF_COMP_INT_READY_MASK"]], "nrf_comp_int_mask_t.nrf_comp_int_up_mask (c enumerator)": [[24, "c.nrf_comp_int_mask_t.NRF_COMP_INT_UP_MASK"]], "nrf_comp_isource_set (c function)": [[24, "c.nrf_comp_isource_set"]], "nrf_comp_main_mode_set (c function)": [[24, "c.nrf_comp_main_mode_set"]], "nrf_comp_main_mode_t (c enum)": [[24, "c.nrf_comp_main_mode_t"]], "nrf_comp_main_mode_t.nrf_comp_main_mode_diff (c enumerator)": [[24, "c.nrf_comp_main_mode_t.NRF_COMP_MAIN_MODE_DIFF"]], "nrf_comp_main_mode_t.nrf_comp_main_mode_se (c enumerator)": [[24, "c.nrf_comp_main_mode_t.NRF_COMP_MAIN_MODE_SE"]], "nrf_comp_ref_conf_t (c struct)": [[24, "c.nrf_comp_ref_conf_t"]], "nrf_comp_ref_conf_t.external (c var)": [[24, "c.nrf_comp_ref_conf_t.external"]], "nrf_comp_ref_conf_t.reference (c var)": [[24, "c.nrf_comp_ref_conf_t.reference"]], "nrf_comp_ref_set (c function)": [[24, "c.nrf_comp_ref_set"]], "nrf_comp_ref_t (c enum)": [[24, "c.nrf_comp_ref_t"]], "nrf_comp_ref_t.nrf_comp_ref_aref (c enumerator)": [[24, "c.nrf_comp_ref_t.NRF_COMP_REF_AREF"]], "nrf_comp_ref_t.nrf_comp_ref_avddao1v8 (c enumerator)": [[24, "c.nrf_comp_ref_t.NRF_COMP_REF_AVDDAO1V8"]], "nrf_comp_ref_t.nrf_comp_ref_int_1v2 (c enumerator)": [[24, "c.nrf_comp_ref_t.NRF_COMP_REF_INT_1V2"]], "nrf_comp_ref_t.nrf_comp_ref_int_1v8 (c enumerator)": [[24, "c.nrf_comp_ref_t.NRF_COMP_REF_INT_1V8"]], "nrf_comp_ref_t.nrf_comp_ref_int_2v4 (c enumerator)": [[24, "c.nrf_comp_ref_t.NRF_COMP_REF_INT_2V4"]], "nrf_comp_ref_t.nrf_comp_ref_vdd (c enumerator)": [[24, "c.nrf_comp_ref_t.NRF_COMP_REF_VDD"]], "nrf_comp_result_get (c function)": [[24, "c.nrf_comp_result_get"]], "nrf_comp_short_mask_t (c enum)": [[24, "c.nrf_comp_short_mask_t"]], "nrf_comp_short_mask_t.nrf_comp_short_stop_cross_mask (c enumerator)": [[24, "c.nrf_comp_short_mask_t.NRF_COMP_SHORT_STOP_CROSS_MASK"]], "nrf_comp_short_mask_t.nrf_comp_short_stop_down_mask (c enumerator)": [[24, "c.nrf_comp_short_mask_t.NRF_COMP_SHORT_STOP_DOWN_MASK"]], "nrf_comp_short_mask_t.nrf_comp_short_stop_up_mask (c enumerator)": [[24, "c.nrf_comp_short_mask_t.NRF_COMP_SHORT_STOP_UP_MASK"]], "nrf_comp_shorts_disable (c function)": [[24, "c.nrf_comp_shorts_disable"]], "nrf_comp_shorts_enable (c function)": [[24, "c.nrf_comp_shorts_enable"]], "nrf_comp_sp_mode_t (c enum)": [[24, "c.nrf_comp_sp_mode_t"]], "nrf_comp_sp_mode_t.nrf_comp_sp_mode_high (c enumerator)": [[24, "c.nrf_comp_sp_mode_t.NRF_COMP_SP_MODE_HIGH"]], "nrf_comp_sp_mode_t.nrf_comp_sp_mode_low (c enumerator)": [[24, "c.nrf_comp_sp_mode_t.NRF_COMP_SP_MODE_LOW"]], "nrf_comp_sp_mode_t.nrf_comp_sp_mode_normal (c enumerator)": [[24, "c.nrf_comp_sp_mode_t.NRF_COMP_SP_MODE_NORMAL"]], "nrf_comp_speed_mode_set (c function)": [[24, "c.nrf_comp_speed_mode_set"]], "nrf_comp_task_address_get (c function)": [[24, "c.nrf_comp_task_address_get"]], "nrf_comp_task_t (c enum)": [[24, "c.nrf_comp_task_t"]], "nrf_comp_task_t.nrf_comp_task_sample (c enumerator)": [[24, "c.nrf_comp_task_t.NRF_COMP_TASK_SAMPLE"]], "nrf_comp_task_t.nrf_comp_task_start (c enumerator)": [[24, "c.nrf_comp_task_t.NRF_COMP_TASK_START"]], "nrf_comp_task_t.nrf_comp_task_stop (c enumerator)": [[24, "c.nrf_comp_task_t.NRF_COMP_TASK_STOP"]], "nrf_comp_task_trigger (c function)": [[24, "c.nrf_comp_task_trigger"]], "nrf_comp_th_set (c function)": [[24, "c.nrf_comp_th_set"]], "nrf_comp_th_t (c struct)": [[24, "c.nrf_comp_th_t"]], "nrf_comp_th_t.th_down (c var)": [[24, "c.nrf_comp_th_t.th_down"]], "nrf_comp_th_t.th_up (c var)": [[24, "c.nrf_comp_th_t.th_up"]], "nrf_isource_t (c enum)": [[24, "c.nrf_isource_t"]], "nrf_isource_t.nrf_comp_isource_ien_10ua (c enumerator)": [[24, "c.nrf_isource_t.NRF_COMP_ISOURCE_IEN_10UA"]], "nrf_isource_t.nrf_comp_isource_ien_2ua5 (c enumerator)": [[24, "c.nrf_isource_t.NRF_COMP_ISOURCE_IEN_2UA5"]], "nrf_isource_t.nrf_comp_isource_ien_5ua (c enumerator)": [[24, "c.nrf_isource_t.NRF_COMP_ISOURCE_IEN_5UA"]], "nrf_isource_t.nrf_comp_isource_off (c enumerator)": [[24, "c.nrf_isource_t.NRF_COMP_ISOURCE_OFF"]], "nrfy_comp_has_isource (c macro)": [[25, "c.NRFY_COMP_HAS_ISOURCE"]], "nrfy_comp_config_t (c struct)": [[25, "c.nrfy_comp_config_t"]], "nrfy_comp_config_t.ext_ref (c var)": [[25, "c.nrfy_comp_config_t.ext_ref"]], "nrfy_comp_config_t.hyst (c var)": [[25, "c.nrfy_comp_config_t.hyst"]], "nrfy_comp_config_t.input (c var)": [[25, "c.nrfy_comp_config_t.input"]], "nrfy_comp_config_t.isource (c var)": [[25, "c.nrfy_comp_config_t.isource"]], "nrfy_comp_config_t.main_mode (c var)": [[25, "c.nrfy_comp_config_t.main_mode"]], "nrfy_comp_config_t.reference (c var)": [[25, "c.nrfy_comp_config_t.reference"]], "nrfy_comp_config_t.speed_mode (c var)": [[25, "c.nrfy_comp_config_t.speed_mode"]], "nrfy_comp_config_t.threshold (c var)": [[25, "c.nrfy_comp_config_t.threshold"]], "nrfy_comp_disable (c function)": [[25, "c.nrfy_comp_disable"]], "nrfy_comp_enable (c function)": [[25, "c.nrfy_comp_enable"]], "nrfy_comp_enable_check (c function)": [[25, "c.nrfy_comp_enable_check"]], "nrfy_comp_event_address_get (c function)": [[25, "c.nrfy_comp_event_address_get"]], "nrfy_comp_event_check (c function)": [[25, "c.nrfy_comp_event_check"]], "nrfy_comp_event_clear (c function)": [[25, "c.nrfy_comp_event_clear"]], "nrfy_comp_events_process (c function)": [[25, "c.nrfy_comp_events_process"]], "nrfy_comp_ext_ref_set (c function)": [[25, "c.nrfy_comp_ext_ref_set"]], "nrfy_comp_hysteresis_set (c function)": [[25, "c.nrfy_comp_hysteresis_set"]], "nrfy_comp_input_select (c function)": [[25, "c.nrfy_comp_input_select"]], "nrfy_comp_int_disable (c function)": [[25, "c.nrfy_comp_int_disable"]], "nrfy_comp_int_enable (c function)": [[25, "c.nrfy_comp_int_enable"]], "nrfy_comp_int_enable_check (c function)": [[25, "c.nrfy_comp_int_enable_check"]], "nrfy_comp_int_init (c function)": [[25, "c.nrfy_comp_int_init"]], "nrfy_comp_int_uninit (c function)": [[25, "c.nrfy_comp_int_uninit"]], "nrfy_comp_isource_set (c function)": [[25, "c.nrfy_comp_isource_set"]], "nrfy_comp_main_mode_set (c function)": [[25, "c.nrfy_comp_main_mode_set"]], "nrfy_comp_periph_configure (c function)": [[25, "c.nrfy_comp_periph_configure"]], "nrfy_comp_ref_set (c function)": [[25, "c.nrfy_comp_ref_set"]], "nrfy_comp_result_get (c function)": [[25, "c.nrfy_comp_result_get"]], "nrfy_comp_sample (c function)": [[25, "c.nrfy_comp_sample"]], "nrfy_comp_shorts_disable (c function)": [[25, "c.nrfy_comp_shorts_disable"]], "nrfy_comp_shorts_enable (c function)": [[25, "c.nrfy_comp_shorts_enable"]], "nrfy_comp_speed_mode_set (c function)": [[25, "c.nrfy_comp_speed_mode_set"]], "nrfy_comp_task_address_get (c function)": [[25, "c.nrfy_comp_task_address_get"]], "nrfy_comp_task_trigger (c function)": [[25, "c.nrfy_comp_task_trigger"]], "nrfy_comp_th_set (c function)": [[25, "c.nrfy_comp_th_set"]], "nrf_cracen_seed_count (c macro)": [[27, "c.NRF_CRACEN_SEED_COUNT"]], "nrf_cracen_event_address_get (c function)": [[27, "c.nrf_cracen_event_address_get"]], "nrf_cracen_event_check (c function)": [[27, "c.nrf_cracen_event_check"]], "nrf_cracen_event_clear (c function)": [[27, "c.nrf_cracen_event_clear"]], "nrf_cracen_event_t (c enum)": [[27, "c.nrf_cracen_event_t"]], "nrf_cracen_event_t.nrf_cracen_event_cryptomaster (c enumerator)": [[27, "c.nrf_cracen_event_t.NRF_CRACEN_EVENT_CRYPTOMASTER"]], "nrf_cracen_event_t.nrf_cracen_event_pke_ikg (c enumerator)": [[27, "c.nrf_cracen_event_t.NRF_CRACEN_EVENT_PKE_IKG"]], "nrf_cracen_event_t.nrf_cracen_event_rng (c enumerator)": [[27, "c.nrf_cracen_event_t.NRF_CRACEN_EVENT_RNG"]], "nrf_cracen_int_disable (c function)": [[27, "c.nrf_cracen_int_disable"]], "nrf_cracen_int_enable (c function)": [[27, "c.nrf_cracen_int_enable"]], "nrf_cracen_int_enable_check (c function)": [[27, "c.nrf_cracen_int_enable_check"]], "nrf_cracen_int_mask_t (c enum)": [[27, "c.nrf_cracen_int_mask_t"]], "nrf_cracen_int_mask_t.nrf_cracen_int_cryptomaster_mask (c enumerator)": [[27, "c.nrf_cracen_int_mask_t.NRF_CRACEN_INT_CRYPTOMASTER_MASK"]], "nrf_cracen_int_mask_t.nrf_cracen_int_pke_ikg_mask (c enumerator)": [[27, "c.nrf_cracen_int_mask_t.NRF_CRACEN_INT_PKE_IKG_MASK"]], "nrf_cracen_int_mask_t.nrf_cracen_int_rng_mask (c enumerator)": [[27, "c.nrf_cracen_int_mask_t.NRF_CRACEN_INT_RNG_MASK"]], "nrf_cracen_module_disable (c function)": [[27, "c.nrf_cracen_module_disable"]], "nrf_cracen_module_enable (c function)": [[27, "c.nrf_cracen_module_enable"]], "nrf_cracen_module_get (c function)": [[27, "c.nrf_cracen_module_get"]], "nrf_cracen_module_mask_t (c enum)": [[27, "c.nrf_cracen_module_mask_t"]], "nrf_cracen_module_mask_t.nrf_cracen_module_cryptomaster_mask (c enumerator)": [[27, "c.nrf_cracen_module_mask_t.NRF_CRACEN_MODULE_CRYPTOMASTER_MASK"]], "nrf_cracen_module_mask_t.nrf_cracen_module_pke_ikg_mask (c enumerator)": [[27, "c.nrf_cracen_module_mask_t.NRF_CRACEN_MODULE_PKE_IKG_MASK"]], "nrf_cracen_module_mask_t.nrf_cracen_module_rng_mask (c enumerator)": [[27, "c.nrf_cracen_module_mask_t.NRF_CRACEN_MODULE_RNG_MASK"]], "nrf_cracen_seed_set (c function)": [[27, "c.nrf_cracen_seed_set"]], "nrf_cracen_seedram_lock_check (c function)": [[27, "c.nrf_cracen_seedram_lock_check"]], "nrf_cracen_seedram_lock_enable_set (c function)": [[27, "c.nrf_cracen_seedram_lock_enable_set"]], "nrf_ctrlap_bootmode_t (c enum)": [[29, "c.nrf_ctrlap_bootmode_t"]], "nrf_ctrlap_bootmode_t.nrf_ctrlap_mode_normal (c enumerator)": [[29, "c.nrf_ctrlap_bootmode_t.NRF_CTRLAP_MODE_NORMAL"]], "nrf_ctrlap_bootmode_t.nrf_ctrlap_mode_rom_operation (c enumerator)": [[29, "c.nrf_ctrlap_bootmode_t.NRF_CTRLAP_MODE_ROM_OPERATION"]], "nrf_ctrlap_event_address_get (c function)": [[29, "c.nrf_ctrlap_event_address_get"]], "nrf_ctrlap_event_check (c function)": [[29, "c.nrf_ctrlap_event_check"]], "nrf_ctrlap_event_clear (c function)": [[29, "c.nrf_ctrlap_event_clear"]], "nrf_ctrlap_event_t (c enum)": [[29, "c.nrf_ctrlap_event_t"]], "nrf_ctrlap_event_t.nrf_ctrlap_event_rxready (c enumerator)": [[29, "c.nrf_ctrlap_event_t.NRF_CTRLAP_EVENT_RXREADY"]], "nrf_ctrlap_event_t.nrf_ctrlap_event_txdone (c enumerator)": [[29, "c.nrf_ctrlap_event_t.NRF_CTRLAP_EVENT_TXDONE"]], "nrf_ctrlap_info_get (c function)": [[29, "c.nrf_ctrlap_info_get"]], "nrf_ctrlap_info_set (c function)": [[29, "c.nrf_ctrlap_info_set"]], "nrf_ctrlap_info_t (c struct)": [[29, "c.nrf_ctrlap_info_t"]], "nrf_ctrlap_info_t.hw_revision (c var)": [[29, "c.nrf_ctrlap_info_t.hw_revision"]], "nrf_ctrlap_info_t.partno (c var)": [[29, "c.nrf_ctrlap_info_t.partno"]], "nrf_ctrlap_info_t.ready (c var)": [[29, "c.nrf_ctrlap_info_t.ready"]], "nrf_ctrlap_int_disable (c function)": [[29, "c.nrf_ctrlap_int_disable"]], "nrf_ctrlap_int_enable (c function)": [[29, "c.nrf_ctrlap_int_enable"]], "nrf_ctrlap_int_enable_check (c function)": [[29, "c.nrf_ctrlap_int_enable_check"]], "nrf_ctrlap_int_mask_t (c enum)": [[29, "c.nrf_ctrlap_int_mask_t"]], "nrf_ctrlap_int_mask_t.nrf_ctrlap_int_rxready_mask (c enumerator)": [[29, "c.nrf_ctrlap_int_mask_t.NRF_CTRLAP_INT_RXREADY_MASK"]], "nrf_ctrlap_int_mask_t.nrf_ctrlap_int_txdone_mask (c enumerator)": [[29, "c.nrf_ctrlap_int_mask_t.NRF_CTRLAP_INT_TXDONE_MASK"]], "nrf_ctrlap_int_pending_get (c function)": [[29, "c.nrf_ctrlap_int_pending_get"]], "nrf_ctrlap_mailbox_bootmode_get (c function)": [[29, "c.nrf_ctrlap_mailbox_bootmode_get"]], "nrf_ctrlap_mailbox_rxdata_get (c function)": [[29, "c.nrf_ctrlap_mailbox_rxdata_get"]], "nrf_ctrlap_mailbox_rxstatus_pending_check (c function)": [[29, "c.nrf_ctrlap_mailbox_rxstatus_pending_check"]], "nrf_ctrlap_mailbox_txdata_get (c function)": [[29, "c.nrf_ctrlap_mailbox_txdata_get"]], "nrf_ctrlap_mailbox_txdata_set (c function)": [[29, "c.nrf_ctrlap_mailbox_txdata_set"]], "nrf_ctrlap_mailbox_txstatus_pending_check (c function)": [[29, "c.nrf_ctrlap_mailbox_txstatus_pending_check"]], "nrf_dcnf_cpuid_get (c function)": [[31, "c.nrf_dcnf_cpuid_get"]], "nrfx_dppi_channel_alloc (c function)": [[33, "c.nrfx_dppi_channel_alloc"]], "nrfx_dppi_channel_disable (c function)": [[33, "c.nrfx_dppi_channel_disable"]], "nrfx_dppi_channel_enable (c function)": [[33, "c.nrfx_dppi_channel_enable"]], "nrfx_dppi_channel_free (c function)": [[33, "c.nrfx_dppi_channel_free"]], "nrfx_dppi_channel_include_in_group (c function)": [[33, "c.nrfx_dppi_channel_include_in_group"]], "nrfx_dppi_channel_remove_from_group (c function)": [[33, "c.nrfx_dppi_channel_remove_from_group"]], "nrfx_dppi_free (c function)": [[33, "c.nrfx_dppi_free"]], "nrfx_dppi_group_alloc (c function)": [[33, "c.nrfx_dppi_group_alloc"]], "nrfx_dppi_group_clear (c function)": [[33, "c.nrfx_dppi_group_clear"]], "nrfx_dppi_group_disable (c function)": [[33, "c.nrfx_dppi_group_disable"]], "nrfx_dppi_group_enable (c function)": [[33, "c.nrfx_dppi_group_enable"]], "nrfx_dppi_group_free (c function)": [[33, "c.nrfx_dppi_group_free"]], "nrf_dppi_endpoint_clear (c macro)": [[34, "c.NRF_DPPI_ENDPOINT_CLEAR"]], "nrf_dppi_endpoint_setup (c macro)": [[34, "c.NRF_DPPI_ENDPOINT_SETUP"]], "nrf_dppi_channel_check (c function)": [[34, "c.nrf_dppi_channel_check"]], "nrf_dppi_channel_group_t (c enum)": [[34, "c.nrf_dppi_channel_group_t"]], "nrf_dppi_channel_group_t.nrf_dppi_channel_group0 (c enumerator)": [[34, "c.nrf_dppi_channel_group_t.NRF_DPPI_CHANNEL_GROUP0"]], "nrf_dppi_channel_group_t.nrf_dppi_channel_group1 (c enumerator)": [[34, "c.nrf_dppi_channel_group_t.NRF_DPPI_CHANNEL_GROUP1"]], "nrf_dppi_channel_group_t.nrf_dppi_channel_group2 (c enumerator)": [[34, "c.nrf_dppi_channel_group_t.NRF_DPPI_CHANNEL_GROUP2"]], "nrf_dppi_channel_group_t.nrf_dppi_channel_group3 (c enumerator)": [[34, "c.nrf_dppi_channel_group_t.NRF_DPPI_CHANNEL_GROUP3"]], "nrf_dppi_channel_group_t.nrf_dppi_channel_group4 (c enumerator)": [[34, "c.nrf_dppi_channel_group_t.NRF_DPPI_CHANNEL_GROUP4"]], "nrf_dppi_channel_group_t.nrf_dppi_channel_group5 (c enumerator)": [[34, "c.nrf_dppi_channel_group_t.NRF_DPPI_CHANNEL_GROUP5"]], "nrf_dppi_channel_number_get (c function)": [[34, "c.nrf_dppi_channel_number_get"]], "nrf_dppi_channels_disable (c function)": [[34, "c.nrf_dppi_channels_disable"]], "nrf_dppi_channels_disable_all (c function)": [[34, "c.nrf_dppi_channels_disable_all"]], "nrf_dppi_channels_enable (c function)": [[34, "c.nrf_dppi_channels_enable"]], "nrf_dppi_channels_group_set (c function)": [[34, "c.nrf_dppi_channels_group_set"]], "nrf_dppi_channels_include_in_group (c function)": [[34, "c.nrf_dppi_channels_include_in_group"]], "nrf_dppi_channels_remove_from_group (c function)": [[34, "c.nrf_dppi_channels_remove_from_group"]], "nrf_dppi_group_clear (c function)": [[34, "c.nrf_dppi_group_clear"]], "nrf_dppi_group_disable (c function)": [[34, "c.nrf_dppi_group_disable"]], "nrf_dppi_group_disable_task_get (c function)": [[34, "c.nrf_dppi_group_disable_task_get"]], "nrf_dppi_group_enable (c function)": [[34, "c.nrf_dppi_group_enable"]], "nrf_dppi_group_enable_task_get (c function)": [[34, "c.nrf_dppi_group_enable_task_get"]], "nrf_dppi_group_number_get (c function)": [[34, "c.nrf_dppi_group_number_get"]], "nrf_dppi_subscribe_clear (c function)": [[34, "c.nrf_dppi_subscribe_clear"]], "nrf_dppi_subscribe_set (c function)": [[34, "c.nrf_dppi_subscribe_set"]], "nrf_dppi_task_address_get (c function)": [[34, "c.nrf_dppi_task_address_get"]], "nrf_dppi_task_t (c enum)": [[34, "c.nrf_dppi_task_t"]], "nrf_dppi_task_t.nrf_dppi_task_chg0_dis (c enumerator)": [[34, "c.nrf_dppi_task_t.NRF_DPPI_TASK_CHG0_DIS"]], "nrf_dppi_task_t.nrf_dppi_task_chg0_en (c enumerator)": [[34, "c.nrf_dppi_task_t.NRF_DPPI_TASK_CHG0_EN"]], "nrf_dppi_task_t.nrf_dppi_task_chg1_dis (c enumerator)": [[34, "c.nrf_dppi_task_t.NRF_DPPI_TASK_CHG1_DIS"]], "nrf_dppi_task_t.nrf_dppi_task_chg1_en (c enumerator)": [[34, "c.nrf_dppi_task_t.NRF_DPPI_TASK_CHG1_EN"]], "nrf_dppi_task_t.nrf_dppi_task_chg2_dis (c enumerator)": [[34, "c.nrf_dppi_task_t.NRF_DPPI_TASK_CHG2_DIS"]], "nrf_dppi_task_t.nrf_dppi_task_chg2_en (c enumerator)": [[34, "c.nrf_dppi_task_t.NRF_DPPI_TASK_CHG2_EN"]], "nrf_dppi_task_t.nrf_dppi_task_chg3_dis (c enumerator)": [[34, "c.nrf_dppi_task_t.NRF_DPPI_TASK_CHG3_DIS"]], "nrf_dppi_task_t.nrf_dppi_task_chg3_en (c enumerator)": [[34, "c.nrf_dppi_task_t.NRF_DPPI_TASK_CHG3_EN"]], "nrf_dppi_task_t.nrf_dppi_task_chg4_dis (c enumerator)": [[34, "c.nrf_dppi_task_t.NRF_DPPI_TASK_CHG4_DIS"]], "nrf_dppi_task_t.nrf_dppi_task_chg4_en (c enumerator)": [[34, "c.nrf_dppi_task_t.NRF_DPPI_TASK_CHG4_EN"]], "nrf_dppi_task_t.nrf_dppi_task_chg5_dis (c enumerator)": [[34, "c.nrf_dppi_task_t.NRF_DPPI_TASK_CHG5_DIS"]], "nrf_dppi_task_t.nrf_dppi_task_chg5_en (c enumerator)": [[34, "c.nrf_dppi_task_t.NRF_DPPI_TASK_CHG5_EN"]], "nrf_dppi_task_trigger (c function)": [[34, "c.nrf_dppi_task_trigger"]], "nrfy_dppi_channel_check (c function)": [[35, "c.nrfy_dppi_channel_check"]], "nrfy_dppi_channel_number_get (c function)": [[35, "c.nrfy_dppi_channel_number_get"]], "nrfy_dppi_channels_disable (c function)": [[35, "c.nrfy_dppi_channels_disable"]], "nrfy_dppi_channels_disable_all (c function)": [[35, "c.nrfy_dppi_channels_disable_all"]], "nrfy_dppi_channels_enable (c function)": [[35, "c.nrfy_dppi_channels_enable"]], "nrfy_dppi_channels_group_set (c function)": [[35, "c.nrfy_dppi_channels_group_set"]], "nrfy_dppi_channels_include_in_group (c function)": [[35, "c.nrfy_dppi_channels_include_in_group"]], "nrfy_dppi_channels_remove_from_group (c function)": [[35, "c.nrfy_dppi_channels_remove_from_group"]], "nrfy_dppi_channels_set (c function)": [[35, "c.nrfy_dppi_channels_set"]], "nrfy_dppi_group_clear (c function)": [[35, "c.nrfy_dppi_group_clear"]], "nrfy_dppi_group_disable (c function)": [[35, "c.nrfy_dppi_group_disable"]], "nrfy_dppi_group_disable_task_get (c function)": [[35, "c.nrfy_dppi_group_disable_task_get"]], "nrfy_dppi_group_enable (c function)": [[35, "c.nrfy_dppi_group_enable"]], "nrfy_dppi_group_enable_task_get (c function)": [[35, "c.nrfy_dppi_group_enable_task_get"]], "nrfy_dppi_group_number_get (c function)": [[35, "c.nrfy_dppi_group_number_get"]], "nrfy_dppi_subscribe_clear (c function)": [[35, "c.nrfy_dppi_subscribe_clear"]], "nrfy_dppi_subscribe_set (c function)": [[35, "c.nrfy_dppi_subscribe_set"]], "nrfy_dppi_task_address_get (c function)": [[35, "c.nrfy_dppi_task_address_get"]], "nrfy_dppi_task_trigger (c function)": [[35, "c.nrfy_dppi_task_trigger"]], "nrf_ecb_has_ecbdataptr (c macro)": [[37, "c.NRF_ECB_HAS_ECBDATAPTR"]], "nrf_ecb_has_event_end (c macro)": [[37, "c.NRF_ECB_HAS_EVENT_END"]], "nrf_ecb_has_event_endecb (c macro)": [[37, "c.NRF_ECB_HAS_EVENT_ENDECB"]], "nrf_ecb_has_event_error (c macro)": [[37, "c.NRF_ECB_HAS_EVENT_ERROR"]], "nrf_ecb_has_event_errorecb (c macro)": [[37, "c.NRF_ECB_HAS_EVENT_ERRORECB"]], "nrf_ecb_has_in_amount (c macro)": [[37, "c.NRF_ECB_HAS_IN_AMOUNT"]], "nrf_ecb_has_in_ptr (c macro)": [[37, "c.NRF_ECB_HAS_IN_PTR"]], "nrf_ecb_has_key (c macro)": [[37, "c.NRF_ECB_HAS_KEY"]], "nrf_ecb_has_out_amount (c macro)": [[37, "c.NRF_ECB_HAS_OUT_AMOUNT"]], "nrf_ecb_has_out_ptr (c macro)": [[37, "c.NRF_ECB_HAS_OUT_PTR"]], "nrf_ecb_has_task_start (c macro)": [[37, "c.NRF_ECB_HAS_TASK_START"]], "nrf_ecb_has_task_startecb (c macro)": [[37, "c.NRF_ECB_HAS_TASK_STARTECB"]], "nrf_ecb_has_task_stop (c macro)": [[37, "c.NRF_ECB_HAS_TASK_STOP"]], "nrf_ecb_has_task_stopecb (c macro)": [[37, "c.NRF_ECB_HAS_TASK_STOPECB"]], "nrf_ecb_data_pointer_get (c function)": [[37, "c.nrf_ecb_data_pointer_get"]], "nrf_ecb_data_pointer_set (c function)": [[37, "c.nrf_ecb_data_pointer_set"]], "nrf_ecb_event_address_get (c function)": [[37, "c.nrf_ecb_event_address_get"]], "nrf_ecb_event_check (c function)": [[37, "c.nrf_ecb_event_check"]], "nrf_ecb_event_clear (c function)": [[37, "c.nrf_ecb_event_clear"]], "nrf_ecb_event_t (c enum)": [[37, "c.nrf_ecb_event_t"]], "nrf_ecb_event_t.nrf_ecb_event_end (c enumerator)": [[37, "c.nrf_ecb_event_t.NRF_ECB_EVENT_END"]], "nrf_ecb_event_t.nrf_ecb_event_endecb (c enumerator)": [[37, "c.nrf_ecb_event_t.NRF_ECB_EVENT_ENDECB"]], "nrf_ecb_event_t.nrf_ecb_event_error (c enumerator)": [[37, "c.nrf_ecb_event_t.NRF_ECB_EVENT_ERROR"]], "nrf_ecb_event_t.nrf_ecb_event_errorecb (c enumerator)": [[37, "c.nrf_ecb_event_t.NRF_ECB_EVENT_ERRORECB"]], "nrf_ecb_in_amount_get (c function)": [[37, "c.nrf_ecb_in_amount_get"]], "nrf_ecb_in_ptr_get (c function)": [[37, "c.nrf_ecb_in_ptr_get"]], "nrf_ecb_in_ptr_set (c function)": [[37, "c.nrf_ecb_in_ptr_set"]], "nrf_ecb_int_disable (c function)": [[37, "c.nrf_ecb_int_disable"]], "nrf_ecb_int_enable (c function)": [[37, "c.nrf_ecb_int_enable"]], "nrf_ecb_int_enable_check (c function)": [[37, "c.nrf_ecb_int_enable_check"]], "nrf_ecb_int_mask_t (c enum)": [[37, "c.nrf_ecb_int_mask_t"]], "nrf_ecb_int_mask_t.nrf_ecb_int_endecb_mask (c enumerator)": [[37, "c.nrf_ecb_int_mask_t.NRF_ECB_INT_ENDECB_MASK"]], "nrf_ecb_int_mask_t.nrf_ecb_int_end_mask (c enumerator)": [[37, "c.nrf_ecb_int_mask_t.NRF_ECB_INT_END_MASK"]], "nrf_ecb_int_mask_t.nrf_ecb_int_errorecb_mask (c enumerator)": [[37, "c.nrf_ecb_int_mask_t.NRF_ECB_INT_ERRORECB_MASK"]], "nrf_ecb_int_mask_t.nrf_ecb_int_error_mask (c enumerator)": [[37, "c.nrf_ecb_int_mask_t.NRF_ECB_INT_ERROR_MASK"]], "nrf_ecb_key_set (c function)": [[37, "c.nrf_ecb_key_set"]], "nrf_ecb_out_amount_get (c function)": [[37, "c.nrf_ecb_out_amount_get"]], "nrf_ecb_out_ptr_get (c function)": [[37, "c.nrf_ecb_out_ptr_get"]], "nrf_ecb_out_ptr_set (c function)": [[37, "c.nrf_ecb_out_ptr_set"]], "nrf_ecb_publish_clear (c function)": [[37, "c.nrf_ecb_publish_clear"]], "nrf_ecb_publish_set (c function)": [[37, "c.nrf_ecb_publish_set"]], "nrf_ecb_subscribe_clear (c function)": [[37, "c.nrf_ecb_subscribe_clear"]], "nrf_ecb_subscribe_set (c function)": [[37, "c.nrf_ecb_subscribe_set"]], "nrf_ecb_task_address_get (c function)": [[37, "c.nrf_ecb_task_address_get"]], "nrf_ecb_task_t (c enum)": [[37, "c.nrf_ecb_task_t"]], "nrf_ecb_task_t.nrf_ecb_task_start (c enumerator)": [[37, "c.nrf_ecb_task_t.NRF_ECB_TASK_START"]], "nrf_ecb_task_t.nrf_ecb_task_startecb (c enumerator)": [[37, "c.nrf_ecb_task_t.NRF_ECB_TASK_STARTECB"]], "nrf_ecb_task_t.nrf_ecb_task_stop (c enumerator)": [[37, "c.nrf_ecb_task_t.NRF_ECB_TASK_STOP"]], "nrf_ecb_task_t.nrf_ecb_task_stopecb (c enumerator)": [[37, "c.nrf_ecb_task_t.NRF_ECB_TASK_STOPECB"]], "nrf_ecb_task_trigger (c function)": [[37, "c.nrf_ecb_task_trigger"]], "nrfx_egu_instance (c macro)": [[39, "c.NRFX_EGU_INSTANCE"]], "nrfx_egu_inst_handler_get (c macro)": [[39, "c.NRFX_EGU_INST_HANDLER_GET"]], "nrfx_egu_event_address_get (c function)": [[39, "c.nrfx_egu_event_address_get"]], "nrfx_egu_event_handler_t (c type)": [[39, "c.nrfx_egu_event_handler_t"]], "nrfx_egu_init (c function)": [[39, "c.nrfx_egu_init"]], "nrfx_egu_init_check (c function)": [[39, "c.nrfx_egu_init_check"]], "nrfx_egu_int_disable (c function)": [[39, "c.nrfx_egu_int_disable"]], "nrfx_egu_int_enable (c function)": [[39, "c.nrfx_egu_int_enable"]], "nrfx_egu_t (c struct)": [[39, "c.nrfx_egu_t"]], "nrfx_egu_t.drv_inst_idx (c var)": [[39, "c.nrfx_egu_t.drv_inst_idx"]], "nrfx_egu_t.p_reg (c var)": [[39, "c.nrfx_egu_t.p_reg"]], "nrfx_egu_task_address_get (c function)": [[39, "c.nrfx_egu_task_address_get"]], "nrfx_egu_trigger (c function)": [[39, "c.nrfx_egu_trigger"]], "nrfx_egu_uninit (c function)": [[39, "c.nrfx_egu_uninit"]], "nrf_egu_inst_get (c macro)": [[40, "c.NRF_EGU_INST_GET"]], "nrf_egu_channel_count (c function)": [[40, "c.nrf_egu_channel_count"]], "nrf_egu_channel_int_get (c function)": [[40, "c.nrf_egu_channel_int_get"]], "nrf_egu_event_address_get (c function)": [[40, "c.nrf_egu_event_address_get"]], "nrf_egu_event_check (c function)": [[40, "c.nrf_egu_event_check"]], "nrf_egu_event_clear (c function)": [[40, "c.nrf_egu_event_clear"]], "nrf_egu_event_t (c enum)": [[40, "c.nrf_egu_event_t"]], "nrf_egu_event_t.nrf_egu_event_triggered0 (c enumerator)": [[40, "c.nrf_egu_event_t.NRF_EGU_EVENT_TRIGGERED0"]], "nrf_egu_event_t.nrf_egu_event_triggered1 (c enumerator)": [[40, "c.nrf_egu_event_t.NRF_EGU_EVENT_TRIGGERED1"]], "nrf_egu_event_t.nrf_egu_event_triggered10 (c enumerator)": [[40, "c.nrf_egu_event_t.NRF_EGU_EVENT_TRIGGERED10"]], "nrf_egu_event_t.nrf_egu_event_triggered11 (c enumerator)": [[40, "c.nrf_egu_event_t.NRF_EGU_EVENT_TRIGGERED11"]], "nrf_egu_event_t.nrf_egu_event_triggered12 (c enumerator)": [[40, "c.nrf_egu_event_t.NRF_EGU_EVENT_TRIGGERED12"]], "nrf_egu_event_t.nrf_egu_event_triggered13 (c enumerator)": [[40, "c.nrf_egu_event_t.NRF_EGU_EVENT_TRIGGERED13"]], "nrf_egu_event_t.nrf_egu_event_triggered14 (c enumerator)": [[40, "c.nrf_egu_event_t.NRF_EGU_EVENT_TRIGGERED14"]], "nrf_egu_event_t.nrf_egu_event_triggered15 (c enumerator)": [[40, "c.nrf_egu_event_t.NRF_EGU_EVENT_TRIGGERED15"]], "nrf_egu_event_t.nrf_egu_event_triggered2 (c enumerator)": [[40, "c.nrf_egu_event_t.NRF_EGU_EVENT_TRIGGERED2"]], "nrf_egu_event_t.nrf_egu_event_triggered3 (c enumerator)": [[40, "c.nrf_egu_event_t.NRF_EGU_EVENT_TRIGGERED3"]], "nrf_egu_event_t.nrf_egu_event_triggered4 (c enumerator)": [[40, "c.nrf_egu_event_t.NRF_EGU_EVENT_TRIGGERED4"]], "nrf_egu_event_t.nrf_egu_event_triggered5 (c enumerator)": [[40, "c.nrf_egu_event_t.NRF_EGU_EVENT_TRIGGERED5"]], "nrf_egu_event_t.nrf_egu_event_triggered6 (c enumerator)": [[40, "c.nrf_egu_event_t.NRF_EGU_EVENT_TRIGGERED6"]], "nrf_egu_event_t.nrf_egu_event_triggered7 (c enumerator)": [[40, "c.nrf_egu_event_t.NRF_EGU_EVENT_TRIGGERED7"]], "nrf_egu_event_t.nrf_egu_event_triggered8 (c enumerator)": [[40, "c.nrf_egu_event_t.NRF_EGU_EVENT_TRIGGERED8"]], "nrf_egu_event_t.nrf_egu_event_triggered9 (c enumerator)": [[40, "c.nrf_egu_event_t.NRF_EGU_EVENT_TRIGGERED9"]], "nrf_egu_int_disable (c function)": [[40, "c.nrf_egu_int_disable"]], "nrf_egu_int_enable (c function)": [[40, "c.nrf_egu_int_enable"]], "nrf_egu_int_enable_check (c function)": [[40, "c.nrf_egu_int_enable_check"]], "nrf_egu_int_mask_t (c enum)": [[40, "c.nrf_egu_int_mask_t"]], "nrf_egu_int_mask_t.nrf_egu_int_all (c enumerator)": [[40, "c.nrf_egu_int_mask_t.NRF_EGU_INT_ALL"]], "nrf_egu_int_mask_t.nrf_egu_int_triggered0 (c enumerator)": [[40, "c.nrf_egu_int_mask_t.NRF_EGU_INT_TRIGGERED0"]], "nrf_egu_int_mask_t.nrf_egu_int_triggered1 (c enumerator)": [[40, "c.nrf_egu_int_mask_t.NRF_EGU_INT_TRIGGERED1"]], "nrf_egu_int_mask_t.nrf_egu_int_triggered10 (c enumerator)": [[40, "c.nrf_egu_int_mask_t.NRF_EGU_INT_TRIGGERED10"]], "nrf_egu_int_mask_t.nrf_egu_int_triggered11 (c enumerator)": [[40, "c.nrf_egu_int_mask_t.NRF_EGU_INT_TRIGGERED11"]], "nrf_egu_int_mask_t.nrf_egu_int_triggered12 (c enumerator)": [[40, "c.nrf_egu_int_mask_t.NRF_EGU_INT_TRIGGERED12"]], "nrf_egu_int_mask_t.nrf_egu_int_triggered13 (c enumerator)": [[40, "c.nrf_egu_int_mask_t.NRF_EGU_INT_TRIGGERED13"]], "nrf_egu_int_mask_t.nrf_egu_int_triggered14 (c enumerator)": [[40, "c.nrf_egu_int_mask_t.NRF_EGU_INT_TRIGGERED14"]], "nrf_egu_int_mask_t.nrf_egu_int_triggered15 (c enumerator)": [[40, "c.nrf_egu_int_mask_t.NRF_EGU_INT_TRIGGERED15"]], "nrf_egu_int_mask_t.nrf_egu_int_triggered2 (c enumerator)": [[40, "c.nrf_egu_int_mask_t.NRF_EGU_INT_TRIGGERED2"]], "nrf_egu_int_mask_t.nrf_egu_int_triggered3 (c enumerator)": [[40, "c.nrf_egu_int_mask_t.NRF_EGU_INT_TRIGGERED3"]], "nrf_egu_int_mask_t.nrf_egu_int_triggered4 (c enumerator)": [[40, "c.nrf_egu_int_mask_t.NRF_EGU_INT_TRIGGERED4"]], "nrf_egu_int_mask_t.nrf_egu_int_triggered5 (c enumerator)": [[40, "c.nrf_egu_int_mask_t.NRF_EGU_INT_TRIGGERED5"]], "nrf_egu_int_mask_t.nrf_egu_int_triggered6 (c enumerator)": [[40, "c.nrf_egu_int_mask_t.NRF_EGU_INT_TRIGGERED6"]], "nrf_egu_int_mask_t.nrf_egu_int_triggered7 (c enumerator)": [[40, "c.nrf_egu_int_mask_t.NRF_EGU_INT_TRIGGERED7"]], "nrf_egu_int_mask_t.nrf_egu_int_triggered8 (c enumerator)": [[40, "c.nrf_egu_int_mask_t.NRF_EGU_INT_TRIGGERED8"]], "nrf_egu_int_mask_t.nrf_egu_int_triggered9 (c enumerator)": [[40, "c.nrf_egu_int_mask_t.NRF_EGU_INT_TRIGGERED9"]], "nrf_egu_publish_clear (c function)": [[40, "c.nrf_egu_publish_clear"]], "nrf_egu_publish_set (c function)": [[40, "c.nrf_egu_publish_set"]], "nrf_egu_subscribe_clear (c function)": [[40, "c.nrf_egu_subscribe_clear"]], "nrf_egu_subscribe_set (c function)": [[40, "c.nrf_egu_subscribe_set"]], "nrf_egu_task_address_get (c function)": [[40, "c.nrf_egu_task_address_get"]], "nrf_egu_task_t (c enum)": [[40, "c.nrf_egu_task_t"]], "nrf_egu_task_t.nrf_egu_task_trigger0 (c enumerator)": [[40, "c.nrf_egu_task_t.NRF_EGU_TASK_TRIGGER0"]], "nrf_egu_task_t.nrf_egu_task_trigger1 (c enumerator)": [[40, "c.nrf_egu_task_t.NRF_EGU_TASK_TRIGGER1"]], "nrf_egu_task_t.nrf_egu_task_trigger10 (c enumerator)": [[40, "c.nrf_egu_task_t.NRF_EGU_TASK_TRIGGER10"]], "nrf_egu_task_t.nrf_egu_task_trigger11 (c enumerator)": [[40, "c.nrf_egu_task_t.NRF_EGU_TASK_TRIGGER11"]], "nrf_egu_task_t.nrf_egu_task_trigger12 (c enumerator)": [[40, "c.nrf_egu_task_t.NRF_EGU_TASK_TRIGGER12"]], "nrf_egu_task_t.nrf_egu_task_trigger13 (c enumerator)": [[40, "c.nrf_egu_task_t.NRF_EGU_TASK_TRIGGER13"]], "nrf_egu_task_t.nrf_egu_task_trigger14 (c enumerator)": [[40, "c.nrf_egu_task_t.NRF_EGU_TASK_TRIGGER14"]], "nrf_egu_task_t.nrf_egu_task_trigger15 (c enumerator)": [[40, "c.nrf_egu_task_t.NRF_EGU_TASK_TRIGGER15"]], "nrf_egu_task_t.nrf_egu_task_trigger2 (c enumerator)": [[40, "c.nrf_egu_task_t.NRF_EGU_TASK_TRIGGER2"]], "nrf_egu_task_t.nrf_egu_task_trigger3 (c enumerator)": [[40, "c.nrf_egu_task_t.NRF_EGU_TASK_TRIGGER3"]], "nrf_egu_task_t.nrf_egu_task_trigger4 (c enumerator)": [[40, "c.nrf_egu_task_t.NRF_EGU_TASK_TRIGGER4"]], "nrf_egu_task_t.nrf_egu_task_trigger5 (c enumerator)": [[40, "c.nrf_egu_task_t.NRF_EGU_TASK_TRIGGER5"]], "nrf_egu_task_t.nrf_egu_task_trigger6 (c enumerator)": [[40, "c.nrf_egu_task_t.NRF_EGU_TASK_TRIGGER6"]], "nrf_egu_task_t.nrf_egu_task_trigger7 (c enumerator)": [[40, "c.nrf_egu_task_t.NRF_EGU_TASK_TRIGGER7"]], "nrf_egu_task_t.nrf_egu_task_trigger8 (c enumerator)": [[40, "c.nrf_egu_task_t.NRF_EGU_TASK_TRIGGER8"]], "nrf_egu_task_t.nrf_egu_task_trigger9 (c enumerator)": [[40, "c.nrf_egu_task_t.NRF_EGU_TASK_TRIGGER9"]], "nrf_egu_task_trigger (c function)": [[40, "c.nrf_egu_task_trigger"]], "nrf_egu_trigger_task_get (c function)": [[40, "c.nrf_egu_trigger_task_get"]], "nrf_egu_triggered_event_get (c function)": [[40, "c.nrf_egu_triggered_event_get"]], "nrf_exmif_max_memory_device_size (c macro)": [[42, "c.NRF_EXMIF_MAX_MEMORY_DEVICE_SIZE"]], "nrf_exmif_max_number_of_devices (c macro)": [[42, "c.NRF_EXMIF_MAX_NUMBER_OF_DEVICES"]], "nrf_exmif_config_t (c struct)": [[42, "c.nrf_exmif_config_t"]], "nrf_exmif_config_t.offset (c var)": [[42, "c.nrf_exmif_config_t.offset"]], "nrf_exmif_config_t.size (c var)": [[42, "c.nrf_exmif_config_t.size"]], "nrf_exmif_device_config (c function)": [[42, "c.nrf_exmif_device_config"]], "nrf_exmif_device_disable (c function)": [[42, "c.nrf_exmif_device_disable"]], "nrf_exmif_device_enable (c function)": [[42, "c.nrf_exmif_device_enable"]], "nrf_exmif_locked_access_set (c function)": [[42, "c.nrf_exmif_locked_access_set"]], "nrf_exmif_reset_set (c function)": [[42, "c.nrf_exmif_reset_set"]], "nrf_exmif_task_address_get (c function)": [[42, "c.nrf_exmif_task_address_get"]], "nrf_exmif_task_t (c enum)": [[42, "c.nrf_exmif_task_t"]], "nrf_exmif_task_t.nrf_exmif_task_start (c enumerator)": [[42, "c.nrf_exmif_task_t.NRF_EXMIF_TASK_START"]], "nrf_exmif_task_t.nrf_exmif_task_stop (c enumerator)": [[42, "c.nrf_exmif_task_t.NRF_EXMIF_TASK_STOP"]], "nrf_exmif_task_trigger (c function)": [[42, "c.nrf_exmif_task_trigger"]], "nrf_ficr_has_code_page_size (c macro)": [[44, "c.NRF_FICR_HAS_CODE_PAGE_SIZE"]], "nrf_ficr_has_code_size (c macro)": [[44, "c.NRF_FICR_HAS_CODE_SIZE"]], "nrf_ficr_has_device_id (c macro)": [[44, "c.NRF_FICR_HAS_DEVICE_ID"]], "nrf_ficr_has_info_code_page_size (c macro)": [[44, "c.NRF_FICR_HAS_INFO_CODE_PAGE_SIZE"]], "nrf_ficr_has_info_code_size (c macro)": [[44, "c.NRF_FICR_HAS_INFO_CODE_SIZE"]], "nrf_ficr_has_info_device_id (c macro)": [[44, "c.NRF_FICR_HAS_INFO_DEVICE_ID"]], "nrf_ficr_has_nfc_tagheader (c macro)": [[44, "c.NRF_FICR_HAS_NFC_TAGHEADER"]], "nrf_ficr_has_nfc_tagheader_array (c macro)": [[44, "c.NRF_FICR_HAS_NFC_TAGHEADER_ARRAY"]], "nrf_ficr_codepagesize_get (c function)": [[44, "c.nrf_ficr_codepagesize_get"]], "nrf_ficr_codesize_get (c function)": [[44, "c.nrf_ficr_codesize_get"]], "nrf_ficr_deviceid_get (c function)": [[44, "c.nrf_ficr_deviceid_get"]], "nrf_ficr_nfc_tagheader_get (c function)": [[44, "c.nrf_ficr_nfc_tagheader_get"]], "nrf_fpu_event_check (c function)": [[45, "c.nrf_fpu_event_check"]], "nrf_fpu_event_clear (c function)": [[45, "c.nrf_fpu_event_clear"]], "nrf_fpu_event_t (c enum)": [[45, "c.nrf_fpu_event_t"]], "nrf_fpu_event_t.nrf_fpu_event_denormalinput (c enumerator)": [[45, "c.nrf_fpu_event_t.NRF_FPU_EVENT_DENORMALINPUT"]], "nrf_fpu_event_t.nrf_fpu_event_dividebyzero (c enumerator)": [[45, "c.nrf_fpu_event_t.NRF_FPU_EVENT_DIVIDEBYZERO"]], "nrf_fpu_event_t.nrf_fpu_event_inexact (c enumerator)": [[45, "c.nrf_fpu_event_t.NRF_FPU_EVENT_INEXACT"]], "nrf_fpu_event_t.nrf_fpu_event_invalidoperation (c enumerator)": [[45, "c.nrf_fpu_event_t.NRF_FPU_EVENT_INVALIDOPERATION"]], "nrf_fpu_event_t.nrf_fpu_event_overflow (c enumerator)": [[45, "c.nrf_fpu_event_t.NRF_FPU_EVENT_OVERFLOW"]], "nrf_fpu_event_t.nrf_fpu_event_underflow (c enumerator)": [[45, "c.nrf_fpu_event_t.NRF_FPU_EVENT_UNDERFLOW"]], "nrf_fpu_int_disable (c function)": [[45, "c.nrf_fpu_int_disable"]], "nrf_fpu_int_enable (c function)": [[45, "c.nrf_fpu_int_enable"]], "nrf_fpu_int_enable_check (c function)": [[45, "c.nrf_fpu_int_enable_check"]], "nrf_fpu_int_mask_t (c enum)": [[45, "c.nrf_fpu_int_mask_t"]], "nrf_fpu_int_mask_t.nrf_fpu_int_denormalinput (c enumerator)": [[45, "c.nrf_fpu_int_mask_t.NRF_FPU_INT_DENORMALINPUT"]], "nrf_fpu_int_mask_t.nrf_fpu_int_dividebyzero (c enumerator)": [[45, "c.nrf_fpu_int_mask_t.NRF_FPU_INT_DIVIDEBYZERO"]], "nrf_fpu_int_mask_t.nrf_fpu_int_inexact (c enumerator)": [[45, "c.nrf_fpu_int_mask_t.NRF_FPU_INT_INEXACT"]], "nrf_fpu_int_mask_t.nrf_fpu_int_invalidoperation (c enumerator)": [[45, "c.nrf_fpu_int_mask_t.NRF_FPU_INT_INVALIDOPERATION"]], "nrf_fpu_int_mask_t.nrf_fpu_int_overflow (c enumerator)": [[45, "c.nrf_fpu_int_mask_t.NRF_FPU_INT_OVERFLOW"]], "nrf_fpu_int_mask_t.nrf_fpu_int_underflow (c enumerator)": [[45, "c.nrf_fpu_int_mask_t.NRF_FPU_INT_UNDERFLOW"]], "nrf_glitchdet_enable_check (c function)": [[47, "c.nrf_glitchdet_enable_check"]], "nrf_glitchdet_enable_set (c function)": [[47, "c.nrf_glitchdet_enable_set"]], "nrf_glitchdet_mode_get (c function)": [[47, "c.nrf_glitchdet_mode_get"]], "nrf_glitchdet_mode_set (c function)": [[47, "c.nrf_glitchdet_mode_set"]], "nrf_glitchdet_mode_t (c enum)": [[47, "c.nrf_glitchdet_mode_t"]], "nrf_glitchdet_mode_t.nrf_glitchdet_mode_cap_div (c enumerator)": [[47, "c.nrf_glitchdet_mode_t.NRF_GLITCHDET_MODE_CAP_DIV"]], "nrf_glitchdet_mode_t.nrf_glitchdet_mode_high_pass (c enumerator)": [[47, "c.nrf_glitchdet_mode_t.NRF_GLITCHDET_MODE_HIGH_PASS"]], "nrf_gpio_has_clockpin (c macro)": [[48, "c.NRF_GPIO_HAS_CLOCKPIN"]], "nrf_gpio_has_detect_mode (c macro)": [[48, "c.NRF_GPIO_HAS_DETECT_MODE"]], "nrf_gpio_has_multiperiph_sel (c macro)": [[48, "c.NRF_GPIO_HAS_MULTIPERIPH_SEL"]], "nrf_gpio_has_port_impedance (c macro)": [[48, "c.NRF_GPIO_HAS_PORT_IMPEDANCE"]], "nrf_gpio_has_retention (c macro)": [[48, "c.NRF_GPIO_HAS_RETENTION"]], "nrf_gpio_has_sel (c macro)": [[48, "c.NRF_GPIO_HAS_SEL"]], "nrf_gpio_latch_present (c macro)": [[48, "c.NRF_GPIO_LATCH_PRESENT"]], "nrf_gpio_pin_map (c macro)": [[48, "c.NRF_GPIO_PIN_MAP"]], "nrf_gpio_port_impedance_all_mask (c macro)": [[48, "c.NRF_GPIO_PORT_IMPEDANCE_ALL_MASK"]], "nrf_gpio_cfg (c function)": [[48, "c.nrf_gpio_cfg"]], "nrf_gpio_cfg_default (c function)": [[48, "c.nrf_gpio_cfg_default"]], "nrf_gpio_cfg_input (c function)": [[48, "c.nrf_gpio_cfg_input"]], "nrf_gpio_cfg_output (c function)": [[48, "c.nrf_gpio_cfg_output"]], "nrf_gpio_cfg_sense_input (c function)": [[48, "c.nrf_gpio_cfg_sense_input"]], "nrf_gpio_cfg_sense_set (c function)": [[48, "c.nrf_gpio_cfg_sense_set"]], "nrf_gpio_cfg_watcher (c function)": [[48, "c.nrf_gpio_cfg_watcher"]], "nrf_gpio_input_disconnect (c function)": [[48, "c.nrf_gpio_input_disconnect"]], "nrf_gpio_latches_read (c function)": [[48, "c.nrf_gpio_latches_read"]], "nrf_gpio_latches_read_and_clear (c function)": [[48, "c.nrf_gpio_latches_read_and_clear"]], "nrf_gpio_pin_clear (c function)": [[48, "c.nrf_gpio_pin_clear"]], "nrf_gpio_pin_clock_check (c function)": [[48, "c.nrf_gpio_pin_clock_check"]], "nrf_gpio_pin_clock_set (c function)": [[48, "c.nrf_gpio_pin_clock_set"]], "nrf_gpio_pin_control_select (c function)": [[48, "c.nrf_gpio_pin_control_select"]], "nrf_gpio_pin_dir_get (c function)": [[48, "c.nrf_gpio_pin_dir_get"]], "nrf_gpio_pin_dir_set (c function)": [[48, "c.nrf_gpio_pin_dir_set"]], "nrf_gpio_pin_dir_t (c enum)": [[48, "c.nrf_gpio_pin_dir_t"]], "nrf_gpio_pin_dir_t.nrf_gpio_pin_dir_input (c enumerator)": [[48, "c.nrf_gpio_pin_dir_t.NRF_GPIO_PIN_DIR_INPUT"]], "nrf_gpio_pin_dir_t.nrf_gpio_pin_dir_output (c enumerator)": [[48, "c.nrf_gpio_pin_dir_t.NRF_GPIO_PIN_DIR_OUTPUT"]], "nrf_gpio_pin_drive_t (c enum)": [[48, "c.nrf_gpio_pin_drive_t"]], "nrf_gpio_pin_drive_t.nrf_gpio_pin_d0e1 (c enumerator)": [[48, "c.nrf_gpio_pin_drive_t.NRF_GPIO_PIN_D0E1"]], "nrf_gpio_pin_drive_t.nrf_gpio_pin_d0h1 (c enumerator)": [[48, "c.nrf_gpio_pin_drive_t.NRF_GPIO_PIN_D0H1"]], "nrf_gpio_pin_drive_t.nrf_gpio_pin_d0s1 (c enumerator)": [[48, "c.nrf_gpio_pin_drive_t.NRF_GPIO_PIN_D0S1"]], "nrf_gpio_pin_drive_t.nrf_gpio_pin_e0d1 (c enumerator)": [[48, "c.nrf_gpio_pin_drive_t.NRF_GPIO_PIN_E0D1"]], "nrf_gpio_pin_drive_t.nrf_gpio_pin_e0e1 (c enumerator)": [[48, "c.nrf_gpio_pin_drive_t.NRF_GPIO_PIN_E0E1"]], "nrf_gpio_pin_drive_t.nrf_gpio_pin_e0h1 (c enumerator)": [[48, "c.nrf_gpio_pin_drive_t.NRF_GPIO_PIN_E0H1"]], "nrf_gpio_pin_drive_t.nrf_gpio_pin_e0s1 (c enumerator)": [[48, "c.nrf_gpio_pin_drive_t.NRF_GPIO_PIN_E0S1"]], "nrf_gpio_pin_drive_t.nrf_gpio_pin_h0d1 (c enumerator)": [[48, "c.nrf_gpio_pin_drive_t.NRF_GPIO_PIN_H0D1"]], "nrf_gpio_pin_drive_t.nrf_gpio_pin_h0e1 (c enumerator)": [[48, "c.nrf_gpio_pin_drive_t.NRF_GPIO_PIN_H0E1"]], "nrf_gpio_pin_drive_t.nrf_gpio_pin_h0h1 (c enumerator)": [[48, "c.nrf_gpio_pin_drive_t.NRF_GPIO_PIN_H0H1"]], "nrf_gpio_pin_drive_t.nrf_gpio_pin_h0s1 (c enumerator)": [[48, "c.nrf_gpio_pin_drive_t.NRF_GPIO_PIN_H0S1"]], "nrf_gpio_pin_drive_t.nrf_gpio_pin_s0d1 (c enumerator)": [[48, "c.nrf_gpio_pin_drive_t.NRF_GPIO_PIN_S0D1"]], "nrf_gpio_pin_drive_t.nrf_gpio_pin_s0e1 (c enumerator)": [[48, "c.nrf_gpio_pin_drive_t.NRF_GPIO_PIN_S0E1"]], "nrf_gpio_pin_drive_t.nrf_gpio_pin_s0h1 (c enumerator)": [[48, "c.nrf_gpio_pin_drive_t.NRF_GPIO_PIN_S0H1"]], "nrf_gpio_pin_drive_t.nrf_gpio_pin_s0s1 (c enumerator)": [[48, "c.nrf_gpio_pin_drive_t.NRF_GPIO_PIN_S0S1"]], "nrf_gpio_pin_input_get (c function)": [[48, "c.nrf_gpio_pin_input_get"]], "nrf_gpio_pin_input_t (c enum)": [[48, "c.nrf_gpio_pin_input_t"]], "nrf_gpio_pin_input_t.nrf_gpio_pin_input_connect (c enumerator)": [[48, "c.nrf_gpio_pin_input_t.NRF_GPIO_PIN_INPUT_CONNECT"]], "nrf_gpio_pin_input_t.nrf_gpio_pin_input_disconnect (c enumerator)": [[48, "c.nrf_gpio_pin_input_t.NRF_GPIO_PIN_INPUT_DISCONNECT"]], "nrf_gpio_pin_latch_clear (c function)": [[48, "c.nrf_gpio_pin_latch_clear"]], "nrf_gpio_pin_latch_get (c function)": [[48, "c.nrf_gpio_pin_latch_get"]], "nrf_gpio_pin_out_read (c function)": [[48, "c.nrf_gpio_pin_out_read"]], "nrf_gpio_pin_port_decode (c function)": [[48, "c.nrf_gpio_pin_port_decode"]], "nrf_gpio_pin_port_number_extract (c function)": [[48, "c.nrf_gpio_pin_port_number_extract"]], "nrf_gpio_pin_present_check (c function)": [[48, "c.nrf_gpio_pin_present_check"]], "nrf_gpio_pin_pull_get (c function)": [[48, "c.nrf_gpio_pin_pull_get"]], "nrf_gpio_pin_pull_t (c enum)": [[48, "c.nrf_gpio_pin_pull_t"]], "nrf_gpio_pin_pull_t.nrf_gpio_pin_nopull (c enumerator)": [[48, "c.nrf_gpio_pin_pull_t.NRF_GPIO_PIN_NOPULL"]], "nrf_gpio_pin_pull_t.nrf_gpio_pin_pulldown (c enumerator)": [[48, "c.nrf_gpio_pin_pull_t.NRF_GPIO_PIN_PULLDOWN"]], "nrf_gpio_pin_pull_t.nrf_gpio_pin_pullup (c enumerator)": [[48, "c.nrf_gpio_pin_pull_t.NRF_GPIO_PIN_PULLUP"]], "nrf_gpio_pin_read (c function)": [[48, "c.nrf_gpio_pin_read"]], "nrf_gpio_pin_sel_t (c enum)": [[48, "c.nrf_gpio_pin_sel_t"]], "nrf_gpio_pin_sel_t.nrf_gpio_pin_sel_app (c enumerator)": [[48, "c.nrf_gpio_pin_sel_t.NRF_GPIO_PIN_SEL_APP"]], "nrf_gpio_pin_sel_t.nrf_gpio_pin_sel_gpio (c enumerator)": [[48, "c.nrf_gpio_pin_sel_t.NRF_GPIO_PIN_SEL_GPIO"]], "nrf_gpio_pin_sel_t.nrf_gpio_pin_sel_grtc (c enumerator)": [[48, "c.nrf_gpio_pin_sel_t.NRF_GPIO_PIN_SEL_GRTC"]], "nrf_gpio_pin_sel_t.nrf_gpio_pin_sel_network (c enumerator)": [[48, "c.nrf_gpio_pin_sel_t.NRF_GPIO_PIN_SEL_NETWORK"]], "nrf_gpio_pin_sel_t.nrf_gpio_pin_sel_peripheral (c enumerator)": [[48, "c.nrf_gpio_pin_sel_t.NRF_GPIO_PIN_SEL_PERIPHERAL"]], "nrf_gpio_pin_sel_t.nrf_gpio_pin_sel_tnd (c enumerator)": [[48, "c.nrf_gpio_pin_sel_t.NRF_GPIO_PIN_SEL_TND"]], "nrf_gpio_pin_sel_t.nrf_gpio_pin_sel_vpr (c enumerator)": [[48, "c.nrf_gpio_pin_sel_t.NRF_GPIO_PIN_SEL_VPR"]], "nrf_gpio_pin_sense_get (c function)": [[48, "c.nrf_gpio_pin_sense_get"]], "nrf_gpio_pin_sense_t (c enum)": [[48, "c.nrf_gpio_pin_sense_t"]], "nrf_gpio_pin_sense_t.nrf_gpio_pin_nosense (c enumerator)": [[48, "c.nrf_gpio_pin_sense_t.NRF_GPIO_PIN_NOSENSE"]], "nrf_gpio_pin_sense_t.nrf_gpio_pin_sense_high (c enumerator)": [[48, "c.nrf_gpio_pin_sense_t.NRF_GPIO_PIN_SENSE_HIGH"]], "nrf_gpio_pin_sense_t.nrf_gpio_pin_sense_low (c enumerator)": [[48, "c.nrf_gpio_pin_sense_t.NRF_GPIO_PIN_SENSE_LOW"]], "nrf_gpio_pin_set (c function)": [[48, "c.nrf_gpio_pin_set"]], "nrf_gpio_pin_toggle (c function)": [[48, "c.nrf_gpio_pin_toggle"]], "nrf_gpio_pin_write (c function)": [[48, "c.nrf_gpio_pin_write"]], "nrf_gpio_port_detect_latch_check (c function)": [[48, "c.nrf_gpio_port_detect_latch_check"]], "nrf_gpio_port_detect_latch_set (c function)": [[48, "c.nrf_gpio_port_detect_latch_set"]], "nrf_gpio_port_dir_input_set (c function)": [[48, "c.nrf_gpio_port_dir_input_set"]], "nrf_gpio_port_dir_output_set (c function)": [[48, "c.nrf_gpio_port_dir_output_set"]], "nrf_gpio_port_dir_read (c function)": [[48, "c.nrf_gpio_port_dir_read"]], "nrf_gpio_port_dir_write (c function)": [[48, "c.nrf_gpio_port_dir_write"]], "nrf_gpio_port_impedance_get (c function)": [[48, "c.nrf_gpio_port_impedance_get"]], "nrf_gpio_port_impedance_mask_t (c enum)": [[48, "c.nrf_gpio_port_impedance_mask_t"]], "nrf_gpio_port_impedance_mask_t.nrf_gpio_port_impedance_100_mask (c enumerator)": [[48, "c.nrf_gpio_port_impedance_mask_t.NRF_GPIO_PORT_IMPEDANCE_100_MASK"]], "nrf_gpio_port_impedance_mask_t.nrf_gpio_port_impedance_1600_mask (c enumerator)": [[48, "c.nrf_gpio_port_impedance_mask_t.NRF_GPIO_PORT_IMPEDANCE_1600_MASK"]], "nrf_gpio_port_impedance_mask_t.nrf_gpio_port_impedance_200_mask (c enumerator)": [[48, "c.nrf_gpio_port_impedance_mask_t.NRF_GPIO_PORT_IMPEDANCE_200_MASK"]], "nrf_gpio_port_impedance_mask_t.nrf_gpio_port_impedance_400_mask (c enumerator)": [[48, "c.nrf_gpio_port_impedance_mask_t.NRF_GPIO_PORT_IMPEDANCE_400_MASK"]], "nrf_gpio_port_impedance_mask_t.nrf_gpio_port_impedance_50_mask (c enumerator)": [[48, "c.nrf_gpio_port_impedance_mask_t.NRF_GPIO_PORT_IMPEDANCE_50_MASK"]], "nrf_gpio_port_impedance_mask_t.nrf_gpio_port_impedance_800_mask (c enumerator)": [[48, "c.nrf_gpio_port_impedance_mask_t.NRF_GPIO_PORT_IMPEDANCE_800_MASK"]], "nrf_gpio_port_impedance_set (c function)": [[48, "c.nrf_gpio_port_impedance_set"]], "nrf_gpio_port_in_read (c function)": [[48, "c.nrf_gpio_port_in_read"]], "nrf_gpio_port_out_clear (c function)": [[48, "c.nrf_gpio_port_out_clear"]], "nrf_gpio_port_out_read (c function)": [[48, "c.nrf_gpio_port_out_read"]], "nrf_gpio_port_out_set (c function)": [[48, "c.nrf_gpio_port_out_set"]], "nrf_gpio_port_out_write (c function)": [[48, "c.nrf_gpio_port_out_write"]], "nrf_gpio_port_retain_get (c function)": [[48, "c.nrf_gpio_port_retain_get"]], "nrf_gpio_port_retain_set (c function)": [[48, "c.nrf_gpio_port_retain_set"]], "nrf_gpio_ports_read (c function)": [[48, "c.nrf_gpio_ports_read"]], "nrf_gpio_range_cfg_input (c function)": [[48, "c.nrf_gpio_range_cfg_input"]], "nrf_gpio_range_cfg_output (c function)": [[48, "c.nrf_gpio_range_cfg_output"]], "nrf_gpio_reconfigure (c function)": [[48, "c.nrf_gpio_reconfigure"]], "nrf_gpio_retain_mask_t (c enum)": [[48, "c.nrf_gpio_retain_mask_t"]], "nrf_gpio_retain_mask_t.nrf_gpio_retain_application_mask (c enumerator)": [[48, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_APPLICATION_MASK"]], "nrf_gpio_retain_mask_t.nrf_gpio_retain_network_mask (c enumerator)": [[48, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_NETWORK_MASK"]], "nrf_gpio_retain_mask_t.nrf_gpio_retain_pin0_mask (c enumerator)": [[48, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN0_MASK"]], "nrf_gpio_retain_mask_t.nrf_gpio_retain_pin10_mask (c enumerator)": [[48, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN10_MASK"]], "nrf_gpio_retain_mask_t.nrf_gpio_retain_pin11_mask (c enumerator)": [[48, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN11_MASK"]], "nrf_gpio_retain_mask_t.nrf_gpio_retain_pin12_mask (c enumerator)": [[48, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN12_MASK"]], "nrf_gpio_retain_mask_t.nrf_gpio_retain_pin13_mask (c enumerator)": [[48, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN13_MASK"]], "nrf_gpio_retain_mask_t.nrf_gpio_retain_pin14_mask (c enumerator)": [[48, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN14_MASK"]], "nrf_gpio_retain_mask_t.nrf_gpio_retain_pin15_mask (c enumerator)": [[48, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN15_MASK"]], "nrf_gpio_retain_mask_t.nrf_gpio_retain_pin16_mask (c enumerator)": [[48, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN16_MASK"]], "nrf_gpio_retain_mask_t.nrf_gpio_retain_pin17_mask (c enumerator)": [[48, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN17_MASK"]], "nrf_gpio_retain_mask_t.nrf_gpio_retain_pin18_mask (c enumerator)": [[48, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN18_MASK"]], "nrf_gpio_retain_mask_t.nrf_gpio_retain_pin19_mask (c enumerator)": [[48, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN19_MASK"]], "nrf_gpio_retain_mask_t.nrf_gpio_retain_pin1_mask (c enumerator)": [[48, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN1_MASK"]], "nrf_gpio_retain_mask_t.nrf_gpio_retain_pin20_mask (c enumerator)": [[48, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN20_MASK"]], "nrf_gpio_retain_mask_t.nrf_gpio_retain_pin21_mask (c enumerator)": [[48, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN21_MASK"]], "nrf_gpio_retain_mask_t.nrf_gpio_retain_pin22_mask (c enumerator)": [[48, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN22_MASK"]], "nrf_gpio_retain_mask_t.nrf_gpio_retain_pin23_mask (c enumerator)": [[48, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN23_MASK"]], "nrf_gpio_retain_mask_t.nrf_gpio_retain_pin24_mask (c enumerator)": [[48, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN24_MASK"]], "nrf_gpio_retain_mask_t.nrf_gpio_retain_pin25_mask (c enumerator)": [[48, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN25_MASK"]], "nrf_gpio_retain_mask_t.nrf_gpio_retain_pin26_mask (c enumerator)": [[48, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN26_MASK"]], "nrf_gpio_retain_mask_t.nrf_gpio_retain_pin27_mask (c enumerator)": [[48, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN27_MASK"]], "nrf_gpio_retain_mask_t.nrf_gpio_retain_pin28_mask (c enumerator)": [[48, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN28_MASK"]], "nrf_gpio_retain_mask_t.nrf_gpio_retain_pin29_mask (c enumerator)": [[48, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN29_MASK"]], "nrf_gpio_retain_mask_t.nrf_gpio_retain_pin2_mask (c enumerator)": [[48, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN2_MASK"]], "nrf_gpio_retain_mask_t.nrf_gpio_retain_pin30_mask (c enumerator)": [[48, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN30_MASK"]], "nrf_gpio_retain_mask_t.nrf_gpio_retain_pin31_mask (c enumerator)": [[48, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN31_MASK"]], "nrf_gpio_retain_mask_t.nrf_gpio_retain_pin3_mask (c enumerator)": [[48, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN3_MASK"]], "nrf_gpio_retain_mask_t.nrf_gpio_retain_pin4_mask (c enumerator)": [[48, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN4_MASK"]], "nrf_gpio_retain_mask_t.nrf_gpio_retain_pin5_mask (c enumerator)": [[48, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN5_MASK"]], "nrf_gpio_retain_mask_t.nrf_gpio_retain_pin6_mask (c enumerator)": [[48, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN6_MASK"]], "nrf_gpio_retain_mask_t.nrf_gpio_retain_pin7_mask (c enumerator)": [[48, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN7_MASK"]], "nrf_gpio_retain_mask_t.nrf_gpio_retain_pin8_mask (c enumerator)": [[48, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN8_MASK"]], "nrf_gpio_retain_mask_t.nrf_gpio_retain_pin9_mask (c enumerator)": [[48, "c.nrf_gpio_retain_mask_t.NRF_GPIO_RETAIN_PIN9_MASK"]], "nrfy_gpio_cfg (c function)": [[49, "c.nrfy_gpio_cfg"]], "nrfy_gpio_cfg_default (c function)": [[49, "c.nrfy_gpio_cfg_default"]], "nrfy_gpio_cfg_input (c function)": [[49, "c.nrfy_gpio_cfg_input"]], "nrfy_gpio_cfg_output (c function)": [[49, "c.nrfy_gpio_cfg_output"]], "nrfy_gpio_cfg_sense_input (c function)": [[49, "c.nrfy_gpio_cfg_sense_input"]], "nrfy_gpio_cfg_sense_set (c function)": [[49, "c.nrfy_gpio_cfg_sense_set"]], "nrfy_gpio_cfg_watcher (c function)": [[49, "c.nrfy_gpio_cfg_watcher"]], "nrfy_gpio_input_disconnect (c function)": [[49, "c.nrfy_gpio_input_disconnect"]], "nrfy_gpio_pin_clear (c function)": [[49, "c.nrfy_gpio_pin_clear"]], "nrfy_gpio_pin_dir_get (c function)": [[49, "c.nrfy_gpio_pin_dir_get"]], "nrfy_gpio_pin_dir_set (c function)": [[49, "c.nrfy_gpio_pin_dir_set"]], "nrfy_gpio_pin_input_get (c function)": [[49, "c.nrfy_gpio_pin_input_get"]], "nrfy_gpio_pin_out_read (c function)": [[49, "c.nrfy_gpio_pin_out_read"]], "nrfy_gpio_pin_port_number_extract (c function)": [[49, "c.nrfy_gpio_pin_port_number_extract"]], "nrfy_gpio_pin_present_check (c function)": [[49, "c.nrfy_gpio_pin_present_check"]], "nrfy_gpio_pin_pull_get (c function)": [[49, "c.nrfy_gpio_pin_pull_get"]], "nrfy_gpio_pin_read (c function)": [[49, "c.nrfy_gpio_pin_read"]], "nrfy_gpio_pin_sense_get (c function)": [[49, "c.nrfy_gpio_pin_sense_get"]], "nrfy_gpio_pin_set (c function)": [[49, "c.nrfy_gpio_pin_set"]], "nrfy_gpio_pin_toggle (c function)": [[49, "c.nrfy_gpio_pin_toggle"]], "nrfy_gpio_pin_write (c function)": [[49, "c.nrfy_gpio_pin_write"]], "nrfy_gpio_port_dir_input_set (c function)": [[49, "c.nrfy_gpio_port_dir_input_set"]], "nrfy_gpio_port_dir_output_set (c function)": [[49, "c.nrfy_gpio_port_dir_output_set"]], "nrfy_gpio_port_dir_read (c function)": [[49, "c.nrfy_gpio_port_dir_read"]], "nrfy_gpio_port_dir_write (c function)": [[49, "c.nrfy_gpio_port_dir_write"]], "nrfy_gpio_port_in_read (c function)": [[49, "c.nrfy_gpio_port_in_read"]], "nrfy_gpio_port_out_clear (c function)": [[49, "c.nrfy_gpio_port_out_clear"]], "nrfy_gpio_port_out_read (c function)": [[49, "c.nrfy_gpio_port_out_read"]], "nrfy_gpio_port_out_set (c function)": [[49, "c.nrfy_gpio_port_out_set"]], "nrfy_gpio_port_out_write (c function)": [[49, "c.nrfy_gpio_port_out_write"]], "nrfy_gpio_ports_read (c function)": [[49, "c.nrfy_gpio_ports_read"]], "nrfy_gpio_range_cfg_input (c function)": [[49, "c.nrfy_gpio_range_cfg_input"]], "nrfy_gpio_range_cfg_output (c function)": [[49, "c.nrfy_gpio_range_cfg_output"]], "nrfy_gpio_reconfigure (c function)": [[49, "c.nrfy_gpio_reconfigure"]], "nrfx_gpiote_app_channels_mask (c macro)": [[51, "c.NRFX_GPIOTE_APP_CHANNELS_MASK"]], "nrfx_gpiote_default_output_config (c macro)": [[51, "c.NRFX_GPIOTE_DEFAULT_OUTPUT_CONFIG"]], "nrfx_gpiote_default_pull_config (c macro)": [[51, "c.NRFX_GPIOTE_DEFAULT_PULL_CONFIG"]], "nrfx_gpiote_instance (c macro)": [[51, "c.NRFX_GPIOTE_INSTANCE"]], "nrfx_gpiote_inst_handler_get (c macro)": [[51, "c.NRFX_GPIOTE_INST_HANDLER_GET"]], "nrfx_gpiote_channel_alloc (c function)": [[51, "c.nrfx_gpiote_channel_alloc"]], "nrfx_gpiote_channel_free (c function)": [[51, "c.nrfx_gpiote_channel_free"]], "nrfx_gpiote_channel_get (c function)": [[51, "c.nrfx_gpiote_channel_get"]], "nrfx_gpiote_channels_number_get (c function)": [[51, "c.nrfx_gpiote_channels_number_get"]], "nrfx_gpiote_clr_task_address_get (c function)": [[51, "c.nrfx_gpiote_clr_task_address_get"]], "nrfx_gpiote_clr_task_get (c function)": [[51, "c.nrfx_gpiote_clr_task_get"]], "nrfx_gpiote_clr_task_trigger (c function)": [[51, "c.nrfx_gpiote_clr_task_trigger"]], "nrfx_gpiote_global_callback_set (c function)": [[51, "c.nrfx_gpiote_global_callback_set"]], "nrfx_gpiote_handler_config_t (c struct)": [[51, "c.nrfx_gpiote_handler_config_t"]], "nrfx_gpiote_handler_config_t.handler (c var)": [[51, "c.nrfx_gpiote_handler_config_t.handler"]], "nrfx_gpiote_handler_config_t.p_context (c var)": [[51, "c.nrfx_gpiote_handler_config_t.p_context"]], "nrfx_gpiote_in_event_address_get (c function)": [[51, "c.nrfx_gpiote_in_event_address_get"]], "nrfx_gpiote_in_event_get (c function)": [[51, "c.nrfx_gpiote_in_event_get"]], "nrfx_gpiote_in_is_set (c function)": [[51, "c.nrfx_gpiote_in_is_set"]], "nrfx_gpiote_init (c function)": [[51, "c.nrfx_gpiote_init"]], "nrfx_gpiote_init_check (c function)": [[51, "c.nrfx_gpiote_init_check"]], "nrfx_gpiote_input_config_t (c struct)": [[51, "c.nrfx_gpiote_input_config_t"]], "nrfx_gpiote_input_config_t.pull (c var)": [[51, "c.nrfx_gpiote_input_config_t.pull"]], "nrfx_gpiote_input_configure (c function)": [[51, "c.nrfx_gpiote_input_configure"]], "nrfx_gpiote_input_pin_config_t (c struct)": [[51, "c.nrfx_gpiote_input_pin_config_t"]], "nrfx_gpiote_input_pin_config_t.p_handler_config (c var)": [[51, "c.nrfx_gpiote_input_pin_config_t.p_handler_config"]], "nrfx_gpiote_input_pin_config_t.p_pull_config (c var)": [[51, "c.nrfx_gpiote_input_pin_config_t.p_pull_config"]], "nrfx_gpiote_input_pin_config_t.p_trigger_config (c var)": [[51, "c.nrfx_gpiote_input_pin_config_t.p_trigger_config"]], "nrfx_gpiote_interrupt_handler_t (c type)": [[51, "c.nrfx_gpiote_interrupt_handler_t"]], "nrfx_gpiote_latency_get (c function)": [[51, "c.nrfx_gpiote_latency_get"]], "nrfx_gpiote_latency_set (c function)": [[51, "c.nrfx_gpiote_latency_set"]], "nrfx_gpiote_out_clear (c function)": [[51, "c.nrfx_gpiote_out_clear"]], "nrfx_gpiote_out_set (c function)": [[51, "c.nrfx_gpiote_out_set"]], "nrfx_gpiote_out_task_address_get (c function)": [[51, "c.nrfx_gpiote_out_task_address_get"]], "nrfx_gpiote_out_task_disable (c function)": [[51, "c.nrfx_gpiote_out_task_disable"]], "nrfx_gpiote_out_task_enable (c function)": [[51, "c.nrfx_gpiote_out_task_enable"]], "nrfx_gpiote_out_task_force (c function)": [[51, "c.nrfx_gpiote_out_task_force"]], "nrfx_gpiote_out_task_get (c function)": [[51, "c.nrfx_gpiote_out_task_get"]], "nrfx_gpiote_out_task_trigger (c function)": [[51, "c.nrfx_gpiote_out_task_trigger"]], "nrfx_gpiote_out_toggle (c function)": [[51, "c.nrfx_gpiote_out_toggle"]], "nrfx_gpiote_output_config_t (c struct)": [[51, "c.nrfx_gpiote_output_config_t"]], "nrfx_gpiote_output_config_t.drive (c var)": [[51, "c.nrfx_gpiote_output_config_t.drive"]], "nrfx_gpiote_output_config_t.input_connect (c var)": [[51, "c.nrfx_gpiote_output_config_t.input_connect"]], "nrfx_gpiote_output_config_t.pull (c var)": [[51, "c.nrfx_gpiote_output_config_t.pull"]], "nrfx_gpiote_output_configure (c function)": [[51, "c.nrfx_gpiote_output_configure"]], "nrfx_gpiote_pin_t (c type)": [[51, "c.nrfx_gpiote_pin_t"]], "nrfx_gpiote_pin_uninit (c function)": [[51, "c.nrfx_gpiote_pin_uninit"]], "nrfx_gpiote_set_task_address_get (c function)": [[51, "c.nrfx_gpiote_set_task_address_get"]], "nrfx_gpiote_set_task_get (c function)": [[51, "c.nrfx_gpiote_set_task_get"]], "nrfx_gpiote_set_task_trigger (c function)": [[51, "c.nrfx_gpiote_set_task_trigger"]], "nrfx_gpiote_t (c struct)": [[51, "c.nrfx_gpiote_t"]], "nrfx_gpiote_t.drv_inst_idx (c var)": [[51, "c.nrfx_gpiote_t.drv_inst_idx"]], "nrfx_gpiote_t.p_reg (c var)": [[51, "c.nrfx_gpiote_t.p_reg"]], "nrfx_gpiote_task_config_t (c struct)": [[51, "c.nrfx_gpiote_task_config_t"]], "nrfx_gpiote_task_config_t.init_val (c var)": [[51, "c.nrfx_gpiote_task_config_t.init_val"]], "nrfx_gpiote_task_config_t.polarity (c var)": [[51, "c.nrfx_gpiote_task_config_t.polarity"]], "nrfx_gpiote_task_config_t.task_ch (c var)": [[51, "c.nrfx_gpiote_task_config_t.task_ch"]], "nrfx_gpiote_trigger_config_t (c struct)": [[51, "c.nrfx_gpiote_trigger_config_t"]], "nrfx_gpiote_trigger_config_t.p_in_channel (c var)": [[51, "c.nrfx_gpiote_trigger_config_t.p_in_channel"]], "nrfx_gpiote_trigger_config_t.trigger (c var)": [[51, "c.nrfx_gpiote_trigger_config_t.trigger"]], "nrfx_gpiote_trigger_disable (c function)": [[51, "c.nrfx_gpiote_trigger_disable"]], "nrfx_gpiote_trigger_enable (c function)": [[51, "c.nrfx_gpiote_trigger_enable"]], "nrfx_gpiote_trigger_t (c enum)": [[51, "c.nrfx_gpiote_trigger_t"]], "nrfx_gpiote_trigger_t.nrfx_gpiote_trigger_high (c enumerator)": [[51, "c.nrfx_gpiote_trigger_t.NRFX_GPIOTE_TRIGGER_HIGH"]], "nrfx_gpiote_trigger_t.nrfx_gpiote_trigger_hitolo (c enumerator)": [[51, "c.nrfx_gpiote_trigger_t.NRFX_GPIOTE_TRIGGER_HITOLO"]], "nrfx_gpiote_trigger_t.nrfx_gpiote_trigger_lotohi (c enumerator)": [[51, "c.nrfx_gpiote_trigger_t.NRFX_GPIOTE_TRIGGER_LOTOHI"]], "nrfx_gpiote_trigger_t.nrfx_gpiote_trigger_low (c enumerator)": [[51, "c.nrfx_gpiote_trigger_t.NRFX_GPIOTE_TRIGGER_LOW"]], "nrfx_gpiote_trigger_t.nrfx_gpiote_trigger_max (c enumerator)": [[51, "c.nrfx_gpiote_trigger_t.NRFX_GPIOTE_TRIGGER_MAX"]], "nrfx_gpiote_trigger_t.nrfx_gpiote_trigger_none (c enumerator)": [[51, "c.nrfx_gpiote_trigger_t.NRFX_GPIOTE_TRIGGER_NONE"]], "nrfx_gpiote_trigger_t.nrfx_gpiote_trigger_toggle (c enumerator)": [[51, "c.nrfx_gpiote_trigger_t.NRFX_GPIOTE_TRIGGER_TOGGLE"]], "nrfx_gpiote_uninit (c function)": [[51, "c.nrfx_gpiote_uninit"]], "gpiote_config_port_pin_msk (c macro)": [[52, "c.GPIOTE_CONFIG_PORT_PIN_Msk"]], "nrf_gpiote_events_port_reg (c macro)": [[52, "c.NRF_GPIOTE_EVENTS_PORT_REG"]], "nrf_gpiote_has_int_groups (c macro)": [[52, "c.NRF_GPIOTE_HAS_INT_GROUPS"]], "nrf_gpiote_has_latency (c macro)": [[52, "c.NRF_GPIOTE_HAS_LATENCY"]], "nrf_gpiote_inst_get (c macro)": [[52, "c.NRF_GPIOTE_INST_GET"]], "nrf_gpiote_int_in_mask (c macro)": [[52, "c.NRF_GPIOTE_INT_IN_MASK"]], "nrf_gpiote_int_port_mask_name (c macro)": [[52, "c.NRF_GPIOTE_INT_PORT_MASK_NAME"]], "nrf_gpiote_irq_group (c macro)": [[52, "c.NRF_GPIOTE_IRQ_GROUP"]], "nrf_gpiote_secure_suffix (c macro)": [[52, "c.NRF_GPIOTE_SECURE_SUFFIX"]], "nrf_gpiote_clr_task_get (c function)": [[52, "c.nrf_gpiote_clr_task_get"]], "nrf_gpiote_event_address_get (c function)": [[52, "c.nrf_gpiote_event_address_get"]], "nrf_gpiote_event_check (c function)": [[52, "c.nrf_gpiote_event_check"]], "nrf_gpiote_event_clear (c function)": [[52, "c.nrf_gpiote_event_clear"]], "nrf_gpiote_event_configure (c function)": [[52, "c.nrf_gpiote_event_configure"]], "nrf_gpiote_event_disable (c function)": [[52, "c.nrf_gpiote_event_disable"]], "nrf_gpiote_event_enable (c function)": [[52, "c.nrf_gpiote_event_enable"]], "nrf_gpiote_event_pin_get (c function)": [[52, "c.nrf_gpiote_event_pin_get"]], "nrf_gpiote_event_polarity_get (c function)": [[52, "c.nrf_gpiote_event_polarity_get"]], "nrf_gpiote_event_t (c enum)": [[52, "c.nrf_gpiote_event_t"]], "nrf_gpiote_event_t.nrf_gpiote_event_in_0 (c enumerator)": [[52, "c.nrf_gpiote_event_t.NRF_GPIOTE_EVENT_IN_0"]], "nrf_gpiote_event_t.nrf_gpiote_event_in_1 (c enumerator)": [[52, "c.nrf_gpiote_event_t.NRF_GPIOTE_EVENT_IN_1"]], "nrf_gpiote_event_t.nrf_gpiote_event_in_2 (c enumerator)": [[52, "c.nrf_gpiote_event_t.NRF_GPIOTE_EVENT_IN_2"]], "nrf_gpiote_event_t.nrf_gpiote_event_in_3 (c enumerator)": [[52, "c.nrf_gpiote_event_t.NRF_GPIOTE_EVENT_IN_3"]], "nrf_gpiote_event_t.nrf_gpiote_event_in_4 (c enumerator)": [[52, "c.nrf_gpiote_event_t.NRF_GPIOTE_EVENT_IN_4"]], "nrf_gpiote_event_t.nrf_gpiote_event_in_5 (c enumerator)": [[52, "c.nrf_gpiote_event_t.NRF_GPIOTE_EVENT_IN_5"]], "nrf_gpiote_event_t.nrf_gpiote_event_in_6 (c enumerator)": [[52, "c.nrf_gpiote_event_t.NRF_GPIOTE_EVENT_IN_6"]], "nrf_gpiote_event_t.nrf_gpiote_event_in_7 (c enumerator)": [[52, "c.nrf_gpiote_event_t.NRF_GPIOTE_EVENT_IN_7"]], "nrf_gpiote_event_t.nrf_gpiote_event_port (c enumerator)": [[52, "c.nrf_gpiote_event_t.NRF_GPIOTE_EVENT_PORT"]], "nrf_gpiote_in_event_get (c function)": [[52, "c.nrf_gpiote_in_event_get"]], "nrf_gpiote_int_disable (c function)": [[52, "c.nrf_gpiote_int_disable"]], "nrf_gpiote_int_enable (c function)": [[52, "c.nrf_gpiote_int_enable"]], "nrf_gpiote_int_enable_check (c function)": [[52, "c.nrf_gpiote_int_enable_check"]], "nrf_gpiote_int_group_disable (c function)": [[52, "c.nrf_gpiote_int_group_disable"]], "nrf_gpiote_int_group_enable (c function)": [[52, "c.nrf_gpiote_int_group_enable"]], "nrf_gpiote_int_group_enable_check (c function)": [[52, "c.nrf_gpiote_int_group_enable_check"]], "nrf_gpiote_int_t (c enum)": [[52, "c.nrf_gpiote_int_t"]], "nrf_gpiote_int_t.nrf_gpiote_int_in0_mask (c enumerator)": [[52, "c.nrf_gpiote_int_t.NRF_GPIOTE_INT_IN0_MASK"]], "nrf_gpiote_int_t.nrf_gpiote_int_in1_mask (c enumerator)": [[52, "c.nrf_gpiote_int_t.NRF_GPIOTE_INT_IN1_MASK"]], "nrf_gpiote_int_t.nrf_gpiote_int_in2_mask (c enumerator)": [[52, "c.nrf_gpiote_int_t.NRF_GPIOTE_INT_IN2_MASK"]], "nrf_gpiote_int_t.nrf_gpiote_int_in3_mask (c enumerator)": [[52, "c.nrf_gpiote_int_t.NRF_GPIOTE_INT_IN3_MASK"]], "nrf_gpiote_int_t.nrf_gpiote_int_in4_mask (c enumerator)": [[52, "c.nrf_gpiote_int_t.NRF_GPIOTE_INT_IN4_MASK"]], "nrf_gpiote_int_t.nrf_gpiote_int_in5_mask (c enumerator)": [[52, "c.nrf_gpiote_int_t.NRF_GPIOTE_INT_IN5_MASK"]], "nrf_gpiote_int_t.nrf_gpiote_int_in6_mask (c enumerator)": [[52, "c.nrf_gpiote_int_t.NRF_GPIOTE_INT_IN6_MASK"]], "nrf_gpiote_int_t.nrf_gpiote_int_in7_mask (c enumerator)": [[52, "c.nrf_gpiote_int_t.NRF_GPIOTE_INT_IN7_MASK"]], "nrf_gpiote_int_t.nrf_gpiote_int_port_mask (c enumerator)": [[52, "c.nrf_gpiote_int_t.NRF_GPIOTE_INT_PORT_MASK"]], "nrf_gpiote_latency_get (c function)": [[52, "c.nrf_gpiote_latency_get"]], "nrf_gpiote_latency_set (c function)": [[52, "c.nrf_gpiote_latency_set"]], "nrf_gpiote_latency_t (c enum)": [[52, "c.nrf_gpiote_latency_t"]], "nrf_gpiote_latency_t.nrf_gpiote_latency_lowlatency (c enumerator)": [[52, "c.nrf_gpiote_latency_t.NRF_GPIOTE_LATENCY_LOWLATENCY"]], "nrf_gpiote_latency_t.nrf_gpiote_latency_lowpower (c enumerator)": [[52, "c.nrf_gpiote_latency_t.NRF_GPIOTE_LATENCY_LOWPOWER"]], "nrf_gpiote_out_task_get (c function)": [[52, "c.nrf_gpiote_out_task_get"]], "nrf_gpiote_outinit_t (c enum)": [[52, "c.nrf_gpiote_outinit_t"]], "nrf_gpiote_outinit_t.nrf_gpiote_initial_value_high (c enumerator)": [[52, "c.nrf_gpiote_outinit_t.NRF_GPIOTE_INITIAL_VALUE_HIGH"]], "nrf_gpiote_outinit_t.nrf_gpiote_initial_value_low (c enumerator)": [[52, "c.nrf_gpiote_outinit_t.NRF_GPIOTE_INITIAL_VALUE_LOW"]], "nrf_gpiote_polarity_t (c enum)": [[52, "c.nrf_gpiote_polarity_t"]], "nrf_gpiote_polarity_t.nrf_gpiote_polarity_hitolo (c enumerator)": [[52, "c.nrf_gpiote_polarity_t.NRF_GPIOTE_POLARITY_HITOLO"]], "nrf_gpiote_polarity_t.nrf_gpiote_polarity_lotohi (c enumerator)": [[52, "c.nrf_gpiote_polarity_t.NRF_GPIOTE_POLARITY_LOTOHI"]], "nrf_gpiote_polarity_t.nrf_gpiote_polarity_none (c enumerator)": [[52, "c.nrf_gpiote_polarity_t.NRF_GPIOTE_POLARITY_NONE"]], "nrf_gpiote_polarity_t.nrf_gpiote_polarity_toggle (c enumerator)": [[52, "c.nrf_gpiote_polarity_t.NRF_GPIOTE_POLARITY_TOGGLE"]], "nrf_gpiote_publish_clear (c function)": [[52, "c.nrf_gpiote_publish_clear"]], "nrf_gpiote_publish_set (c function)": [[52, "c.nrf_gpiote_publish_set"]], "nrf_gpiote_set_task_get (c function)": [[52, "c.nrf_gpiote_set_task_get"]], "nrf_gpiote_subscribe_clear (c function)": [[52, "c.nrf_gpiote_subscribe_clear"]], "nrf_gpiote_subscribe_set (c function)": [[52, "c.nrf_gpiote_subscribe_set"]], "nrf_gpiote_task_address_get (c function)": [[52, "c.nrf_gpiote_task_address_get"]], "nrf_gpiote_task_configure (c function)": [[52, "c.nrf_gpiote_task_configure"]], "nrf_gpiote_task_disable (c function)": [[52, "c.nrf_gpiote_task_disable"]], "nrf_gpiote_task_enable (c function)": [[52, "c.nrf_gpiote_task_enable"]], "nrf_gpiote_task_force (c function)": [[52, "c.nrf_gpiote_task_force"]], "nrf_gpiote_task_t (c enum)": [[52, "c.nrf_gpiote_task_t"]], "nrf_gpiote_task_t.nrf_gpiote_task_clr_0 (c enumerator)": [[52, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_CLR_0"]], "nrf_gpiote_task_t.nrf_gpiote_task_clr_1 (c enumerator)": [[52, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_CLR_1"]], "nrf_gpiote_task_t.nrf_gpiote_task_clr_2 (c enumerator)": [[52, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_CLR_2"]], "nrf_gpiote_task_t.nrf_gpiote_task_clr_3 (c enumerator)": [[52, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_CLR_3"]], "nrf_gpiote_task_t.nrf_gpiote_task_clr_4 (c enumerator)": [[52, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_CLR_4"]], "nrf_gpiote_task_t.nrf_gpiote_task_clr_5 (c enumerator)": [[52, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_CLR_5"]], "nrf_gpiote_task_t.nrf_gpiote_task_clr_6 (c enumerator)": [[52, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_CLR_6"]], "nrf_gpiote_task_t.nrf_gpiote_task_clr_7 (c enumerator)": [[52, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_CLR_7"]], "nrf_gpiote_task_t.nrf_gpiote_task_out_0 (c enumerator)": [[52, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_OUT_0"]], "nrf_gpiote_task_t.nrf_gpiote_task_out_1 (c enumerator)": [[52, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_OUT_1"]], "nrf_gpiote_task_t.nrf_gpiote_task_out_2 (c enumerator)": [[52, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_OUT_2"]], "nrf_gpiote_task_t.nrf_gpiote_task_out_3 (c enumerator)": [[52, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_OUT_3"]], "nrf_gpiote_task_t.nrf_gpiote_task_out_4 (c enumerator)": [[52, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_OUT_4"]], "nrf_gpiote_task_t.nrf_gpiote_task_out_5 (c enumerator)": [[52, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_OUT_5"]], "nrf_gpiote_task_t.nrf_gpiote_task_out_6 (c enumerator)": [[52, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_OUT_6"]], "nrf_gpiote_task_t.nrf_gpiote_task_out_7 (c enumerator)": [[52, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_OUT_7"]], "nrf_gpiote_task_t.nrf_gpiote_task_set_0 (c enumerator)": [[52, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_SET_0"]], "nrf_gpiote_task_t.nrf_gpiote_task_set_1 (c enumerator)": [[52, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_SET_1"]], "nrf_gpiote_task_t.nrf_gpiote_task_set_2 (c enumerator)": [[52, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_SET_2"]], "nrf_gpiote_task_t.nrf_gpiote_task_set_3 (c enumerator)": [[52, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_SET_3"]], "nrf_gpiote_task_t.nrf_gpiote_task_set_4 (c enumerator)": [[52, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_SET_4"]], "nrf_gpiote_task_t.nrf_gpiote_task_set_5 (c enumerator)": [[52, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_SET_5"]], "nrf_gpiote_task_t.nrf_gpiote_task_set_6 (c enumerator)": [[52, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_SET_6"]], "nrf_gpiote_task_t.nrf_gpiote_task_set_7 (c enumerator)": [[52, "c.nrf_gpiote_task_t.NRF_GPIOTE_TASK_SET_7"]], "nrf_gpiote_task_trigger (c function)": [[52, "c.nrf_gpiote_task_trigger"]], "nrf_gpiote_te_default (c function)": [[52, "c.nrf_gpiote_te_default"]], "nrf_gpiote_te_is_enabled (c function)": [[52, "c.nrf_gpiote_te_is_enabled"]], "nrfy_gpiote_has_latency (c macro)": [[53, "c.NRFY_GPIOTE_HAS_LATENCY"]], "nrfy_gpiote_clr_task_get (c function)": [[53, "c.nrfy_gpiote_clr_task_get"]], "nrfy_gpiote_event_address_get (c function)": [[53, "c.nrfy_gpiote_event_address_get"]], "nrfy_gpiote_event_check (c function)": [[53, "c.nrfy_gpiote_event_check"]], "nrfy_gpiote_event_clear (c function)": [[53, "c.nrfy_gpiote_event_clear"]], "nrfy_gpiote_event_configure (c function)": [[53, "c.nrfy_gpiote_event_configure"]], "nrfy_gpiote_event_disable (c function)": [[53, "c.nrfy_gpiote_event_disable"]], "nrfy_gpiote_event_enable (c function)": [[53, "c.nrfy_gpiote_event_enable"]], "nrfy_gpiote_event_pin_get (c function)": [[53, "c.nrfy_gpiote_event_pin_get"]], "nrfy_gpiote_event_polarity_get (c function)": [[53, "c.nrfy_gpiote_event_polarity_get"]], "nrfy_gpiote_events_process (c function)": [[53, "c.nrfy_gpiote_events_process"]], "nrfy_gpiote_in_event_get (c function)": [[53, "c.nrfy_gpiote_in_event_get"]], "nrfy_gpiote_int_disable (c function)": [[53, "c.nrfy_gpiote_int_disable"]], "nrfy_gpiote_int_enable (c function)": [[53, "c.nrfy_gpiote_int_enable"]], "nrfy_gpiote_int_enable_check (c function)": [[53, "c.nrfy_gpiote_int_enable_check"]], "nrfy_gpiote_int_init (c function)": [[53, "c.nrfy_gpiote_int_init"]], "nrfy_gpiote_latency_get (c function)": [[53, "c.nrfy_gpiote_latency_get"]], "nrfy_gpiote_latency_set (c function)": [[53, "c.nrfy_gpiote_latency_set"]], "nrfy_gpiote_out_task_get (c function)": [[53, "c.nrfy_gpiote_out_task_get"]], "nrfy_gpiote_publish_clear (c function)": [[53, "c.nrfy_gpiote_publish_clear"]], "nrfy_gpiote_publish_set (c function)": [[53, "c.nrfy_gpiote_publish_set"]], "nrfy_gpiote_set_task_get (c function)": [[53, "c.nrfy_gpiote_set_task_get"]], "nrfy_gpiote_subscribe_clear (c function)": [[53, "c.nrfy_gpiote_subscribe_clear"]], "nrfy_gpiote_subscribe_set (c function)": [[53, "c.nrfy_gpiote_subscribe_set"]], "nrfy_gpiote_task_address_get (c function)": [[53, "c.nrfy_gpiote_task_address_get"]], "nrfy_gpiote_task_configure (c function)": [[53, "c.nrfy_gpiote_task_configure"]], "nrfy_gpiote_task_disable (c function)": [[53, "c.nrfy_gpiote_task_disable"]], "nrfy_gpiote_task_enable (c function)": [[53, "c.nrfy_gpiote_task_enable"]], "nrfy_gpiote_task_force (c function)": [[53, "c.nrfy_gpiote_task_force"]], "nrfy_gpiote_task_trigger (c function)": [[53, "c.nrfy_gpiote_task_trigger"]], "nrfy_gpiote_te_default (c function)": [[53, "c.nrfy_gpiote_te_default"]], "nrfy_gpiote_te_is_enabled (c function)": [[53, "c.nrfy_gpiote_te_is_enabled"]], "nrfx_grtc_sleep_default_config (c macro)": [[55, "c.NRFX_GRTC_SLEEP_DEFAULT_CONFIG"]], "nrfx_grtc_action_perform (c function)": [[55, "c.nrfx_grtc_action_perform"]], "nrfx_grtc_action_t (c enum)": [[55, "c.nrfx_grtc_action_t"]], "nrfx_grtc_action_t.nrfx_grtc_action_clear (c enumerator)": [[55, "c.nrfx_grtc_action_t.NRFX_GRTC_ACTION_CLEAR"]], "nrfx_grtc_action_t.nrfx_grtc_action_start (c enumerator)": [[55, "c.nrfx_grtc_action_t.NRFX_GRTC_ACTION_START"]], "nrfx_grtc_action_t.nrfx_grtc_action_stop (c enumerator)": [[55, "c.nrfx_grtc_action_t.NRFX_GRTC_ACTION_STOP"]], "nrfx_grtc_active_request_set (c function)": [[55, "c.nrfx_grtc_active_request_set"]], "nrfx_grtc_capture_task_address_get (c function)": [[55, "c.nrfx_grtc_capture_task_address_get"]], "nrfx_grtc_cc_handler_t (c type)": [[55, "c.nrfx_grtc_cc_handler_t"]], "nrfx_grtc_cc_relative_reference_t (c enum)": [[55, "c.nrfx_grtc_cc_relative_reference_t"]], "nrfx_grtc_cc_relative_reference_t.nrfx_grtc_cc_relative_compare (c enumerator)": [[55, "c.nrfx_grtc_cc_relative_reference_t.NRFX_GRTC_CC_RELATIVE_COMPARE"]], "nrfx_grtc_cc_relative_reference_t.nrfx_grtc_cc_relative_syscounter (c enumerator)": [[55, "c.nrfx_grtc_cc_relative_reference_t.NRFX_GRTC_CC_RELATIVE_SYSCOUNTER"]], "nrfx_grtc_channel_alloc (c function)": [[55, "c.nrfx_grtc_channel_alloc"]], "nrfx_grtc_channel_free (c function)": [[55, "c.nrfx_grtc_channel_free"]], "nrfx_grtc_channel_t (c struct)": [[55, "c.nrfx_grtc_channel_t"]], "nrfx_grtc_channel_t.channel (c var)": [[55, "c.nrfx_grtc_channel_t.channel"]], "nrfx_grtc_channel_t.handler (c var)": [[55, "c.nrfx_grtc_channel_t.handler"]], "nrfx_grtc_channel_t.p_context (c var)": [[55, "c.nrfx_grtc_channel_t.p_context"]], "nrfx_grtc_clock_source_set (c function)": [[55, "c.nrfx_grtc_clock_source_set"]], "nrfx_grtc_event_address_get (c function)": [[55, "c.nrfx_grtc_event_address_get"]], "nrfx_grtc_event_compare_address_get (c function)": [[55, "c.nrfx_grtc_event_compare_address_get"]], "nrfx_grtc_init (c function)": [[55, "c.nrfx_grtc_init"]], "nrfx_grtc_init_check (c function)": [[55, "c.nrfx_grtc_init_check"]], "nrfx_grtc_is_channel_used (c function)": [[55, "c.nrfx_grtc_is_channel_used"]], "nrfx_grtc_rtcomparesync_handler_t (c type)": [[55, "c.nrfx_grtc_rtcomparesync_handler_t"]], "nrfx_grtc_rtcomparesync_int_disable (c function)": [[55, "c.nrfx_grtc_rtcomparesync_int_disable"]], "nrfx_grtc_rtcomparesync_int_enable (c function)": [[55, "c.nrfx_grtc_rtcomparesync_int_enable"]], "nrfx_grtc_rtcounter_cc_absolute_set (c function)": [[55, "c.nrfx_grtc_rtcounter_cc_absolute_set"]], "nrfx_grtc_rtcounter_cc_disable (c function)": [[55, "c.nrfx_grtc_rtcounter_cc_disable"]], "nrfx_grtc_rtcounter_cc_int_disable (c function)": [[55, "c.nrfx_grtc_rtcounter_cc_int_disable"]], "nrfx_grtc_rtcounter_cc_int_enable (c function)": [[55, "c.nrfx_grtc_rtcounter_cc_int_enable"]], "nrfx_grtc_rtcounter_get (c function)": [[55, "c.nrfx_grtc_rtcounter_get"]], "nrfx_grtc_rtcounter_handler_data_t (c struct)": [[55, "c.nrfx_grtc_rtcounter_handler_data_t"]], "nrfx_grtc_rtcounter_handler_data_t.handler (c var)": [[55, "c.nrfx_grtc_rtcounter_handler_data_t.handler"]], "nrfx_grtc_rtcounter_handler_data_t.p_context (c var)": [[55, "c.nrfx_grtc_rtcounter_handler_data_t.p_context"]], "nrfx_grtc_sleep_config_t (c struct)": [[55, "c.nrfx_grtc_sleep_config_t"]], "nrfx_grtc_sleep_config_t.auto_mode (c var)": [[55, "c.nrfx_grtc_sleep_config_t.auto_mode"]], "nrfx_grtc_sleep_config_t.timeout (c var)": [[55, "c.nrfx_grtc_sleep_config_t.timeout"]], "nrfx_grtc_sleep_config_t.waketime (c var)": [[55, "c.nrfx_grtc_sleep_config_t.waketime"]], "nrfx_grtc_sleep_configuration_get (c function)": [[55, "c.nrfx_grtc_sleep_configuration_get"]], "nrfx_grtc_sleep_configure (c function)": [[55, "c.nrfx_grtc_sleep_configure"]], "nrfx_grtc_sys_counter_cc_enable_check (c function)": [[55, "c.nrfx_grtc_sys_counter_cc_enable_check"]], "nrfx_grtc_syscounter_capture (c function)": [[55, "c.nrfx_grtc_syscounter_capture"]], "nrfx_grtc_syscounter_cc_absolute_set (c function)": [[55, "c.nrfx_grtc_syscounter_cc_absolute_set"]], "nrfx_grtc_syscounter_cc_disable (c function)": [[55, "c.nrfx_grtc_syscounter_cc_disable"]], "nrfx_grtc_syscounter_cc_int_disable (c function)": [[55, "c.nrfx_grtc_syscounter_cc_int_disable"]], "nrfx_grtc_syscounter_cc_int_enable (c function)": [[55, "c.nrfx_grtc_syscounter_cc_int_enable"]], "nrfx_grtc_syscounter_cc_int_enable_check (c function)": [[55, "c.nrfx_grtc_syscounter_cc_int_enable_check"]], "nrfx_grtc_syscounter_cc_relative_set (c function)": [[55, "c.nrfx_grtc_syscounter_cc_relative_set"]], "nrfx_grtc_syscounter_cc_value_read (c function)": [[55, "c.nrfx_grtc_syscounter_cc_value_read"]], "nrfx_grtc_syscounter_compare_event_check (c function)": [[55, "c.nrfx_grtc_syscounter_compare_event_check"]], "nrfx_grtc_syscounter_get (c function)": [[55, "c.nrfx_grtc_syscounter_get"]], "nrfx_grtc_syscounter_start (c function)": [[55, "c.nrfx_grtc_syscounter_start"]], "nrfx_grtc_syscountervalid_handler_t (c type)": [[55, "c.nrfx_grtc_syscountervalid_handler_t"]], "nrfx_grtc_syscountervalid_int_disable (c function)": [[55, "c.nrfx_grtc_syscountervalid_int_disable"]], "nrfx_grtc_syscountervalid_int_enable (c function)": [[55, "c.nrfx_grtc_syscountervalid_int_enable"]], "nrfx_grtc_task_address_get (c function)": [[55, "c.nrfx_grtc_task_address_get"]], "nrfx_grtc_uninit (c function)": [[55, "c.nrfx_grtc_uninit"]], "grtc_inten (c macro)": [[56, "c.GRTC_INTEN"]], "grtc_intenclr (c macro)": [[56, "c.GRTC_INTENCLR"]], "grtc_intenset (c macro)": [[56, "c.GRTC_INTENSET"]], "grtc_intpend (c macro)": [[56, "c.GRTC_INTPEND"]], "grtc_syscounter (c macro)": [[56, "c.GRTC_SYSCOUNTER"]], "nrf_grtc_channel_int_mask (c macro)": [[56, "c.NRF_GRTC_CHANNEL_INT_MASK"]], "nrf_grtc_clkcfg_clkfastdiv_max_value (c macro)": [[56, "c.NRF_GRTC_CLKCFG_CLKFASTDIV_MAX_VALUE"]], "nrf_grtc_domain_index (c macro)": [[56, "c.NRF_GRTC_DOMAIN_INDEX"]], "nrf_grtc_has_clkout (c macro)": [[56, "c.NRF_GRTC_HAS_CLKOUT"]], "nrf_grtc_has_clksel (c macro)": [[56, "c.NRF_GRTC_HAS_CLKSEL"]], "nrf_grtc_has_extended (c macro)": [[56, "c.NRF_GRTC_HAS_EXTENDED"]], "nrf_grtc_has_pwm (c macro)": [[56, "c.NRF_GRTC_HAS_PWM"]], "nrf_grtc_has_rtcounter (c macro)": [[56, "c.NRF_GRTC_HAS_RTCOUNTER"]], "nrf_grtc_has_syscounter_array (c macro)": [[56, "c.NRF_GRTC_HAS_SYSCOUNTER_ARRAY"]], "nrf_grtc_inten_mask (c macro)": [[56, "c.NRF_GRTC_INTEN_MASK"]], "nrf_grtc_main_cc_channel (c macro)": [[56, "c.NRF_GRTC_MAIN_CC_CHANNEL"]], "nrf_grtc_rtcounter_cch_mask (c macro)": [[56, "c.NRF_GRTC_RTCOUNTER_CCH_MASK"]], "nrf_grtc_syscounterh_busy_mask (c macro)": [[56, "c.NRF_GRTC_SYSCOUNTERH_BUSY_MASK"]], "nrf_grtc_syscounterh_overflow_mask (c macro)": [[56, "c.NRF_GRTC_SYSCOUNTERH_OVERFLOW_MASK"]], "nrf_grtc_syscounterh_value_mask (c macro)": [[56, "c.NRF_GRTC_SYSCOUNTERH_VALUE_MASK"]], "nrf_grtc_syscounterl_value_mask (c macro)": [[56, "c.NRF_GRTC_SYSCOUNTERL_VALUE_MASK"]], "nrf_grtc_syscounter_all_channels_int_mask (c macro)": [[56, "c.NRF_GRTC_SYSCOUNTER_ALL_CHANNELS_INT_MASK"]], "nrf_grtc_syscounter_ccadd_mask (c macro)": [[56, "c.NRF_GRTC_SYSCOUNTER_CCADD_MASK"]], "nrf_grtc_syscounter_cch_mask (c macro)": [[56, "c.NRF_GRTC_SYSCOUNTER_CCH_MASK"]], "nrf_grtc_syscounter_cc_count (c macro)": [[56, "c.NRF_GRTC_SYSCOUNTER_CC_COUNT"]], "nrf_grtc_syscounter_main_frequency_hz (c macro)": [[56, "c.NRF_GRTC_SYSCOUNTER_MAIN_FREQUENCY_HZ"]], "nrf_grtc_timeout_max_value (c macro)": [[56, "c.NRF_GRTC_TIMEOUT_MAX_VALUE"]], "nrf_grtc_waketime_max_value (c macro)": [[56, "c.NRF_GRTC_WAKETIME_MAX_VALUE"]], "nrf_grtc_cc_add_reference_t (c enum)": [[56, "c.nrf_grtc_cc_add_reference_t"]], "nrf_grtc_cc_add_reference_t.nrf_grtc_cc_add_reference_cc (c enumerator)": [[56, "c.nrf_grtc_cc_add_reference_t.NRF_GRTC_CC_ADD_REFERENCE_CC"]], "nrf_grtc_cc_add_reference_t.nrf_grtc_cc_add_reference_syscounter (c enumerator)": [[56, "c.nrf_grtc_cc_add_reference_t.NRF_GRTC_CC_ADD_REFERENCE_SYSCOUNTER"]], "nrf_grtc_clkout_divider_get (c function)": [[56, "c.nrf_grtc_clkout_divider_get"]], "nrf_grtc_clkout_divider_set (c function)": [[56, "c.nrf_grtc_clkout_divider_set"]], "nrf_grtc_clkout_enable_check (c function)": [[56, "c.nrf_grtc_clkout_enable_check"]], "nrf_grtc_clkout_set (c function)": [[56, "c.nrf_grtc_clkout_set"]], "nrf_grtc_clkout_t (c enum)": [[56, "c.nrf_grtc_clkout_t"]], "nrf_grtc_clkout_t.nrf_grtc_clkout_32k (c enumerator)": [[56, "c.nrf_grtc_clkout_t.NRF_GRTC_CLKOUT_32K"]], "nrf_grtc_clkout_t.nrf_grtc_clkout_fast (c enumerator)": [[56, "c.nrf_grtc_clkout_t.NRF_GRTC_CLKOUT_FAST"]], "nrf_grtc_clksel_get (c function)": [[56, "c.nrf_grtc_clksel_get"]], "nrf_grtc_clksel_set (c function)": [[56, "c.nrf_grtc_clksel_set"]], "nrf_grtc_clksel_t (c enum)": [[56, "c.nrf_grtc_clksel_t"]], "nrf_grtc_clksel_t.nrf_grtc_clksel_lfclk (c enumerator)": [[56, "c.nrf_grtc_clksel_t.NRF_GRTC_CLKSEL_LFCLK"]], "nrf_grtc_clksel_t.nrf_grtc_clksel_lfxo (c enumerator)": [[56, "c.nrf_grtc_clksel_t.NRF_GRTC_CLKSEL_LFXO"]], "nrf_grtc_event_address_get (c function)": [[56, "c.nrf_grtc_event_address_get"]], "nrf_grtc_event_check (c function)": [[56, "c.nrf_grtc_event_check"]], "nrf_grtc_event_clear (c function)": [[56, "c.nrf_grtc_event_clear"]], "nrf_grtc_event_disable (c function)": [[56, "c.nrf_grtc_event_disable"]], "nrf_grtc_event_enable (c function)": [[56, "c.nrf_grtc_event_enable"]], "nrf_grtc_event_t (c enum)": [[56, "c.nrf_grtc_event_t"]], "nrf_grtc_event_t.nrf_grtc_event_compare_0 (c enumerator)": [[56, "c.nrf_grtc_event_t.NRF_GRTC_EVENT_COMPARE_0"]], "nrf_grtc_event_t.nrf_grtc_event_compare_1 (c enumerator)": [[56, "c.nrf_grtc_event_t.NRF_GRTC_EVENT_COMPARE_1"]], "nrf_grtc_event_t.nrf_grtc_event_compare_10 (c enumerator)": [[56, "c.nrf_grtc_event_t.NRF_GRTC_EVENT_COMPARE_10"]], "nrf_grtc_event_t.nrf_grtc_event_compare_11 (c enumerator)": [[56, "c.nrf_grtc_event_t.NRF_GRTC_EVENT_COMPARE_11"]], "nrf_grtc_event_t.nrf_grtc_event_compare_12 (c enumerator)": [[56, "c.nrf_grtc_event_t.NRF_GRTC_EVENT_COMPARE_12"]], "nrf_grtc_event_t.nrf_grtc_event_compare_2 (c enumerator)": [[56, "c.nrf_grtc_event_t.NRF_GRTC_EVENT_COMPARE_2"]], "nrf_grtc_event_t.nrf_grtc_event_compare_3 (c enumerator)": [[56, "c.nrf_grtc_event_t.NRF_GRTC_EVENT_COMPARE_3"]], "nrf_grtc_event_t.nrf_grtc_event_compare_4 (c enumerator)": [[56, "c.nrf_grtc_event_t.NRF_GRTC_EVENT_COMPARE_4"]], "nrf_grtc_event_t.nrf_grtc_event_compare_5 (c enumerator)": [[56, "c.nrf_grtc_event_t.NRF_GRTC_EVENT_COMPARE_5"]], "nrf_grtc_event_t.nrf_grtc_event_compare_6 (c enumerator)": [[56, "c.nrf_grtc_event_t.NRF_GRTC_EVENT_COMPARE_6"]], "nrf_grtc_event_t.nrf_grtc_event_compare_7 (c enumerator)": [[56, "c.nrf_grtc_event_t.NRF_GRTC_EVENT_COMPARE_7"]], "nrf_grtc_event_t.nrf_grtc_event_compare_8 (c enumerator)": [[56, "c.nrf_grtc_event_t.NRF_GRTC_EVENT_COMPARE_8"]], "nrf_grtc_event_t.nrf_grtc_event_compare_9 (c enumerator)": [[56, "c.nrf_grtc_event_t.NRF_GRTC_EVENT_COMPARE_9"]], "nrf_grtc_event_t.nrf_grtc_event_pwm_period_end (c enumerator)": [[56, "c.nrf_grtc_event_t.NRF_GRTC_EVENT_PWM_PERIOD_END"]], "nrf_grtc_event_t.nrf_grtc_event_rtcompare (c enumerator)": [[56, "c.nrf_grtc_event_t.NRF_GRTC_EVENT_RTCOMPARE"]], "nrf_grtc_event_t.nrf_grtc_event_rtcomparesync (c enumerator)": [[56, "c.nrf_grtc_event_t.NRF_GRTC_EVENT_RTCOMPARESYNC"]], "nrf_grtc_event_t.nrf_grtc_event_syscountervalid (c enumerator)": [[56, "c.nrf_grtc_event_t.NRF_GRTC_EVENT_SYSCOUNTERVALID"]], "nrf_grtc_int_disable (c function)": [[56, "c.nrf_grtc_int_disable"]], "nrf_grtc_int_enable (c function)": [[56, "c.nrf_grtc_int_enable"]], "nrf_grtc_int_enable_check (c function)": [[56, "c.nrf_grtc_int_enable_check"]], "nrf_grtc_int_mask_t (c enum)": [[56, "c.nrf_grtc_int_mask_t"]], "nrf_grtc_int_mask_t.nrf_grtc_int_compare0_mask (c enumerator)": [[56, "c.nrf_grtc_int_mask_t.NRF_GRTC_INT_COMPARE0_MASK"]], "nrf_grtc_int_mask_t.nrf_grtc_int_compare10_mask (c enumerator)": [[56, "c.nrf_grtc_int_mask_t.NRF_GRTC_INT_COMPARE10_MASK"]], "nrf_grtc_int_mask_t.nrf_grtc_int_compare11_mask (c enumerator)": [[56, "c.nrf_grtc_int_mask_t.NRF_GRTC_INT_COMPARE11_MASK"]], "nrf_grtc_int_mask_t.nrf_grtc_int_compare1_mask (c enumerator)": [[56, "c.nrf_grtc_int_mask_t.NRF_GRTC_INT_COMPARE1_MASK"]], "nrf_grtc_int_mask_t.nrf_grtc_int_compare2_mask (c enumerator)": [[56, "c.nrf_grtc_int_mask_t.NRF_GRTC_INT_COMPARE2_MASK"]], "nrf_grtc_int_mask_t.nrf_grtc_int_compare3_mask (c enumerator)": [[56, "c.nrf_grtc_int_mask_t.NRF_GRTC_INT_COMPARE3_MASK"]], "nrf_grtc_int_mask_t.nrf_grtc_int_compare4_mask (c enumerator)": [[56, "c.nrf_grtc_int_mask_t.NRF_GRTC_INT_COMPARE4_MASK"]], "nrf_grtc_int_mask_t.nrf_grtc_int_compare5_mask (c enumerator)": [[56, "c.nrf_grtc_int_mask_t.NRF_GRTC_INT_COMPARE5_MASK"]], "nrf_grtc_int_mask_t.nrf_grtc_int_compare6_mask (c enumerator)": [[56, "c.nrf_grtc_int_mask_t.NRF_GRTC_INT_COMPARE6_MASK"]], "nrf_grtc_int_mask_t.nrf_grtc_int_compare7_mask (c enumerator)": [[56, "c.nrf_grtc_int_mask_t.NRF_GRTC_INT_COMPARE7_MASK"]], "nrf_grtc_int_mask_t.nrf_grtc_int_compare8_mask (c enumerator)": [[56, "c.nrf_grtc_int_mask_t.NRF_GRTC_INT_COMPARE8_MASK"]], "nrf_grtc_int_mask_t.nrf_grtc_int_compare9_mask (c enumerator)": [[56, "c.nrf_grtc_int_mask_t.NRF_GRTC_INT_COMPARE9_MASK"]], "nrf_grtc_int_mask_t.nrf_grtc_int_rtcomparesync_mask (c enumerator)": [[56, "c.nrf_grtc_int_mask_t.NRF_GRTC_INT_RTCOMPARESYNC_MASK"]], "nrf_grtc_int_mask_t.nrf_grtc_int_rtcompare_mask (c enumerator)": [[56, "c.nrf_grtc_int_mask_t.NRF_GRTC_INT_RTCOMPARE_MASK"]], "nrf_grtc_int_mask_t.nrf_grtc_int_syscountervalid_mask (c enumerator)": [[56, "c.nrf_grtc_int_mask_t.NRF_GRTC_INT_SYSCOUNTERVALID_MASK"]], "nrf_grtc_int_pending_get (c function)": [[56, "c.nrf_grtc_int_pending_get"]], "nrf_grtc_publish_clear (c function)": [[56, "c.nrf_grtc_publish_clear"]], "nrf_grtc_publish_set (c function)": [[56, "c.nrf_grtc_publish_set"]], "nrf_grtc_pwm_compare_get (c function)": [[56, "c.nrf_grtc_pwm_compare_get"]], "nrf_grtc_pwm_compare_set (c function)": [[56, "c.nrf_grtc_pwm_compare_set"]], "nrf_grtc_rt_counter_cc_get (c function)": [[56, "c.nrf_grtc_rt_counter_cc_get"]], "nrf_grtc_rt_counter_cc_set (c function)": [[56, "c.nrf_grtc_rt_counter_cc_set"]], "nrf_grtc_rt_counter_high_get (c function)": [[56, "c.nrf_grtc_rt_counter_high_get"]], "nrf_grtc_rt_counter_low_get (c function)": [[56, "c.nrf_grtc_rt_counter_low_get"]], "nrf_grtc_short_mask_t (c enum)": [[56, "c.nrf_grtc_short_mask_t"]], "nrf_grtc_short_mask_t.nrf_grtc_short_rtcompare_clear_mask (c enumerator)": [[56, "c.nrf_grtc_short_mask_t.NRF_GRTC_SHORT_RTCOMPARE_CLEAR_MASK"]], "nrf_grtc_shorts_disable (c function)": [[56, "c.nrf_grtc_shorts_disable"]], "nrf_grtc_shorts_enable (c function)": [[56, "c.nrf_grtc_shorts_enable"]], "nrf_grtc_shorts_set (c function)": [[56, "c.nrf_grtc_shorts_set"]], "nrf_grtc_subscribe_clear (c function)": [[56, "c.nrf_grtc_subscribe_clear"]], "nrf_grtc_subscribe_set (c function)": [[56, "c.nrf_grtc_subscribe_set"]], "nrf_grtc_sys_counter_active_check (c function)": [[56, "c.nrf_grtc_sys_counter_active_check"]], "nrf_grtc_sys_counter_active_set (c function)": [[56, "c.nrf_grtc_sys_counter_active_set"]], "nrf_grtc_sys_counter_active_state_request_check (c function)": [[56, "c.nrf_grtc_sys_counter_active_state_request_check"]], "nrf_grtc_sys_counter_active_state_request_get (c function)": [[56, "c.nrf_grtc_sys_counter_active_state_request_get"]], "nrf_grtc_sys_counter_active_state_request_set (c function)": [[56, "c.nrf_grtc_sys_counter_active_state_request_set"]], "nrf_grtc_sys_counter_auto_mode_check (c function)": [[56, "c.nrf_grtc_sys_counter_auto_mode_check"]], "nrf_grtc_sys_counter_auto_mode_set (c function)": [[56, "c.nrf_grtc_sys_counter_auto_mode_set"]], "nrf_grtc_sys_counter_capture_task_get (c function)": [[56, "c.nrf_grtc_sys_counter_capture_task_get"]], "nrf_grtc_sys_counter_cc_add_set (c function)": [[56, "c.nrf_grtc_sys_counter_cc_add_set"]], "nrf_grtc_sys_counter_cc_enable_check (c function)": [[56, "c.nrf_grtc_sys_counter_cc_enable_check"]], "nrf_grtc_sys_counter_cc_get (c function)": [[56, "c.nrf_grtc_sys_counter_cc_get"]], "nrf_grtc_sys_counter_cc_set (c function)": [[56, "c.nrf_grtc_sys_counter_cc_set"]], "nrf_grtc_sys_counter_check (c function)": [[56, "c.nrf_grtc_sys_counter_check"]], "nrf_grtc_sys_counter_compare_event_disable (c function)": [[56, "c.nrf_grtc_sys_counter_compare_event_disable"]], "nrf_grtc_sys_counter_compare_event_enable (c function)": [[56, "c.nrf_grtc_sys_counter_compare_event_enable"]], "nrf_grtc_sys_counter_compare_event_get (c function)": [[56, "c.nrf_grtc_sys_counter_compare_event_get"]], "nrf_grtc_sys_counter_get (c function)": [[56, "c.nrf_grtc_sys_counter_get"]], "nrf_grtc_sys_counter_high_get (c function)": [[56, "c.nrf_grtc_sys_counter_high_get"]], "nrf_grtc_sys_counter_interval_get (c function)": [[56, "c.nrf_grtc_sys_counter_interval_get"]], "nrf_grtc_sys_counter_interval_set (c function)": [[56, "c.nrf_grtc_sys_counter_interval_set"]], "nrf_grtc_sys_counter_low_get (c function)": [[56, "c.nrf_grtc_sys_counter_low_get"]], "nrf_grtc_sys_counter_overflow_check (c function)": [[56, "c.nrf_grtc_sys_counter_overflow_check"]], "nrf_grtc_sys_counter_set (c function)": [[56, "c.nrf_grtc_sys_counter_set"]], "nrf_grtc_task_address_get (c function)": [[56, "c.nrf_grtc_task_address_get"]], "nrf_grtc_task_t (c enum)": [[56, "c.nrf_grtc_task_t"]], "nrf_grtc_task_t.nrf_grtc_task_capture_0 (c enumerator)": [[56, "c.nrf_grtc_task_t.NRF_GRTC_TASK_CAPTURE_0"]], "nrf_grtc_task_t.nrf_grtc_task_capture_1 (c enumerator)": [[56, "c.nrf_grtc_task_t.NRF_GRTC_TASK_CAPTURE_1"]], "nrf_grtc_task_t.nrf_grtc_task_capture_10 (c enumerator)": [[56, "c.nrf_grtc_task_t.NRF_GRTC_TASK_CAPTURE_10"]], "nrf_grtc_task_t.nrf_grtc_task_capture_11 (c enumerator)": [[56, "c.nrf_grtc_task_t.NRF_GRTC_TASK_CAPTURE_11"]], "nrf_grtc_task_t.nrf_grtc_task_capture_2 (c enumerator)": [[56, "c.nrf_grtc_task_t.NRF_GRTC_TASK_CAPTURE_2"]], "nrf_grtc_task_t.nrf_grtc_task_capture_3 (c enumerator)": [[56, "c.nrf_grtc_task_t.NRF_GRTC_TASK_CAPTURE_3"]], "nrf_grtc_task_t.nrf_grtc_task_capture_4 (c enumerator)": [[56, "c.nrf_grtc_task_t.NRF_GRTC_TASK_CAPTURE_4"]], "nrf_grtc_task_t.nrf_grtc_task_capture_5 (c enumerator)": [[56, "c.nrf_grtc_task_t.NRF_GRTC_TASK_CAPTURE_5"]], "nrf_grtc_task_t.nrf_grtc_task_capture_6 (c enumerator)": [[56, "c.nrf_grtc_task_t.NRF_GRTC_TASK_CAPTURE_6"]], "nrf_grtc_task_t.nrf_grtc_task_capture_7 (c enumerator)": [[56, "c.nrf_grtc_task_t.NRF_GRTC_TASK_CAPTURE_7"]], "nrf_grtc_task_t.nrf_grtc_task_capture_8 (c enumerator)": [[56, "c.nrf_grtc_task_t.NRF_GRTC_TASK_CAPTURE_8"]], "nrf_grtc_task_t.nrf_grtc_task_capture_9 (c enumerator)": [[56, "c.nrf_grtc_task_t.NRF_GRTC_TASK_CAPTURE_9"]], "nrf_grtc_task_t.nrf_grtc_task_clear (c enumerator)": [[56, "c.nrf_grtc_task_t.NRF_GRTC_TASK_CLEAR"]], "nrf_grtc_task_t.nrf_grtc_task_pwm_start (c enumerator)": [[56, "c.nrf_grtc_task_t.NRF_GRTC_TASK_PWM_START"]], "nrf_grtc_task_t.nrf_grtc_task_pwm_stop (c enumerator)": [[56, "c.nrf_grtc_task_t.NRF_GRTC_TASK_PWM_STOP"]], "nrf_grtc_task_t.nrf_grtc_task_start (c enumerator)": [[56, "c.nrf_grtc_task_t.NRF_GRTC_TASK_START"]], "nrf_grtc_task_t.nrf_grtc_task_stop (c enumerator)": [[56, "c.nrf_grtc_task_t.NRF_GRTC_TASK_STOP"]], "nrf_grtc_task_trigger (c function)": [[56, "c.nrf_grtc_task_trigger"]], "nrf_grtc_timeout_get (c function)": [[56, "c.nrf_grtc_timeout_get"]], "nrf_grtc_timeout_set (c function)": [[56, "c.nrf_grtc_timeout_set"]], "nrf_grtc_waketime_get (c function)": [[56, "c.nrf_grtc_waketime_get"]], "nrf_grtc_waketime_set (c function)": [[56, "c.nrf_grtc_waketime_set"]], "nrfy_grtc_has_clkout (c macro)": [[57, "c.NRFY_GRTC_HAS_CLKOUT"]], "nrfy_grtc_has_clksel (c macro)": [[57, "c.NRFY_GRTC_HAS_CLKSEL"]], "nrfy_grtc_has_extended (c macro)": [[57, "c.NRFY_GRTC_HAS_EXTENDED"]], "nrfy_grtc_has_pwm (c macro)": [[57, "c.NRFY_GRTC_HAS_PWM"]], "nrfy_grtc_has_rtcounter (c macro)": [[57, "c.NRFY_GRTC_HAS_RTCOUNTER"]], "nrfy_grtc_has_syscounter_array (c macro)": [[57, "c.NRFY_GRTC_HAS_SYSCOUNTER_ARRAY"]], "nrfy_grtc_syscounter_retry_mask (c macro)": [[57, "c.NRFY_GRTC_SYSCOUNTER_RETRY_MASK"]], "nrfy_grtc_clkout_divider_get (c function)": [[57, "c.nrfy_grtc_clkout_divider_get"]], "nrfy_grtc_clkout_divider_set (c function)": [[57, "c.nrfy_grtc_clkout_divider_set"]], "nrfy_grtc_clkout_enable_check (c function)": [[57, "c.nrfy_grtc_clkout_enable_check"]], "nrfy_grtc_clkout_set (c function)": [[57, "c.nrfy_grtc_clkout_set"]], "nrfy_grtc_clksel_get (c function)": [[57, "c.nrfy_grtc_clksel_get"]], "nrfy_grtc_clksel_set (c function)": [[57, "c.nrfy_grtc_clksel_set"]], "nrfy_grtc_event_address_get (c function)": [[57, "c.nrfy_grtc_event_address_get"]], "nrfy_grtc_event_check (c function)": [[57, "c.nrfy_grtc_event_check"]], "nrfy_grtc_event_clear (c function)": [[57, "c.nrfy_grtc_event_clear"]], "nrfy_grtc_events_process (c function)": [[57, "c.nrfy_grtc_events_process"]], "nrfy_grtc_int_disable (c function)": [[57, "c.nrfy_grtc_int_disable"]], "nrfy_grtc_int_enable (c function)": [[57, "c.nrfy_grtc_int_enable"]], "nrfy_grtc_int_enable_check (c function)": [[57, "c.nrfy_grtc_int_enable_check"]], "nrfy_grtc_int_init (c function)": [[57, "c.nrfy_grtc_int_init"]], "nrfy_grtc_int_pending_get (c function)": [[57, "c.nrfy_grtc_int_pending_get"]], "nrfy_grtc_int_uninit (c function)": [[57, "c.nrfy_grtc_int_uninit"]], "nrfy_grtc_prepare (c function)": [[57, "c.nrfy_grtc_prepare"]], "nrfy_grtc_publish_clear (c function)": [[57, "c.nrfy_grtc_publish_clear"]], "nrfy_grtc_publish_set (c function)": [[57, "c.nrfy_grtc_publish_set"]], "nrfy_grtc_pwm_compare_get (c function)": [[57, "c.nrfy_grtc_pwm_compare_get"]], "nrfy_grtc_pwm_compare_set (c function)": [[57, "c.nrfy_grtc_pwm_compare_set"]], "nrfy_grtc_rt_counter_cc_get (c function)": [[57, "c.nrfy_grtc_rt_counter_cc_get"]], "nrfy_grtc_rt_counter_cc_set (c function)": [[57, "c.nrfy_grtc_rt_counter_cc_set"]], "nrfy_grtc_rt_counter_get (c function)": [[57, "c.nrfy_grtc_rt_counter_get"]], "nrfy_grtc_shorts_disable (c function)": [[57, "c.nrfy_grtc_shorts_disable"]], "nrfy_grtc_shorts_enable (c function)": [[57, "c.nrfy_grtc_shorts_enable"]], "nrfy_grtc_shorts_set (c function)": [[57, "c.nrfy_grtc_shorts_set"]], "nrfy_grtc_subscribe_clear (c function)": [[57, "c.nrfy_grtc_subscribe_clear"]], "nrfy_grtc_subscribe_set (c function)": [[57, "c.nrfy_grtc_subscribe_set"]], "nrfy_grtc_sys_conter_ready_check (c function)": [[57, "c.nrfy_grtc_sys_conter_ready_check"]], "nrfy_grtc_sys_counter_active_check (c function)": [[57, "c.nrfy_grtc_sys_counter_active_check"]], "nrfy_grtc_sys_counter_active_set (c function)": [[57, "c.nrfy_grtc_sys_counter_active_set"]], "nrfy_grtc_sys_counter_active_state_request_check (c function)": [[57, "c.nrfy_grtc_sys_counter_active_state_request_check"]], "nrfy_grtc_sys_counter_active_state_request_get (c function)": [[57, "c.nrfy_grtc_sys_counter_active_state_request_get"]], "nrfy_grtc_sys_counter_active_state_request_set (c function)": [[57, "c.nrfy_grtc_sys_counter_active_state_request_set"]], "nrfy_grtc_sys_counter_auto_mode_check (c function)": [[57, "c.nrfy_grtc_sys_counter_auto_mode_check"]], "nrfy_grtc_sys_counter_auto_mode_set (c function)": [[57, "c.nrfy_grtc_sys_counter_auto_mode_set"]], "nrfy_grtc_sys_counter_capture_subscribe_clear (c function)": [[57, "c.nrfy_grtc_sys_counter_capture_subscribe_clear"]], "nrfy_grtc_sys_counter_capture_subscribe_set (c function)": [[57, "c.nrfy_grtc_sys_counter_capture_subscribe_set"]], "nrfy_grtc_sys_counter_capture_task_get (c function)": [[57, "c.nrfy_grtc_sys_counter_capture_task_get"]], "nrfy_grtc_sys_counter_cc_add_set (c function)": [[57, "c.nrfy_grtc_sys_counter_cc_add_set"]], "nrfy_grtc_sys_counter_cc_enable_check (c function)": [[57, "c.nrfy_grtc_sys_counter_cc_enable_check"]], "nrfy_grtc_sys_counter_cc_get (c function)": [[57, "c.nrfy_grtc_sys_counter_cc_get"]], "nrfy_grtc_sys_counter_cc_set (c function)": [[57, "c.nrfy_grtc_sys_counter_cc_set"]], "nrfy_grtc_sys_counter_check (c function)": [[57, "c.nrfy_grtc_sys_counter_check"]], "nrfy_grtc_sys_counter_compare_event_check (c function)": [[57, "c.nrfy_grtc_sys_counter_compare_event_check"]], "nrfy_grtc_sys_counter_compare_event_clear (c function)": [[57, "c.nrfy_grtc_sys_counter_compare_event_clear"]], "nrfy_grtc_sys_counter_compare_event_disable (c function)": [[57, "c.nrfy_grtc_sys_counter_compare_event_disable"]], "nrfy_grtc_sys_counter_compare_event_enable (c function)": [[57, "c.nrfy_grtc_sys_counter_compare_event_enable"]], "nrfy_grtc_sys_counter_compare_event_get (c function)": [[57, "c.nrfy_grtc_sys_counter_compare_event_get"]], "nrfy_grtc_sys_counter_compare_event_int_clear_enable (c function)": [[57, "c.nrfy_grtc_sys_counter_compare_event_int_clear_enable"]], "nrfy_grtc_sys_counter_compare_publish_clear (c function)": [[57, "c.nrfy_grtc_sys_counter_compare_publish_clear"]], "nrfy_grtc_sys_counter_compare_publish_set (c function)": [[57, "c.nrfy_grtc_sys_counter_compare_publish_set"]], "nrfy_grtc_sys_counter_get (c function)": [[57, "c.nrfy_grtc_sys_counter_get"]], "nrfy_grtc_sys_counter_interval_get (c function)": [[57, "c.nrfy_grtc_sys_counter_interval_get"]], "nrfy_grtc_sys_counter_interval_set (c function)": [[57, "c.nrfy_grtc_sys_counter_interval_set"]], "nrfy_grtc_sys_counter_overflow_check (c function)": [[57, "c.nrfy_grtc_sys_counter_overflow_check"]], "nrfy_grtc_sys_counter_set (c function)": [[57, "c.nrfy_grtc_sys_counter_set"]], "nrfy_grtc_sys_counter_start (c function)": [[57, "c.nrfy_grtc_sys_counter_start"]], "nrfy_grtc_task_address_get (c function)": [[57, "c.nrfy_grtc_task_address_get"]], "nrfy_grtc_task_trigger (c function)": [[57, "c.nrfy_grtc_task_trigger"]], "nrfy_grtc_timeout_get (c function)": [[57, "c.nrfy_grtc_timeout_get"]], "nrfy_grtc_timeout_set (c function)": [[57, "c.nrfy_grtc_timeout_set"]], "nrfy_grtc_waketime_get (c function)": [[57, "c.nrfy_grtc_waketime_get"]], "nrfy_grtc_waketime_set (c function)": [[57, "c.nrfy_grtc_waketime_set"]], "nrf_hsfll_has_dithering_initvalue (c macro)": [[59, "c.NRF_HSFLL_HAS_DITHERING_INITVALUE"]], "nrf_hsfll_has_ditherinit (c macro)": [[59, "c.NRF_HSFLL_HAS_DITHERINIT"]], "nrf_hsfll_clkctrl_dither_init_set (c function)": [[59, "c.nrf_hsfll_clkctrl_dither_init_set"]], "nrf_hsfll_clkctrl_dithering_get (c function)": [[59, "c.nrf_hsfll_clkctrl_dithering_get"]], "nrf_hsfll_clkctrl_dithering_set (c function)": [[59, "c.nrf_hsfll_clkctrl_dithering_set"]], "nrf_hsfll_clkctrl_mode_get (c function)": [[59, "c.nrf_hsfll_clkctrl_mode_get"]], "nrf_hsfll_clkctrl_mode_set (c function)": [[59, "c.nrf_hsfll_clkctrl_mode_set"]], "nrf_hsfll_clkctrl_mult_get (c function)": [[59, "c.nrf_hsfll_clkctrl_mult_get"]], "nrf_hsfll_clkctrl_mult_set (c function)": [[59, "c.nrf_hsfll_clkctrl_mult_set"]], "nrf_hsfll_clkctrl_overridelocked_enable_set (c function)": [[59, "c.nrf_hsfll_clkctrl_overridelocked_enable_set"]], "nrf_hsfll_clkctrl_retainfinetrim_enable_set (c function)": [[59, "c.nrf_hsfll_clkctrl_retainfinetrim_enable_set"]], "nrf_hsfll_clkctrl_sleep_get (c function)": [[59, "c.nrf_hsfll_clkctrl_sleep_get"]], "nrf_hsfll_clkctrl_sleep_set (c function)": [[59, "c.nrf_hsfll_clkctrl_sleep_set"]], "nrf_hsfll_clkctrl_t (c struct)": [[59, "c.nrf_hsfll_clkctrl_t"]], "nrf_hsfll_clkctrl_t.mode (c var)": [[59, "c.nrf_hsfll_clkctrl_t.mode"]], "nrf_hsfll_clkctrl_t.override (c var)": [[59, "c.nrf_hsfll_clkctrl_t.override"]], "nrf_hsfll_dithering_t (c struct)": [[59, "c.nrf_hsfll_dithering_t"]], "nrf_hsfll_dithering_t.cyclecount (c var)": [[59, "c.nrf_hsfll_dithering_t.cyclecount"]], "nrf_hsfll_dithering_t.enable (c var)": [[59, "c.nrf_hsfll_dithering_t.enable"]], "nrf_hsfll_dithering_t.initvalue (c var)": [[59, "c.nrf_hsfll_dithering_t.initvalue"]], "nrf_hsfll_dithering_t.maxoffset (c var)": [[59, "c.nrf_hsfll_dithering_t.maxoffset"]], "nrf_hsfll_event_address_get (c function)": [[59, "c.nrf_hsfll_event_address_get"]], "nrf_hsfll_event_check (c function)": [[59, "c.nrf_hsfll_event_check"]], "nrf_hsfll_event_clear (c function)": [[59, "c.nrf_hsfll_event_clear"]], "nrf_hsfll_event_t (c enum)": [[59, "c.nrf_hsfll_event_t"]], "nrf_hsfll_event_t.nrf_hsfll_event_freqm_done (c enumerator)": [[59, "c.nrf_hsfll_event_t.NRF_HSFLL_EVENT_FREQM_DONE"]], "nrf_hsfll_event_t.nrf_hsfll_event_freq_changed (c enumerator)": [[59, "c.nrf_hsfll_event_t.NRF_HSFLL_EVENT_FREQ_CHANGED"]], "nrf_hsfll_event_t.nrf_hsfll_event_started (c enumerator)": [[59, "c.nrf_hsfll_event_t.NRF_HSFLL_EVENT_STARTED"]], "nrf_hsfll_event_t.nrf_hsfll_event_stopped (c enumerator)": [[59, "c.nrf_hsfll_event_t.NRF_HSFLL_EVENT_STOPPED"]], "nrf_hsfll_freqm_done_check (c function)": [[59, "c.nrf_hsfll_freqm_done_check"]], "nrf_hsfll_freqm_error_get (c function)": [[59, "c.nrf_hsfll_freqm_error_get"]], "nrf_hsfll_freqm_error_t (c struct)": [[59, "c.nrf_hsfll_freqm_error_t"]], "nrf_hsfll_freqm_error_t.error (c var)": [[59, "c.nrf_hsfll_freqm_error_t.error"]], "nrf_hsfll_freqm_error_t.trim_overflow (c var)": [[59, "c.nrf_hsfll_freqm_error_t.trim_overflow"]], "nrf_hsfll_freqm_error_t.trim_underflow (c var)": [[59, "c.nrf_hsfll_freqm_error_t.trim_underflow"]], "nrf_hsfll_freqm_meas_get (c function)": [[59, "c.nrf_hsfll_freqm_meas_get"]], "nrf_hsfll_mirror_lock_set (c function)": [[59, "c.nrf_hsfll_mirror_lock_set"]], "nrf_hsfll_mode_ctrl_t (c enum)": [[59, "c.nrf_hsfll_mode_ctrl_t"]], "nrf_hsfll_mode_ctrl_t.nrf_hsfll_mode_ctrl_auto (c enumerator)": [[59, "c.nrf_hsfll_mode_ctrl_t.NRF_HSFLL_MODE_CTRL_AUTO"]], "nrf_hsfll_mode_ctrl_t.nrf_hsfll_mode_ctrl_bypass (c enumerator)": [[59, "c.nrf_hsfll_mode_ctrl_t.NRF_HSFLL_MODE_CTRL_BYPASS"]], "nrf_hsfll_mode_ctrl_t.nrf_hsfll_mode_ctrl_closed_loop (c enumerator)": [[59, "c.nrf_hsfll_mode_ctrl_t.NRF_HSFLL_MODE_CTRL_CLOSED_LOOP"]], "nrf_hsfll_mode_ctrl_t.nrf_hsfll_mode_ctrl_open_loop (c enumerator)": [[59, "c.nrf_hsfll_mode_ctrl_t.NRF_HSFLL_MODE_CTRL_OPEN_LOOP"]], "nrf_hsfll_mode_status_t (c enum)": [[59, "c.nrf_hsfll_mode_status_t"]], "nrf_hsfll_mode_status_t.nrf_hsfll_mode_status_bypass (c enumerator)": [[59, "c.nrf_hsfll_mode_status_t.NRF_HSFLL_MODE_STATUS_BYPASS"]], "nrf_hsfll_mode_status_t.nrf_hsfll_mode_status_closed_loop (c enumerator)": [[59, "c.nrf_hsfll_mode_status_t.NRF_HSFLL_MODE_STATUS_CLOSED_LOOP"]], "nrf_hsfll_mode_status_t.nrf_hsfll_mode_status_open_loop (c enumerator)": [[59, "c.nrf_hsfll_mode_status_t.NRF_HSFLL_MODE_STATUS_OPEN_LOOP"]], "nrf_hsfll_sleep_t (c struct)": [[59, "c.nrf_hsfll_sleep_t"]], "nrf_hsfll_sleep_t.mode (c var)": [[59, "c.nrf_hsfll_sleep_t.mode"]], "nrf_hsfll_sleep_t.retain (c var)": [[59, "c.nrf_hsfll_sleep_t.retain"]], "nrf_hsfll_status_clk_get (c function)": [[59, "c.nrf_hsfll_status_clk_get"]], "nrf_hsfll_status_clk_t (c struct)": [[59, "c.nrf_hsfll_status_clk_t"]], "nrf_hsfll_status_clk_t.accuracy (c var)": [[59, "c.nrf_hsfll_status_clk_t.accuracy"]], "nrf_hsfll_status_clk_t.locked (c var)": [[59, "c.nrf_hsfll_status_clk_t.locked"]], "nrf_hsfll_status_clk_t.mode (c var)": [[59, "c.nrf_hsfll_status_clk_t.mode"]], "nrf_hsfll_status_clk_t.override (c var)": [[59, "c.nrf_hsfll_status_clk_t.override"]], "nrf_hsfll_task_address_get (c function)": [[59, "c.nrf_hsfll_task_address_get"]], "nrf_hsfll_task_t (c enum)": [[59, "c.nrf_hsfll_task_t"]], "nrf_hsfll_task_t.nrf_hsfll_task_freq_change (c enumerator)": [[59, "c.nrf_hsfll_task_t.NRF_HSFLL_TASK_FREQ_CHANGE"]], "nrf_hsfll_task_t.nrf_hsfll_task_freq_meas (c enumerator)": [[59, "c.nrf_hsfll_task_t.NRF_HSFLL_TASK_FREQ_MEAS"]], "nrf_hsfll_task_t.nrf_hsfll_task_start (c enumerator)": [[59, "c.nrf_hsfll_task_t.NRF_HSFLL_TASK_START"]], "nrf_hsfll_task_t.nrf_hsfll_task_stop (c enumerator)": [[59, "c.nrf_hsfll_task_t.NRF_HSFLL_TASK_STOP"]], "nrf_hsfll_task_trigger (c function)": [[59, "c.nrf_hsfll_task_trigger"]], "nrf_hsfll_trim_get (c function)": [[59, "c.nrf_hsfll_trim_get"]], "nrf_hsfll_trim_set (c function)": [[59, "c.nrf_hsfll_trim_set"]], "nrf_hsfll_trim_t (c struct)": [[59, "c.nrf_hsfll_trim_t"]], "nrf_hsfll_trim_t.coarse (c var)": [[59, "c.nrf_hsfll_trim_t.coarse"]], "nrf_hsfll_trim_t.fine (c var)": [[59, "c.nrf_hsfll_trim_t.fine"]], "nrf_hsfll_trim_t.vsup (c var)": [[59, "c.nrf_hsfll_trim_t.vsup"]], "nrfx_i2s_default_config (c macro)": [[60, "c.NRFX_I2S_DEFAULT_CONFIG"]], "nrfx_i2s_instance (c macro)": [[60, "c.NRFX_I2S_INSTANCE"]], "nrfx_i2s_status_next_buffers_needed (c macro)": [[60, "c.NRFX_I2S_STATUS_NEXT_BUFFERS_NEEDED"]], "nrfx_i2s_status_transfer_stopped (c macro)": [[60, "c.NRFX_I2S_STATUS_TRANSFER_STOPPED"]], "nrfx_i2s_buffers_t (c type)": [[60, "c.nrfx_i2s_buffers_t"]], "nrfx_i2s_config_t (c struct)": [[60, "c.nrfx_i2s_config_t"]], "nrfx_i2s_config_t.alignment (c var)": [[60, "c.nrfx_i2s_config_t.alignment"]], "nrfx_i2s_config_t.channels (c var)": [[60, "c.nrfx_i2s_config_t.channels"]], "nrfx_i2s_config_t.format (c var)": [[60, "c.nrfx_i2s_config_t.format"]], "nrfx_i2s_config_t.irq_priority (c var)": [[60, "c.nrfx_i2s_config_t.irq_priority"]], "nrfx_i2s_config_t.lrck_pin (c var)": [[60, "c.nrfx_i2s_config_t.lrck_pin"]], "nrfx_i2s_config_t.mck_pin (c var)": [[60, "c.nrfx_i2s_config_t.mck_pin"]], "nrfx_i2s_config_t.mck_setup (c var)": [[60, "c.nrfx_i2s_config_t.mck_setup"]], "nrfx_i2s_config_t.mode (c var)": [[60, "c.nrfx_i2s_config_t.mode"]], "nrfx_i2s_config_t.ratio (c var)": [[60, "c.nrfx_i2s_config_t.ratio"]], "nrfx_i2s_config_t.sample_width (c var)": [[60, "c.nrfx_i2s_config_t.sample_width"]], "nrfx_i2s_config_t.sck_pin (c var)": [[60, "c.nrfx_i2s_config_t.sck_pin"]], "nrfx_i2s_config_t.sdin_pin (c var)": [[60, "c.nrfx_i2s_config_t.sdin_pin"]], "nrfx_i2s_config_t.sdout_pin (c var)": [[60, "c.nrfx_i2s_config_t.sdout_pin"]], "nrfx_i2s_config_t.skip_gpio_cfg (c var)": [[60, "c.nrfx_i2s_config_t.skip_gpio_cfg"]], "nrfx_i2s_config_t.skip_psel_cfg (c var)": [[60, "c.nrfx_i2s_config_t.skip_psel_cfg"]], "nrfx_i2s_data_handler_t (c type)": [[60, "c.nrfx_i2s_data_handler_t"]], "nrfx_i2s_init (c function)": [[60, "c.nrfx_i2s_init"]], "nrfx_i2s_init_check (c function)": [[60, "c.nrfx_i2s_init_check"]], "nrfx_i2s_next_buffers_set (c function)": [[60, "c.nrfx_i2s_next_buffers_set"]], "nrfx_i2s_start (c function)": [[60, "c.nrfx_i2s_start"]], "nrfx_i2s_stop (c function)": [[60, "c.nrfx_i2s_stop"]], "nrfx_i2s_t (c struct)": [[60, "c.nrfx_i2s_t"]], "nrfx_i2s_t.drv_inst_idx (c var)": [[60, "c.nrfx_i2s_t.drv_inst_idx"]], "nrfx_i2s_t.p_reg (c var)": [[60, "c.nrfx_i2s_t.p_reg"]], "nrfx_i2s_uninit (c function)": [[60, "c.nrfx_i2s_uninit"]], "nrf_i2s_has_clkconfig (c macro)": [[61, "c.NRF_I2S_HAS_CLKCONFIG"]], "nrf_i2s_has_framestart (c macro)": [[61, "c.NRF_I2S_HAS_FRAMESTART"]], "nrf_i2s_has_gpio_port_selection (c macro)": [[61, "c.NRF_I2S_HAS_GPIO_PORT_SELECTION"]], "nrf_i2s_has_swidth_32bit (c macro)": [[61, "c.NRF_I2S_HAS_SWIDTH_32BIT"]], "nrf_i2s_pin_not_connected (c macro)": [[61, "c.NRF_I2S_PIN_NOT_CONNECTED"]], "nrf_i2s_psel_sck_pin_mask (c macro)": [[61, "c.NRF_I2S_PSEL_SCK_PIN_MASK"]], "nrf_i2s_psel_sck_port_mask (c macro)": [[61, "c.NRF_I2S_PSEL_SCK_PORT_MASK"]], "nrf_i2s_align_t (c enum)": [[61, "c.nrf_i2s_align_t"]], "nrf_i2s_align_t.nrf_i2s_align_left (c enumerator)": [[61, "c.nrf_i2s_align_t.NRF_I2S_ALIGN_LEFT"]], "nrf_i2s_align_t.nrf_i2s_align_right (c enumerator)": [[61, "c.nrf_i2s_align_t.NRF_I2S_ALIGN_RIGHT"]], "nrf_i2s_channels_t (c enum)": [[61, "c.nrf_i2s_channels_t"]], "nrf_i2s_channels_t.nrf_i2s_channels_left (c enumerator)": [[61, "c.nrf_i2s_channels_t.NRF_I2S_CHANNELS_LEFT"]], "nrf_i2s_channels_t.nrf_i2s_channels_right (c enumerator)": [[61, "c.nrf_i2s_channels_t.NRF_I2S_CHANNELS_RIGHT"]], "nrf_i2s_channels_t.nrf_i2s_channels_stereo (c enumerator)": [[61, "c.nrf_i2s_channels_t.NRF_I2S_CHANNELS_STEREO"]], "nrf_i2s_clk_configure (c function)": [[61, "c.nrf_i2s_clk_configure"]], "nrf_i2s_clksrc_t (c enum)": [[61, "c.nrf_i2s_clksrc_t"]], "nrf_i2s_clksrc_t.nrf_i2s_clksrc_aclk (c enumerator)": [[61, "c.nrf_i2s_clksrc_t.NRF_I2S_CLKSRC_ACLK"]], "nrf_i2s_clksrc_t.nrf_i2s_clksrc_pclk32m (c enumerator)": [[61, "c.nrf_i2s_clksrc_t.NRF_I2S_CLKSRC_PCLK32M"]], "nrf_i2s_config_t (c struct)": [[61, "c.nrf_i2s_config_t"]], "nrf_i2s_config_t.alignment (c var)": [[61, "c.nrf_i2s_config_t.alignment"]], "nrf_i2s_config_t.channels (c var)": [[61, "c.nrf_i2s_config_t.channels"]], "nrf_i2s_config_t.format (c var)": [[61, "c.nrf_i2s_config_t.format"]], "nrf_i2s_config_t.mck_setup (c var)": [[61, "c.nrf_i2s_config_t.mck_setup"]], "nrf_i2s_config_t.mode (c var)": [[61, "c.nrf_i2s_config_t.mode"]], "nrf_i2s_config_t.ratio (c var)": [[61, "c.nrf_i2s_config_t.ratio"]], "nrf_i2s_config_t.sample_width (c var)": [[61, "c.nrf_i2s_config_t.sample_width"]], "nrf_i2s_configure (c function)": [[61, "c.nrf_i2s_configure"]], "nrf_i2s_disable (c function)": [[61, "c.nrf_i2s_disable"]], "nrf_i2s_enable (c function)": [[61, "c.nrf_i2s_enable"]], "nrf_i2s_event_address_get (c function)": [[61, "c.nrf_i2s_event_address_get"]], "nrf_i2s_event_check (c function)": [[61, "c.nrf_i2s_event_check"]], "nrf_i2s_event_clear (c function)": [[61, "c.nrf_i2s_event_clear"]], "nrf_i2s_event_t (c enum)": [[61, "c.nrf_i2s_event_t"]], "nrf_i2s_event_t.nrf_i2s_event_framestart (c enumerator)": [[61, "c.nrf_i2s_event_t.NRF_I2S_EVENT_FRAMESTART"]], "nrf_i2s_event_t.nrf_i2s_event_rxptrupd (c enumerator)": [[61, "c.nrf_i2s_event_t.NRF_I2S_EVENT_RXPTRUPD"]], "nrf_i2s_event_t.nrf_i2s_event_stopped (c enumerator)": [[61, "c.nrf_i2s_event_t.NRF_I2S_EVENT_STOPPED"]], "nrf_i2s_event_t.nrf_i2s_event_txptrupd (c enumerator)": [[61, "c.nrf_i2s_event_t.NRF_I2S_EVENT_TXPTRUPD"]], "nrf_i2s_format_t (c enum)": [[61, "c.nrf_i2s_format_t"]], "nrf_i2s_format_t.nrf_i2s_format_aligned (c enumerator)": [[61, "c.nrf_i2s_format_t.NRF_I2S_FORMAT_ALIGNED"]], "nrf_i2s_format_t.nrf_i2s_format_i2s (c enumerator)": [[61, "c.nrf_i2s_format_t.NRF_I2S_FORMAT_I2S"]], "nrf_i2s_int_disable (c function)": [[61, "c.nrf_i2s_int_disable"]], "nrf_i2s_int_enable (c function)": [[61, "c.nrf_i2s_int_enable"]], "nrf_i2s_int_enable_check (c function)": [[61, "c.nrf_i2s_int_enable_check"]], "nrf_i2s_int_mask_t (c enum)": [[61, "c.nrf_i2s_int_mask_t"]], "nrf_i2s_int_mask_t.nrf_i2s_int_framestart_mask (c enumerator)": [[61, "c.nrf_i2s_int_mask_t.NRF_I2S_INT_FRAMESTART_MASK"]], "nrf_i2s_int_mask_t.nrf_i2s_int_rxptrupd_mask (c enumerator)": [[61, "c.nrf_i2s_int_mask_t.NRF_I2S_INT_RXPTRUPD_MASK"]], "nrf_i2s_int_mask_t.nrf_i2s_int_stopped_mask (c enumerator)": [[61, "c.nrf_i2s_int_mask_t.NRF_I2S_INT_STOPPED_MASK"]], "nrf_i2s_int_mask_t.nrf_i2s_int_txptrupd_mask (c enumerator)": [[61, "c.nrf_i2s_int_mask_t.NRF_I2S_INT_TXPTRUPD_MASK"]], "nrf_i2s_lrck_pin_get (c function)": [[61, "c.nrf_i2s_lrck_pin_get"]], "nrf_i2s_mck_pin_get (c function)": [[61, "c.nrf_i2s_mck_pin_get"]], "nrf_i2s_mck_t (c enum)": [[61, "c.nrf_i2s_mck_t"]], "nrf_i2s_mck_t.nrf_i2s_mck_32mdiv10 (c enumerator)": [[61, "c.nrf_i2s_mck_t.NRF_I2S_MCK_32MDIV10"]], "nrf_i2s_mck_t.nrf_i2s_mck_32mdiv11 (c enumerator)": [[61, "c.nrf_i2s_mck_t.NRF_I2S_MCK_32MDIV11"]], "nrf_i2s_mck_t.nrf_i2s_mck_32mdiv125 (c enumerator)": [[61, "c.nrf_i2s_mck_t.NRF_I2S_MCK_32MDIV125"]], "nrf_i2s_mck_t.nrf_i2s_mck_32mdiv15 (c enumerator)": [[61, "c.nrf_i2s_mck_t.NRF_I2S_MCK_32MDIV15"]], "nrf_i2s_mck_t.nrf_i2s_mck_32mdiv16 (c enumerator)": [[61, "c.nrf_i2s_mck_t.NRF_I2S_MCK_32MDIV16"]], "nrf_i2s_mck_t.nrf_i2s_mck_32mdiv2 (c enumerator)": [[61, "c.nrf_i2s_mck_t.NRF_I2S_MCK_32MDIV2"]], "nrf_i2s_mck_t.nrf_i2s_mck_32mdiv21 (c enumerator)": [[61, "c.nrf_i2s_mck_t.NRF_I2S_MCK_32MDIV21"]], "nrf_i2s_mck_t.nrf_i2s_mck_32mdiv23 (c enumerator)": [[61, "c.nrf_i2s_mck_t.NRF_I2S_MCK_32MDIV23"]], "nrf_i2s_mck_t.nrf_i2s_mck_32mdiv3 (c enumerator)": [[61, "c.nrf_i2s_mck_t.NRF_I2S_MCK_32MDIV3"]], "nrf_i2s_mck_t.nrf_i2s_mck_32mdiv30 (c enumerator)": [[61, "c.nrf_i2s_mck_t.NRF_I2S_MCK_32MDIV30"]], "nrf_i2s_mck_t.nrf_i2s_mck_32mdiv31 (c enumerator)": [[61, "c.nrf_i2s_mck_t.NRF_I2S_MCK_32MDIV31"]], "nrf_i2s_mck_t.nrf_i2s_mck_32mdiv32 (c enumerator)": [[61, "c.nrf_i2s_mck_t.NRF_I2S_MCK_32MDIV32"]], "nrf_i2s_mck_t.nrf_i2s_mck_32mdiv4 (c enumerator)": [[61, "c.nrf_i2s_mck_t.NRF_I2S_MCK_32MDIV4"]], "nrf_i2s_mck_t.nrf_i2s_mck_32mdiv42 (c enumerator)": [[61, "c.nrf_i2s_mck_t.NRF_I2S_MCK_32MDIV42"]], "nrf_i2s_mck_t.nrf_i2s_mck_32mdiv5 (c enumerator)": [[61, "c.nrf_i2s_mck_t.NRF_I2S_MCK_32MDIV5"]], "nrf_i2s_mck_t.nrf_i2s_mck_32mdiv6 (c enumerator)": [[61, "c.nrf_i2s_mck_t.NRF_I2S_MCK_32MDIV6"]], "nrf_i2s_mck_t.nrf_i2s_mck_32mdiv63 (c enumerator)": [[61, "c.nrf_i2s_mck_t.NRF_I2S_MCK_32MDIV63"]], "nrf_i2s_mck_t.nrf_i2s_mck_32mdiv8 (c enumerator)": [[61, "c.nrf_i2s_mck_t.NRF_I2S_MCK_32MDIV8"]], "nrf_i2s_mck_t.nrf_i2s_mck_disabled (c enumerator)": [[61, "c.nrf_i2s_mck_t.NRF_I2S_MCK_DISABLED"]], "nrf_i2s_mode_t (c enum)": [[61, "c.nrf_i2s_mode_t"]], "nrf_i2s_mode_t.nrf_i2s_mode_master (c enumerator)": [[61, "c.nrf_i2s_mode_t.NRF_I2S_MODE_MASTER"]], "nrf_i2s_mode_t.nrf_i2s_mode_slave (c enumerator)": [[61, "c.nrf_i2s_mode_t.NRF_I2S_MODE_SLAVE"]], "nrf_i2s_pins_set (c function)": [[61, "c.nrf_i2s_pins_set"]], "nrf_i2s_pins_t (c struct)": [[61, "c.nrf_i2s_pins_t"]], "nrf_i2s_pins_t.lrck_pin (c var)": [[61, "c.nrf_i2s_pins_t.lrck_pin"]], "nrf_i2s_pins_t.mck_pin (c var)": [[61, "c.nrf_i2s_pins_t.mck_pin"]], "nrf_i2s_pins_t.sck_pin (c var)": [[61, "c.nrf_i2s_pins_t.sck_pin"]], "nrf_i2s_pins_t.sdin_pin (c var)": [[61, "c.nrf_i2s_pins_t.sdin_pin"]], "nrf_i2s_pins_t.sdout_pin (c var)": [[61, "c.nrf_i2s_pins_t.sdout_pin"]], "nrf_i2s_publish_clear (c function)": [[61, "c.nrf_i2s_publish_clear"]], "nrf_i2s_publish_set (c function)": [[61, "c.nrf_i2s_publish_set"]], "nrf_i2s_ratio_t (c enum)": [[61, "c.nrf_i2s_ratio_t"]], "nrf_i2s_ratio_t.nrf_i2s_ratio_128x (c enumerator)": [[61, "c.nrf_i2s_ratio_t.NRF_I2S_RATIO_128X"]], "nrf_i2s_ratio_t.nrf_i2s_ratio_192x (c enumerator)": [[61, "c.nrf_i2s_ratio_t.NRF_I2S_RATIO_192X"]], "nrf_i2s_ratio_t.nrf_i2s_ratio_256x (c enumerator)": [[61, "c.nrf_i2s_ratio_t.NRF_I2S_RATIO_256X"]], "nrf_i2s_ratio_t.nrf_i2s_ratio_32x (c enumerator)": [[61, "c.nrf_i2s_ratio_t.NRF_I2S_RATIO_32X"]], "nrf_i2s_ratio_t.nrf_i2s_ratio_384x (c enumerator)": [[61, "c.nrf_i2s_ratio_t.NRF_I2S_RATIO_384X"]], "nrf_i2s_ratio_t.nrf_i2s_ratio_48x (c enumerator)": [[61, "c.nrf_i2s_ratio_t.NRF_I2S_RATIO_48X"]], "nrf_i2s_ratio_t.nrf_i2s_ratio_512x (c enumerator)": [[61, "c.nrf_i2s_ratio_t.NRF_I2S_RATIO_512X"]], "nrf_i2s_ratio_t.nrf_i2s_ratio_64x (c enumerator)": [[61, "c.nrf_i2s_ratio_t.NRF_I2S_RATIO_64X"]], "nrf_i2s_ratio_t.nrf_i2s_ratio_96x (c enumerator)": [[61, "c.nrf_i2s_ratio_t.NRF_I2S_RATIO_96X"]], "nrf_i2s_rx_buffer_get (c function)": [[61, "c.nrf_i2s_rx_buffer_get"]], "nrf_i2s_rx_buffer_set (c function)": [[61, "c.nrf_i2s_rx_buffer_set"]], "nrf_i2s_sck_pin_get (c function)": [[61, "c.nrf_i2s_sck_pin_get"]], "nrf_i2s_sdin_pin_get (c function)": [[61, "c.nrf_i2s_sdin_pin_get"]], "nrf_i2s_sdout_pin_get (c function)": [[61, "c.nrf_i2s_sdout_pin_get"]], "nrf_i2s_subscribe_clear (c function)": [[61, "c.nrf_i2s_subscribe_clear"]], "nrf_i2s_subscribe_set (c function)": [[61, "c.nrf_i2s_subscribe_set"]], "nrf_i2s_swidth_t (c enum)": [[61, "c.nrf_i2s_swidth_t"]], "nrf_i2s_swidth_t.nrf_i2s_swidth_16bit (c enumerator)": [[61, "c.nrf_i2s_swidth_t.NRF_I2S_SWIDTH_16BIT"]], "nrf_i2s_swidth_t.nrf_i2s_swidth_16bit_in32bit (c enumerator)": [[61, "c.nrf_i2s_swidth_t.NRF_I2S_SWIDTH_16BIT_IN32BIT"]], "nrf_i2s_swidth_t.nrf_i2s_swidth_24bit (c enumerator)": [[61, "c.nrf_i2s_swidth_t.NRF_I2S_SWIDTH_24BIT"]], "nrf_i2s_swidth_t.nrf_i2s_swidth_24bit_in32bit (c enumerator)": [[61, "c.nrf_i2s_swidth_t.NRF_I2S_SWIDTH_24BIT_IN32BIT"]], "nrf_i2s_swidth_t.nrf_i2s_swidth_32bit (c enumerator)": [[61, "c.nrf_i2s_swidth_t.NRF_I2S_SWIDTH_32BIT"]], "nrf_i2s_swidth_t.nrf_i2s_swidth_8bit (c enumerator)": [[61, "c.nrf_i2s_swidth_t.NRF_I2S_SWIDTH_8BIT"]], "nrf_i2s_swidth_t.nrf_i2s_swidth_8bit_in16bit (c enumerator)": [[61, "c.nrf_i2s_swidth_t.NRF_I2S_SWIDTH_8BIT_IN16BIT"]], "nrf_i2s_swidth_t.nrf_i2s_swidth_8bit_in32bit (c enumerator)": [[61, "c.nrf_i2s_swidth_t.NRF_I2S_SWIDTH_8BIT_IN32BIT"]], "nrf_i2s_task_address_get (c function)": [[61, "c.nrf_i2s_task_address_get"]], "nrf_i2s_task_t (c enum)": [[61, "c.nrf_i2s_task_t"]], "nrf_i2s_task_t.nrf_i2s_task_start (c enumerator)": [[61, "c.nrf_i2s_task_t.NRF_I2S_TASK_START"]], "nrf_i2s_task_t.nrf_i2s_task_stop (c enumerator)": [[61, "c.nrf_i2s_task_t.NRF_I2S_TASK_STOP"]], "nrf_i2s_task_trigger (c function)": [[61, "c.nrf_i2s_task_trigger"]], "nrf_i2s_transfer_set (c function)": [[61, "c.nrf_i2s_transfer_set"]], "nrf_i2s_tx_buffer_get (c function)": [[61, "c.nrf_i2s_tx_buffer_get"]], "nrf_i2s_tx_buffer_set (c function)": [[61, "c.nrf_i2s_tx_buffer_set"]], "nrfy_i2s_abort (c function)": [[62, "c.nrfy_i2s_abort"]], "nrfy_i2s_buffers_set (c function)": [[62, "c.nrfy_i2s_buffers_set"]], "nrfy_i2s_buffers_t (c struct)": [[62, "c.nrfy_i2s_buffers_t"]], "nrfy_i2s_buffers_t.p_rx_buffer (c var)": [[62, "c.nrfy_i2s_buffers_t.p_rx_buffer"]], "nrfy_i2s_buffers_t.p_tx_buffer (c var)": [[62, "c.nrfy_i2s_buffers_t.p_tx_buffer"]], "nrfy_i2s_config_t (c struct)": [[62, "c.nrfy_i2s_config_t"]], "nrfy_i2s_config_t.config (c var)": [[62, "c.nrfy_i2s_config_t.config"]], "nrfy_i2s_config_t.pins (c var)": [[62, "c.nrfy_i2s_config_t.pins"]], "nrfy_i2s_config_t.skip_psel_cfg (c var)": [[62, "c.nrfy_i2s_config_t.skip_psel_cfg"]], "nrfy_i2s_configure (c function)": [[62, "c.nrfy_i2s_configure"]], "nrfy_i2s_disable (c function)": [[62, "c.nrfy_i2s_disable"]], "nrfy_i2s_enable (c function)": [[62, "c.nrfy_i2s_enable"]], "nrfy_i2s_event_address_get (c function)": [[62, "c.nrfy_i2s_event_address_get"]], "nrfy_i2s_event_check (c function)": [[62, "c.nrfy_i2s_event_check"]], "nrfy_i2s_event_clear (c function)": [[62, "c.nrfy_i2s_event_clear"]], "nrfy_i2s_events_process (c function)": [[62, "c.nrfy_i2s_events_process"]], "nrfy_i2s_int_disable (c function)": [[62, "c.nrfy_i2s_int_disable"]], "nrfy_i2s_int_enable (c function)": [[62, "c.nrfy_i2s_int_enable"]], "nrfy_i2s_int_enable_check (c function)": [[62, "c.nrfy_i2s_int_enable_check"]], "nrfy_i2s_int_init (c function)": [[62, "c.nrfy_i2s_int_init"]], "nrfy_i2s_int_uninit (c function)": [[62, "c.nrfy_i2s_int_uninit"]], "nrfy_i2s_lrck_pin_get (c function)": [[62, "c.nrfy_i2s_lrck_pin_get"]], "nrfy_i2s_mck_pin_get (c function)": [[62, "c.nrfy_i2s_mck_pin_get"]], "nrfy_i2s_periph_configure (c function)": [[62, "c.nrfy_i2s_periph_configure"]], "nrfy_i2s_pins_get (c function)": [[62, "c.nrfy_i2s_pins_get"]], "nrfy_i2s_pins_set (c function)": [[62, "c.nrfy_i2s_pins_set"]], "nrfy_i2s_publish_clear (c function)": [[62, "c.nrfy_i2s_publish_clear"]], "nrfy_i2s_publish_set (c function)": [[62, "c.nrfy_i2s_publish_set"]], "nrfy_i2s_rx_buffer_get (c function)": [[62, "c.nrfy_i2s_rx_buffer_get"]], "nrfy_i2s_rx_buffer_set (c function)": [[62, "c.nrfy_i2s_rx_buffer_set"]], "nrfy_i2s_sck_pin_get (c function)": [[62, "c.nrfy_i2s_sck_pin_get"]], "nrfy_i2s_sdin_pin_get (c function)": [[62, "c.nrfy_i2s_sdin_pin_get"]], "nrfy_i2s_sdout_pin_get (c function)": [[62, "c.nrfy_i2s_sdout_pin_get"]], "nrfy_i2s_subscribe_clear (c function)": [[62, "c.nrfy_i2s_subscribe_clear"]], "nrfy_i2s_subscribe_set (c function)": [[62, "c.nrfy_i2s_subscribe_set"]], "nrfy_i2s_task_address_get (c function)": [[62, "c.nrfy_i2s_task_address_get"]], "nrfy_i2s_task_trigger (c function)": [[62, "c.nrfy_i2s_task_trigger"]], "nrfy_i2s_transfer_set (c function)": [[62, "c.nrfy_i2s_transfer_set"]], "nrfy_i2s_tx_buffer_get (c function)": [[62, "c.nrfy_i2s_tx_buffer_get"]], "nrfy_i2s_tx_buffer_set (c function)": [[62, "c.nrfy_i2s_tx_buffer_set"]], "nrfy_i2s_xfer_desc_t (c struct)": [[62, "c.nrfy_i2s_xfer_desc_t"]], "nrfy_i2s_xfer_desc_t.buffer_size (c var)": [[62, "c.nrfy_i2s_xfer_desc_t.buffer_size"]], "nrfy_i2s_xfer_desc_t.p_rx_buffer (c var)": [[62, "c.nrfy_i2s_xfer_desc_t.p_rx_buffer"]], "nrfy_i2s_xfer_desc_t.p_tx_buffer (c var)": [[62, "c.nrfy_i2s_xfer_desc_t.p_tx_buffer"]], "nrfy_i2s_xfer_start (c function)": [[62, "c.nrfy_i2s_xfer_start"]], "nrfx_ipc_config_load (c function)": [[66, "c.nrfx_ipc_config_load"]], "nrfx_ipc_config_t (c struct)": [[66, "c.nrfx_ipc_config_t"]], "nrfx_ipc_config_t.receive_event_config (c var)": [[66, "c.nrfx_ipc_config_t.receive_event_config"]], "nrfx_ipc_config_t.receive_events_enabled (c var)": [[66, "c.nrfx_ipc_config_t.receive_events_enabled"]], "nrfx_ipc_config_t.send_task_config (c var)": [[66, "c.nrfx_ipc_config_t.send_task_config"]], "nrfx_ipc_gpmem_get (c function)": [[66, "c.nrfx_ipc_gpmem_get"]], "nrfx_ipc_gpmem_set (c function)": [[66, "c.nrfx_ipc_gpmem_set"]], "nrfx_ipc_handler_t (c type)": [[66, "c.nrfx_ipc_handler_t"]], "nrfx_ipc_init (c function)": [[66, "c.nrfx_ipc_init"]], "nrfx_ipc_init_check (c function)": [[66, "c.nrfx_ipc_init_check"]], "nrfx_ipc_receive_config_set (c function)": [[66, "c.nrfx_ipc_receive_config_set"]], "nrfx_ipc_receive_event_channel_assign (c function)": [[66, "c.nrfx_ipc_receive_event_channel_assign"]], "nrfx_ipc_receive_event_disable (c function)": [[66, "c.nrfx_ipc_receive_event_disable"]], "nrfx_ipc_receive_event_enable (c function)": [[66, "c.nrfx_ipc_receive_event_enable"]], "nrfx_ipc_receive_event_group_disable (c function)": [[66, "c.nrfx_ipc_receive_event_group_disable"]], "nrfx_ipc_receive_event_group_enable (c function)": [[66, "c.nrfx_ipc_receive_event_group_enable"]], "nrfx_ipc_send_config_set (c function)": [[66, "c.nrfx_ipc_send_config_set"]], "nrfx_ipc_send_task_channel_assign (c function)": [[66, "c.nrfx_ipc_send_task_channel_assign"]], "nrfx_ipc_signal (c function)": [[66, "c.nrfx_ipc_signal"]], "nrfx_ipc_uninit (c function)": [[66, "c.nrfx_ipc_uninit"]], "nrf_ipc_channel_t (c enum)": [[67, "c.nrf_ipc_channel_t"]], "nrf_ipc_channel_t.nrf_ipc_channel_0 (c enumerator)": [[67, "c.nrf_ipc_channel_t.NRF_IPC_CHANNEL_0"]], "nrf_ipc_channel_t.nrf_ipc_channel_1 (c enumerator)": [[67, "c.nrf_ipc_channel_t.NRF_IPC_CHANNEL_1"]], "nrf_ipc_channel_t.nrf_ipc_channel_10 (c enumerator)": [[67, "c.nrf_ipc_channel_t.NRF_IPC_CHANNEL_10"]], "nrf_ipc_channel_t.nrf_ipc_channel_11 (c enumerator)": [[67, "c.nrf_ipc_channel_t.NRF_IPC_CHANNEL_11"]], "nrf_ipc_channel_t.nrf_ipc_channel_12 (c enumerator)": [[67, "c.nrf_ipc_channel_t.NRF_IPC_CHANNEL_12"]], "nrf_ipc_channel_t.nrf_ipc_channel_13 (c enumerator)": [[67, "c.nrf_ipc_channel_t.NRF_IPC_CHANNEL_13"]], "nrf_ipc_channel_t.nrf_ipc_channel_14 (c enumerator)": [[67, "c.nrf_ipc_channel_t.NRF_IPC_CHANNEL_14"]], "nrf_ipc_channel_t.nrf_ipc_channel_15 (c enumerator)": [[67, "c.nrf_ipc_channel_t.NRF_IPC_CHANNEL_15"]], "nrf_ipc_channel_t.nrf_ipc_channel_2 (c enumerator)": [[67, "c.nrf_ipc_channel_t.NRF_IPC_CHANNEL_2"]], "nrf_ipc_channel_t.nrf_ipc_channel_3 (c enumerator)": [[67, "c.nrf_ipc_channel_t.NRF_IPC_CHANNEL_3"]], "nrf_ipc_channel_t.nrf_ipc_channel_4 (c enumerator)": [[67, "c.nrf_ipc_channel_t.NRF_IPC_CHANNEL_4"]], "nrf_ipc_channel_t.nrf_ipc_channel_5 (c enumerator)": [[67, "c.nrf_ipc_channel_t.NRF_IPC_CHANNEL_5"]], "nrf_ipc_channel_t.nrf_ipc_channel_6 (c enumerator)": [[67, "c.nrf_ipc_channel_t.NRF_IPC_CHANNEL_6"]], "nrf_ipc_channel_t.nrf_ipc_channel_7 (c enumerator)": [[67, "c.nrf_ipc_channel_t.NRF_IPC_CHANNEL_7"]], "nrf_ipc_channel_t.nrf_ipc_channel_8 (c enumerator)": [[67, "c.nrf_ipc_channel_t.NRF_IPC_CHANNEL_8"]], "nrf_ipc_channel_t.nrf_ipc_channel_9 (c enumerator)": [[67, "c.nrf_ipc_channel_t.NRF_IPC_CHANNEL_9"]], "nrf_ipc_event_address_get (c function)": [[67, "c.nrf_ipc_event_address_get"]], "nrf_ipc_event_check (c function)": [[67, "c.nrf_ipc_event_check"]], "nrf_ipc_event_clear (c function)": [[67, "c.nrf_ipc_event_clear"]], "nrf_ipc_event_t (c enum)": [[67, "c.nrf_ipc_event_t"]], "nrf_ipc_event_t.nrf_ipc_event_receive_0 (c enumerator)": [[67, "c.nrf_ipc_event_t.NRF_IPC_EVENT_RECEIVE_0"]], "nrf_ipc_event_t.nrf_ipc_event_receive_1 (c enumerator)": [[67, "c.nrf_ipc_event_t.NRF_IPC_EVENT_RECEIVE_1"]], "nrf_ipc_event_t.nrf_ipc_event_receive_10 (c enumerator)": [[67, "c.nrf_ipc_event_t.NRF_IPC_EVENT_RECEIVE_10"]], "nrf_ipc_event_t.nrf_ipc_event_receive_11 (c enumerator)": [[67, "c.nrf_ipc_event_t.NRF_IPC_EVENT_RECEIVE_11"]], "nrf_ipc_event_t.nrf_ipc_event_receive_12 (c enumerator)": [[67, "c.nrf_ipc_event_t.NRF_IPC_EVENT_RECEIVE_12"]], "nrf_ipc_event_t.nrf_ipc_event_receive_13 (c enumerator)": [[67, "c.nrf_ipc_event_t.NRF_IPC_EVENT_RECEIVE_13"]], "nrf_ipc_event_t.nrf_ipc_event_receive_14 (c enumerator)": [[67, "c.nrf_ipc_event_t.NRF_IPC_EVENT_RECEIVE_14"]], "nrf_ipc_event_t.nrf_ipc_event_receive_15 (c enumerator)": [[67, "c.nrf_ipc_event_t.NRF_IPC_EVENT_RECEIVE_15"]], "nrf_ipc_event_t.nrf_ipc_event_receive_2 (c enumerator)": [[67, "c.nrf_ipc_event_t.NRF_IPC_EVENT_RECEIVE_2"]], "nrf_ipc_event_t.nrf_ipc_event_receive_3 (c enumerator)": [[67, "c.nrf_ipc_event_t.NRF_IPC_EVENT_RECEIVE_3"]], "nrf_ipc_event_t.nrf_ipc_event_receive_4 (c enumerator)": [[67, "c.nrf_ipc_event_t.NRF_IPC_EVENT_RECEIVE_4"]], "nrf_ipc_event_t.nrf_ipc_event_receive_5 (c enumerator)": [[67, "c.nrf_ipc_event_t.NRF_IPC_EVENT_RECEIVE_5"]], "nrf_ipc_event_t.nrf_ipc_event_receive_6 (c enumerator)": [[67, "c.nrf_ipc_event_t.NRF_IPC_EVENT_RECEIVE_6"]], "nrf_ipc_event_t.nrf_ipc_event_receive_7 (c enumerator)": [[67, "c.nrf_ipc_event_t.NRF_IPC_EVENT_RECEIVE_7"]], "nrf_ipc_event_t.nrf_ipc_event_receive_8 (c enumerator)": [[67, "c.nrf_ipc_event_t.NRF_IPC_EVENT_RECEIVE_8"]], "nrf_ipc_event_t.nrf_ipc_event_receive_9 (c enumerator)": [[67, "c.nrf_ipc_event_t.NRF_IPC_EVENT_RECEIVE_9"]], "nrf_ipc_gpmem_get (c function)": [[67, "c.nrf_ipc_gpmem_get"]], "nrf_ipc_gpmem_set (c function)": [[67, "c.nrf_ipc_gpmem_set"]], "nrf_ipc_int_disable (c function)": [[67, "c.nrf_ipc_int_disable"]], "nrf_ipc_int_enable (c function)": [[67, "c.nrf_ipc_int_enable"]], "nrf_ipc_int_enable_check (c function)": [[67, "c.nrf_ipc_int_enable_check"]], "nrf_ipc_int_mask_t (c enum)": [[67, "c.nrf_ipc_int_mask_t"]], "nrf_ipc_int_mask_t.nrf_ipc_int_receive_0 (c enumerator)": [[67, "c.nrf_ipc_int_mask_t.NRF_IPC_INT_RECEIVE_0"]], "nrf_ipc_int_mask_t.nrf_ipc_int_receive_1 (c enumerator)": [[67, "c.nrf_ipc_int_mask_t.NRF_IPC_INT_RECEIVE_1"]], "nrf_ipc_int_mask_t.nrf_ipc_int_receive_10 (c enumerator)": [[67, "c.nrf_ipc_int_mask_t.NRF_IPC_INT_RECEIVE_10"]], "nrf_ipc_int_mask_t.nrf_ipc_int_receive_11 (c enumerator)": [[67, "c.nrf_ipc_int_mask_t.NRF_IPC_INT_RECEIVE_11"]], "nrf_ipc_int_mask_t.nrf_ipc_int_receive_12 (c enumerator)": [[67, "c.nrf_ipc_int_mask_t.NRF_IPC_INT_RECEIVE_12"]], "nrf_ipc_int_mask_t.nrf_ipc_int_receive_13 (c enumerator)": [[67, "c.nrf_ipc_int_mask_t.NRF_IPC_INT_RECEIVE_13"]], "nrf_ipc_int_mask_t.nrf_ipc_int_receive_14 (c enumerator)": [[67, "c.nrf_ipc_int_mask_t.NRF_IPC_INT_RECEIVE_14"]], "nrf_ipc_int_mask_t.nrf_ipc_int_receive_15 (c enumerator)": [[67, "c.nrf_ipc_int_mask_t.NRF_IPC_INT_RECEIVE_15"]], "nrf_ipc_int_mask_t.nrf_ipc_int_receive_2 (c enumerator)": [[67, "c.nrf_ipc_int_mask_t.NRF_IPC_INT_RECEIVE_2"]], "nrf_ipc_int_mask_t.nrf_ipc_int_receive_3 (c enumerator)": [[67, "c.nrf_ipc_int_mask_t.NRF_IPC_INT_RECEIVE_3"]], "nrf_ipc_int_mask_t.nrf_ipc_int_receive_4 (c enumerator)": [[67, "c.nrf_ipc_int_mask_t.NRF_IPC_INT_RECEIVE_4"]], "nrf_ipc_int_mask_t.nrf_ipc_int_receive_5 (c enumerator)": [[67, "c.nrf_ipc_int_mask_t.NRF_IPC_INT_RECEIVE_5"]], "nrf_ipc_int_mask_t.nrf_ipc_int_receive_6 (c enumerator)": [[67, "c.nrf_ipc_int_mask_t.NRF_IPC_INT_RECEIVE_6"]], "nrf_ipc_int_mask_t.nrf_ipc_int_receive_7 (c enumerator)": [[67, "c.nrf_ipc_int_mask_t.NRF_IPC_INT_RECEIVE_7"]], "nrf_ipc_int_mask_t.nrf_ipc_int_receive_8 (c enumerator)": [[67, "c.nrf_ipc_int_mask_t.NRF_IPC_INT_RECEIVE_8"]], "nrf_ipc_int_mask_t.nrf_ipc_int_receive_9 (c enumerator)": [[67, "c.nrf_ipc_int_mask_t.NRF_IPC_INT_RECEIVE_9"]], "nrf_ipc_int_pending_get (c function)": [[67, "c.nrf_ipc_int_pending_get"]], "nrf_ipc_publish_clear (c function)": [[67, "c.nrf_ipc_publish_clear"]], "nrf_ipc_publish_set (c function)": [[67, "c.nrf_ipc_publish_set"]], "nrf_ipc_receive_config_get (c function)": [[67, "c.nrf_ipc_receive_config_get"]], "nrf_ipc_receive_config_set (c function)": [[67, "c.nrf_ipc_receive_config_set"]], "nrf_ipc_receive_event_get (c function)": [[67, "c.nrf_ipc_receive_event_get"]], "nrf_ipc_send_config_get (c function)": [[67, "c.nrf_ipc_send_config_get"]], "nrf_ipc_send_config_set (c function)": [[67, "c.nrf_ipc_send_config_set"]], "nrf_ipc_send_task_get (c function)": [[67, "c.nrf_ipc_send_task_get"]], "nrf_ipc_subscribe_clear (c function)": [[67, "c.nrf_ipc_subscribe_clear"]], "nrf_ipc_subscribe_set (c function)": [[67, "c.nrf_ipc_subscribe_set"]], "nrf_ipc_task_address_get (c function)": [[67, "c.nrf_ipc_task_address_get"]], "nrf_ipc_task_t (c enum)": [[67, "c.nrf_ipc_task_t"]], "nrf_ipc_task_t.nrf_ipc_task_send_0 (c enumerator)": [[67, "c.nrf_ipc_task_t.NRF_IPC_TASK_SEND_0"]], "nrf_ipc_task_t.nrf_ipc_task_send_1 (c enumerator)": [[67, "c.nrf_ipc_task_t.NRF_IPC_TASK_SEND_1"]], "nrf_ipc_task_t.nrf_ipc_task_send_10 (c enumerator)": [[67, "c.nrf_ipc_task_t.NRF_IPC_TASK_SEND_10"]], "nrf_ipc_task_t.nrf_ipc_task_send_11 (c enumerator)": [[67, "c.nrf_ipc_task_t.NRF_IPC_TASK_SEND_11"]], "nrf_ipc_task_t.nrf_ipc_task_send_12 (c enumerator)": [[67, "c.nrf_ipc_task_t.NRF_IPC_TASK_SEND_12"]], "nrf_ipc_task_t.nrf_ipc_task_send_13 (c enumerator)": [[67, "c.nrf_ipc_task_t.NRF_IPC_TASK_SEND_13"]], "nrf_ipc_task_t.nrf_ipc_task_send_14 (c enumerator)": [[67, "c.nrf_ipc_task_t.NRF_IPC_TASK_SEND_14"]], "nrf_ipc_task_t.nrf_ipc_task_send_15 (c enumerator)": [[67, "c.nrf_ipc_task_t.NRF_IPC_TASK_SEND_15"]], "nrf_ipc_task_t.nrf_ipc_task_send_2 (c enumerator)": [[67, "c.nrf_ipc_task_t.NRF_IPC_TASK_SEND_2"]], "nrf_ipc_task_t.nrf_ipc_task_send_3 (c enumerator)": [[67, "c.nrf_ipc_task_t.NRF_IPC_TASK_SEND_3"]], "nrf_ipc_task_t.nrf_ipc_task_send_4 (c enumerator)": [[67, "c.nrf_ipc_task_t.NRF_IPC_TASK_SEND_4"]], "nrf_ipc_task_t.nrf_ipc_task_send_5 (c enumerator)": [[67, "c.nrf_ipc_task_t.NRF_IPC_TASK_SEND_5"]], "nrf_ipc_task_t.nrf_ipc_task_send_6 (c enumerator)": [[67, "c.nrf_ipc_task_t.NRF_IPC_TASK_SEND_6"]], "nrf_ipc_task_t.nrf_ipc_task_send_7 (c enumerator)": [[67, "c.nrf_ipc_task_t.NRF_IPC_TASK_SEND_7"]], "nrf_ipc_task_t.nrf_ipc_task_send_8 (c enumerator)": [[67, "c.nrf_ipc_task_t.NRF_IPC_TASK_SEND_8"]], "nrf_ipc_task_t.nrf_ipc_task_send_9 (c enumerator)": [[67, "c.nrf_ipc_task_t.NRF_IPC_TASK_SEND_9"]], "nrf_ipc_task_trigger (c function)": [[67, "c.nrf_ipc_task_trigger"]], "nrf_ipct_has_ack (c macro)": [[69, "c.NRF_IPCT_HAS_ACK"]], "nrf_ipct_tasks_send_count (c macro)": [[69, "c.NRF_IPCT_TASKS_SEND_COUNT"]], "nrf_ipct_ack_task_get (c function)": [[69, "c.nrf_ipct_ack_task_get"]], "nrf_ipct_acked_event_get (c function)": [[69, "c.nrf_ipct_acked_event_get"]], "nrf_ipct_event_address_get (c function)": [[69, "c.nrf_ipct_event_address_get"]], "nrf_ipct_event_check (c function)": [[69, "c.nrf_ipct_event_check"]], "nrf_ipct_event_clear (c function)": [[69, "c.nrf_ipct_event_clear"]], "nrf_ipct_event_t (c enum)": [[69, "c.nrf_ipct_event_t"]], "nrf_ipct_event_t.nrf_ipct_event_acked_0 (c enumerator)": [[69, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_ACKED_0"]], "nrf_ipct_event_t.nrf_ipct_event_acked_1 (c enumerator)": [[69, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_ACKED_1"]], "nrf_ipct_event_t.nrf_ipct_event_acked_10 (c enumerator)": [[69, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_ACKED_10"]], "nrf_ipct_event_t.nrf_ipct_event_acked_11 (c enumerator)": [[69, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_ACKED_11"]], "nrf_ipct_event_t.nrf_ipct_event_acked_12 (c enumerator)": [[69, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_ACKED_12"]], "nrf_ipct_event_t.nrf_ipct_event_acked_13 (c enumerator)": [[69, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_ACKED_13"]], "nrf_ipct_event_t.nrf_ipct_event_acked_14 (c enumerator)": [[69, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_ACKED_14"]], "nrf_ipct_event_t.nrf_ipct_event_acked_15 (c enumerator)": [[69, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_ACKED_15"]], "nrf_ipct_event_t.nrf_ipct_event_acked_2 (c enumerator)": [[69, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_ACKED_2"]], "nrf_ipct_event_t.nrf_ipct_event_acked_3 (c enumerator)": [[69, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_ACKED_3"]], "nrf_ipct_event_t.nrf_ipct_event_acked_4 (c enumerator)": [[69, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_ACKED_4"]], "nrf_ipct_event_t.nrf_ipct_event_acked_5 (c enumerator)": [[69, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_ACKED_5"]], "nrf_ipct_event_t.nrf_ipct_event_acked_6 (c enumerator)": [[69, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_ACKED_6"]], "nrf_ipct_event_t.nrf_ipct_event_acked_7 (c enumerator)": [[69, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_ACKED_7"]], "nrf_ipct_event_t.nrf_ipct_event_acked_8 (c enumerator)": [[69, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_ACKED_8"]], "nrf_ipct_event_t.nrf_ipct_event_acked_9 (c enumerator)": [[69, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_ACKED_9"]], "nrf_ipct_event_t.nrf_ipct_event_receive_0 (c enumerator)": [[69, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_RECEIVE_0"]], "nrf_ipct_event_t.nrf_ipct_event_receive_1 (c enumerator)": [[69, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_RECEIVE_1"]], "nrf_ipct_event_t.nrf_ipct_event_receive_10 (c enumerator)": [[69, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_RECEIVE_10"]], "nrf_ipct_event_t.nrf_ipct_event_receive_11 (c enumerator)": [[69, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_RECEIVE_11"]], "nrf_ipct_event_t.nrf_ipct_event_receive_12 (c enumerator)": [[69, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_RECEIVE_12"]], "nrf_ipct_event_t.nrf_ipct_event_receive_13 (c enumerator)": [[69, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_RECEIVE_13"]], "nrf_ipct_event_t.nrf_ipct_event_receive_14 (c enumerator)": [[69, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_RECEIVE_14"]], "nrf_ipct_event_t.nrf_ipct_event_receive_15 (c enumerator)": [[69, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_RECEIVE_15"]], "nrf_ipct_event_t.nrf_ipct_event_receive_2 (c enumerator)": [[69, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_RECEIVE_2"]], "nrf_ipct_event_t.nrf_ipct_event_receive_3 (c enumerator)": [[69, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_RECEIVE_3"]], "nrf_ipct_event_t.nrf_ipct_event_receive_4 (c enumerator)": [[69, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_RECEIVE_4"]], "nrf_ipct_event_t.nrf_ipct_event_receive_5 (c enumerator)": [[69, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_RECEIVE_5"]], "nrf_ipct_event_t.nrf_ipct_event_receive_6 (c enumerator)": [[69, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_RECEIVE_6"]], "nrf_ipct_event_t.nrf_ipct_event_receive_7 (c enumerator)": [[69, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_RECEIVE_7"]], "nrf_ipct_event_t.nrf_ipct_event_receive_8 (c enumerator)": [[69, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_RECEIVE_8"]], "nrf_ipct_event_t.nrf_ipct_event_receive_9 (c enumerator)": [[69, "c.nrf_ipct_event_t.NRF_IPCT_EVENT_RECEIVE_9"]], "nrf_ipct_int_disable (c function)": [[69, "c.nrf_ipct_int_disable"]], "nrf_ipct_int_enable (c function)": [[69, "c.nrf_ipct_int_enable"]], "nrf_ipct_int_enable_check (c function)": [[69, "c.nrf_ipct_int_enable_check"]], "nrf_ipct_int_mask_t (c enum)": [[69, "c.nrf_ipct_int_mask_t"]], "nrf_ipct_int_mask_t.nrf_ipct_int_acked_0 (c enumerator)": [[69, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_ACKED_0"]], "nrf_ipct_int_mask_t.nrf_ipct_int_acked_1 (c enumerator)": [[69, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_ACKED_1"]], "nrf_ipct_int_mask_t.nrf_ipct_int_acked_10 (c enumerator)": [[69, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_ACKED_10"]], "nrf_ipct_int_mask_t.nrf_ipct_int_acked_11 (c enumerator)": [[69, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_ACKED_11"]], "nrf_ipct_int_mask_t.nrf_ipct_int_acked_12 (c enumerator)": [[69, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_ACKED_12"]], "nrf_ipct_int_mask_t.nrf_ipct_int_acked_13 (c enumerator)": [[69, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_ACKED_13"]], "nrf_ipct_int_mask_t.nrf_ipct_int_acked_14 (c enumerator)": [[69, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_ACKED_14"]], "nrf_ipct_int_mask_t.nrf_ipct_int_acked_15 (c enumerator)": [[69, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_ACKED_15"]], "nrf_ipct_int_mask_t.nrf_ipct_int_acked_2 (c enumerator)": [[69, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_ACKED_2"]], "nrf_ipct_int_mask_t.nrf_ipct_int_acked_3 (c enumerator)": [[69, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_ACKED_3"]], "nrf_ipct_int_mask_t.nrf_ipct_int_acked_4 (c enumerator)": [[69, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_ACKED_4"]], "nrf_ipct_int_mask_t.nrf_ipct_int_acked_5 (c enumerator)": [[69, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_ACKED_5"]], "nrf_ipct_int_mask_t.nrf_ipct_int_acked_6 (c enumerator)": [[69, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_ACKED_6"]], "nrf_ipct_int_mask_t.nrf_ipct_int_acked_7 (c enumerator)": [[69, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_ACKED_7"]], "nrf_ipct_int_mask_t.nrf_ipct_int_acked_8 (c enumerator)": [[69, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_ACKED_8"]], "nrf_ipct_int_mask_t.nrf_ipct_int_acked_9 (c enumerator)": [[69, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_ACKED_9"]], "nrf_ipct_int_mask_t.nrf_ipct_int_receive_0 (c enumerator)": [[69, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_RECEIVE_0"]], "nrf_ipct_int_mask_t.nrf_ipct_int_receive_1 (c enumerator)": [[69, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_RECEIVE_1"]], "nrf_ipct_int_mask_t.nrf_ipct_int_receive_10 (c enumerator)": [[69, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_RECEIVE_10"]], "nrf_ipct_int_mask_t.nrf_ipct_int_receive_11 (c enumerator)": [[69, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_RECEIVE_11"]], "nrf_ipct_int_mask_t.nrf_ipct_int_receive_12 (c enumerator)": [[69, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_RECEIVE_12"]], "nrf_ipct_int_mask_t.nrf_ipct_int_receive_13 (c enumerator)": [[69, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_RECEIVE_13"]], "nrf_ipct_int_mask_t.nrf_ipct_int_receive_14 (c enumerator)": [[69, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_RECEIVE_14"]], "nrf_ipct_int_mask_t.nrf_ipct_int_receive_15 (c enumerator)": [[69, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_RECEIVE_15"]], "nrf_ipct_int_mask_t.nrf_ipct_int_receive_2 (c enumerator)": [[69, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_RECEIVE_2"]], "nrf_ipct_int_mask_t.nrf_ipct_int_receive_3 (c enumerator)": [[69, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_RECEIVE_3"]], "nrf_ipct_int_mask_t.nrf_ipct_int_receive_4 (c enumerator)": [[69, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_RECEIVE_4"]], "nrf_ipct_int_mask_t.nrf_ipct_int_receive_5 (c enumerator)": [[69, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_RECEIVE_5"]], "nrf_ipct_int_mask_t.nrf_ipct_int_receive_6 (c enumerator)": [[69, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_RECEIVE_6"]], "nrf_ipct_int_mask_t.nrf_ipct_int_receive_7 (c enumerator)": [[69, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_RECEIVE_7"]], "nrf_ipct_int_mask_t.nrf_ipct_int_receive_8 (c enumerator)": [[69, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_RECEIVE_8"]], "nrf_ipct_int_mask_t.nrf_ipct_int_receive_9 (c enumerator)": [[69, "c.nrf_ipct_int_mask_t.NRF_IPCT_INT_RECEIVE_9"]], "nrf_ipct_int_pending_get (c function)": [[69, "c.nrf_ipct_int_pending_get"]], "nrf_ipct_overflow_send_get (c function)": [[69, "c.nrf_ipct_overflow_send_get"]], "nrf_ipct_publish_clear (c function)": [[69, "c.nrf_ipct_publish_clear"]], "nrf_ipct_publish_set (c function)": [[69, "c.nrf_ipct_publish_set"]], "nrf_ipct_receive_event_get (c function)": [[69, "c.nrf_ipct_receive_event_get"]], "nrf_ipct_send_task_get (c function)": [[69, "c.nrf_ipct_send_task_get"]], "nrf_ipct_short_mask_t (c enum)": [[69, "c.nrf_ipct_short_mask_t"]], "nrf_ipct_short_mask_t.nrf_ipct_all_shorts_mask (c enumerator)": [[69, "c.nrf_ipct_short_mask_t.NRF_IPCT_ALL_SHORTS_MASK"]], "nrf_ipct_short_mask_t.nrf_ipct_short_receive0_ack0_mask (c enumerator)": [[69, "c.nrf_ipct_short_mask_t.NRF_IPCT_SHORT_RECEIVE0_ACK0_MASK"]], "nrf_ipct_short_mask_t.nrf_ipct_short_receive10_ack10_mask (c enumerator)": [[69, "c.nrf_ipct_short_mask_t.NRF_IPCT_SHORT_RECEIVE10_ACK10_MASK"]], "nrf_ipct_short_mask_t.nrf_ipct_short_receive11_ack11_mask (c enumerator)": [[69, "c.nrf_ipct_short_mask_t.NRF_IPCT_SHORT_RECEIVE11_ACK11_MASK"]], "nrf_ipct_short_mask_t.nrf_ipct_short_receive12_ack12_mask (c enumerator)": [[69, "c.nrf_ipct_short_mask_t.NRF_IPCT_SHORT_RECEIVE12_ACK12_MASK"]], "nrf_ipct_short_mask_t.nrf_ipct_short_receive13_ack13_mask (c enumerator)": [[69, "c.nrf_ipct_short_mask_t.NRF_IPCT_SHORT_RECEIVE13_ACK13_MASK"]], "nrf_ipct_short_mask_t.nrf_ipct_short_receive14_ack14_mask (c enumerator)": [[69, "c.nrf_ipct_short_mask_t.NRF_IPCT_SHORT_RECEIVE14_ACK14_MASK"]], "nrf_ipct_short_mask_t.nrf_ipct_short_receive15_ack15_mask (c enumerator)": [[69, "c.nrf_ipct_short_mask_t.NRF_IPCT_SHORT_RECEIVE15_ACK15_MASK"]], "nrf_ipct_short_mask_t.nrf_ipct_short_receive1_ack1_mask (c enumerator)": [[69, "c.nrf_ipct_short_mask_t.NRF_IPCT_SHORT_RECEIVE1_ACK1_MASK"]], "nrf_ipct_short_mask_t.nrf_ipct_short_receive2_ack2_mask (c enumerator)": [[69, "c.nrf_ipct_short_mask_t.NRF_IPCT_SHORT_RECEIVE2_ACK2_MASK"]], "nrf_ipct_short_mask_t.nrf_ipct_short_receive3_ack3_mask (c enumerator)": [[69, "c.nrf_ipct_short_mask_t.NRF_IPCT_SHORT_RECEIVE3_ACK3_MASK"]], "nrf_ipct_short_mask_t.nrf_ipct_short_receive4_ack4_mask (c enumerator)": [[69, "c.nrf_ipct_short_mask_t.NRF_IPCT_SHORT_RECEIVE4_ACK4_MASK"]], "nrf_ipct_short_mask_t.nrf_ipct_short_receive5_ack5_mask (c enumerator)": [[69, "c.nrf_ipct_short_mask_t.NRF_IPCT_SHORT_RECEIVE5_ACK5_MASK"]], "nrf_ipct_short_mask_t.nrf_ipct_short_receive6_ack6_mask (c enumerator)": [[69, "c.nrf_ipct_short_mask_t.NRF_IPCT_SHORT_RECEIVE6_ACK6_MASK"]], "nrf_ipct_short_mask_t.nrf_ipct_short_receive7_ack7_mask (c enumerator)": [[69, "c.nrf_ipct_short_mask_t.NRF_IPCT_SHORT_RECEIVE7_ACK7_MASK"]], "nrf_ipct_short_mask_t.nrf_ipct_short_receive8_ack8_mask (c enumerator)": [[69, "c.nrf_ipct_short_mask_t.NRF_IPCT_SHORT_RECEIVE8_ACK8_MASK"]], "nrf_ipct_short_mask_t.nrf_ipct_short_receive9_ack9_mask (c enumerator)": [[69, "c.nrf_ipct_short_mask_t.NRF_IPCT_SHORT_RECEIVE9_ACK9_MASK"]], "nrf_ipct_shorts_disable (c function)": [[69, "c.nrf_ipct_shorts_disable"]], "nrf_ipct_shorts_enable (c function)": [[69, "c.nrf_ipct_shorts_enable"]], "nrf_ipct_shorts_set (c function)": [[69, "c.nrf_ipct_shorts_set"]], "nrf_ipct_subscribe_clear (c function)": [[69, "c.nrf_ipct_subscribe_clear"]], "nrf_ipct_subscribe_set (c function)": [[69, "c.nrf_ipct_subscribe_set"]], "nrf_ipct_task_address_get (c function)": [[69, "c.nrf_ipct_task_address_get"]], "nrf_ipct_task_t (c enum)": [[69, "c.nrf_ipct_task_t"]], "nrf_ipct_task_t.nrf_ipct_task_ack_0 (c enumerator)": [[69, "c.nrf_ipct_task_t.NRF_IPCT_TASK_ACK_0"]], "nrf_ipct_task_t.nrf_ipct_task_ack_1 (c enumerator)": [[69, "c.nrf_ipct_task_t.NRF_IPCT_TASK_ACK_1"]], "nrf_ipct_task_t.nrf_ipct_task_ack_10 (c enumerator)": [[69, "c.nrf_ipct_task_t.NRF_IPCT_TASK_ACK_10"]], "nrf_ipct_task_t.nrf_ipct_task_ack_11 (c enumerator)": [[69, "c.nrf_ipct_task_t.NRF_IPCT_TASK_ACK_11"]], "nrf_ipct_task_t.nrf_ipct_task_ack_12 (c enumerator)": [[69, "c.nrf_ipct_task_t.NRF_IPCT_TASK_ACK_12"]], "nrf_ipct_task_t.nrf_ipct_task_ack_13 (c enumerator)": [[69, "c.nrf_ipct_task_t.NRF_IPCT_TASK_ACK_13"]], "nrf_ipct_task_t.nrf_ipct_task_ack_14 (c enumerator)": [[69, "c.nrf_ipct_task_t.NRF_IPCT_TASK_ACK_14"]], "nrf_ipct_task_t.nrf_ipct_task_ack_15 (c enumerator)": [[69, "c.nrf_ipct_task_t.NRF_IPCT_TASK_ACK_15"]], "nrf_ipct_task_t.nrf_ipct_task_ack_2 (c enumerator)": [[69, "c.nrf_ipct_task_t.NRF_IPCT_TASK_ACK_2"]], "nrf_ipct_task_t.nrf_ipct_task_ack_3 (c enumerator)": [[69, "c.nrf_ipct_task_t.NRF_IPCT_TASK_ACK_3"]], "nrf_ipct_task_t.nrf_ipct_task_ack_4 (c enumerator)": [[69, "c.nrf_ipct_task_t.NRF_IPCT_TASK_ACK_4"]], "nrf_ipct_task_t.nrf_ipct_task_ack_5 (c enumerator)": [[69, "c.nrf_ipct_task_t.NRF_IPCT_TASK_ACK_5"]], "nrf_ipct_task_t.nrf_ipct_task_ack_6 (c enumerator)": [[69, "c.nrf_ipct_task_t.NRF_IPCT_TASK_ACK_6"]], "nrf_ipct_task_t.nrf_ipct_task_ack_7 (c enumerator)": [[69, "c.nrf_ipct_task_t.NRF_IPCT_TASK_ACK_7"]], "nrf_ipct_task_t.nrf_ipct_task_ack_8 (c enumerator)": [[69, "c.nrf_ipct_task_t.NRF_IPCT_TASK_ACK_8"]], "nrf_ipct_task_t.nrf_ipct_task_ack_9 (c enumerator)": [[69, "c.nrf_ipct_task_t.NRF_IPCT_TASK_ACK_9"]], "nrf_ipct_task_t.nrf_ipct_task_send_0 (c enumerator)": [[69, "c.nrf_ipct_task_t.NRF_IPCT_TASK_SEND_0"]], "nrf_ipct_task_t.nrf_ipct_task_send_1 (c enumerator)": [[69, "c.nrf_ipct_task_t.NRF_IPCT_TASK_SEND_1"]], "nrf_ipct_task_t.nrf_ipct_task_send_10 (c enumerator)": [[69, "c.nrf_ipct_task_t.NRF_IPCT_TASK_SEND_10"]], "nrf_ipct_task_t.nrf_ipct_task_send_11 (c enumerator)": [[69, "c.nrf_ipct_task_t.NRF_IPCT_TASK_SEND_11"]], "nrf_ipct_task_t.nrf_ipct_task_send_12 (c enumerator)": [[69, "c.nrf_ipct_task_t.NRF_IPCT_TASK_SEND_12"]], "nrf_ipct_task_t.nrf_ipct_task_send_13 (c enumerator)": [[69, "c.nrf_ipct_task_t.NRF_IPCT_TASK_SEND_13"]], "nrf_ipct_task_t.nrf_ipct_task_send_14 (c enumerator)": [[69, "c.nrf_ipct_task_t.NRF_IPCT_TASK_SEND_14"]], "nrf_ipct_task_t.nrf_ipct_task_send_15 (c enumerator)": [[69, "c.nrf_ipct_task_t.NRF_IPCT_TASK_SEND_15"]], "nrf_ipct_task_t.nrf_ipct_task_send_2 (c enumerator)": [[69, "c.nrf_ipct_task_t.NRF_IPCT_TASK_SEND_2"]], "nrf_ipct_task_t.nrf_ipct_task_send_3 (c enumerator)": [[69, "c.nrf_ipct_task_t.NRF_IPCT_TASK_SEND_3"]], "nrf_ipct_task_t.nrf_ipct_task_send_4 (c enumerator)": [[69, "c.nrf_ipct_task_t.NRF_IPCT_TASK_SEND_4"]], "nrf_ipct_task_t.nrf_ipct_task_send_5 (c enumerator)": [[69, "c.nrf_ipct_task_t.NRF_IPCT_TASK_SEND_5"]], "nrf_ipct_task_t.nrf_ipct_task_send_6 (c enumerator)": [[69, "c.nrf_ipct_task_t.NRF_IPCT_TASK_SEND_6"]], "nrf_ipct_task_t.nrf_ipct_task_send_7 (c enumerator)": [[69, "c.nrf_ipct_task_t.NRF_IPCT_TASK_SEND_7"]], "nrf_ipct_task_t.nrf_ipct_task_send_8 (c enumerator)": [[69, "c.nrf_ipct_task_t.NRF_IPCT_TASK_SEND_8"]], "nrf_ipct_task_t.nrf_ipct_task_send_9 (c enumerator)": [[69, "c.nrf_ipct_task_t.NRF_IPCT_TASK_SEND_9"]], "nrf_ipct_task_trigger (c function)": [[69, "c.nrf_ipct_task_trigger"]], "nrf_kmu_has_inten (c macro)": [[71, "c.NRF_KMU_HAS_INTEN"]], "nrf_kmu_has_metadata (c macro)": [[71, "c.NRF_KMU_HAS_METADATA"]], "nrf_kmu_has_provision (c macro)": [[71, "c.NRF_KMU_HAS_PROVISION"]], "nrf_kmu_has_push_block (c macro)": [[71, "c.NRF_KMU_HAS_PUSH_BLOCK"]], "nrf_kmu_has_read_metadata (c macro)": [[71, "c.NRF_KMU_HAS_READ_METADATA"]], "nrf_kmu_has_revoke (c macro)": [[71, "c.NRF_KMU_HAS_REVOKE"]], "nrf_kmu_has_src (c macro)": [[71, "c.NRF_KMU_HAS_SRC"]], "nrf_kmu_event_address_get (c function)": [[71, "c.nrf_kmu_event_address_get"]], "nrf_kmu_event_check (c function)": [[71, "c.nrf_kmu_event_check"]], "nrf_kmu_event_clear (c function)": [[71, "c.nrf_kmu_event_clear"]], "nrf_kmu_event_t (c enum)": [[71, "c.nrf_kmu_event_t"]], "nrf_kmu_event_t.nrf_kmu_event_events_events_metadata_read (c enumerator)": [[71, "c.nrf_kmu_event_t.NRF_KMU_EVENT_EVENTS_EVENTS_METADATA_READ"]], "nrf_kmu_event_t.nrf_kmu_event_events_events_pushblocked (c enumerator)": [[71, "c.nrf_kmu_event_t.NRF_KMU_EVENT_EVENTS_EVENTS_PUSHBLOCKED"]], "nrf_kmu_event_t.nrf_kmu_event_events_provisioned (c enumerator)": [[71, "c.nrf_kmu_event_t.NRF_KMU_EVENT_EVENTS_PROVISIONED"]], "nrf_kmu_event_t.nrf_kmu_event_keyslot_error (c enumerator)": [[71, "c.nrf_kmu_event_t.NRF_KMU_EVENT_KEYSLOT_ERROR"]], "nrf_kmu_event_t.nrf_kmu_event_keyslot_pushed (c enumerator)": [[71, "c.nrf_kmu_event_t.NRF_KMU_EVENT_KEYSLOT_PUSHED"]], "nrf_kmu_event_t.nrf_kmu_event_keyslot_revoked (c enumerator)": [[71, "c.nrf_kmu_event_t.NRF_KMU_EVENT_KEYSLOT_REVOKED"]], "nrf_kmu_int_disable (c function)": [[71, "c.nrf_kmu_int_disable"]], "nrf_kmu_int_enable (c function)": [[71, "c.nrf_kmu_int_enable"]], "nrf_kmu_int_enable_check (c function)": [[71, "c.nrf_kmu_int_enable_check"]], "nrf_kmu_int_mask_t (c enum)": [[71, "c.nrf_kmu_int_mask_t"]], "nrf_kmu_int_mask_t.nrf_kmu_int_error_mask (c enumerator)": [[71, "c.nrf_kmu_int_mask_t.NRF_KMU_INT_ERROR_MASK"]], "nrf_kmu_int_mask_t.nrf_kmu_int_pushed_mask (c enumerator)": [[71, "c.nrf_kmu_int_mask_t.NRF_KMU_INT_PUSHED_MASK"]], "nrf_kmu_int_mask_t.nrf_kmu_int_revoked_mask (c enumerator)": [[71, "c.nrf_kmu_int_mask_t.NRF_KMU_INT_REVOKED_MASK"]], "nrf_kmu_intpend_get (c function)": [[71, "c.nrf_kmu_intpend_get"]], "nrf_kmu_keyslot_get (c function)": [[71, "c.nrf_kmu_keyslot_get"]], "nrf_kmu_keyslot_set (c function)": [[71, "c.nrf_kmu_keyslot_set"]], "nrf_kmu_metadata_get (c function)": [[71, "c.nrf_kmu_metadata_get"]], "nrf_kmu_metadata_set (c function)": [[71, "c.nrf_kmu_metadata_set"]], "nrf_kmu_src_get (c function)": [[71, "c.nrf_kmu_src_get"]], "nrf_kmu_src_set (c function)": [[71, "c.nrf_kmu_src_set"]], "nrf_kmu_status_get (c function)": [[71, "c.nrf_kmu_status_get"]], "nrf_kmu_status_t (c enum)": [[71, "c.nrf_kmu_status_t"]], "nrf_kmu_status_t.nrf_kmu_status_blocked_mask (c enumerator)": [[71, "c.nrf_kmu_status_t.NRF_KMU_STATUS_BLOCKED_MASK"]], "nrf_kmu_status_t.nrf_kmu_status_busy (c enumerator)": [[71, "c.nrf_kmu_status_t.NRF_KMU_STATUS_BUSY"]], "nrf_kmu_status_t.nrf_kmu_status_ready (c enumerator)": [[71, "c.nrf_kmu_status_t.NRF_KMU_STATUS_READY"]], "nrf_kmu_status_t.nrf_kmu_status_selected_mask (c enumerator)": [[71, "c.nrf_kmu_status_t.NRF_KMU_STATUS_SELECTED_MASK"]], "nrf_kmu_task_address_get (c function)": [[71, "c.nrf_kmu_task_address_get"]], "nrf_kmu_task_t (c enum)": [[71, "c.nrf_kmu_task_t"]], "nrf_kmu_task_t.nrf_kmu_task_provision_keyslot (c enumerator)": [[71, "c.nrf_kmu_task_t.NRF_KMU_TASK_PROVISION_KEYSLOT"]], "nrf_kmu_task_t.nrf_kmu_task_push_block (c enumerator)": [[71, "c.nrf_kmu_task_t.NRF_KMU_TASK_PUSH_BLOCK"]], "nrf_kmu_task_t.nrf_kmu_task_push_keyslot (c enumerator)": [[71, "c.nrf_kmu_task_t.NRF_KMU_TASK_PUSH_KEYSLOT"]], "nrf_kmu_task_t.nrf_kmu_task_read_metadata (c enumerator)": [[71, "c.nrf_kmu_task_t.NRF_KMU_TASK_READ_METADATA"]], "nrf_kmu_task_t.nrf_kmu_task_revoke_keyslot (c enumerator)": [[71, "c.nrf_kmu_task_t.NRF_KMU_TASK_REVOKE_KEYSLOT"]], "nrf_kmu_task_trigger (c function)": [[71, "c.nrf_kmu_task_trigger"]], "nrfx_lpcomp_default_config (c macro)": [[73, "c.NRFX_LPCOMP_DEFAULT_CONFIG"]], "nrfx_lpcomp_config_t (c struct)": [[73, "c.nrfx_lpcomp_config_t"]], "nrfx_lpcomp_config_t.detection (c var)": [[73, "c.nrfx_lpcomp_config_t.detection"]], "nrfx_lpcomp_config_t.ext_ref (c var)": [[73, "c.nrfx_lpcomp_config_t.ext_ref"]], "nrfx_lpcomp_config_t.input (c var)": [[73, "c.nrfx_lpcomp_config_t.input"]], "nrfx_lpcomp_config_t.interrupt_priority (c var)": [[73, "c.nrfx_lpcomp_config_t.interrupt_priority"]], "nrfx_lpcomp_config_t.reference (c var)": [[73, "c.nrfx_lpcomp_config_t.reference"]], "nrfx_lpcomp_disable (c function)": [[73, "c.nrfx_lpcomp_disable"]], "nrfx_lpcomp_enable (c function)": [[73, "c.nrfx_lpcomp_enable"]], "nrfx_lpcomp_event_handler_t (c type)": [[73, "c.nrfx_lpcomp_event_handler_t"]], "nrfx_lpcomp_init (c function)": [[73, "c.nrfx_lpcomp_init"]], "nrfx_lpcomp_init_check (c function)": [[73, "c.nrfx_lpcomp_init_check"]], "nrfx_lpcomp_uninit (c function)": [[73, "c.nrfx_lpcomp_uninit"]], "nrf_lpcomp_has_ain_as_pin (c macro)": [[74, "c.NRF_LPCOMP_HAS_AIN_AS_PIN"]], "nrf_lpcomp_has_hyst (c macro)": [[74, "c.NRF_LPCOMP_HAS_HYST"]], "nrf_lpcomp_config_t (c struct)": [[74, "c.nrf_lpcomp_config_t"]], "nrf_lpcomp_config_t.detection (c var)": [[74, "c.nrf_lpcomp_config_t.detection"]], "nrf_lpcomp_config_t.hyst (c var)": [[74, "c.nrf_lpcomp_config_t.hyst"]], "nrf_lpcomp_config_t.reference (c var)": [[74, "c.nrf_lpcomp_config_t.reference"]], "nrf_lpcomp_configure (c function)": [[74, "c.nrf_lpcomp_configure"]], "nrf_lpcomp_detect_t (c enum)": [[74, "c.nrf_lpcomp_detect_t"]], "nrf_lpcomp_detect_t.nrf_lpcomp_detect_cross (c enumerator)": [[74, "c.nrf_lpcomp_detect_t.NRF_LPCOMP_DETECT_CROSS"]], "nrf_lpcomp_detect_t.nrf_lpcomp_detect_down (c enumerator)": [[74, "c.nrf_lpcomp_detect_t.NRF_LPCOMP_DETECT_DOWN"]], "nrf_lpcomp_detect_t.nrf_lpcomp_detect_up (c enumerator)": [[74, "c.nrf_lpcomp_detect_t.NRF_LPCOMP_DETECT_UP"]], "nrf_lpcomp_detection_set (c function)": [[74, "c.nrf_lpcomp_detection_set"]], "nrf_lpcomp_disable (c function)": [[74, "c.nrf_lpcomp_disable"]], "nrf_lpcomp_enable (c function)": [[74, "c.nrf_lpcomp_enable"]], "nrf_lpcomp_enable_check (c function)": [[74, "c.nrf_lpcomp_enable_check"]], "nrf_lpcomp_event_address_get (c function)": [[74, "c.nrf_lpcomp_event_address_get"]], "nrf_lpcomp_event_check (c function)": [[74, "c.nrf_lpcomp_event_check"]], "nrf_lpcomp_event_clear (c function)": [[74, "c.nrf_lpcomp_event_clear"]], "nrf_lpcomp_event_t (c enum)": [[74, "c.nrf_lpcomp_event_t"]], "nrf_lpcomp_event_t.nrf_lpcomp_event_cross (c enumerator)": [[74, "c.nrf_lpcomp_event_t.NRF_LPCOMP_EVENT_CROSS"]], "nrf_lpcomp_event_t.nrf_lpcomp_event_down (c enumerator)": [[74, "c.nrf_lpcomp_event_t.NRF_LPCOMP_EVENT_DOWN"]], "nrf_lpcomp_event_t.nrf_lpcomp_event_ready (c enumerator)": [[74, "c.nrf_lpcomp_event_t.NRF_LPCOMP_EVENT_READY"]], "nrf_lpcomp_event_t.nrf_lpcomp_event_up (c enumerator)": [[74, "c.nrf_lpcomp_event_t.NRF_LPCOMP_EVENT_UP"]], "nrf_lpcomp_ext_ref_set (c function)": [[74, "c.nrf_lpcomp_ext_ref_set"]], "nrf_lpcomp_ext_ref_t (c type)": [[74, "c.nrf_lpcomp_ext_ref_t"]], "nrf_lpcomp_hyst_t (c enum)": [[74, "c.nrf_lpcomp_hyst_t"]], "nrf_lpcomp_hyst_t.nrf_lpcomp_hyst_enabled (c enumerator)": [[74, "c.nrf_lpcomp_hyst_t.NRF_LPCOMP_HYST_ENABLED"]], "nrf_lpcomp_hyst_t.nrf_lpcomp_hyst_nohyst (c enumerator)": [[74, "c.nrf_lpcomp_hyst_t.NRF_LPCOMP_HYST_NOHYST"]], "nrf_lpcomp_hysteresis_set (c function)": [[74, "c.nrf_lpcomp_hysteresis_set"]], "nrf_lpcomp_input_select (c function)": [[74, "c.nrf_lpcomp_input_select"]], "nrf_lpcomp_input_t (c type)": [[74, "c.nrf_lpcomp_input_t"]], "nrf_lpcomp_int_disable (c function)": [[74, "c.nrf_lpcomp_int_disable"]], "nrf_lpcomp_int_enable (c function)": [[74, "c.nrf_lpcomp_int_enable"]], "nrf_lpcomp_int_enable_check (c function)": [[74, "c.nrf_lpcomp_int_enable_check"]], "nrf_lpcomp_int_mask_t (c enum)": [[74, "c.nrf_lpcomp_int_mask_t"]], "nrf_lpcomp_int_mask_t.nrf_lpcomp_int_cross_mask (c enumerator)": [[74, "c.nrf_lpcomp_int_mask_t.NRF_LPCOMP_INT_CROSS_MASK"]], "nrf_lpcomp_int_mask_t.nrf_lpcomp_int_down_mask (c enumerator)": [[74, "c.nrf_lpcomp_int_mask_t.NRF_LPCOMP_INT_DOWN_MASK"]], "nrf_lpcomp_int_mask_t.nrf_lpcomp_int_ready_mask (c enumerator)": [[74, "c.nrf_lpcomp_int_mask_t.NRF_LPCOMP_INT_READY_MASK"]], "nrf_lpcomp_int_mask_t.nrf_lpcomp_int_up_mask (c enumerator)": [[74, "c.nrf_lpcomp_int_mask_t.NRF_LPCOMP_INT_UP_MASK"]], "nrf_lpcomp_publish_clear (c function)": [[74, "c.nrf_lpcomp_publish_clear"]], "nrf_lpcomp_publish_set (c function)": [[74, "c.nrf_lpcomp_publish_set"]], "nrf_lpcomp_ref_set (c function)": [[74, "c.nrf_lpcomp_ref_set"]], "nrf_lpcomp_ref_t (c enum)": [[74, "c.nrf_lpcomp_ref_t"]], "nrf_lpcomp_ref_t.nrf_lpcomp_ref_ext_ref (c enumerator)": [[74, "c.nrf_lpcomp_ref_t.NRF_LPCOMP_REF_EXT_REF"]], "nrf_lpcomp_ref_t.nrf_lpcomp_ref_supply_1_8 (c enumerator)": [[74, "c.nrf_lpcomp_ref_t.NRF_LPCOMP_REF_SUPPLY_1_8"]], "nrf_lpcomp_ref_t.nrf_lpcomp_ref_supply_2_8 (c enumerator)": [[74, "c.nrf_lpcomp_ref_t.NRF_LPCOMP_REF_SUPPLY_2_8"]], "nrf_lpcomp_ref_t.nrf_lpcomp_ref_supply_3_8 (c enumerator)": [[74, "c.nrf_lpcomp_ref_t.NRF_LPCOMP_REF_SUPPLY_3_8"]], "nrf_lpcomp_ref_t.nrf_lpcomp_ref_supply_4_8 (c enumerator)": [[74, "c.nrf_lpcomp_ref_t.NRF_LPCOMP_REF_SUPPLY_4_8"]], "nrf_lpcomp_ref_t.nrf_lpcomp_ref_supply_5_8 (c enumerator)": [[74, "c.nrf_lpcomp_ref_t.NRF_LPCOMP_REF_SUPPLY_5_8"]], "nrf_lpcomp_ref_t.nrf_lpcomp_ref_supply_6_8 (c enumerator)": [[74, "c.nrf_lpcomp_ref_t.NRF_LPCOMP_REF_SUPPLY_6_8"]], "nrf_lpcomp_ref_t.nrf_lpcomp_ref_supply_7_8 (c enumerator)": [[74, "c.nrf_lpcomp_ref_t.NRF_LPCOMP_REF_SUPPLY_7_8"]], "nrf_lpcomp_result_get (c function)": [[74, "c.nrf_lpcomp_result_get"]], "nrf_lpcomp_short_mask_t (c enum)": [[74, "c.nrf_lpcomp_short_mask_t"]], "nrf_lpcomp_short_mask_t.nrf_lpcomp_short_cross_stop_mask (c enumerator)": [[74, "c.nrf_lpcomp_short_mask_t.NRF_LPCOMP_SHORT_CROSS_STOP_MASK"]], "nrf_lpcomp_short_mask_t.nrf_lpcomp_short_down_stop_mask (c enumerator)": [[74, "c.nrf_lpcomp_short_mask_t.NRF_LPCOMP_SHORT_DOWN_STOP_MASK"]], "nrf_lpcomp_short_mask_t.nrf_lpcomp_short_ready_sample_mask (c enumerator)": [[74, "c.nrf_lpcomp_short_mask_t.NRF_LPCOMP_SHORT_READY_SAMPLE_MASK"]], "nrf_lpcomp_short_mask_t.nrf_lpcomp_short_ready_stop_mask (c enumerator)": [[74, "c.nrf_lpcomp_short_mask_t.NRF_LPCOMP_SHORT_READY_STOP_MASK"]], "nrf_lpcomp_short_mask_t.nrf_lpcomp_short_up_stop_mask (c enumerator)": [[74, "c.nrf_lpcomp_short_mask_t.NRF_LPCOMP_SHORT_UP_STOP_MASK"]], "nrf_lpcomp_shorts_disable (c function)": [[74, "c.nrf_lpcomp_shorts_disable"]], "nrf_lpcomp_shorts_enable (c function)": [[74, "c.nrf_lpcomp_shorts_enable"]], "nrf_lpcomp_shorts_set (c function)": [[74, "c.nrf_lpcomp_shorts_set"]], "nrf_lpcomp_subscribe_clear (c function)": [[74, "c.nrf_lpcomp_subscribe_clear"]], "nrf_lpcomp_subscribe_set (c function)": [[74, "c.nrf_lpcomp_subscribe_set"]], "nrf_lpcomp_task_address_get (c function)": [[74, "c.nrf_lpcomp_task_address_get"]], "nrf_lpcomp_task_t (c enum)": [[74, "c.nrf_lpcomp_task_t"]], "nrf_lpcomp_task_t.nrf_lpcomp_task_sample (c enumerator)": [[74, "c.nrf_lpcomp_task_t.NRF_LPCOMP_TASK_SAMPLE"]], "nrf_lpcomp_task_t.nrf_lpcomp_task_start (c enumerator)": [[74, "c.nrf_lpcomp_task_t.NRF_LPCOMP_TASK_START"]], "nrf_lpcomp_task_t.nrf_lpcomp_task_stop (c enumerator)": [[74, "c.nrf_lpcomp_task_t.NRF_LPCOMP_TASK_STOP"]], "nrf_lpcomp_task_trigger (c function)": [[74, "c.nrf_lpcomp_task_trigger"]], "nrfy_lpcomp_config_t (c struct)": [[75, "c.nrfy_lpcomp_config_t"]], "nrfy_lpcomp_config_t.config (c var)": [[75, "c.nrfy_lpcomp_config_t.config"]], "nrfy_lpcomp_config_t.detection (c var)": [[75, "c.nrfy_lpcomp_config_t.detection"]], "nrfy_lpcomp_config_t.ext_ref (c var)": [[75, "c.nrfy_lpcomp_config_t.ext_ref"]], "nrfy_lpcomp_config_t.input (c var)": [[75, "c.nrfy_lpcomp_config_t.input"]], "nrfy_lpcomp_config_t.reference (c var)": [[75, "c.nrfy_lpcomp_config_t.reference"]], "nrfy_lpcomp_configure (c function)": [[75, "c.nrfy_lpcomp_configure"]], "nrfy_lpcomp_detection_set (c function)": [[75, "c.nrfy_lpcomp_detection_set"]], "nrfy_lpcomp_disable (c function)": [[75, "c.nrfy_lpcomp_disable"]], "nrfy_lpcomp_enable (c function)": [[75, "c.nrfy_lpcomp_enable"]], "nrfy_lpcomp_event_address_get (c function)": [[75, "c.nrfy_lpcomp_event_address_get"]], "nrfy_lpcomp_event_check (c function)": [[75, "c.nrfy_lpcomp_event_check"]], "nrfy_lpcomp_event_clear (c function)": [[75, "c.nrfy_lpcomp_event_clear"]], "nrfy_lpcomp_events_process (c function)": [[75, "c.nrfy_lpcomp_events_process"]], "nrfy_lpcomp_ext_ref_set (c function)": [[75, "c.nrfy_lpcomp_ext_ref_set"]], "nrfy_lpcomp_hysteresis_set (c function)": [[75, "c.nrfy_lpcomp_hysteresis_set"]], "nrfy_lpcomp_input_select (c function)": [[75, "c.nrfy_lpcomp_input_select"]], "nrfy_lpcomp_int_disable (c function)": [[75, "c.nrfy_lpcomp_int_disable"]], "nrfy_lpcomp_int_enable (c function)": [[75, "c.nrfy_lpcomp_int_enable"]], "nrfy_lpcomp_int_enable_check (c function)": [[75, "c.nrfy_lpcomp_int_enable_check"]], "nrfy_lpcomp_int_init (c function)": [[75, "c.nrfy_lpcomp_int_init"]], "nrfy_lpcomp_int_uninit (c function)": [[75, "c.nrfy_lpcomp_int_uninit"]], "nrfy_lpcomp_periph_configure (c function)": [[75, "c.nrfy_lpcomp_periph_configure"]], "nrfy_lpcomp_ref_set (c function)": [[75, "c.nrfy_lpcomp_ref_set"]], "nrfy_lpcomp_result_get (c function)": [[75, "c.nrfy_lpcomp_result_get"]], "nrfy_lpcomp_sample_check (c function)": [[75, "c.nrfy_lpcomp_sample_check"]], "nrfy_lpcomp_shorts_disable (c function)": [[75, "c.nrfy_lpcomp_shorts_disable"]], "nrfy_lpcomp_shorts_enable (c function)": [[75, "c.nrfy_lpcomp_shorts_enable"]], "nrfy_lpcomp_task_address_get (c function)": [[75, "c.nrfy_lpcomp_task_address_get"]], "nrfy_lpcomp_task_trigger (c function)": [[75, "c.nrfy_lpcomp_task_trigger"]], "nrf_lrcconf_axi_waitstates_array_size (c macro)": [[77, "c.NRF_LRCCONF_AXI_WAITSTATES_ARRAY_SIZE"]], "nrf_lrcconf_clk_count (c macro)": [[77, "c.NRF_LRCCONF_CLK_COUNT"]], "nrf_lrcconf_has_hfxo (c macro)": [[77, "c.NRF_LRCCONF_HAS_HFXO"]], "nrf_lrcconf_axi_waitstates_get (c function)": [[77, "c.nrf_lrcconf_axi_waitstates_get"]], "nrf_lrcconf_axi_waitstates_set (c function)": [[77, "c.nrf_lrcconf_axi_waitstates_set"]], "nrf_lrcconf_clk_src_t (c enum)": [[77, "c.nrf_lrcconf_clk_src_t"]], "nrf_lrcconf_clk_src_t.nrf_lrcconf_clk_src_closed_loop (c enumerator)": [[77, "c.nrf_lrcconf_clk_src_t.NRF_LRCCONF_CLK_SRC_CLOSED_LOOP"]], "nrf_lrcconf_clk_src_t.nrf_lrcconf_clk_src_open_loop (c enumerator)": [[77, "c.nrf_lrcconf_clk_src_t.NRF_LRCCONF_CLK_SRC_OPEN_LOOP"]], "nrf_lrcconf_clkstart_task_get (c function)": [[77, "c.nrf_lrcconf_clkstart_task_get"]], "nrf_lrcconf_clkstarted_event_get (c function)": [[77, "c.nrf_lrcconf_clkstarted_event_get"]], "nrf_lrcconf_clkstop_task_get (c function)": [[77, "c.nrf_lrcconf_clkstop_task_get"]], "nrf_lrcconf_clock_always_run_check (c function)": [[77, "c.nrf_lrcconf_clock_always_run_check"]], "nrf_lrcconf_clock_always_run_force_set (c function)": [[77, "c.nrf_lrcconf_clock_always_run_force_set"]], "nrf_lrcconf_clock_run_status_check (c function)": [[77, "c.nrf_lrcconf_clock_run_status_check"]], "nrf_lrcconf_clock_source_get (c function)": [[77, "c.nrf_lrcconf_clock_source_get"]], "nrf_lrcconf_clock_source_set (c function)": [[77, "c.nrf_lrcconf_clock_source_set"]], "nrf_lrcconf_constlatstat_check (c function)": [[77, "c.nrf_lrcconf_constlatstat_check"]], "nrf_lrcconf_event_address_get (c function)": [[77, "c.nrf_lrcconf_event_address_get"]], "nrf_lrcconf_event_check (c function)": [[77, "c.nrf_lrcconf_event_check"]], "nrf_lrcconf_event_clear (c function)": [[77, "c.nrf_lrcconf_event_clear"]], "nrf_lrcconf_event_t (c enum)": [[77, "c.nrf_lrcconf_event_t"]], "nrf_lrcconf_event_t.nrf_lrcconf_event_clkstarted_0 (c enumerator)": [[77, "c.nrf_lrcconf_event_t.NRF_LRCCONF_EVENT_CLKSTARTED_0"]], "nrf_lrcconf_event_t.nrf_lrcconf_event_clkstarted_1 (c enumerator)": [[77, "c.nrf_lrcconf_event_t.NRF_LRCCONF_EVENT_CLKSTARTED_1"]], "nrf_lrcconf_event_t.nrf_lrcconf_event_clkstarted_2 (c enumerator)": [[77, "c.nrf_lrcconf_event_t.NRF_LRCCONF_EVENT_CLKSTARTED_2"]], "nrf_lrcconf_event_t.nrf_lrcconf_event_clkstarted_3 (c enumerator)": [[77, "c.nrf_lrcconf_event_t.NRF_LRCCONF_EVENT_CLKSTARTED_3"]], "nrf_lrcconf_event_t.nrf_lrcconf_event_clkstarted_4 (c enumerator)": [[77, "c.nrf_lrcconf_event_t.NRF_LRCCONF_EVENT_CLKSTARTED_4"]], "nrf_lrcconf_event_t.nrf_lrcconf_event_clkstarted_5 (c enumerator)": [[77, "c.nrf_lrcconf_event_t.NRF_LRCCONF_EVENT_CLKSTARTED_5"]], "nrf_lrcconf_event_t.nrf_lrcconf_event_clkstarted_6 (c enumerator)": [[77, "c.nrf_lrcconf_event_t.NRF_LRCCONF_EVENT_CLKSTARTED_6"]], "nrf_lrcconf_event_t.nrf_lrcconf_event_clkstarted_7 (c enumerator)": [[77, "c.nrf_lrcconf_event_t.NRF_LRCCONF_EVENT_CLKSTARTED_7"]], "nrf_lrcconf_event_t.nrf_lrcconf_event_hfxostarted (c enumerator)": [[77, "c.nrf_lrcconf_event_t.NRF_LRCCONF_EVENT_HFXOSTARTED"]], "nrf_lrcconf_power_domain_mask_t (c enum)": [[77, "c.nrf_lrcconf_power_domain_mask_t"]], "nrf_lrcconf_power_domain_mask_t.nrf_lrcconf_power_domain_0 (c enumerator)": [[77, "c.nrf_lrcconf_power_domain_mask_t.NRF_LRCCONF_POWER_DOMAIN_0"]], "nrf_lrcconf_power_domain_mask_t.nrf_lrcconf_power_domain_1 (c enumerator)": [[77, "c.nrf_lrcconf_power_domain_mask_t.NRF_LRCCONF_POWER_DOMAIN_1"]], "nrf_lrcconf_power_domain_mask_t.nrf_lrcconf_power_domain_2 (c enumerator)": [[77, "c.nrf_lrcconf_power_domain_mask_t.NRF_LRCCONF_POWER_DOMAIN_2"]], "nrf_lrcconf_power_domain_mask_t.nrf_lrcconf_power_domain_3 (c enumerator)": [[77, "c.nrf_lrcconf_power_domain_mask_t.NRF_LRCCONF_POWER_DOMAIN_3"]], "nrf_lrcconf_power_domain_mask_t.nrf_lrcconf_power_domain_4 (c enumerator)": [[77, "c.nrf_lrcconf_power_domain_mask_t.NRF_LRCCONF_POWER_DOMAIN_4"]], "nrf_lrcconf_power_domain_mask_t.nrf_lrcconf_power_domain_5 (c enumerator)": [[77, "c.nrf_lrcconf_power_domain_mask_t.NRF_LRCCONF_POWER_DOMAIN_5"]], "nrf_lrcconf_power_domain_mask_t.nrf_lrcconf_power_domain_6 (c enumerator)": [[77, "c.nrf_lrcconf_power_domain_mask_t.NRF_LRCCONF_POWER_DOMAIN_6"]], "nrf_lrcconf_power_domain_mask_t.nrf_lrcconf_power_domain_7 (c enumerator)": [[77, "c.nrf_lrcconf_power_domain_mask_t.NRF_LRCCONF_POWER_DOMAIN_7"]], "nrf_lrcconf_power_domain_mask_t.nrf_lrcconf_power_main (c enumerator)": [[77, "c.nrf_lrcconf_power_domain_mask_t.NRF_LRCCONF_POWER_MAIN"]], "nrf_lrcconf_power_domain_on_get (c function)": [[77, "c.nrf_lrcconf_power_domain_on_get"]], "nrf_lrcconf_poweron_force_check (c function)": [[77, "c.nrf_lrcconf_poweron_force_check"]], "nrf_lrcconf_poweron_force_set (c function)": [[77, "c.nrf_lrcconf_poweron_force_set"]], "nrf_lrcconf_retain_check (c function)": [[77, "c.nrf_lrcconf_retain_check"]], "nrf_lrcconf_retain_set (c function)": [[77, "c.nrf_lrcconf_retain_set"]], "nrf_lrcconf_task_address_get (c function)": [[77, "c.nrf_lrcconf_task_address_get"]], "nrf_lrcconf_task_t (c enum)": [[77, "c.nrf_lrcconf_task_t"]], "nrf_lrcconf_task_t.nrf_lrcconf_task_clkstart_0 (c enumerator)": [[77, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_CLKSTART_0"]], "nrf_lrcconf_task_t.nrf_lrcconf_task_clkstart_1 (c enumerator)": [[77, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_CLKSTART_1"]], "nrf_lrcconf_task_t.nrf_lrcconf_task_clkstart_2 (c enumerator)": [[77, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_CLKSTART_2"]], "nrf_lrcconf_task_t.nrf_lrcconf_task_clkstart_3 (c enumerator)": [[77, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_CLKSTART_3"]], "nrf_lrcconf_task_t.nrf_lrcconf_task_clkstart_4 (c enumerator)": [[77, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_CLKSTART_4"]], "nrf_lrcconf_task_t.nrf_lrcconf_task_clkstart_5 (c enumerator)": [[77, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_CLKSTART_5"]], "nrf_lrcconf_task_t.nrf_lrcconf_task_clkstart_6 (c enumerator)": [[77, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_CLKSTART_6"]], "nrf_lrcconf_task_t.nrf_lrcconf_task_clkstart_7 (c enumerator)": [[77, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_CLKSTART_7"]], "nrf_lrcconf_task_t.nrf_lrcconf_task_clkstop_0 (c enumerator)": [[77, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_CLKSTOP_0"]], "nrf_lrcconf_task_t.nrf_lrcconf_task_clkstop_1 (c enumerator)": [[77, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_CLKSTOP_1"]], "nrf_lrcconf_task_t.nrf_lrcconf_task_clkstop_2 (c enumerator)": [[77, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_CLKSTOP_2"]], "nrf_lrcconf_task_t.nrf_lrcconf_task_clkstop_3 (c enumerator)": [[77, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_CLKSTOP_3"]], "nrf_lrcconf_task_t.nrf_lrcconf_task_clkstop_4 (c enumerator)": [[77, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_CLKSTOP_4"]], "nrf_lrcconf_task_t.nrf_lrcconf_task_clkstop_5 (c enumerator)": [[77, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_CLKSTOP_5"]], "nrf_lrcconf_task_t.nrf_lrcconf_task_clkstop_6 (c enumerator)": [[77, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_CLKSTOP_6"]], "nrf_lrcconf_task_t.nrf_lrcconf_task_clkstop_7 (c enumerator)": [[77, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_CLKSTOP_7"]], "nrf_lrcconf_task_t.nrf_lrcconf_task_constlat_disable (c enumerator)": [[77, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_CONSTLAT_DISABLE"]], "nrf_lrcconf_task_t.nrf_lrcconf_task_constlat_enable (c enumerator)": [[77, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_CONSTLAT_ENABLE"]], "nrf_lrcconf_task_t.nrf_lrcconf_task_reqhfxo (c enumerator)": [[77, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_REQHFXO"]], "nrf_lrcconf_task_t.nrf_lrcconf_task_stopreqhfxo (c enumerator)": [[77, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_STOPREQHFXO"]], "nrf_lrcconf_task_t.nrf_lrcconf_task_systemoffnotready (c enumerator)": [[77, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_SYSTEMOFFNOTREADY"]], "nrf_lrcconf_task_t.nrf_lrcconf_task_systemoffready (c enumerator)": [[77, "c.nrf_lrcconf_task_t.NRF_LRCCONF_TASK_SYSTEMOFFREADY"]], "nrf_lrcconf_task_trigger (c function)": [[77, "c.nrf_lrcconf_task_trigger"]], "nrf_memconf_blocktype_trim_memrettrim_mask (c macro)": [[79, "c.NRF_MEMCONF_BLOCKTYPE_TRIM_MEMRETTRIM_MASK"]], "nrf_memconf_blocktype_trim_memtrim_mask (c macro)": [[79, "c.NRF_MEMCONF_BLOCKTYPE_TRIM_MEMTRIM_MASK"]], "nrf_memconf_has_repair (c macro)": [[79, "c.NRF_MEMCONF_HAS_REPAIR"]], "nrf_memconf_has_ret2 (c macro)": [[79, "c.NRF_MEMCONF_HAS_RET2"]], "nrf_memconf_has_trim (c macro)": [[79, "c.NRF_MEMCONF_HAS_TRIM"]], "nrf_memconf_powerblock_count (c macro)": [[79, "c.NRF_MEMCONF_POWERBLOCK_COUNT"]], "nrf_memconf_powerblock_ramblock_control_count (c macro)": [[79, "c.NRF_MEMCONF_POWERBLOCK_RAMBLOCK_CONTROL_COUNT"]], "nrf_memconf_powerblock_ramblock_ret2_count (c macro)": [[79, "c.NRF_MEMCONF_POWERBLOCK_RAMBLOCK_RET2_COUNT"]], "nrf_memconf_powerblock_ramblock_ret_count (c macro)": [[79, "c.NRF_MEMCONF_POWERBLOCK_RAMBLOCK_RET_COUNT"]], "nrf_memconf_bitline_address_get (c function)": [[79, "c.nrf_memconf_bitline_address_get"]], "nrf_memconf_bitline_address_set (c function)": [[79, "c.nrf_memconf_bitline_address_set"]], "nrf_memconf_bitline_enable_check (c function)": [[79, "c.nrf_memconf_bitline_enable_check"]], "nrf_memconf_bitline_enable_set (c function)": [[79, "c.nrf_memconf_bitline_enable_set"]], "nrf_memconf_memtrim_get (c function)": [[79, "c.nrf_memconf_memtrim_get"]], "nrf_memconf_memtrim_set (c function)": [[79, "c.nrf_memconf_memtrim_set"]], "nrf_memconf_ramblock_control_enable_check (c function)": [[79, "c.nrf_memconf_ramblock_control_enable_check"]], "nrf_memconf_ramblock_control_enable_set (c function)": [[79, "c.nrf_memconf_ramblock_control_enable_set"]], "nrf_memconf_ramblock_control_mask_enable_set (c function)": [[79, "c.nrf_memconf_ramblock_control_mask_enable_set"]], "nrf_memconf_ramblock_ret2_enable_check (c function)": [[79, "c.nrf_memconf_ramblock_ret2_enable_check"]], "nrf_memconf_ramblock_ret2_enable_set (c function)": [[79, "c.nrf_memconf_ramblock_ret2_enable_set"]], "nrf_memconf_ramblock_ret_enable_check (c function)": [[79, "c.nrf_memconf_ramblock_ret_enable_check"]], "nrf_memconf_ramblock_ret_enable_set (c function)": [[79, "c.nrf_memconf_ramblock_ret_enable_set"]], "nrf_memconf_ramblock_ret_mask_enable_set (c function)": [[79, "c.nrf_memconf_ramblock_ret_mask_enable_set"]], "nrf_memconf_rettrim_get (c function)": [[79, "c.nrf_memconf_rettrim_get"]], "nrf_memconf_rettrim_set (c function)": [[79, "c.nrf_memconf_rettrim_set"]], "nrf_mpc_has_override_offset (c macro)": [[81, "c.NRF_MPC_HAS_OVERRIDE_OFFSET"]], "nrf_mpc_has_rtchoke (c macro)": [[81, "c.NRF_MPC_HAS_RTCHOKE"]], "nrf_mpc_has_secdom (c macro)": [[81, "c.NRF_MPC_HAS_SECDOM"]], "nrf_mpc_master_ports_count (c macro)": [[81, "c.NRF_MPC_MASTER_PORTS_COUNT"]], "nrf_mpc_override_count (c macro)": [[81, "c.NRF_MPC_OVERRIDE_COUNT"]], "nrf_mpc_region_count (c macro)": [[81, "c.NRF_MPC_REGION_COUNT"]], "nrf_mpc_rtchoke_count (c macro)": [[81, "c.NRF_MPC_RTCHOKE_COUNT"]], "nrf_mpc_errorsource_t (c enum)": [[81, "c.nrf_mpc_errorsource_t"]], "nrf_mpc_errorsource_t.nrf_mpc_errorsource_mpc (c enumerator)": [[81, "c.nrf_mpc_errorsource_t.NRF_MPC_ERRORSOURCE_MPC"]], "nrf_mpc_errorsource_t.nrf_mpc_errorsource_slave (c enumerator)": [[81, "c.nrf_mpc_errorsource_t.NRF_MPC_ERRORSOURCE_SLAVE"]], "nrf_mpc_event_address_get (c function)": [[81, "c.nrf_mpc_event_address_get"]], "nrf_mpc_event_check (c function)": [[81, "c.nrf_mpc_event_check"]], "nrf_mpc_event_clear (c function)": [[81, "c.nrf_mpc_event_clear"]], "nrf_mpc_event_t (c enum)": [[81, "c.nrf_mpc_event_t"]], "nrf_mpc_event_t.nrf_mpc_event_memaccerr (c enumerator)": [[81, "c.nrf_mpc_event_t.NRF_MPC_EVENT_MEMACCERR"]], "nrf_mpc_globalslave_lock_check (c function)": [[81, "c.nrf_mpc_globalslave_lock_check"]], "nrf_mpc_globalslave_lock_enable (c function)": [[81, "c.nrf_mpc_globalslave_lock_enable"]], "nrf_mpc_globalslave_masterport_get (c function)": [[81, "c.nrf_mpc_globalslave_masterport_get"]], "nrf_mpc_globalslave_masterport_set (c function)": [[81, "c.nrf_mpc_globalslave_masterport_set"]], "nrf_mpc_int_disable (c function)": [[81, "c.nrf_mpc_int_disable"]], "nrf_mpc_int_enable (c function)": [[81, "c.nrf_mpc_int_enable"]], "nrf_mpc_int_enable_check (c function)": [[81, "c.nrf_mpc_int_enable_check"]], "nrf_mpc_int_mask_t (c enum)": [[81, "c.nrf_mpc_int_mask_t"]], "nrf_mpc_int_mask_t.nrf_mpc_int_memaccerr_mask (c enumerator)": [[81, "c.nrf_mpc_int_mask_t.NRF_MPC_INT_MEMACCERR_MASK"]], "nrf_mpc_masterport_mask_t (c enum)": [[81, "c.nrf_mpc_masterport_mask_t"]], "nrf_mpc_masterport_mask_t.nrf_mpc_masterport_0_mask (c enumerator)": [[81, "c.nrf_mpc_masterport_mask_t.NRF_MPC_MASTERPORT_0_MASK"]], "nrf_mpc_masterport_mask_t.nrf_mpc_masterport_10_mask (c enumerator)": [[81, "c.nrf_mpc_masterport_mask_t.NRF_MPC_MASTERPORT_10_MASK"]], "nrf_mpc_masterport_mask_t.nrf_mpc_masterport_11_mask (c enumerator)": [[81, "c.nrf_mpc_masterport_mask_t.NRF_MPC_MASTERPORT_11_MASK"]], "nrf_mpc_masterport_mask_t.nrf_mpc_masterport_12_mask (c enumerator)": [[81, "c.nrf_mpc_masterport_mask_t.NRF_MPC_MASTERPORT_12_MASK"]], "nrf_mpc_masterport_mask_t.nrf_mpc_masterport_13_mask (c enumerator)": [[81, "c.nrf_mpc_masterport_mask_t.NRF_MPC_MASTERPORT_13_MASK"]], "nrf_mpc_masterport_mask_t.nrf_mpc_masterport_14_mask (c enumerator)": [[81, "c.nrf_mpc_masterport_mask_t.NRF_MPC_MASTERPORT_14_MASK"]], "nrf_mpc_masterport_mask_t.nrf_mpc_masterport_1_mask (c enumerator)": [[81, "c.nrf_mpc_masterport_mask_t.NRF_MPC_MASTERPORT_1_MASK"]], "nrf_mpc_masterport_mask_t.nrf_mpc_masterport_2_mask (c enumerator)": [[81, "c.nrf_mpc_masterport_mask_t.NRF_MPC_MASTERPORT_2_MASK"]], "nrf_mpc_masterport_mask_t.nrf_mpc_masterport_3_mask (c enumerator)": [[81, "c.nrf_mpc_masterport_mask_t.NRF_MPC_MASTERPORT_3_MASK"]], "nrf_mpc_masterport_mask_t.nrf_mpc_masterport_4_mask (c enumerator)": [[81, "c.nrf_mpc_masterport_mask_t.NRF_MPC_MASTERPORT_4_MASK"]], "nrf_mpc_masterport_mask_t.nrf_mpc_masterport_5_mask (c enumerator)": [[81, "c.nrf_mpc_masterport_mask_t.NRF_MPC_MASTERPORT_5_MASK"]], "nrf_mpc_masterport_mask_t.nrf_mpc_masterport_6_mask (c enumerator)": [[81, "c.nrf_mpc_masterport_mask_t.NRF_MPC_MASTERPORT_6_MASK"]], "nrf_mpc_masterport_mask_t.nrf_mpc_masterport_7_mask (c enumerator)": [[81, "c.nrf_mpc_masterport_mask_t.NRF_MPC_MASTERPORT_7_MASK"]], "nrf_mpc_masterport_mask_t.nrf_mpc_masterport_8_mask (c enumerator)": [[81, "c.nrf_mpc_masterport_mask_t.NRF_MPC_MASTERPORT_8_MASK"]], "nrf_mpc_masterport_mask_t.nrf_mpc_masterport_9_mask (c enumerator)": [[81, "c.nrf_mpc_masterport_mask_t.NRF_MPC_MASTERPORT_9_MASK"]], "nrf_mpc_memaccerr_address_get (c function)": [[81, "c.nrf_mpc_memaccerr_address_get"]], "nrf_mpc_memaccerr_info_errorsource_get (c function)": [[81, "c.nrf_mpc_memaccerr_info_errorsource_get"]], "nrf_mpc_memaccerr_info_masterport_get (c function)": [[81, "c.nrf_mpc_memaccerr_info_masterport_get"]], "nrf_mpc_memaccerr_info_ownerid_get (c function)": [[81, "c.nrf_mpc_memaccerr_info_ownerid_get"]], "nrf_mpc_memaccerr_info_perm_get (c function)": [[81, "c.nrf_mpc_memaccerr_info_perm_get"]], "nrf_mpc_override_config_get (c function)": [[81, "c.nrf_mpc_override_config_get"]], "nrf_mpc_override_config_set (c function)": [[81, "c.nrf_mpc_override_config_set"]], "nrf_mpc_override_config_t (c struct)": [[81, "c.nrf_mpc_override_config_t"]], "nrf_mpc_override_config_t.enable (c var)": [[81, "c.nrf_mpc_override_config_t.enable"]], "nrf_mpc_override_config_t.lock (c var)": [[81, "c.nrf_mpc_override_config_t.lock"]], "nrf_mpc_override_config_t.secdom_enable (c var)": [[81, "c.nrf_mpc_override_config_t.secdom_enable"]], "nrf_mpc_override_config_t.secure_mask (c var)": [[81, "c.nrf_mpc_override_config_t.secure_mask"]], "nrf_mpc_override_config_t.slave_number (c var)": [[81, "c.nrf_mpc_override_config_t.slave_number"]], "nrf_mpc_override_endaddr_get (c function)": [[81, "c.nrf_mpc_override_endaddr_get"]], "nrf_mpc_override_endaddr_set (c function)": [[81, "c.nrf_mpc_override_endaddr_set"]], "nrf_mpc_override_masterport_get (c function)": [[81, "c.nrf_mpc_override_masterport_get"]], "nrf_mpc_override_masterport_set (c function)": [[81, "c.nrf_mpc_override_masterport_set"]], "nrf_mpc_override_offset_get (c function)": [[81, "c.nrf_mpc_override_offset_get"]], "nrf_mpc_override_offset_set (c function)": [[81, "c.nrf_mpc_override_offset_set"]], "nrf_mpc_override_ownerid_get (c function)": [[81, "c.nrf_mpc_override_ownerid_get"]], "nrf_mpc_override_ownerid_set (c function)": [[81, "c.nrf_mpc_override_ownerid_set"]], "nrf_mpc_override_perm_get (c function)": [[81, "c.nrf_mpc_override_perm_get"]], "nrf_mpc_override_perm_set (c function)": [[81, "c.nrf_mpc_override_perm_set"]], "nrf_mpc_override_permmask_get (c function)": [[81, "c.nrf_mpc_override_permmask_get"]], "nrf_mpc_override_permmask_set (c function)": [[81, "c.nrf_mpc_override_permmask_set"]], "nrf_mpc_override_startaddr_get (c function)": [[81, "c.nrf_mpc_override_startaddr_get"]], "nrf_mpc_override_startaddr_set (c function)": [[81, "c.nrf_mpc_override_startaddr_set"]], "nrf_mpc_permission_mask_t (c enum)": [[81, "c.nrf_mpc_permission_mask_t"]], "nrf_mpc_permission_mask_t.nrf_mpc_perm_execute_mask (c enumerator)": [[81, "c.nrf_mpc_permission_mask_t.NRF_MPC_PERM_EXECUTE_MASK"]], "nrf_mpc_permission_mask_t.nrf_mpc_perm_read_mask (c enumerator)": [[81, "c.nrf_mpc_permission_mask_t.NRF_MPC_PERM_READ_MASK"]], "nrf_mpc_permission_mask_t.nrf_mpc_perm_secure_mask (c enumerator)": [[81, "c.nrf_mpc_permission_mask_t.NRF_MPC_PERM_SECURE_MASK"]], "nrf_mpc_permission_mask_t.nrf_mpc_perm_write_mask (c enumerator)": [[81, "c.nrf_mpc_permission_mask_t.NRF_MPC_PERM_WRITE_MASK"]], "nrf_mpc_region_addrmask_get (c function)": [[81, "c.nrf_mpc_region_addrmask_get"]], "nrf_mpc_region_addrmask_set (c function)": [[81, "c.nrf_mpc_region_addrmask_set"]], "nrf_mpc_region_config_get (c function)": [[81, "c.nrf_mpc_region_config_get"]], "nrf_mpc_region_config_set (c function)": [[81, "c.nrf_mpc_region_config_set"]], "nrf_mpc_region_config_t (c struct)": [[81, "c.nrf_mpc_region_config_t"]], "nrf_mpc_region_config_t.enable (c var)": [[81, "c.nrf_mpc_region_config_t.enable"]], "nrf_mpc_region_config_t.lock (c var)": [[81, "c.nrf_mpc_region_config_t.lock"]], "nrf_mpc_region_config_t.owner (c var)": [[81, "c.nrf_mpc_region_config_t.owner"]], "nrf_mpc_region_config_t.permissions (c var)": [[81, "c.nrf_mpc_region_config_t.permissions"]], "nrf_mpc_region_config_t.slave_number (c var)": [[81, "c.nrf_mpc_region_config_t.slave_number"]], "nrf_mpc_region_masterport_get (c function)": [[81, "c.nrf_mpc_region_masterport_get"]], "nrf_mpc_region_masterport_set (c function)": [[81, "c.nrf_mpc_region_masterport_set"]], "nrf_mpc_region_startaddr_get (c function)": [[81, "c.nrf_mpc_region_startaddr_get"]], "nrf_mpc_region_startaddr_set (c function)": [[81, "c.nrf_mpc_region_startaddr_set"]], "nrf_mpc_rtchoke_delay_get (c function)": [[81, "c.nrf_mpc_rtchoke_delay_get"]], "nrf_mpc_rtchoke_delay_set (c function)": [[81, "c.nrf_mpc_rtchoke_delay_set"]], "nrf_mpc_rtchoke_readaccess_get (c function)": [[81, "c.nrf_mpc_rtchoke_readaccess_get"]], "nrf_mpc_rtchoke_readaccess_set (c function)": [[81, "c.nrf_mpc_rtchoke_readaccess_set"]], "nrf_mpc_rtchoke_writeaccess_get (c function)": [[81, "c.nrf_mpc_rtchoke_writeaccess_get"]], "nrf_mpc_rtchoke_writeaccess_set (c function)": [[81, "c.nrf_mpc_rtchoke_writeaccess_set"]], "nrf_mpu_peripheral_mask_get (c macro)": [[83, "c.NRF_MPU_PERIPHERAL_MASK_GET"]], "nrf_mpu_nvm_blocks_protection_enable (c function)": [[83, "c.nrf_mpu_nvm_blocks_protection_enable"]], "nrf_mpu_nvm_protection_in_debug_set (c function)": [[83, "c.nrf_mpu_nvm_protection_in_debug_set"]], "nrf_mpu_region0_peripherals_get (c function)": [[83, "c.nrf_mpu_region0_peripherals_get"]], "nrf_mpu_region0_peripherals_set (c function)": [[83, "c.nrf_mpu_region0_peripherals_set"]], "nrf_mpu_region0_ram_size_set (c function)": [[83, "c.nrf_mpu_region0_ram_size_set"]], "nrf_mutex_lock (c function)": [[85, "c.nrf_mutex_lock"]], "nrf_mutex_unlock (c function)": [[85, "c.nrf_mutex_unlock"]], "nrf_mvdma_has_aximode (c macro)": [[87, "c.NRF_MVDMA_HAS_AXIMODE"]], "nrf_mvdma_has_multimode (c macro)": [[87, "c.NRF_MVDMA_HAS_MULTIMODE"]], "nrf_mvdma_has_new_ver (c macro)": [[87, "c.NRF_MVDMA_HAS_NEW_VER"]], "nrf_mvdma_activity_check (c function)": [[87, "c.nrf_mvdma_activity_check"]], "nrf_mvdma_aximode_set (c function)": [[87, "c.nrf_mvdma_aximode_set"]], "nrf_mvdma_aximode_t (c enum)": [[87, "c.nrf_mvdma_aximode_t"]], "nrf_mvdma_aximode_t.nrf_mvdma_aximode_axi (c enumerator)": [[87, "c.nrf_mvdma_aximode_t.NRF_MVDMA_AXIMODE_AXI"]], "nrf_mvdma_aximode_t.nrf_mvdma_aximode_axilite (c enumerator)": [[87, "c.nrf_mvdma_aximode_t.NRF_MVDMA_AXIMODE_AXILITE"]], "nrf_mvdma_crc_result_get (c function)": [[87, "c.nrf_mvdma_crc_result_get"]], "nrf_mvdma_event_address_get (c function)": [[87, "c.nrf_mvdma_event_address_get"]], "nrf_mvdma_event_check (c function)": [[87, "c.nrf_mvdma_event_check"]], "nrf_mvdma_event_clear (c function)": [[87, "c.nrf_mvdma_event_clear"]], "nrf_mvdma_event_t (c enum)": [[87, "c.nrf_mvdma_event_t"]], "nrf_mvdma_event_t.nrf_mvdma_event_end (c enumerator)": [[87, "c.nrf_mvdma_event_t.NRF_MVDMA_EVENT_END"]], "nrf_mvdma_event_t.nrf_mvdma_event_paused (c enumerator)": [[87, "c.nrf_mvdma_event_t.NRF_MVDMA_EVENT_PAUSED"]], "nrf_mvdma_event_t.nrf_mvdma_event_reset (c enumerator)": [[87, "c.nrf_mvdma_event_t.NRF_MVDMA_EVENT_RESET"]], "nrf_mvdma_event_t.nrf_mvdma_event_sinkbuserror (c enumerator)": [[87, "c.nrf_mvdma_event_t.NRF_MVDMA_EVENT_SINKBUSERROR"]], "nrf_mvdma_event_t.nrf_mvdma_event_sinkselectjobdone (c enumerator)": [[87, "c.nrf_mvdma_event_t.NRF_MVDMA_EVENT_SINKSELECTJOBDONE"]], "nrf_mvdma_event_t.nrf_mvdma_event_sourcebuserror (c enumerator)": [[87, "c.nrf_mvdma_event_t.NRF_MVDMA_EVENT_SOURCEBUSERROR"]], "nrf_mvdma_event_t.nrf_mvdma_event_sourceselectjobdone (c enumerator)": [[87, "c.nrf_mvdma_event_t.NRF_MVDMA_EVENT_SOURCESELECTJOBDONE"]], "nrf_mvdma_event_t.nrf_mvdma_event_started (c enumerator)": [[87, "c.nrf_mvdma_event_t.NRF_MVDMA_EVENT_STARTED"]], "nrf_mvdma_fifo_status_get (c function)": [[87, "c.nrf_mvdma_fifo_status_get"]], "nrf_mvdma_fifo_status_t (c enum)": [[87, "c.nrf_mvdma_fifo_status_t"]], "nrf_mvdma_fifo_status_t.nrf_mvdma_fifo_status_empty (c enumerator)": [[87, "c.nrf_mvdma_fifo_status_t.NRF_MVDMA_FIFO_STATUS_EMPTY"]], "nrf_mvdma_fifo_status_t.nrf_mvdma_fifo_status_full (c enumerator)": [[87, "c.nrf_mvdma_fifo_status_t.NRF_MVDMA_FIFO_STATUS_FULL"]], "nrf_mvdma_fifo_status_t.nrf_mvdma_fifo_status_not_empty (c enumerator)": [[87, "c.nrf_mvdma_fifo_status_t.NRF_MVDMA_FIFO_STATUS_NOT_EMPTY"]], "nrf_mvdma_int_disable (c function)": [[87, "c.nrf_mvdma_int_disable"]], "nrf_mvdma_int_enable (c function)": [[87, "c.nrf_mvdma_int_enable"]], "nrf_mvdma_int_enable_check (c function)": [[87, "c.nrf_mvdma_int_enable_check"]], "nrf_mvdma_int_mask_t (c enum)": [[87, "c.nrf_mvdma_int_mask_t"]], "nrf_mvdma_int_mask_t.nrf_mvdma_int_end_mask (c enumerator)": [[87, "c.nrf_mvdma_int_mask_t.NRF_MVDMA_INT_END_MASK"]], "nrf_mvdma_int_mask_t.nrf_mvdma_int_paused_mask (c enumerator)": [[87, "c.nrf_mvdma_int_mask_t.NRF_MVDMA_INT_PAUSED_MASK"]], "nrf_mvdma_int_mask_t.nrf_mvdma_int_reset_mask (c enumerator)": [[87, "c.nrf_mvdma_int_mask_t.NRF_MVDMA_INT_RESET_MASK"]], "nrf_mvdma_int_mask_t.nrf_mvdma_int_sinkbuserror_mask (c enumerator)": [[87, "c.nrf_mvdma_int_mask_t.NRF_MVDMA_INT_SINKBUSERROR_MASK"]], "nrf_mvdma_int_mask_t.nrf_mvdma_int_sinkselectjobdone_mask (c enumerator)": [[87, "c.nrf_mvdma_int_mask_t.NRF_MVDMA_INT_SINKSELECTJOBDONE_MASK"]], "nrf_mvdma_int_mask_t.nrf_mvdma_int_sourcebuserror_mask (c enumerator)": [[87, "c.nrf_mvdma_int_mask_t.NRF_MVDMA_INT_SOURCEBUSERROR_MASK"]], "nrf_mvdma_int_mask_t.nrf_mvdma_int_sourceselectjobdone_mask (c enumerator)": [[87, "c.nrf_mvdma_int_mask_t.NRF_MVDMA_INT_SOURCESELECTJOBDONE_MASK"]], "nrf_mvdma_int_mask_t.nrf_mvdma_int_started_mask (c enumerator)": [[87, "c.nrf_mvdma_int_mask_t.NRF_MVDMA_INT_STARTED_MASK"]], "nrf_mvdma_int_pending_get (c function)": [[87, "c.nrf_mvdma_int_pending_get"]], "nrf_mvdma_last_sink_address_get (c function)": [[87, "c.nrf_mvdma_last_sink_address_get"]], "nrf_mvdma_last_source_address_get (c function)": [[87, "c.nrf_mvdma_last_source_address_get"]], "nrf_mvdma_mode_set (c function)": [[87, "c.nrf_mvdma_mode_set"]], "nrf_mvdma_mode_t (c enum)": [[87, "c.nrf_mvdma_mode_t"]], "nrf_mvdma_mode_t.nrf_mvdma_mode_multi (c enumerator)": [[87, "c.nrf_mvdma_mode_t.NRF_MVDMA_MODE_MULTI"]], "nrf_mvdma_mode_t.nrf_mvdma_mode_single (c enumerator)": [[87, "c.nrf_mvdma_mode_t.NRF_MVDMA_MODE_SINGLE"]], "nrf_mvdma_publish_clear (c function)": [[87, "c.nrf_mvdma_publish_clear"]], "nrf_mvdma_publish_set (c function)": [[87, "c.nrf_mvdma_publish_set"]], "nrf_mvdma_sink_error_get (c function)": [[87, "c.nrf_mvdma_sink_error_get"]], "nrf_mvdma_sink_error_t (c enum)": [[87, "c.nrf_mvdma_sink_error_t"]], "nrf_mvdma_sink_error_t.nrf_mvdma_sink_error_decode_read (c enumerator)": [[87, "c.nrf_mvdma_sink_error_t.NRF_MVDMA_SINK_ERROR_DECODE_READ"]], "nrf_mvdma_sink_error_t.nrf_mvdma_sink_error_decode_write (c enumerator)": [[87, "c.nrf_mvdma_sink_error_t.NRF_MVDMA_SINK_ERROR_DECODE_WRITE"]], "nrf_mvdma_sink_error_t.nrf_mvdma_sink_error_none (c enumerator)": [[87, "c.nrf_mvdma_sink_error_t.NRF_MVDMA_SINK_ERROR_NONE"]], "nrf_mvdma_sink_error_t.nrf_mvdma_sink_error_read (c enumerator)": [[87, "c.nrf_mvdma_sink_error_t.NRF_MVDMA_SINK_ERROR_READ"]], "nrf_mvdma_sink_error_t.nrf_mvdma_sink_error_write (c enumerator)": [[87, "c.nrf_mvdma_sink_error_t.NRF_MVDMA_SINK_ERROR_WRITE"]], "nrf_mvdma_sink_job_count_get (c function)": [[87, "c.nrf_mvdma_sink_job_count_get"]], "nrf_mvdma_sink_list_ptr_get (c function)": [[87, "c.nrf_mvdma_sink_list_ptr_get"]], "nrf_mvdma_sink_list_ptr_set (c function)": [[87, "c.nrf_mvdma_sink_list_ptr_set"]], "nrf_mvdma_source_error_get (c function)": [[87, "c.nrf_mvdma_source_error_get"]], "nrf_mvdma_source_error_t (c enum)": [[87, "c.nrf_mvdma_source_error_t"]], "nrf_mvdma_source_error_t.nrf_mvdma_source_error_none (c enumerator)": [[87, "c.nrf_mvdma_source_error_t.NRF_MVDMA_SOURCE_ERROR_NONE"]], "nrf_mvdma_source_error_t.nrf_mvdma_source_error_read (c enumerator)": [[87, "c.nrf_mvdma_source_error_t.NRF_MVDMA_SOURCE_ERROR_READ"]], "nrf_mvdma_source_error_t.nrf_mvdma_source_error_read_decode (c enumerator)": [[87, "c.nrf_mvdma_source_error_t.NRF_MVDMA_SOURCE_ERROR_READ_DECODE"]], "nrf_mvdma_source_job_count_get (c function)": [[87, "c.nrf_mvdma_source_job_count_get"]], "nrf_mvdma_source_list_ptr_get (c function)": [[87, "c.nrf_mvdma_source_list_ptr_get"]], "nrf_mvdma_source_list_ptr_set (c function)": [[87, "c.nrf_mvdma_source_list_ptr_set"]], "nrf_mvdma_start_task_get (c function)": [[87, "c.nrf_mvdma_start_task_get"]], "nrf_mvdma_subscribe_clear (c function)": [[87, "c.nrf_mvdma_subscribe_clear"]], "nrf_mvdma_subscribe_set (c function)": [[87, "c.nrf_mvdma_subscribe_set"]], "nrf_mvdma_task_address_get (c function)": [[87, "c.nrf_mvdma_task_address_get"]], "nrf_mvdma_task_t (c enum)": [[87, "c.nrf_mvdma_task_t"]], "nrf_mvdma_task_t.nrf_mvdma_task_pause (c enumerator)": [[87, "c.nrf_mvdma_task_t.NRF_MVDMA_TASK_PAUSE"]], "nrf_mvdma_task_t.nrf_mvdma_task_reset (c enumerator)": [[87, "c.nrf_mvdma_task_t.NRF_MVDMA_TASK_RESET"]], "nrf_mvdma_task_t.nrf_mvdma_task_start0 (c enumerator)": [[87, "c.nrf_mvdma_task_t.NRF_MVDMA_TASK_START0"]], "nrf_mvdma_task_t.nrf_mvdma_task_start1 (c enumerator)": [[87, "c.nrf_mvdma_task_t.NRF_MVDMA_TASK_START1"]], "nrf_mvdma_task_t.nrf_mvdma_task_start2 (c enumerator)": [[87, "c.nrf_mvdma_task_t.NRF_MVDMA_TASK_START2"]], "nrf_mvdma_task_t.nrf_mvdma_task_start3 (c enumerator)": [[87, "c.nrf_mvdma_task_t.NRF_MVDMA_TASK_START3"]], "nrf_mvdma_task_t.nrf_mvdma_task_start4 (c enumerator)": [[87, "c.nrf_mvdma_task_t.NRF_MVDMA_TASK_START4"]], "nrf_mvdma_task_t.nrf_mvdma_task_start5 (c enumerator)": [[87, "c.nrf_mvdma_task_t.NRF_MVDMA_TASK_START5"]], "nrf_mvdma_task_t.nrf_mvdma_task_start6 (c enumerator)": [[87, "c.nrf_mvdma_task_t.NRF_MVDMA_TASK_START6"]], "nrf_mvdma_task_t.nrf_mvdma_task_start7 (c enumerator)": [[87, "c.nrf_mvdma_task_t.NRF_MVDMA_TASK_START7"]], "nrf_mvdma_task_trigger (c function)": [[87, "c.nrf_mvdma_task_trigger"]], "nrfy_mvdma_has_aximode (c macro)": [[88, "c.NRFY_MVDMA_HAS_AXIMODE"]], "nrfy_mvdma_has_new_ver (c macro)": [[88, "c.NRFY_MVDMA_HAS_NEW_VER"]], "nrfy_mvdma_abort (c function)": [[88, "c.nrfy_mvdma_abort"]], "nrfy_mvdma_activity_check (c function)": [[88, "c.nrfy_mvdma_activity_check"]], "nrfy_mvdma_aximode_set (c function)": [[88, "c.nrfy_mvdma_aximode_set"]], "nrfy_mvdma_crc_result_get (c function)": [[88, "c.nrfy_mvdma_crc_result_get"]], "nrfy_mvdma_event_address_get (c function)": [[88, "c.nrfy_mvdma_event_address_get"]], "nrfy_mvdma_event_check (c function)": [[88, "c.nrfy_mvdma_event_check"]], "nrfy_mvdma_event_clear (c function)": [[88, "c.nrfy_mvdma_event_clear"]], "nrfy_mvdma_events_process (c function)": [[88, "c.nrfy_mvdma_events_process"]], "nrfy_mvdma_fifo_status_get (c function)": [[88, "c.nrfy_mvdma_fifo_status_get"]], "nrfy_mvdma_int_disable (c function)": [[88, "c.nrfy_mvdma_int_disable"]], "nrfy_mvdma_int_enable (c function)": [[88, "c.nrfy_mvdma_int_enable"]], "nrfy_mvdma_int_enable_check (c function)": [[88, "c.nrfy_mvdma_int_enable_check"]], "nrfy_mvdma_int_init (c function)": [[88, "c.nrfy_mvdma_int_init"]], "nrfy_mvdma_int_pending_get (c function)": [[88, "c.nrfy_mvdma_int_pending_get"]], "nrfy_mvdma_int_uninit (c function)": [[88, "c.nrfy_mvdma_int_uninit"]], "nrfy_mvdma_job_list_set (c function)": [[88, "c.nrfy_mvdma_job_list_set"]], "nrfy_mvdma_last_sink_address_get (c function)": [[88, "c.nrfy_mvdma_last_sink_address_get"]], "nrfy_mvdma_last_source_address_get (c function)": [[88, "c.nrfy_mvdma_last_source_address_get"]], "nrfy_mvdma_list_desc_t (c struct)": [[88, "c.nrfy_mvdma_list_desc_t"]], "nrfy_mvdma_list_desc_t.job_count (c var)": [[88, "c.nrfy_mvdma_list_desc_t.job_count"]], "nrfy_mvdma_list_desc_t.last_addr (c var)": [[88, "c.nrfy_mvdma_list_desc_t.last_addr"]], "nrfy_mvdma_list_desc_t.p_jobs (c var)": [[88, "c.nrfy_mvdma_list_desc_t.p_jobs"]], "nrfy_mvdma_list_request_t (c struct)": [[88, "c.nrfy_mvdma_list_request_t"]], "nrfy_mvdma_list_request_t.p_sink_job_list (c var)": [[88, "c.nrfy_mvdma_list_request_t.p_sink_job_list"]], "nrfy_mvdma_list_request_t.p_source_job_list (c var)": [[88, "c.nrfy_mvdma_list_request_t.p_source_job_list"]], "nrfy_mvdma_mode_set (c function)": [[88, "c.nrfy_mvdma_mode_set"]], "nrfy_mvdma_multi_job_list_get (c function)": [[88, "c.nrfy_mvdma_multi_job_list_get"]], "nrfy_mvdma_multi_job_list_set (c function)": [[88, "c.nrfy_mvdma_multi_job_list_set"]], "nrfy_mvdma_multi_start (c function)": [[88, "c.nrfy_mvdma_multi_start"]], "nrfy_mvdma_publish_clear (c function)": [[88, "c.nrfy_mvdma_publish_clear"]], "nrfy_mvdma_publish_set (c function)": [[88, "c.nrfy_mvdma_publish_set"]], "nrfy_mvdma_reset (c function)": [[88, "c.nrfy_mvdma_reset"]], "nrfy_mvdma_sink_error_get (c function)": [[88, "c.nrfy_mvdma_sink_error_get"]], "nrfy_mvdma_sink_job_count_get (c function)": [[88, "c.nrfy_mvdma_sink_job_count_get"]], "nrfy_mvdma_sink_job_description_get (c function)": [[88, "c.nrfy_mvdma_sink_job_description_get"]], "nrfy_mvdma_sink_list_ptr_get (c function)": [[88, "c.nrfy_mvdma_sink_list_ptr_get"]], "nrfy_mvdma_sink_list_ptr_set (c function)": [[88, "c.nrfy_mvdma_sink_list_ptr_set"]], "nrfy_mvdma_source_error_get (c function)": [[88, "c.nrfy_mvdma_source_error_get"]], "nrfy_mvdma_source_job_count_get (c function)": [[88, "c.nrfy_mvdma_source_job_count_get"]], "nrfy_mvdma_source_job_description_get (c function)": [[88, "c.nrfy_mvdma_source_job_description_get"]], "nrfy_mvdma_source_list_ptr_get (c function)": [[88, "c.nrfy_mvdma_source_list_ptr_get"]], "nrfy_mvdma_source_list_ptr_set (c function)": [[88, "c.nrfy_mvdma_source_list_ptr_set"]], "nrfy_mvdma_start (c function)": [[88, "c.nrfy_mvdma_start"]], "nrfy_mvdma_start_task_get (c function)": [[88, "c.nrfy_mvdma_start_task_get"]], "nrfy_mvdma_subscribe_clear (c function)": [[88, "c.nrfy_mvdma_subscribe_clear"]], "nrfy_mvdma_subscribe_set (c function)": [[88, "c.nrfy_mvdma_subscribe_set"]], "nrfy_mvdma_task_address_get (c function)": [[88, "c.nrfy_mvdma_task_address_get"]], "nrfy_mvdma_task_trigger (c function)": [[88, "c.nrfy_mvdma_task_trigger"]], "nrf_mwu_event_address_get (c function)": [[90, "c.nrf_mwu_event_address_get"]], "nrf_mwu_event_check (c function)": [[90, "c.nrf_mwu_event_check"]], "nrf_mwu_event_clear (c function)": [[90, "c.nrf_mwu_event_clear"]], "nrf_mwu_event_t (c enum)": [[90, "c.nrf_mwu_event_t"]], "nrf_mwu_event_t.nrf_mwu_event_pregion0_read (c enumerator)": [[90, "c.nrf_mwu_event_t.NRF_MWU_EVENT_PREGION0_READ"]], "nrf_mwu_event_t.nrf_mwu_event_pregion0_write (c enumerator)": [[90, "c.nrf_mwu_event_t.NRF_MWU_EVENT_PREGION0_WRITE"]], "nrf_mwu_event_t.nrf_mwu_event_pregion1_read (c enumerator)": [[90, "c.nrf_mwu_event_t.NRF_MWU_EVENT_PREGION1_READ"]], "nrf_mwu_event_t.nrf_mwu_event_pregion1_write (c enumerator)": [[90, "c.nrf_mwu_event_t.NRF_MWU_EVENT_PREGION1_WRITE"]], "nrf_mwu_event_t.nrf_mwu_event_region0_read (c enumerator)": [[90, "c.nrf_mwu_event_t.NRF_MWU_EVENT_REGION0_READ"]], "nrf_mwu_event_t.nrf_mwu_event_region0_write (c enumerator)": [[90, "c.nrf_mwu_event_t.NRF_MWU_EVENT_REGION0_WRITE"]], "nrf_mwu_event_t.nrf_mwu_event_region1_read (c enumerator)": [[90, "c.nrf_mwu_event_t.NRF_MWU_EVENT_REGION1_READ"]], "nrf_mwu_event_t.nrf_mwu_event_region1_write (c enumerator)": [[90, "c.nrf_mwu_event_t.NRF_MWU_EVENT_REGION1_WRITE"]], "nrf_mwu_event_t.nrf_mwu_event_region2_read (c enumerator)": [[90, "c.nrf_mwu_event_t.NRF_MWU_EVENT_REGION2_READ"]], "nrf_mwu_event_t.nrf_mwu_event_region2_write (c enumerator)": [[90, "c.nrf_mwu_event_t.NRF_MWU_EVENT_REGION2_WRITE"]], "nrf_mwu_event_t.nrf_mwu_event_region3_read (c enumerator)": [[90, "c.nrf_mwu_event_t.NRF_MWU_EVENT_REGION3_READ"]], "nrf_mwu_event_t.nrf_mwu_event_region3_write (c enumerator)": [[90, "c.nrf_mwu_event_t.NRF_MWU_EVENT_REGION3_WRITE"]], "nrf_mwu_int_disable (c function)": [[90, "c.nrf_mwu_int_disable"]], "nrf_mwu_int_enable (c function)": [[90, "c.nrf_mwu_int_enable"]], "nrf_mwu_int_enable_check (c function)": [[90, "c.nrf_mwu_int_enable_check"]], "nrf_mwu_int_mask_t (c enum)": [[90, "c.nrf_mwu_int_mask_t"]], "nrf_mwu_int_mask_t.nrf_mwu_int_pregion0_read_mask (c enumerator)": [[90, "c.nrf_mwu_int_mask_t.NRF_MWU_INT_PREGION0_READ_MASK"]], "nrf_mwu_int_mask_t.nrf_mwu_int_pregion0_write_mask (c enumerator)": [[90, "c.nrf_mwu_int_mask_t.NRF_MWU_INT_PREGION0_WRITE_MASK"]], "nrf_mwu_int_mask_t.nrf_mwu_int_pregion1_read_mask (c enumerator)": [[90, "c.nrf_mwu_int_mask_t.NRF_MWU_INT_PREGION1_READ_MASK"]], "nrf_mwu_int_mask_t.nrf_mwu_int_pregion1_write_mask (c enumerator)": [[90, "c.nrf_mwu_int_mask_t.NRF_MWU_INT_PREGION1_WRITE_MASK"]], "nrf_mwu_int_mask_t.nrf_mwu_int_region0_read_mask (c enumerator)": [[90, "c.nrf_mwu_int_mask_t.NRF_MWU_INT_REGION0_READ_MASK"]], "nrf_mwu_int_mask_t.nrf_mwu_int_region0_write_mask (c enumerator)": [[90, "c.nrf_mwu_int_mask_t.NRF_MWU_INT_REGION0_WRITE_MASK"]], "nrf_mwu_int_mask_t.nrf_mwu_int_region1_read_mask (c enumerator)": [[90, "c.nrf_mwu_int_mask_t.NRF_MWU_INT_REGION1_READ_MASK"]], "nrf_mwu_int_mask_t.nrf_mwu_int_region1_write_mask (c enumerator)": [[90, "c.nrf_mwu_int_mask_t.NRF_MWU_INT_REGION1_WRITE_MASK"]], "nrf_mwu_int_mask_t.nrf_mwu_int_region2_read_mask (c enumerator)": [[90, "c.nrf_mwu_int_mask_t.NRF_MWU_INT_REGION2_READ_MASK"]], "nrf_mwu_int_mask_t.nrf_mwu_int_region2_write_mask (c enumerator)": [[90, "c.nrf_mwu_int_mask_t.NRF_MWU_INT_REGION2_WRITE_MASK"]], "nrf_mwu_int_mask_t.nrf_mwu_int_region3_read_mask (c enumerator)": [[90, "c.nrf_mwu_int_mask_t.NRF_MWU_INT_REGION3_READ_MASK"]], "nrf_mwu_int_mask_t.nrf_mwu_int_region3_write_mask (c enumerator)": [[90, "c.nrf_mwu_int_mask_t.NRF_MWU_INT_REGION3_WRITE_MASK"]], "nrf_mwu_nmi_disable (c function)": [[90, "c.nrf_mwu_nmi_disable"]], "nrf_mwu_nmi_enable (c function)": [[90, "c.nrf_mwu_nmi_enable"]], "nrf_mwu_nmi_enable_check (c function)": [[90, "c.nrf_mwu_nmi_enable_check"]], "nrf_mwu_region_watch_disable (c function)": [[90, "c.nrf_mwu_region_watch_disable"]], "nrf_mwu_region_watch_enable (c function)": [[90, "c.nrf_mwu_region_watch_enable"]], "nrf_mwu_region_watch_get (c function)": [[90, "c.nrf_mwu_region_watch_get"]], "nrf_mwu_region_watch_t (c enum)": [[90, "c.nrf_mwu_region_watch_t"]], "nrf_mwu_region_watch_t.nrf_mwu_watch_pregion0_read (c enumerator)": [[90, "c.nrf_mwu_region_watch_t.NRF_MWU_WATCH_PREGION0_READ"]], "nrf_mwu_region_watch_t.nrf_mwu_watch_pregion0_write (c enumerator)": [[90, "c.nrf_mwu_region_watch_t.NRF_MWU_WATCH_PREGION0_WRITE"]], "nrf_mwu_region_watch_t.nrf_mwu_watch_pregion1_read (c enumerator)": [[90, "c.nrf_mwu_region_watch_t.NRF_MWU_WATCH_PREGION1_READ"]], "nrf_mwu_region_watch_t.nrf_mwu_watch_pregion1_write (c enumerator)": [[90, "c.nrf_mwu_region_watch_t.NRF_MWU_WATCH_PREGION1_WRITE"]], "nrf_mwu_region_watch_t.nrf_mwu_watch_region0_read (c enumerator)": [[90, "c.nrf_mwu_region_watch_t.NRF_MWU_WATCH_REGION0_READ"]], "nrf_mwu_region_watch_t.nrf_mwu_watch_region0_write (c enumerator)": [[90, "c.nrf_mwu_region_watch_t.NRF_MWU_WATCH_REGION0_WRITE"]], "nrf_mwu_region_watch_t.nrf_mwu_watch_region1_read (c enumerator)": [[90, "c.nrf_mwu_region_watch_t.NRF_MWU_WATCH_REGION1_READ"]], "nrf_mwu_region_watch_t.nrf_mwu_watch_region1_write (c enumerator)": [[90, "c.nrf_mwu_region_watch_t.NRF_MWU_WATCH_REGION1_WRITE"]], "nrf_mwu_region_watch_t.nrf_mwu_watch_region2_read (c enumerator)": [[90, "c.nrf_mwu_region_watch_t.NRF_MWU_WATCH_REGION2_READ"]], "nrf_mwu_region_watch_t.nrf_mwu_watch_region2_write (c enumerator)": [[90, "c.nrf_mwu_region_watch_t.NRF_MWU_WATCH_REGION2_WRITE"]], "nrf_mwu_region_watch_t.nrf_mwu_watch_region3_read (c enumerator)": [[90, "c.nrf_mwu_region_watch_t.NRF_MWU_WATCH_REGION3_READ"]], "nrf_mwu_region_watch_t.nrf_mwu_watch_region3_write (c enumerator)": [[90, "c.nrf_mwu_region_watch_t.NRF_MWU_WATCH_REGION3_WRITE"]], "nrf_mwu_subregions_configure (c function)": [[90, "c.nrf_mwu_subregions_configure"]], "nrf_mwu_subregions_read_accesses_clear (c function)": [[90, "c.nrf_mwu_subregions_read_accesses_clear"]], "nrf_mwu_subregions_read_accesses_get (c function)": [[90, "c.nrf_mwu_subregions_read_accesses_get"]], "nrf_mwu_subregions_write_accesses_clear (c function)": [[90, "c.nrf_mwu_subregions_write_accesses_clear"]], "nrf_mwu_subregions_write_accesses_get (c function)": [[90, "c.nrf_mwu_subregions_write_accesses_get"]], "nrf_mwu_user_region_range_set (c function)": [[90, "c.nrf_mwu_user_region_range_set"]], "nrfx_nfct_nfcid1_default_len (c macro)": [[92, "c.NRFX_NFCT_NFCID1_DEFAULT_LEN"]], "nrfx_nfct_nfcid1_double_size (c macro)": [[92, "c.NRFX_NFCT_NFCID1_DOUBLE_SIZE"]], "nrfx_nfct_nfcid1_single_size (c macro)": [[92, "c.NRFX_NFCT_NFCID1_SINGLE_SIZE"]], "nrfx_nfct_nfcid1_triple_size (c macro)": [[92, "c.NRFX_NFCT_NFCID1_TRIPLE_SIZE"]], "nrfx_nfct_active_state_t (c enum)": [[92, "c.nrfx_nfct_active_state_t"]], "nrfx_nfct_active_state_t.nrfx_nfct_active_state_default (c enumerator)": [[92, "c.nrfx_nfct_active_state_t.NRFX_NFCT_ACTIVE_STATE_DEFAULT"]], "nrfx_nfct_active_state_t.nrfx_nfct_active_state_idle (c enumerator)": [[92, "c.nrfx_nfct_active_state_t.NRFX_NFCT_ACTIVE_STATE_IDLE"]], "nrfx_nfct_active_state_t.nrfx_nfct_active_state_sleep (c enumerator)": [[92, "c.nrfx_nfct_active_state_t.NRFX_NFCT_ACTIVE_STATE_SLEEP"]], "nrfx_nfct_autocolres_disable (c function)": [[92, "c.nrfx_nfct_autocolres_disable"]], "nrfx_nfct_autocolres_enable (c function)": [[92, "c.nrfx_nfct_autocolres_enable"]], "nrfx_nfct_bits_tx (c function)": [[92, "c.nrfx_nfct_bits_tx"]], "nrfx_nfct_config_t (c struct)": [[92, "c.nrfx_nfct_config_t"]], "nrfx_nfct_config_t.cb (c var)": [[92, "c.nrfx_nfct_config_t.cb"]], "nrfx_nfct_config_t.irq_priority (c var)": [[92, "c.nrfx_nfct_config_t.irq_priority"]], "nrfx_nfct_config_t.rxtx_int_mask (c var)": [[92, "c.nrfx_nfct_config_t.rxtx_int_mask"]], "nrfx_nfct_data_desc_t (c struct)": [[92, "c.nrfx_nfct_data_desc_t"]], "nrfx_nfct_data_desc_t.data_size (c var)": [[92, "c.nrfx_nfct_data_desc_t.data_size"]], "nrfx_nfct_data_desc_t.p_data (c var)": [[92, "c.nrfx_nfct_data_desc_t.p_data"]], "nrfx_nfct_disable (c function)": [[92, "c.nrfx_nfct_disable"]], "nrfx_nfct_enable (c function)": [[92, "c.nrfx_nfct_enable"]], "nrfx_nfct_error_t (c enum)": [[92, "c.nrfx_nfct_error_t"]], "nrfx_nfct_error_t.nrfx_nfct_error_framedelaytimeout (c enumerator)": [[92, "c.nrfx_nfct_error_t.NRFX_NFCT_ERROR_FRAMEDELAYTIMEOUT"]], "nrfx_nfct_error_t.nrfx_nfct_error_num (c enumerator)": [[92, "c.nrfx_nfct_error_t.NRFX_NFCT_ERROR_NUM"]], "nrfx_nfct_evt_error_t (c struct)": [[92, "c.nrfx_nfct_evt_error_t"]], "nrfx_nfct_evt_error_t.reason (c var)": [[92, "c.nrfx_nfct_evt_error_t.reason"]], "nrfx_nfct_evt_id_t (c enum)": [[92, "c.nrfx_nfct_evt_id_t"]], "nrfx_nfct_evt_id_t.nrfx_nfct_evt_error (c enumerator)": [[92, "c.nrfx_nfct_evt_id_t.NRFX_NFCT_EVT_ERROR"]], "nrfx_nfct_evt_id_t.nrfx_nfct_evt_field_detected (c enumerator)": [[92, "c.nrfx_nfct_evt_id_t.NRFX_NFCT_EVT_FIELD_DETECTED"]], "nrfx_nfct_evt_id_t.nrfx_nfct_evt_field_lost (c enumerator)": [[92, "c.nrfx_nfct_evt_id_t.NRFX_NFCT_EVT_FIELD_LOST"]], "nrfx_nfct_evt_id_t.nrfx_nfct_evt_rx_frameend (c enumerator)": [[92, "c.nrfx_nfct_evt_id_t.NRFX_NFCT_EVT_RX_FRAMEEND"]], "nrfx_nfct_evt_id_t.nrfx_nfct_evt_rx_framestart (c enumerator)": [[92, "c.nrfx_nfct_evt_id_t.NRFX_NFCT_EVT_RX_FRAMESTART"]], "nrfx_nfct_evt_id_t.nrfx_nfct_evt_selected (c enumerator)": [[92, "c.nrfx_nfct_evt_id_t.NRFX_NFCT_EVT_SELECTED"]], "nrfx_nfct_evt_id_t.nrfx_nfct_evt_tx_frameend (c enumerator)": [[92, "c.nrfx_nfct_evt_id_t.NRFX_NFCT_EVT_TX_FRAMEEND"]], "nrfx_nfct_evt_id_t.nrfx_nfct_evt_tx_framestart (c enumerator)": [[92, "c.nrfx_nfct_evt_id_t.NRFX_NFCT_EVT_TX_FRAMESTART"]], "nrfx_nfct_evt_rx_frameend_t (c struct)": [[92, "c.nrfx_nfct_evt_rx_frameend_t"]], "nrfx_nfct_evt_rx_frameend_t.rx_data (c var)": [[92, "c.nrfx_nfct_evt_rx_frameend_t.rx_data"]], "nrfx_nfct_evt_rx_frameend_t.rx_status (c var)": [[92, "c.nrfx_nfct_evt_rx_frameend_t.rx_status"]], "nrfx_nfct_evt_t (c struct)": [[92, "c.nrfx_nfct_evt_t"]], "nrfx_nfct_evt_t.error (c var)": [[92, "c.nrfx_nfct_evt_t.error"]], "nrfx_nfct_evt_t.evt_id (c var)": [[92, "c.nrfx_nfct_evt_t.evt_id"]], "nrfx_nfct_evt_t.params (c var)": [[92, "c.nrfx_nfct_evt_t.params"]], "nrfx_nfct_evt_t.rx_frameend (c var)": [[92, "c.nrfx_nfct_evt_t.rx_frameend"]], "nrfx_nfct_evt_t.tx_framestart (c var)": [[92, "c.nrfx_nfct_evt_t.tx_framestart"]], "nrfx_nfct_evt_tx_framestart_t (c struct)": [[92, "c.nrfx_nfct_evt_tx_framestart_t"]], "nrfx_nfct_evt_tx_framestart_t.tx_data (c var)": [[92, "c.nrfx_nfct_evt_tx_framestart_t.tx_data"]], "nrfx_nfct_field_check (c function)": [[92, "c.nrfx_nfct_field_check"]], "nrfx_nfct_handler_t (c type)": [[92, "c.nrfx_nfct_handler_t"]], "nrfx_nfct_init (c function)": [[92, "c.nrfx_nfct_init"]], "nrfx_nfct_init_check (c function)": [[92, "c.nrfx_nfct_init_check"]], "nrfx_nfct_init_substate_force (c function)": [[92, "c.nrfx_nfct_init_substate_force"]], "nrfx_nfct_nfcid1_default_bytes_get (c function)": [[92, "c.nrfx_nfct_nfcid1_default_bytes_get"]], "nrfx_nfct_nfcid1_t (c struct)": [[92, "c.nrfx_nfct_nfcid1_t"]], "nrfx_nfct_nfcid1_t.id_size (c var)": [[92, "c.nrfx_nfct_nfcid1_t.id_size"]], "nrfx_nfct_nfcid1_t.p_id (c var)": [[92, "c.nrfx_nfct_nfcid1_t.p_id"]], "nrfx_nfct_param_id_t (c enum)": [[92, "c.nrfx_nfct_param_id_t"]], "nrfx_nfct_param_id_t.nrfx_nfct_param_id_fdt (c enumerator)": [[92, "c.nrfx_nfct_param_id_t.NRFX_NFCT_PARAM_ID_FDT"]], "nrfx_nfct_param_id_t.nrfx_nfct_param_id_fdt_min (c enumerator)": [[92, "c.nrfx_nfct_param_id_t.NRFX_NFCT_PARAM_ID_FDT_MIN"]], "nrfx_nfct_param_id_t.nrfx_nfct_param_id_nfcid1 (c enumerator)": [[92, "c.nrfx_nfct_param_id_t.NRFX_NFCT_PARAM_ID_NFCID1"]], "nrfx_nfct_param_id_t.nrfx_nfct_param_id_sel_res (c enumerator)": [[92, "c.nrfx_nfct_param_id_t.NRFX_NFCT_PARAM_ID_SEL_RES"]], "nrfx_nfct_param_t (c struct)": [[92, "c.nrfx_nfct_param_t"]], "nrfx_nfct_param_t.data (c var)": [[92, "c.nrfx_nfct_param_t.data"]], "nrfx_nfct_param_t.fdt (c var)": [[92, "c.nrfx_nfct_param_t.fdt"]], "nrfx_nfct_param_t.fdt_min (c var)": [[92, "c.nrfx_nfct_param_t.fdt_min"]], "nrfx_nfct_param_t.id (c var)": [[92, "c.nrfx_nfct_param_t.id"]], "nrfx_nfct_param_t.nfcid1 (c var)": [[92, "c.nrfx_nfct_param_t.nfcid1"]], "nrfx_nfct_param_t.sel_res_protocol (c var)": [[92, "c.nrfx_nfct_param_t.sel_res_protocol"]], "nrfx_nfct_parameter_set (c function)": [[92, "c.nrfx_nfct_parameter_set"]], "nrfx_nfct_rx (c function)": [[92, "c.nrfx_nfct_rx"]], "nrfx_nfct_state_force (c function)": [[92, "c.nrfx_nfct_state_force"]], "nrfx_nfct_state_t (c enum)": [[92, "c.nrfx_nfct_state_t"]], "nrfx_nfct_state_t.nrfx_nfct_state_activated (c enumerator)": [[92, "c.nrfx_nfct_state_t.NRFX_NFCT_STATE_ACTIVATED"]], "nrfx_nfct_state_t.nrfx_nfct_state_disabled (c enumerator)": [[92, "c.nrfx_nfct_state_t.NRFX_NFCT_STATE_DISABLED"]], "nrfx_nfct_state_t.nrfx_nfct_state_sensing (c enumerator)": [[92, "c.nrfx_nfct_state_t.NRFX_NFCT_STATE_SENSING"]], "nrfx_nfct_tx (c function)": [[92, "c.nrfx_nfct_tx"]], "nrfx_nfct_uninit (c function)": [[92, "c.nrfx_nfct_uninit"]], "nrf_nfcid1_has_new_layout (c macro)": [[93, "c.NRF_NFCID1_HAS_NEW_LAYOUT"]], "nrf_nfct_crc_size (c macro)": [[93, "c.NRF_NFCT_CRC_SIZE"]], "nrf_nfct_disable_all_int (c macro)": [[93, "c.NRF_NFCT_DISABLE_ALL_INT"]], "nrf_nfct_frame_delay_max_max_value (c macro)": [[93, "c.NRF_NFCT_FRAME_DELAY_MAX_MAX_VALUE"]], "nrf_nfct_has_autocolres_config_reg (c macro)": [[93, "c.NRF_NFCT_HAS_AUTOCOLRES_CONFIG_REG"]], "nrf_nfct_has_bias_config_trim_reg (c macro)": [[93, "c.NRF_NFCT_HAS_BIAS_CONFIG_TRIM_REG"]], "nrf_nfct_has_modulation_ctrl_reg (c macro)": [[93, "c.NRF_NFCT_HAS_MODULATION_CTRL_REG"]], "nrf_nfct_has_modulation_psel_reg (c macro)": [[93, "c.NRF_NFCT_HAS_MODULATION_PSEL_REG"]], "nrf_nfct_has_pad_config_reg (c macro)": [[93, "c.NRF_NFCT_HAS_PAD_CONFIG_REG"]], "nrf_nfct_has_sleep_state_reg (c macro)": [[93, "c.NRF_NFCT_HAS_SLEEP_STATE_REG"]], "nrf_nfct_has_stoptx_task (c macro)": [[93, "c.NRF_NFCT_HAS_STOPTX_TASK"]], "nrf_nfct_has_tag_state_reg (c macro)": [[93, "c.NRF_NFCT_HAS_TAG_STATE_REG"]], "nrf_nfct_mod_ctrl_pin_not_connected (c macro)": [[93, "c.NRF_NFCT_MOD_CTRL_PIN_NOT_CONNECTED"]], "nrf_nfct_autocolres_disable (c function)": [[93, "c.nrf_nfct_autocolres_disable"]], "nrf_nfct_autocolres_enable (c function)": [[93, "c.nrf_nfct_autocolres_enable"]], "nrf_nfct_autocolres_is_enabled (c function)": [[93, "c.nrf_nfct_autocolres_is_enabled"]], "nrf_nfct_bias_config_get (c function)": [[93, "c.nrf_nfct_bias_config_get"]], "nrf_nfct_bias_config_set (c function)": [[93, "c.nrf_nfct_bias_config_set"]], "nrf_nfct_bias_config_t (c struct)": [[93, "c.nrf_nfct_bias_config_t"]], "nrf_nfct_bias_config_t.coarse_ibpsr (c var)": [[93, "c.nrf_nfct_bias_config_t.coarse_ibpsr"]], "nrf_nfct_bias_config_t.reference_volatge (c var)": [[93, "c.nrf_nfct_bias_config_t.reference_volatge"]], "nrf_nfct_bias_config_t.spare (c var)": [[93, "c.nrf_nfct_bias_config_t.spare"]], "nrf_nfct_bias_config_t.trim_ibpsr (c var)": [[93, "c.nrf_nfct_bias_config_t.trim_ibpsr"]], "nrf_nfct_error_status_clear (c function)": [[93, "c.nrf_nfct_error_status_clear"]], "nrf_nfct_error_status_get (c function)": [[93, "c.nrf_nfct_error_status_get"]], "nrf_nfct_error_status_t (c enum)": [[93, "c.nrf_nfct_error_status_t"]], "nrf_nfct_error_status_t.nrf_nfct_error_framedelaytimeout_mask (c enumerator)": [[93, "c.nrf_nfct_error_status_t.NRF_NFCT_ERROR_FRAMEDELAYTIMEOUT_MASK"]], "nrf_nfct_error_status_t.nrf_nfct_error_nfcfieldtoostrong_mask (c enumerator)": [[93, "c.nrf_nfct_error_status_t.NRF_NFCT_ERROR_NFCFIELDTOOSTRONG_MASK"]], "nrf_nfct_error_status_t.nrf_nfct_error_nfcfieldtooweak_mask (c enumerator)": [[93, "c.nrf_nfct_error_status_t.NRF_NFCT_ERROR_NFCFIELDTOOWEAK_MASK"]], "nrf_nfct_event_address_get (c function)": [[93, "c.nrf_nfct_event_address_get"]], "nrf_nfct_event_check (c function)": [[93, "c.nrf_nfct_event_check"]], "nrf_nfct_event_clear (c function)": [[93, "c.nrf_nfct_event_clear"]], "nrf_nfct_event_t (c enum)": [[93, "c.nrf_nfct_event_t"]], "nrf_nfct_event_t.nrf_nfct_event_autocolresstarted (c enumerator)": [[93, "c.nrf_nfct_event_t.NRF_NFCT_EVENT_AUTOCOLRESSTARTED"]], "nrf_nfct_event_t.nrf_nfct_event_collision (c enumerator)": [[93, "c.nrf_nfct_event_t.NRF_NFCT_EVENT_COLLISION"]], "nrf_nfct_event_t.nrf_nfct_event_endrx (c enumerator)": [[93, "c.nrf_nfct_event_t.NRF_NFCT_EVENT_ENDRX"]], "nrf_nfct_event_t.nrf_nfct_event_endtx (c enumerator)": [[93, "c.nrf_nfct_event_t.NRF_NFCT_EVENT_ENDTX"]], "nrf_nfct_event_t.nrf_nfct_event_error (c enumerator)": [[93, "c.nrf_nfct_event_t.NRF_NFCT_EVENT_ERROR"]], "nrf_nfct_event_t.nrf_nfct_event_fielddetected (c enumerator)": [[93, "c.nrf_nfct_event_t.NRF_NFCT_EVENT_FIELDDETECTED"]], "nrf_nfct_event_t.nrf_nfct_event_fieldlost (c enumerator)": [[93, "c.nrf_nfct_event_t.NRF_NFCT_EVENT_FIELDLOST"]], "nrf_nfct_event_t.nrf_nfct_event_ready (c enumerator)": [[93, "c.nrf_nfct_event_t.NRF_NFCT_EVENT_READY"]], "nrf_nfct_event_t.nrf_nfct_event_rxerror (c enumerator)": [[93, "c.nrf_nfct_event_t.NRF_NFCT_EVENT_RXERROR"]], "nrf_nfct_event_t.nrf_nfct_event_rxframeend (c enumerator)": [[93, "c.nrf_nfct_event_t.NRF_NFCT_EVENT_RXFRAMEEND"]], "nrf_nfct_event_t.nrf_nfct_event_rxframestart (c enumerator)": [[93, "c.nrf_nfct_event_t.NRF_NFCT_EVENT_RXFRAMESTART"]], "nrf_nfct_event_t.nrf_nfct_event_selected (c enumerator)": [[93, "c.nrf_nfct_event_t.NRF_NFCT_EVENT_SELECTED"]], "nrf_nfct_event_t.nrf_nfct_event_started (c enumerator)": [[93, "c.nrf_nfct_event_t.NRF_NFCT_EVENT_STARTED"]], "nrf_nfct_event_t.nrf_nfct_event_txframeend (c enumerator)": [[93, "c.nrf_nfct_event_t.NRF_NFCT_EVENT_TXFRAMEEND"]], "nrf_nfct_event_t.nrf_nfct_event_txframestart (c enumerator)": [[93, "c.nrf_nfct_event_t.NRF_NFCT_EVENT_TXFRAMESTART"]], "nrf_nfct_field_state_t (c enum)": [[93, "c.nrf_nfct_field_state_t"]], "nrf_nfct_field_state_t.nrf_nfct_field_state_lock_mask (c enumerator)": [[93, "c.nrf_nfct_field_state_t.NRF_NFCT_FIELD_STATE_LOCK_MASK"]], "nrf_nfct_field_state_t.nrf_nfct_field_state_present_mask (c enumerator)": [[93, "c.nrf_nfct_field_state_t.NRF_NFCT_FIELD_STATE_PRESENT_MASK"]], "nrf_nfct_field_status_get (c function)": [[93, "c.nrf_nfct_field_status_get"]], "nrf_nfct_frame_delay_max_get (c function)": [[93, "c.nrf_nfct_frame_delay_max_get"]], "nrf_nfct_frame_delay_max_set (c function)": [[93, "c.nrf_nfct_frame_delay_max_set"]], "nrf_nfct_frame_delay_min_get (c function)": [[93, "c.nrf_nfct_frame_delay_min_get"]], "nrf_nfct_frame_delay_min_set (c function)": [[93, "c.nrf_nfct_frame_delay_min_set"]], "nrf_nfct_frame_delay_mode_get (c function)": [[93, "c.nrf_nfct_frame_delay_mode_get"]], "nrf_nfct_frame_delay_mode_set (c function)": [[93, "c.nrf_nfct_frame_delay_mode_set"]], "nrf_nfct_frame_delay_mode_t (c enum)": [[93, "c.nrf_nfct_frame_delay_mode_t"]], "nrf_nfct_frame_delay_mode_t.nrf_nfct_frame_delay_mode_exactval (c enumerator)": [[93, "c.nrf_nfct_frame_delay_mode_t.NRF_NFCT_FRAME_DELAY_MODE_EXACTVAL"]], "nrf_nfct_frame_delay_mode_t.nrf_nfct_frame_delay_mode_freerun (c enumerator)": [[93, "c.nrf_nfct_frame_delay_mode_t.NRF_NFCT_FRAME_DELAY_MODE_FREERUN"]], "nrf_nfct_frame_delay_mode_t.nrf_nfct_frame_delay_mode_window (c enumerator)": [[93, "c.nrf_nfct_frame_delay_mode_t.NRF_NFCT_FRAME_DELAY_MODE_WINDOW"]], "nrf_nfct_frame_delay_mode_t.nrf_nfct_frame_delay_mode_windowgrid (c enumerator)": [[93, "c.nrf_nfct_frame_delay_mode_t.NRF_NFCT_FRAME_DELAY_MODE_WINDOWGRID"]], "nrf_nfct_int_disable (c function)": [[93, "c.nrf_nfct_int_disable"]], "nrf_nfct_int_enable (c function)": [[93, "c.nrf_nfct_int_enable"]], "nrf_nfct_int_enable_check (c function)": [[93, "c.nrf_nfct_int_enable_check"]], "nrf_nfct_int_enable_get (c function)": [[93, "c.nrf_nfct_int_enable_get"]], "nrf_nfct_int_mask_t (c enum)": [[93, "c.nrf_nfct_int_mask_t"]], "nrf_nfct_int_mask_t.nrf_nfct_int_autocolresstarted_mask (c enumerator)": [[93, "c.nrf_nfct_int_mask_t.NRF_NFCT_INT_AUTOCOLRESSTARTED_MASK"]], "nrf_nfct_int_mask_t.nrf_nfct_int_collision_mask (c enumerator)": [[93, "c.nrf_nfct_int_mask_t.NRF_NFCT_INT_COLLISION_MASK"]], "nrf_nfct_int_mask_t.nrf_nfct_int_endrx_mask (c enumerator)": [[93, "c.nrf_nfct_int_mask_t.NRF_NFCT_INT_ENDRX_MASK"]], "nrf_nfct_int_mask_t.nrf_nfct_int_endtx_mask (c enumerator)": [[93, "c.nrf_nfct_int_mask_t.NRF_NFCT_INT_ENDTX_MASK"]], "nrf_nfct_int_mask_t.nrf_nfct_int_error_mask (c enumerator)": [[93, "c.nrf_nfct_int_mask_t.NRF_NFCT_INT_ERROR_MASK"]], "nrf_nfct_int_mask_t.nrf_nfct_int_fielddetected_mask (c enumerator)": [[93, "c.nrf_nfct_int_mask_t.NRF_NFCT_INT_FIELDDETECTED_MASK"]], "nrf_nfct_int_mask_t.nrf_nfct_int_fieldlost_mask (c enumerator)": [[93, "c.nrf_nfct_int_mask_t.NRF_NFCT_INT_FIELDLOST_MASK"]], "nrf_nfct_int_mask_t.nrf_nfct_int_ready_mask (c enumerator)": [[93, "c.nrf_nfct_int_mask_t.NRF_NFCT_INT_READY_MASK"]], "nrf_nfct_int_mask_t.nrf_nfct_int_rxerror_mask (c enumerator)": [[93, "c.nrf_nfct_int_mask_t.NRF_NFCT_INT_RXERROR_MASK"]], "nrf_nfct_int_mask_t.nrf_nfct_int_rxframeend_mask (c enumerator)": [[93, "c.nrf_nfct_int_mask_t.NRF_NFCT_INT_RXFRAMEEND_MASK"]], "nrf_nfct_int_mask_t.nrf_nfct_int_rxframestart_mask (c enumerator)": [[93, "c.nrf_nfct_int_mask_t.NRF_NFCT_INT_RXFRAMESTART_MASK"]], "nrf_nfct_int_mask_t.nrf_nfct_int_selected_mask (c enumerator)": [[93, "c.nrf_nfct_int_mask_t.NRF_NFCT_INT_SELECTED_MASK"]], "nrf_nfct_int_mask_t.nrf_nfct_int_started_mask (c enumerator)": [[93, "c.nrf_nfct_int_mask_t.NRF_NFCT_INT_STARTED_MASK"]], "nrf_nfct_int_mask_t.nrf_nfct_int_txframeend_mask (c enumerator)": [[93, "c.nrf_nfct_int_mask_t.NRF_NFCT_INT_TXFRAMEEND_MASK"]], "nrf_nfct_int_mask_t.nrf_nfct_int_txframestart_mask (c enumerator)": [[93, "c.nrf_nfct_int_mask_t.NRF_NFCT_INT_TXFRAMESTART_MASK"]], "nrf_nfct_max_rxtx_length_get (c function)": [[93, "c.nrf_nfct_max_rxtx_length_get"]], "nrf_nfct_mod_ctrl_pin_get (c function)": [[93, "c.nrf_nfct_mod_ctrl_pin_get"]], "nrf_nfct_mod_ctrl_pin_set (c function)": [[93, "c.nrf_nfct_mod_ctrl_pin_set"]], "nrf_nfct_modulation_ctrl_t (c enum)": [[93, "c.nrf_nfct_modulation_ctrl_t"]], "nrf_nfct_modulation_ctrl_t.nrf_nfct_modulation_ctrl_gpio (c enumerator)": [[93, "c.nrf_nfct_modulation_ctrl_t.NRF_NFCT_MODULATION_CTRL_GPIO"]], "nrf_nfct_modulation_ctrl_t.nrf_nfct_modulation_ctrl_internal (c enumerator)": [[93, "c.nrf_nfct_modulation_ctrl_t.NRF_NFCT_MODULATION_CTRL_INTERNAL"]], "nrf_nfct_modulation_ctrl_t.nrf_nfct_modulation_ctrl_internal_gpio (c enumerator)": [[93, "c.nrf_nfct_modulation_ctrl_t.NRF_NFCT_MODULATION_CTRL_INTERNAL_GPIO"]], "nrf_nfct_modulation_ctrl_t.nrf_nfct_modulation_ctrl_invalid (c enumerator)": [[93, "c.nrf_nfct_modulation_ctrl_t.NRF_NFCT_MODULATION_CTRL_INVALID"]], "nrf_nfct_modulation_output_get (c function)": [[93, "c.nrf_nfct_modulation_output_get"]], "nrf_nfct_modulation_output_set (c function)": [[93, "c.nrf_nfct_modulation_output_set"]], "nrf_nfct_nfcid1_get (c function)": [[93, "c.nrf_nfct_nfcid1_get"]], "nrf_nfct_nfcid1_set (c function)": [[93, "c.nrf_nfct_nfcid1_set"]], "nrf_nfct_pad_config_enable_check (c function)": [[93, "c.nrf_nfct_pad_config_enable_check"]], "nrf_nfct_pad_config_enable_set (c function)": [[93, "c.nrf_nfct_pad_config_enable_set"]], "nrf_nfct_rx_bits_get (c function)": [[93, "c.nrf_nfct_rx_bits_get"]], "nrf_nfct_rx_frame_config_get (c function)": [[93, "c.nrf_nfct_rx_frame_config_get"]], "nrf_nfct_rx_frame_config_set (c function)": [[93, "c.nrf_nfct_rx_frame_config_set"]], "nrf_nfct_rx_frame_config_t (c enum)": [[93, "c.nrf_nfct_rx_frame_config_t"]], "nrf_nfct_rx_frame_config_t.nrf_nfct_rx_frame_config_crc16 (c enumerator)": [[93, "c.nrf_nfct_rx_frame_config_t.NRF_NFCT_RX_FRAME_CONFIG_CRC16"]], "nrf_nfct_rx_frame_config_t.nrf_nfct_rx_frame_config_parity (c enumerator)": [[93, "c.nrf_nfct_rx_frame_config_t.NRF_NFCT_RX_FRAME_CONFIG_PARITY"]], "nrf_nfct_rx_frame_config_t.nrf_nfct_rx_frame_config_sof (c enumerator)": [[93, "c.nrf_nfct_rx_frame_config_t.NRF_NFCT_RX_FRAME_CONFIG_SOF"]], "nrf_nfct_rx_frame_status_clear (c function)": [[93, "c.nrf_nfct_rx_frame_status_clear"]], "nrf_nfct_rx_frame_status_get (c function)": [[93, "c.nrf_nfct_rx_frame_status_get"]], "nrf_nfct_rx_frame_status_t (c enum)": [[93, "c.nrf_nfct_rx_frame_status_t"]], "nrf_nfct_rx_frame_status_t.nrf_nfct_rx_frame_status_crc_mask (c enumerator)": [[93, "c.nrf_nfct_rx_frame_status_t.NRF_NFCT_RX_FRAME_STATUS_CRC_MASK"]], "nrf_nfct_rx_frame_status_t.nrf_nfct_rx_frame_status_overrun_mask (c enumerator)": [[93, "c.nrf_nfct_rx_frame_status_t.NRF_NFCT_RX_FRAME_STATUS_OVERRUN_MASK"]], "nrf_nfct_rx_frame_status_t.nrf_nfct_rx_frame_status_parity_mask (c enumerator)": [[93, "c.nrf_nfct_rx_frame_status_t.NRF_NFCT_RX_FRAME_STATUS_PARITY_MASK"]], "nrf_nfct_rxtx_buffer_get (c function)": [[93, "c.nrf_nfct_rxtx_buffer_get"]], "nrf_nfct_rxtx_buffer_set (c function)": [[93, "c.nrf_nfct_rxtx_buffer_set"]], "nrf_nfct_selres_cascade_check (c function)": [[93, "c.nrf_nfct_selres_cascade_check"]], "nrf_nfct_selres_get (c function)": [[93, "c.nrf_nfct_selres_get"]], "nrf_nfct_selres_protocol_get (c function)": [[93, "c.nrf_nfct_selres_protocol_get"]], "nrf_nfct_selres_protocol_set (c function)": [[93, "c.nrf_nfct_selres_protocol_set"]], "nrf_nfct_selres_protocol_t (c enum)": [[93, "c.nrf_nfct_selres_protocol_t"]], "nrf_nfct_selres_protocol_t.nrf_nfct_selres_protocol_nfcdep (c enumerator)": [[93, "c.nrf_nfct_selres_protocol_t.NRF_NFCT_SELRES_PROTOCOL_NFCDEP"]], "nrf_nfct_selres_protocol_t.nrf_nfct_selres_protocol_nfcdep_t4at (c enumerator)": [[93, "c.nrf_nfct_selres_protocol_t.NRF_NFCT_SELRES_PROTOCOL_NFCDEP_T4AT"]], "nrf_nfct_selres_protocol_t.nrf_nfct_selres_protocol_t2t (c enumerator)": [[93, "c.nrf_nfct_selres_protocol_t.NRF_NFCT_SELRES_PROTOCOL_T2T"]], "nrf_nfct_selres_protocol_t.nrf_nfct_selres_protocol_t4at (c enumerator)": [[93, "c.nrf_nfct_selres_protocol_t.NRF_NFCT_SELRES_PROTOCOL_T4AT"]], "nrf_nfct_selres_set (c function)": [[93, "c.nrf_nfct_selres_set"]], "nrf_nfct_sensres_bit_frame_sdd_get (c function)": [[93, "c.nrf_nfct_sensres_bit_frame_sdd_get"]], "nrf_nfct_sensres_bit_frame_sdd_set (c function)": [[93, "c.nrf_nfct_sensres_bit_frame_sdd_set"]], "nrf_nfct_sensres_bit_frame_sdd_t (c enum)": [[93, "c.nrf_nfct_sensres_bit_frame_sdd_t"]], "nrf_nfct_sensres_bit_frame_sdd_t.nrf_nfct_sensres_bit_frame_sdd_00000 (c enumerator)": [[93, "c.nrf_nfct_sensres_bit_frame_sdd_t.NRF_NFCT_SENSRES_BIT_FRAME_SDD_00000"]], "nrf_nfct_sensres_bit_frame_sdd_t.nrf_nfct_sensres_bit_frame_sdd_00001 (c enumerator)": [[93, "c.nrf_nfct_sensres_bit_frame_sdd_t.NRF_NFCT_SENSRES_BIT_FRAME_SDD_00001"]], "nrf_nfct_sensres_bit_frame_sdd_t.nrf_nfct_sensres_bit_frame_sdd_00010 (c enumerator)": [[93, "c.nrf_nfct_sensres_bit_frame_sdd_t.NRF_NFCT_SENSRES_BIT_FRAME_SDD_00010"]], "nrf_nfct_sensres_bit_frame_sdd_t.nrf_nfct_sensres_bit_frame_sdd_00100 (c enumerator)": [[93, "c.nrf_nfct_sensres_bit_frame_sdd_t.NRF_NFCT_SENSRES_BIT_FRAME_SDD_00100"]], "nrf_nfct_sensres_bit_frame_sdd_t.nrf_nfct_sensres_bit_frame_sdd_01000 (c enumerator)": [[93, "c.nrf_nfct_sensres_bit_frame_sdd_t.NRF_NFCT_SENSRES_BIT_FRAME_SDD_01000"]], "nrf_nfct_sensres_bit_frame_sdd_t.nrf_nfct_sensres_bit_frame_sdd_10000 (c enumerator)": [[93, "c.nrf_nfct_sensres_bit_frame_sdd_t.NRF_NFCT_SENSRES_BIT_FRAME_SDD_10000"]], "nrf_nfct_sensres_nfcid1_size_get (c function)": [[93, "c.nrf_nfct_sensres_nfcid1_size_get"]], "nrf_nfct_sensres_nfcid1_size_set (c function)": [[93, "c.nrf_nfct_sensres_nfcid1_size_set"]], "nrf_nfct_sensres_nfcid1_size_t (c enum)": [[93, "c.nrf_nfct_sensres_nfcid1_size_t"]], "nrf_nfct_sensres_nfcid1_size_t.nrf_nfct_sensres_nfcid1_size_default (c enumerator)": [[93, "c.nrf_nfct_sensres_nfcid1_size_t.NRF_NFCT_SENSRES_NFCID1_SIZE_DEFAULT"]], "nrf_nfct_sensres_nfcid1_size_t.nrf_nfct_sensres_nfcid1_size_double (c enumerator)": [[93, "c.nrf_nfct_sensres_nfcid1_size_t.NRF_NFCT_SENSRES_NFCID1_SIZE_DOUBLE"]], "nrf_nfct_sensres_nfcid1_size_t.nrf_nfct_sensres_nfcid1_size_single (c enumerator)": [[93, "c.nrf_nfct_sensres_nfcid1_size_t.NRF_NFCT_SENSRES_NFCID1_SIZE_SINGLE"]], "nrf_nfct_sensres_nfcid1_size_t.nrf_nfct_sensres_nfcid1_size_triple (c enumerator)": [[93, "c.nrf_nfct_sensres_nfcid1_size_t.NRF_NFCT_SENSRES_NFCID1_SIZE_TRIPLE"]], "nrf_nfct_sensres_platform_config_get (c function)": [[93, "c.nrf_nfct_sensres_platform_config_get"]], "nrf_nfct_sensres_platform_config_set (c function)": [[93, "c.nrf_nfct_sensres_platform_config_set"]], "nrf_nfct_sensres_platform_config_t (c enum)": [[93, "c.nrf_nfct_sensres_platform_config_t"]], "nrf_nfct_sensres_platform_config_t.nrf_nfct_sensres_platform_config_other (c enumerator)": [[93, "c.nrf_nfct_sensres_platform_config_t.NRF_NFCT_SENSRES_PLATFORM_CONFIG_OTHER"]], "nrf_nfct_sensres_platform_config_t.nrf_nfct_sensres_platform_config_t1t (c enumerator)": [[93, "c.nrf_nfct_sensres_platform_config_t.NRF_NFCT_SENSRES_PLATFORM_CONFIG_T1T"]], "nrf_nfct_short_mask_t (c enum)": [[93, "c.nrf_nfct_short_mask_t"]], "nrf_nfct_short_mask_t.nrf_nfct_short_fielddetected_activate_mask (c enumerator)": [[93, "c.nrf_nfct_short_mask_t.NRF_NFCT_SHORT_FIELDDETECTED_ACTIVATE_MASK"]], "nrf_nfct_short_mask_t.nrf_nfct_short_fieldlost_sense_mask (c enumerator)": [[93, "c.nrf_nfct_short_mask_t.NRF_NFCT_SHORT_FIELDLOST_SENSE_MASK"]], "nrf_nfct_short_mask_t.nrf_nfct_short_txframeend_enablerxdata_mask (c enumerator)": [[93, "c.nrf_nfct_short_mask_t.NRF_NFCT_SHORT_TXFRAMEEND_ENABLERXDATA_MASK"]], "nrf_nfct_shorts_disable (c function)": [[93, "c.nrf_nfct_shorts_disable"]], "nrf_nfct_shorts_enable (c function)": [[93, "c.nrf_nfct_shorts_enable"]], "nrf_nfct_shorts_get (c function)": [[93, "c.nrf_nfct_shorts_get"]], "nrf_nfct_shorts_set (c function)": [[93, "c.nrf_nfct_shorts_set"]], "nrf_nfct_sleep_state_get (c function)": [[93, "c.nrf_nfct_sleep_state_get"]], "nrf_nfct_sleep_state_t (c enum)": [[93, "c.nrf_nfct_sleep_state_t"]], "nrf_nfct_sleep_state_t.nrf_nfct_sleep_state_idle (c enumerator)": [[93, "c.nrf_nfct_sleep_state_t.NRF_NFCT_SLEEP_STATE_IDLE"]], "nrf_nfct_sleep_state_t.nrf_nfct_sleep_state_sleep_a (c enumerator)": [[93, "c.nrf_nfct_sleep_state_t.NRF_NFCT_SLEEP_STATE_SLEEP_A"]], "nrf_nfct_tag_state_get (c function)": [[93, "c.nrf_nfct_tag_state_get"]], "nrf_nfct_tag_state_t (c enum)": [[93, "c.nrf_nfct_tag_state_t"]], "nrf_nfct_tag_state_t.nrf_nfct_tag_state_disabled (c enumerator)": [[93, "c.nrf_nfct_tag_state_t.NRF_NFCT_TAG_STATE_DISABLED"]], "nrf_nfct_tag_state_t.nrf_nfct_tag_state_frame_delay (c enumerator)": [[93, "c.nrf_nfct_tag_state_t.NRF_NFCT_TAG_STATE_FRAME_DELAY"]], "nrf_nfct_tag_state_t.nrf_nfct_tag_state_idle (c enumerator)": [[93, "c.nrf_nfct_tag_state_t.NRF_NFCT_TAG_STATE_IDLE"]], "nrf_nfct_tag_state_t.nrf_nfct_tag_state_ramp_up (c enumerator)": [[93, "c.nrf_nfct_tag_state_t.NRF_NFCT_TAG_STATE_RAMP_UP"]], "nrf_nfct_tag_state_t.nrf_nfct_tag_state_receive (c enumerator)": [[93, "c.nrf_nfct_tag_state_t.NRF_NFCT_TAG_STATE_RECEIVE"]], "nrf_nfct_tag_state_t.nrf_nfct_tag_state_transmit (c enumerator)": [[93, "c.nrf_nfct_tag_state_t.NRF_NFCT_TAG_STATE_TRANSMIT"]], "nrf_nfct_task_address_get (c function)": [[93, "c.nrf_nfct_task_address_get"]], "nrf_nfct_task_t (c enum)": [[93, "c.nrf_nfct_task_t"]], "nrf_nfct_task_t.nrf_nfct_task_activate (c enumerator)": [[93, "c.nrf_nfct_task_t.NRF_NFCT_TASK_ACTIVATE"]], "nrf_nfct_task_t.nrf_nfct_task_disable (c enumerator)": [[93, "c.nrf_nfct_task_t.NRF_NFCT_TASK_DISABLE"]], "nrf_nfct_task_t.nrf_nfct_task_enablerxdata (c enumerator)": [[93, "c.nrf_nfct_task_t.NRF_NFCT_TASK_ENABLERXDATA"]], "nrf_nfct_task_t.nrf_nfct_task_goidle (c enumerator)": [[93, "c.nrf_nfct_task_t.NRF_NFCT_TASK_GOIDLE"]], "nrf_nfct_task_t.nrf_nfct_task_gosleep (c enumerator)": [[93, "c.nrf_nfct_task_t.NRF_NFCT_TASK_GOSLEEP"]], "nrf_nfct_task_t.nrf_nfct_task_sense (c enumerator)": [[93, "c.nrf_nfct_task_t.NRF_NFCT_TASK_SENSE"]], "nrf_nfct_task_t.nrf_nfct_task_starttx (c enumerator)": [[93, "c.nrf_nfct_task_t.NRF_NFCT_TASK_STARTTX"]], "nrf_nfct_task_t.nrf_nfct_task_stoptx (c enumerator)": [[93, "c.nrf_nfct_task_t.NRF_NFCT_TASK_STOPTX"]], "nrf_nfct_task_trigger (c function)": [[93, "c.nrf_nfct_task_trigger"]], "nrf_nfct_tx_bits_get (c function)": [[93, "c.nrf_nfct_tx_bits_get"]], "nrf_nfct_tx_bits_set (c function)": [[93, "c.nrf_nfct_tx_bits_set"]], "nrf_nfct_tx_frame_config_get (c function)": [[93, "c.nrf_nfct_tx_frame_config_get"]], "nrf_nfct_tx_frame_config_set (c function)": [[93, "c.nrf_nfct_tx_frame_config_set"]], "nrf_nfct_tx_frame_config_t (c enum)": [[93, "c.nrf_nfct_tx_frame_config_t"]], "nrf_nfct_tx_frame_config_t.nrf_nfct_tx_frame_config_crc16 (c enumerator)": [[93, "c.nrf_nfct_tx_frame_config_t.NRF_NFCT_TX_FRAME_CONFIG_CRC16"]], "nrf_nfct_tx_frame_config_t.nrf_nfct_tx_frame_config_discard_start (c enumerator)": [[93, "c.nrf_nfct_tx_frame_config_t.NRF_NFCT_TX_FRAME_CONFIG_DISCARD_START"]], "nrf_nfct_tx_frame_config_t.nrf_nfct_tx_frame_config_parity (c enumerator)": [[93, "c.nrf_nfct_tx_frame_config_t.NRF_NFCT_TX_FRAME_CONFIG_PARITY"]], "nrf_nfct_tx_frame_config_t.nrf_nfct_tx_frame_config_sof (c enumerator)": [[93, "c.nrf_nfct_tx_frame_config_t.NRF_NFCT_TX_FRAME_CONFIG_SOF"]], "nrfx_nvmc_all_erase (c function)": [[95, "c.nrfx_nvmc_all_erase"]], "nrfx_nvmc_byte_writable_check (c function)": [[95, "c.nrfx_nvmc_byte_writable_check"]], "nrfx_nvmc_byte_write (c function)": [[95, "c.nrfx_nvmc_byte_write"]], "nrfx_nvmc_bytes_write (c function)": [[95, "c.nrfx_nvmc_bytes_write"]], "nrfx_nvmc_flash_page_count_get (c function)": [[95, "c.nrfx_nvmc_flash_page_count_get"]], "nrfx_nvmc_flash_page_size_get (c function)": [[95, "c.nrfx_nvmc_flash_page_size_get"]], "nrfx_nvmc_flash_size_get (c function)": [[95, "c.nrfx_nvmc_flash_size_get"]], "nrfx_nvmc_halfword_writable_check (c function)": [[95, "c.nrfx_nvmc_halfword_writable_check"]], "nrfx_nvmc_halfword_write (c function)": [[95, "c.nrfx_nvmc_halfword_write"]], "nrfx_nvmc_icache_disable (c function)": [[95, "c.nrfx_nvmc_icache_disable"]], "nrfx_nvmc_icache_enable (c function)": [[95, "c.nrfx_nvmc_icache_enable"]], "nrfx_nvmc_otp_halfword_read (c function)": [[95, "c.nrfx_nvmc_otp_halfword_read"]], "nrfx_nvmc_page_erase (c function)": [[95, "c.nrfx_nvmc_page_erase"]], "nrfx_nvmc_page_partial_erase_continue (c function)": [[95, "c.nrfx_nvmc_page_partial_erase_continue"]], "nrfx_nvmc_page_partial_erase_init (c function)": [[95, "c.nrfx_nvmc_page_partial_erase_init"]], "nrfx_nvmc_uicr_erase (c function)": [[95, "c.nrfx_nvmc_uicr_erase"]], "nrfx_nvmc_uicr_word_read (c function)": [[95, "c.nrfx_nvmc_uicr_word_read"]], "nrfx_nvmc_word_writable_check (c function)": [[95, "c.nrfx_nvmc_word_writable_check"]], "nrfx_nvmc_word_write (c function)": [[95, "c.nrfx_nvmc_word_write"]], "nrfx_nvmc_words_write (c function)": [[95, "c.nrfx_nvmc_words_write"]], "nrfx_nvmc_write_done_check (c function)": [[95, "c.nrfx_nvmc_write_done_check"]], "nrf_nvmc_has_non_secure_operations (c macro)": [[96, "c.NRF_NVMC_HAS_NON_SECURE_OPERATIONS"]], "nrf_nvmc_has_partial_erase (c macro)": [[96, "c.NRF_NVMC_HAS_PARTIAL_ERASE"]], "nrf_nvmc_has_uicr_erase (c macro)": [[96, "c.NRF_NVMC_HAS_UICR_ERASE"]], "nrf_nvmc_buffer_read (c function)": [[96, "c.nrf_nvmc_buffer_read"]], "nrf_nvmc_byte_read (c function)": [[96, "c.nrf_nvmc_byte_read"]], "nrf_nvmc_erase_all_start (c function)": [[96, "c.nrf_nvmc_erase_all_start"]], "nrf_nvmc_halfword_read (c function)": [[96, "c.nrf_nvmc_halfword_read"]], "nrf_nvmc_mode_set (c function)": [[96, "c.nrf_nvmc_mode_set"]], "nrf_nvmc_mode_t (c enum)": [[96, "c.nrf_nvmc_mode_t"]], "nrf_nvmc_mode_t.nrf_nvmc_mode_erase (c enumerator)": [[96, "c.nrf_nvmc_mode_t.NRF_NVMC_MODE_ERASE"]], "nrf_nvmc_mode_t.nrf_nvmc_mode_readonly (c enumerator)": [[96, "c.nrf_nvmc_mode_t.NRF_NVMC_MODE_READONLY"]], "nrf_nvmc_mode_t.nrf_nvmc_mode_write (c enumerator)": [[96, "c.nrf_nvmc_mode_t.NRF_NVMC_MODE_WRITE"]], "nrf_nvmc_nonsecure_mode_set (c function)": [[96, "c.nrf_nvmc_nonsecure_mode_set"]], "nrf_nvmc_ns_mode_t (c enum)": [[96, "c.nrf_nvmc_ns_mode_t"]], "nrf_nvmc_ns_mode_t.nrf_nvmc_ns_mode_erase (c enumerator)": [[96, "c.nrf_nvmc_ns_mode_t.NRF_NVMC_NS_MODE_ERASE"]], "nrf_nvmc_ns_mode_t.nrf_nvmc_ns_mode_readonly (c enumerator)": [[96, "c.nrf_nvmc_ns_mode_t.NRF_NVMC_NS_MODE_READONLY"]], "nrf_nvmc_ns_mode_t.nrf_nvmc_ns_mode_write (c enumerator)": [[96, "c.nrf_nvmc_ns_mode_t.NRF_NVMC_NS_MODE_WRITE"]], "nrf_nvmc_page_erase_start (c function)": [[96, "c.nrf_nvmc_page_erase_start"]], "nrf_nvmc_page_partial_erase_start (c function)": [[96, "c.nrf_nvmc_page_partial_erase_start"]], "nrf_nvmc_partial_erase_duration_get (c function)": [[96, "c.nrf_nvmc_partial_erase_duration_get"]], "nrf_nvmc_partial_erase_duration_set (c function)": [[96, "c.nrf_nvmc_partial_erase_duration_set"]], "nrf_nvmc_ready_check (c function)": [[96, "c.nrf_nvmc_ready_check"]], "nrf_nvmc_uicr_erase_start (c function)": [[96, "c.nrf_nvmc_uicr_erase_start"]], "nrf_nvmc_word_read (c function)": [[96, "c.nrf_nvmc_word_read"]], "nrf_nvmc_word_write (c function)": [[96, "c.nrf_nvmc_word_write"]], "nrf_nvmc_write_ready_check (c function)": [[96, "c.nrf_nvmc_write_ready_check"]], "nrf_oscillators_has_clock_quality_ind (c macro)": [[98, "c.NRF_OSCILLATORS_HAS_CLOCK_QUALITY_IND"]], "nrf_oscillators_has_lfxo_bypass (c macro)": [[98, "c.NRF_OSCILLATORS_HAS_LFXO_BYPASS"]], "nrf_oscillators_has_lfxo_cap_as_int_value (c macro)": [[98, "c.NRF_OSCILLATORS_HAS_LFXO_CAP_AS_INT_VALUE"]], "nrf_oscillators_has_pll (c macro)": [[98, "c.NRF_OSCILLATORS_HAS_PLL"]], "nrf_oscillators_lfxo_cap_external (c macro)": [[98, "c.NRF_OSCILLATORS_LFXO_CAP_EXTERNAL"]], "oscillators_hfxo_cap_calculate (c macro)": [[98, "c.OSCILLATORS_HFXO_CAP_CALCULATE"]], "oscillators_lfxo_cap_calculate (c macro)": [[98, "c.OSCILLATORS_LFXO_CAP_CALCULATE"]], "nrf_oscillators_hfxo_cap_set (c function)": [[98, "c.nrf_oscillators_hfxo_cap_set"]], "nrf_oscillators_hfxo_clock_quality_get (c function)": [[98, "c.nrf_oscillators_hfxo_clock_quality_get"]], "nrf_oscillators_hfxo_clock_quality_t (c enum)": [[98, "c.nrf_oscillators_hfxo_clock_quality_t"]], "nrf_oscillators_hfxo_clock_quality_t.nrf_oscillators_hfxo_clock_quality_none (c enumerator)": [[98, "c.nrf_oscillators_hfxo_clock_quality_t.NRF_OSCILLATORS_HFXO_CLOCK_QUALITY_NONE"]], "nrf_oscillators_hfxo_clock_quality_t.nrf_oscillators_hfxo_clock_quality_started (c enumerator)": [[98, "c.nrf_oscillators_hfxo_clock_quality_t.NRF_OSCILLATORS_HFXO_CLOCK_QUALITY_STARTED"]], "nrf_oscillators_hfxo_clock_quality_t.nrf_oscillators_hfxo_clock_quality_starting (c enumerator)": [[98, "c.nrf_oscillators_hfxo_clock_quality_t.NRF_OSCILLATORS_HFXO_CLOCK_QUALITY_STARTING"]], "nrf_oscillators_lfxo_bypass_set (c function)": [[98, "c.nrf_oscillators_lfxo_bypass_set"]], "nrf_oscillators_lfxo_cap_set (c function)": [[98, "c.nrf_oscillators_lfxo_cap_set"]], "nrf_oscillators_lfxo_cap_t (c type)": [[98, "c.nrf_oscillators_lfxo_cap_t"]], "nrf_oscillators_pll_freq_get (c function)": [[98, "c.nrf_oscillators_pll_freq_get"]], "nrf_oscillators_pll_freq_set (c function)": [[98, "c.nrf_oscillators_pll_freq_set"]], "nrf_oscillators_pll_freq_t (c enum)": [[98, "c.nrf_oscillators_pll_freq_t"]], "nrf_oscillators_pll_freq_t.nrf_oscillators_pll_freq_128m (c enumerator)": [[98, "c.nrf_oscillators_pll_freq_t.NRF_OSCILLATORS_PLL_FREQ_128M"]], "nrf_oscillators_pll_freq_t.nrf_oscillators_pll_freq_64m (c enumerator)": [[98, "c.nrf_oscillators_pll_freq_t.NRF_OSCILLATORS_PLL_FREQ_64M"]], "nrfx_pdm_default_config (c macro)": [[99, "c.NRFX_PDM_DEFAULT_CONFIG"]], "nrfx_pdm_max_buffer_size (c macro)": [[99, "c.NRFX_PDM_MAX_BUFFER_SIZE"]], "nrfx_pdm_buffer_set (c function)": [[99, "c.nrfx_pdm_buffer_set"]], "nrfx_pdm_config_t (c struct)": [[99, "c.nrfx_pdm_config_t"]], "nrfx_pdm_config_t.clk_pin (c var)": [[99, "c.nrfx_pdm_config_t.clk_pin"]], "nrfx_pdm_config_t.clock_freq (c var)": [[99, "c.nrfx_pdm_config_t.clock_freq"]], "nrfx_pdm_config_t.din_pin (c var)": [[99, "c.nrfx_pdm_config_t.din_pin"]], "nrfx_pdm_config_t.edge (c var)": [[99, "c.nrfx_pdm_config_t.edge"]], "nrfx_pdm_config_t.gain_l (c var)": [[99, "c.nrfx_pdm_config_t.gain_l"]], "nrfx_pdm_config_t.gain_r (c var)": [[99, "c.nrfx_pdm_config_t.gain_r"]], "nrfx_pdm_config_t.interrupt_priority (c var)": [[99, "c.nrfx_pdm_config_t.interrupt_priority"]], "nrfx_pdm_config_t.mode (c var)": [[99, "c.nrfx_pdm_config_t.mode"]], "nrfx_pdm_config_t.skip_gpio_cfg (c var)": [[99, "c.nrfx_pdm_config_t.skip_gpio_cfg"]], "nrfx_pdm_config_t.skip_psel_cfg (c var)": [[99, "c.nrfx_pdm_config_t.skip_psel_cfg"]], "nrfx_pdm_enable_check (c function)": [[99, "c.nrfx_pdm_enable_check"]], "nrfx_pdm_error_t (c enum)": [[99, "c.nrfx_pdm_error_t"]], "nrfx_pdm_error_t.nrfx_pdm_error_overflow (c enumerator)": [[99, "c.nrfx_pdm_error_t.NRFX_PDM_ERROR_OVERFLOW"]], "nrfx_pdm_error_t.nrfx_pdm_no_error (c enumerator)": [[99, "c.nrfx_pdm_error_t.NRFX_PDM_NO_ERROR"]], "nrfx_pdm_event_handler_t (c type)": [[99, "c.nrfx_pdm_event_handler_t"]], "nrfx_pdm_evt_t (c struct)": [[99, "c.nrfx_pdm_evt_t"]], "nrfx_pdm_evt_t.buffer_released (c var)": [[99, "c.nrfx_pdm_evt_t.buffer_released"]], "nrfx_pdm_evt_t.buffer_requested (c var)": [[99, "c.nrfx_pdm_evt_t.buffer_requested"]], "nrfx_pdm_evt_t.error (c var)": [[99, "c.nrfx_pdm_evt_t.error"]], "nrfx_pdm_init (c function)": [[99, "c.nrfx_pdm_init"]], "nrfx_pdm_init_check (c function)": [[99, "c.nrfx_pdm_init_check"]], "nrfx_pdm_reconfigure (c function)": [[99, "c.nrfx_pdm_reconfigure"]], "nrfx_pdm_start (c function)": [[99, "c.nrfx_pdm_start"]], "nrfx_pdm_stop (c function)": [[99, "c.nrfx_pdm_stop"]], "nrfx_pdm_task_address_get (c function)": [[99, "c.nrfx_pdm_task_address_get"]], "nrfx_pdm_uninit (c function)": [[99, "c.nrfx_pdm_uninit"]], "nrf_pdm_gain_default (c macro)": [[100, "c.NRF_PDM_GAIN_DEFAULT"]], "nrf_pdm_gain_maximum (c macro)": [[100, "c.NRF_PDM_GAIN_MAXIMUM"]], "nrf_pdm_gain_minimum (c macro)": [[100, "c.NRF_PDM_GAIN_MINIMUM"]], "nrf_pdm_has_dma_reg (c macro)": [[100, "c.NRF_PDM_HAS_DMA_REG"]], "nrf_pdm_has_dma_tasks_events (c macro)": [[100, "c.NRF_PDM_HAS_DMA_TASKS_EVENTS"]], "nrf_pdm_has_mclkconfig (c macro)": [[100, "c.NRF_PDM_HAS_MCLKCONFIG"]], "nrf_pdm_has_ratio_config (c macro)": [[100, "c.NRF_PDM_HAS_RATIO_CONFIG"]], "nrf_pdm_buffer_get (c function)": [[100, "c.nrf_pdm_buffer_get"]], "nrf_pdm_buffer_set (c function)": [[100, "c.nrf_pdm_buffer_set"]], "nrf_pdm_clk_pin_get (c function)": [[100, "c.nrf_pdm_clk_pin_get"]], "nrf_pdm_clock_get (c function)": [[100, "c.nrf_pdm_clock_get"]], "nrf_pdm_clock_set (c function)": [[100, "c.nrf_pdm_clock_set"]], "nrf_pdm_din_pin_get (c function)": [[100, "c.nrf_pdm_din_pin_get"]], "nrf_pdm_disable (c function)": [[100, "c.nrf_pdm_disable"]], "nrf_pdm_edge_t (c enum)": [[100, "c.nrf_pdm_edge_t"]], "nrf_pdm_edge_t.nrf_pdm_edge_leftfalling (c enumerator)": [[100, "c.nrf_pdm_edge_t.NRF_PDM_EDGE_LEFTFALLING"]], "nrf_pdm_edge_t.nrf_pdm_edge_leftrising (c enumerator)": [[100, "c.nrf_pdm_edge_t.NRF_PDM_EDGE_LEFTRISING"]], "nrf_pdm_enable (c function)": [[100, "c.nrf_pdm_enable"]], "nrf_pdm_enable_check (c function)": [[100, "c.nrf_pdm_enable_check"]], "nrf_pdm_event_address_get (c function)": [[100, "c.nrf_pdm_event_address_get"]], "nrf_pdm_event_check (c function)": [[100, "c.nrf_pdm_event_check"]], "nrf_pdm_event_clear (c function)": [[100, "c.nrf_pdm_event_clear"]], "nrf_pdm_event_t (c enum)": [[100, "c.nrf_pdm_event_t"]], "nrf_pdm_event_t.nrf_pdm_event_end (c enumerator)": [[100, "c.nrf_pdm_event_t.NRF_PDM_EVENT_END"]], "nrf_pdm_event_t.nrf_pdm_event_started (c enumerator)": [[100, "c.nrf_pdm_event_t.NRF_PDM_EVENT_STARTED"]], "nrf_pdm_event_t.nrf_pdm_event_stopped (c enumerator)": [[100, "c.nrf_pdm_event_t.NRF_PDM_EVENT_STOPPED"]], "nrf_pdm_freq_t (c enum)": [[100, "c.nrf_pdm_freq_t"]], "nrf_pdm_freq_t.nrf_pdm_freq_1000k (c enumerator)": [[100, "c.nrf_pdm_freq_t.NRF_PDM_FREQ_1000K"]], "nrf_pdm_freq_t.nrf_pdm_freq_1032k (c enumerator)": [[100, "c.nrf_pdm_freq_t.NRF_PDM_FREQ_1032K"]], "nrf_pdm_freq_t.nrf_pdm_freq_1067k (c enumerator)": [[100, "c.nrf_pdm_freq_t.NRF_PDM_FREQ_1067K"]], "nrf_pdm_freq_t.nrf_pdm_freq_1231k (c enumerator)": [[100, "c.nrf_pdm_freq_t.NRF_PDM_FREQ_1231K"]], "nrf_pdm_freq_t.nrf_pdm_freq_1280k (c enumerator)": [[100, "c.nrf_pdm_freq_t.NRF_PDM_FREQ_1280K"]], "nrf_pdm_freq_t.nrf_pdm_freq_1333k (c enumerator)": [[100, "c.nrf_pdm_freq_t.NRF_PDM_FREQ_1333K"]], "nrf_pdm_gain_get (c function)": [[100, "c.nrf_pdm_gain_get"]], "nrf_pdm_gain_set (c function)": [[100, "c.nrf_pdm_gain_set"]], "nrf_pdm_gain_t (c type)": [[100, "c.nrf_pdm_gain_t"]], "nrf_pdm_int_disable (c function)": [[100, "c.nrf_pdm_int_disable"]], "nrf_pdm_int_enable (c function)": [[100, "c.nrf_pdm_int_enable"]], "nrf_pdm_int_enable_check (c function)": [[100, "c.nrf_pdm_int_enable_check"]], "nrf_pdm_int_mask_t (c enum)": [[100, "c.nrf_pdm_int_mask_t"]], "nrf_pdm_int_mask_t.nrf_pdm_int_end (c enumerator)": [[100, "c.nrf_pdm_int_mask_t.NRF_PDM_INT_END"]], "nrf_pdm_int_mask_t.nrf_pdm_int_started (c enumerator)": [[100, "c.nrf_pdm_int_mask_t.NRF_PDM_INT_STARTED"]], "nrf_pdm_int_mask_t.nrf_pdm_int_stopped (c enumerator)": [[100, "c.nrf_pdm_int_mask_t.NRF_PDM_INT_STOPPED"]], "nrf_pdm_mclksrc_configure (c function)": [[100, "c.nrf_pdm_mclksrc_configure"]], "nrf_pdm_mclksrc_t (c enum)": [[100, "c.nrf_pdm_mclksrc_t"]], "nrf_pdm_mclksrc_t.nrf_pdm_mclksrc_aclk (c enumerator)": [[100, "c.nrf_pdm_mclksrc_t.NRF_PDM_MCLKSRC_ACLK"]], "nrf_pdm_mclksrc_t.nrf_pdm_mclksrc_pclk32m (c enumerator)": [[100, "c.nrf_pdm_mclksrc_t.NRF_PDM_MCLKSRC_PCLK32M"]], "nrf_pdm_mode_get (c function)": [[100, "c.nrf_pdm_mode_get"]], "nrf_pdm_mode_set (c function)": [[100, "c.nrf_pdm_mode_set"]], "nrf_pdm_mode_t (c enum)": [[100, "c.nrf_pdm_mode_t"]], "nrf_pdm_mode_t.nrf_pdm_mode_mono (c enumerator)": [[100, "c.nrf_pdm_mode_t.NRF_PDM_MODE_MONO"]], "nrf_pdm_mode_t.nrf_pdm_mode_stereo (c enumerator)": [[100, "c.nrf_pdm_mode_t.NRF_PDM_MODE_STEREO"]], "nrf_pdm_psel_connect (c function)": [[100, "c.nrf_pdm_psel_connect"]], "nrf_pdm_psel_disconnect (c function)": [[100, "c.nrf_pdm_psel_disconnect"]], "nrf_pdm_publish_clear (c function)": [[100, "c.nrf_pdm_publish_clear"]], "nrf_pdm_publish_set (c function)": [[100, "c.nrf_pdm_publish_set"]], "nrf_pdm_ratio_set (c function)": [[100, "c.nrf_pdm_ratio_set"]], "nrf_pdm_ratio_t (c enum)": [[100, "c.nrf_pdm_ratio_t"]], "nrf_pdm_ratio_t.nrf_pdm_ratio_64x (c enumerator)": [[100, "c.nrf_pdm_ratio_t.NRF_PDM_RATIO_64X"]], "nrf_pdm_ratio_t.nrf_pdm_ratio_80x (c enumerator)": [[100, "c.nrf_pdm_ratio_t.NRF_PDM_RATIO_80X"]], "nrf_pdm_subscribe_clear (c function)": [[100, "c.nrf_pdm_subscribe_clear"]], "nrf_pdm_subscribe_set (c function)": [[100, "c.nrf_pdm_subscribe_set"]], "nrf_pdm_task_address_get (c function)": [[100, "c.nrf_pdm_task_address_get"]], "nrf_pdm_task_t (c enum)": [[100, "c.nrf_pdm_task_t"]], "nrf_pdm_task_t.nrf_pdm_task_start (c enumerator)": [[100, "c.nrf_pdm_task_t.NRF_PDM_TASK_START"]], "nrf_pdm_task_t.nrf_pdm_task_stop (c enumerator)": [[100, "c.nrf_pdm_task_t.NRF_PDM_TASK_STOP"]], "nrf_pdm_task_trigger (c function)": [[100, "c.nrf_pdm_task_trigger"]], "nrfy_pdm_abort (c function)": [[101, "c.nrfy_pdm_abort"]], "nrfy_pdm_buffer_get (c function)": [[101, "c.nrfy_pdm_buffer_get"]], "nrfy_pdm_buffer_set (c function)": [[101, "c.nrfy_pdm_buffer_set"]], "nrfy_pdm_buffer_t (c struct)": [[101, "c.nrfy_pdm_buffer_t"]], "nrfy_pdm_buffer_t.length (c var)": [[101, "c.nrfy_pdm_buffer_t.length"]], "nrfy_pdm_buffer_t.p_buff (c var)": [[101, "c.nrfy_pdm_buffer_t.p_buff"]], "nrfy_pdm_clock_get (c function)": [[101, "c.nrfy_pdm_clock_get"]], "nrfy_pdm_clock_set (c function)": [[101, "c.nrfy_pdm_clock_set"]], "nrfy_pdm_config_t (c struct)": [[101, "c.nrfy_pdm_config_t"]], "nrfy_pdm_config_t.clock_freq (c var)": [[101, "c.nrfy_pdm_config_t.clock_freq"]], "nrfy_pdm_config_t.edge (c var)": [[101, "c.nrfy_pdm_config_t.edge"]], "nrfy_pdm_config_t.gain_l (c var)": [[101, "c.nrfy_pdm_config_t.gain_l"]], "nrfy_pdm_config_t.gain_r (c var)": [[101, "c.nrfy_pdm_config_t.gain_r"]], "nrfy_pdm_config_t.mode (c var)": [[101, "c.nrfy_pdm_config_t.mode"]], "nrfy_pdm_config_t.pins (c var)": [[101, "c.nrfy_pdm_config_t.pins"]], "nrfy_pdm_config_t.skip_psel_cfg (c var)": [[101, "c.nrfy_pdm_config_t.skip_psel_cfg"]], "nrfy_pdm_disable (c function)": [[101, "c.nrfy_pdm_disable"]], "nrfy_pdm_enable (c function)": [[101, "c.nrfy_pdm_enable"]], "nrfy_pdm_enable_check (c function)": [[101, "c.nrfy_pdm_enable_check"]], "nrfy_pdm_event_address_get (c function)": [[101, "c.nrfy_pdm_event_address_get"]], "nrfy_pdm_event_check (c function)": [[101, "c.nrfy_pdm_event_check"]], "nrfy_pdm_event_clear (c function)": [[101, "c.nrfy_pdm_event_clear"]], "nrfy_pdm_events_process (c function)": [[101, "c.nrfy_pdm_events_process"]], "nrfy_pdm_gain_get (c function)": [[101, "c.nrfy_pdm_gain_get"]], "nrfy_pdm_gain_set (c function)": [[101, "c.nrfy_pdm_gain_set"]], "nrfy_pdm_int_disable (c function)": [[101, "c.nrfy_pdm_int_disable"]], "nrfy_pdm_int_enable (c function)": [[101, "c.nrfy_pdm_int_enable"]], "nrfy_pdm_int_enable_check (c function)": [[101, "c.nrfy_pdm_int_enable_check"]], "nrfy_pdm_int_init (c function)": [[101, "c.nrfy_pdm_int_init"]], "nrfy_pdm_int_uninit (c function)": [[101, "c.nrfy_pdm_int_uninit"]], "nrfy_pdm_mode_get (c function)": [[101, "c.nrfy_pdm_mode_get"]], "nrfy_pdm_mode_set (c function)": [[101, "c.nrfy_pdm_mode_set"]], "nrfy_pdm_periph_configure (c function)": [[101, "c.nrfy_pdm_periph_configure"]], "nrfy_pdm_pin_disconnect (c function)": [[101, "c.nrfy_pdm_pin_disconnect"]], "nrfy_pdm_pins_get (c function)": [[101, "c.nrfy_pdm_pins_get"]], "nrfy_pdm_pins_set (c function)": [[101, "c.nrfy_pdm_pins_set"]], "nrfy_pdm_pins_t (c struct)": [[101, "c.nrfy_pdm_pins_t"]], "nrfy_pdm_pins_t.clk_pin (c var)": [[101, "c.nrfy_pdm_pins_t.clk_pin"]], "nrfy_pdm_pins_t.din_pin (c var)": [[101, "c.nrfy_pdm_pins_t.din_pin"]], "nrfy_pdm_publish_clear (c function)": [[101, "c.nrfy_pdm_publish_clear"]], "nrfy_pdm_publish_set (c function)": [[101, "c.nrfy_pdm_publish_set"]], "nrfy_pdm_start (c function)": [[101, "c.nrfy_pdm_start"]], "nrfy_pdm_subscribe_clear (c function)": [[101, "c.nrfy_pdm_subscribe_clear"]], "nrfy_pdm_subscribe_set (c function)": [[101, "c.nrfy_pdm_subscribe_set"]], "nrfy_pdm_task_address_get (c function)": [[101, "c.nrfy_pdm_task_address_get"]], "nrfy_pdm_task_trigger (c function)": [[101, "c.nrfy_pdm_task_trigger"]], "nrfx_power_supports_dcdcen_vddh (c macro)": [[103, "c.NRFX_POWER_SUPPORTS_DCDCEN_VDDH"]], "nrfx_power_supports_pofcon (c macro)": [[103, "c.NRFX_POWER_SUPPORTS_POFCON"]], "nrfx_power_supports_pofcon_vddh (c macro)": [[103, "c.NRFX_POWER_SUPPORTS_POFCON_VDDH"]], "nrfx_power_config_t (c struct)": [[103, "c.nrfx_power_config_t"]], "nrfx_power_config_t.dcdcen (c var)": [[103, "c.nrfx_power_config_t.dcdcen"]], "nrfx_power_config_t.dcdcenhv (c var)": [[103, "c.nrfx_power_config_t.dcdcenhv"]], "nrfx_power_constlat_mode_free (c function)": [[103, "c.nrfx_power_constlat_mode_free"]], "nrfx_power_constlat_mode_request (c function)": [[103, "c.nrfx_power_constlat_mode_request"]], "nrfx_power_init (c function)": [[103, "c.nrfx_power_init"]], "nrfx_power_init_check (c function)": [[103, "c.nrfx_power_init_check"]], "nrfx_power_mode_get (c function)": [[103, "c.nrfx_power_mode_get"]], "nrfx_power_mode_t (c enum)": [[103, "c.nrfx_power_mode_t"]], "nrfx_power_mode_t.nrfx_power_mode_constlat (c enumerator)": [[103, "c.nrfx_power_mode_t.NRFX_POWER_MODE_CONSTLAT"]], "nrfx_power_mode_t.nrfx_power_mode_lowpwr (c enumerator)": [[103, "c.nrfx_power_mode_t.NRFX_POWER_MODE_LOWPWR"]], "nrfx_power_pof_disable (c function)": [[103, "c.nrfx_power_pof_disable"]], "nrfx_power_pof_enable (c function)": [[103, "c.nrfx_power_pof_enable"]], "nrfx_power_pof_handler_get (c function)": [[103, "c.nrfx_power_pof_handler_get"]], "nrfx_power_pof_init (c function)": [[103, "c.nrfx_power_pof_init"]], "nrfx_power_pof_uninit (c function)": [[103, "c.nrfx_power_pof_uninit"]], "nrfx_power_pofwarn_config_t (c struct)": [[103, "c.nrfx_power_pofwarn_config_t"]], "nrfx_power_pofwarn_config_t.handler (c var)": [[103, "c.nrfx_power_pofwarn_config_t.handler"]], "nrfx_power_pofwarn_config_t.thr (c var)": [[103, "c.nrfx_power_pofwarn_config_t.thr"]], "nrfx_power_pofwarn_config_t.thrvddh (c var)": [[103, "c.nrfx_power_pofwarn_config_t.thrvddh"]], "nrfx_power_pofwarn_event_handler_t (c type)": [[103, "c.nrfx_power_pofwarn_event_handler_t"]], "nrfx_power_sleep_event_handler_t (c type)": [[103, "c.nrfx_power_sleep_event_handler_t"]], "nrfx_power_sleep_evt_t (c enum)": [[103, "c.nrfx_power_sleep_evt_t"]], "nrfx_power_sleep_evt_t.nrfx_power_sleep_evt_enter (c enumerator)": [[103, "c.nrfx_power_sleep_evt_t.NRFX_POWER_SLEEP_EVT_ENTER"]], "nrfx_power_sleep_evt_t.nrfx_power_sleep_evt_exit (c enumerator)": [[103, "c.nrfx_power_sleep_evt_t.NRFX_POWER_SLEEP_EVT_EXIT"]], "nrfx_power_sleepevt_config_t (c struct)": [[103, "c.nrfx_power_sleepevt_config_t"]], "nrfx_power_sleepevt_config_t.en_enter (c var)": [[103, "c.nrfx_power_sleepevt_config_t.en_enter"]], "nrfx_power_sleepevt_config_t.en_exit (c var)": [[103, "c.nrfx_power_sleepevt_config_t.en_exit"]], "nrfx_power_sleepevt_config_t.handler (c var)": [[103, "c.nrfx_power_sleepevt_config_t.handler"]], "nrfx_power_sleepevt_disable (c function)": [[103, "c.nrfx_power_sleepevt_disable"]], "nrfx_power_sleepevt_enable (c function)": [[103, "c.nrfx_power_sleepevt_enable"]], "nrfx_power_sleepevt_init (c function)": [[103, "c.nrfx_power_sleepevt_init"]], "nrfx_power_sleepevt_uninit (c function)": [[103, "c.nrfx_power_sleepevt_uninit"]], "nrfx_power_uninit (c function)": [[103, "c.nrfx_power_uninit"]], "nrfx_power_usb_event_handler_t (c type)": [[103, "c.nrfx_power_usb_event_handler_t"]], "nrfx_power_usb_evt_t (c enum)": [[103, "c.nrfx_power_usb_evt_t"]], "nrfx_power_usb_evt_t.nrfx_power_usb_evt_detected (c enumerator)": [[103, "c.nrfx_power_usb_evt_t.NRFX_POWER_USB_EVT_DETECTED"]], "nrfx_power_usb_evt_t.nrfx_power_usb_evt_ready (c enumerator)": [[103, "c.nrfx_power_usb_evt_t.NRFX_POWER_USB_EVT_READY"]], "nrfx_power_usb_evt_t.nrfx_power_usb_evt_removed (c enumerator)": [[103, "c.nrfx_power_usb_evt_t.NRFX_POWER_USB_EVT_REMOVED"]], "nrfx_power_usb_handler_get (c function)": [[103, "c.nrfx_power_usb_handler_get"]], "nrfx_power_usb_state_t (c enum)": [[103, "c.nrfx_power_usb_state_t"]], "nrfx_power_usb_state_t.nrfx_power_usb_state_connected (c enumerator)": [[103, "c.nrfx_power_usb_state_t.NRFX_POWER_USB_STATE_CONNECTED"]], "nrfx_power_usb_state_t.nrfx_power_usb_state_disconnected (c enumerator)": [[103, "c.nrfx_power_usb_state_t.NRFX_POWER_USB_STATE_DISCONNECTED"]], "nrfx_power_usb_state_t.nrfx_power_usb_state_ready (c enumerator)": [[103, "c.nrfx_power_usb_state_t.NRFX_POWER_USB_STATE_READY"]], "nrfx_power_usbevt_config_t (c struct)": [[103, "c.nrfx_power_usbevt_config_t"]], "nrfx_power_usbevt_config_t.handler (c var)": [[103, "c.nrfx_power_usbevt_config_t.handler"]], "nrfx_power_usbevt_disable (c function)": [[103, "c.nrfx_power_usbevt_disable"]], "nrfx_power_usbevt_enable (c function)": [[103, "c.nrfx_power_usbevt_enable"]], "nrfx_power_usbevt_init (c function)": [[103, "c.nrfx_power_usbevt_init"]], "nrfx_power_usbevt_uninit (c function)": [[103, "c.nrfx_power_usbevt_uninit"]], "nrfx_power_usbstatus_get (c function)": [[103, "c.nrfx_power_usbstatus_get"]], "nrfx_power_gpregret_count (c macro)": [[104, "c.NRFX_POWER_GPREGRET_COUNT"]], "nrf_power_events_abb_lock_count (c macro)": [[104, "c.NRF_POWER_EVENTS_ABB_LOCK_COUNT"]], "nrf_power_has_abb (c macro)": [[104, "c.NRF_POWER_HAS_ABB"]], "nrf_power_has_bils (c macro)": [[104, "c.NRF_POWER_HAS_BILS"]], "nrf_power_has_block_modes (c macro)": [[104, "c.NRF_POWER_HAS_BLOCK_MODES"]], "nrf_power_has_const_latency (c macro)": [[104, "c.NRF_POWER_HAS_CONST_LATENCY"]], "nrf_power_has_dcdcen (c macro)": [[104, "c.NRF_POWER_HAS_DCDCEN"]], "nrf_power_has_dcdcen_vddh (c macro)": [[104, "c.NRF_POWER_HAS_DCDCEN_VDDH"]], "nrf_power_has_gpregret (c macro)": [[104, "c.NRF_POWER_HAS_GPREGRET"]], "nrf_power_has_gpregret_array (c macro)": [[104, "c.NRF_POWER_HAS_GPREGRET_ARRAY"]], "nrf_power_has_low_power (c macro)": [[104, "c.NRF_POWER_HAS_LOW_POWER"]], "nrf_power_has_mainregstatus (c macro)": [[104, "c.NRF_POWER_HAS_MAINREGSTATUS"]], "nrf_power_has_pmic (c macro)": [[104, "c.NRF_POWER_HAS_PMIC"]], "nrf_power_has_pofcon (c macro)": [[104, "c.NRF_POWER_HAS_POFCON"]], "nrf_power_has_pofcon_vddh (c macro)": [[104, "c.NRF_POWER_HAS_POFCON_VDDH"]], "nrf_power_has_pofwarn (c macro)": [[104, "c.NRF_POWER_HAS_POFWARN"]], "nrf_power_has_resetreas (c macro)": [[104, "c.NRF_POWER_HAS_RESETREAS"]], "nrf_power_has_resetreas_ctrlap (c macro)": [[104, "c.NRF_POWER_HAS_RESETREAS_CTRLAP"]], "nrf_power_has_resetreas_lpcomp (c macro)": [[104, "c.NRF_POWER_HAS_RESETREAS_LPCOMP"]], "nrf_power_has_resetreas_nfc (c macro)": [[104, "c.NRF_POWER_HAS_RESETREAS_NFC"]], "nrf_power_has_resetreas_vbus (c macro)": [[104, "c.NRF_POWER_HAS_RESETREAS_VBUS"]], "nrf_power_has_semaphore (c macro)": [[104, "c.NRF_POWER_HAS_SEMAPHORE"]], "nrf_power_has_sleepevt (c macro)": [[104, "c.NRF_POWER_HAS_SLEEPEVT"]], "nrf_power_has_usbreg (c macro)": [[104, "c.NRF_POWER_HAS_USBREG"]], "nrf_power_has_vreg_config (c macro)": [[104, "c.NRF_POWER_HAS_VREG_CONFIG"]], "nrf_power_has_vreg_update_task_event (c macro)": [[104, "c.NRF_POWER_HAS_VREG_UPDATE_TASK_EVENT"]], "nrf_power_abb_busy_check (c function)": [[104, "c.nrf_power_abb_busy_check"]], "nrf_power_abb_config_get (c function)": [[104, "c.nrf_power_abb_config_get"]], "nrf_power_abb_config_set (c function)": [[104, "c.nrf_power_abb_config_set"]], "nrf_power_abb_config_t (c struct)": [[104, "c.nrf_power_abb_config_t"]], "nrf_power_abb_config_t.op_point (c var)": [[104, "c.nrf_power_abb_config_t.op_point"]], "nrf_power_abb_config_t.override_enable (c var)": [[104, "c.nrf_power_abb_config_t.override_enable"]], "nrf_power_abb_config_t.override_value (c var)": [[104, "c.nrf_power_abb_config_t.override_value"]], "nrf_power_abb_force_lock_check (c function)": [[104, "c.nrf_power_abb_force_lock_check"]], "nrf_power_abb_force_lock_set (c function)": [[104, "c.nrf_power_abb_force_lock_set"]], "nrf_power_bils_check (c function)": [[104, "c.nrf_power_bils_check"]], "nrf_power_bils_set (c function)": [[104, "c.nrf_power_bils_set"]], "nrf_power_dcdcen_get (c function)": [[104, "c.nrf_power_dcdcen_get"]], "nrf_power_dcdcen_set (c function)": [[104, "c.nrf_power_dcdcen_set"]], "nrf_power_dcdcen_vddh_get (c function)": [[104, "c.nrf_power_dcdcen_vddh_get"]], "nrf_power_dcdcen_vddh_set (c function)": [[104, "c.nrf_power_dcdcen_vddh_set"]], "nrf_power_event_address_get (c function)": [[104, "c.nrf_power_event_address_get"]], "nrf_power_event_check (c function)": [[104, "c.nrf_power_event_check"]], "nrf_power_event_clear (c function)": [[104, "c.nrf_power_event_clear"]], "nrf_power_event_get_and_clear (c function)": [[104, "c.nrf_power_event_get_and_clear"]], "nrf_power_event_t (c enum)": [[104, "c.nrf_power_event_t"]], "nrf_power_event_t.nrf_power_event_abb_lock_0 (c enumerator)": [[104, "c.nrf_power_event_t.NRF_POWER_EVENT_ABB_LOCK_0"]], "nrf_power_event_t.nrf_power_event_abb_lock_1 (c enumerator)": [[104, "c.nrf_power_event_t.NRF_POWER_EVENT_ABB_LOCK_1"]], "nrf_power_event_t.nrf_power_event_pofwarn (c enumerator)": [[104, "c.nrf_power_event_t.NRF_POWER_EVENT_POFWARN"]], "nrf_power_event_t.nrf_power_event_regulator_updated (c enumerator)": [[104, "c.nrf_power_event_t.NRF_POWER_EVENT_REGULATOR_UPDATED"]], "nrf_power_event_t.nrf_power_event_semaphore_acquired (c enumerator)": [[104, "c.nrf_power_event_t.NRF_POWER_EVENT_SEMAPHORE_ACQUIRED"]], "nrf_power_event_t.nrf_power_event_semaphore_released (c enumerator)": [[104, "c.nrf_power_event_t.NRF_POWER_EVENT_SEMAPHORE_RELEASED"]], "nrf_power_event_t.nrf_power_event_sleepenter (c enumerator)": [[104, "c.nrf_power_event_t.NRF_POWER_EVENT_SLEEPENTER"]], "nrf_power_event_t.nrf_power_event_sleepexit (c enumerator)": [[104, "c.nrf_power_event_t.NRF_POWER_EVENT_SLEEPEXIT"]], "nrf_power_event_t.nrf_power_event_usbdetected (c enumerator)": [[104, "c.nrf_power_event_t.NRF_POWER_EVENT_USBDETECTED"]], "nrf_power_event_t.nrf_power_event_usbpwrrdy (c enumerator)": [[104, "c.nrf_power_event_t.NRF_POWER_EVENT_USBPWRRDY"]], "nrf_power_event_t.nrf_power_event_usbremoved (c enumerator)": [[104, "c.nrf_power_event_t.NRF_POWER_EVENT_USBREMOVED"]], "nrf_power_gpregret_get (c function)": [[104, "c.nrf_power_gpregret_get"]], "nrf_power_gpregret_set (c function)": [[104, "c.nrf_power_gpregret_set"]], "nrf_power_int_disable (c function)": [[104, "c.nrf_power_int_disable"]], "nrf_power_int_enable (c function)": [[104, "c.nrf_power_int_enable"]], "nrf_power_int_enable_check (c function)": [[104, "c.nrf_power_int_enable_check"]], "nrf_power_int_enable_get (c function)": [[104, "c.nrf_power_int_enable_get"]], "nrf_power_int_mask_t (c enum)": [[104, "c.nrf_power_int_mask_t"]], "nrf_power_int_mask_t.nrf_power_int_abb_lock_0 (c enumerator)": [[104, "c.nrf_power_int_mask_t.NRF_POWER_INT_ABB_LOCK_0"]], "nrf_power_int_mask_t.nrf_power_int_abb_lock_1 (c enumerator)": [[104, "c.nrf_power_int_mask_t.NRF_POWER_INT_ABB_LOCK_1"]], "nrf_power_int_mask_t.nrf_power_int_pofwarn_mask (c enumerator)": [[104, "c.nrf_power_int_mask_t.NRF_POWER_INT_POFWARN_MASK"]], "nrf_power_int_mask_t.nrf_power_int_regulator_updated (c enumerator)": [[104, "c.nrf_power_int_mask_t.NRF_POWER_INT_REGULATOR_UPDATED"]], "nrf_power_int_mask_t.nrf_power_int_semaphore_acquired (c enumerator)": [[104, "c.nrf_power_int_mask_t.NRF_POWER_INT_SEMAPHORE_ACQUIRED"]], "nrf_power_int_mask_t.nrf_power_int_semaphore_released (c enumerator)": [[104, "c.nrf_power_int_mask_t.NRF_POWER_INT_SEMAPHORE_RELEASED"]], "nrf_power_int_mask_t.nrf_power_int_sleepenter_mask (c enumerator)": [[104, "c.nrf_power_int_mask_t.NRF_POWER_INT_SLEEPENTER_MASK"]], "nrf_power_int_mask_t.nrf_power_int_sleepexit_mask (c enumerator)": [[104, "c.nrf_power_int_mask_t.NRF_POWER_INT_SLEEPEXIT_MASK"]], "nrf_power_int_mask_t.nrf_power_int_usbdetected_mask (c enumerator)": [[104, "c.nrf_power_int_mask_t.NRF_POWER_INT_USBDETECTED_MASK"]], "nrf_power_int_mask_t.nrf_power_int_usbpwrrdy_mask (c enumerator)": [[104, "c.nrf_power_int_mask_t.NRF_POWER_INT_USBPWRRDY_MASK"]], "nrf_power_int_mask_t.nrf_power_int_usbremoved_mask (c enumerator)": [[104, "c.nrf_power_int_mask_t.NRF_POWER_INT_USBREMOVED_MASK"]], "nrf_power_mainregstatus_get (c function)": [[104, "c.nrf_power_mainregstatus_get"]], "nrf_power_mainregstatus_t (c enum)": [[104, "c.nrf_power_mainregstatus_t"]], "nrf_power_mainregstatus_t.nrf_power_mainregstatus_high (c enumerator)": [[104, "c.nrf_power_mainregstatus_t.NRF_POWER_MAINREGSTATUS_HIGH"]], "nrf_power_mainregstatus_t.nrf_power_mainregstatus_normal (c enumerator)": [[104, "c.nrf_power_mainregstatus_t.NRF_POWER_MAINREGSTATUS_NORMAL"]], "nrf_power_onoffram_mask_t (c enum)": [[104, "c.nrf_power_onoffram_mask_t"]], "nrf_power_onoffram_mask_t.nrf_power_offram0_mask (c enumerator)": [[104, "c.nrf_power_onoffram_mask_t.NRF_POWER_OFFRAM0_MASK"]], "nrf_power_onoffram_mask_t.nrf_power_offram1_mask (c enumerator)": [[104, "c.nrf_power_onoffram_mask_t.NRF_POWER_OFFRAM1_MASK"]], "nrf_power_onoffram_mask_t.nrf_power_offram2_mask (c enumerator)": [[104, "c.nrf_power_onoffram_mask_t.NRF_POWER_OFFRAM2_MASK"]], "nrf_power_onoffram_mask_t.nrf_power_offram3_mask (c enumerator)": [[104, "c.nrf_power_onoffram_mask_t.NRF_POWER_OFFRAM3_MASK"]], "nrf_power_onoffram_mask_t.nrf_power_onram0_mask (c enumerator)": [[104, "c.nrf_power_onoffram_mask_t.NRF_POWER_ONRAM0_MASK"]], "nrf_power_onoffram_mask_t.nrf_power_onram1_mask (c enumerator)": [[104, "c.nrf_power_onoffram_mask_t.NRF_POWER_ONRAM1_MASK"]], "nrf_power_onoffram_mask_t.nrf_power_onram2_mask (c enumerator)": [[104, "c.nrf_power_onoffram_mask_t.NRF_POWER_ONRAM2_MASK"]], "nrf_power_onoffram_mask_t.nrf_power_onram3_mask (c enumerator)": [[104, "c.nrf_power_onoffram_mask_t.NRF_POWER_ONRAM3_MASK"]], "nrf_power_onoffram_t (c enum)": [[104, "c.nrf_power_onoffram_t"]], "nrf_power_onoffram_t.nrf_power_offram0 (c enumerator)": [[104, "c.nrf_power_onoffram_t.NRF_POWER_OFFRAM0"]], "nrf_power_onoffram_t.nrf_power_offram1 (c enumerator)": [[104, "c.nrf_power_onoffram_t.NRF_POWER_OFFRAM1"]], "nrf_power_onoffram_t.nrf_power_offram2 (c enumerator)": [[104, "c.nrf_power_onoffram_t.NRF_POWER_OFFRAM2"]], "nrf_power_onoffram_t.nrf_power_offram3 (c enumerator)": [[104, "c.nrf_power_onoffram_t.NRF_POWER_OFFRAM3"]], "nrf_power_onoffram_t.nrf_power_onram0 (c enumerator)": [[104, "c.nrf_power_onoffram_t.NRF_POWER_ONRAM0"]], "nrf_power_onoffram_t.nrf_power_onram1 (c enumerator)": [[104, "c.nrf_power_onoffram_t.NRF_POWER_ONRAM1"]], "nrf_power_onoffram_t.nrf_power_onram2 (c enumerator)": [[104, "c.nrf_power_onoffram_t.NRF_POWER_ONRAM2"]], "nrf_power_onoffram_t.nrf_power_onram3 (c enumerator)": [[104, "c.nrf_power_onoffram_t.NRF_POWER_ONRAM3"]], "nrf_power_op_point_t (c enum)": [[104, "c.nrf_power_op_point_t"]], "nrf_power_op_point_t.nrf_power_op_point_0v4 (c enumerator)": [[104, "c.nrf_power_op_point_t.NRF_POWER_OP_POINT_0V4"]], "nrf_power_op_point_t.nrf_power_op_point_0v5 (c enumerator)": [[104, "c.nrf_power_op_point_t.NRF_POWER_OP_POINT_0V5"]], "nrf_power_op_point_t.nrf_power_op_point_0v6 (c enumerator)": [[104, "c.nrf_power_op_point_t.NRF_POWER_OP_POINT_0V6"]], "nrf_power_op_point_t.nrf_power_op_point_0v8 (c enumerator)": [[104, "c.nrf_power_op_point_t.NRF_POWER_OP_POINT_0V8"]], "nrf_power_override_value_t (c enum)": [[104, "c.nrf_power_override_value_t"]], "nrf_power_override_value_t.nrf_power_override_value_power_down (c enumerator)": [[104, "c.nrf_power_override_value_t.NRF_POWER_OVERRIDE_VALUE_POWER_DOWN"]], "nrf_power_override_value_t.nrf_power_override_value_power_up (c enumerator)": [[104, "c.nrf_power_override_value_t.NRF_POWER_OVERRIDE_VALUE_POWER_UP"]], "nrf_power_pmic_check (c function)": [[104, "c.nrf_power_pmic_check"]], "nrf_power_pmic_set (c function)": [[104, "c.nrf_power_pmic_set"]], "nrf_power_pof_thr_t (c enum)": [[104, "c.nrf_power_pof_thr_t"]], "nrf_power_pof_thr_t.nrf_power_pofthr_v17 (c enumerator)": [[104, "c.nrf_power_pof_thr_t.NRF_POWER_POFTHR_V17"]], "nrf_power_pof_thr_t.nrf_power_pofthr_v18 (c enumerator)": [[104, "c.nrf_power_pof_thr_t.NRF_POWER_POFTHR_V18"]], "nrf_power_pof_thr_t.nrf_power_pofthr_v19 (c enumerator)": [[104, "c.nrf_power_pof_thr_t.NRF_POWER_POFTHR_V19"]], "nrf_power_pof_thr_t.nrf_power_pofthr_v20 (c enumerator)": [[104, "c.nrf_power_pof_thr_t.NRF_POWER_POFTHR_V20"]], "nrf_power_pof_thr_t.nrf_power_pofthr_v21 (c enumerator)": [[104, "c.nrf_power_pof_thr_t.NRF_POWER_POFTHR_V21"]], "nrf_power_pof_thr_t.nrf_power_pofthr_v22 (c enumerator)": [[104, "c.nrf_power_pof_thr_t.NRF_POWER_POFTHR_V22"]], "nrf_power_pof_thr_t.nrf_power_pofthr_v23 (c enumerator)": [[104, "c.nrf_power_pof_thr_t.NRF_POWER_POFTHR_V23"]], "nrf_power_pof_thr_t.nrf_power_pofthr_v24 (c enumerator)": [[104, "c.nrf_power_pof_thr_t.NRF_POWER_POFTHR_V24"]], "nrf_power_pof_thr_t.nrf_power_pofthr_v25 (c enumerator)": [[104, "c.nrf_power_pof_thr_t.NRF_POWER_POFTHR_V25"]], "nrf_power_pof_thr_t.nrf_power_pofthr_v26 (c enumerator)": [[104, "c.nrf_power_pof_thr_t.NRF_POWER_POFTHR_V26"]], "nrf_power_pof_thr_t.nrf_power_pofthr_v27 (c enumerator)": [[104, "c.nrf_power_pof_thr_t.NRF_POWER_POFTHR_V27"]], "nrf_power_pof_thr_t.nrf_power_pofthr_v28 (c enumerator)": [[104, "c.nrf_power_pof_thr_t.NRF_POWER_POFTHR_V28"]], "nrf_power_pof_thrvddh_t (c enum)": [[104, "c.nrf_power_pof_thrvddh_t"]], "nrf_power_pof_thrvddh_t.nrf_power_pofthrvddh_v27 (c enumerator)": [[104, "c.nrf_power_pof_thrvddh_t.NRF_POWER_POFTHRVDDH_V27"]], "nrf_power_pof_thrvddh_t.nrf_power_pofthrvddh_v28 (c enumerator)": [[104, "c.nrf_power_pof_thrvddh_t.NRF_POWER_POFTHRVDDH_V28"]], "nrf_power_pof_thrvddh_t.nrf_power_pofthrvddh_v29 (c enumerator)": [[104, "c.nrf_power_pof_thrvddh_t.NRF_POWER_POFTHRVDDH_V29"]], "nrf_power_pof_thrvddh_t.nrf_power_pofthrvddh_v30 (c enumerator)": [[104, "c.nrf_power_pof_thrvddh_t.NRF_POWER_POFTHRVDDH_V30"]], "nrf_power_pof_thrvddh_t.nrf_power_pofthrvddh_v31 (c enumerator)": [[104, "c.nrf_power_pof_thrvddh_t.NRF_POWER_POFTHRVDDH_V31"]], "nrf_power_pof_thrvddh_t.nrf_power_pofthrvddh_v32 (c enumerator)": [[104, "c.nrf_power_pof_thrvddh_t.NRF_POWER_POFTHRVDDH_V32"]], "nrf_power_pof_thrvddh_t.nrf_power_pofthrvddh_v33 (c enumerator)": [[104, "c.nrf_power_pof_thrvddh_t.NRF_POWER_POFTHRVDDH_V33"]], "nrf_power_pof_thrvddh_t.nrf_power_pofthrvddh_v34 (c enumerator)": [[104, "c.nrf_power_pof_thrvddh_t.NRF_POWER_POFTHRVDDH_V34"]], "nrf_power_pof_thrvddh_t.nrf_power_pofthrvddh_v35 (c enumerator)": [[104, "c.nrf_power_pof_thrvddh_t.NRF_POWER_POFTHRVDDH_V35"]], "nrf_power_pof_thrvddh_t.nrf_power_pofthrvddh_v36 (c enumerator)": [[104, "c.nrf_power_pof_thrvddh_t.NRF_POWER_POFTHRVDDH_V36"]], "nrf_power_pof_thrvddh_t.nrf_power_pofthrvddh_v37 (c enumerator)": [[104, "c.nrf_power_pof_thrvddh_t.NRF_POWER_POFTHRVDDH_V37"]], "nrf_power_pof_thrvddh_t.nrf_power_pofthrvddh_v38 (c enumerator)": [[104, "c.nrf_power_pof_thrvddh_t.NRF_POWER_POFTHRVDDH_V38"]], "nrf_power_pof_thrvddh_t.nrf_power_pofthrvddh_v39 (c enumerator)": [[104, "c.nrf_power_pof_thrvddh_t.NRF_POWER_POFTHRVDDH_V39"]], "nrf_power_pof_thrvddh_t.nrf_power_pofthrvddh_v40 (c enumerator)": [[104, "c.nrf_power_pof_thrvddh_t.NRF_POWER_POFTHRVDDH_V40"]], "nrf_power_pof_thrvddh_t.nrf_power_pofthrvddh_v41 (c enumerator)": [[104, "c.nrf_power_pof_thrvddh_t.NRF_POWER_POFTHRVDDH_V41"]], "nrf_power_pof_thrvddh_t.nrf_power_pofthrvddh_v42 (c enumerator)": [[104, "c.nrf_power_pof_thrvddh_t.NRF_POWER_POFTHRVDDH_V42"]], "nrf_power_pofcon_get (c function)": [[104, "c.nrf_power_pofcon_get"]], "nrf_power_pofcon_set (c function)": [[104, "c.nrf_power_pofcon_set"]], "nrf_power_pofcon_vddh_get (c function)": [[104, "c.nrf_power_pofcon_vddh_get"]], "nrf_power_pofcon_vddh_set (c function)": [[104, "c.nrf_power_pofcon_vddh_set"]], "nrf_power_powerstatus_get (c function)": [[104, "c.nrf_power_powerstatus_get"]], "nrf_power_publish_clear (c function)": [[104, "c.nrf_power_publish_clear"]], "nrf_power_publish_set (c function)": [[104, "c.nrf_power_publish_set"]], "nrf_power_ramblock_mask_t (c enum)": [[104, "c.nrf_power_ramblock_mask_t"]], "nrf_power_ramblock_mask_t.nrf_power_ramblock0_mask (c enumerator)": [[104, "c.nrf_power_ramblock_mask_t.NRF_POWER_RAMBLOCK0_MASK"]], "nrf_power_ramblock_mask_t.nrf_power_ramblock1_mask (c enumerator)": [[104, "c.nrf_power_ramblock_mask_t.NRF_POWER_RAMBLOCK1_MASK"]], "nrf_power_ramblock_mask_t.nrf_power_ramblock2_mask (c enumerator)": [[104, "c.nrf_power_ramblock_mask_t.NRF_POWER_RAMBLOCK2_MASK"]], "nrf_power_ramblock_mask_t.nrf_power_ramblock3_mask (c enumerator)": [[104, "c.nrf_power_ramblock_mask_t.NRF_POWER_RAMBLOCK3_MASK"]], "nrf_power_ramblock_t (c enum)": [[104, "c.nrf_power_ramblock_t"]], "nrf_power_ramblock_t.nrf_power_ramblock0 (c enumerator)": [[104, "c.nrf_power_ramblock_t.NRF_POWER_RAMBLOCK0"]], "nrf_power_ramblock_t.nrf_power_ramblock1 (c enumerator)": [[104, "c.nrf_power_ramblock_t.NRF_POWER_RAMBLOCK1"]], "nrf_power_ramblock_t.nrf_power_ramblock2 (c enumerator)": [[104, "c.nrf_power_ramblock_t.NRF_POWER_RAMBLOCK2"]], "nrf_power_ramblock_t.nrf_power_ramblock3 (c enumerator)": [[104, "c.nrf_power_ramblock_t.NRF_POWER_RAMBLOCK3"]], "nrf_power_rampower_mask_get (c function)": [[104, "c.nrf_power_rampower_mask_get"]], "nrf_power_rampower_mask_off (c function)": [[104, "c.nrf_power_rampower_mask_off"]], "nrf_power_rampower_mask_on (c function)": [[104, "c.nrf_power_rampower_mask_on"]], "nrf_power_rampower_mask_t (c enum)": [[104, "c.nrf_power_rampower_mask_t"]], "nrf_power_rampower_mask_t.nrf_power_rampower_s0power_mask (c enumerator)": [[104, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S0POWER_MASK"]], "nrf_power_rampower_mask_t.nrf_power_rampower_s0retention_mask (c enumerator)": [[104, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S0RETENTION_MASK"]], "nrf_power_rampower_mask_t.nrf_power_rampower_s10power_mask (c enumerator)": [[104, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S10POWER_MASK"]], "nrf_power_rampower_mask_t.nrf_power_rampower_s10retention_mask (c enumerator)": [[104, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S10RETENTION_MASK"]], "nrf_power_rampower_mask_t.nrf_power_rampower_s11power_mask (c enumerator)": [[104, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S11POWER_MASK"]], "nrf_power_rampower_mask_t.nrf_power_rampower_s11retention_mask (c enumerator)": [[104, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S11RETENTION_MASK"]], "nrf_power_rampower_mask_t.nrf_power_rampower_s12power_mask (c enumerator)": [[104, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S12POWER_MASK"]], "nrf_power_rampower_mask_t.nrf_power_rampower_s12retention_mask (c enumerator)": [[104, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S12RETENTION_MASK"]], "nrf_power_rampower_mask_t.nrf_power_rampower_s13power_mask (c enumerator)": [[104, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S13POWER_MASK"]], "nrf_power_rampower_mask_t.nrf_power_rampower_s13retention_mask (c enumerator)": [[104, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S13RETENTION_MASK"]], "nrf_power_rampower_mask_t.nrf_power_rampower_s14power_mask (c enumerator)": [[104, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S14POWER_MASK"]], "nrf_power_rampower_mask_t.nrf_power_rampower_s14retention_mask (c enumerator)": [[104, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S14RETENTION_MASK"]], "nrf_power_rampower_mask_t.nrf_power_rampower_s15power_mask (c enumerator)": [[104, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S15POWER_MASK"]], "nrf_power_rampower_mask_t.nrf_power_rampower_s15retention_mask (c enumerator)": [[104, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S15RETENTION_MASK"]], "nrf_power_rampower_mask_t.nrf_power_rampower_s1power_mask (c enumerator)": [[104, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S1POWER_MASK"]], "nrf_power_rampower_mask_t.nrf_power_rampower_s1retention_mask (c enumerator)": [[104, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S1RETENTION_MASK"]], "nrf_power_rampower_mask_t.nrf_power_rampower_s2power_mask (c enumerator)": [[104, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S2POWER_MASK"]], "nrf_power_rampower_mask_t.nrf_power_rampower_s2retention_mask (c enumerator)": [[104, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S2RETENTION_MASK"]], "nrf_power_rampower_mask_t.nrf_power_rampower_s3power_mask (c enumerator)": [[104, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S3POWER_MASK"]], "nrf_power_rampower_mask_t.nrf_power_rampower_s3retention_mask (c enumerator)": [[104, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S3RETENTION_MASK"]], "nrf_power_rampower_mask_t.nrf_power_rampower_s4power_mask (c enumerator)": [[104, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S4POWER_MASK"]], "nrf_power_rampower_mask_t.nrf_power_rampower_s4retention_mask (c enumerator)": [[104, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S4RETENTION_MASK"]], "nrf_power_rampower_mask_t.nrf_power_rampower_s5power_mask (c enumerator)": [[104, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S5POWER_MASK"]], "nrf_power_rampower_mask_t.nrf_power_rampower_s5retention_mask (c enumerator)": [[104, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S5RETENTION_MASK"]], "nrf_power_rampower_mask_t.nrf_power_rampower_s7power_mask (c enumerator)": [[104, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S7POWER_MASK"]], "nrf_power_rampower_mask_t.nrf_power_rampower_s7retention_mask (c enumerator)": [[104, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S7RETENTION_MASK"]], "nrf_power_rampower_mask_t.nrf_power_rampower_s8power_mask (c enumerator)": [[104, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S8POWER_MASK"]], "nrf_power_rampower_mask_t.nrf_power_rampower_s8retention_mask (c enumerator)": [[104, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S8RETENTION_MASK"]], "nrf_power_rampower_mask_t.nrf_power_rampower_s9power_mask (c enumerator)": [[104, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S9POWER_MASK"]], "nrf_power_rampower_mask_t.nrf_power_rampower_s9retention_mask (c enumerator)": [[104, "c.nrf_power_rampower_mask_t.NRF_POWER_RAMPOWER_S9RETENTION_MASK"]], "nrf_power_rampower_t (c enum)": [[104, "c.nrf_power_rampower_t"]], "nrf_power_rampower_t.nrf_power_rampower_s0power (c enumerator)": [[104, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S0POWER"]], "nrf_power_rampower_t.nrf_power_rampower_s0retention (c enumerator)": [[104, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S0RETENTION"]], "nrf_power_rampower_t.nrf_power_rampower_s10power (c enumerator)": [[104, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S10POWER"]], "nrf_power_rampower_t.nrf_power_rampower_s10retention (c enumerator)": [[104, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S10RETENTION"]], "nrf_power_rampower_t.nrf_power_rampower_s11power (c enumerator)": [[104, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S11POWER"]], "nrf_power_rampower_t.nrf_power_rampower_s11retention (c enumerator)": [[104, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S11RETENTION"]], "nrf_power_rampower_t.nrf_power_rampower_s12power (c enumerator)": [[104, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S12POWER"]], "nrf_power_rampower_t.nrf_power_rampower_s12retention (c enumerator)": [[104, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S12RETENTION"]], "nrf_power_rampower_t.nrf_power_rampower_s13power (c enumerator)": [[104, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S13POWER"]], "nrf_power_rampower_t.nrf_power_rampower_s13retention (c enumerator)": [[104, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S13RETENTION"]], "nrf_power_rampower_t.nrf_power_rampower_s14power (c enumerator)": [[104, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S14POWER"]], "nrf_power_rampower_t.nrf_power_rampower_s14retention (c enumerator)": [[104, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S14RETENTION"]], "nrf_power_rampower_t.nrf_power_rampower_s15power (c enumerator)": [[104, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S15POWER"]], "nrf_power_rampower_t.nrf_power_rampower_s15retention (c enumerator)": [[104, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S15RETENTION"]], "nrf_power_rampower_t.nrf_power_rampower_s1power (c enumerator)": [[104, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S1POWER"]], "nrf_power_rampower_t.nrf_power_rampower_s1retention (c enumerator)": [[104, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S1RETENTION"]], "nrf_power_rampower_t.nrf_power_rampower_s2power (c enumerator)": [[104, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S2POWER"]], "nrf_power_rampower_t.nrf_power_rampower_s2retention (c enumerator)": [[104, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S2RETENTION"]], "nrf_power_rampower_t.nrf_power_rampower_s3power (c enumerator)": [[104, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S3POWER"]], "nrf_power_rampower_t.nrf_power_rampower_s3retention (c enumerator)": [[104, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S3RETENTION"]], "nrf_power_rampower_t.nrf_power_rampower_s4power (c enumerator)": [[104, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S4POWER"]], "nrf_power_rampower_t.nrf_power_rampower_s4retention (c enumerator)": [[104, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S4RETENTION"]], "nrf_power_rampower_t.nrf_power_rampower_s5power (c enumerator)": [[104, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S5POWER"]], "nrf_power_rampower_t.nrf_power_rampower_s5retention (c enumerator)": [[104, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S5RETENTION"]], "nrf_power_rampower_t.nrf_power_rampower_s6power (c enumerator)": [[104, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S6POWER"]], "nrf_power_rampower_t.nrf_power_rampower_s6retention (c enumerator)": [[104, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S6RETENTION"]], "nrf_power_rampower_t.nrf_power_rampower_s7power (c enumerator)": [[104, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S7POWER"]], "nrf_power_rampower_t.nrf_power_rampower_s7retention (c enumerator)": [[104, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S7RETENTION"]], "nrf_power_rampower_t.nrf_power_rampower_s8power (c enumerator)": [[104, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S8POWER"]], "nrf_power_rampower_t.nrf_power_rampower_s8retention (c enumerator)": [[104, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S8RETENTION"]], "nrf_power_rampower_t.nrf_power_rampower_s9power (c enumerator)": [[104, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S9POWER"]], "nrf_power_rampower_t.nrf_power_rampower_s9retention (c enumerator)": [[104, "c.nrf_power_rampower_t.NRF_POWER_RAMPOWER_S9RETENTION"]], "nrf_power_ramstatus_get (c function)": [[104, "c.nrf_power_ramstatus_get"]], "nrf_power_resetreas_clear (c function)": [[104, "c.nrf_power_resetreas_clear"]], "nrf_power_resetreas_get (c function)": [[104, "c.nrf_power_resetreas_get"]], "nrf_power_resetreas_mask_t (c enum)": [[104, "c.nrf_power_resetreas_mask_t"]], "nrf_power_resetreas_mask_t.nrf_power_resetreas_ctrlap_mask (c enumerator)": [[104, "c.nrf_power_resetreas_mask_t.NRF_POWER_RESETREAS_CTRLAP_MASK"]], "nrf_power_resetreas_mask_t.nrf_power_resetreas_dif_mask (c enumerator)": [[104, "c.nrf_power_resetreas_mask_t.NRF_POWER_RESETREAS_DIF_MASK"]], "nrf_power_resetreas_mask_t.nrf_power_resetreas_dog_mask (c enumerator)": [[104, "c.nrf_power_resetreas_mask_t.NRF_POWER_RESETREAS_DOG_MASK"]], "nrf_power_resetreas_mask_t.nrf_power_resetreas_lockup_mask (c enumerator)": [[104, "c.nrf_power_resetreas_mask_t.NRF_POWER_RESETREAS_LOCKUP_MASK"]], "nrf_power_resetreas_mask_t.nrf_power_resetreas_lpcomp_mask (c enumerator)": [[104, "c.nrf_power_resetreas_mask_t.NRF_POWER_RESETREAS_LPCOMP_MASK"]], "nrf_power_resetreas_mask_t.nrf_power_resetreas_nfc_mask (c enumerator)": [[104, "c.nrf_power_resetreas_mask_t.NRF_POWER_RESETREAS_NFC_MASK"]], "nrf_power_resetreas_mask_t.nrf_power_resetreas_off_mask (c enumerator)": [[104, "c.nrf_power_resetreas_mask_t.NRF_POWER_RESETREAS_OFF_MASK"]], "nrf_power_resetreas_mask_t.nrf_power_resetreas_resetpin_mask (c enumerator)": [[104, "c.nrf_power_resetreas_mask_t.NRF_POWER_RESETREAS_RESETPIN_MASK"]], "nrf_power_resetreas_mask_t.nrf_power_resetreas_sreq_mask (c enumerator)": [[104, "c.nrf_power_resetreas_mask_t.NRF_POWER_RESETREAS_SREQ_MASK"]], "nrf_power_resetreas_mask_t.nrf_power_resetreas_vbus_mask (c enumerator)": [[104, "c.nrf_power_resetreas_mask_t.NRF_POWER_RESETREAS_VBUS_MASK"]], "nrf_power_sem_status_get (c function)": [[104, "c.nrf_power_sem_status_get"]], "nrf_power_subscribe_clear (c function)": [[104, "c.nrf_power_subscribe_clear"]], "nrf_power_subscribe_set (c function)": [[104, "c.nrf_power_subscribe_set"]], "nrf_power_task_address_get (c function)": [[104, "c.nrf_power_task_address_get"]], "nrf_power_task_t (c enum)": [[104, "c.nrf_power_task_t"]], "nrf_power_task_t.nrf_power_task_constlat (c enumerator)": [[104, "c.nrf_power_task_t.NRF_POWER_TASK_CONSTLAT"]], "nrf_power_task_t.nrf_power_task_lowpwr (c enumerator)": [[104, "c.nrf_power_task_t.NRF_POWER_TASK_LOWPWR"]], "nrf_power_task_t.nrf_power_task_regulator_update (c enumerator)": [[104, "c.nrf_power_task_t.NRF_POWER_TASK_REGULATOR_UPDATE"]], "nrf_power_task_t.nrf_power_task_semaphore_acquire (c enumerator)": [[104, "c.nrf_power_task_t.NRF_POWER_TASK_SEMAPHORE_ACQUIRE"]], "nrf_power_task_t.nrf_power_task_semaphore_release (c enumerator)": [[104, "c.nrf_power_task_t.NRF_POWER_TASK_SEMAPHORE_RELEASE"]], "nrf_power_task_trigger (c function)": [[104, "c.nrf_power_task_trigger"]], "nrf_power_ulp_mode_check (c function)": [[104, "c.nrf_power_ulp_mode_check"]], "nrf_power_ulp_mode_set (c function)": [[104, "c.nrf_power_ulp_mode_set"]], "nrf_power_ulv_mode_check (c function)": [[104, "c.nrf_power_ulv_mode_check"]], "nrf_power_ulv_mode_set (c function)": [[104, "c.nrf_power_ulv_mode_set"]], "nrf_power_usbregstatus_get (c function)": [[104, "c.nrf_power_usbregstatus_get"]], "nrf_power_usbregstatus_mask_t (c enum)": [[104, "c.nrf_power_usbregstatus_mask_t"]], "nrf_power_usbregstatus_mask_t.nrf_power_usbregstatus_outputrdy_mask (c enumerator)": [[104, "c.nrf_power_usbregstatus_mask_t.NRF_POWER_USBREGSTATUS_OUTPUTRDY_MASK"]], "nrf_power_usbregstatus_mask_t.nrf_power_usbregstatus_vbusdetect_mask (c enumerator)": [[104, "c.nrf_power_usbregstatus_mask_t.NRF_POWER_USBREGSTATUS_VBUSDETECT_MASK"]], "nrf_power_usbregstatus_outrdy_get (c function)": [[104, "c.nrf_power_usbregstatus_outrdy_get"]], "nrf_power_usbregstatus_vbusdet_get (c function)": [[104, "c.nrf_power_usbregstatus_vbusdet_get"]], "nrf_power_vreg_disable (c function)": [[104, "c.nrf_power_vreg_disable"]], "nrf_power_vreg_enable (c function)": [[104, "c.nrf_power_vreg_enable"]], "nrf_power_vreg_enable_check (c function)": [[104, "c.nrf_power_vreg_enable_check"]], "nrf_power_vreg_mask_t (c enum)": [[104, "c.nrf_power_vreg_mask_t"]], "nrf_power_vreg_mask_t.nrf_power_vreg_0v8_mask (c enumerator)": [[104, "c.nrf_power_vreg_mask_t.NRF_POWER_VREG_0V8_MASK"]], "nrf_power_vreg_mask_t.nrf_power_vreg_1v0_mask (c enumerator)": [[104, "c.nrf_power_vreg_mask_t.NRF_POWER_VREG_1V0_MASK"]], "nrf_power_vreg_mask_t.nrf_power_vreg_1v8_mask (c enumerator)": [[104, "c.nrf_power_vreg_mask_t.NRF_POWER_VREG_1V8_MASK"]], "nrf_power_vreg_mask_t.nrf_power_vreg_force_mask (c enumerator)": [[104, "c.nrf_power_vreg_mask_t.NRF_POWER_VREG_FORCE_MASK"]], "nrf_power_vreg_mask_t.nrf_power_vreg_main1v0_mask (c enumerator)": [[104, "c.nrf_power_vreg_mask_t.NRF_POWER_VREG_MAIN1V0_MASK"]], "nrf_power_vreg_mask_t.nrf_power_vreg_main1v8_mask (c enumerator)": [[104, "c.nrf_power_vreg_mask_t.NRF_POWER_VREG_MAIN1V8_MASK"]], "nrf_power_vreg_mask_t.nrf_power_vreg_mainvs_mask (c enumerator)": [[104, "c.nrf_power_vreg_mask_t.NRF_POWER_VREG_MAINVS_MASK"]], "nrf_power_vreg_mask_t.nrf_power_vreg_vs_mask (c enumerator)": [[104, "c.nrf_power_vreg_mask_t.NRF_POWER_VREG_VS_MASK"]], "nrfx_ppi_all_app_channels_mask (c macro)": [[106, "c.NRFX_PPI_ALL_APP_CHANNELS_MASK"]], "nrfx_ppi_all_app_groups_mask (c macro)": [[106, "c.NRFX_PPI_ALL_APP_GROUPS_MASK"]], "nrfx_ppi_prog_app_channels_mask (c macro)": [[106, "c.NRFX_PPI_PROG_APP_CHANNELS_MASK"]], "nrfx_ppi_channel_alloc (c function)": [[106, "c.nrfx_ppi_channel_alloc"]], "nrfx_ppi_channel_assign (c function)": [[106, "c.nrfx_ppi_channel_assign"]], "nrfx_ppi_channel_disable (c function)": [[106, "c.nrfx_ppi_channel_disable"]], "nrfx_ppi_channel_enable (c function)": [[106, "c.nrfx_ppi_channel_enable"]], "nrfx_ppi_channel_fork_assign (c function)": [[106, "c.nrfx_ppi_channel_fork_assign"]], "nrfx_ppi_channel_free (c function)": [[106, "c.nrfx_ppi_channel_free"]], "nrfx_ppi_channel_include_in_group (c function)": [[106, "c.nrfx_ppi_channel_include_in_group"]], "nrfx_ppi_channel_remove_from_group (c function)": [[106, "c.nrfx_ppi_channel_remove_from_group"]], "nrfx_ppi_channel_to_mask (c function)": [[106, "c.nrfx_ppi_channel_to_mask"]], "nrfx_ppi_channels_include_in_group (c function)": [[106, "c.nrfx_ppi_channels_include_in_group"]], "nrfx_ppi_channels_remove_from_group (c function)": [[106, "c.nrfx_ppi_channels_remove_from_group"]], "nrfx_ppi_free_all (c function)": [[106, "c.nrfx_ppi_free_all"]], "nrfx_ppi_group_alloc (c function)": [[106, "c.nrfx_ppi_group_alloc"]], "nrfx_ppi_group_clear (c function)": [[106, "c.nrfx_ppi_group_clear"]], "nrfx_ppi_group_disable (c function)": [[106, "c.nrfx_ppi_group_disable"]], "nrfx_ppi_group_enable (c function)": [[106, "c.nrfx_ppi_group_enable"]], "nrfx_ppi_group_free (c function)": [[106, "c.nrfx_ppi_group_free"]], "nrfx_ppi_task_address_get (c function)": [[106, "c.nrfx_ppi_task_address_get"]], "nrfx_ppi_task_group_disable_address_get (c function)": [[106, "c.nrfx_ppi_task_group_disable_address_get"]], "nrfx_ppi_task_group_enable_address_get (c function)": [[106, "c.nrfx_ppi_task_group_enable_address_get"]], "nrf_ppi_channel_and_fork_endpoint_setup (c function)": [[107, "c.nrf_ppi_channel_and_fork_endpoint_setup"]], "nrf_ppi_channel_disable (c function)": [[107, "c.nrf_ppi_channel_disable"]], "nrf_ppi_channel_enable (c function)": [[107, "c.nrf_ppi_channel_enable"]], "nrf_ppi_channel_enable_get (c function)": [[107, "c.nrf_ppi_channel_enable_get"]], "nrf_ppi_channel_enable_t (c enum)": [[107, "c.nrf_ppi_channel_enable_t"]], "nrf_ppi_channel_enable_t.nrf_ppi_channel_disabled (c enumerator)": [[107, "c.nrf_ppi_channel_enable_t.NRF_PPI_CHANNEL_DISABLED"]], "nrf_ppi_channel_enable_t.nrf_ppi_channel_enabled (c enumerator)": [[107, "c.nrf_ppi_channel_enable_t.NRF_PPI_CHANNEL_ENABLED"]], "nrf_ppi_channel_endpoint_setup (c function)": [[107, "c.nrf_ppi_channel_endpoint_setup"]], "nrf_ppi_channel_group_t (c enum)": [[107, "c.nrf_ppi_channel_group_t"]], "nrf_ppi_channel_group_t.nrf_ppi_channel_group0 (c enumerator)": [[107, "c.nrf_ppi_channel_group_t.NRF_PPI_CHANNEL_GROUP0"]], "nrf_ppi_channel_group_t.nrf_ppi_channel_group1 (c enumerator)": [[107, "c.nrf_ppi_channel_group_t.NRF_PPI_CHANNEL_GROUP1"]], "nrf_ppi_channel_group_t.nrf_ppi_channel_group2 (c enumerator)": [[107, "c.nrf_ppi_channel_group_t.NRF_PPI_CHANNEL_GROUP2"]], "nrf_ppi_channel_group_t.nrf_ppi_channel_group3 (c enumerator)": [[107, "c.nrf_ppi_channel_group_t.NRF_PPI_CHANNEL_GROUP3"]], "nrf_ppi_channel_group_t.nrf_ppi_channel_group4 (c enumerator)": [[107, "c.nrf_ppi_channel_group_t.NRF_PPI_CHANNEL_GROUP4"]], "nrf_ppi_channel_group_t.nrf_ppi_channel_group5 (c enumerator)": [[107, "c.nrf_ppi_channel_group_t.NRF_PPI_CHANNEL_GROUP5"]], "nrf_ppi_channel_include_in_group (c function)": [[107, "c.nrf_ppi_channel_include_in_group"]], "nrf_ppi_channel_include_t (c enum)": [[107, "c.nrf_ppi_channel_include_t"]], "nrf_ppi_channel_include_t.nrf_ppi_channel_exclude (c enumerator)": [[107, "c.nrf_ppi_channel_include_t.NRF_PPI_CHANNEL_EXCLUDE"]], "nrf_ppi_channel_include_t.nrf_ppi_channel_include (c enumerator)": [[107, "c.nrf_ppi_channel_include_t.NRF_PPI_CHANNEL_INCLUDE"]], "nrf_ppi_channel_remove_from_group (c function)": [[107, "c.nrf_ppi_channel_remove_from_group"]], "nrf_ppi_channel_t (c enum)": [[107, "c.nrf_ppi_channel_t"]], "nrf_ppi_channel_t.nrf_ppi_channel0 (c enumerator)": [[107, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL0"]], "nrf_ppi_channel_t.nrf_ppi_channel1 (c enumerator)": [[107, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL1"]], "nrf_ppi_channel_t.nrf_ppi_channel10 (c enumerator)": [[107, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL10"]], "nrf_ppi_channel_t.nrf_ppi_channel11 (c enumerator)": [[107, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL11"]], "nrf_ppi_channel_t.nrf_ppi_channel12 (c enumerator)": [[107, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL12"]], "nrf_ppi_channel_t.nrf_ppi_channel13 (c enumerator)": [[107, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL13"]], "nrf_ppi_channel_t.nrf_ppi_channel14 (c enumerator)": [[107, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL14"]], "nrf_ppi_channel_t.nrf_ppi_channel15 (c enumerator)": [[107, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL15"]], "nrf_ppi_channel_t.nrf_ppi_channel16 (c enumerator)": [[107, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL16"]], "nrf_ppi_channel_t.nrf_ppi_channel17 (c enumerator)": [[107, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL17"]], "nrf_ppi_channel_t.nrf_ppi_channel18 (c enumerator)": [[107, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL18"]], "nrf_ppi_channel_t.nrf_ppi_channel19 (c enumerator)": [[107, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL19"]], "nrf_ppi_channel_t.nrf_ppi_channel2 (c enumerator)": [[107, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL2"]], "nrf_ppi_channel_t.nrf_ppi_channel20 (c enumerator)": [[107, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL20"]], "nrf_ppi_channel_t.nrf_ppi_channel21 (c enumerator)": [[107, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL21"]], "nrf_ppi_channel_t.nrf_ppi_channel22 (c enumerator)": [[107, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL22"]], "nrf_ppi_channel_t.nrf_ppi_channel23 (c enumerator)": [[107, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL23"]], "nrf_ppi_channel_t.nrf_ppi_channel24 (c enumerator)": [[107, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL24"]], "nrf_ppi_channel_t.nrf_ppi_channel25 (c enumerator)": [[107, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL25"]], "nrf_ppi_channel_t.nrf_ppi_channel26 (c enumerator)": [[107, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL26"]], "nrf_ppi_channel_t.nrf_ppi_channel27 (c enumerator)": [[107, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL27"]], "nrf_ppi_channel_t.nrf_ppi_channel28 (c enumerator)": [[107, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL28"]], "nrf_ppi_channel_t.nrf_ppi_channel29 (c enumerator)": [[107, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL29"]], "nrf_ppi_channel_t.nrf_ppi_channel3 (c enumerator)": [[107, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL3"]], "nrf_ppi_channel_t.nrf_ppi_channel30 (c enumerator)": [[107, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL30"]], "nrf_ppi_channel_t.nrf_ppi_channel31 (c enumerator)": [[107, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL31"]], "nrf_ppi_channel_t.nrf_ppi_channel4 (c enumerator)": [[107, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL4"]], "nrf_ppi_channel_t.nrf_ppi_channel5 (c enumerator)": [[107, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL5"]], "nrf_ppi_channel_t.nrf_ppi_channel6 (c enumerator)": [[107, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL6"]], "nrf_ppi_channel_t.nrf_ppi_channel7 (c enumerator)": [[107, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL7"]], "nrf_ppi_channel_t.nrf_ppi_channel8 (c enumerator)": [[107, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL8"]], "nrf_ppi_channel_t.nrf_ppi_channel9 (c enumerator)": [[107, "c.nrf_ppi_channel_t.NRF_PPI_CHANNEL9"]], "nrf_ppi_channels_disable (c function)": [[107, "c.nrf_ppi_channels_disable"]], "nrf_ppi_channels_disable_all (c function)": [[107, "c.nrf_ppi_channels_disable_all"]], "nrf_ppi_channels_enable (c function)": [[107, "c.nrf_ppi_channels_enable"]], "nrf_ppi_channels_group_set (c function)": [[107, "c.nrf_ppi_channels_group_set"]], "nrf_ppi_channels_include_in_group (c function)": [[107, "c.nrf_ppi_channels_include_in_group"]], "nrf_ppi_channels_remove_from_group (c function)": [[107, "c.nrf_ppi_channels_remove_from_group"]], "nrf_ppi_event_endpoint_setup (c function)": [[107, "c.nrf_ppi_event_endpoint_setup"]], "nrf_ppi_fork_endpoint_setup (c function)": [[107, "c.nrf_ppi_fork_endpoint_setup"]], "nrf_ppi_group_clear (c function)": [[107, "c.nrf_ppi_group_clear"]], "nrf_ppi_group_disable (c function)": [[107, "c.nrf_ppi_group_disable"]], "nrf_ppi_group_disable_task_get (c function)": [[107, "c.nrf_ppi_group_disable_task_get"]], "nrf_ppi_group_enable (c function)": [[107, "c.nrf_ppi_group_enable"]], "nrf_ppi_group_enable_task_get (c function)": [[107, "c.nrf_ppi_group_enable_task_get"]], "nrf_ppi_task_address_get (c function)": [[107, "c.nrf_ppi_task_address_get"]], "nrf_ppi_task_endpoint_setup (c function)": [[107, "c.nrf_ppi_task_endpoint_setup"]], "nrf_ppi_task_group_disable_address_get (c function)": [[107, "c.nrf_ppi_task_group_disable_address_get"]], "nrf_ppi_task_group_enable_address_get (c function)": [[107, "c.nrf_ppi_task_group_enable_address_get"]], "nrf_ppi_task_t (c enum)": [[107, "c.nrf_ppi_task_t"]], "nrf_ppi_task_t.nrf_ppi_task_chg0_dis (c enumerator)": [[107, "c.nrf_ppi_task_t.NRF_PPI_TASK_CHG0_DIS"]], "nrf_ppi_task_t.nrf_ppi_task_chg0_en (c enumerator)": [[107, "c.nrf_ppi_task_t.NRF_PPI_TASK_CHG0_EN"]], "nrf_ppi_task_t.nrf_ppi_task_chg1_dis (c enumerator)": [[107, "c.nrf_ppi_task_t.NRF_PPI_TASK_CHG1_DIS"]], "nrf_ppi_task_t.nrf_ppi_task_chg1_en (c enumerator)": [[107, "c.nrf_ppi_task_t.NRF_PPI_TASK_CHG1_EN"]], "nrf_ppi_task_t.nrf_ppi_task_chg2_dis (c enumerator)": [[107, "c.nrf_ppi_task_t.NRF_PPI_TASK_CHG2_DIS"]], "nrf_ppi_task_t.nrf_ppi_task_chg2_en (c enumerator)": [[107, "c.nrf_ppi_task_t.NRF_PPI_TASK_CHG2_EN"]], "nrf_ppi_task_t.nrf_ppi_task_chg3_dis (c enumerator)": [[107, "c.nrf_ppi_task_t.NRF_PPI_TASK_CHG3_DIS"]], "nrf_ppi_task_t.nrf_ppi_task_chg3_en (c enumerator)": [[107, "c.nrf_ppi_task_t.NRF_PPI_TASK_CHG3_EN"]], "nrf_ppi_task_t.nrf_ppi_task_chg4_dis (c enumerator)": [[107, "c.nrf_ppi_task_t.NRF_PPI_TASK_CHG4_DIS"]], "nrf_ppi_task_t.nrf_ppi_task_chg4_en (c enumerator)": [[107, "c.nrf_ppi_task_t.NRF_PPI_TASK_CHG4_EN"]], "nrf_ppi_task_t.nrf_ppi_task_chg5_dis (c enumerator)": [[107, "c.nrf_ppi_task_t.NRF_PPI_TASK_CHG5_DIS"]], "nrf_ppi_task_t.nrf_ppi_task_chg5_en (c enumerator)": [[107, "c.nrf_ppi_task_t.NRF_PPI_TASK_CHG5_EN"]], "nrf_ppi_task_trigger (c function)": [[107, "c.nrf_ppi_task_trigger"]], "nrf_ppib_events_receive_count (c macro)": [[109, "c.NRF_PPIB_EVENTS_RECEIVE_COUNT"]], "nrf_ppib_tasks_send_count (c macro)": [[109, "c.NRF_PPIB_TASKS_SEND_COUNT"]], "nrf_ppib_event_t (c enum)": [[109, "c.nrf_ppib_event_t"]], "nrf_ppib_event_t.nrf_ppib_event_receive_0 (c enumerator)": [[109, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_0"]], "nrf_ppib_event_t.nrf_ppib_event_receive_1 (c enumerator)": [[109, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_1"]], "nrf_ppib_event_t.nrf_ppib_event_receive_10 (c enumerator)": [[109, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_10"]], "nrf_ppib_event_t.nrf_ppib_event_receive_11 (c enumerator)": [[109, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_11"]], "nrf_ppib_event_t.nrf_ppib_event_receive_12 (c enumerator)": [[109, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_12"]], "nrf_ppib_event_t.nrf_ppib_event_receive_13 (c enumerator)": [[109, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_13"]], "nrf_ppib_event_t.nrf_ppib_event_receive_14 (c enumerator)": [[109, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_14"]], "nrf_ppib_event_t.nrf_ppib_event_receive_15 (c enumerator)": [[109, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_15"]], "nrf_ppib_event_t.nrf_ppib_event_receive_16 (c enumerator)": [[109, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_16"]], "nrf_ppib_event_t.nrf_ppib_event_receive_17 (c enumerator)": [[109, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_17"]], "nrf_ppib_event_t.nrf_ppib_event_receive_18 (c enumerator)": [[109, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_18"]], "nrf_ppib_event_t.nrf_ppib_event_receive_19 (c enumerator)": [[109, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_19"]], "nrf_ppib_event_t.nrf_ppib_event_receive_2 (c enumerator)": [[109, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_2"]], "nrf_ppib_event_t.nrf_ppib_event_receive_20 (c enumerator)": [[109, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_20"]], "nrf_ppib_event_t.nrf_ppib_event_receive_21 (c enumerator)": [[109, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_21"]], "nrf_ppib_event_t.nrf_ppib_event_receive_22 (c enumerator)": [[109, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_22"]], "nrf_ppib_event_t.nrf_ppib_event_receive_23 (c enumerator)": [[109, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_23"]], "nrf_ppib_event_t.nrf_ppib_event_receive_24 (c enumerator)": [[109, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_24"]], "nrf_ppib_event_t.nrf_ppib_event_receive_25 (c enumerator)": [[109, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_25"]], "nrf_ppib_event_t.nrf_ppib_event_receive_26 (c enumerator)": [[109, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_26"]], "nrf_ppib_event_t.nrf_ppib_event_receive_27 (c enumerator)": [[109, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_27"]], "nrf_ppib_event_t.nrf_ppib_event_receive_28 (c enumerator)": [[109, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_28"]], "nrf_ppib_event_t.nrf_ppib_event_receive_29 (c enumerator)": [[109, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_29"]], "nrf_ppib_event_t.nrf_ppib_event_receive_3 (c enumerator)": [[109, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_3"]], "nrf_ppib_event_t.nrf_ppib_event_receive_30 (c enumerator)": [[109, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_30"]], "nrf_ppib_event_t.nrf_ppib_event_receive_31 (c enumerator)": [[109, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_31"]], "nrf_ppib_event_t.nrf_ppib_event_receive_4 (c enumerator)": [[109, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_4"]], "nrf_ppib_event_t.nrf_ppib_event_receive_5 (c enumerator)": [[109, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_5"]], "nrf_ppib_event_t.nrf_ppib_event_receive_6 (c enumerator)": [[109, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_6"]], "nrf_ppib_event_t.nrf_ppib_event_receive_7 (c enumerator)": [[109, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_7"]], "nrf_ppib_event_t.nrf_ppib_event_receive_8 (c enumerator)": [[109, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_8"]], "nrf_ppib_event_t.nrf_ppib_event_receive_9 (c enumerator)": [[109, "c.nrf_ppib_event_t.NRF_PPIB_EVENT_RECEIVE_9"]], "nrf_ppib_overflow_check (c function)": [[109, "c.nrf_ppib_overflow_check"]], "nrf_ppib_overflow_get_and_clear (c function)": [[109, "c.nrf_ppib_overflow_get_and_clear"]], "nrf_ppib_publish_clear (c function)": [[109, "c.nrf_ppib_publish_clear"]], "nrf_ppib_publish_set (c function)": [[109, "c.nrf_ppib_publish_set"]], "nrf_ppib_receive_event_get (c function)": [[109, "c.nrf_ppib_receive_event_get"]], "nrf_ppib_send_mask_t (c enum)": [[109, "c.nrf_ppib_send_mask_t"]], "nrf_ppib_send_mask_t.nrf_ppib_send_0_mask (c enumerator)": [[109, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_0_MASK"]], "nrf_ppib_send_mask_t.nrf_ppib_send_10_mask (c enumerator)": [[109, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_10_MASK"]], "nrf_ppib_send_mask_t.nrf_ppib_send_11_mask (c enumerator)": [[109, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_11_MASK"]], "nrf_ppib_send_mask_t.nrf_ppib_send_12_mask (c enumerator)": [[109, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_12_MASK"]], "nrf_ppib_send_mask_t.nrf_ppib_send_13_mask (c enumerator)": [[109, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_13_MASK"]], "nrf_ppib_send_mask_t.nrf_ppib_send_14_mask (c enumerator)": [[109, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_14_MASK"]], "nrf_ppib_send_mask_t.nrf_ppib_send_15_mask (c enumerator)": [[109, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_15_MASK"]], "nrf_ppib_send_mask_t.nrf_ppib_send_16_mask (c enumerator)": [[109, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_16_MASK"]], "nrf_ppib_send_mask_t.nrf_ppib_send_17_mask (c enumerator)": [[109, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_17_MASK"]], "nrf_ppib_send_mask_t.nrf_ppib_send_18_mask (c enumerator)": [[109, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_18_MASK"]], "nrf_ppib_send_mask_t.nrf_ppib_send_19_mask (c enumerator)": [[109, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_19_MASK"]], "nrf_ppib_send_mask_t.nrf_ppib_send_1_mask (c enumerator)": [[109, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_1_MASK"]], "nrf_ppib_send_mask_t.nrf_ppib_send_20_mask (c enumerator)": [[109, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_20_MASK"]], "nrf_ppib_send_mask_t.nrf_ppib_send_21_mask (c enumerator)": [[109, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_21_MASK"]], "nrf_ppib_send_mask_t.nrf_ppib_send_22_mask (c enumerator)": [[109, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_22_MASK"]], "nrf_ppib_send_mask_t.nrf_ppib_send_23_mask (c enumerator)": [[109, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_23_MASK"]], "nrf_ppib_send_mask_t.nrf_ppib_send_24_mask (c enumerator)": [[109, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_24_MASK"]], "nrf_ppib_send_mask_t.nrf_ppib_send_25_mask (c enumerator)": [[109, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_25_MASK"]], "nrf_ppib_send_mask_t.nrf_ppib_send_26_mask (c enumerator)": [[109, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_26_MASK"]], "nrf_ppib_send_mask_t.nrf_ppib_send_27_mask (c enumerator)": [[109, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_27_MASK"]], "nrf_ppib_send_mask_t.nrf_ppib_send_28_mask (c enumerator)": [[109, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_28_MASK"]], "nrf_ppib_send_mask_t.nrf_ppib_send_29_mask (c enumerator)": [[109, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_29_MASK"]], "nrf_ppib_send_mask_t.nrf_ppib_send_2_mask (c enumerator)": [[109, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_2_MASK"]], "nrf_ppib_send_mask_t.nrf_ppib_send_30_mask (c enumerator)": [[109, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_30_MASK"]], "nrf_ppib_send_mask_t.nrf_ppib_send_31_mask (c enumerator)": [[109, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_31_MASK"]], "nrf_ppib_send_mask_t.nrf_ppib_send_3_mask (c enumerator)": [[109, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_3_MASK"]], "nrf_ppib_send_mask_t.nrf_ppib_send_4_mask (c enumerator)": [[109, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_4_MASK"]], "nrf_ppib_send_mask_t.nrf_ppib_send_5_mask (c enumerator)": [[109, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_5_MASK"]], "nrf_ppib_send_mask_t.nrf_ppib_send_6_mask (c enumerator)": [[109, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_6_MASK"]], "nrf_ppib_send_mask_t.nrf_ppib_send_7_mask (c enumerator)": [[109, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_7_MASK"]], "nrf_ppib_send_mask_t.nrf_ppib_send_8_mask (c enumerator)": [[109, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_8_MASK"]], "nrf_ppib_send_mask_t.nrf_ppib_send_9_mask (c enumerator)": [[109, "c.nrf_ppib_send_mask_t.NRF_PPIB_SEND_9_MASK"]], "nrf_ppib_send_task_get (c function)": [[109, "c.nrf_ppib_send_task_get"]], "nrf_ppib_subscribe_clear (c function)": [[109, "c.nrf_ppib_subscribe_clear"]], "nrf_ppib_subscribe_set (c function)": [[109, "c.nrf_ppib_subscribe_set"]], "nrf_ppib_task_t (c enum)": [[109, "c.nrf_ppib_task_t"]], "nrf_ppib_task_t.nrf_ppib_task_send_0 (c enumerator)": [[109, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_0"]], "nrf_ppib_task_t.nrf_ppib_task_send_1 (c enumerator)": [[109, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_1"]], "nrf_ppib_task_t.nrf_ppib_task_send_10 (c enumerator)": [[109, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_10"]], "nrf_ppib_task_t.nrf_ppib_task_send_11 (c enumerator)": [[109, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_11"]], "nrf_ppib_task_t.nrf_ppib_task_send_12 (c enumerator)": [[109, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_12"]], "nrf_ppib_task_t.nrf_ppib_task_send_13 (c enumerator)": [[109, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_13"]], "nrf_ppib_task_t.nrf_ppib_task_send_14 (c enumerator)": [[109, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_14"]], "nrf_ppib_task_t.nrf_ppib_task_send_15 (c enumerator)": [[109, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_15"]], "nrf_ppib_task_t.nrf_ppib_task_send_16 (c enumerator)": [[109, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_16"]], "nrf_ppib_task_t.nrf_ppib_task_send_17 (c enumerator)": [[109, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_17"]], "nrf_ppib_task_t.nrf_ppib_task_send_18 (c enumerator)": [[109, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_18"]], "nrf_ppib_task_t.nrf_ppib_task_send_19 (c enumerator)": [[109, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_19"]], "nrf_ppib_task_t.nrf_ppib_task_send_2 (c enumerator)": [[109, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_2"]], "nrf_ppib_task_t.nrf_ppib_task_send_20 (c enumerator)": [[109, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_20"]], "nrf_ppib_task_t.nrf_ppib_task_send_21 (c enumerator)": [[109, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_21"]], "nrf_ppib_task_t.nrf_ppib_task_send_22 (c enumerator)": [[109, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_22"]], "nrf_ppib_task_t.nrf_ppib_task_send_23 (c enumerator)": [[109, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_23"]], "nrf_ppib_task_t.nrf_ppib_task_send_24 (c enumerator)": [[109, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_24"]], "nrf_ppib_task_t.nrf_ppib_task_send_25 (c enumerator)": [[109, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_25"]], "nrf_ppib_task_t.nrf_ppib_task_send_26 (c enumerator)": [[109, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_26"]], "nrf_ppib_task_t.nrf_ppib_task_send_27 (c enumerator)": [[109, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_27"]], "nrf_ppib_task_t.nrf_ppib_task_send_28 (c enumerator)": [[109, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_28"]], "nrf_ppib_task_t.nrf_ppib_task_send_29 (c enumerator)": [[109, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_29"]], "nrf_ppib_task_t.nrf_ppib_task_send_3 (c enumerator)": [[109, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_3"]], "nrf_ppib_task_t.nrf_ppib_task_send_30 (c enumerator)": [[109, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_30"]], "nrf_ppib_task_t.nrf_ppib_task_send_31 (c enumerator)": [[109, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_31"]], "nrf_ppib_task_t.nrf_ppib_task_send_4 (c enumerator)": [[109, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_4"]], "nrf_ppib_task_t.nrf_ppib_task_send_5 (c enumerator)": [[109, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_5"]], "nrf_ppib_task_t.nrf_ppib_task_send_6 (c enumerator)": [[109, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_6"]], "nrf_ppib_task_t.nrf_ppib_task_send_7 (c enumerator)": [[109, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_7"]], "nrf_ppib_task_t.nrf_ppib_task_send_8 (c enumerator)": [[109, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_8"]], "nrf_ppib_task_t.nrf_ppib_task_send_9 (c enumerator)": [[109, "c.nrf_ppib_task_t.NRF_PPIB_TASK_SEND_9"]], "nrfx_pwm_default_config (c macro)": [[111, "c.NRFX_PWM_DEFAULT_CONFIG"]], "nrfx_pwm_instance (c macro)": [[111, "c.NRFX_PWM_INSTANCE"]], "nrfx_pwm_inst_handler_get (c macro)": [[111, "c.NRFX_PWM_INST_HANDLER_GET"]], "nrfx_pwm_complex_playback (c function)": [[111, "c.nrfx_pwm_complex_playback"]], "nrfx_pwm_config_t (c struct)": [[111, "c.nrfx_pwm_config_t"]], "nrfx_pwm_config_t.base_clock (c var)": [[111, "c.nrfx_pwm_config_t.base_clock"]], "nrfx_pwm_config_t.count_mode (c var)": [[111, "c.nrfx_pwm_config_t.count_mode"]], "nrfx_pwm_config_t.irq_priority (c var)": [[111, "c.nrfx_pwm_config_t.irq_priority"]], "nrfx_pwm_config_t.load_mode (c var)": [[111, "c.nrfx_pwm_config_t.load_mode"]], "nrfx_pwm_config_t.output_pins (c var)": [[111, "c.nrfx_pwm_config_t.output_pins"]], "nrfx_pwm_config_t.pin_inverted (c var)": [[111, "c.nrfx_pwm_config_t.pin_inverted"]], "nrfx_pwm_config_t.skip_gpio_cfg (c var)": [[111, "c.nrfx_pwm_config_t.skip_gpio_cfg"]], "nrfx_pwm_config_t.skip_psel_cfg (c var)": [[111, "c.nrfx_pwm_config_t.skip_psel_cfg"]], "nrfx_pwm_config_t.step_mode (c var)": [[111, "c.nrfx_pwm_config_t.step_mode"]], "nrfx_pwm_config_t.top_value (c var)": [[111, "c.nrfx_pwm_config_t.top_value"]], "nrfx_pwm_event_address_get (c function)": [[111, "c.nrfx_pwm_event_address_get"]], "nrfx_pwm_evt_type_t (c enum)": [[111, "c.nrfx_pwm_evt_type_t"]], "nrfx_pwm_evt_type_t.nrfx_pwm_evt_end_seq0 (c enumerator)": [[111, "c.nrfx_pwm_evt_type_t.NRFX_PWM_EVT_END_SEQ0"]], "nrfx_pwm_evt_type_t.nrfx_pwm_evt_end_seq1 (c enumerator)": [[111, "c.nrfx_pwm_evt_type_t.NRFX_PWM_EVT_END_SEQ1"]], "nrfx_pwm_evt_type_t.nrfx_pwm_evt_finished (c enumerator)": [[111, "c.nrfx_pwm_evt_type_t.NRFX_PWM_EVT_FINISHED"]], "nrfx_pwm_evt_type_t.nrfx_pwm_evt_stopped (c enumerator)": [[111, "c.nrfx_pwm_evt_type_t.NRFX_PWM_EVT_STOPPED"]], "nrfx_pwm_flag_t (c enum)": [[111, "c.nrfx_pwm_flag_t"]], "nrfx_pwm_flag_t.nrfx_pwm_flag_loop (c enumerator)": [[111, "c.nrfx_pwm_flag_t.NRFX_PWM_FLAG_LOOP"]], "nrfx_pwm_flag_t.nrfx_pwm_flag_no_evt_finished (c enumerator)": [[111, "c.nrfx_pwm_flag_t.NRFX_PWM_FLAG_NO_EVT_FINISHED"]], "nrfx_pwm_flag_t.nrfx_pwm_flag_signal_end_seq0 (c enumerator)": [[111, "c.nrfx_pwm_flag_t.NRFX_PWM_FLAG_SIGNAL_END_SEQ0"]], "nrfx_pwm_flag_t.nrfx_pwm_flag_signal_end_seq1 (c enumerator)": [[111, "c.nrfx_pwm_flag_t.NRFX_PWM_FLAG_SIGNAL_END_SEQ1"]], "nrfx_pwm_flag_t.nrfx_pwm_flag_start_via_task (c enumerator)": [[111, "c.nrfx_pwm_flag_t.NRFX_PWM_FLAG_START_VIA_TASK"]], "nrfx_pwm_flag_t.nrfx_pwm_flag_stop (c enumerator)": [[111, "c.nrfx_pwm_flag_t.NRFX_PWM_FLAG_STOP"]], "nrfx_pwm_handler_t (c type)": [[111, "c.nrfx_pwm_handler_t"]], "nrfx_pwm_init (c function)": [[111, "c.nrfx_pwm_init"]], "nrfx_pwm_init_check (c function)": [[111, "c.nrfx_pwm_init_check"]], "nrfx_pwm_reconfigure (c function)": [[111, "c.nrfx_pwm_reconfigure"]], "nrfx_pwm_sequence_update (c function)": [[111, "c.nrfx_pwm_sequence_update"]], "nrfx_pwm_simple_playback (c function)": [[111, "c.nrfx_pwm_simple_playback"]], "nrfx_pwm_step (c function)": [[111, "c.nrfx_pwm_step"]], "nrfx_pwm_stop (c function)": [[111, "c.nrfx_pwm_stop"]], "nrfx_pwm_stopped_check (c function)": [[111, "c.nrfx_pwm_stopped_check"]], "nrfx_pwm_t (c struct)": [[111, "c.nrfx_pwm_t"]], "nrfx_pwm_t.instance_id (c var)": [[111, "c.nrfx_pwm_t.instance_id"]], "nrfx_pwm_t.p_reg (c var)": [[111, "c.nrfx_pwm_t.p_reg"]], "nrfx_pwm_task_address_get (c function)": [[111, "c.nrfx_pwm_task_address_get"]], "nrfx_pwm_uninit (c function)": [[111, "c.nrfx_pwm_uninit"]], "nrf_pwm_channel_count (c macro)": [[112, "c.NRF_PWM_CHANNEL_COUNT"]], "nrf_pwm_has_dma_reg (c macro)": [[112, "c.NRF_PWM_HAS_DMA_REG"]], "nrf_pwm_has_dma_tasks_events (c macro)": [[112, "c.NRF_PWM_HAS_DMA_TASKS_EVENTS"]], "nrf_pwm_has_seq_cnt (c macro)": [[112, "c.NRF_PWM_HAS_SEQ_CNT"]], "nrf_pwm_has_short_loopsdone_seqstart (c macro)": [[112, "c.NRF_PWM_HAS_SHORT_LOOPSDONE_SEQSTART"]], "nrf_pwm_inst_get (c macro)": [[112, "c.NRF_PWM_INST_GET"]], "nrf_pwm_pin_not_connected (c macro)": [[112, "c.NRF_PWM_PIN_NOT_CONNECTED"]], "nrf_pwm_values_length (c macro)": [[112, "c.NRF_PWM_VALUES_LENGTH"]], "nrf_pwm_clk_t (c enum)": [[112, "c.nrf_pwm_clk_t"]], "nrf_pwm_clk_t.nrf_pwm_clk_125khz (c enumerator)": [[112, "c.nrf_pwm_clk_t.NRF_PWM_CLK_125kHz"]], "nrf_pwm_clk_t.nrf_pwm_clk_16mhz (c enumerator)": [[112, "c.nrf_pwm_clk_t.NRF_PWM_CLK_16MHz"]], "nrf_pwm_clk_t.nrf_pwm_clk_1mhz (c enumerator)": [[112, "c.nrf_pwm_clk_t.NRF_PWM_CLK_1MHz"]], "nrf_pwm_clk_t.nrf_pwm_clk_250khz (c enumerator)": [[112, "c.nrf_pwm_clk_t.NRF_PWM_CLK_250kHz"]], "nrf_pwm_clk_t.nrf_pwm_clk_2mhz (c enumerator)": [[112, "c.nrf_pwm_clk_t.NRF_PWM_CLK_2MHz"]], "nrf_pwm_clk_t.nrf_pwm_clk_4mhz (c enumerator)": [[112, "c.nrf_pwm_clk_t.NRF_PWM_CLK_4MHz"]], "nrf_pwm_clk_t.nrf_pwm_clk_500khz (c enumerator)": [[112, "c.nrf_pwm_clk_t.NRF_PWM_CLK_500kHz"]], "nrf_pwm_clk_t.nrf_pwm_clk_8mhz (c enumerator)": [[112, "c.nrf_pwm_clk_t.NRF_PWM_CLK_8MHz"]], "nrf_pwm_configure (c function)": [[112, "c.nrf_pwm_configure"]], "nrf_pwm_dec_load_t (c enum)": [[112, "c.nrf_pwm_dec_load_t"]], "nrf_pwm_dec_load_t.nrf_pwm_load_common (c enumerator)": [[112, "c.nrf_pwm_dec_load_t.NRF_PWM_LOAD_COMMON"]], "nrf_pwm_dec_load_t.nrf_pwm_load_grouped (c enumerator)": [[112, "c.nrf_pwm_dec_load_t.NRF_PWM_LOAD_GROUPED"]], "nrf_pwm_dec_load_t.nrf_pwm_load_individual (c enumerator)": [[112, "c.nrf_pwm_dec_load_t.NRF_PWM_LOAD_INDIVIDUAL"]], "nrf_pwm_dec_load_t.nrf_pwm_load_wave_form (c enumerator)": [[112, "c.nrf_pwm_dec_load_t.NRF_PWM_LOAD_WAVE_FORM"]], "nrf_pwm_dec_step_t (c enum)": [[112, "c.nrf_pwm_dec_step_t"]], "nrf_pwm_dec_step_t.nrf_pwm_step_auto (c enumerator)": [[112, "c.nrf_pwm_dec_step_t.NRF_PWM_STEP_AUTO"]], "nrf_pwm_dec_step_t.nrf_pwm_step_triggered (c enumerator)": [[112, "c.nrf_pwm_dec_step_t.NRF_PWM_STEP_TRIGGERED"]], "nrf_pwm_decoder_set (c function)": [[112, "c.nrf_pwm_decoder_set"]], "nrf_pwm_disable (c function)": [[112, "c.nrf_pwm_disable"]], "nrf_pwm_enable (c function)": [[112, "c.nrf_pwm_enable"]], "nrf_pwm_enable_check (c function)": [[112, "c.nrf_pwm_enable_check"]], "nrf_pwm_event_address_get (c function)": [[112, "c.nrf_pwm_event_address_get"]], "nrf_pwm_event_check (c function)": [[112, "c.nrf_pwm_event_check"]], "nrf_pwm_event_clear (c function)": [[112, "c.nrf_pwm_event_clear"]], "nrf_pwm_event_t (c enum)": [[112, "c.nrf_pwm_event_t"]], "nrf_pwm_event_t.nrf_pwm_event_loopsdone (c enumerator)": [[112, "c.nrf_pwm_event_t.NRF_PWM_EVENT_LOOPSDONE"]], "nrf_pwm_event_t.nrf_pwm_event_pwmperiodend (c enumerator)": [[112, "c.nrf_pwm_event_t.NRF_PWM_EVENT_PWMPERIODEND"]], "nrf_pwm_event_t.nrf_pwm_event_seqend0 (c enumerator)": [[112, "c.nrf_pwm_event_t.NRF_PWM_EVENT_SEQEND0"]], "nrf_pwm_event_t.nrf_pwm_event_seqend1 (c enumerator)": [[112, "c.nrf_pwm_event_t.NRF_PWM_EVENT_SEQEND1"]], "nrf_pwm_event_t.nrf_pwm_event_seqstarted0 (c enumerator)": [[112, "c.nrf_pwm_event_t.NRF_PWM_EVENT_SEQSTARTED0"]], "nrf_pwm_event_t.nrf_pwm_event_seqstarted1 (c enumerator)": [[112, "c.nrf_pwm_event_t.NRF_PWM_EVENT_SEQSTARTED1"]], "nrf_pwm_event_t.nrf_pwm_event_stopped (c enumerator)": [[112, "c.nrf_pwm_event_t.NRF_PWM_EVENT_STOPPED"]], "nrf_pwm_int_disable (c function)": [[112, "c.nrf_pwm_int_disable"]], "nrf_pwm_int_enable (c function)": [[112, "c.nrf_pwm_int_enable"]], "nrf_pwm_int_enable_check (c function)": [[112, "c.nrf_pwm_int_enable_check"]], "nrf_pwm_int_mask_t (c enum)": [[112, "c.nrf_pwm_int_mask_t"]], "nrf_pwm_int_mask_t.nrf_pwm_int_loopsdone_mask (c enumerator)": [[112, "c.nrf_pwm_int_mask_t.NRF_PWM_INT_LOOPSDONE_MASK"]], "nrf_pwm_int_mask_t.nrf_pwm_int_pwmperiodend_mask (c enumerator)": [[112, "c.nrf_pwm_int_mask_t.NRF_PWM_INT_PWMPERIODEND_MASK"]], "nrf_pwm_int_mask_t.nrf_pwm_int_seqend0_mask (c enumerator)": [[112, "c.nrf_pwm_int_mask_t.NRF_PWM_INT_SEQEND0_MASK"]], "nrf_pwm_int_mask_t.nrf_pwm_int_seqend1_mask (c enumerator)": [[112, "c.nrf_pwm_int_mask_t.NRF_PWM_INT_SEQEND1_MASK"]], "nrf_pwm_int_mask_t.nrf_pwm_int_seqstarted0_mask (c enumerator)": [[112, "c.nrf_pwm_int_mask_t.NRF_PWM_INT_SEQSTARTED0_MASK"]], "nrf_pwm_int_mask_t.nrf_pwm_int_seqstarted1_mask (c enumerator)": [[112, "c.nrf_pwm_int_mask_t.NRF_PWM_INT_SEQSTARTED1_MASK"]], "nrf_pwm_int_mask_t.nrf_pwm_int_stopped_mask (c enumerator)": [[112, "c.nrf_pwm_int_mask_t.NRF_PWM_INT_STOPPED_MASK"]], "nrf_pwm_int_set (c function)": [[112, "c.nrf_pwm_int_set"]], "nrf_pwm_loop_set (c function)": [[112, "c.nrf_pwm_loop_set"]], "nrf_pwm_mode_t (c enum)": [[112, "c.nrf_pwm_mode_t"]], "nrf_pwm_mode_t.nrf_pwm_mode_up (c enumerator)": [[112, "c.nrf_pwm_mode_t.NRF_PWM_MODE_UP"]], "nrf_pwm_mode_t.nrf_pwm_mode_up_and_down (c enumerator)": [[112, "c.nrf_pwm_mode_t.NRF_PWM_MODE_UP_AND_DOWN"]], "nrf_pwm_pin_get (c function)": [[112, "c.nrf_pwm_pin_get"]], "nrf_pwm_pins_set (c function)": [[112, "c.nrf_pwm_pins_set"]], "nrf_pwm_publish_clear (c function)": [[112, "c.nrf_pwm_publish_clear"]], "nrf_pwm_publish_set (c function)": [[112, "c.nrf_pwm_publish_set"]], "nrf_pwm_seq_cnt_set (c function)": [[112, "c.nrf_pwm_seq_cnt_set"]], "nrf_pwm_seq_end_delay_set (c function)": [[112, "c.nrf_pwm_seq_end_delay_set"]], "nrf_pwm_seq_ptr_set (c function)": [[112, "c.nrf_pwm_seq_ptr_set"]], "nrf_pwm_seq_refresh_set (c function)": [[112, "c.nrf_pwm_seq_refresh_set"]], "nrf_pwm_seqend_event_get (c function)": [[112, "c.nrf_pwm_seqend_event_get"]], "nrf_pwm_seqstart_task_get (c function)": [[112, "c.nrf_pwm_seqstart_task_get"]], "nrf_pwm_sequence_set (c function)": [[112, "c.nrf_pwm_sequence_set"]], "nrf_pwm_sequence_t (c struct)": [[112, "c.nrf_pwm_sequence_t"]], "nrf_pwm_sequence_t.end_delay (c var)": [[112, "c.nrf_pwm_sequence_t.end_delay"]], "nrf_pwm_sequence_t.length (c var)": [[112, "c.nrf_pwm_sequence_t.length"]], "nrf_pwm_sequence_t.repeats (c var)": [[112, "c.nrf_pwm_sequence_t.repeats"]], "nrf_pwm_sequence_t.values (c var)": [[112, "c.nrf_pwm_sequence_t.values"]], "nrf_pwm_short_mask_t (c enum)": [[112, "c.nrf_pwm_short_mask_t"]], "nrf_pwm_short_mask_t.nrf_pwm_short_loopsdone_seqstart0_mask (c enumerator)": [[112, "c.nrf_pwm_short_mask_t.NRF_PWM_SHORT_LOOPSDONE_SEQSTART0_MASK"]], "nrf_pwm_short_mask_t.nrf_pwm_short_loopsdone_seqstart1_mask (c enumerator)": [[112, "c.nrf_pwm_short_mask_t.NRF_PWM_SHORT_LOOPSDONE_SEQSTART1_MASK"]], "nrf_pwm_short_mask_t.nrf_pwm_short_loopsdone_stop_mask (c enumerator)": [[112, "c.nrf_pwm_short_mask_t.NRF_PWM_SHORT_LOOPSDONE_STOP_MASK"]], "nrf_pwm_short_mask_t.nrf_pwm_short_seqend0_stop_mask (c enumerator)": [[112, "c.nrf_pwm_short_mask_t.NRF_PWM_SHORT_SEQEND0_STOP_MASK"]], "nrf_pwm_short_mask_t.nrf_pwm_short_seqend1_stop_mask (c enumerator)": [[112, "c.nrf_pwm_short_mask_t.NRF_PWM_SHORT_SEQEND1_STOP_MASK"]], "nrf_pwm_shorts_disable (c function)": [[112, "c.nrf_pwm_shorts_disable"]], "nrf_pwm_shorts_enable (c function)": [[112, "c.nrf_pwm_shorts_enable"]], "nrf_pwm_shorts_set (c function)": [[112, "c.nrf_pwm_shorts_set"]], "nrf_pwm_subscribe_clear (c function)": [[112, "c.nrf_pwm_subscribe_clear"]], "nrf_pwm_subscribe_set (c function)": [[112, "c.nrf_pwm_subscribe_set"]], "nrf_pwm_task_address_get (c function)": [[112, "c.nrf_pwm_task_address_get"]], "nrf_pwm_task_t (c enum)": [[112, "c.nrf_pwm_task_t"]], "nrf_pwm_task_t.nrf_pwm_task_nextstep (c enumerator)": [[112, "c.nrf_pwm_task_t.NRF_PWM_TASK_NEXTSTEP"]], "nrf_pwm_task_t.nrf_pwm_task_seqstart0 (c enumerator)": [[112, "c.nrf_pwm_task_t.NRF_PWM_TASK_SEQSTART0"]], "nrf_pwm_task_t.nrf_pwm_task_seqstart1 (c enumerator)": [[112, "c.nrf_pwm_task_t.NRF_PWM_TASK_SEQSTART1"]], "nrf_pwm_task_t.nrf_pwm_task_stop (c enumerator)": [[112, "c.nrf_pwm_task_t.NRF_PWM_TASK_STOP"]], "nrf_pwm_task_trigger (c function)": [[112, "c.nrf_pwm_task_trigger"]], "nrf_pwm_values_common_t (c type)": [[112, "c.nrf_pwm_values_common_t"]], "nrf_pwm_values_grouped_t (c struct)": [[112, "c.nrf_pwm_values_grouped_t"]], "nrf_pwm_values_grouped_t.group_0 (c var)": [[112, "c.nrf_pwm_values_grouped_t.group_0"]], "nrf_pwm_values_grouped_t.group_1 (c var)": [[112, "c.nrf_pwm_values_grouped_t.group_1"]], "nrf_pwm_values_individual_t (c struct)": [[112, "c.nrf_pwm_values_individual_t"]], "nrf_pwm_values_individual_t.channel_0 (c var)": [[112, "c.nrf_pwm_values_individual_t.channel_0"]], "nrf_pwm_values_individual_t.channel_1 (c var)": [[112, "c.nrf_pwm_values_individual_t.channel_1"]], "nrf_pwm_values_individual_t.channel_2 (c var)": [[112, "c.nrf_pwm_values_individual_t.channel_2"]], "nrf_pwm_values_individual_t.channel_3 (c var)": [[112, "c.nrf_pwm_values_individual_t.channel_3"]], "nrf_pwm_values_t (c union)": [[112, "c.nrf_pwm_values_t"]], "nrf_pwm_values_t.p_common (c var)": [[112, "c.nrf_pwm_values_t.p_common"]], "nrf_pwm_values_t.p_grouped (c var)": [[112, "c.nrf_pwm_values_t.p_grouped"]], "nrf_pwm_values_t.p_individual (c var)": [[112, "c.nrf_pwm_values_t.p_individual"]], "nrf_pwm_values_t.p_raw (c var)": [[112, "c.nrf_pwm_values_t.p_raw"]], "nrf_pwm_values_t.p_wave_form (c var)": [[112, "c.nrf_pwm_values_t.p_wave_form"]], "nrf_pwm_values_wave_form_t (c struct)": [[112, "c.nrf_pwm_values_wave_form_t"]], "nrf_pwm_values_wave_form_t.channel_0 (c var)": [[112, "c.nrf_pwm_values_wave_form_t.channel_0"]], "nrf_pwm_values_wave_form_t.channel_1 (c var)": [[112, "c.nrf_pwm_values_wave_form_t.channel_1"]], "nrf_pwm_values_wave_form_t.channel_2 (c var)": [[112, "c.nrf_pwm_values_wave_form_t.channel_2"]], "nrf_pwm_values_wave_form_t.counter_top (c var)": [[112, "c.nrf_pwm_values_wave_form_t.counter_top"]], "nrfy_pwm_abort (c function)": [[113, "c.nrfy_pwm_abort"]], "nrfy_pwm_config_t (c struct)": [[113, "c.nrfy_pwm_config_t"]], "nrfy_pwm_config_t.base_clock (c var)": [[113, "c.nrfy_pwm_config_t.base_clock"]], "nrfy_pwm_config_t.count_mode (c var)": [[113, "c.nrfy_pwm_config_t.count_mode"]], "nrfy_pwm_config_t.load_mode (c var)": [[113, "c.nrfy_pwm_config_t.load_mode"]], "nrfy_pwm_config_t.output_pins (c var)": [[113, "c.nrfy_pwm_config_t.output_pins"]], "nrfy_pwm_config_t.skip_psel_cfg (c var)": [[113, "c.nrfy_pwm_config_t.skip_psel_cfg"]], "nrfy_pwm_config_t.step_mode (c var)": [[113, "c.nrfy_pwm_config_t.step_mode"]], "nrfy_pwm_config_t.top_value (c var)": [[113, "c.nrfy_pwm_config_t.top_value"]], "nrfy_pwm_configure (c function)": [[113, "c.nrfy_pwm_configure"]], "nrfy_pwm_decoder_set (c function)": [[113, "c.nrfy_pwm_decoder_set"]], "nrfy_pwm_disable (c function)": [[113, "c.nrfy_pwm_disable"]], "nrfy_pwm_enable (c function)": [[113, "c.nrfy_pwm_enable"]], "nrfy_pwm_enable_check (c function)": [[113, "c.nrfy_pwm_enable_check"]], "nrfy_pwm_event_address_get (c function)": [[113, "c.nrfy_pwm_event_address_get"]], "nrfy_pwm_event_check (c function)": [[113, "c.nrfy_pwm_event_check"]], "nrfy_pwm_event_clear (c function)": [[113, "c.nrfy_pwm_event_clear"]], "nrfy_pwm_events_process (c function)": [[113, "c.nrfy_pwm_events_process"]], "nrfy_pwm_int_disable (c function)": [[113, "c.nrfy_pwm_int_disable"]], "nrfy_pwm_int_enable (c function)": [[113, "c.nrfy_pwm_int_enable"]], "nrfy_pwm_int_enable_check (c function)": [[113, "c.nrfy_pwm_int_enable_check"]], "nrfy_pwm_int_init (c function)": [[113, "c.nrfy_pwm_int_init"]], "nrfy_pwm_int_set (c function)": [[113, "c.nrfy_pwm_int_set"]], "nrfy_pwm_int_uninit (c function)": [[113, "c.nrfy_pwm_int_uninit"]], "nrfy_pwm_loop_set (c function)": [[113, "c.nrfy_pwm_loop_set"]], "nrfy_pwm_periph_configure (c function)": [[113, "c.nrfy_pwm_periph_configure"]], "nrfy_pwm_pin_get (c function)": [[113, "c.nrfy_pwm_pin_get"]], "nrfy_pwm_pins_set (c function)": [[113, "c.nrfy_pwm_pins_set"]], "nrfy_pwm_publish_clear (c function)": [[113, "c.nrfy_pwm_publish_clear"]], "nrfy_pwm_publish_set (c function)": [[113, "c.nrfy_pwm_publish_set"]], "nrfy_pwm_seqend_event_get (c function)": [[113, "c.nrfy_pwm_seqend_event_get"]], "nrfy_pwm_seqstart_task_get (c function)": [[113, "c.nrfy_pwm_seqstart_task_get"]], "nrfy_pwm_sequence_set (c function)": [[113, "c.nrfy_pwm_sequence_set"]], "nrfy_pwm_shorts_disable (c function)": [[113, "c.nrfy_pwm_shorts_disable"]], "nrfy_pwm_shorts_enable (c function)": [[113, "c.nrfy_pwm_shorts_enable"]], "nrfy_pwm_shorts_set (c function)": [[113, "c.nrfy_pwm_shorts_set"]], "nrfy_pwm_start (c function)": [[113, "c.nrfy_pwm_start"]], "nrfy_pwm_subscribe_clear (c function)": [[113, "c.nrfy_pwm_subscribe_clear"]], "nrfy_pwm_subscribe_set (c function)": [[113, "c.nrfy_pwm_subscribe_set"]], "nrfy_pwm_task_address_get (c function)": [[113, "c.nrfy_pwm_task_address_get"]], "nrfy_pwm_task_trigger (c function)": [[113, "c.nrfy_pwm_task_trigger"]], "nrfx_qdec_default_config (c macro)": [[115, "c.NRFX_QDEC_DEFAULT_CONFIG"]], "nrfx_qdec_instance (c macro)": [[115, "c.NRFX_QDEC_INSTANCE"]], "nrfx_qdec_accumulators_read (c function)": [[115, "c.nrfx_qdec_accumulators_read"]], "nrfx_qdec_config_t (c struct)": [[115, "c.nrfx_qdec_config_t"]], "nrfx_qdec_config_t.dbfen (c var)": [[115, "c.nrfx_qdec_config_t.dbfen"]], "nrfx_qdec_config_t.interrupt_priority (c var)": [[115, "c.nrfx_qdec_config_t.interrupt_priority"]], "nrfx_qdec_config_t.ledpol (c var)": [[115, "c.nrfx_qdec_config_t.ledpol"]], "nrfx_qdec_config_t.ledpre (c var)": [[115, "c.nrfx_qdec_config_t.ledpre"]], "nrfx_qdec_config_t.psela (c var)": [[115, "c.nrfx_qdec_config_t.psela"]], "nrfx_qdec_config_t.pselb (c var)": [[115, "c.nrfx_qdec_config_t.pselb"]], "nrfx_qdec_config_t.pselled (c var)": [[115, "c.nrfx_qdec_config_t.pselled"]], "nrfx_qdec_config_t.reportper (c var)": [[115, "c.nrfx_qdec_config_t.reportper"]], "nrfx_qdec_config_t.reportper_inten (c var)": [[115, "c.nrfx_qdec_config_t.reportper_inten"]], "nrfx_qdec_config_t.sample_inten (c var)": [[115, "c.nrfx_qdec_config_t.sample_inten"]], "nrfx_qdec_config_t.sampleper (c var)": [[115, "c.nrfx_qdec_config_t.sampleper"]], "nrfx_qdec_config_t.skip_gpio_cfg (c var)": [[115, "c.nrfx_qdec_config_t.skip_gpio_cfg"]], "nrfx_qdec_config_t.skip_psel_cfg (c var)": [[115, "c.nrfx_qdec_config_t.skip_psel_cfg"]], "nrfx_qdec_disable (c function)": [[115, "c.nrfx_qdec_disable"]], "nrfx_qdec_enable (c function)": [[115, "c.nrfx_qdec_enable"]], "nrfx_qdec_event_address_get (c function)": [[115, "c.nrfx_qdec_event_address_get"]], "nrfx_qdec_event_handler_t (c type)": [[115, "c.nrfx_qdec_event_handler_t"]], "nrfx_qdec_event_t (c struct)": [[115, "c.nrfx_qdec_event_t"]], "nrfx_qdec_event_t.data (c var)": [[115, "c.nrfx_qdec_event_t.data"]], "nrfx_qdec_event_t.report (c var)": [[115, "c.nrfx_qdec_event_t.report"]], "nrfx_qdec_event_t.sample (c var)": [[115, "c.nrfx_qdec_event_t.sample"]], "nrfx_qdec_event_t.type (c var)": [[115, "c.nrfx_qdec_event_t.type"]], "nrfx_qdec_init (c function)": [[115, "c.nrfx_qdec_init"]], "nrfx_qdec_init_check (c function)": [[115, "c.nrfx_qdec_init_check"]], "nrfx_qdec_reconfigure (c function)": [[115, "c.nrfx_qdec_reconfigure"]], "nrfx_qdec_report_data_evt_t (c struct)": [[115, "c.nrfx_qdec_report_data_evt_t"]], "nrfx_qdec_report_data_evt_t.acc (c var)": [[115, "c.nrfx_qdec_report_data_evt_t.acc"]], "nrfx_qdec_report_data_evt_t.accdbl (c var)": [[115, "c.nrfx_qdec_report_data_evt_t.accdbl"]], "nrfx_qdec_sample_data_evt_t (c struct)": [[115, "c.nrfx_qdec_sample_data_evt_t"]], "nrfx_qdec_sample_data_evt_t.value (c var)": [[115, "c.nrfx_qdec_sample_data_evt_t.value"]], "nrfx_qdec_t (c struct)": [[115, "c.nrfx_qdec_t"]], "nrfx_qdec_t.drv_inst_idx (c var)": [[115, "c.nrfx_qdec_t.drv_inst_idx"]], "nrfx_qdec_t.p_reg (c var)": [[115, "c.nrfx_qdec_t.p_reg"]], "nrfx_qdec_task_address_get (c function)": [[115, "c.nrfx_qdec_task_address_get"]], "nrfx_qdec_uninit (c function)": [[115, "c.nrfx_qdec_uninit"]], "nrf_qdec_has_event_dblrdy (c macro)": [[116, "c.NRF_QDEC_HAS_EVENT_DBLRDY"]], "nrf_qdec_has_event_stopped (c macro)": [[116, "c.NRF_QDEC_HAS_EVENT_STOPPED"]], "nrf_qdec_has_task_rdclracc (c macro)": [[116, "c.NRF_QDEC_HAS_TASK_RDCLRACC"]], "nrf_qdec_has_task_rdclrdbl (c macro)": [[116, "c.NRF_QDEC_HAS_TASK_RDCLRDBL"]], "nrf_qdec_ledpre_default (c macro)": [[116, "c.NRF_QDEC_LEDPRE_DEFAULT"]], "nrf_qdec_pin_not_connected (c macro)": [[116, "c.NRF_QDEC_PIN_NOT_CONNECTED"]], "nrf_qdec_acc_get (c function)": [[116, "c.nrf_qdec_acc_get"]], "nrf_qdec_accdbl_get (c function)": [[116, "c.nrf_qdec_accdbl_get"]], "nrf_qdec_accdblread_get (c function)": [[116, "c.nrf_qdec_accdblread_get"]], "nrf_qdec_accread_get (c function)": [[116, "c.nrf_qdec_accread_get"]], "nrf_qdec_dbfen_disable (c function)": [[116, "c.nrf_qdec_dbfen_disable"]], "nrf_qdec_dbfen_enable (c function)": [[116, "c.nrf_qdec_dbfen_enable"]], "nrf_qdec_dbfen_get (c function)": [[116, "c.nrf_qdec_dbfen_get"]], "nrf_qdec_dbfen_t (c enum)": [[116, "c.nrf_qdec_dbfen_t"]], "nrf_qdec_dbfen_t.nrf_qdec_dbfen_disable (c enumerator)": [[116, "c.nrf_qdec_dbfen_t.NRF_QDEC_DBFEN_DISABLE"]], "nrf_qdec_dbfen_t.nrf_qdec_dbfen_enable (c enumerator)": [[116, "c.nrf_qdec_dbfen_t.NRF_QDEC_DBFEN_ENABLE"]], "nrf_qdec_disable (c function)": [[116, "c.nrf_qdec_disable"]], "nrf_qdec_enable (c function)": [[116, "c.nrf_qdec_enable"]], "nrf_qdec_enable_get (c function)": [[116, "c.nrf_qdec_enable_get"]], "nrf_qdec_enable_t (c enum)": [[116, "c.nrf_qdec_enable_t"]], "nrf_qdec_enable_t.nrf_qdec_disable (c enumerator)": [[116, "c.nrf_qdec_enable_t.NRF_QDEC_DISABLE"]], "nrf_qdec_enable_t.nrf_qdec_enable (c enumerator)": [[116, "c.nrf_qdec_enable_t.NRF_QDEC_ENABLE"]], "nrf_qdec_event_address_get (c function)": [[116, "c.nrf_qdec_event_address_get"]], "nrf_qdec_event_check (c function)": [[116, "c.nrf_qdec_event_check"]], "nrf_qdec_event_clear (c function)": [[116, "c.nrf_qdec_event_clear"]], "nrf_qdec_event_t (c enum)": [[116, "c.nrf_qdec_event_t"]], "nrf_qdec_event_t.nrf_qdec_event_accof (c enumerator)": [[116, "c.nrf_qdec_event_t.NRF_QDEC_EVENT_ACCOF"]], "nrf_qdec_event_t.nrf_qdec_event_dblrdy (c enumerator)": [[116, "c.nrf_qdec_event_t.NRF_QDEC_EVENT_DBLRDY"]], "nrf_qdec_event_t.nrf_qdec_event_reportrdy (c enumerator)": [[116, "c.nrf_qdec_event_t.NRF_QDEC_EVENT_REPORTRDY"]], "nrf_qdec_event_t.nrf_qdec_event_samplerdy (c enumerator)": [[116, "c.nrf_qdec_event_t.NRF_QDEC_EVENT_SAMPLERDY"]], "nrf_qdec_event_t.nrf_qdec_event_stopped (c enumerator)": [[116, "c.nrf_qdec_event_t.NRF_QDEC_EVENT_STOPPED"]], "nrf_qdec_int_disable (c function)": [[116, "c.nrf_qdec_int_disable"]], "nrf_qdec_int_enable (c function)": [[116, "c.nrf_qdec_int_enable"]], "nrf_qdec_int_enable_check (c function)": [[116, "c.nrf_qdec_int_enable_check"]], "nrf_qdec_int_mask_t (c enum)": [[116, "c.nrf_qdec_int_mask_t"]], "nrf_qdec_int_mask_t.nrf_qdec_int_accof_mask (c enumerator)": [[116, "c.nrf_qdec_int_mask_t.NRF_QDEC_INT_ACCOF_MASK"]], "nrf_qdec_int_mask_t.nrf_qdec_int_reportrdy_mask (c enumerator)": [[116, "c.nrf_qdec_int_mask_t.NRF_QDEC_INT_REPORTRDY_MASK"]], "nrf_qdec_int_mask_t.nrf_qdec_int_samplerdy_mask (c enumerator)": [[116, "c.nrf_qdec_int_mask_t.NRF_QDEC_INT_SAMPLERDY_MASK"]], "nrf_qdec_led_pin_get (c function)": [[116, "c.nrf_qdec_led_pin_get"]], "nrf_qdec_ledpol_get (c function)": [[116, "c.nrf_qdec_ledpol_get"]], "nrf_qdec_ledpol_set (c function)": [[116, "c.nrf_qdec_ledpol_set"]], "nrf_qdec_ledpol_t (c enum)": [[116, "c.nrf_qdec_ledpol_t"]], "nrf_qdec_ledpol_t.nrf_qdec_lepol_active_high (c enumerator)": [[116, "c.nrf_qdec_ledpol_t.NRF_QDEC_LEPOL_ACTIVE_HIGH"]], "nrf_qdec_ledpol_t.nrf_qdec_lepol_active_low (c enumerator)": [[116, "c.nrf_qdec_ledpol_t.NRF_QDEC_LEPOL_ACTIVE_LOW"]], "nrf_qdec_ledpre_get (c function)": [[116, "c.nrf_qdec_ledpre_get"]], "nrf_qdec_ledpre_set (c function)": [[116, "c.nrf_qdec_ledpre_set"]], "nrf_qdec_phase_a_pin_get (c function)": [[116, "c.nrf_qdec_phase_a_pin_get"]], "nrf_qdec_phase_b_pin_get (c function)": [[116, "c.nrf_qdec_phase_b_pin_get"]], "nrf_qdec_pins_set (c function)": [[116, "c.nrf_qdec_pins_set"]], "nrf_qdec_reportper_get (c function)": [[116, "c.nrf_qdec_reportper_get"]], "nrf_qdec_reportper_set (c function)": [[116, "c.nrf_qdec_reportper_set"]], "nrf_qdec_reportper_t (c enum)": [[116, "c.nrf_qdec_reportper_t"]], "nrf_qdec_reportper_t.nrf_qdec_reportper_1 (c enumerator)": [[116, "c.nrf_qdec_reportper_t.NRF_QDEC_REPORTPER_1"]], "nrf_qdec_reportper_t.nrf_qdec_reportper_10 (c enumerator)": [[116, "c.nrf_qdec_reportper_t.NRF_QDEC_REPORTPER_10"]], "nrf_qdec_reportper_t.nrf_qdec_reportper_120 (c enumerator)": [[116, "c.nrf_qdec_reportper_t.NRF_QDEC_REPORTPER_120"]], "nrf_qdec_reportper_t.nrf_qdec_reportper_160 (c enumerator)": [[116, "c.nrf_qdec_reportper_t.NRF_QDEC_REPORTPER_160"]], "nrf_qdec_reportper_t.nrf_qdec_reportper_200 (c enumerator)": [[116, "c.nrf_qdec_reportper_t.NRF_QDEC_REPORTPER_200"]], "nrf_qdec_reportper_t.nrf_qdec_reportper_240 (c enumerator)": [[116, "c.nrf_qdec_reportper_t.NRF_QDEC_REPORTPER_240"]], "nrf_qdec_reportper_t.nrf_qdec_reportper_280 (c enumerator)": [[116, "c.nrf_qdec_reportper_t.NRF_QDEC_REPORTPER_280"]], "nrf_qdec_reportper_t.nrf_qdec_reportper_40 (c enumerator)": [[116, "c.nrf_qdec_reportper_t.NRF_QDEC_REPORTPER_40"]], "nrf_qdec_reportper_t.nrf_qdec_reportper_80 (c enumerator)": [[116, "c.nrf_qdec_reportper_t.NRF_QDEC_REPORTPER_80"]], "nrf_qdec_reportper_to_value (c function)": [[116, "c.nrf_qdec_reportper_to_value"]], "nrf_qdec_sample_get (c function)": [[116, "c.nrf_qdec_sample_get"]], "nrf_qdec_sampleper_get (c function)": [[116, "c.nrf_qdec_sampleper_get"]], "nrf_qdec_sampleper_set (c function)": [[116, "c.nrf_qdec_sampleper_set"]], "nrf_qdec_sampleper_t (c enum)": [[116, "c.nrf_qdec_sampleper_t"]], "nrf_qdec_sampleper_t.nrf_qdec_sampleper_1024us (c enumerator)": [[116, "c.nrf_qdec_sampleper_t.NRF_QDEC_SAMPLEPER_1024US"]], "nrf_qdec_sampleper_t.nrf_qdec_sampleper_128us (c enumerator)": [[116, "c.nrf_qdec_sampleper_t.NRF_QDEC_SAMPLEPER_128US"]], "nrf_qdec_sampleper_t.nrf_qdec_sampleper_16384us (c enumerator)": [[116, "c.nrf_qdec_sampleper_t.NRF_QDEC_SAMPLEPER_16384US"]], "nrf_qdec_sampleper_t.nrf_qdec_sampleper_2048us (c enumerator)": [[116, "c.nrf_qdec_sampleper_t.NRF_QDEC_SAMPLEPER_2048US"]], "nrf_qdec_sampleper_t.nrf_qdec_sampleper_256us (c enumerator)": [[116, "c.nrf_qdec_sampleper_t.NRF_QDEC_SAMPLEPER_256US"]], "nrf_qdec_sampleper_t.nrf_qdec_sampleper_4096us (c enumerator)": [[116, "c.nrf_qdec_sampleper_t.NRF_QDEC_SAMPLEPER_4096US"]], "nrf_qdec_sampleper_t.nrf_qdec_sampleper_512us (c enumerator)": [[116, "c.nrf_qdec_sampleper_t.NRF_QDEC_SAMPLEPER_512US"]], "nrf_qdec_sampleper_t.nrf_qdec_sampleper_8192us (c enumerator)": [[116, "c.nrf_qdec_sampleper_t.NRF_QDEC_SAMPLEPER_8192US"]], "nrf_qdec_sampleper_to_value (c function)": [[116, "c.nrf_qdec_sampleper_to_value"]], "nrf_qdec_short_mask_t (c enum)": [[116, "c.nrf_qdec_short_mask_t"]], "nrf_qdec_short_mask_t.nrf_qdec_short_reportrdy_readclracc_mask (c enumerator)": [[116, "c.nrf_qdec_short_mask_t.NRF_QDEC_SHORT_REPORTRDY_READCLRACC_MASK"]], "nrf_qdec_short_mask_t.nrf_qdec_short_samplerdy_stop_mask (c enumerator)": [[116, "c.nrf_qdec_short_mask_t.NRF_QDEC_SHORT_SAMPLERDY_STOP_MASK"]], "nrf_qdec_shorts_disable (c function)": [[116, "c.nrf_qdec_shorts_disable"]], "nrf_qdec_shorts_enable (c function)": [[116, "c.nrf_qdec_shorts_enable"]], "nrf_qdec_task_address_get (c function)": [[116, "c.nrf_qdec_task_address_get"]], "nrf_qdec_task_t (c enum)": [[116, "c.nrf_qdec_task_t"]], "nrf_qdec_task_t.nrf_qdec_task_rdclracc (c enumerator)": [[116, "c.nrf_qdec_task_t.NRF_QDEC_TASK_RDCLRACC"]], "nrf_qdec_task_t.nrf_qdec_task_rdclrdbl (c enumerator)": [[116, "c.nrf_qdec_task_t.NRF_QDEC_TASK_RDCLRDBL"]], "nrf_qdec_task_t.nrf_qdec_task_readclracc (c enumerator)": [[116, "c.nrf_qdec_task_t.NRF_QDEC_TASK_READCLRACC"]], "nrf_qdec_task_t.nrf_qdec_task_start (c enumerator)": [[116, "c.nrf_qdec_task_t.NRF_QDEC_TASK_START"]], "nrf_qdec_task_t.nrf_qdec_task_stop (c enumerator)": [[116, "c.nrf_qdec_task_t.NRF_QDEC_TASK_STOP"]], "nrf_qdec_task_trigger (c function)": [[116, "c.nrf_qdec_task_trigger"]], "nrfy_qdec_a_pin_get (c function)": [[117, "c.nrfy_qdec_a_pin_get"]], "nrfy_qdec_acc_get (c function)": [[117, "c.nrfy_qdec_acc_get"]], "nrfy_qdec_accdbl_get (c function)": [[117, "c.nrfy_qdec_accdbl_get"]], "nrfy_qdec_accdblread_get (c function)": [[117, "c.nrfy_qdec_accdblread_get"]], "nrfy_qdec_accread_get (c function)": [[117, "c.nrfy_qdec_accread_get"]], "nrfy_qdec_accumulators_read (c function)": [[117, "c.nrfy_qdec_accumulators_read"]], "nrfy_qdec_b_pin_get (c function)": [[117, "c.nrfy_qdec_b_pin_get"]], "nrfy_qdec_config_t (c struct)": [[117, "c.nrfy_qdec_config_t"]], "nrfy_qdec_config_t.dbfen (c var)": [[117, "c.nrfy_qdec_config_t.dbfen"]], "nrfy_qdec_config_t.ledpol (c var)": [[117, "c.nrfy_qdec_config_t.ledpol"]], "nrfy_qdec_config_t.ledpre (c var)": [[117, "c.nrfy_qdec_config_t.ledpre"]], "nrfy_qdec_config_t.pins (c var)": [[117, "c.nrfy_qdec_config_t.pins"]], "nrfy_qdec_config_t.reportper (c var)": [[117, "c.nrfy_qdec_config_t.reportper"]], "nrfy_qdec_config_t.sampleper (c var)": [[117, "c.nrfy_qdec_config_t.sampleper"]], "nrfy_qdec_config_t.skip_psel_cfg (c var)": [[117, "c.nrfy_qdec_config_t.skip_psel_cfg"]], "nrfy_qdec_dbfen_disable (c function)": [[117, "c.nrfy_qdec_dbfen_disable"]], "nrfy_qdec_dbfen_enable (c function)": [[117, "c.nrfy_qdec_dbfen_enable"]], "nrfy_qdec_dbfen_get (c function)": [[117, "c.nrfy_qdec_dbfen_get"]], "nrfy_qdec_disable (c function)": [[117, "c.nrfy_qdec_disable"]], "nrfy_qdec_enable (c function)": [[117, "c.nrfy_qdec_enable"]], "nrfy_qdec_enable_get (c function)": [[117, "c.nrfy_qdec_enable_get"]], "nrfy_qdec_event_address_get (c function)": [[117, "c.nrfy_qdec_event_address_get"]], "nrfy_qdec_event_check (c function)": [[117, "c.nrfy_qdec_event_check"]], "nrfy_qdec_event_clear (c function)": [[117, "c.nrfy_qdec_event_clear"]], "nrfy_qdec_events_process (c function)": [[117, "c.nrfy_qdec_events_process"]], "nrfy_qdec_int_disable (c function)": [[117, "c.nrfy_qdec_int_disable"]], "nrfy_qdec_int_enable (c function)": [[117, "c.nrfy_qdec_int_enable"]], "nrfy_qdec_int_enable_check (c function)": [[117, "c.nrfy_qdec_int_enable_check"]], "nrfy_qdec_int_init (c function)": [[117, "c.nrfy_qdec_int_init"]], "nrfy_qdec_int_uninit (c function)": [[117, "c.nrfy_qdec_int_uninit"]], "nrfy_qdec_led_pin_get (c function)": [[117, "c.nrfy_qdec_led_pin_get"]], "nrfy_qdec_ledpol_get (c function)": [[117, "c.nrfy_qdec_ledpol_get"]], "nrfy_qdec_ledpol_set (c function)": [[117, "c.nrfy_qdec_ledpol_set"]], "nrfy_qdec_ledpre_get (c function)": [[117, "c.nrfy_qdec_ledpre_get"]], "nrfy_qdec_ledpre_set (c function)": [[117, "c.nrfy_qdec_ledpre_set"]], "nrfy_qdec_periph_configure (c function)": [[117, "c.nrfy_qdec_periph_configure"]], "nrfy_qdec_pins_get (c function)": [[117, "c.nrfy_qdec_pins_get"]], "nrfy_qdec_pins_set (c function)": [[117, "c.nrfy_qdec_pins_set"]], "nrfy_qdec_pins_t (c struct)": [[117, "c.nrfy_qdec_pins_t"]], "nrfy_qdec_pins_t.a_pin (c var)": [[117, "c.nrfy_qdec_pins_t.a_pin"]], "nrfy_qdec_pins_t.b_pin (c var)": [[117, "c.nrfy_qdec_pins_t.b_pin"]], "nrfy_qdec_pins_t.led_pin (c var)": [[117, "c.nrfy_qdec_pins_t.led_pin"]], "nrfy_qdec_reportper_get (c function)": [[117, "c.nrfy_qdec_reportper_get"]], "nrfy_qdec_reportper_set (c function)": [[117, "c.nrfy_qdec_reportper_set"]], "nrfy_qdec_reportper_to_value (c function)": [[117, "c.nrfy_qdec_reportper_to_value"]], "nrfy_qdec_sample_get (c function)": [[117, "c.nrfy_qdec_sample_get"]], "nrfy_qdec_sampleper_get (c function)": [[117, "c.nrfy_qdec_sampleper_get"]], "nrfy_qdec_sampleper_set (c function)": [[117, "c.nrfy_qdec_sampleper_set"]], "nrfy_qdec_sampleper_to_value (c function)": [[117, "c.nrfy_qdec_sampleper_to_value"]], "nrfy_qdec_shorts_disable (c function)": [[117, "c.nrfy_qdec_shorts_disable"]], "nrfy_qdec_shorts_enable (c function)": [[117, "c.nrfy_qdec_shorts_enable"]], "nrfy_qdec_task_address_get (c function)": [[117, "c.nrfy_qdec_task_address_get"]], "nrfy_qdec_task_trigger (c function)": [[117, "c.nrfy_qdec_task_trigger"]], "nrfx_qspi_default_cinstr (c macro)": [[119, "c.NRFX_QSPI_DEFAULT_CINSTR"]], "nrfx_qspi_default_config (c macro)": [[119, "c.NRFX_QSPI_DEFAULT_CONFIG"]], "nrfx_qspi_activate (c function)": [[119, "c.nrfx_qspi_activate"]], "nrfx_qspi_chip_erase (c function)": [[119, "c.nrfx_qspi_chip_erase"]], "nrfx_qspi_cinstr_quick_send (c function)": [[119, "c.nrfx_qspi_cinstr_quick_send"]], "nrfx_qspi_cinstr_xfer (c function)": [[119, "c.nrfx_qspi_cinstr_xfer"]], "nrfx_qspi_config_t (c struct)": [[119, "c.nrfx_qspi_config_t"]], "nrfx_qspi_config_t.irq_priority (c var)": [[119, "c.nrfx_qspi_config_t.irq_priority"]], "nrfx_qspi_config_t.phy_if (c var)": [[119, "c.nrfx_qspi_config_t.phy_if"]], "nrfx_qspi_config_t.pins (c var)": [[119, "c.nrfx_qspi_config_t.pins"]], "nrfx_qspi_config_t.prot_if (c var)": [[119, "c.nrfx_qspi_config_t.prot_if"]], "nrfx_qspi_config_t.skip_gpio_cfg (c var)": [[119, "c.nrfx_qspi_config_t.skip_gpio_cfg"]], "nrfx_qspi_config_t.skip_psel_cfg (c var)": [[119, "c.nrfx_qspi_config_t.skip_psel_cfg"]], "nrfx_qspi_config_t.timeout (c var)": [[119, "c.nrfx_qspi_config_t.timeout"]], "nrfx_qspi_config_t.xip_offset (c var)": [[119, "c.nrfx_qspi_config_t.xip_offset"]], "nrfx_qspi_deactivate (c function)": [[119, "c.nrfx_qspi_deactivate"]], "nrfx_qspi_dma_encrypt (c function)": [[119, "c.nrfx_qspi_dma_encrypt"]], "nrfx_qspi_erase (c function)": [[119, "c.nrfx_qspi_erase"]], "nrfx_qspi_event_extended_get (c function)": [[119, "c.nrfx_qspi_event_extended_get"]], "nrfx_qspi_evt_ext_erase_t (c struct)": [[119, "c.nrfx_qspi_evt_ext_erase_t"]], "nrfx_qspi_evt_ext_erase_t.addr (c var)": [[119, "c.nrfx_qspi_evt_ext_erase_t.addr"]], "nrfx_qspi_evt_ext_erase_t.len (c var)": [[119, "c.nrfx_qspi_evt_ext_erase_t.len"]], "nrfx_qspi_evt_ext_t (c struct)": [[119, "c.nrfx_qspi_evt_ext_t"]], "nrfx_qspi_evt_ext_t.data (c var)": [[119, "c.nrfx_qspi_evt_ext_t.data"]], "nrfx_qspi_evt_ext_t.erase (c var)": [[119, "c.nrfx_qspi_evt_ext_t.erase"]], "nrfx_qspi_evt_ext_t.type (c var)": [[119, "c.nrfx_qspi_evt_ext_t.type"]], "nrfx_qspi_evt_ext_t.xfer (c var)": [[119, "c.nrfx_qspi_evt_ext_t.xfer"]], "nrfx_qspi_evt_ext_type_t (c enum)": [[119, "c.nrfx_qspi_evt_ext_type_t"]], "nrfx_qspi_evt_ext_type_t.nrfx_qspi_event_erase_done (c enumerator)": [[119, "c.nrfx_qspi_evt_ext_type_t.NRFX_QSPI_EVENT_ERASE_DONE"]], "nrfx_qspi_evt_ext_type_t.nrfx_qspi_event_none (c enumerator)": [[119, "c.nrfx_qspi_evt_ext_type_t.NRFX_QSPI_EVENT_NONE"]], "nrfx_qspi_evt_ext_type_t.nrfx_qspi_event_read_done (c enumerator)": [[119, "c.nrfx_qspi_evt_ext_type_t.NRFX_QSPI_EVENT_READ_DONE"]], "nrfx_qspi_evt_ext_type_t.nrfx_qspi_event_write_done (c enumerator)": [[119, "c.nrfx_qspi_evt_ext_type_t.NRFX_QSPI_EVENT_WRITE_DONE"]], "nrfx_qspi_evt_ext_xfer_t (c struct)": [[119, "c.nrfx_qspi_evt_ext_xfer_t"]], "nrfx_qspi_evt_ext_xfer_t.addr (c var)": [[119, "c.nrfx_qspi_evt_ext_xfer_t.addr"]], "nrfx_qspi_evt_ext_xfer_t.p_buffer (c var)": [[119, "c.nrfx_qspi_evt_ext_xfer_t.p_buffer"]], "nrfx_qspi_evt_ext_xfer_t.size (c var)": [[119, "c.nrfx_qspi_evt_ext_xfer_t.size"]], "nrfx_qspi_evt_t (c enum)": [[119, "c.nrfx_qspi_evt_t"]], "nrfx_qspi_evt_t.nrfx_qspi_event_done (c enumerator)": [[119, "c.nrfx_qspi_evt_t.NRFX_QSPI_EVENT_DONE"]], "nrfx_qspi_handler_t (c type)": [[119, "c.nrfx_qspi_handler_t"]], "nrfx_qspi_init (c function)": [[119, "c.nrfx_qspi_init"]], "nrfx_qspi_init_check (c function)": [[119, "c.nrfx_qspi_init_check"]], "nrfx_qspi_lfm_start (c function)": [[119, "c.nrfx_qspi_lfm_start"]], "nrfx_qspi_lfm_xfer (c function)": [[119, "c.nrfx_qspi_lfm_xfer"]], "nrfx_qspi_mem_busy_check (c function)": [[119, "c.nrfx_qspi_mem_busy_check"]], "nrfx_qspi_read (c function)": [[119, "c.nrfx_qspi_read"]], "nrfx_qspi_reconfigure (c function)": [[119, "c.nrfx_qspi_reconfigure"]], "nrfx_qspi_timeout_signal (c function)": [[119, "c.nrfx_qspi_timeout_signal"]], "nrfx_qspi_uninit (c function)": [[119, "c.nrfx_qspi_uninit"]], "nrfx_qspi_write (c function)": [[119, "c.nrfx_qspi_write"]], "nrfx_qspi_xfer_buffered_check (c function)": [[119, "c.nrfx_qspi_xfer_buffered_check"]], "nrfx_qspi_xip_encrypt (c function)": [[119, "c.nrfx_qspi_xip_encrypt"]], "nrf_qspi_base_clock_freq (c macro)": [[120, "c.NRF_QSPI_BASE_CLOCK_FREQ"]], "nrf_qspi_has_dma_enc (c macro)": [[120, "c.NRF_QSPI_HAS_DMA_ENC"]], "nrf_qspi_has_mode_1 (c macro)": [[120, "c.NRF_QSPI_HAS_MODE_1"]], "nrf_qspi_has_xipen (c macro)": [[120, "c.NRF_QSPI_HAS_XIPEN"]], "nrf_qspi_has_xip_enc (c macro)": [[120, "c.NRF_QSPI_HAS_XIP_ENC"]], "nrf_qspi_pin_not_connected (c macro)": [[120, "c.NRF_QSPI_PIN_NOT_CONNECTED"]], "nrf_qspi_pin_val (c macro)": [[120, "c.NRF_QSPI_PIN_VAL"]], "nrf_qspi_addrconfig_conf_t (c struct)": [[120, "c.nrf_qspi_addrconfig_conf_t"]], "nrf_qspi_addrconfig_conf_t.byte0 (c var)": [[120, "c.nrf_qspi_addrconfig_conf_t.byte0"]], "nrf_qspi_addrconfig_conf_t.byte1 (c var)": [[120, "c.nrf_qspi_addrconfig_conf_t.byte1"]], "nrf_qspi_addrconfig_conf_t.mode (c var)": [[120, "c.nrf_qspi_addrconfig_conf_t.mode"]], "nrf_qspi_addrconfig_conf_t.opcode (c var)": [[120, "c.nrf_qspi_addrconfig_conf_t.opcode"]], "nrf_qspi_addrconfig_conf_t.wipwait (c var)": [[120, "c.nrf_qspi_addrconfig_conf_t.wipwait"]], "nrf_qspi_addrconfig_conf_t.wren (c var)": [[120, "c.nrf_qspi_addrconfig_conf_t.wren"]], "nrf_qspi_addrconfig_mode_t (c enum)": [[120, "c.nrf_qspi_addrconfig_mode_t"]], "nrf_qspi_addrconfig_mode_t.nrf_qspi_addrconf_mode_all (c enumerator)": [[120, "c.nrf_qspi_addrconfig_mode_t.NRF_QSPI_ADDRCONF_MODE_ALL"]], "nrf_qspi_addrconfig_mode_t.nrf_qspi_addrconf_mode_noinstr (c enumerator)": [[120, "c.nrf_qspi_addrconfig_mode_t.NRF_QSPI_ADDRCONF_MODE_NOINSTR"]], "nrf_qspi_addrconfig_mode_t.nrf_qspi_addrconf_mode_opbyte0 (c enumerator)": [[120, "c.nrf_qspi_addrconfig_mode_t.NRF_QSPI_ADDRCONF_MODE_OPBYTE0"]], "nrf_qspi_addrconfig_mode_t.nrf_qspi_addrconf_mode_opcode (c enumerator)": [[120, "c.nrf_qspi_addrconfig_mode_t.NRF_QSPI_ADDRCONF_MODE_OPCODE"]], "nrf_qspi_addrconfig_set (c function)": [[120, "c.nrf_qspi_addrconfig_set"]], "nrf_qspi_addrmode_t (c enum)": [[120, "c.nrf_qspi_addrmode_t"]], "nrf_qspi_addrmode_t.nrf_qspi_addrmode_24bit (c enumerator)": [[120, "c.nrf_qspi_addrmode_t.NRF_QSPI_ADDRMODE_24BIT"]], "nrf_qspi_addrmode_t.nrf_qspi_addrmode_32bit (c enumerator)": [[120, "c.nrf_qspi_addrmode_t.NRF_QSPI_ADDRMODE_32BIT"]], "nrf_qspi_busy_check (c function)": [[120, "c.nrf_qspi_busy_check"]], "nrf_qspi_cinstr_conf_t (c struct)": [[120, "c.nrf_qspi_cinstr_conf_t"]], "nrf_qspi_cinstr_conf_t.io2_level (c var)": [[120, "c.nrf_qspi_cinstr_conf_t.io2_level"]], "nrf_qspi_cinstr_conf_t.io3_level (c var)": [[120, "c.nrf_qspi_cinstr_conf_t.io3_level"]], "nrf_qspi_cinstr_conf_t.length (c var)": [[120, "c.nrf_qspi_cinstr_conf_t.length"]], "nrf_qspi_cinstr_conf_t.opcode (c var)": [[120, "c.nrf_qspi_cinstr_conf_t.opcode"]], "nrf_qspi_cinstr_conf_t.wipwait (c var)": [[120, "c.nrf_qspi_cinstr_conf_t.wipwait"]], "nrf_qspi_cinstr_conf_t.wren (c var)": [[120, "c.nrf_qspi_cinstr_conf_t.wren"]], "nrf_qspi_cinstr_len_t (c enum)": [[120, "c.nrf_qspi_cinstr_len_t"]], "nrf_qspi_cinstr_len_t.nrf_qspi_cinstr_len_1b (c enumerator)": [[120, "c.nrf_qspi_cinstr_len_t.NRF_QSPI_CINSTR_LEN_1B"]], "nrf_qspi_cinstr_len_t.nrf_qspi_cinstr_len_2b (c enumerator)": [[120, "c.nrf_qspi_cinstr_len_t.NRF_QSPI_CINSTR_LEN_2B"]], "nrf_qspi_cinstr_len_t.nrf_qspi_cinstr_len_3b (c enumerator)": [[120, "c.nrf_qspi_cinstr_len_t.NRF_QSPI_CINSTR_LEN_3B"]], "nrf_qspi_cinstr_len_t.nrf_qspi_cinstr_len_4b (c enumerator)": [[120, "c.nrf_qspi_cinstr_len_t.NRF_QSPI_CINSTR_LEN_4B"]], "nrf_qspi_cinstr_len_t.nrf_qspi_cinstr_len_5b (c enumerator)": [[120, "c.nrf_qspi_cinstr_len_t.NRF_QSPI_CINSTR_LEN_5B"]], "nrf_qspi_cinstr_len_t.nrf_qspi_cinstr_len_6b (c enumerator)": [[120, "c.nrf_qspi_cinstr_len_t.NRF_QSPI_CINSTR_LEN_6B"]], "nrf_qspi_cinstr_len_t.nrf_qspi_cinstr_len_7b (c enumerator)": [[120, "c.nrf_qspi_cinstr_len_t.NRF_QSPI_CINSTR_LEN_7B"]], "nrf_qspi_cinstr_len_t.nrf_qspi_cinstr_len_8b (c enumerator)": [[120, "c.nrf_qspi_cinstr_len_t.NRF_QSPI_CINSTR_LEN_8B"]], "nrf_qspi_cinstr_len_t.nrf_qspi_cinstr_len_9b (c enumerator)": [[120, "c.nrf_qspi_cinstr_len_t.NRF_QSPI_CINSTR_LEN_9B"]], "nrf_qspi_cinstr_long_transfer_continue (c function)": [[120, "c.nrf_qspi_cinstr_long_transfer_continue"]], "nrf_qspi_cinstr_long_transfer_is_ongoing (c function)": [[120, "c.nrf_qspi_cinstr_long_transfer_is_ongoing"]], "nrf_qspi_cinstr_long_transfer_start (c function)": [[120, "c.nrf_qspi_cinstr_long_transfer_start"]], "nrf_qspi_cinstr_transfer_start (c function)": [[120, "c.nrf_qspi_cinstr_transfer_start"]], "nrf_qspi_cinstrdata_get (c function)": [[120, "c.nrf_qspi_cinstrdata_get"]], "nrf_qspi_cinstrdata_set (c function)": [[120, "c.nrf_qspi_cinstrdata_set"]], "nrf_qspi_disable (c function)": [[120, "c.nrf_qspi_disable"]], "nrf_qspi_dma_encryption_configure (c function)": [[120, "c.nrf_qspi_dma_encryption_configure"]], "nrf_qspi_dma_encryption_set (c function)": [[120, "c.nrf_qspi_dma_encryption_set"]], "nrf_qspi_enable (c function)": [[120, "c.nrf_qspi_enable"]], "nrf_qspi_encryption_t (c struct)": [[120, "c.nrf_qspi_encryption_t"]], "nrf_qspi_encryption_t.key (c var)": [[120, "c.nrf_qspi_encryption_t.key"]], "nrf_qspi_encryption_t.nonce (c var)": [[120, "c.nrf_qspi_encryption_t.nonce"]], "nrf_qspi_erase_len_get (c function)": [[120, "c.nrf_qspi_erase_len_get"]], "nrf_qspi_erase_len_t (c enum)": [[120, "c.nrf_qspi_erase_len_t"]], "nrf_qspi_erase_len_t.nrf_qspi_erase_len_4kb (c enumerator)": [[120, "c.nrf_qspi_erase_len_t.NRF_QSPI_ERASE_LEN_4KB"]], "nrf_qspi_erase_len_t.nrf_qspi_erase_len_64kb (c enumerator)": [[120, "c.nrf_qspi_erase_len_t.NRF_QSPI_ERASE_LEN_64KB"]], "nrf_qspi_erase_len_t.nrf_qspi_erase_len_all (c enumerator)": [[120, "c.nrf_qspi_erase_len_t.NRF_QSPI_ERASE_LEN_ALL"]], "nrf_qspi_erase_ptr_get (c function)": [[120, "c.nrf_qspi_erase_ptr_get"]], "nrf_qspi_erase_ptr_set (c function)": [[120, "c.nrf_qspi_erase_ptr_set"]], "nrf_qspi_event_address_get (c function)": [[120, "c.nrf_qspi_event_address_get"]], "nrf_qspi_event_check (c function)": [[120, "c.nrf_qspi_event_check"]], "nrf_qspi_event_clear (c function)": [[120, "c.nrf_qspi_event_clear"]], "nrf_qspi_event_t (c enum)": [[120, "c.nrf_qspi_event_t"]], "nrf_qspi_event_t.nrf_qspi_event_ready (c enumerator)": [[120, "c.nrf_qspi_event_t.NRF_QSPI_EVENT_READY"]], "nrf_qspi_frequency_t (c enum)": [[120, "c.nrf_qspi_frequency_t"]], "nrf_qspi_frequency_t.nrf_qspi_freq_div1 (c enumerator)": [[120, "c.nrf_qspi_frequency_t.NRF_QSPI_FREQ_DIV1"]], "nrf_qspi_frequency_t.nrf_qspi_freq_div10 (c enumerator)": [[120, "c.nrf_qspi_frequency_t.NRF_QSPI_FREQ_DIV10"]], "nrf_qspi_frequency_t.nrf_qspi_freq_div11 (c enumerator)": [[120, "c.nrf_qspi_frequency_t.NRF_QSPI_FREQ_DIV11"]], "nrf_qspi_frequency_t.nrf_qspi_freq_div12 (c enumerator)": [[120, "c.nrf_qspi_frequency_t.NRF_QSPI_FREQ_DIV12"]], "nrf_qspi_frequency_t.nrf_qspi_freq_div13 (c enumerator)": [[120, "c.nrf_qspi_frequency_t.NRF_QSPI_FREQ_DIV13"]], "nrf_qspi_frequency_t.nrf_qspi_freq_div14 (c enumerator)": [[120, "c.nrf_qspi_frequency_t.NRF_QSPI_FREQ_DIV14"]], "nrf_qspi_frequency_t.nrf_qspi_freq_div15 (c enumerator)": [[120, "c.nrf_qspi_frequency_t.NRF_QSPI_FREQ_DIV15"]], "nrf_qspi_frequency_t.nrf_qspi_freq_div16 (c enumerator)": [[120, "c.nrf_qspi_frequency_t.NRF_QSPI_FREQ_DIV16"]], "nrf_qspi_frequency_t.nrf_qspi_freq_div2 (c enumerator)": [[120, "c.nrf_qspi_frequency_t.NRF_QSPI_FREQ_DIV2"]], "nrf_qspi_frequency_t.nrf_qspi_freq_div3 (c enumerator)": [[120, "c.nrf_qspi_frequency_t.NRF_QSPI_FREQ_DIV3"]], "nrf_qspi_frequency_t.nrf_qspi_freq_div4 (c enumerator)": [[120, "c.nrf_qspi_frequency_t.NRF_QSPI_FREQ_DIV4"]], "nrf_qspi_frequency_t.nrf_qspi_freq_div5 (c enumerator)": [[120, "c.nrf_qspi_frequency_t.NRF_QSPI_FREQ_DIV5"]], "nrf_qspi_frequency_t.nrf_qspi_freq_div6 (c enumerator)": [[120, "c.nrf_qspi_frequency_t.NRF_QSPI_FREQ_DIV6"]], "nrf_qspi_frequency_t.nrf_qspi_freq_div7 (c enumerator)": [[120, "c.nrf_qspi_frequency_t.NRF_QSPI_FREQ_DIV7"]], "nrf_qspi_frequency_t.nrf_qspi_freq_div8 (c enumerator)": [[120, "c.nrf_qspi_frequency_t.NRF_QSPI_FREQ_DIV8"]], "nrf_qspi_frequency_t.nrf_qspi_freq_div9 (c enumerator)": [[120, "c.nrf_qspi_frequency_t.NRF_QSPI_FREQ_DIV9"]], "nrf_qspi_ifconfig0_raw_get (c function)": [[120, "c.nrf_qspi_ifconfig0_raw_get"]], "nrf_qspi_ifconfig0_raw_set (c function)": [[120, "c.nrf_qspi_ifconfig0_raw_set"]], "nrf_qspi_ifconfig0_set (c function)": [[120, "c.nrf_qspi_ifconfig0_set"]], "nrf_qspi_ifconfig1_set (c function)": [[120, "c.nrf_qspi_ifconfig1_set"]], "nrf_qspi_iftiming_set (c function)": [[120, "c.nrf_qspi_iftiming_set"]], "nrf_qspi_int_disable (c function)": [[120, "c.nrf_qspi_int_disable"]], "nrf_qspi_int_enable (c function)": [[120, "c.nrf_qspi_int_enable"]], "nrf_qspi_int_enable_check (c function)": [[120, "c.nrf_qspi_int_enable_check"]], "nrf_qspi_int_mask_t (c enum)": [[120, "c.nrf_qspi_int_mask_t"]], "nrf_qspi_int_mask_t.nrf_qspi_int_ready_mask (c enumerator)": [[120, "c.nrf_qspi_int_mask_t.NRF_QSPI_INT_READY_MASK"]], "nrf_qspi_phy_conf_t (c struct)": [[120, "c.nrf_qspi_phy_conf_t"]], "nrf_qspi_phy_conf_t.dpmen (c var)": [[120, "c.nrf_qspi_phy_conf_t.dpmen"]], "nrf_qspi_phy_conf_t.sck_delay (c var)": [[120, "c.nrf_qspi_phy_conf_t.sck_delay"]], "nrf_qspi_phy_conf_t.sck_freq (c var)": [[120, "c.nrf_qspi_phy_conf_t.sck_freq"]], "nrf_qspi_phy_conf_t.spi_mode (c var)": [[120, "c.nrf_qspi_phy_conf_t.spi_mode"]], "nrf_qspi_pins_get (c function)": [[120, "c.nrf_qspi_pins_get"]], "nrf_qspi_pins_set (c function)": [[120, "c.nrf_qspi_pins_set"]], "nrf_qspi_pins_t (c struct)": [[120, "c.nrf_qspi_pins_t"]], "nrf_qspi_pins_t.csn_pin (c var)": [[120, "c.nrf_qspi_pins_t.csn_pin"]], "nrf_qspi_pins_t.io0_pin (c var)": [[120, "c.nrf_qspi_pins_t.io0_pin"]], "nrf_qspi_pins_t.io1_pin (c var)": [[120, "c.nrf_qspi_pins_t.io1_pin"]], "nrf_qspi_pins_t.io2_pin (c var)": [[120, "c.nrf_qspi_pins_t.io2_pin"]], "nrf_qspi_pins_t.io3_pin (c var)": [[120, "c.nrf_qspi_pins_t.io3_pin"]], "nrf_qspi_pins_t.sck_pin (c var)": [[120, "c.nrf_qspi_pins_t.sck_pin"]], "nrf_qspi_prot_conf_t (c struct)": [[120, "c.nrf_qspi_prot_conf_t"]], "nrf_qspi_prot_conf_t.addrmode (c var)": [[120, "c.nrf_qspi_prot_conf_t.addrmode"]], "nrf_qspi_prot_conf_t.dpmconfig (c var)": [[120, "c.nrf_qspi_prot_conf_t.dpmconfig"]], "nrf_qspi_prot_conf_t.readoc (c var)": [[120, "c.nrf_qspi_prot_conf_t.readoc"]], "nrf_qspi_prot_conf_t.writeoc (c var)": [[120, "c.nrf_qspi_prot_conf_t.writeoc"]], "nrf_qspi_read_buffer_set (c function)": [[120, "c.nrf_qspi_read_buffer_set"]], "nrf_qspi_readoc_t (c enum)": [[120, "c.nrf_qspi_readoc_t"]], "nrf_qspi_readoc_t.nrf_qspi_readoc_fastread (c enumerator)": [[120, "c.nrf_qspi_readoc_t.NRF_QSPI_READOC_FASTREAD"]], "nrf_qspi_readoc_t.nrf_qspi_readoc_read2io (c enumerator)": [[120, "c.nrf_qspi_readoc_t.NRF_QSPI_READOC_READ2IO"]], "nrf_qspi_readoc_t.nrf_qspi_readoc_read2o (c enumerator)": [[120, "c.nrf_qspi_readoc_t.NRF_QSPI_READOC_READ2O"]], "nrf_qspi_readoc_t.nrf_qspi_readoc_read4io (c enumerator)": [[120, "c.nrf_qspi_readoc_t.NRF_QSPI_READOC_READ4IO"]], "nrf_qspi_readoc_t.nrf_qspi_readoc_read4o (c enumerator)": [[120, "c.nrf_qspi_readoc_t.NRF_QSPI_READOC_READ4O"]], "nrf_qspi_spi_mode_t (c enum)": [[120, "c.nrf_qspi_spi_mode_t"]], "nrf_qspi_spi_mode_t.nrf_qspi_mode_0 (c enumerator)": [[120, "c.nrf_qspi_spi_mode_t.NRF_QSPI_MODE_0"]], "nrf_qspi_spi_mode_t.nrf_qspi_mode_1 (c enumerator)": [[120, "c.nrf_qspi_spi_mode_t.NRF_QSPI_MODE_1"]], "nrf_qspi_sreg_get (c function)": [[120, "c.nrf_qspi_sreg_get"]], "nrf_qspi_status_reg_get (c function)": [[120, "c.nrf_qspi_status_reg_get"]], "nrf_qspi_task_address_get (c function)": [[120, "c.nrf_qspi_task_address_get"]], "nrf_qspi_task_t (c enum)": [[120, "c.nrf_qspi_task_t"]], "nrf_qspi_task_t.nrf_qspi_task_activate (c enumerator)": [[120, "c.nrf_qspi_task_t.NRF_QSPI_TASK_ACTIVATE"]], "nrf_qspi_task_t.nrf_qspi_task_deactivate (c enumerator)": [[120, "c.nrf_qspi_task_t.NRF_QSPI_TASK_DEACTIVATE"]], "nrf_qspi_task_t.nrf_qspi_task_erasestart (c enumerator)": [[120, "c.nrf_qspi_task_t.NRF_QSPI_TASK_ERASESTART"]], "nrf_qspi_task_t.nrf_qspi_task_readstart (c enumerator)": [[120, "c.nrf_qspi_task_t.NRF_QSPI_TASK_READSTART"]], "nrf_qspi_task_t.nrf_qspi_task_writestart (c enumerator)": [[120, "c.nrf_qspi_task_t.NRF_QSPI_TASK_WRITESTART"]], "nrf_qspi_task_trigger (c function)": [[120, "c.nrf_qspi_task_trigger"]], "nrf_qspi_write_buffer_set (c function)": [[120, "c.nrf_qspi_write_buffer_set"]], "nrf_qspi_writeoc_t (c enum)": [[120, "c.nrf_qspi_writeoc_t"]], "nrf_qspi_writeoc_t.nrf_qspi_writeoc_pp (c enumerator)": [[120, "c.nrf_qspi_writeoc_t.NRF_QSPI_WRITEOC_PP"]], "nrf_qspi_writeoc_t.nrf_qspi_writeoc_pp2o (c enumerator)": [[120, "c.nrf_qspi_writeoc_t.NRF_QSPI_WRITEOC_PP2O"]], "nrf_qspi_writeoc_t.nrf_qspi_writeoc_pp4io (c enumerator)": [[120, "c.nrf_qspi_writeoc_t.NRF_QSPI_WRITEOC_PP4IO"]], "nrf_qspi_writeoc_t.nrf_qspi_writeoc_pp4o (c enumerator)": [[120, "c.nrf_qspi_writeoc_t.NRF_QSPI_WRITEOC_PP4O"]], "nrf_qspi_xip_encryption_configure (c function)": [[120, "c.nrf_qspi_xip_encryption_configure"]], "nrf_qspi_xip_encryption_set (c function)": [[120, "c.nrf_qspi_xip_encryption_set"]], "nrf_qspi_xip_offset_set (c function)": [[120, "c.nrf_qspi_xip_offset_set"]], "nrf_qspi_xip_set (c function)": [[120, "c.nrf_qspi_xip_set"]], "nrf_radio_dppi_offset (c macro)": [[122, "c.NRF_RADIO_DPPI_OFFSET"]], "nrf_radio_base0_get (c function)": [[122, "c.nrf_radio_base0_get"]], "nrf_radio_base0_set (c function)": [[122, "c.nrf_radio_base0_set"]], "nrf_radio_base1_get (c function)": [[122, "c.nrf_radio_base1_get"]], "nrf_radio_base1_set (c function)": [[122, "c.nrf_radio_base1_set"]], "nrf_radio_bcc_get (c function)": [[122, "c.nrf_radio_bcc_get"]], "nrf_radio_bcc_set (c function)": [[122, "c.nrf_radio_bcc_set"]], "nrf_radio_cca_configure (c function)": [[122, "c.nrf_radio_cca_configure"]], "nrf_radio_cca_mode_t (c enum)": [[122, "c.nrf_radio_cca_mode_t"]], "nrf_radio_cca_mode_t.nrf_radio_cca_mode_carrier (c enumerator)": [[122, "c.nrf_radio_cca_mode_t.NRF_RADIO_CCA_MODE_CARRIER"]], "nrf_radio_cca_mode_t.nrf_radio_cca_mode_carrier_and_ed (c enumerator)": [[122, "c.nrf_radio_cca_mode_t.NRF_RADIO_CCA_MODE_CARRIER_AND_ED"]], "nrf_radio_cca_mode_t.nrf_radio_cca_mode_carrier_or_ed (c enumerator)": [[122, "c.nrf_radio_cca_mode_t.NRF_RADIO_CCA_MODE_CARRIER_OR_ED"]], "nrf_radio_cca_mode_t.nrf_radio_cca_mode_ed (c enumerator)": [[122, "c.nrf_radio_cca_mode_t.NRF_RADIO_CCA_MODE_ED"]], "nrf_radio_cca_mode_t.nrf_radio_cca_mode_ed_test1 (c enumerator)": [[122, "c.nrf_radio_cca_mode_t.NRF_RADIO_CCA_MODE_ED_TEST1"]], "nrf_radio_cistat_get (c function)": [[122, "c.nrf_radio_cistat_get"]], "nrf_radio_crc_addr_t (c enum)": [[122, "c.nrf_radio_crc_addr_t"]], "nrf_radio_crc_addr_t.nrf_radio_crc_addr_ieee802154 (c enumerator)": [[122, "c.nrf_radio_crc_addr_t.NRF_RADIO_CRC_ADDR_IEEE802154"]], "nrf_radio_crc_addr_t.nrf_radio_crc_addr_include (c enumerator)": [[122, "c.nrf_radio_crc_addr_t.NRF_RADIO_CRC_ADDR_INCLUDE"]], "nrf_radio_crc_addr_t.nrf_radio_crc_addr_s0 (c enumerator)": [[122, "c.nrf_radio_crc_addr_t.NRF_RADIO_CRC_ADDR_S0"]], "nrf_radio_crc_addr_t.nrf_radio_crc_addr_s1 (c enumerator)": [[122, "c.nrf_radio_crc_addr_t.NRF_RADIO_CRC_ADDR_S1"]], "nrf_radio_crc_addr_t.nrf_radio_crc_addr_skip (c enumerator)": [[122, "c.nrf_radio_crc_addr_t.NRF_RADIO_CRC_ADDR_SKIP"]], "nrf_radio_crc_configure (c function)": [[122, "c.nrf_radio_crc_configure"]], "nrf_radio_crc_status_check (c function)": [[122, "c.nrf_radio_crc_status_check"]], "nrf_radio_crcinit_get (c function)": [[122, "c.nrf_radio_crcinit_get"]], "nrf_radio_crcinit_set (c function)": [[122, "c.nrf_radio_crcinit_set"]], "nrf_radio_cte_rfu_get (c function)": [[122, "c.nrf_radio_cte_rfu_get"]], "nrf_radio_cte_time_get (c function)": [[122, "c.nrf_radio_cte_time_get"]], "nrf_radio_cte_type_get (c function)": [[122, "c.nrf_radio_cte_type_get"]], "nrf_radio_cteinline_conf_t (c struct)": [[122, "c.nrf_radio_cteinline_conf_t"]], "nrf_radio_cteinline_conf_t.enable (c var)": [[122, "c.nrf_radio_cteinline_conf_t.enable"]], "nrf_radio_cteinline_conf_t.err_handling (c var)": [[122, "c.nrf_radio_cteinline_conf_t.err_handling"]], "nrf_radio_cteinline_conf_t.info_in_s1 (c var)": [[122, "c.nrf_radio_cteinline_conf_t.info_in_s1"]], "nrf_radio_cteinline_conf_t.rx1us (c var)": [[122, "c.nrf_radio_cteinline_conf_t.rx1us"]], "nrf_radio_cteinline_conf_t.rx2us (c var)": [[122, "c.nrf_radio_cteinline_conf_t.rx2us"]], "nrf_radio_cteinline_conf_t.s0_mask (c var)": [[122, "c.nrf_radio_cteinline_conf_t.s0_mask"]], "nrf_radio_cteinline_conf_t.s0_pattern (c var)": [[122, "c.nrf_radio_cteinline_conf_t.s0_pattern"]], "nrf_radio_cteinline_conf_t.time_range (c var)": [[122, "c.nrf_radio_cteinline_conf_t.time_range"]], "nrf_radio_cteinline_configure (c function)": [[122, "c.nrf_radio_cteinline_configure"]], "nrf_radio_cteinline_rx_mode_t (c enum)": [[122, "c.nrf_radio_cteinline_rx_mode_t"]], "nrf_radio_cteinline_rx_mode_t.nrf_radio_cteinline_rx_mode_125ns (c enumerator)": [[122, "c.nrf_radio_cteinline_rx_mode_t.NRF_RADIO_CTEINLINE_RX_MODE_125NS"]], "nrf_radio_cteinline_rx_mode_t.nrf_radio_cteinline_rx_mode_1us (c enumerator)": [[122, "c.nrf_radio_cteinline_rx_mode_t.NRF_RADIO_CTEINLINE_RX_MODE_1US"]], "nrf_radio_cteinline_rx_mode_t.nrf_radio_cteinline_rx_mode_250ns (c enumerator)": [[122, "c.nrf_radio_cteinline_rx_mode_t.NRF_RADIO_CTEINLINE_RX_MODE_250NS"]], "nrf_radio_cteinline_rx_mode_t.nrf_radio_cteinline_rx_mode_2us (c enumerator)": [[122, "c.nrf_radio_cteinline_rx_mode_t.NRF_RADIO_CTEINLINE_RX_MODE_2US"]], "nrf_radio_cteinline_rx_mode_t.nrf_radio_cteinline_rx_mode_4us (c enumerator)": [[122, "c.nrf_radio_cteinline_rx_mode_t.NRF_RADIO_CTEINLINE_RX_MODE_4US"]], "nrf_radio_cteinline_rx_mode_t.nrf_radio_cteinline_rx_mode_500ns (c enumerator)": [[122, "c.nrf_radio_cteinline_rx_mode_t.NRF_RADIO_CTEINLINE_RX_MODE_500NS"]], "nrf_radio_cteinline_time_range_t (c enum)": [[122, "c.nrf_radio_cteinline_time_range_t"]], "nrf_radio_cteinline_time_range_t.nrf_radio_cteinline_time_range_20 (c enumerator)": [[122, "c.nrf_radio_cteinline_time_range_t.NRF_RADIO_CTEINLINE_TIME_RANGE_20"]], "nrf_radio_cteinline_time_range_t.nrf_radio_cteinline_time_range_31 (c enumerator)": [[122, "c.nrf_radio_cteinline_time_range_t.NRF_RADIO_CTEINLINE_TIME_RANGE_31"]], "nrf_radio_cteinline_time_range_t.nrf_radio_cteinline_time_range_63 (c enumerator)": [[122, "c.nrf_radio_cteinline_time_range_t.NRF_RADIO_CTEINLINE_TIME_RANGE_63"]], "nrf_radio_dab_get (c function)": [[122, "c.nrf_radio_dab_get"]], "nrf_radio_dab_set (c function)": [[122, "c.nrf_radio_dab_set"]], "nrf_radio_dacnf_ena_get (c function)": [[122, "c.nrf_radio_dacnf_ena_get"]], "nrf_radio_dacnf_set (c function)": [[122, "c.nrf_radio_dacnf_set"]], "nrf_radio_dacnf_txadd_get (c function)": [[122, "c.nrf_radio_dacnf_txadd_get"]], "nrf_radio_dai_get (c function)": [[122, "c.nrf_radio_dai_get"]], "nrf_radio_dap_get (c function)": [[122, "c.nrf_radio_dap_get"]], "nrf_radio_dap_set (c function)": [[122, "c.nrf_radio_dap_set"]], "nrf_radio_datawhiteiv_get (c function)": [[122, "c.nrf_radio_datawhiteiv_get"]], "nrf_radio_datawhiteiv_set (c function)": [[122, "c.nrf_radio_datawhiteiv_set"]], "nrf_radio_dfe_amount_get (c function)": [[122, "c.nrf_radio_dfe_amount_get"]], "nrf_radio_dfe_buffer_set (c function)": [[122, "c.nrf_radio_dfe_buffer_set"]], "nrf_radio_dfe_current_amount_get (c function)": [[122, "c.nrf_radio_dfe_current_amount_get"]], "nrf_radio_dfe_op_mode_t (c enum)": [[122, "c.nrf_radio_dfe_op_mode_t"]], "nrf_radio_dfe_op_mode_t.nrf_radio_dfe_op_mode_aoa (c enumerator)": [[122, "c.nrf_radio_dfe_op_mode_t.NRF_RADIO_DFE_OP_MODE_AOA"]], "nrf_radio_dfe_op_mode_t.nrf_radio_dfe_op_mode_aod (c enumerator)": [[122, "c.nrf_radio_dfe_op_mode_t.NRF_RADIO_DFE_OP_MODE_AOD"]], "nrf_radio_dfe_pattern_add (c function)": [[122, "c.nrf_radio_dfe_pattern_add"]], "nrf_radio_dfe_pattern_clear (c function)": [[122, "c.nrf_radio_dfe_pattern_clear"]], "nrf_radio_dfe_pattern_cnt_get (c function)": [[122, "c.nrf_radio_dfe_pattern_cnt_get"]], "nrf_radio_dfe_pattern_pin_set (c function)": [[122, "c.nrf_radio_dfe_pattern_pin_set"]], "nrf_radio_dfe_patterns_add (c function)": [[122, "c.nrf_radio_dfe_patterns_add"]], "nrf_radio_dfe_sample_state_get (c function)": [[122, "c.nrf_radio_dfe_sample_state_get"]], "nrf_radio_dfe_sample_state_t (c enum)": [[122, "c.nrf_radio_dfe_sample_state_t"]], "nrf_radio_dfe_sample_state_t.nrf_radio_dfe_sample_state_idle (c enumerator)": [[122, "c.nrf_radio_dfe_sample_state_t.NRF_RADIO_DFE_SAMPLE_STATE_IDLE"]], "nrf_radio_dfe_sample_state_t.nrf_radio_dfe_sample_state_sampling (c enumerator)": [[122, "c.nrf_radio_dfe_sample_state_t.NRF_RADIO_DFE_SAMPLE_STATE_SAMPLING"]], "nrf_radio_dfe_switch_state_get (c function)": [[122, "c.nrf_radio_dfe_switch_state_get"]], "nrf_radio_dfe_switch_state_t (c enum)": [[122, "c.nrf_radio_dfe_switch_state_t"]], "nrf_radio_dfe_switch_state_t.nrf_radio_dfe_switch_state_ending (c enumerator)": [[122, "c.nrf_radio_dfe_switch_state_t.NRF_RADIO_DFE_SWITCH_STATE_ENDING"]], "nrf_radio_dfe_switch_state_t.nrf_radio_dfe_switch_state_guard (c enumerator)": [[122, "c.nrf_radio_dfe_switch_state_t.NRF_RADIO_DFE_SWITCH_STATE_GUARD"]], "nrf_radio_dfe_switch_state_t.nrf_radio_dfe_switch_state_idle (c enumerator)": [[122, "c.nrf_radio_dfe_switch_state_t.NRF_RADIO_DFE_SWITCH_STATE_IDLE"]], "nrf_radio_dfe_switch_state_t.nrf_radio_dfe_switch_state_offset (c enumerator)": [[122, "c.nrf_radio_dfe_switch_state_t.NRF_RADIO_DFE_SWITCH_STATE_OFFSET"]], "nrf_radio_dfe_switch_state_t.nrf_radio_dfe_switch_state_ref (c enumerator)": [[122, "c.nrf_radio_dfe_switch_state_t.NRF_RADIO_DFE_SWITCH_STATE_REF"]], "nrf_radio_dfe_switch_state_t.nrf_radio_dfe_switch_state_switching (c enumerator)": [[122, "c.nrf_radio_dfe_switch_state_t.NRF_RADIO_DFE_SWITCH_STATE_SWITCHING"]], "nrf_radio_dfectrl_conf_t (c struct)": [[122, "c.nrf_radio_dfectrl_conf_t"]], "nrf_radio_dfectrl_conf_t.dfe_len (c var)": [[122, "c.nrf_radio_dfectrl_conf_t.dfe_len"]], "nrf_radio_dfectrl_conf_t.extension (c var)": [[122, "c.nrf_radio_dfectrl_conf_t.extension"]], "nrf_radio_dfectrl_conf_t.gain_steps (c var)": [[122, "c.nrf_radio_dfectrl_conf_t.gain_steps"]], "nrf_radio_dfectrl_conf_t.sample_offset (c var)": [[122, "c.nrf_radio_dfectrl_conf_t.sample_offset"]], "nrf_radio_dfectrl_conf_t.sample_spacing (c var)": [[122, "c.nrf_radio_dfectrl_conf_t.sample_spacing"]], "nrf_radio_dfectrl_conf_t.sample_type (c var)": [[122, "c.nrf_radio_dfectrl_conf_t.sample_type"]], "nrf_radio_dfectrl_conf_t.spacing_ref (c var)": [[122, "c.nrf_radio_dfectrl_conf_t.spacing_ref"]], "nrf_radio_dfectrl_conf_t.switch_offset (c var)": [[122, "c.nrf_radio_dfectrl_conf_t.switch_offset"]], "nrf_radio_dfectrl_conf_t.switch_spacing (c var)": [[122, "c.nrf_radio_dfectrl_conf_t.switch_spacing"]], "nrf_radio_dfectrl_configure (c function)": [[122, "c.nrf_radio_dfectrl_configure"]], "nrf_radio_dfectrl_extension_t (c enum)": [[122, "c.nrf_radio_dfectrl_extension_t"]], "nrf_radio_dfectrl_extension_t.nrf_radio_dfectrl_extension_crc (c enumerator)": [[122, "c.nrf_radio_dfectrl_extension_t.NRF_RADIO_DFECTRL_EXTENSION_CRC"]], "nrf_radio_dfectrl_extension_t.nrf_radio_dfectrl_extension_payload (c enumerator)": [[122, "c.nrf_radio_dfectrl_extension_t.NRF_RADIO_DFECTRL_EXTENSION_PAYLOAD"]], "nrf_radio_dfectrl_sample_spacing_t (c enum)": [[122, "c.nrf_radio_dfectrl_sample_spacing_t"]], "nrf_radio_dfectrl_sample_spacing_t.nrf_radio_dfectrl_sample_spacing_125ns (c enumerator)": [[122, "c.nrf_radio_dfectrl_sample_spacing_t.NRF_RADIO_DFECTRL_SAMPLE_SPACING_125NS"]], "nrf_radio_dfectrl_sample_spacing_t.nrf_radio_dfectrl_sample_spacing_1us (c enumerator)": [[122, "c.nrf_radio_dfectrl_sample_spacing_t.NRF_RADIO_DFECTRL_SAMPLE_SPACING_1US"]], "nrf_radio_dfectrl_sample_spacing_t.nrf_radio_dfectrl_sample_spacing_250ns (c enumerator)": [[122, "c.nrf_radio_dfectrl_sample_spacing_t.NRF_RADIO_DFECTRL_SAMPLE_SPACING_250NS"]], "nrf_radio_dfectrl_sample_spacing_t.nrf_radio_dfectrl_sample_spacing_2us (c enumerator)": [[122, "c.nrf_radio_dfectrl_sample_spacing_t.NRF_RADIO_DFECTRL_SAMPLE_SPACING_2US"]], "nrf_radio_dfectrl_sample_spacing_t.nrf_radio_dfectrl_sample_spacing_4us (c enumerator)": [[122, "c.nrf_radio_dfectrl_sample_spacing_t.NRF_RADIO_DFECTRL_SAMPLE_SPACING_4US"]], "nrf_radio_dfectrl_sample_spacing_t.nrf_radio_dfectrl_sample_spacing_500ns (c enumerator)": [[122, "c.nrf_radio_dfectrl_sample_spacing_t.NRF_RADIO_DFECTRL_SAMPLE_SPACING_500NS"]], "nrf_radio_dfectrl_sample_type_t (c enum)": [[122, "c.nrf_radio_dfectrl_sample_type_t"]], "nrf_radio_dfectrl_sample_type_t.nrf_radio_dfectrl_sample_type_iq (c enumerator)": [[122, "c.nrf_radio_dfectrl_sample_type_t.NRF_RADIO_DFECTRL_SAMPLE_TYPE_IQ"]], "nrf_radio_dfectrl_sample_type_t.nrf_radio_dfectrl_sample_type_magphase (c enumerator)": [[122, "c.nrf_radio_dfectrl_sample_type_t.NRF_RADIO_DFECTRL_SAMPLE_TYPE_MAGPHASE"]], "nrf_radio_dfectrl_switch_spacing_t (c enum)": [[122, "c.nrf_radio_dfectrl_switch_spacing_t"]], "nrf_radio_dfectrl_switch_spacing_t.nrf_radio_dfectrl_switch_spacing_1us (c enumerator)": [[122, "c.nrf_radio_dfectrl_switch_spacing_t.NRF_RADIO_DFECTRL_SWITCH_SPACING_1US"]], "nrf_radio_dfectrl_switch_spacing_t.nrf_radio_dfectrl_switch_spacing_2us (c enumerator)": [[122, "c.nrf_radio_dfectrl_switch_spacing_t.NRF_RADIO_DFECTRL_SWITCH_SPACING_2US"]], "nrf_radio_dfectrl_switch_spacing_t.nrf_radio_dfectrl_switch_spacing_4us (c enumerator)": [[122, "c.nrf_radio_dfectrl_switch_spacing_t.NRF_RADIO_DFECTRL_SWITCH_SPACING_4US"]], "nrf_radio_ed_cca_period_set (c function)": [[122, "c.nrf_radio_ed_cca_period_set"]], "nrf_radio_ed_loop_count_set (c function)": [[122, "c.nrf_radio_ed_loop_count_set"]], "nrf_radio_ed_sample_get (c function)": [[122, "c.nrf_radio_ed_sample_get"]], "nrf_radio_event_address_get (c function)": [[122, "c.nrf_radio_event_address_get"]], "nrf_radio_event_check (c function)": [[122, "c.nrf_radio_event_check"]], "nrf_radio_event_clear (c function)": [[122, "c.nrf_radio_event_clear"]], "nrf_radio_event_t (c enum)": [[122, "c.nrf_radio_event_t"]], "nrf_radio_event_t.nrf_radio_event_address (c enumerator)": [[122, "c.nrf_radio_event_t.NRF_RADIO_EVENT_ADDRESS"]], "nrf_radio_event_t.nrf_radio_event_bcmatch (c enumerator)": [[122, "c.nrf_radio_event_t.NRF_RADIO_EVENT_BCMATCH"]], "nrf_radio_event_t.nrf_radio_event_ccabusy (c enumerator)": [[122, "c.nrf_radio_event_t.NRF_RADIO_EVENT_CCABUSY"]], "nrf_radio_event_t.nrf_radio_event_ccaidle (c enumerator)": [[122, "c.nrf_radio_event_t.NRF_RADIO_EVENT_CCAIDLE"]], "nrf_radio_event_t.nrf_radio_event_ccastopped (c enumerator)": [[122, "c.nrf_radio_event_t.NRF_RADIO_EVENT_CCASTOPPED"]], "nrf_radio_event_t.nrf_radio_event_crcerror (c enumerator)": [[122, "c.nrf_radio_event_t.NRF_RADIO_EVENT_CRCERROR"]], "nrf_radio_event_t.nrf_radio_event_crcok (c enumerator)": [[122, "c.nrf_radio_event_t.NRF_RADIO_EVENT_CRCOK"]], "nrf_radio_event_t.nrf_radio_event_ctepresent (c enumerator)": [[122, "c.nrf_radio_event_t.NRF_RADIO_EVENT_CTEPRESENT"]], "nrf_radio_event_t.nrf_radio_event_devmatch (c enumerator)": [[122, "c.nrf_radio_event_t.NRF_RADIO_EVENT_DEVMATCH"]], "nrf_radio_event_t.nrf_radio_event_devmiss (c enumerator)": [[122, "c.nrf_radio_event_t.NRF_RADIO_EVENT_DEVMISS"]], "nrf_radio_event_t.nrf_radio_event_disabled (c enumerator)": [[122, "c.nrf_radio_event_t.NRF_RADIO_EVENT_DISABLED"]], "nrf_radio_event_t.nrf_radio_event_edend (c enumerator)": [[122, "c.nrf_radio_event_t.NRF_RADIO_EVENT_EDEND"]], "nrf_radio_event_t.nrf_radio_event_edstopped (c enumerator)": [[122, "c.nrf_radio_event_t.NRF_RADIO_EVENT_EDSTOPPED"]], "nrf_radio_event_t.nrf_radio_event_end (c enumerator)": [[122, "c.nrf_radio_event_t.NRF_RADIO_EVENT_END"]], "nrf_radio_event_t.nrf_radio_event_framestart (c enumerator)": [[122, "c.nrf_radio_event_t.NRF_RADIO_EVENT_FRAMESTART"]], "nrf_radio_event_t.nrf_radio_event_mhrmatch (c enumerator)": [[122, "c.nrf_radio_event_t.NRF_RADIO_EVENT_MHRMATCH"]], "nrf_radio_event_t.nrf_radio_event_payload (c enumerator)": [[122, "c.nrf_radio_event_t.NRF_RADIO_EVENT_PAYLOAD"]], "nrf_radio_event_t.nrf_radio_event_phyend (c enumerator)": [[122, "c.nrf_radio_event_t.NRF_RADIO_EVENT_PHYEND"]], "nrf_radio_event_t.nrf_radio_event_rateboost (c enumerator)": [[122, "c.nrf_radio_event_t.NRF_RADIO_EVENT_RATEBOOST"]], "nrf_radio_event_t.nrf_radio_event_ready (c enumerator)": [[122, "c.nrf_radio_event_t.NRF_RADIO_EVENT_READY"]], "nrf_radio_event_t.nrf_radio_event_rssiend (c enumerator)": [[122, "c.nrf_radio_event_t.NRF_RADIO_EVENT_RSSIEND"]], "nrf_radio_event_t.nrf_radio_event_rxready (c enumerator)": [[122, "c.nrf_radio_event_t.NRF_RADIO_EVENT_RXREADY"]], "nrf_radio_event_t.nrf_radio_event_sync (c enumerator)": [[122, "c.nrf_radio_event_t.NRF_RADIO_EVENT_SYNC"]], "nrf_radio_event_t.nrf_radio_event_txready (c enumerator)": [[122, "c.nrf_radio_event_t.NRF_RADIO_EVENT_TXREADY"]], "nrf_radio_fast_ramp_up_check (c function)": [[122, "c.nrf_radio_fast_ramp_up_check"]], "nrf_radio_fast_ramp_up_enable_set (c function)": [[122, "c.nrf_radio_fast_ramp_up_enable_set"]], "nrf_radio_frequency_get (c function)": [[122, "c.nrf_radio_frequency_get"]], "nrf_radio_frequency_set (c function)": [[122, "c.nrf_radio_frequency_set"]], "nrf_radio_ifs_get (c function)": [[122, "c.nrf_radio_ifs_get"]], "nrf_radio_ifs_set (c function)": [[122, "c.nrf_radio_ifs_set"]], "nrf_radio_int_disable (c function)": [[122, "c.nrf_radio_int_disable"]], "nrf_radio_int_enable (c function)": [[122, "c.nrf_radio_int_enable"]], "nrf_radio_int_enable_check (c function)": [[122, "c.nrf_radio_int_enable_check"]], "nrf_radio_int_mask_t (c enum)": [[122, "c.nrf_radio_int_mask_t"]], "nrf_radio_int_mask_t.nrf_radio_int_address_mask (c enumerator)": [[122, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_ADDRESS_MASK"]], "nrf_radio_int_mask_t.nrf_radio_int_bcmatch_mask (c enumerator)": [[122, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_BCMATCH_MASK"]], "nrf_radio_int_mask_t.nrf_radio_int_ccabusy_mask (c enumerator)": [[122, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_CCABUSY_MASK"]], "nrf_radio_int_mask_t.nrf_radio_int_ccaidle_mask (c enumerator)": [[122, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_CCAIDLE_MASK"]], "nrf_radio_int_mask_t.nrf_radio_int_ccastopped_mask (c enumerator)": [[122, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_CCASTOPPED_MASK"]], "nrf_radio_int_mask_t.nrf_radio_int_crcerror_mask (c enumerator)": [[122, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_CRCERROR_MASK"]], "nrf_radio_int_mask_t.nrf_radio_int_crcok_mask (c enumerator)": [[122, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_CRCOK_MASK"]], "nrf_radio_int_mask_t.nrf_radio_int_ctepresent_mask (c enumerator)": [[122, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_CTEPRESENT_MASK"]], "nrf_radio_int_mask_t.nrf_radio_int_devmatch_mask (c enumerator)": [[122, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_DEVMATCH_MASK"]], "nrf_radio_int_mask_t.nrf_radio_int_devmiss_mask (c enumerator)": [[122, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_DEVMISS_MASK"]], "nrf_radio_int_mask_t.nrf_radio_int_disabled_mask (c enumerator)": [[122, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_DISABLED_MASK"]], "nrf_radio_int_mask_t.nrf_radio_int_edend_mask (c enumerator)": [[122, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_EDEND_MASK"]], "nrf_radio_int_mask_t.nrf_radio_int_edstopped_mask (c enumerator)": [[122, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_EDSTOPPED_MASK"]], "nrf_radio_int_mask_t.nrf_radio_int_end_mask (c enumerator)": [[122, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_END_MASK"]], "nrf_radio_int_mask_t.nrf_radio_int_framestart_mask (c enumerator)": [[122, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_FRAMESTART_MASK"]], "nrf_radio_int_mask_t.nrf_radio_int_mhrmatch_mask (c enumerator)": [[122, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_MHRMATCH_MASK"]], "nrf_radio_int_mask_t.nrf_radio_int_payload_mask (c enumerator)": [[122, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_PAYLOAD_MASK"]], "nrf_radio_int_mask_t.nrf_radio_int_phyend_mask (c enumerator)": [[122, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_PHYEND_MASK"]], "nrf_radio_int_mask_t.nrf_radio_int_rateboost_mask (c enumerator)": [[122, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_RATEBOOST_MASK"]], "nrf_radio_int_mask_t.nrf_radio_int_ready_mask (c enumerator)": [[122, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_READY_MASK"]], "nrf_radio_int_mask_t.nrf_radio_int_rssiend_mask (c enumerator)": [[122, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_RSSIEND_MASK"]], "nrf_radio_int_mask_t.nrf_radio_int_rxready_mask (c enumerator)": [[122, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_RXREADY_MASK"]], "nrf_radio_int_mask_t.nrf_radio_int_sync_mask (c enumerator)": [[122, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_SYNC_MASK"]], "nrf_radio_int_mask_t.nrf_radio_int_txready_mask (c enumerator)": [[122, "c.nrf_radio_int_mask_t.NRF_RADIO_INT_TXREADY_MASK"]], "nrf_radio_mhmu_pattern_mask_get (c function)": [[122, "c.nrf_radio_mhmu_pattern_mask_get"]], "nrf_radio_mhmu_pattern_mask_set (c function)": [[122, "c.nrf_radio_mhmu_pattern_mask_set"]], "nrf_radio_mhmu_search_pattern_get (c function)": [[122, "c.nrf_radio_mhmu_search_pattern_get"]], "nrf_radio_mhmu_search_pattern_set (c function)": [[122, "c.nrf_radio_mhmu_search_pattern_set"]], "nrf_radio_mode_get (c function)": [[122, "c.nrf_radio_mode_get"]], "nrf_radio_mode_set (c function)": [[122, "c.nrf_radio_mode_set"]], "nrf_radio_mode_t (c enum)": [[122, "c.nrf_radio_mode_t"]], "nrf_radio_mode_t.nrf_radio_mode_ble_1mbit (c enumerator)": [[122, "c.nrf_radio_mode_t.NRF_RADIO_MODE_BLE_1MBIT"]], "nrf_radio_mode_t.nrf_radio_mode_ble_2mbit (c enumerator)": [[122, "c.nrf_radio_mode_t.NRF_RADIO_MODE_BLE_2MBIT"]], "nrf_radio_mode_t.nrf_radio_mode_ble_lr125kbit (c enumerator)": [[122, "c.nrf_radio_mode_t.NRF_RADIO_MODE_BLE_LR125KBIT"]], "nrf_radio_mode_t.nrf_radio_mode_ble_lr500kbit (c enumerator)": [[122, "c.nrf_radio_mode_t.NRF_RADIO_MODE_BLE_LR500KBIT"]], "nrf_radio_mode_t.nrf_radio_mode_ieee802154_250kbit (c enumerator)": [[122, "c.nrf_radio_mode_t.NRF_RADIO_MODE_IEEE802154_250KBIT"]], "nrf_radio_mode_t.nrf_radio_mode_nrf_1mbit (c enumerator)": [[122, "c.nrf_radio_mode_t.NRF_RADIO_MODE_NRF_1MBIT"]], "nrf_radio_mode_t.nrf_radio_mode_nrf_250kbit (c enumerator)": [[122, "c.nrf_radio_mode_t.NRF_RADIO_MODE_NRF_250KBIT"]], "nrf_radio_mode_t.nrf_radio_mode_nrf_2mbit (c enumerator)": [[122, "c.nrf_radio_mode_t.NRF_RADIO_MODE_NRF_2MBIT"]], "nrf_radio_mode_t.nrf_radio_mode_nrf_4mbit_h_0_25 (c enumerator)": [[122, "c.nrf_radio_mode_t.NRF_RADIO_MODE_NRF_4MBIT_H_0_25"]], "nrf_radio_mode_t.nrf_radio_mode_nrf_4mbit_h_0_5 (c enumerator)": [[122, "c.nrf_radio_mode_t.NRF_RADIO_MODE_NRF_4MBIT_H_0_5"]], "nrf_radio_modecnf0_dtx_get (c function)": [[122, "c.nrf_radio_modecnf0_dtx_get"]], "nrf_radio_modecnf0_ru_get (c function)": [[122, "c.nrf_radio_modecnf0_ru_get"]], "nrf_radio_modecnf0_set (c function)": [[122, "c.nrf_radio_modecnf0_set"]], "nrf_radio_packet_conf_t (c struct)": [[122, "c.nrf_radio_packet_conf_t"]], "nrf_radio_packet_conf_t.balen (c var)": [[122, "c.nrf_radio_packet_conf_t.balen"]], "nrf_radio_packet_conf_t.big_endian (c var)": [[122, "c.nrf_radio_packet_conf_t.big_endian"]], "nrf_radio_packet_conf_t.cilen (c var)": [[122, "c.nrf_radio_packet_conf_t.cilen"]], "nrf_radio_packet_conf_t.crcinc (c var)": [[122, "c.nrf_radio_packet_conf_t.crcinc"]], "nrf_radio_packet_conf_t.lflen (c var)": [[122, "c.nrf_radio_packet_conf_t.lflen"]], "nrf_radio_packet_conf_t.maxlen (c var)": [[122, "c.nrf_radio_packet_conf_t.maxlen"]], "nrf_radio_packet_conf_t.plen (c var)": [[122, "c.nrf_radio_packet_conf_t.plen"]], "nrf_radio_packet_conf_t.s0len (c var)": [[122, "c.nrf_radio_packet_conf_t.s0len"]], "nrf_radio_packet_conf_t.s1incl (c var)": [[122, "c.nrf_radio_packet_conf_t.s1incl"]], "nrf_radio_packet_conf_t.s1len (c var)": [[122, "c.nrf_radio_packet_conf_t.s1len"]], "nrf_radio_packet_conf_t.statlen (c var)": [[122, "c.nrf_radio_packet_conf_t.statlen"]], "nrf_radio_packet_conf_t.termlen (c var)": [[122, "c.nrf_radio_packet_conf_t.termlen"]], "nrf_radio_packet_conf_t.whiteen (c var)": [[122, "c.nrf_radio_packet_conf_t.whiteen"]], "nrf_radio_packet_configure (c function)": [[122, "c.nrf_radio_packet_configure"]], "nrf_radio_packetptr_get (c function)": [[122, "c.nrf_radio_packetptr_get"]], "nrf_radio_packetptr_set (c function)": [[122, "c.nrf_radio_packetptr_set"]], "nrf_radio_pdustat_get (c function)": [[122, "c.nrf_radio_pdustat_get"]], "nrf_radio_power_set (c function)": [[122, "c.nrf_radio_power_set"]], "nrf_radio_preamble_length_t (c enum)": [[122, "c.nrf_radio_preamble_length_t"]], "nrf_radio_preamble_length_t.nrf_radio_preamble_length_16bit (c enumerator)": [[122, "c.nrf_radio_preamble_length_t.NRF_RADIO_PREAMBLE_LENGTH_16BIT"]], "nrf_radio_preamble_length_t.nrf_radio_preamble_length_32bit_zero (c enumerator)": [[122, "c.nrf_radio_preamble_length_t.NRF_RADIO_PREAMBLE_LENGTH_32BIT_ZERO"]], "nrf_radio_preamble_length_t.nrf_radio_preamble_length_8bit (c enumerator)": [[122, "c.nrf_radio_preamble_length_t.NRF_RADIO_PREAMBLE_LENGTH_8BIT"]], "nrf_radio_preamble_length_t.nrf_radio_preamble_length_long_range (c enumerator)": [[122, "c.nrf_radio_preamble_length_t.NRF_RADIO_PREAMBLE_LENGTH_LONG_RANGE"]], "nrf_radio_prefix0_get (c function)": [[122, "c.nrf_radio_prefix0_get"]], "nrf_radio_prefix0_set (c function)": [[122, "c.nrf_radio_prefix0_set"]], "nrf_radio_prefix1_get (c function)": [[122, "c.nrf_radio_prefix1_get"]], "nrf_radio_prefix1_set (c function)": [[122, "c.nrf_radio_prefix1_set"]], "nrf_radio_publish_clear (c function)": [[122, "c.nrf_radio_publish_clear"]], "nrf_radio_publish_set (c function)": [[122, "c.nrf_radio_publish_set"]], "nrf_radio_rssi_sample_get (c function)": [[122, "c.nrf_radio_rssi_sample_get"]], "nrf_radio_rxaddresses_get (c function)": [[122, "c.nrf_radio_rxaddresses_get"]], "nrf_radio_rxaddresses_set (c function)": [[122, "c.nrf_radio_rxaddresses_set"]], "nrf_radio_rxcrc_get (c function)": [[122, "c.nrf_radio_rxcrc_get"]], "nrf_radio_rxmatch_get (c function)": [[122, "c.nrf_radio_rxmatch_get"]], "nrf_radio_sfd_get (c function)": [[122, "c.nrf_radio_sfd_get"]], "nrf_radio_sfd_set (c function)": [[122, "c.nrf_radio_sfd_set"]], "nrf_radio_short_mask_t (c enum)": [[122, "c.nrf_radio_short_mask_t"]], "nrf_radio_short_mask_t.nrf_radio_short_address_bcstart_mask (c enumerator)": [[122, "c.nrf_radio_short_mask_t.NRF_RADIO_SHORT_ADDRESS_BCSTART_MASK"]], "nrf_radio_short_mask_t.nrf_radio_short_address_rssistart_mask (c enumerator)": [[122, "c.nrf_radio_short_mask_t.NRF_RADIO_SHORT_ADDRESS_RSSISTART_MASK"]], "nrf_radio_short_mask_t.nrf_radio_short_ccabusy_disable_mask (c enumerator)": [[122, "c.nrf_radio_short_mask_t.NRF_RADIO_SHORT_CCABUSY_DISABLE_MASK"]], "nrf_radio_short_mask_t.nrf_radio_short_ccaidle_stop_mask (c enumerator)": [[122, "c.nrf_radio_short_mask_t.NRF_RADIO_SHORT_CCAIDLE_STOP_MASK"]], "nrf_radio_short_mask_t.nrf_radio_short_ccaidle_txen_mask (c enumerator)": [[122, "c.nrf_radio_short_mask_t.NRF_RADIO_SHORT_CCAIDLE_TXEN_MASK"]], "nrf_radio_short_mask_t.nrf_radio_short_disabled_rssistop_mask (c enumerator)": [[122, "c.nrf_radio_short_mask_t.NRF_RADIO_SHORT_DISABLED_RSSISTOP_MASK"]], "nrf_radio_short_mask_t.nrf_radio_short_disabled_rxen_mask (c enumerator)": [[122, "c.nrf_radio_short_mask_t.NRF_RADIO_SHORT_DISABLED_RXEN_MASK"]], "nrf_radio_short_mask_t.nrf_radio_short_disabled_txen_mask (c enumerator)": [[122, "c.nrf_radio_short_mask_t.NRF_RADIO_SHORT_DISABLED_TXEN_MASK"]], "nrf_radio_short_mask_t.nrf_radio_short_edend_disable_mask (c enumerator)": [[122, "c.nrf_radio_short_mask_t.NRF_RADIO_SHORT_EDEND_DISABLE_MASK"]], "nrf_radio_short_mask_t.nrf_radio_short_end_disable_mask (c enumerator)": [[122, "c.nrf_radio_short_mask_t.NRF_RADIO_SHORT_END_DISABLE_MASK"]], "nrf_radio_short_mask_t.nrf_radio_short_end_start_mask (c enumerator)": [[122, "c.nrf_radio_short_mask_t.NRF_RADIO_SHORT_END_START_MASK"]], "nrf_radio_short_mask_t.nrf_radio_short_framestart_bcstart_mask (c enumerator)": [[122, "c.nrf_radio_short_mask_t.NRF_RADIO_SHORT_FRAMESTART_BCSTART_MASK"]], "nrf_radio_short_mask_t.nrf_radio_short_phyend_disable_mask (c enumerator)": [[122, "c.nrf_radio_short_mask_t.NRF_RADIO_SHORT_PHYEND_DISABLE_MASK"]], "nrf_radio_short_mask_t.nrf_radio_short_phyend_start_mask (c enumerator)": [[122, "c.nrf_radio_short_mask_t.NRF_RADIO_SHORT_PHYEND_START_MASK"]], "nrf_radio_short_mask_t.nrf_radio_short_ready_edstart_mask (c enumerator)": [[122, "c.nrf_radio_short_mask_t.NRF_RADIO_SHORT_READY_EDSTART_MASK"]], "nrf_radio_short_mask_t.nrf_radio_short_ready_start_mask (c enumerator)": [[122, "c.nrf_radio_short_mask_t.NRF_RADIO_SHORT_READY_START_MASK"]], "nrf_radio_short_mask_t.nrf_radio_short_rxready_ccastart_mask (c enumerator)": [[122, "c.nrf_radio_short_mask_t.NRF_RADIO_SHORT_RXREADY_CCASTART_MASK"]], "nrf_radio_short_mask_t.nrf_radio_short_rxready_start_mask (c enumerator)": [[122, "c.nrf_radio_short_mask_t.NRF_RADIO_SHORT_RXREADY_START_MASK"]], "nrf_radio_short_mask_t.nrf_radio_short_txready_start_mask (c enumerator)": [[122, "c.nrf_radio_short_mask_t.NRF_RADIO_SHORT_TXREADY_START_MASK"]], "nrf_radio_shorts_disable (c function)": [[122, "c.nrf_radio_shorts_disable"]], "nrf_radio_shorts_enable (c function)": [[122, "c.nrf_radio_shorts_enable"]], "nrf_radio_shorts_get (c function)": [[122, "c.nrf_radio_shorts_get"]], "nrf_radio_shorts_set (c function)": [[122, "c.nrf_radio_shorts_set"]], "nrf_radio_state_get (c function)": [[122, "c.nrf_radio_state_get"]], "nrf_radio_state_t (c enum)": [[122, "c.nrf_radio_state_t"]], "nrf_radio_state_t.nrf_radio_state_disabled (c enumerator)": [[122, "c.nrf_radio_state_t.NRF_RADIO_STATE_DISABLED"]], "nrf_radio_state_t.nrf_radio_state_rx (c enumerator)": [[122, "c.nrf_radio_state_t.NRF_RADIO_STATE_RX"]], "nrf_radio_state_t.nrf_radio_state_rxdisable (c enumerator)": [[122, "c.nrf_radio_state_t.NRF_RADIO_STATE_RXDISABLE"]], "nrf_radio_state_t.nrf_radio_state_rxidle (c enumerator)": [[122, "c.nrf_radio_state_t.NRF_RADIO_STATE_RXIDLE"]], "nrf_radio_state_t.nrf_radio_state_rxru (c enumerator)": [[122, "c.nrf_radio_state_t.NRF_RADIO_STATE_RXRU"]], "nrf_radio_state_t.nrf_radio_state_tx (c enumerator)": [[122, "c.nrf_radio_state_t.NRF_RADIO_STATE_TX"]], "nrf_radio_state_t.nrf_radio_state_txdisable (c enumerator)": [[122, "c.nrf_radio_state_t.NRF_RADIO_STATE_TXDISABLE"]], "nrf_radio_state_t.nrf_radio_state_txidle (c enumerator)": [[122, "c.nrf_radio_state_t.NRF_RADIO_STATE_TXIDLE"]], "nrf_radio_state_t.nrf_radio_state_txru (c enumerator)": [[122, "c.nrf_radio_state_t.NRF_RADIO_STATE_TXRU"]], "nrf_radio_subscribe_clear (c function)": [[122, "c.nrf_radio_subscribe_clear"]], "nrf_radio_subscribe_set (c function)": [[122, "c.nrf_radio_subscribe_set"]], "nrf_radio_task_address_get (c function)": [[122, "c.nrf_radio_task_address_get"]], "nrf_radio_task_t (c enum)": [[122, "c.nrf_radio_task_t"]], "nrf_radio_task_t.nrf_radio_task_bcstart (c enumerator)": [[122, "c.nrf_radio_task_t.NRF_RADIO_TASK_BCSTART"]], "nrf_radio_task_t.nrf_radio_task_bcstop (c enumerator)": [[122, "c.nrf_radio_task_t.NRF_RADIO_TASK_BCSTOP"]], "nrf_radio_task_t.nrf_radio_task_ccastart (c enumerator)": [[122, "c.nrf_radio_task_t.NRF_RADIO_TASK_CCASTART"]], "nrf_radio_task_t.nrf_radio_task_ccastop (c enumerator)": [[122, "c.nrf_radio_task_t.NRF_RADIO_TASK_CCASTOP"]], "nrf_radio_task_t.nrf_radio_task_disable (c enumerator)": [[122, "c.nrf_radio_task_t.NRF_RADIO_TASK_DISABLE"]], "nrf_radio_task_t.nrf_radio_task_edstart (c enumerator)": [[122, "c.nrf_radio_task_t.NRF_RADIO_TASK_EDSTART"]], "nrf_radio_task_t.nrf_radio_task_edstop (c enumerator)": [[122, "c.nrf_radio_task_t.NRF_RADIO_TASK_EDSTOP"]], "nrf_radio_task_t.nrf_radio_task_rssistart (c enumerator)": [[122, "c.nrf_radio_task_t.NRF_RADIO_TASK_RSSISTART"]], "nrf_radio_task_t.nrf_radio_task_rssistop (c enumerator)": [[122, "c.nrf_radio_task_t.NRF_RADIO_TASK_RSSISTOP"]], "nrf_radio_task_t.nrf_radio_task_rxen (c enumerator)": [[122, "c.nrf_radio_task_t.NRF_RADIO_TASK_RXEN"]], "nrf_radio_task_t.nrf_radio_task_start (c enumerator)": [[122, "c.nrf_radio_task_t.NRF_RADIO_TASK_START"]], "nrf_radio_task_t.nrf_radio_task_stop (c enumerator)": [[122, "c.nrf_radio_task_t.NRF_RADIO_TASK_STOP"]], "nrf_radio_task_t.nrf_radio_task_txen (c enumerator)": [[122, "c.nrf_radio_task_t.NRF_RADIO_TASK_TXEN"]], "nrf_radio_task_trigger (c function)": [[122, "c.nrf_radio_task_trigger"]], "nrf_radio_txaddress_get (c function)": [[122, "c.nrf_radio_txaddress_get"]], "nrf_radio_txaddress_set (c function)": [[122, "c.nrf_radio_txaddress_set"]], "nrf_radio_txpower_get (c function)": [[122, "c.nrf_radio_txpower_get"]], "nrf_radio_txpower_set (c function)": [[122, "c.nrf_radio_txpower_set"]], "nrf_radio_txpower_t (c enum)": [[122, "c.nrf_radio_txpower_t"]], "nrf_radio_txpower_t.nrf_radio_txpower_0dbm (c enumerator)": [[122, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_0DBM"]], "nrf_radio_txpower_t.nrf_radio_txpower_neg12dbm (c enumerator)": [[122, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_NEG12DBM"]], "nrf_radio_txpower_t.nrf_radio_txpower_neg16dbm (c enumerator)": [[122, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_NEG16DBM"]], "nrf_radio_txpower_t.nrf_radio_txpower_neg1dbm (c enumerator)": [[122, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_NEG1DBM"]], "nrf_radio_txpower_t.nrf_radio_txpower_neg20dbm (c enumerator)": [[122, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_NEG20DBM"]], "nrf_radio_txpower_t.nrf_radio_txpower_neg2dbm (c enumerator)": [[122, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_NEG2DBM"]], "nrf_radio_txpower_t.nrf_radio_txpower_neg30dbm (c enumerator)": [[122, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_NEG30DBM"]], "nrf_radio_txpower_t.nrf_radio_txpower_neg3dbm (c enumerator)": [[122, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_NEG3DBM"]], "nrf_radio_txpower_t.nrf_radio_txpower_neg40dbm (c enumerator)": [[122, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_NEG40DBM"]], "nrf_radio_txpower_t.nrf_radio_txpower_neg4dbm (c enumerator)": [[122, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_NEG4DBM"]], "nrf_radio_txpower_t.nrf_radio_txpower_neg5dbm (c enumerator)": [[122, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_NEG5DBM"]], "nrf_radio_txpower_t.nrf_radio_txpower_neg6dbm (c enumerator)": [[122, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_NEG6DBM"]], "nrf_radio_txpower_t.nrf_radio_txpower_neg70dbm (c enumerator)": [[122, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_NEG70DBM"]], "nrf_radio_txpower_t.nrf_radio_txpower_neg7dbm (c enumerator)": [[122, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_NEG7DBM"]], "nrf_radio_txpower_t.nrf_radio_txpower_neg8dbm (c enumerator)": [[122, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_NEG8DBM"]], "nrf_radio_txpower_t.nrf_radio_txpower_pos10dbm (c enumerator)": [[122, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_POS10DBM"]], "nrf_radio_txpower_t.nrf_radio_txpower_pos1dbm (c enumerator)": [[122, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_POS1DBM"]], "nrf_radio_txpower_t.nrf_radio_txpower_pos2dbm (c enumerator)": [[122, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_POS2DBM"]], "nrf_radio_txpower_t.nrf_radio_txpower_pos3dbm (c enumerator)": [[122, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_POS3DBM"]], "nrf_radio_txpower_t.nrf_radio_txpower_pos4dbm (c enumerator)": [[122, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_POS4DBM"]], "nrf_radio_txpower_t.nrf_radio_txpower_pos5dbm (c enumerator)": [[122, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_POS5DBM"]], "nrf_radio_txpower_t.nrf_radio_txpower_pos6dbm (c enumerator)": [[122, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_POS6DBM"]], "nrf_radio_txpower_t.nrf_radio_txpower_pos7dbm (c enumerator)": [[122, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_POS7DBM"]], "nrf_radio_txpower_t.nrf_radio_txpower_pos8dbm (c enumerator)": [[122, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_POS8DBM"]], "nrf_radio_txpower_t.nrf_radio_txpower_pos9dbm (c enumerator)": [[122, "c.nrf_radio_txpower_t.NRF_RADIO_TXPOWER_POS9DBM"]], "nrf_ramc_event_address_get (c function)": [[124, "c.nrf_ramc_event_address_get"]], "nrf_ramc_event_check (c function)": [[124, "c.nrf_ramc_event_check"]], "nrf_ramc_event_clear (c function)": [[124, "c.nrf_ramc_event_clear"]], "nrf_ramc_event_t (c enum)": [[124, "c.nrf_ramc_event_t"]], "nrf_ramc_event_t.nrf_ramc_event_error_fixable (c enumerator)": [[124, "c.nrf_ramc_event_t.NRF_RAMC_EVENT_ERROR_FIXABLE"]], "nrf_ramc_event_t.nrf_ramc_event_error_non_fixable (c enumerator)": [[124, "c.nrf_ramc_event_t.NRF_RAMC_EVENT_ERROR_NON_FIXABLE"]], "nrf_ramc_secbase_get (c function)": [[124, "c.nrf_ramc_secbase_get"]], "nrf_ramc_secbase_set (c function)": [[124, "c.nrf_ramc_secbase_set"]], "nrf_ramc_secenable_check (c function)": [[124, "c.nrf_ramc_secenable_check"]], "nrf_ramc_secenable_set (c function)": [[124, "c.nrf_ramc_secenable_set"]], "nrf_ramc_waitstates_get (c function)": [[124, "c.nrf_ramc_waitstates_get"]], "nrf_ramc_waitstates_set (c function)": [[124, "c.nrf_ramc_waitstates_set"]], "nrf_regulators_has_inductor_det (c macro)": [[126, "c.NRF_REGULATORS_HAS_INDUCTOR_DET"]], "nrf_regulators_has_main_status (c macro)": [[126, "c.NRF_REGULATORS_HAS_MAIN_STATUS"]], "nrf_regulators_has_pof (c macro)": [[126, "c.NRF_REGULATORS_HAS_POF"]], "nrf_regulators_has_pof_status (c macro)": [[126, "c.NRF_REGULATORS_HAS_POF_STATUS"]], "nrf_regulators_has_pof_vddh (c macro)": [[126, "c.NRF_REGULATORS_HAS_POF_VDDH"]], "nrf_regulators_has_pof_warn_disable (c macro)": [[126, "c.NRF_REGULATORS_HAS_POF_WARN_DISABLE"]], "nrf_regulators_has_trim (c macro)": [[126, "c.NRF_REGULATORS_HAS_TRIM"]], "nrf_regulators_has_vreg_high (c macro)": [[126, "c.NRF_REGULATORS_HAS_VREG_HIGH"]], "nrf_regulators_has_vreg_medium (c macro)": [[126, "c.NRF_REGULATORS_HAS_VREG_MEDIUM"]], "nrf_regulators_has_vreg_radio (c macro)": [[126, "c.NRF_REGULATORS_HAS_VREG_RADIO"]], "nrf_regulators_elv_mode_allow_get (c function)": [[126, "c.nrf_regulators_elv_mode_allow_get"]], "nrf_regulators_elv_mode_allow_mask_t (c enum)": [[126, "c.nrf_regulators_elv_mode_allow_mask_t"]], "nrf_regulators_elv_mode_allow_mask_t.nrf_regulators_elv_mode_allow_mask_ext (c enumerator)": [[126, "c.nrf_regulators_elv_mode_allow_mask_t.NRF_REGULATORS_ELV_MODE_ALLOW_MASK_EXT"]], "nrf_regulators_elv_mode_allow_set (c function)": [[126, "c.nrf_regulators_elv_mode_allow_set"]], "nrf_regulators_inductor_check (c function)": [[126, "c.nrf_regulators_inductor_check"]], "nrf_regulators_main_status_get (c function)": [[126, "c.nrf_regulators_main_status_get"]], "nrf_regulators_main_status_t (c enum)": [[126, "c.nrf_regulators_main_status_t"]], "nrf_regulators_main_status_t.nrf_regulators_main_status_high (c enumerator)": [[126, "c.nrf_regulators_main_status_t.NRF_REGULATORS_MAIN_STATUS_HIGH"]], "nrf_regulators_main_status_t.nrf_regulators_main_status_normal (c enumerator)": [[126, "c.nrf_regulators_main_status_t.NRF_REGULATORS_MAIN_STATUS_NORMAL"]], "nrf_regulators_pof_below_thr_check (c function)": [[126, "c.nrf_regulators_pof_below_thr_check"]], "nrf_regulators_pof_config_get (c function)": [[126, "c.nrf_regulators_pof_config_get"]], "nrf_regulators_pof_config_set (c function)": [[126, "c.nrf_regulators_pof_config_set"]], "nrf_regulators_pof_config_t (c struct)": [[126, "c.nrf_regulators_pof_config_t"]], "nrf_regulators_pof_config_t.enable (c var)": [[126, "c.nrf_regulators_pof_config_t.enable"]], "nrf_regulators_pof_config_t.thr (c var)": [[126, "c.nrf_regulators_pof_config_t.thr"]], "nrf_regulators_pof_config_t.thr_vddh (c var)": [[126, "c.nrf_regulators_pof_config_t.thr_vddh"]], "nrf_regulators_pof_config_t.warn_disable (c var)": [[126, "c.nrf_regulators_pof_config_t.warn_disable"]], "nrf_regulators_pof_thr_t (c enum)": [[126, "c.nrf_regulators_pof_thr_t"]], "nrf_regulators_pof_thr_t.nrf_regulators_pof_thr_1v7 (c enumerator)": [[126, "c.nrf_regulators_pof_thr_t.NRF_REGULATORS_POF_THR_1V7"]], "nrf_regulators_pof_thr_t.nrf_regulators_pof_thr_1v8 (c enumerator)": [[126, "c.nrf_regulators_pof_thr_t.NRF_REGULATORS_POF_THR_1V8"]], "nrf_regulators_pof_thr_t.nrf_regulators_pof_thr_1v9 (c enumerator)": [[126, "c.nrf_regulators_pof_thr_t.NRF_REGULATORS_POF_THR_1V9"]], "nrf_regulators_pof_thr_t.nrf_regulators_pof_thr_2v0 (c enumerator)": [[126, "c.nrf_regulators_pof_thr_t.NRF_REGULATORS_POF_THR_2V0"]], "nrf_regulators_pof_thr_t.nrf_regulators_pof_thr_2v1 (c enumerator)": [[126, "c.nrf_regulators_pof_thr_t.NRF_REGULATORS_POF_THR_2V1"]], "nrf_regulators_pof_thr_t.nrf_regulators_pof_thr_2v2 (c enumerator)": [[126, "c.nrf_regulators_pof_thr_t.NRF_REGULATORS_POF_THR_2V2"]], "nrf_regulators_pof_thr_t.nrf_regulators_pof_thr_2v3 (c enumerator)": [[126, "c.nrf_regulators_pof_thr_t.NRF_REGULATORS_POF_THR_2V3"]], "nrf_regulators_pof_thr_t.nrf_regulators_pof_thr_2v4 (c enumerator)": [[126, "c.nrf_regulators_pof_thr_t.NRF_REGULATORS_POF_THR_2V4"]], "nrf_regulators_pof_thr_t.nrf_regulators_pof_thr_2v5 (c enumerator)": [[126, "c.nrf_regulators_pof_thr_t.NRF_REGULATORS_POF_THR_2V5"]], "nrf_regulators_pof_thr_t.nrf_regulators_pof_thr_2v6 (c enumerator)": [[126, "c.nrf_regulators_pof_thr_t.NRF_REGULATORS_POF_THR_2V6"]], "nrf_regulators_pof_thr_t.nrf_regulators_pof_thr_2v7 (c enumerator)": [[126, "c.nrf_regulators_pof_thr_t.NRF_REGULATORS_POF_THR_2V7"]], "nrf_regulators_pof_thr_t.nrf_regulators_pof_thr_2v8 (c enumerator)": [[126, "c.nrf_regulators_pof_thr_t.NRF_REGULATORS_POF_THR_2V8"]], "nrf_regulators_pof_thr_vddh_t (c enum)": [[126, "c.nrf_regulators_pof_thr_vddh_t"]], "nrf_regulators_pof_thr_vddh_t.nrf_regulators_pof_thr_vddh_2v7 (c enumerator)": [[126, "c.nrf_regulators_pof_thr_vddh_t.NRF_REGULATORS_POF_THR_VDDH_2V7"]], "nrf_regulators_pof_thr_vddh_t.nrf_regulators_pof_thr_vddh_2v8 (c enumerator)": [[126, "c.nrf_regulators_pof_thr_vddh_t.NRF_REGULATORS_POF_THR_VDDH_2V8"]], "nrf_regulators_pof_thr_vddh_t.nrf_regulators_pof_thr_vddh_2v9 (c enumerator)": [[126, "c.nrf_regulators_pof_thr_vddh_t.NRF_REGULATORS_POF_THR_VDDH_2V9"]], "nrf_regulators_pof_thr_vddh_t.nrf_regulators_pof_thr_vddh_3v0 (c enumerator)": [[126, "c.nrf_regulators_pof_thr_vddh_t.NRF_REGULATORS_POF_THR_VDDH_3V0"]], "nrf_regulators_pof_thr_vddh_t.nrf_regulators_pof_thr_vddh_3v1 (c enumerator)": [[126, "c.nrf_regulators_pof_thr_vddh_t.NRF_REGULATORS_POF_THR_VDDH_3V1"]], "nrf_regulators_pof_thr_vddh_t.nrf_regulators_pof_thr_vddh_3v2 (c enumerator)": [[126, "c.nrf_regulators_pof_thr_vddh_t.NRF_REGULATORS_POF_THR_VDDH_3V2"]], "nrf_regulators_pof_thr_vddh_t.nrf_regulators_pof_thr_vddh_3v3 (c enumerator)": [[126, "c.nrf_regulators_pof_thr_vddh_t.NRF_REGULATORS_POF_THR_VDDH_3V3"]], "nrf_regulators_pof_thr_vddh_t.nrf_regulators_pof_thr_vddh_3v4 (c enumerator)": [[126, "c.nrf_regulators_pof_thr_vddh_t.NRF_REGULATORS_POF_THR_VDDH_3V4"]], "nrf_regulators_pof_thr_vddh_t.nrf_regulators_pof_thr_vddh_3v5 (c enumerator)": [[126, "c.nrf_regulators_pof_thr_vddh_t.NRF_REGULATORS_POF_THR_VDDH_3V5"]], "nrf_regulators_pof_thr_vddh_t.nrf_regulators_pof_thr_vddh_3v6 (c enumerator)": [[126, "c.nrf_regulators_pof_thr_vddh_t.NRF_REGULATORS_POF_THR_VDDH_3V6"]], "nrf_regulators_pof_thr_vddh_t.nrf_regulators_pof_thr_vddh_3v7 (c enumerator)": [[126, "c.nrf_regulators_pof_thr_vddh_t.NRF_REGULATORS_POF_THR_VDDH_3V7"]], "nrf_regulators_pof_thr_vddh_t.nrf_regulators_pof_thr_vddh_3v8 (c enumerator)": [[126, "c.nrf_regulators_pof_thr_vddh_t.NRF_REGULATORS_POF_THR_VDDH_3V8"]], "nrf_regulators_pof_thr_vddh_t.nrf_regulators_pof_thr_vddh_3v9 (c enumerator)": [[126, "c.nrf_regulators_pof_thr_vddh_t.NRF_REGULATORS_POF_THR_VDDH_3V9"]], "nrf_regulators_pof_thr_vddh_t.nrf_regulators_pof_thr_vddh_4v0 (c enumerator)": [[126, "c.nrf_regulators_pof_thr_vddh_t.NRF_REGULATORS_POF_THR_VDDH_4V0"]], "nrf_regulators_pof_thr_vddh_t.nrf_regulators_pof_thr_vddh_4v1 (c enumerator)": [[126, "c.nrf_regulators_pof_thr_vddh_t.NRF_REGULATORS_POF_THR_VDDH_4V1"]], "nrf_regulators_pof_thr_vddh_t.nrf_regulators_pof_thr_vddh_4v2 (c enumerator)": [[126, "c.nrf_regulators_pof_thr_vddh_t.NRF_REGULATORS_POF_THR_VDDH_4V2"]], "nrf_regulators_system_off (c function)": [[126, "c.nrf_regulators_system_off"]], "nrf_regulators_vreg_enable_check (c function)": [[126, "c.nrf_regulators_vreg_enable_check"]], "nrf_regulators_vreg_enable_set (c function)": [[126, "c.nrf_regulators_vreg_enable_set"]], "nrf_regulators_vreg_t (c enum)": [[126, "c.nrf_regulators_vreg_t"]], "nrf_regulators_vreg_t.nrf_regulators_vreg_high (c enumerator)": [[126, "c.nrf_regulators_vreg_t.NRF_REGULATORS_VREG_HIGH"]], "nrf_regulators_vreg_t.nrf_regulators_vreg_main (c enumerator)": [[126, "c.nrf_regulators_vreg_t.NRF_REGULATORS_VREG_MAIN"]], "nrf_regulators_vreg_t.nrf_regulators_vreg_medium (c enumerator)": [[126, "c.nrf_regulators_vreg_t.NRF_REGULATORS_VREG_MEDIUM"]], "nrf_regulators_vreg_t.nrf_regulators_vreg_radio (c enumerator)": [[126, "c.nrf_regulators_vreg_t.NRF_REGULATORS_VREG_RADIO"]], "nrf_reset_has_application (c macro)": [[127, "c.NRF_RESET_HAS_APPLICATION"]], "nrf_reset_has_ctrlaphard_reset (c macro)": [[127, "c.NRF_RESET_HAS_CTRLAPHARD_RESET"]], "nrf_reset_has_ctrlappin_reset (c macro)": [[127, "c.NRF_RESET_HAS_CTRLAPPIN_RESET"]], "nrf_reset_has_ctrlapsoft_reset (c macro)": [[127, "c.NRF_RESET_HAS_CTRLAPSOFT_RESET"]], "nrf_reset_has_ctrlap_reset (c macro)": [[127, "c.NRF_RESET_HAS_CTRLAP_RESET"]], "nrf_reset_has_grtc_reset (c macro)": [[127, "c.NRF_RESET_HAS_GRTC_RESET"]], "nrf_reset_has_ldog_reset (c macro)": [[127, "c.NRF_RESET_HAS_LDOG_RESET"]], "nrf_reset_has_llockup_reset (c macro)": [[127, "c.NRF_RESET_HAS_LLOCKUP_RESET"]], "nrf_reset_has_lpcomp_reset (c macro)": [[127, "c.NRF_RESET_HAS_LPCOMP_RESET"]], "nrf_reset_has_mforceoff_reset (c macro)": [[127, "c.NRF_RESET_HAS_MFORCEOFF_RESET"]], "nrf_reset_has_network (c macro)": [[127, "c.NRF_RESET_HAS_NETWORK"]], "nrf_reset_has_sectamper_reset (c macro)": [[127, "c.NRF_RESET_HAS_SECTAMPER_RESET"]], "nrf_reset_has_vbus_reset (c macro)": [[127, "c.NRF_RESET_HAS_VBUS_RESET"]], "nrf_reset_network_force_off (c function)": [[127, "c.nrf_reset_network_force_off"]], "nrf_reset_resetreas_clear (c function)": [[127, "c.nrf_reset_resetreas_clear"]], "nrf_reset_resetreas_get (c function)": [[127, "c.nrf_reset_resetreas_get"]], "nrf_reset_resetreas_mask_t (c enum)": [[127, "c.nrf_reset_resetreas_mask_t"]], "nrf_reset_resetreas_mask_t.nrf_reset_resetreas_ctrlaphard_mask (c enumerator)": [[127, "c.nrf_reset_resetreas_mask_t.NRF_RESET_RESETREAS_CTRLAPHARD_MASK"]], "nrf_reset_resetreas_mask_t.nrf_reset_resetreas_ctrlappin_mask (c enumerator)": [[127, "c.nrf_reset_resetreas_mask_t.NRF_RESET_RESETREAS_CTRLAPPIN_MASK"]], "nrf_reset_resetreas_mask_t.nrf_reset_resetreas_ctrlapsoft_mask (c enumerator)": [[127, "c.nrf_reset_resetreas_mask_t.NRF_RESET_RESETREAS_CTRLAPSOFT_MASK"]], "nrf_reset_resetreas_mask_t.nrf_reset_resetreas_ctrlap_mask (c enumerator)": [[127, "c.nrf_reset_resetreas_mask_t.NRF_RESET_RESETREAS_CTRLAP_MASK"]], "nrf_reset_resetreas_mask_t.nrf_reset_resetreas_dif_mask (c enumerator)": [[127, "c.nrf_reset_resetreas_mask_t.NRF_RESET_RESETREAS_DIF_MASK"]], "nrf_reset_resetreas_mask_t.nrf_reset_resetreas_dog0_mask (c enumerator)": [[127, "c.nrf_reset_resetreas_mask_t.NRF_RESET_RESETREAS_DOG0_MASK"]], "nrf_reset_resetreas_mask_t.nrf_reset_resetreas_dog1_mask (c enumerator)": [[127, "c.nrf_reset_resetreas_mask_t.NRF_RESET_RESETREAS_DOG1_MASK"]], "nrf_reset_resetreas_mask_t.nrf_reset_resetreas_grtc_mask (c enumerator)": [[127, "c.nrf_reset_resetreas_mask_t.NRF_RESET_RESETREAS_GRTC_MASK"]], "nrf_reset_resetreas_mask_t.nrf_reset_resetreas_lctrlap_mask (c enumerator)": [[127, "c.nrf_reset_resetreas_mask_t.NRF_RESET_RESETREAS_LCTRLAP_MASK"]], "nrf_reset_resetreas_mask_t.nrf_reset_resetreas_ldog_mask (c enumerator)": [[127, "c.nrf_reset_resetreas_mask_t.NRF_RESET_RESETREAS_LDOG_MASK"]], "nrf_reset_resetreas_mask_t.nrf_reset_resetreas_llockup_mask (c enumerator)": [[127, "c.nrf_reset_resetreas_mask_t.NRF_RESET_RESETREAS_LLOCKUP_MASK"]], "nrf_reset_resetreas_mask_t.nrf_reset_resetreas_lockup_mask (c enumerator)": [[127, "c.nrf_reset_resetreas_mask_t.NRF_RESET_RESETREAS_LOCKUP_MASK"]], "nrf_reset_resetreas_mask_t.nrf_reset_resetreas_lpcomp_mask (c enumerator)": [[127, "c.nrf_reset_resetreas_mask_t.NRF_RESET_RESETREAS_LPCOMP_MASK"]], "nrf_reset_resetreas_mask_t.nrf_reset_resetreas_lsreq_mask (c enumerator)": [[127, "c.nrf_reset_resetreas_mask_t.NRF_RESET_RESETREAS_LSREQ_MASK"]], "nrf_reset_resetreas_mask_t.nrf_reset_resetreas_mforceoff_mask (c enumerator)": [[127, "c.nrf_reset_resetreas_mask_t.NRF_RESET_RESETREAS_MFORCEOFF_MASK"]], "nrf_reset_resetreas_mask_t.nrf_reset_resetreas_nfc_mask (c enumerator)": [[127, "c.nrf_reset_resetreas_mask_t.NRF_RESET_RESETREAS_NFC_MASK"]], "nrf_reset_resetreas_mask_t.nrf_reset_resetreas_off_mask (c enumerator)": [[127, "c.nrf_reset_resetreas_mask_t.NRF_RESET_RESETREAS_OFF_MASK"]], "nrf_reset_resetreas_mask_t.nrf_reset_resetreas_resetpin_mask (c enumerator)": [[127, "c.nrf_reset_resetreas_mask_t.NRF_RESET_RESETREAS_RESETPIN_MASK"]], "nrf_reset_resetreas_mask_t.nrf_reset_resetreas_sectamper_mask (c enumerator)": [[127, "c.nrf_reset_resetreas_mask_t.NRF_RESET_RESETREAS_SECTAMPER_MASK"]], "nrf_reset_resetreas_mask_t.nrf_reset_resetreas_sreq_mask (c enumerator)": [[127, "c.nrf_reset_resetreas_mask_t.NRF_RESET_RESETREAS_SREQ_MASK"]], "nrf_reset_resetreas_mask_t.nrf_reset_resetreas_vbus_mask (c enumerator)": [[127, "c.nrf_reset_resetreas_mask_t.NRF_RESET_RESETREAS_VBUS_MASK"]], "nrf_resetinfo_error_status_max (c macro)": [[128, "c.NRF_RESETINFO_ERROR_STATUS_MAX"]], "nrf_resetinfo_has_local_crossdomain (c macro)": [[128, "c.NRF_RESETINFO_HAS_LOCAL_CROSSDOMAIN"]], "nrf_resetinfo_has_masklockup (c macro)": [[128, "c.NRF_RESETINFO_HAS_MASKLOCKUP"]], "nrf_resetinfo_has_multiple_secwdt (c macro)": [[128, "c.NRF_RESETINFO_HAS_MULTIPLE_SECWDT"]], "nrf_resetinfo_has_resetreas_struct (c macro)": [[128, "c.NRF_RESETINFO_HAS_RESETREAS_STRUCT"]], "nrf_resetinfo_error_address_get (c function)": [[128, "c.nrf_resetinfo_error_address_get"]], "nrf_resetinfo_error_address_set (c function)": [[128, "c.nrf_resetinfo_error_address_set"]], "nrf_resetinfo_error_status_get (c function)": [[128, "c.nrf_resetinfo_error_status_get"]], "nrf_resetinfo_error_status_set (c function)": [[128, "c.nrf_resetinfo_error_status_set"]], "nrf_resetinfo_mask_lockup_check (c function)": [[128, "c.nrf_resetinfo_mask_lockup_check"]], "nrf_resetinfo_mask_lockup_set (c function)": [[128, "c.nrf_resetinfo_mask_lockup_set"]], "nrf_resetinfo_resetreas_global_get (c function)": [[128, "c.nrf_resetinfo_resetreas_global_get"]], "nrf_resetinfo_resetreas_global_mask_t (c enum)": [[128, "c.nrf_resetinfo_resetreas_global_mask_t"]], "nrf_resetinfo_resetreas_global_mask_t.nrf_resetinfo_resetreas_global_ctrlap_mask (c enumerator)": [[128, "c.nrf_resetinfo_resetreas_global_mask_t.NRF_RESETINFO_RESETREAS_GLOBAL_CTRLAP_MASK"]], "nrf_resetinfo_resetreas_global_mask_t.nrf_resetinfo_resetreas_global_dif_mask (c enumerator)": [[128, "c.nrf_resetinfo_resetreas_global_mask_t.NRF_RESETINFO_RESETREAS_GLOBAL_DIF_MASK"]], "nrf_resetinfo_resetreas_global_mask_t.nrf_resetinfo_resetreas_global_dog_mask (c enumerator)": [[128, "c.nrf_resetinfo_resetreas_global_mask_t.NRF_RESETINFO_RESETREAS_GLOBAL_DOG_MASK"]], "nrf_resetinfo_resetreas_global_mask_t.nrf_resetinfo_resetreas_global_gpio_mask (c enumerator)": [[128, "c.nrf_resetinfo_resetreas_global_mask_t.NRF_RESETINFO_RESETREAS_GLOBAL_GPIO_MASK"]], "nrf_resetinfo_resetreas_global_mask_t.nrf_resetinfo_resetreas_global_grtc_mask (c enumerator)": [[128, "c.nrf_resetinfo_resetreas_global_mask_t.NRF_RESETINFO_RESETREAS_GLOBAL_GRTC_MASK"]], "nrf_resetinfo_resetreas_global_mask_t.nrf_resetinfo_resetreas_global_lpcomp_mask (c enumerator)": [[128, "c.nrf_resetinfo_resetreas_global_mask_t.NRF_RESETINFO_RESETREAS_GLOBAL_LPCOMP_MASK"]], "nrf_resetinfo_resetreas_global_mask_t.nrf_resetinfo_resetreas_global_nfc_mask (c enumerator)": [[128, "c.nrf_resetinfo_resetreas_global_mask_t.NRF_RESETINFO_RESETREAS_GLOBAL_NFC_MASK"]], "nrf_resetinfo_resetreas_global_mask_t.nrf_resetinfo_resetreas_global_pin_mask (c enumerator)": [[128, "c.nrf_resetinfo_resetreas_global_mask_t.NRF_RESETINFO_RESETREAS_GLOBAL_PIN_MASK"]], "nrf_resetinfo_resetreas_global_mask_t.nrf_resetinfo_resetreas_global_por_mask (c enumerator)": [[128, "c.nrf_resetinfo_resetreas_global_mask_t.NRF_RESETINFO_RESETREAS_GLOBAL_POR_MASK"]], "nrf_resetinfo_resetreas_global_mask_t.nrf_resetinfo_resetreas_global_seclockup_mask (c enumerator)": [[128, "c.nrf_resetinfo_resetreas_global_mask_t.NRF_RESETINFO_RESETREAS_GLOBAL_SECLOCKUP_MASK"]], "nrf_resetinfo_resetreas_global_mask_t.nrf_resetinfo_resetreas_global_secsreq_mask (c enumerator)": [[128, "c.nrf_resetinfo_resetreas_global_mask_t.NRF_RESETINFO_RESETREAS_GLOBAL_SECSREQ_MASK"]], "nrf_resetinfo_resetreas_global_mask_t.nrf_resetinfo_resetreas_global_sectamper_mask (c enumerator)": [[128, "c.nrf_resetinfo_resetreas_global_mask_t.NRF_RESETINFO_RESETREAS_GLOBAL_SECTAMPER_MASK"]], "nrf_resetinfo_resetreas_global_mask_t.nrf_resetinfo_resetreas_global_secwdt0_mask (c enumerator)": [[128, "c.nrf_resetinfo_resetreas_global_mask_t.NRF_RESETINFO_RESETREAS_GLOBAL_SECWDT0_MASK"]], "nrf_resetinfo_resetreas_global_mask_t.nrf_resetinfo_resetreas_global_secwdt1_mask (c enumerator)": [[128, "c.nrf_resetinfo_resetreas_global_mask_t.NRF_RESETINFO_RESETREAS_GLOBAL_SECWDT1_MASK"]], "nrf_resetinfo_resetreas_global_mask_t.nrf_resetinfo_resetreas_global_vusb_mask (c enumerator)": [[128, "c.nrf_resetinfo_resetreas_global_mask_t.NRF_RESETINFO_RESETREAS_GLOBAL_VUSB_MASK"]], "nrf_resetinfo_resetreas_global_set (c function)": [[128, "c.nrf_resetinfo_resetreas_global_set"]], "nrf_resetinfo_resetreas_local_get (c function)": [[128, "c.nrf_resetinfo_resetreas_local_get"]], "nrf_resetinfo_resetreas_local_mask_t (c enum)": [[128, "c.nrf_resetinfo_resetreas_local_mask_t"]], "nrf_resetinfo_resetreas_local_mask_t.nrf_resetinfo_resetreas_local_crossdomain_mask (c enumerator)": [[128, "c.nrf_resetinfo_resetreas_local_mask_t.NRF_RESETINFO_RESETREAS_LOCAL_CROSSDOMAIN_MASK"]], "nrf_resetinfo_resetreas_local_mask_t.nrf_resetinfo_resetreas_local_dogns_mask (c enumerator)": [[128, "c.nrf_resetinfo_resetreas_local_mask_t.NRF_RESETINFO_RESETREAS_LOCAL_DOGNS_MASK"]], "nrf_resetinfo_resetreas_local_mask_t.nrf_resetinfo_resetreas_local_dog_mask (c enumerator)": [[128, "c.nrf_resetinfo_resetreas_local_mask_t.NRF_RESETINFO_RESETREAS_LOCAL_DOG_MASK"]], "nrf_resetinfo_resetreas_local_mask_t.nrf_resetinfo_resetreas_local_lockup_mask (c enumerator)": [[128, "c.nrf_resetinfo_resetreas_local_mask_t.NRF_RESETINFO_RESETREAS_LOCAL_LOCKUP_MASK"]], "nrf_resetinfo_resetreas_local_mask_t.nrf_resetinfo_resetreas_local_sreq_mask (c enumerator)": [[128, "c.nrf_resetinfo_resetreas_local_mask_t.NRF_RESETINFO_RESETREAS_LOCAL_SREQ_MASK"]], "nrf_resetinfo_resetreas_local_mask_t.nrf_resetinfo_resetreas_local_unretained_mask (c enumerator)": [[128, "c.nrf_resetinfo_resetreas_local_mask_t.NRF_RESETINFO_RESETREAS_LOCAL_UNRETAINED_MASK"]], "nrf_resetinfo_resetreas_local_set (c function)": [[128, "c.nrf_resetinfo_resetreas_local_set"]], "nrf_resetinfo_restore_valid_check (c function)": [[128, "c.nrf_resetinfo_restore_valid_check"]], "nrf_resetinfo_restore_valid_set (c function)": [[128, "c.nrf_resetinfo_restore_valid_set"]], "nrfx_rng_default_config (c macro)": [[130, "c.NRFX_RNG_DEFAULT_CONFIG"]], "nrfx_rng_config_t (c struct)": [[130, "c.nrfx_rng_config_t"]], "nrfx_rng_config_t.error_correction (c var)": [[130, "c.nrfx_rng_config_t.error_correction"]], "nrfx_rng_config_t.interrupt_priority (c var)": [[130, "c.nrfx_rng_config_t.interrupt_priority"]], "nrfx_rng_evt_handler_t (c type)": [[130, "c.nrfx_rng_evt_handler_t"]], "nrfx_rng_init (c function)": [[130, "c.nrfx_rng_init"]], "nrfx_rng_init_check (c function)": [[130, "c.nrfx_rng_init_check"]], "nrfx_rng_start (c function)": [[130, "c.nrfx_rng_start"]], "nrfx_rng_stop (c function)": [[130, "c.nrfx_rng_stop"]], "nrfx_rng_uninit (c function)": [[130, "c.nrfx_rng_uninit"]], "nrf_rng_error_correction_disable (c function)": [[131, "c.nrf_rng_error_correction_disable"]], "nrf_rng_error_correction_enable (c function)": [[131, "c.nrf_rng_error_correction_enable"]], "nrf_rng_event_address_get (c function)": [[131, "c.nrf_rng_event_address_get"]], "nrf_rng_event_check (c function)": [[131, "c.nrf_rng_event_check"]], "nrf_rng_event_clear (c function)": [[131, "c.nrf_rng_event_clear"]], "nrf_rng_event_t (c enum)": [[131, "c.nrf_rng_event_t"]], "nrf_rng_event_t.nrf_rng_event_valrdy (c enumerator)": [[131, "c.nrf_rng_event_t.NRF_RNG_EVENT_VALRDY"]], "nrf_rng_int_disable (c function)": [[131, "c.nrf_rng_int_disable"]], "nrf_rng_int_enable (c function)": [[131, "c.nrf_rng_int_enable"]], "nrf_rng_int_enable_check (c function)": [[131, "c.nrf_rng_int_enable_check"]], "nrf_rng_int_mask_t (c enum)": [[131, "c.nrf_rng_int_mask_t"]], "nrf_rng_int_mask_t.nrf_rng_int_valrdy_mask (c enumerator)": [[131, "c.nrf_rng_int_mask_t.NRF_RNG_INT_VALRDY_MASK"]], "nrf_rng_publish_clear (c function)": [[131, "c.nrf_rng_publish_clear"]], "nrf_rng_publish_set (c function)": [[131, "c.nrf_rng_publish_set"]], "nrf_rng_random_value_get (c function)": [[131, "c.nrf_rng_random_value_get"]], "nrf_rng_short_mask_t (c enum)": [[131, "c.nrf_rng_short_mask_t"]], "nrf_rng_short_mask_t.nrf_rng_short_valrdy_stop_mask (c enumerator)": [[131, "c.nrf_rng_short_mask_t.NRF_RNG_SHORT_VALRDY_STOP_MASK"]], "nrf_rng_shorts_disable (c function)": [[131, "c.nrf_rng_shorts_disable"]], "nrf_rng_shorts_enable (c function)": [[131, "c.nrf_rng_shorts_enable"]], "nrf_rng_subscribe_clear (c function)": [[131, "c.nrf_rng_subscribe_clear"]], "nrf_rng_subscribe_set (c function)": [[131, "c.nrf_rng_subscribe_set"]], "nrf_rng_task_address_get (c function)": [[131, "c.nrf_rng_task_address_get"]], "nrf_rng_task_t (c enum)": [[131, "c.nrf_rng_task_t"]], "nrf_rng_task_t.nrf_rng_task_start (c enumerator)": [[131, "c.nrf_rng_task_t.NRF_RNG_TASK_START"]], "nrf_rng_task_t.nrf_rng_task_stop (c enumerator)": [[131, "c.nrf_rng_task_t.NRF_RNG_TASK_STOP"]], "nrf_rng_task_trigger (c function)": [[131, "c.nrf_rng_task_trigger"]], "nrfx_rramc_default_config (c macro)": [[133, "c.NRFX_RRAMC_DEFAULT_CONFIG"]], "nrfx_rramc_all_erase (c function)": [[133, "c.nrfx_rramc_all_erase"]], "nrfx_rramc_buffer_read (c function)": [[133, "c.nrfx_rramc_buffer_read"]], "nrfx_rramc_byte_read (c function)": [[133, "c.nrfx_rramc_byte_read"]], "nrfx_rramc_byte_write (c function)": [[133, "c.nrfx_rramc_byte_write"]], "nrfx_rramc_bytes_write (c function)": [[133, "c.nrfx_rramc_bytes_write"]], "nrfx_rramc_config_t (c struct)": [[133, "c.nrfx_rramc_config_t"]], "nrfx_rramc_config_t.abort_on_pof (c var)": [[133, "c.nrfx_rramc_config_t.abort_on_pof"]], "nrfx_rramc_config_t.access_timeout (c var)": [[133, "c.nrfx_rramc_config_t.access_timeout"]], "nrfx_rramc_config_t.irq_priority (c var)": [[133, "c.nrfx_rramc_config_t.irq_priority"]], "nrfx_rramc_config_t.mode_write (c var)": [[133, "c.nrfx_rramc_config_t.mode_write"]], "nrfx_rramc_config_t.preload_timeout (c var)": [[133, "c.nrfx_rramc_config_t.preload_timeout"]], "nrfx_rramc_config_t.preload_timeout_enable (c var)": [[133, "c.nrfx_rramc_config_t.preload_timeout_enable"]], "nrfx_rramc_config_t.write_buff_size (c var)": [[133, "c.nrfx_rramc_config_t.write_buff_size"]], "nrfx_rramc_evt_handler_t (c type)": [[133, "c.nrfx_rramc_evt_handler_t"]], "nrfx_rramc_init (c function)": [[133, "c.nrfx_rramc_init"]], "nrfx_rramc_memory_size_get (c function)": [[133, "c.nrfx_rramc_memory_size_get"]], "nrfx_rramc_otp_word_read (c function)": [[133, "c.nrfx_rramc_otp_word_read"]], "nrfx_rramc_otp_word_write (c function)": [[133, "c.nrfx_rramc_otp_word_write"]], "nrfx_rramc_ready_check (c function)": [[133, "c.nrfx_rramc_ready_check"]], "nrfx_rramc_reconfigure (c function)": [[133, "c.nrfx_rramc_reconfigure"]], "nrfx_rramc_uninit (c function)": [[133, "c.nrfx_rramc_uninit"]], "nrfx_rramc_word_read (c function)": [[133, "c.nrfx_rramc_word_read"]], "nrfx_rramc_word_write (c function)": [[133, "c.nrfx_rramc_word_write"]], "nrfx_rramc_words_write (c function)": [[133, "c.nrfx_rramc_words_write"]], "nrfx_rramc_write_enable_check (c function)": [[133, "c.nrfx_rramc_write_enable_check"]], "nrfx_rramc_write_enable_set (c function)": [[133, "c.nrfx_rramc_write_enable_set"]], "nrf_rramc_config_write_buff_size_max (c macro)": [[134, "c.NRF_RRAMC_CONFIG_WRITE_BUFF_SIZE_MAX"]], "nrf_rramc_readynexttimeout_max (c macro)": [[134, "c.NRF_RRAMC_READYNEXTTIMEOUT_MAX"]], "nrf_rramc_region_config_perm_mask (c macro)": [[134, "c.NRF_RRAMC_REGION_CONFIG_PERM_MASK"]], "nrf_rramc_config_get (c function)": [[134, "c.nrf_rramc_config_get"]], "nrf_rramc_config_set (c function)": [[134, "c.nrf_rramc_config_set"]], "nrf_rramc_config_t (c struct)": [[134, "c.nrf_rramc_config_t"]], "nrf_rramc_config_t.mode_write (c var)": [[134, "c.nrf_rramc_config_t.mode_write"]], "nrf_rramc_config_t.write_buff_size (c var)": [[134, "c.nrf_rramc_config_t.write_buff_size"]], "nrf_rramc_empty_buffer_check (c function)": [[134, "c.nrf_rramc_empty_buffer_check"]], "nrf_rramc_erase_all_check (c function)": [[134, "c.nrf_rramc_erase_all_check"]], "nrf_rramc_erase_all_set (c function)": [[134, "c.nrf_rramc_erase_all_set"]], "nrf_rramc_error_access_addr_get (c function)": [[134, "c.nrf_rramc_error_access_addr_get"]], "nrf_rramc_event_address_get (c function)": [[134, "c.nrf_rramc_event_address_get"]], "nrf_rramc_event_check (c function)": [[134, "c.nrf_rramc_event_check"]], "nrf_rramc_event_clear (c function)": [[134, "c.nrf_rramc_event_clear"]], "nrf_rramc_event_t (c enum)": [[134, "c.nrf_rramc_event_t"]], "nrf_rramc_event_t.nrf_rramc_event_error_access (c enumerator)": [[134, "c.nrf_rramc_event_t.NRF_RRAMC_EVENT_ERROR_ACCESS"]], "nrf_rramc_event_t.nrf_rramc_event_ready (c enumerator)": [[134, "c.nrf_rramc_event_t.NRF_RRAMC_EVENT_READY"]], "nrf_rramc_event_t.nrf_rramc_event_ready_next (c enumerator)": [[134, "c.nrf_rramc_event_t.NRF_RRAMC_EVENT_READY_NEXT"]], "nrf_rramc_event_t.nrf_rramc_event_wokenup (c enumerator)": [[134, "c.nrf_rramc_event_t.NRF_RRAMC_EVENT_WOKENUP"]], "nrf_rramc_int_disable (c function)": [[134, "c.nrf_rramc_int_disable"]], "nrf_rramc_int_enable (c function)": [[134, "c.nrf_rramc_int_enable"]], "nrf_rramc_int_enable_check (c function)": [[134, "c.nrf_rramc_int_enable_check"]], "nrf_rramc_int_mask_t (c enum)": [[134, "c.nrf_rramc_int_mask_t"]], "nrf_rramc_int_mask_t.nrf_rramc_all_ints_mask (c enumerator)": [[134, "c.nrf_rramc_int_mask_t.NRF_RRAMC_ALL_INTS_MASK"]], "nrf_rramc_int_mask_t.nrf_rramc_int_error_access_mask (c enumerator)": [[134, "c.nrf_rramc_int_mask_t.NRF_RRAMC_INT_ERROR_ACCESS_MASK"]], "nrf_rramc_int_mask_t.nrf_rramc_int_ready_mask (c enumerator)": [[134, "c.nrf_rramc_int_mask_t.NRF_RRAMC_INT_READY_MASK"]], "nrf_rramc_int_mask_t.nrf_rramc_int_ready_next_mask (c enumerator)": [[134, "c.nrf_rramc_int_mask_t.NRF_RRAMC_INT_READY_NEXT_MASK"]], "nrf_rramc_int_mask_t.nrf_rramc_int_wokenup_mask (c enumerator)": [[134, "c.nrf_rramc_int_mask_t.NRF_RRAMC_INT_WOKENUP_MASK"]], "nrf_rramc_int_pending_get (c function)": [[134, "c.nrf_rramc_int_pending_get"]], "nrf_rramc_power_config_get (c function)": [[134, "c.nrf_rramc_power_config_get"]], "nrf_rramc_power_config_set (c function)": [[134, "c.nrf_rramc_power_config_set"]], "nrf_rramc_power_t (c struct)": [[134, "c.nrf_rramc_power_t"]], "nrf_rramc_power_t.abort_on_pof (c var)": [[134, "c.nrf_rramc_power_t.abort_on_pof"]], "nrf_rramc_power_t.access_timeout (c var)": [[134, "c.nrf_rramc_power_t.access_timeout"]], "nrf_rramc_publish_clear (c function)": [[134, "c.nrf_rramc_publish_clear"]], "nrf_rramc_publish_set (c function)": [[134, "c.nrf_rramc_publish_set"]], "nrf_rramc_ready_check (c function)": [[134, "c.nrf_rramc_ready_check"]], "nrf_rramc_ready_next_timeout_get (c function)": [[134, "c.nrf_rramc_ready_next_timeout_get"]], "nrf_rramc_ready_next_timeout_set (c function)": [[134, "c.nrf_rramc_ready_next_timeout_set"]], "nrf_rramc_ready_next_timeout_t (c struct)": [[134, "c.nrf_rramc_ready_next_timeout_t"]], "nrf_rramc_ready_next_timeout_t.enable (c var)": [[134, "c.nrf_rramc_ready_next_timeout_t.enable"]], "nrf_rramc_ready_next_timeout_t.value (c var)": [[134, "c.nrf_rramc_ready_next_timeout_t.value"]], "nrf_rramc_region_config_get (c function)": [[134, "c.nrf_rramc_region_config_get"]], "nrf_rramc_region_config_set (c function)": [[134, "c.nrf_rramc_region_config_set"]], "nrf_rramc_region_config_t (c struct)": [[134, "c.nrf_rramc_region_config_t"]], "nrf_rramc_region_config_t.address (c var)": [[134, "c.nrf_rramc_region_config_t.address"]], "nrf_rramc_region_config_t.lock (c var)": [[134, "c.nrf_rramc_region_config_t.lock"]], "nrf_rramc_region_config_t.permissions (c var)": [[134, "c.nrf_rramc_region_config_t.permissions"]], "nrf_rramc_region_config_t.size_kb (c var)": [[134, "c.nrf_rramc_region_config_t.size_kb"]], "nrf_rramc_region_config_t.writeonce (c var)": [[134, "c.nrf_rramc_region_config_t.writeonce"]], "nrf_rramc_region_perm_mask_t (c enum)": [[134, "c.nrf_rramc_region_perm_mask_t"]], "nrf_rramc_region_perm_mask_t.nrf_rramc_region_perm_execute_mask (c enumerator)": [[134, "c.nrf_rramc_region_perm_mask_t.NRF_RRAMC_REGION_PERM_EXECUTE_MASK"]], "nrf_rramc_region_perm_mask_t.nrf_rramc_region_perm_read_mask (c enumerator)": [[134, "c.nrf_rramc_region_perm_mask_t.NRF_RRAMC_REGION_PERM_READ_MASK"]], "nrf_rramc_region_perm_mask_t.nrf_rramc_region_perm_secure_mask (c enumerator)": [[134, "c.nrf_rramc_region_perm_mask_t.NRF_RRAMC_REGION_PERM_SECURE_MASK"]], "nrf_rramc_region_perm_mask_t.nrf_rramc_region_perm_write_mask (c enumerator)": [[134, "c.nrf_rramc_region_perm_mask_t.NRF_RRAMC_REGION_PERM_WRITE_MASK"]], "nrf_rramc_subscribe_clear (c function)": [[134, "c.nrf_rramc_subscribe_clear"]], "nrf_rramc_subscribe_set (c function)": [[134, "c.nrf_rramc_subscribe_set"]], "nrf_rramc_task_address_get (c function)": [[134, "c.nrf_rramc_task_address_get"]], "nrf_rramc_task_t (c enum)": [[134, "c.nrf_rramc_task_t"]], "nrf_rramc_task_t.nrf_rramc_task_commit_writebuf (c enumerator)": [[134, "c.nrf_rramc_task_t.NRF_RRAMC_TASK_COMMIT_WRITEBUF"]], "nrf_rramc_task_t.nrf_rramc_task_wakeup (c enumerator)": [[134, "c.nrf_rramc_task_t.NRF_RRAMC_TASK_WAKEUP"]], "nrf_rramc_task_trigger (c function)": [[134, "c.nrf_rramc_task_trigger"]], "nrf_rramc_write_ready_check (c function)": [[134, "c.nrf_rramc_write_ready_check"]], "nrfy_rramc_bytes_in_word (c macro)": [[135, "c.NRFY_RRAMC_BYTES_IN_WORD"]], "nrfy_rramc_ready_next_timeout_default (c macro)": [[135, "c.NRFY_RRAMC_READY_NEXT_TIMEOUT_DEFAULT"]], "nrfy_rramc_rram_base_address (c macro)": [[135, "c.NRFY_RRAMC_RRAM_BASE_ADDRESS"]], "nrfy_rramc_words_in_bufer_line (c macro)": [[135, "c.NRFY_RRAMC_WORDS_IN_BUFER_LINE"]], "nrfy_rramc_buffer_read (c function)": [[135, "c.nrfy_rramc_buffer_read"]], "nrfy_rramc_byte_read (c function)": [[135, "c.nrfy_rramc_byte_read"]], "nrfy_rramc_byte_write (c function)": [[135, "c.nrfy_rramc_byte_write"]], "nrfy_rramc_bytes_write (c function)": [[135, "c.nrfy_rramc_bytes_write"]], "nrfy_rramc_config_get (c function)": [[135, "c.nrfy_rramc_config_get"]], "nrfy_rramc_config_set (c function)": [[135, "c.nrfy_rramc_config_set"]], "nrfy_rramc_config_t (c struct)": [[135, "c.nrfy_rramc_config_t"]], "nrfy_rramc_config_t.config (c var)": [[135, "c.nrfy_rramc_config_t.config"]], "nrfy_rramc_config_t.power (c var)": [[135, "c.nrfy_rramc_config_t.power"]], "nrfy_rramc_config_t.preload_timeout (c var)": [[135, "c.nrfy_rramc_config_t.preload_timeout"]], "nrfy_rramc_configure (c function)": [[135, "c.nrfy_rramc_configure"]], "nrfy_rramc_empty_buffer_check (c function)": [[135, "c.nrfy_rramc_empty_buffer_check"]], "nrfy_rramc_erase_all_check (c function)": [[135, "c.nrfy_rramc_erase_all_check"]], "nrfy_rramc_erase_all_set (c function)": [[135, "c.nrfy_rramc_erase_all_set"]], "nrfy_rramc_error_access_addr_get (c function)": [[135, "c.nrfy_rramc_error_access_addr_get"]], "nrfy_rramc_event_address_get (c function)": [[135, "c.nrfy_rramc_event_address_get"]], "nrfy_rramc_event_check (c function)": [[135, "c.nrfy_rramc_event_check"]], "nrfy_rramc_event_clear (c function)": [[135, "c.nrfy_rramc_event_clear"]], "nrfy_rramc_events_process (c function)": [[135, "c.nrfy_rramc_events_process"]], "nrfy_rramc_int_disable (c function)": [[135, "c.nrfy_rramc_int_disable"]], "nrfy_rramc_int_enable (c function)": [[135, "c.nrfy_rramc_int_enable"]], "nrfy_rramc_int_enable_check (c function)": [[135, "c.nrfy_rramc_int_enable_check"]], "nrfy_rramc_int_init (c function)": [[135, "c.nrfy_rramc_int_init"]], "nrfy_rramc_int_uninit (c function)": [[135, "c.nrfy_rramc_int_uninit"]], "nrfy_rramc_otp_word_read (c function)": [[135, "c.nrfy_rramc_otp_word_read"]], "nrfy_rramc_otp_word_write (c function)": [[135, "c.nrfy_rramc_otp_word_write"]], "nrfy_rramc_power_config_get (c function)": [[135, "c.nrfy_rramc_power_config_get"]], "nrfy_rramc_power_config_set (c function)": [[135, "c.nrfy_rramc_power_config_set"]], "nrfy_rramc_publish_clear (c function)": [[135, "c.nrfy_rramc_publish_clear"]], "nrfy_rramc_publish_set (c function)": [[135, "c.nrfy_rramc_publish_set"]], "nrfy_rramc_ready_check (c function)": [[135, "c.nrfy_rramc_ready_check"]], "nrfy_rramc_ready_next_timeout_get (c function)": [[135, "c.nrfy_rramc_ready_next_timeout_get"]], "nrfy_rramc_ready_next_timeout_set (c function)": [[135, "c.nrfy_rramc_ready_next_timeout_set"]], "nrfy_rramc_subscribe_clear (c function)": [[135, "c.nrfy_rramc_subscribe_clear"]], "nrfy_rramc_subscribe_set (c function)": [[135, "c.nrfy_rramc_subscribe_set"]], "nrfy_rramc_task_address_get (c function)": [[135, "c.nrfy_rramc_task_address_get"]], "nrfy_rramc_task_trigger (c function)": [[135, "c.nrfy_rramc_task_trigger"]], "nrfy_rramc_word_read (c function)": [[135, "c.nrfy_rramc_word_read"]], "nrfy_rramc_word_write (c function)": [[135, "c.nrfy_rramc_word_write"]], "nrfy_rramc_words_write (c function)": [[135, "c.nrfy_rramc_words_write"]], "nrfy_rramc_write_ready_check (c function)": [[135, "c.nrfy_rramc_write_ready_check"]], "nrfx_rtc_default_config (c macro)": [[137, "c.NRFX_RTC_DEFAULT_CONFIG"]], "nrfx_rtc_instance (c macro)": [[137, "c.NRFX_RTC_INSTANCE"]], "nrfx_rtc_inst_handler_get (c macro)": [[137, "c.NRFX_RTC_INST_HANDLER_GET"]], "nrfx_rtc_us_to_ticks (c macro)": [[137, "c.NRFX_RTC_US_TO_TICKS"]], "nrfx_rtc_cc_disable (c function)": [[137, "c.nrfx_rtc_cc_disable"]], "nrfx_rtc_cc_set (c function)": [[137, "c.nrfx_rtc_cc_set"]], "nrfx_rtc_config_t (c struct)": [[137, "c.nrfx_rtc_config_t"]], "nrfx_rtc_config_t.interrupt_priority (c var)": [[137, "c.nrfx_rtc_config_t.interrupt_priority"]], "nrfx_rtc_config_t.prescaler (c var)": [[137, "c.nrfx_rtc_config_t.prescaler"]], "nrfx_rtc_config_t.reliable (c var)": [[137, "c.nrfx_rtc_config_t.reliable"]], "nrfx_rtc_config_t.tick_latency (c var)": [[137, "c.nrfx_rtc_config_t.tick_latency"]], "nrfx_rtc_counter_clear (c function)": [[137, "c.nrfx_rtc_counter_clear"]], "nrfx_rtc_counter_get (c function)": [[137, "c.nrfx_rtc_counter_get"]], "nrfx_rtc_disable (c function)": [[137, "c.nrfx_rtc_disable"]], "nrfx_rtc_enable (c function)": [[137, "c.nrfx_rtc_enable"]], "nrfx_rtc_event_address_get (c function)": [[137, "c.nrfx_rtc_event_address_get"]], "nrfx_rtc_handler_t (c type)": [[137, "c.nrfx_rtc_handler_t"]], "nrfx_rtc_init (c function)": [[137, "c.nrfx_rtc_init"]], "nrfx_rtc_init_check (c function)": [[137, "c.nrfx_rtc_init_check"]], "nrfx_rtc_int_disable (c function)": [[137, "c.nrfx_rtc_int_disable"]], "nrfx_rtc_int_enable (c function)": [[137, "c.nrfx_rtc_int_enable"]], "nrfx_rtc_int_type_t (c enum)": [[137, "c.nrfx_rtc_int_type_t"]], "nrfx_rtc_int_type_t.nrfx_rtc_int_compare0 (c enumerator)": [[137, "c.nrfx_rtc_int_type_t.NRFX_RTC_INT_COMPARE0"]], "nrfx_rtc_int_type_t.nrfx_rtc_int_compare1 (c enumerator)": [[137, "c.nrfx_rtc_int_type_t.NRFX_RTC_INT_COMPARE1"]], "nrfx_rtc_int_type_t.nrfx_rtc_int_compare2 (c enumerator)": [[137, "c.nrfx_rtc_int_type_t.NRFX_RTC_INT_COMPARE2"]], "nrfx_rtc_int_type_t.nrfx_rtc_int_compare3 (c enumerator)": [[137, "c.nrfx_rtc_int_type_t.NRFX_RTC_INT_COMPARE3"]], "nrfx_rtc_int_type_t.nrfx_rtc_int_overflow (c enumerator)": [[137, "c.nrfx_rtc_int_type_t.NRFX_RTC_INT_OVERFLOW"]], "nrfx_rtc_int_type_t.nrfx_rtc_int_tick (c enumerator)": [[137, "c.nrfx_rtc_int_type_t.NRFX_RTC_INT_TICK"]], "nrfx_rtc_max_ticks_get (c function)": [[137, "c.nrfx_rtc_max_ticks_get"]], "nrfx_rtc_overflow_disable (c function)": [[137, "c.nrfx_rtc_overflow_disable"]], "nrfx_rtc_overflow_enable (c function)": [[137, "c.nrfx_rtc_overflow_enable"]], "nrfx_rtc_t (c struct)": [[137, "c.nrfx_rtc_t"]], "nrfx_rtc_t.cc_channel_count (c var)": [[137, "c.nrfx_rtc_t.cc_channel_count"]], "nrfx_rtc_t.instance_id (c var)": [[137, "c.nrfx_rtc_t.instance_id"]], "nrfx_rtc_t.p_reg (c var)": [[137, "c.nrfx_rtc_t.p_reg"]], "nrfx_rtc_task_address_get (c function)": [[137, "c.nrfx_rtc_task_address_get"]], "nrfx_rtc_tick_disable (c function)": [[137, "c.nrfx_rtc_tick_disable"]], "nrfx_rtc_tick_enable (c function)": [[137, "c.nrfx_rtc_tick_enable"]], "nrfx_rtc_uninit (c function)": [[137, "c.nrfx_rtc_uninit"]], "nrf_rtc_all_channels_int_mask (c macro)": [[138, "c.NRF_RTC_ALL_CHANNELS_INT_MASK"]], "nrf_rtc_cc_channel_count (c macro)": [[138, "c.NRF_RTC_CC_CHANNEL_COUNT"]], "nrf_rtc_cc_count_max (c macro)": [[138, "c.NRF_RTC_CC_COUNT_MAX"]], "nrf_rtc_channel_event_addr (c macro)": [[138, "c.NRF_RTC_CHANNEL_EVENT_ADDR"]], "nrf_rtc_channel_int_mask (c macro)": [[138, "c.NRF_RTC_CHANNEL_INT_MASK"]], "nrf_rtc_counter_max (c macro)": [[138, "c.NRF_RTC_COUNTER_MAX"]], "nrf_rtc_freq_to_prescaler (c macro)": [[138, "c.NRF_RTC_FREQ_TO_PRESCALER"]], "nrf_rtc_input_freq (c macro)": [[138, "c.NRF_RTC_INPUT_FREQ"]], "nrf_rtc_inst_get (c macro)": [[138, "c.NRF_RTC_INST_GET"]], "nrf_rtc_wrap (c macro)": [[138, "c.NRF_RTC_WRAP"]], "nrf_rtc_capture_task_get (c function)": [[138, "c.nrf_rtc_capture_task_get"]], "nrf_rtc_cc_get (c function)": [[138, "c.nrf_rtc_cc_get"]], "nrf_rtc_cc_set (c function)": [[138, "c.nrf_rtc_cc_set"]], "nrf_rtc_compare_event_get (c function)": [[138, "c.nrf_rtc_compare_event_get"]], "nrf_rtc_counter_get (c function)": [[138, "c.nrf_rtc_counter_get"]], "nrf_rtc_event_address_get (c function)": [[138, "c.nrf_rtc_event_address_get"]], "nrf_rtc_event_check (c function)": [[138, "c.nrf_rtc_event_check"]], "nrf_rtc_event_clear (c function)": [[138, "c.nrf_rtc_event_clear"]], "nrf_rtc_event_disable (c function)": [[138, "c.nrf_rtc_event_disable"]], "nrf_rtc_event_enable (c function)": [[138, "c.nrf_rtc_event_enable"]], "nrf_rtc_event_t (c enum)": [[138, "c.nrf_rtc_event_t"]], "nrf_rtc_event_t.nrf_rtc_event_compare_0 (c enumerator)": [[138, "c.nrf_rtc_event_t.NRF_RTC_EVENT_COMPARE_0"]], "nrf_rtc_event_t.nrf_rtc_event_compare_1 (c enumerator)": [[138, "c.nrf_rtc_event_t.NRF_RTC_EVENT_COMPARE_1"]], "nrf_rtc_event_t.nrf_rtc_event_compare_2 (c enumerator)": [[138, "c.nrf_rtc_event_t.NRF_RTC_EVENT_COMPARE_2"]], "nrf_rtc_event_t.nrf_rtc_event_compare_3 (c enumerator)": [[138, "c.nrf_rtc_event_t.NRF_RTC_EVENT_COMPARE_3"]], "nrf_rtc_event_t.nrf_rtc_event_overflow (c enumerator)": [[138, "c.nrf_rtc_event_t.NRF_RTC_EVENT_OVERFLOW"]], "nrf_rtc_event_t.nrf_rtc_event_tick (c enumerator)": [[138, "c.nrf_rtc_event_t.NRF_RTC_EVENT_TICK"]], "nrf_rtc_int_disable (c function)": [[138, "c.nrf_rtc_int_disable"]], "nrf_rtc_int_enable (c function)": [[138, "c.nrf_rtc_int_enable"]], "nrf_rtc_int_enable_check (c function)": [[138, "c.nrf_rtc_int_enable_check"]], "nrf_rtc_int_t (c enum)": [[138, "c.nrf_rtc_int_t"]], "nrf_rtc_int_t.nrf_rtc_int_compare0_mask (c enumerator)": [[138, "c.nrf_rtc_int_t.NRF_RTC_INT_COMPARE0_MASK"]], "nrf_rtc_int_t.nrf_rtc_int_compare1_mask (c enumerator)": [[138, "c.nrf_rtc_int_t.NRF_RTC_INT_COMPARE1_MASK"]], "nrf_rtc_int_t.nrf_rtc_int_compare2_mask (c enumerator)": [[138, "c.nrf_rtc_int_t.NRF_RTC_INT_COMPARE2_MASK"]], "nrf_rtc_int_t.nrf_rtc_int_compare3_mask (c enumerator)": [[138, "c.nrf_rtc_int_t.NRF_RTC_INT_COMPARE3_MASK"]], "nrf_rtc_int_t.nrf_rtc_int_overflow_mask (c enumerator)": [[138, "c.nrf_rtc_int_t.NRF_RTC_INT_OVERFLOW_MASK"]], "nrf_rtc_int_t.nrf_rtc_int_tick_mask (c enumerator)": [[138, "c.nrf_rtc_int_t.NRF_RTC_INT_TICK_MASK"]], "nrf_rtc_prescaler_get (c function)": [[138, "c.nrf_rtc_prescaler_get"]], "nrf_rtc_prescaler_set (c function)": [[138, "c.nrf_rtc_prescaler_set"]], "nrf_rtc_publish_clear (c function)": [[138, "c.nrf_rtc_publish_clear"]], "nrf_rtc_publish_set (c function)": [[138, "c.nrf_rtc_publish_set"]], "nrf_rtc_subscribe_clear (c function)": [[138, "c.nrf_rtc_subscribe_clear"]], "nrf_rtc_subscribe_set (c function)": [[138, "c.nrf_rtc_subscribe_set"]], "nrf_rtc_task_address_get (c function)": [[138, "c.nrf_rtc_task_address_get"]], "nrf_rtc_task_t (c enum)": [[138, "c.nrf_rtc_task_t"]], "nrf_rtc_task_t.nrf_rtc_task_capture_0 (c enumerator)": [[138, "c.nrf_rtc_task_t.NRF_RTC_TASK_CAPTURE_0"]], "nrf_rtc_task_t.nrf_rtc_task_capture_1 (c enumerator)": [[138, "c.nrf_rtc_task_t.NRF_RTC_TASK_CAPTURE_1"]], "nrf_rtc_task_t.nrf_rtc_task_capture_2 (c enumerator)": [[138, "c.nrf_rtc_task_t.NRF_RTC_TASK_CAPTURE_2"]], "nrf_rtc_task_t.nrf_rtc_task_capture_3 (c enumerator)": [[138, "c.nrf_rtc_task_t.NRF_RTC_TASK_CAPTURE_3"]], "nrf_rtc_task_t.nrf_rtc_task_clear (c enumerator)": [[138, "c.nrf_rtc_task_t.NRF_RTC_TASK_CLEAR"]], "nrf_rtc_task_t.nrf_rtc_task_start (c enumerator)": [[138, "c.nrf_rtc_task_t.NRF_RTC_TASK_START"]], "nrf_rtc_task_t.nrf_rtc_task_stop (c enumerator)": [[138, "c.nrf_rtc_task_t.NRF_RTC_TASK_STOP"]], "nrf_rtc_task_t.nrf_rtc_task_trigger_overflow (c enumerator)": [[138, "c.nrf_rtc_task_t.NRF_RTC_TASK_TRIGGER_OVERFLOW"]], "nrf_rtc_task_trigger (c function)": [[138, "c.nrf_rtc_task_trigger"]], "nrfy_rtc_capture_task_get (c function)": [[139, "c.nrfy_rtc_capture_task_get"]], "nrfy_rtc_cc_get (c function)": [[139, "c.nrfy_rtc_cc_get"]], "nrfy_rtc_cc_set (c function)": [[139, "c.nrfy_rtc_cc_set"]], "nrfy_rtc_compare_event_get (c function)": [[139, "c.nrfy_rtc_compare_event_get"]], "nrfy_rtc_config_t (c struct)": [[139, "c.nrfy_rtc_config_t"]], "nrfy_rtc_config_t.prescaler (c var)": [[139, "c.nrfy_rtc_config_t.prescaler"]], "nrfy_rtc_counter_get (c function)": [[139, "c.nrfy_rtc_counter_get"]], "nrfy_rtc_event_address_get (c function)": [[139, "c.nrfy_rtc_event_address_get"]], "nrfy_rtc_event_check (c function)": [[139, "c.nrfy_rtc_event_check"]], "nrfy_rtc_event_clear (c function)": [[139, "c.nrfy_rtc_event_clear"]], "nrfy_rtc_event_disable (c function)": [[139, "c.nrfy_rtc_event_disable"]], "nrfy_rtc_event_enable (c function)": [[139, "c.nrfy_rtc_event_enable"]], "nrfy_rtc_event_int_clear_enable (c function)": [[139, "c.nrfy_rtc_event_int_clear_enable"]], "nrfy_rtc_event_int_disable (c function)": [[139, "c.nrfy_rtc_event_int_disable"]], "nrfy_rtc_events_process (c function)": [[139, "c.nrfy_rtc_events_process"]], "nrfy_rtc_int_disable (c function)": [[139, "c.nrfy_rtc_int_disable"]], "nrfy_rtc_int_enable (c function)": [[139, "c.nrfy_rtc_int_enable"]], "nrfy_rtc_int_enable_check (c function)": [[139, "c.nrfy_rtc_int_enable_check"]], "nrfy_rtc_int_init (c function)": [[139, "c.nrfy_rtc_int_init"]], "nrfy_rtc_int_uninit (c function)": [[139, "c.nrfy_rtc_int_uninit"]], "nrfy_rtc_periph_configure (c function)": [[139, "c.nrfy_rtc_periph_configure"]], "nrfy_rtc_prescaler_get (c function)": [[139, "c.nrfy_rtc_prescaler_get"]], "nrfy_rtc_prescaler_set (c function)": [[139, "c.nrfy_rtc_prescaler_set"]], "nrfy_rtc_publish_clear (c function)": [[139, "c.nrfy_rtc_publish_clear"]], "nrfy_rtc_publish_set (c function)": [[139, "c.nrfy_rtc_publish_set"]], "nrfy_rtc_stop (c function)": [[139, "c.nrfy_rtc_stop"]], "nrfy_rtc_subscribe_clear (c function)": [[139, "c.nrfy_rtc_subscribe_clear"]], "nrfy_rtc_subscribe_set (c function)": [[139, "c.nrfy_rtc_subscribe_set"]], "nrfy_rtc_task_address_get (c function)": [[139, "c.nrfy_rtc_task_address_get"]], "nrfy_rtc_task_trigger (c function)": [[139, "c.nrfy_rtc_task_trigger"]], "nrfx_saadc_default_acqtime (c macro)": [[141, "c.NRFX_SAADC_DEFAULT_ACQTIME"]], "nrfx_saadc_default_adv_config (c macro)": [[141, "c.NRFX_SAADC_DEFAULT_ADV_CONFIG"]], "nrfx_saadc_default_channel_differential (c macro)": [[141, "c.NRFX_SAADC_DEFAULT_CHANNEL_DIFFERENTIAL"]], "nrfx_saadc_default_channel_se (c macro)": [[141, "c.NRFX_SAADC_DEFAULT_CHANNEL_SE"]], "nrfx_saadc_default_conv_time (c macro)": [[141, "c.NRFX_SAADC_DEFAULT_CONV_TIME"]], "nrfx_saadc_samples_to_bytes (c macro)": [[141, "c.NRFX_SAADC_SAMPLES_TO_BYTES"]], "nrfx_saadc_sample_get (c macro)": [[141, "c.NRFX_SAADC_SAMPLE_GET"]], "nrfx_saadc_abort (c function)": [[141, "c.nrfx_saadc_abort"]], "nrfx_saadc_adv_config_t (c struct)": [[141, "c.nrfx_saadc_adv_config_t"]], "nrfx_saadc_adv_config_t.burst (c var)": [[141, "c.nrfx_saadc_adv_config_t.burst"]], "nrfx_saadc_adv_config_t.internal_timer_cc (c var)": [[141, "c.nrfx_saadc_adv_config_t.internal_timer_cc"]], "nrfx_saadc_adv_config_t.oversampling (c var)": [[141, "c.nrfx_saadc_adv_config_t.oversampling"]], "nrfx_saadc_adv_config_t.start_on_end (c var)": [[141, "c.nrfx_saadc_adv_config_t.start_on_end"]], "nrfx_saadc_advanced_mode_set (c function)": [[141, "c.nrfx_saadc_advanced_mode_set"]], "nrfx_saadc_buffer_set (c function)": [[141, "c.nrfx_saadc_buffer_set"]], "nrfx_saadc_channel_config (c function)": [[141, "c.nrfx_saadc_channel_config"]], "nrfx_saadc_channel_t (c struct)": [[141, "c.nrfx_saadc_channel_t"]], "nrfx_saadc_channel_t.channel_config (c var)": [[141, "c.nrfx_saadc_channel_t.channel_config"]], "nrfx_saadc_channel_t.channel_index (c var)": [[141, "c.nrfx_saadc_channel_t.channel_index"]], "nrfx_saadc_channel_t.pin_n (c var)": [[141, "c.nrfx_saadc_channel_t.pin_n"]], "nrfx_saadc_channel_t.pin_p (c var)": [[141, "c.nrfx_saadc_channel_t.pin_p"]], "nrfx_saadc_channels_config (c function)": [[141, "c.nrfx_saadc_channels_config"]], "nrfx_saadc_channels_configured_get (c function)": [[141, "c.nrfx_saadc_channels_configured_get"]], "nrfx_saadc_channels_deconfig (c function)": [[141, "c.nrfx_saadc_channels_deconfig"]], "nrfx_saadc_done_evt_t (c struct)": [[141, "c.nrfx_saadc_done_evt_t"]], "nrfx_saadc_done_evt_t.p_buffer (c var)": [[141, "c.nrfx_saadc_done_evt_t.p_buffer"]], "nrfx_saadc_done_evt_t.size (c var)": [[141, "c.nrfx_saadc_done_evt_t.size"]], "nrfx_saadc_event_handler_t (c type)": [[141, "c.nrfx_saadc_event_handler_t"]], "nrfx_saadc_evt_t (c struct)": [[141, "c.nrfx_saadc_evt_t"]], "nrfx_saadc_evt_t.data (c var)": [[141, "c.nrfx_saadc_evt_t.data"]], "nrfx_saadc_evt_t.done (c var)": [[141, "c.nrfx_saadc_evt_t.done"]], "nrfx_saadc_evt_t.limit (c var)": [[141, "c.nrfx_saadc_evt_t.limit"]], "nrfx_saadc_evt_t.type (c var)": [[141, "c.nrfx_saadc_evt_t.type"]], "nrfx_saadc_evt_type_t (c enum)": [[141, "c.nrfx_saadc_evt_type_t"]], "nrfx_saadc_evt_type_t.nrfx_saadc_evt_buf_req (c enumerator)": [[141, "c.nrfx_saadc_evt_type_t.NRFX_SAADC_EVT_BUF_REQ"]], "nrfx_saadc_evt_type_t.nrfx_saadc_evt_calibratedone (c enumerator)": [[141, "c.nrfx_saadc_evt_type_t.NRFX_SAADC_EVT_CALIBRATEDONE"]], "nrfx_saadc_evt_type_t.nrfx_saadc_evt_done (c enumerator)": [[141, "c.nrfx_saadc_evt_type_t.NRFX_SAADC_EVT_DONE"]], "nrfx_saadc_evt_type_t.nrfx_saadc_evt_finished (c enumerator)": [[141, "c.nrfx_saadc_evt_type_t.NRFX_SAADC_EVT_FINISHED"]], "nrfx_saadc_evt_type_t.nrfx_saadc_evt_limit (c enumerator)": [[141, "c.nrfx_saadc_evt_type_t.NRFX_SAADC_EVT_LIMIT"]], "nrfx_saadc_evt_type_t.nrfx_saadc_evt_ready (c enumerator)": [[141, "c.nrfx_saadc_evt_type_t.NRFX_SAADC_EVT_READY"]], "nrfx_saadc_init (c function)": [[141, "c.nrfx_saadc_init"]], "nrfx_saadc_init_check (c function)": [[141, "c.nrfx_saadc_init_check"]], "nrfx_saadc_limit_evt_t (c struct)": [[141, "c.nrfx_saadc_limit_evt_t"]], "nrfx_saadc_limit_evt_t.channel (c var)": [[141, "c.nrfx_saadc_limit_evt_t.channel"]], "nrfx_saadc_limit_evt_t.limit_type (c var)": [[141, "c.nrfx_saadc_limit_evt_t.limit_type"]], "nrfx_saadc_limits_set (c function)": [[141, "c.nrfx_saadc_limits_set"]], "nrfx_saadc_mode_trigger (c function)": [[141, "c.nrfx_saadc_mode_trigger"]], "nrfx_saadc_offset_calibrate (c function)": [[141, "c.nrfx_saadc_offset_calibrate"]], "nrfx_saadc_simple_mode_set (c function)": [[141, "c.nrfx_saadc_simple_mode_set"]], "nrfx_saadc_uninit (c function)": [[141, "c.nrfx_saadc_uninit"]], "nrf_saadc_8bit_sample_width (c macro)": [[142, "c.NRF_SAADC_8BIT_SAMPLE_WIDTH"]], "nrf_saadc_all_channels_limits_int_mask (c macro)": [[142, "c.NRF_SAADC_ALL_CHANNELS_LIMITS_INT_MASK"]], "nrf_saadc_convtime_max (c macro)": [[142, "c.NRF_SAADC_CONVTIME_MAX"]], "nrf_saadc_has_acqtime_enum (c macro)": [[142, "c.NRF_SAADC_HAS_ACQTIME_ENUM"]], "nrf_saadc_has_ain_as_pin (c macro)": [[142, "c.NRF_SAADC_HAS_AIN_AS_PIN"]], "nrf_saadc_has_ch_config_res (c macro)": [[142, "c.NRF_SAADC_HAS_CH_CONFIG_RES"]], "nrf_saadc_has_convtime (c macro)": [[142, "c.NRF_SAADC_HAS_CONVTIME"]], "nrf_saadc_has_dma_events (c macro)": [[142, "c.NRF_SAADC_HAS_DMA_EVENTS"]], "nrf_saadc_has_dma_reg (c macro)": [[142, "c.NRF_SAADC_HAS_DMA_REG"]], "nrf_saadc_has_lin_cal (c macro)": [[142, "c.NRF_SAADC_HAS_LIN_CAL"]], "nrf_saadc_input_disabled (c macro)": [[142, "c.NRF_SAADC_INPUT_DISABLED"]], "nrf_saadc_limits_int_offset (c macro)": [[142, "c.NRF_SAADC_LIMITS_INT_OFFSET"]], "nrf_saadc_lin_cal_max (c macro)": [[142, "c.NRF_SAADC_LIN_CAL_MAX"]], "nrf_saadc_lin_cal_max_count (c macro)": [[142, "c.NRF_SAADC_LIN_CAL_MAX_COUNT"]], "nrf_saadc_acqtime_t (c enum)": [[142, "c.nrf_saadc_acqtime_t"]], "nrf_saadc_acqtime_t.nrf_saadc_acqtime_10us (c enumerator)": [[142, "c.nrf_saadc_acqtime_t.NRF_SAADC_ACQTIME_10US"]], "nrf_saadc_acqtime_t.nrf_saadc_acqtime_15us (c enumerator)": [[142, "c.nrf_saadc_acqtime_t.NRF_SAADC_ACQTIME_15US"]], "nrf_saadc_acqtime_t.nrf_saadc_acqtime_20us (c enumerator)": [[142, "c.nrf_saadc_acqtime_t.NRF_SAADC_ACQTIME_20US"]], "nrf_saadc_acqtime_t.nrf_saadc_acqtime_3us (c enumerator)": [[142, "c.nrf_saadc_acqtime_t.NRF_SAADC_ACQTIME_3US"]], "nrf_saadc_acqtime_t.nrf_saadc_acqtime_40us (c enumerator)": [[142, "c.nrf_saadc_acqtime_t.NRF_SAADC_ACQTIME_40US"]], "nrf_saadc_acqtime_t.nrf_saadc_acqtime_5us (c enumerator)": [[142, "c.nrf_saadc_acqtime_t.NRF_SAADC_ACQTIME_5US"]], "nrf_saadc_amount_get (c function)": [[142, "c.nrf_saadc_amount_get"]], "nrf_saadc_buffer_init (c function)": [[142, "c.nrf_saadc_buffer_init"]], "nrf_saadc_buffer_pointer_get (c function)": [[142, "c.nrf_saadc_buffer_pointer_get"]], "nrf_saadc_buffer_pointer_set (c function)": [[142, "c.nrf_saadc_buffer_pointer_set"]], "nrf_saadc_burst_set (c function)": [[142, "c.nrf_saadc_burst_set"]], "nrf_saadc_burst_t (c enum)": [[142, "c.nrf_saadc_burst_t"]], "nrf_saadc_burst_t.nrf_saadc_burst_disabled (c enumerator)": [[142, "c.nrf_saadc_burst_t.NRF_SAADC_BURST_DISABLED"]], "nrf_saadc_burst_t.nrf_saadc_burst_enabled (c enumerator)": [[142, "c.nrf_saadc_burst_t.NRF_SAADC_BURST_ENABLED"]], "nrf_saadc_busy_check (c function)": [[142, "c.nrf_saadc_busy_check"]], "nrf_saadc_channel_config_t (c struct)": [[142, "c.nrf_saadc_channel_config_t"]], "nrf_saadc_channel_config_t.acq_time (c var)": [[142, "c.nrf_saadc_channel_config_t.acq_time"]], "nrf_saadc_channel_config_t.burst (c var)": [[142, "c.nrf_saadc_channel_config_t.burst"]], "nrf_saadc_channel_config_t.conv_time (c var)": [[142, "c.nrf_saadc_channel_config_t.conv_time"]], "nrf_saadc_channel_config_t.gain (c var)": [[142, "c.nrf_saadc_channel_config_t.gain"]], "nrf_saadc_channel_config_t.mode (c var)": [[142, "c.nrf_saadc_channel_config_t.mode"]], "nrf_saadc_channel_config_t.reference (c var)": [[142, "c.nrf_saadc_channel_config_t.reference"]], "nrf_saadc_channel_config_t.resistor_n (c var)": [[142, "c.nrf_saadc_channel_config_t.resistor_n"]], "nrf_saadc_channel_config_t.resistor_p (c var)": [[142, "c.nrf_saadc_channel_config_t.resistor_p"]], "nrf_saadc_channel_init (c function)": [[142, "c.nrf_saadc_channel_init"]], "nrf_saadc_channel_input_set (c function)": [[142, "c.nrf_saadc_channel_input_set"]], "nrf_saadc_channel_limits_set (c function)": [[142, "c.nrf_saadc_channel_limits_set"]], "nrf_saadc_channel_pos_input_set (c function)": [[142, "c.nrf_saadc_channel_pos_input_set"]], "nrf_saadc_config_t (c struct)": [[142, "c.nrf_saadc_config_t"]], "nrf_saadc_config_t.buffer (c var)": [[142, "c.nrf_saadc_config_t.buffer"]], "nrf_saadc_config_t.buffer_size (c var)": [[142, "c.nrf_saadc_config_t.buffer_size"]], "nrf_saadc_config_t.oversample (c var)": [[142, "c.nrf_saadc_config_t.oversample"]], "nrf_saadc_config_t.resolution (c var)": [[142, "c.nrf_saadc_config_t.resolution"]], "nrf_saadc_continuous_mode_disable (c function)": [[142, "c.nrf_saadc_continuous_mode_disable"]], "nrf_saadc_continuous_mode_enable (c function)": [[142, "c.nrf_saadc_continuous_mode_enable"]], "nrf_saadc_continuous_mode_enable_check (c function)": [[142, "c.nrf_saadc_continuous_mode_enable_check"]], "nrf_saadc_disable (c function)": [[142, "c.nrf_saadc_disable"]], "nrf_saadc_enable (c function)": [[142, "c.nrf_saadc_enable"]], "nrf_saadc_enable_check (c function)": [[142, "c.nrf_saadc_enable_check"]], "nrf_saadc_event_address_get (c function)": [[142, "c.nrf_saadc_event_address_get"]], "nrf_saadc_event_check (c function)": [[142, "c.nrf_saadc_event_check"]], "nrf_saadc_event_clear (c function)": [[142, "c.nrf_saadc_event_clear"]], "nrf_saadc_event_t (c enum)": [[142, "c.nrf_saadc_event_t"]], "nrf_saadc_event_t.nrf_saadc_event_calibratedone (c enumerator)": [[142, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_CALIBRATEDONE"]], "nrf_saadc_event_t.nrf_saadc_event_ch0_limith (c enumerator)": [[142, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_CH0_LIMITH"]], "nrf_saadc_event_t.nrf_saadc_event_ch0_limitl (c enumerator)": [[142, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_CH0_LIMITL"]], "nrf_saadc_event_t.nrf_saadc_event_ch1_limith (c enumerator)": [[142, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_CH1_LIMITH"]], "nrf_saadc_event_t.nrf_saadc_event_ch1_limitl (c enumerator)": [[142, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_CH1_LIMITL"]], "nrf_saadc_event_t.nrf_saadc_event_ch2_limith (c enumerator)": [[142, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_CH2_LIMITH"]], "nrf_saadc_event_t.nrf_saadc_event_ch2_limitl (c enumerator)": [[142, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_CH2_LIMITL"]], "nrf_saadc_event_t.nrf_saadc_event_ch3_limith (c enumerator)": [[142, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_CH3_LIMITH"]], "nrf_saadc_event_t.nrf_saadc_event_ch3_limitl (c enumerator)": [[142, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_CH3_LIMITL"]], "nrf_saadc_event_t.nrf_saadc_event_ch4_limith (c enumerator)": [[142, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_CH4_LIMITH"]], "nrf_saadc_event_t.nrf_saadc_event_ch4_limitl (c enumerator)": [[142, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_CH4_LIMITL"]], "nrf_saadc_event_t.nrf_saadc_event_ch5_limith (c enumerator)": [[142, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_CH5_LIMITH"]], "nrf_saadc_event_t.nrf_saadc_event_ch5_limitl (c enumerator)": [[142, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_CH5_LIMITL"]], "nrf_saadc_event_t.nrf_saadc_event_ch6_limith (c enumerator)": [[142, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_CH6_LIMITH"]], "nrf_saadc_event_t.nrf_saadc_event_ch6_limitl (c enumerator)": [[142, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_CH6_LIMITL"]], "nrf_saadc_event_t.nrf_saadc_event_ch7_limith (c enumerator)": [[142, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_CH7_LIMITH"]], "nrf_saadc_event_t.nrf_saadc_event_ch7_limitl (c enumerator)": [[142, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_CH7_LIMITL"]], "nrf_saadc_event_t.nrf_saadc_event_done (c enumerator)": [[142, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_DONE"]], "nrf_saadc_event_t.nrf_saadc_event_end (c enumerator)": [[142, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_END"]], "nrf_saadc_event_t.nrf_saadc_event_resultdone (c enumerator)": [[142, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_RESULTDONE"]], "nrf_saadc_event_t.nrf_saadc_event_started (c enumerator)": [[142, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_STARTED"]], "nrf_saadc_event_t.nrf_saadc_event_stopped (c enumerator)": [[142, "c.nrf_saadc_event_t.NRF_SAADC_EVENT_STOPPED"]], "nrf_saadc_gain_t (c enum)": [[142, "c.nrf_saadc_gain_t"]], "nrf_saadc_gain_t.nrf_saadc_gain1 (c enumerator)": [[142, "c.nrf_saadc_gain_t.NRF_SAADC_GAIN1"]], "nrf_saadc_gain_t.nrf_saadc_gain1_2 (c enumerator)": [[142, "c.nrf_saadc_gain_t.NRF_SAADC_GAIN1_2"]], "nrf_saadc_gain_t.nrf_saadc_gain1_3 (c enumerator)": [[142, "c.nrf_saadc_gain_t.NRF_SAADC_GAIN1_3"]], "nrf_saadc_gain_t.nrf_saadc_gain1_4 (c enumerator)": [[142, "c.nrf_saadc_gain_t.NRF_SAADC_GAIN1_4"]], "nrf_saadc_gain_t.nrf_saadc_gain1_5 (c enumerator)": [[142, "c.nrf_saadc_gain_t.NRF_SAADC_GAIN1_5"]], "nrf_saadc_gain_t.nrf_saadc_gain1_6 (c enumerator)": [[142, "c.nrf_saadc_gain_t.NRF_SAADC_GAIN1_6"]], "nrf_saadc_gain_t.nrf_saadc_gain2 (c enumerator)": [[142, "c.nrf_saadc_gain_t.NRF_SAADC_GAIN2"]], "nrf_saadc_gain_t.nrf_saadc_gain2_3 (c enumerator)": [[142, "c.nrf_saadc_gain_t.NRF_SAADC_GAIN2_3"]], "nrf_saadc_gain_t.nrf_saadc_gain2_5 (c enumerator)": [[142, "c.nrf_saadc_gain_t.NRF_SAADC_GAIN2_5"]], "nrf_saadc_gain_t.nrf_saadc_gain2_7 (c enumerator)": [[142, "c.nrf_saadc_gain_t.NRF_SAADC_GAIN2_7"]], "nrf_saadc_gain_t.nrf_saadc_gain4 (c enumerator)": [[142, "c.nrf_saadc_gain_t.NRF_SAADC_GAIN4"]], "nrf_saadc_input_t (c type)": [[142, "c.nrf_saadc_input_t"]], "nrf_saadc_int_disable (c function)": [[142, "c.nrf_saadc_int_disable"]], "nrf_saadc_int_enable (c function)": [[142, "c.nrf_saadc_int_enable"]], "nrf_saadc_int_enable_check (c function)": [[142, "c.nrf_saadc_int_enable_check"]], "nrf_saadc_int_mask_t (c enum)": [[142, "c.nrf_saadc_int_mask_t"]], "nrf_saadc_int_mask_t.nrf_saadc_int_all (c enumerator)": [[142, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_ALL"]], "nrf_saadc_int_mask_t.nrf_saadc_int_calibratedone (c enumerator)": [[142, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_CALIBRATEDONE"]], "nrf_saadc_int_mask_t.nrf_saadc_int_ch0limith (c enumerator)": [[142, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_CH0LIMITH"]], "nrf_saadc_int_mask_t.nrf_saadc_int_ch0limitl (c enumerator)": [[142, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_CH0LIMITL"]], "nrf_saadc_int_mask_t.nrf_saadc_int_ch1limith (c enumerator)": [[142, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_CH1LIMITH"]], "nrf_saadc_int_mask_t.nrf_saadc_int_ch1limitl (c enumerator)": [[142, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_CH1LIMITL"]], "nrf_saadc_int_mask_t.nrf_saadc_int_ch2limith (c enumerator)": [[142, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_CH2LIMITH"]], "nrf_saadc_int_mask_t.nrf_saadc_int_ch2limitl (c enumerator)": [[142, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_CH2LIMITL"]], "nrf_saadc_int_mask_t.nrf_saadc_int_ch3limith (c enumerator)": [[142, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_CH3LIMITH"]], "nrf_saadc_int_mask_t.nrf_saadc_int_ch3limitl (c enumerator)": [[142, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_CH3LIMITL"]], "nrf_saadc_int_mask_t.nrf_saadc_int_ch4limith (c enumerator)": [[142, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_CH4LIMITH"]], "nrf_saadc_int_mask_t.nrf_saadc_int_ch4limitl (c enumerator)": [[142, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_CH4LIMITL"]], "nrf_saadc_int_mask_t.nrf_saadc_int_ch5limith (c enumerator)": [[142, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_CH5LIMITH"]], "nrf_saadc_int_mask_t.nrf_saadc_int_ch5limitl (c enumerator)": [[142, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_CH5LIMITL"]], "nrf_saadc_int_mask_t.nrf_saadc_int_ch6limith (c enumerator)": [[142, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_CH6LIMITH"]], "nrf_saadc_int_mask_t.nrf_saadc_int_ch6limitl (c enumerator)": [[142, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_CH6LIMITL"]], "nrf_saadc_int_mask_t.nrf_saadc_int_ch7limith (c enumerator)": [[142, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_CH7LIMITH"]], "nrf_saadc_int_mask_t.nrf_saadc_int_ch7limitl (c enumerator)": [[142, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_CH7LIMITL"]], "nrf_saadc_int_mask_t.nrf_saadc_int_done (c enumerator)": [[142, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_DONE"]], "nrf_saadc_int_mask_t.nrf_saadc_int_end (c enumerator)": [[142, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_END"]], "nrf_saadc_int_mask_t.nrf_saadc_int_resultdone (c enumerator)": [[142, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_RESULTDONE"]], "nrf_saadc_int_mask_t.nrf_saadc_int_started (c enumerator)": [[142, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_STARTED"]], "nrf_saadc_int_mask_t.nrf_saadc_int_stopped (c enumerator)": [[142, "c.nrf_saadc_int_mask_t.NRF_SAADC_INT_STOPPED"]], "nrf_saadc_int_set (c function)": [[142, "c.nrf_saadc_int_set"]], "nrf_saadc_limit_event_get (c function)": [[142, "c.nrf_saadc_limit_event_get"]], "nrf_saadc_limit_int_get (c function)": [[142, "c.nrf_saadc_limit_int_get"]], "nrf_saadc_limit_t (c enum)": [[142, "c.nrf_saadc_limit_t"]], "nrf_saadc_limit_t.nrf_saadc_limit_high (c enumerator)": [[142, "c.nrf_saadc_limit_t.NRF_SAADC_LIMIT_HIGH"]], "nrf_saadc_limit_t.nrf_saadc_limit_low (c enumerator)": [[142, "c.nrf_saadc_limit_t.NRF_SAADC_LIMIT_LOW"]], "nrf_saadc_linearity_calibration_coeff_get (c function)": [[142, "c.nrf_saadc_linearity_calibration_coeff_get"]], "nrf_saadc_linearity_calibration_coeff_set (c function)": [[142, "c.nrf_saadc_linearity_calibration_coeff_set"]], "nrf_saadc_mode_t (c enum)": [[142, "c.nrf_saadc_mode_t"]], "nrf_saadc_mode_t.nrf_saadc_mode_differential (c enumerator)": [[142, "c.nrf_saadc_mode_t.NRF_SAADC_MODE_DIFFERENTIAL"]], "nrf_saadc_mode_t.nrf_saadc_mode_single_ended (c enumerator)": [[142, "c.nrf_saadc_mode_t.NRF_SAADC_MODE_SINGLE_ENDED"]], "nrf_saadc_oversample_get (c function)": [[142, "c.nrf_saadc_oversample_get"]], "nrf_saadc_oversample_sample_count_get (c function)": [[142, "c.nrf_saadc_oversample_sample_count_get"]], "nrf_saadc_oversample_set (c function)": [[142, "c.nrf_saadc_oversample_set"]], "nrf_saadc_oversample_t (c enum)": [[142, "c.nrf_saadc_oversample_t"]], "nrf_saadc_oversample_t.nrf_saadc_oversample_128x (c enumerator)": [[142, "c.nrf_saadc_oversample_t.NRF_SAADC_OVERSAMPLE_128X"]], "nrf_saadc_oversample_t.nrf_saadc_oversample_16x (c enumerator)": [[142, "c.nrf_saadc_oversample_t.NRF_SAADC_OVERSAMPLE_16X"]], "nrf_saadc_oversample_t.nrf_saadc_oversample_256x (c enumerator)": [[142, "c.nrf_saadc_oversample_t.NRF_SAADC_OVERSAMPLE_256X"]], "nrf_saadc_oversample_t.nrf_saadc_oversample_2x (c enumerator)": [[142, "c.nrf_saadc_oversample_t.NRF_SAADC_OVERSAMPLE_2X"]], "nrf_saadc_oversample_t.nrf_saadc_oversample_32x (c enumerator)": [[142, "c.nrf_saadc_oversample_t.NRF_SAADC_OVERSAMPLE_32X"]], "nrf_saadc_oversample_t.nrf_saadc_oversample_4x (c enumerator)": [[142, "c.nrf_saadc_oversample_t.NRF_SAADC_OVERSAMPLE_4X"]], "nrf_saadc_oversample_t.nrf_saadc_oversample_64x (c enumerator)": [[142, "c.nrf_saadc_oversample_t.NRF_SAADC_OVERSAMPLE_64X"]], "nrf_saadc_oversample_t.nrf_saadc_oversample_8x (c enumerator)": [[142, "c.nrf_saadc_oversample_t.NRF_SAADC_OVERSAMPLE_8X"]], "nrf_saadc_oversample_t.nrf_saadc_oversample_disabled (c enumerator)": [[142, "c.nrf_saadc_oversample_t.NRF_SAADC_OVERSAMPLE_DISABLED"]], "nrf_saadc_publish_clear (c function)": [[142, "c.nrf_saadc_publish_clear"]], "nrf_saadc_publish_set (c function)": [[142, "c.nrf_saadc_publish_set"]], "nrf_saadc_reference_t (c enum)": [[142, "c.nrf_saadc_reference_t"]], "nrf_saadc_reference_t.nrf_saadc_reference_internal (c enumerator)": [[142, "c.nrf_saadc_reference_t.NRF_SAADC_REFERENCE_INTERNAL"]], "nrf_saadc_reference_t.nrf_saadc_reference_vdd4 (c enumerator)": [[142, "c.nrf_saadc_reference_t.NRF_SAADC_REFERENCE_VDD4"]], "nrf_saadc_resistor_t (c enum)": [[142, "c.nrf_saadc_resistor_t"]], "nrf_saadc_resistor_t.nrf_saadc_resistor_disabled (c enumerator)": [[142, "c.nrf_saadc_resistor_t.NRF_SAADC_RESISTOR_DISABLED"]], "nrf_saadc_resistor_t.nrf_saadc_resistor_pulldown (c enumerator)": [[142, "c.nrf_saadc_resistor_t.NRF_SAADC_RESISTOR_PULLDOWN"]], "nrf_saadc_resistor_t.nrf_saadc_resistor_pullup (c enumerator)": [[142, "c.nrf_saadc_resistor_t.NRF_SAADC_RESISTOR_PULLUP"]], "nrf_saadc_resistor_t.nrf_saadc_resistor_vdd1_2 (c enumerator)": [[142, "c.nrf_saadc_resistor_t.NRF_SAADC_RESISTOR_VDD1_2"]], "nrf_saadc_resolution_get (c function)": [[142, "c.nrf_saadc_resolution_get"]], "nrf_saadc_resolution_set (c function)": [[142, "c.nrf_saadc_resolution_set"]], "nrf_saadc_resolution_t (c enum)": [[142, "c.nrf_saadc_resolution_t"]], "nrf_saadc_resolution_t.nrf_saadc_resolution_10bit (c enumerator)": [[142, "c.nrf_saadc_resolution_t.NRF_SAADC_RESOLUTION_10BIT"]], "nrf_saadc_resolution_t.nrf_saadc_resolution_12bit (c enumerator)": [[142, "c.nrf_saadc_resolution_t.NRF_SAADC_RESOLUTION_12BIT"]], "nrf_saadc_resolution_t.nrf_saadc_resolution_14bit (c enumerator)": [[142, "c.nrf_saadc_resolution_t.NRF_SAADC_RESOLUTION_14BIT"]], "nrf_saadc_resolution_t.nrf_saadc_resolution_8bit (c enumerator)": [[142, "c.nrf_saadc_resolution_t.NRF_SAADC_RESOLUTION_8BIT"]], "nrf_saadc_subscribe_clear (c function)": [[142, "c.nrf_saadc_subscribe_clear"]], "nrf_saadc_subscribe_set (c function)": [[142, "c.nrf_saadc_subscribe_set"]], "nrf_saadc_task_address_get (c function)": [[142, "c.nrf_saadc_task_address_get"]], "nrf_saadc_task_t (c enum)": [[142, "c.nrf_saadc_task_t"]], "nrf_saadc_task_t.nrf_saadc_task_calibrateoffset (c enumerator)": [[142, "c.nrf_saadc_task_t.NRF_SAADC_TASK_CALIBRATEOFFSET"]], "nrf_saadc_task_t.nrf_saadc_task_sample (c enumerator)": [[142, "c.nrf_saadc_task_t.NRF_SAADC_TASK_SAMPLE"]], "nrf_saadc_task_t.nrf_saadc_task_start (c enumerator)": [[142, "c.nrf_saadc_task_t.NRF_SAADC_TASK_START"]], "nrf_saadc_task_t.nrf_saadc_task_stop (c enumerator)": [[142, "c.nrf_saadc_task_t.NRF_SAADC_TASK_STOP"]], "nrf_saadc_task_trigger (c function)": [[142, "c.nrf_saadc_task_trigger"]], "nrf_saadc_value_max_get (c function)": [[142, "c.nrf_saadc_value_max_get"]], "nrf_saadc_value_min_get (c function)": [[142, "c.nrf_saadc_value_min_get"]], "nrf_saadc_value_t (c type)": [[142, "c.nrf_saadc_value_t"]], "nrfy_saadc_abort (c function)": [[143, "c.nrfy_saadc_abort"]], "nrfy_saadc_amount_get (c function)": [[143, "c.nrfy_saadc_amount_get"]], "nrfy_saadc_buffer_init (c function)": [[143, "c.nrfy_saadc_buffer_init"]], "nrfy_saadc_buffer_latch (c function)": [[143, "c.nrfy_saadc_buffer_latch"]], "nrfy_saadc_buffer_pointer_get (c function)": [[143, "c.nrfy_saadc_buffer_pointer_get"]], "nrfy_saadc_buffer_pointer_set (c function)": [[143, "c.nrfy_saadc_buffer_pointer_set"]], "nrfy_saadc_buffer_set (c function)": [[143, "c.nrfy_saadc_buffer_set"]], "nrfy_saadc_buffer_t (c struct)": [[143, "c.nrfy_saadc_buffer_t"]], "nrfy_saadc_buffer_t.length (c var)": [[143, "c.nrfy_saadc_buffer_t.length"]], "nrfy_saadc_buffer_t.p_buffer (c var)": [[143, "c.nrfy_saadc_buffer_t.p_buffer"]], "nrfy_saadc_burst_set (c function)": [[143, "c.nrfy_saadc_burst_set"]], "nrfy_saadc_busy_check (c function)": [[143, "c.nrfy_saadc_busy_check"]], "nrfy_saadc_calibrate (c function)": [[143, "c.nrfy_saadc_calibrate"]], "nrfy_saadc_channel_configure (c function)": [[143, "c.nrfy_saadc_channel_configure"]], "nrfy_saadc_channel_init (c function)": [[143, "c.nrfy_saadc_channel_init"]], "nrfy_saadc_channel_input_set (c function)": [[143, "c.nrfy_saadc_channel_input_set"]], "nrfy_saadc_channel_input_t (c struct)": [[143, "c.nrfy_saadc_channel_input_t"]], "nrfy_saadc_channel_input_t.input_n (c var)": [[143, "c.nrfy_saadc_channel_input_t.input_n"]], "nrfy_saadc_channel_input_t.input_p (c var)": [[143, "c.nrfy_saadc_channel_input_t.input_p"]], "nrfy_saadc_channel_limits_set (c function)": [[143, "c.nrfy_saadc_channel_limits_set"]], "nrfy_saadc_channel_pos_input_set (c function)": [[143, "c.nrfy_saadc_channel_pos_input_set"]], "nrfy_saadc_config_t (c struct)": [[143, "c.nrfy_saadc_config_t"]], "nrfy_saadc_config_t.oversampling (c var)": [[143, "c.nrfy_saadc_config_t.oversampling"]], "nrfy_saadc_config_t.resolution (c var)": [[143, "c.nrfy_saadc_config_t.resolution"]], "nrfy_saadc_continuous_mode_disable (c function)": [[143, "c.nrfy_saadc_continuous_mode_disable"]], "nrfy_saadc_continuous_mode_enable (c function)": [[143, "c.nrfy_saadc_continuous_mode_enable"]], "nrfy_saadc_continuous_mode_enable_check (c function)": [[143, "c.nrfy_saadc_continuous_mode_enable_check"]], "nrfy_saadc_disable (c function)": [[143, "c.nrfy_saadc_disable"]], "nrfy_saadc_enable (c function)": [[143, "c.nrfy_saadc_enable"]], "nrfy_saadc_enable_check (c function)": [[143, "c.nrfy_saadc_enable_check"]], "nrfy_saadc_event_address_get (c function)": [[143, "c.nrfy_saadc_event_address_get"]], "nrfy_saadc_event_check (c function)": [[143, "c.nrfy_saadc_event_check"]], "nrfy_saadc_event_clear (c function)": [[143, "c.nrfy_saadc_event_clear"]], "nrfy_saadc_events_process (c function)": [[143, "c.nrfy_saadc_events_process"]], "nrfy_saadc_int_disable (c function)": [[143, "c.nrfy_saadc_int_disable"]], "nrfy_saadc_int_enable (c function)": [[143, "c.nrfy_saadc_int_enable"]], "nrfy_saadc_int_enable_check (c function)": [[143, "c.nrfy_saadc_int_enable_check"]], "nrfy_saadc_int_init (c function)": [[143, "c.nrfy_saadc_int_init"]], "nrfy_saadc_int_set (c function)": [[143, "c.nrfy_saadc_int_set"]], "nrfy_saadc_int_uninit (c function)": [[143, "c.nrfy_saadc_int_uninit"]], "nrfy_saadc_limit_event_get (c function)": [[143, "c.nrfy_saadc_limit_event_get"]], "nrfy_saadc_limit_int_get (c function)": [[143, "c.nrfy_saadc_limit_int_get"]], "nrfy_saadc_oversample_get (c function)": [[143, "c.nrfy_saadc_oversample_get"]], "nrfy_saadc_oversample_sample_count_get (c function)": [[143, "c.nrfy_saadc_oversample_sample_count_get"]], "nrfy_saadc_oversample_set (c function)": [[143, "c.nrfy_saadc_oversample_set"]], "nrfy_saadc_periph_configure (c function)": [[143, "c.nrfy_saadc_periph_configure"]], "nrfy_saadc_publish_clear (c function)": [[143, "c.nrfy_saadc_publish_clear"]], "nrfy_saadc_publish_set (c function)": [[143, "c.nrfy_saadc_publish_set"]], "nrfy_saadc_resolution_get (c function)": [[143, "c.nrfy_saadc_resolution_get"]], "nrfy_saadc_resolution_set (c function)": [[143, "c.nrfy_saadc_resolution_set"]], "nrfy_saadc_sample_start (c function)": [[143, "c.nrfy_saadc_sample_start"]], "nrfy_saadc_stop (c function)": [[143, "c.nrfy_saadc_stop"]], "nrfy_saadc_subscribe_clear (c function)": [[143, "c.nrfy_saadc_subscribe_clear"]], "nrfy_saadc_subscribe_set (c function)": [[143, "c.nrfy_saadc_subscribe_set"]], "nrfy_saadc_task_address_get (c function)": [[143, "c.nrfy_saadc_task_address_get"]], "nrfy_saadc_task_trigger (c function)": [[143, "c.nrfy_saadc_task_trigger"]], "nrfy_saadc_value_max_get (c function)": [[143, "c.nrfy_saadc_value_max_get"]], "nrfy_saadc_value_min_get (c function)": [[143, "c.nrfy_saadc_value_min_get"]], "nrfx_spi_default_config (c macro)": [[145, "c.NRFX_SPI_DEFAULT_CONFIG"]], "nrfx_spi_instance (c macro)": [[145, "c.NRFX_SPI_INSTANCE"]], "nrfx_spi_inst_handler_get (c macro)": [[145, "c.NRFX_SPI_INST_HANDLER_GET"]], "nrfx_spi_pin_not_used (c macro)": [[145, "c.NRFX_SPI_PIN_NOT_USED"]], "nrfx_spi_single_xfer (c macro)": [[145, "c.NRFX_SPI_SINGLE_XFER"]], "nrfx_spi_xfer_rx (c macro)": [[145, "c.NRFX_SPI_XFER_RX"]], "nrfx_spi_xfer_trx (c macro)": [[145, "c.NRFX_SPI_XFER_TRX"]], "nrfx_spi_xfer_tx (c macro)": [[145, "c.NRFX_SPI_XFER_TX"]], "nrfx_spi_abort (c function)": [[145, "c.nrfx_spi_abort"]], "nrfx_spi_config_t (c struct)": [[145, "c.nrfx_spi_config_t"]], "nrfx_spi_config_t.bit_order (c var)": [[145, "c.nrfx_spi_config_t.bit_order"]], "nrfx_spi_config_t.frequency (c var)": [[145, "c.nrfx_spi_config_t.frequency"]], "nrfx_spi_config_t.irq_priority (c var)": [[145, "c.nrfx_spi_config_t.irq_priority"]], "nrfx_spi_config_t.miso_pin (c var)": [[145, "c.nrfx_spi_config_t.miso_pin"]], "nrfx_spi_config_t.miso_pull (c var)": [[145, "c.nrfx_spi_config_t.miso_pull"]], "nrfx_spi_config_t.mode (c var)": [[145, "c.nrfx_spi_config_t.mode"]], "nrfx_spi_config_t.mosi_pin (c var)": [[145, "c.nrfx_spi_config_t.mosi_pin"]], "nrfx_spi_config_t.orc (c var)": [[145, "c.nrfx_spi_config_t.orc"]], "nrfx_spi_config_t.sck_pin (c var)": [[145, "c.nrfx_spi_config_t.sck_pin"]], "nrfx_spi_config_t.skip_gpio_cfg (c var)": [[145, "c.nrfx_spi_config_t.skip_gpio_cfg"]], "nrfx_spi_config_t.skip_psel_cfg (c var)": [[145, "c.nrfx_spi_config_t.skip_psel_cfg"]], "nrfx_spi_config_t.ss_pin (c var)": [[145, "c.nrfx_spi_config_t.ss_pin"]], "nrfx_spi_evt_handler_t (c type)": [[145, "c.nrfx_spi_evt_handler_t"]], "nrfx_spi_evt_t (c struct)": [[145, "c.nrfx_spi_evt_t"]], "nrfx_spi_evt_t.type (c var)": [[145, "c.nrfx_spi_evt_t.type"]], "nrfx_spi_evt_t.xfer_desc (c var)": [[145, "c.nrfx_spi_evt_t.xfer_desc"]], "nrfx_spi_evt_type_t (c enum)": [[145, "c.nrfx_spi_evt_type_t"]], "nrfx_spi_evt_type_t.nrfx_spi_event_done (c enumerator)": [[145, "c.nrfx_spi_evt_type_t.NRFX_SPI_EVENT_DONE"]], "nrfx_spi_init (c function)": [[145, "c.nrfx_spi_init"]], "nrfx_spi_init_check (c function)": [[145, "c.nrfx_spi_init_check"]], "nrfx_spi_reconfigure (c function)": [[145, "c.nrfx_spi_reconfigure"]], "nrfx_spi_t (c struct)": [[145, "c.nrfx_spi_t"]], "nrfx_spi_t.drv_inst_idx (c var)": [[145, "c.nrfx_spi_t.drv_inst_idx"]], "nrfx_spi_t.p_reg (c var)": [[145, "c.nrfx_spi_t.p_reg"]], "nrfx_spi_uninit (c function)": [[145, "c.nrfx_spi_uninit"]], "nrfx_spi_xfer (c function)": [[145, "c.nrfx_spi_xfer"]], "nrfx_spi_xfer_desc_t (c struct)": [[145, "c.nrfx_spi_xfer_desc_t"]], "nrfx_spi_xfer_desc_t.p_rx_buffer (c var)": [[145, "c.nrfx_spi_xfer_desc_t.p_rx_buffer"]], "nrfx_spi_xfer_desc_t.p_tx_buffer (c var)": [[145, "c.nrfx_spi_xfer_desc_t.p_tx_buffer"]], "nrfx_spi_xfer_desc_t.rx_length (c var)": [[145, "c.nrfx_spi_xfer_desc_t.rx_length"]], "nrfx_spi_xfer_desc_t.tx_length (c var)": [[145, "c.nrfx_spi_xfer_desc_t.tx_length"]], "nrf_spi_inst_get (c macro)": [[146, "c.NRF_SPI_INST_GET"]], "nrf_spi_pin_not_connected (c macro)": [[146, "c.NRF_SPI_PIN_NOT_CONNECTED"]], "nrf_spi_bit_order_t (c enum)": [[146, "c.nrf_spi_bit_order_t"]], "nrf_spi_bit_order_t.nrf_spi_bit_order_lsb_first (c enumerator)": [[146, "c.nrf_spi_bit_order_t.NRF_SPI_BIT_ORDER_LSB_FIRST"]], "nrf_spi_bit_order_t.nrf_spi_bit_order_msb_first (c enumerator)": [[146, "c.nrf_spi_bit_order_t.NRF_SPI_BIT_ORDER_MSB_FIRST"]], "nrf_spi_configure (c function)": [[146, "c.nrf_spi_configure"]], "nrf_spi_disable (c function)": [[146, "c.nrf_spi_disable"]], "nrf_spi_enable (c function)": [[146, "c.nrf_spi_enable"]], "nrf_spi_event_address_get (c function)": [[146, "c.nrf_spi_event_address_get"]], "nrf_spi_event_check (c function)": [[146, "c.nrf_spi_event_check"]], "nrf_spi_event_clear (c function)": [[146, "c.nrf_spi_event_clear"]], "nrf_spi_event_t (c enum)": [[146, "c.nrf_spi_event_t"]], "nrf_spi_event_t.nrf_spi_event_ready (c enumerator)": [[146, "c.nrf_spi_event_t.NRF_SPI_EVENT_READY"]], "nrf_spi_frequency_set (c function)": [[146, "c.nrf_spi_frequency_set"]], "nrf_spi_frequency_t (c enum)": [[146, "c.nrf_spi_frequency_t"]], "nrf_spi_frequency_t.nrf_spi_freq_125k (c enumerator)": [[146, "c.nrf_spi_frequency_t.NRF_SPI_FREQ_125K"]], "nrf_spi_frequency_t.nrf_spi_freq_1m (c enumerator)": [[146, "c.nrf_spi_frequency_t.NRF_SPI_FREQ_1M"]], "nrf_spi_frequency_t.nrf_spi_freq_250k (c enumerator)": [[146, "c.nrf_spi_frequency_t.NRF_SPI_FREQ_250K"]], "nrf_spi_frequency_t.nrf_spi_freq_2m (c enumerator)": [[146, "c.nrf_spi_frequency_t.NRF_SPI_FREQ_2M"]], "nrf_spi_frequency_t.nrf_spi_freq_4m (c enumerator)": [[146, "c.nrf_spi_frequency_t.NRF_SPI_FREQ_4M"]], "nrf_spi_frequency_t.nrf_spi_freq_500k (c enumerator)": [[146, "c.nrf_spi_frequency_t.NRF_SPI_FREQ_500K"]], "nrf_spi_frequency_t.nrf_spi_freq_8m (c enumerator)": [[146, "c.nrf_spi_frequency_t.NRF_SPI_FREQ_8M"]], "nrf_spi_int_disable (c function)": [[146, "c.nrf_spi_int_disable"]], "nrf_spi_int_enable (c function)": [[146, "c.nrf_spi_int_enable"]], "nrf_spi_int_enable_check (c function)": [[146, "c.nrf_spi_int_enable_check"]], "nrf_spi_int_mask_t (c enum)": [[146, "c.nrf_spi_int_mask_t"]], "nrf_spi_int_mask_t.nrf_spi_all_ints_mask (c enumerator)": [[146, "c.nrf_spi_int_mask_t.NRF_SPI_ALL_INTS_MASK"]], "nrf_spi_int_mask_t.nrf_spi_int_ready_mask (c enumerator)": [[146, "c.nrf_spi_int_mask_t.NRF_SPI_INT_READY_MASK"]], "nrf_spi_miso_pin_get (c function)": [[146, "c.nrf_spi_miso_pin_get"]], "nrf_spi_mode_t (c enum)": [[146, "c.nrf_spi_mode_t"]], "nrf_spi_mode_t.nrf_spi_mode_0 (c enumerator)": [[146, "c.nrf_spi_mode_t.NRF_SPI_MODE_0"]], "nrf_spi_mode_t.nrf_spi_mode_1 (c enumerator)": [[146, "c.nrf_spi_mode_t.NRF_SPI_MODE_1"]], "nrf_spi_mode_t.nrf_spi_mode_2 (c enumerator)": [[146, "c.nrf_spi_mode_t.NRF_SPI_MODE_2"]], "nrf_spi_mode_t.nrf_spi_mode_3 (c enumerator)": [[146, "c.nrf_spi_mode_t.NRF_SPI_MODE_3"]], "nrf_spi_mosi_pin_get (c function)": [[146, "c.nrf_spi_mosi_pin_get"]], "nrf_spi_pins_set (c function)": [[146, "c.nrf_spi_pins_set"]], "nrf_spi_rxd_get (c function)": [[146, "c.nrf_spi_rxd_get"]], "nrf_spi_sck_pin_get (c function)": [[146, "c.nrf_spi_sck_pin_get"]], "nrf_spi_txd_set (c function)": [[146, "c.nrf_spi_txd_set"]], "nrfx_spim_base_frequency_get (c macro)": [[148, "c.NRFX_SPIM_BASE_FREQUENCY_GET"]], "nrfx_spim_default_config (c macro)": [[148, "c.NRFX_SPIM_DEFAULT_CONFIG"]], "nrfx_spim_flag_hold_xfer (c macro)": [[148, "c.NRFX_SPIM_FLAG_HOLD_XFER"]], "nrfx_spim_flag_no_xfer_evt_handler (c macro)": [[148, "c.NRFX_SPIM_FLAG_NO_XFER_EVT_HANDLER"]], "nrfx_spim_flag_repeated_xfer (c macro)": [[148, "c.NRFX_SPIM_FLAG_REPEATED_XFER"]], "nrfx_spim_flag_rx_postinc (c macro)": [[148, "c.NRFX_SPIM_FLAG_RX_POSTINC"]], "nrfx_spim_flag_tx_postinc (c macro)": [[148, "c.NRFX_SPIM_FLAG_TX_POSTINC"]], "nrfx_spim_frequency_static_check (c macro)": [[148, "c.NRFX_SPIM_FREQUENCY_STATIC_CHECK"]], "nrfx_spim_instance (c macro)": [[148, "c.NRFX_SPIM_INSTANCE"]], "nrfx_spim_inst_handler_get (c macro)": [[148, "c.NRFX_SPIM_INST_HANDLER_GET"]], "nrfx_spim_single_xfer (c macro)": [[148, "c.NRFX_SPIM_SINGLE_XFER"]], "nrfx_spim_xfer_rx (c macro)": [[148, "c.NRFX_SPIM_XFER_RX"]], "nrfx_spim_xfer_trx (c macro)": [[148, "c.NRFX_SPIM_XFER_TRX"]], "nrfx_spim_xfer_tx (c macro)": [[148, "c.NRFX_SPIM_XFER_TX"]], "nrfx_spim_abort (c function)": [[148, "c.nrfx_spim_abort"]], "nrfx_spim_config_t (c struct)": [[148, "c.nrfx_spim_config_t"]], "nrfx_spim_config_t.bit_order (c var)": [[148, "c.nrfx_spim_config_t.bit_order"]], "nrfx_spim_config_t.dcx_pin (c var)": [[148, "c.nrfx_spim_config_t.dcx_pin"]], "nrfx_spim_config_t.frequency (c var)": [[148, "c.nrfx_spim_config_t.frequency"]], "nrfx_spim_config_t.irq_priority (c var)": [[148, "c.nrfx_spim_config_t.irq_priority"]], "nrfx_spim_config_t.miso_pin (c var)": [[148, "c.nrfx_spim_config_t.miso_pin"]], "nrfx_spim_config_t.miso_pull (c var)": [[148, "c.nrfx_spim_config_t.miso_pull"]], "nrfx_spim_config_t.mode (c var)": [[148, "c.nrfx_spim_config_t.mode"]], "nrfx_spim_config_t.mosi_pin (c var)": [[148, "c.nrfx_spim_config_t.mosi_pin"]], "nrfx_spim_config_t.orc (c var)": [[148, "c.nrfx_spim_config_t.orc"]], "nrfx_spim_config_t.rx_delay (c var)": [[148, "c.nrfx_spim_config_t.rx_delay"]], "nrfx_spim_config_t.sck_pin (c var)": [[148, "c.nrfx_spim_config_t.sck_pin"]], "nrfx_spim_config_t.skip_gpio_cfg (c var)": [[148, "c.nrfx_spim_config_t.skip_gpio_cfg"]], "nrfx_spim_config_t.skip_psel_cfg (c var)": [[148, "c.nrfx_spim_config_t.skip_psel_cfg"]], "nrfx_spim_config_t.ss_active_high (c var)": [[148, "c.nrfx_spim_config_t.ss_active_high"]], "nrfx_spim_config_t.ss_duration (c var)": [[148, "c.nrfx_spim_config_t.ss_duration"]], "nrfx_spim_config_t.ss_pin (c var)": [[148, "c.nrfx_spim_config_t.ss_pin"]], "nrfx_spim_config_t.use_hw_ss (c var)": [[148, "c.nrfx_spim_config_t.use_hw_ss"]], "nrfx_spim_end_event_address_get (c function)": [[148, "c.nrfx_spim_end_event_address_get"]], "nrfx_spim_evt_handler_t (c type)": [[148, "c.nrfx_spim_evt_handler_t"]], "nrfx_spim_evt_t (c struct)": [[148, "c.nrfx_spim_evt_t"]], "nrfx_spim_evt_t.type (c var)": [[148, "c.nrfx_spim_evt_t.type"]], "nrfx_spim_evt_t.xfer_desc (c var)": [[148, "c.nrfx_spim_evt_t.xfer_desc"]], "nrfx_spim_evt_type_t (c enum)": [[148, "c.nrfx_spim_evt_type_t"]], "nrfx_spim_evt_type_t.nrfx_spim_event_done (c enumerator)": [[148, "c.nrfx_spim_evt_type_t.NRFX_SPIM_EVENT_DONE"]], "nrfx_spim_init (c function)": [[148, "c.nrfx_spim_init"]], "nrfx_spim_init_check (c function)": [[148, "c.nrfx_spim_init_check"]], "nrfx_spim_reconfigure (c function)": [[148, "c.nrfx_spim_reconfigure"]], "nrfx_spim_start_task_address_get (c function)": [[148, "c.nrfx_spim_start_task_address_get"]], "nrfx_spim_t (c struct)": [[148, "c.nrfx_spim_t"]], "nrfx_spim_t.drv_inst_idx (c var)": [[148, "c.nrfx_spim_t.drv_inst_idx"]], "nrfx_spim_t.p_reg (c var)": [[148, "c.nrfx_spim_t.p_reg"]], "nrfx_spim_uninit (c function)": [[148, "c.nrfx_spim_uninit"]], "nrfx_spim_xfer (c function)": [[148, "c.nrfx_spim_xfer"]], "nrfx_spim_xfer_dcx (c function)": [[148, "c.nrfx_spim_xfer_dcx"]], "nrfx_spim_xfer_desc_t (c type)": [[148, "c.nrfx_spim_xfer_desc_t"]], "nrf_spim_base_frequency_128mhz (c macro)": [[149, "c.NRF_SPIM_BASE_FREQUENCY_128MHZ"]], "nrf_spim_base_frequency_16mhz (c macro)": [[149, "c.NRF_SPIM_BASE_FREQUENCY_16MHZ"]], "nrf_spim_base_frequency_192mhz (c macro)": [[149, "c.NRF_SPIM_BASE_FREQUENCY_192MHZ"]], "nrf_spim_base_frequency_320mhz (c macro)": [[149, "c.NRF_SPIM_BASE_FREQUENCY_320MHZ"]], "nrf_spim_base_frequency_32mhz (c macro)": [[149, "c.NRF_SPIM_BASE_FREQUENCY_32MHZ"]], "nrf_spim_base_frequency_64mhz (c macro)": [[149, "c.NRF_SPIM_BASE_FREQUENCY_64MHZ"]], "nrf_spim_base_frequency_get (c macro)": [[149, "c.NRF_SPIM_BASE_FREQUENCY_GET"]], "nrf_spim_csndur_default (c macro)": [[149, "c.NRF_SPIM_CSNDUR_DEFAULT"]], "nrf_spim_csnpol_default (c macro)": [[149, "c.NRF_SPIM_CSNPOL_DEFAULT"]], "nrf_spim_csn_default (c macro)": [[149, "c.NRF_SPIM_CSN_DEFAULT"]], "nrf_spim_dcx_cnt_all_cmd (c macro)": [[149, "c.NRF_SPIM_DCX_CNT_ALL_CMD"]], "nrf_spim_dcx_default (c macro)": [[149, "c.NRF_SPIM_DCX_DEFAULT"]], "nrf_spim_dma_rx_pattern_max_count (c macro)": [[149, "c.NRF_SPIM_DMA_RX_PATTERN_MAX_COUNT"]], "nrf_spim_frequency_static_check (c macro)": [[149, "c.NRF_SPIM_FREQUENCY_STATIC_CHECK"]], "nrf_spim_has_16_mhz_freq (c macro)": [[149, "c.NRF_SPIM_HAS_16_MHZ_FREQ"]], "nrf_spim_has_32_mhz_freq (c macro)": [[149, "c.NRF_SPIM_HAS_32_MHZ_FREQ"]], "nrf_spim_has_array_list (c macro)": [[149, "c.NRF_SPIM_HAS_ARRAY_LIST"]], "nrf_spim_has_dcx (c macro)": [[149, "c.NRF_SPIM_HAS_DCX"]], "nrf_spim_has_dma_reg (c macro)": [[149, "c.NRF_SPIM_HAS_DMA_REG"]], "nrf_spim_has_dma_tasks_events (c macro)": [[149, "c.NRF_SPIM_HAS_DMA_TASKS_EVENTS"]], "nrf_spim_has_extended (c macro)": [[149, "c.NRF_SPIM_HAS_EXTENDED"]], "nrf_spim_has_frequency (c macro)": [[149, "c.NRF_SPIM_HAS_FREQUENCY"]], "nrf_spim_has_hw_csn (c macro)": [[149, "c.NRF_SPIM_HAS_HW_CSN"]], "nrf_spim_has_prescaler (c macro)": [[149, "c.NRF_SPIM_HAS_PRESCALER"]], "nrf_spim_has_rxdelay (c macro)": [[149, "c.NRF_SPIM_HAS_RXDELAY"]], "nrf_spim_has_stallstat (c macro)": [[149, "c.NRF_SPIM_HAS_STALLSTAT"]], "nrf_spim_inst_get (c macro)": [[149, "c.NRF_SPIM_INST_GET"]], "nrf_spim_is_128mhz_spim (c macro)": [[149, "c.NRF_SPIM_IS_128MHZ_SPIM"]], "nrf_spim_is_192mhz_spim (c macro)": [[149, "c.NRF_SPIM_IS_192MHZ_SPIM"]], "nrf_spim_is_320mhz_spim (c macro)": [[149, "c.NRF_SPIM_IS_320MHZ_SPIM"]], "nrf_spim_is_32mhz_spim (c macro)": [[149, "c.NRF_SPIM_IS_32MHZ_SPIM"]], "nrf_spim_is_64mhz_spim (c macro)": [[149, "c.NRF_SPIM_IS_64MHZ_SPIM"]], "nrf_spim_min_frequency (c macro)": [[149, "c.NRF_SPIM_MIN_FREQUENCY"]], "nrf_spim_pin_not_connected (c macro)": [[149, "c.NRF_SPIM_PIN_NOT_CONNECTED"]], "nrf_spim_prescaler_calculate (c macro)": [[149, "c.NRF_SPIM_PRESCALER_CALCULATE"]], "nrf_spim_prescaler_max_get (c macro)": [[149, "c.NRF_SPIM_PRESCALER_MAX_GET"]], "nrf_spim_prescaler_min_get (c macro)": [[149, "c.NRF_SPIM_PRESCALER_MIN_GET"]], "nrf_spim_rxdelay_default (c macro)": [[149, "c.NRF_SPIM_RXDELAY_DEFAULT"]], "nrf_spim_bit_order_t (c enum)": [[149, "c.nrf_spim_bit_order_t"]], "nrf_spim_bit_order_t.nrf_spim_bit_order_lsb_first (c enumerator)": [[149, "c.nrf_spim_bit_order_t.NRF_SPIM_BIT_ORDER_LSB_FIRST"]], "nrf_spim_bit_order_t.nrf_spim_bit_order_msb_first (c enumerator)": [[149, "c.nrf_spim_bit_order_t.NRF_SPIM_BIT_ORDER_MSB_FIRST"]], "nrf_spim_configure (c function)": [[149, "c.nrf_spim_configure"]], "nrf_spim_csn_configure (c function)": [[149, "c.nrf_spim_csn_configure"]], "nrf_spim_csn_pin_get (c function)": [[149, "c.nrf_spim_csn_pin_get"]], "nrf_spim_csn_pol_t (c enum)": [[149, "c.nrf_spim_csn_pol_t"]], "nrf_spim_csn_pol_t.nrf_spim_csn_pol_high (c enumerator)": [[149, "c.nrf_spim_csn_pol_t.NRF_SPIM_CSN_POL_HIGH"]], "nrf_spim_csn_pol_t.nrf_spim_csn_pol_low (c enumerator)": [[149, "c.nrf_spim_csn_pol_t.NRF_SPIM_CSN_POL_LOW"]], "nrf_spim_dcx_cnt_set (c function)": [[149, "c.nrf_spim_dcx_cnt_set"]], "nrf_spim_dcx_pin_get (c function)": [[149, "c.nrf_spim_dcx_pin_get"]], "nrf_spim_dcx_pin_set (c function)": [[149, "c.nrf_spim_dcx_pin_set"]], "nrf_spim_disable (c function)": [[149, "c.nrf_spim_disable"]], "nrf_spim_enable (c function)": [[149, "c.nrf_spim_enable"]], "nrf_spim_enable_check (c function)": [[149, "c.nrf_spim_enable_check"]], "nrf_spim_event_address_get (c function)": [[149, "c.nrf_spim_event_address_get"]], "nrf_spim_event_check (c function)": [[149, "c.nrf_spim_event_check"]], "nrf_spim_event_clear (c function)": [[149, "c.nrf_spim_event_clear"]], "nrf_spim_event_t (c enum)": [[149, "c.nrf_spim_event_t"]], "nrf_spim_event_t.nrf_spim_event_end (c enumerator)": [[149, "c.nrf_spim_event_t.NRF_SPIM_EVENT_END"]], "nrf_spim_event_t.nrf_spim_event_endrx (c enumerator)": [[149, "c.nrf_spim_event_t.NRF_SPIM_EVENT_ENDRX"]], "nrf_spim_event_t.nrf_spim_event_endtx (c enumerator)": [[149, "c.nrf_spim_event_t.NRF_SPIM_EVENT_ENDTX"]], "nrf_spim_event_t.nrf_spim_event_rxbuserror (c enumerator)": [[149, "c.nrf_spim_event_t.NRF_SPIM_EVENT_RXBUSERROR"]], "nrf_spim_event_t.nrf_spim_event_rxmatch0 (c enumerator)": [[149, "c.nrf_spim_event_t.NRF_SPIM_EVENT_RXMATCH0"]], "nrf_spim_event_t.nrf_spim_event_rxmatch1 (c enumerator)": [[149, "c.nrf_spim_event_t.NRF_SPIM_EVENT_RXMATCH1"]], "nrf_spim_event_t.nrf_spim_event_rxmatch2 (c enumerator)": [[149, "c.nrf_spim_event_t.NRF_SPIM_EVENT_RXMATCH2"]], "nrf_spim_event_t.nrf_spim_event_rxmatch3 (c enumerator)": [[149, "c.nrf_spim_event_t.NRF_SPIM_EVENT_RXMATCH3"]], "nrf_spim_event_t.nrf_spim_event_rxstarted (c enumerator)": [[149, "c.nrf_spim_event_t.NRF_SPIM_EVENT_RXSTARTED"]], "nrf_spim_event_t.nrf_spim_event_started (c enumerator)": [[149, "c.nrf_spim_event_t.NRF_SPIM_EVENT_STARTED"]], "nrf_spim_event_t.nrf_spim_event_stopped (c enumerator)": [[149, "c.nrf_spim_event_t.NRF_SPIM_EVENT_STOPPED"]], "nrf_spim_event_t.nrf_spim_event_txbuserror (c enumerator)": [[149, "c.nrf_spim_event_t.NRF_SPIM_EVENT_TXBUSERROR"]], "nrf_spim_event_t.nrf_spim_event_txstarted (c enumerator)": [[149, "c.nrf_spim_event_t.NRF_SPIM_EVENT_TXSTARTED"]], "nrf_spim_frequency_get (c function)": [[149, "c.nrf_spim_frequency_get"]], "nrf_spim_frequency_set (c function)": [[149, "c.nrf_spim_frequency_set"]], "nrf_spim_frequency_t (c enum)": [[149, "c.nrf_spim_frequency_t"]], "nrf_spim_frequency_t.nrf_spim_freq_125k (c enumerator)": [[149, "c.nrf_spim_frequency_t.NRF_SPIM_FREQ_125K"]], "nrf_spim_frequency_t.nrf_spim_freq_16m (c enumerator)": [[149, "c.nrf_spim_frequency_t.NRF_SPIM_FREQ_16M"]], "nrf_spim_frequency_t.nrf_spim_freq_1m (c enumerator)": [[149, "c.nrf_spim_frequency_t.NRF_SPIM_FREQ_1M"]], "nrf_spim_frequency_t.nrf_spim_freq_250k (c enumerator)": [[149, "c.nrf_spim_frequency_t.NRF_SPIM_FREQ_250K"]], "nrf_spim_frequency_t.nrf_spim_freq_2m (c enumerator)": [[149, "c.nrf_spim_frequency_t.NRF_SPIM_FREQ_2M"]], "nrf_spim_frequency_t.nrf_spim_freq_32m (c enumerator)": [[149, "c.nrf_spim_frequency_t.NRF_SPIM_FREQ_32M"]], "nrf_spim_frequency_t.nrf_spim_freq_4m (c enumerator)": [[149, "c.nrf_spim_frequency_t.NRF_SPIM_FREQ_4M"]], "nrf_spim_frequency_t.nrf_spim_freq_500k (c enumerator)": [[149, "c.nrf_spim_frequency_t.NRF_SPIM_FREQ_500K"]], "nrf_spim_frequency_t.nrf_spim_freq_8m (c enumerator)": [[149, "c.nrf_spim_frequency_t.NRF_SPIM_FREQ_8M"]], "nrf_spim_iftiming_set (c function)": [[149, "c.nrf_spim_iftiming_set"]], "nrf_spim_int_disable (c function)": [[149, "c.nrf_spim_int_disable"]], "nrf_spim_int_enable (c function)": [[149, "c.nrf_spim_int_enable"]], "nrf_spim_int_enable_check (c function)": [[149, "c.nrf_spim_int_enable_check"]], "nrf_spim_int_mask_t (c enum)": [[149, "c.nrf_spim_int_mask_t"]], "nrf_spim_int_mask_t.nrf_spim_all_ints_mask (c enumerator)": [[149, "c.nrf_spim_int_mask_t.NRF_SPIM_ALL_INTS_MASK"]], "nrf_spim_int_mask_t.nrf_spim_int_endrx_mask (c enumerator)": [[149, "c.nrf_spim_int_mask_t.NRF_SPIM_INT_ENDRX_MASK"]], "nrf_spim_int_mask_t.nrf_spim_int_endtx_mask (c enumerator)": [[149, "c.nrf_spim_int_mask_t.NRF_SPIM_INT_ENDTX_MASK"]], "nrf_spim_int_mask_t.nrf_spim_int_end_mask (c enumerator)": [[149, "c.nrf_spim_int_mask_t.NRF_SPIM_INT_END_MASK"]], "nrf_spim_int_mask_t.nrf_spim_int_rxbuserror_mask (c enumerator)": [[149, "c.nrf_spim_int_mask_t.NRF_SPIM_INT_RXBUSERROR_MASK"]], "nrf_spim_int_mask_t.nrf_spim_int_rxmatch0_mask (c enumerator)": [[149, "c.nrf_spim_int_mask_t.NRF_SPIM_INT_RXMATCH0_MASK"]], "nrf_spim_int_mask_t.nrf_spim_int_rxmatch1_mask (c enumerator)": [[149, "c.nrf_spim_int_mask_t.NRF_SPIM_INT_RXMATCH1_MASK"]], "nrf_spim_int_mask_t.nrf_spim_int_rxmatch2_mask (c enumerator)": [[149, "c.nrf_spim_int_mask_t.NRF_SPIM_INT_RXMATCH2_MASK"]], "nrf_spim_int_mask_t.nrf_spim_int_rxmatch3_mask (c enumerator)": [[149, "c.nrf_spim_int_mask_t.NRF_SPIM_INT_RXMATCH3_MASK"]], "nrf_spim_int_mask_t.nrf_spim_int_rxready_mask (c enumerator)": [[149, "c.nrf_spim_int_mask_t.NRF_SPIM_INT_RXREADY_MASK"]], "nrf_spim_int_mask_t.nrf_spim_int_started_mask (c enumerator)": [[149, "c.nrf_spim_int_mask_t.NRF_SPIM_INT_STARTED_MASK"]], "nrf_spim_int_mask_t.nrf_spim_int_stopped_mask (c enumerator)": [[149, "c.nrf_spim_int_mask_t.NRF_SPIM_INT_STOPPED_MASK"]], "nrf_spim_int_mask_t.nrf_spim_int_txbuserror_mask (c enumerator)": [[149, "c.nrf_spim_int_mask_t.NRF_SPIM_INT_TXBUSERROR_MASK"]], "nrf_spim_int_mask_t.nrf_spim_int_txready_mask (c enumerator)": [[149, "c.nrf_spim_int_mask_t.NRF_SPIM_INT_TXREADY_MASK"]], "nrf_spim_miso_pin_get (c function)": [[149, "c.nrf_spim_miso_pin_get"]], "nrf_spim_mode_t (c enum)": [[149, "c.nrf_spim_mode_t"]], "nrf_spim_mode_t.nrf_spim_mode_0 (c enumerator)": [[149, "c.nrf_spim_mode_t.NRF_SPIM_MODE_0"]], "nrf_spim_mode_t.nrf_spim_mode_1 (c enumerator)": [[149, "c.nrf_spim_mode_t.NRF_SPIM_MODE_1"]], "nrf_spim_mode_t.nrf_spim_mode_2 (c enumerator)": [[149, "c.nrf_spim_mode_t.NRF_SPIM_MODE_2"]], "nrf_spim_mode_t.nrf_spim_mode_3 (c enumerator)": [[149, "c.nrf_spim_mode_t.NRF_SPIM_MODE_3"]], "nrf_spim_mosi_pin_get (c function)": [[149, "c.nrf_spim_mosi_pin_get"]], "nrf_spim_orc_set (c function)": [[149, "c.nrf_spim_orc_set"]], "nrf_spim_pins_set (c function)": [[149, "c.nrf_spim_pins_set"]], "nrf_spim_prescaler_get (c function)": [[149, "c.nrf_spim_prescaler_get"]], "nrf_spim_prescaler_set (c function)": [[149, "c.nrf_spim_prescaler_set"]], "nrf_spim_publish_clear (c function)": [[149, "c.nrf_spim_publish_clear"]], "nrf_spim_publish_set (c function)": [[149, "c.nrf_spim_publish_set"]], "nrf_spim_rx_amount_get (c function)": [[149, "c.nrf_spim_rx_amount_get"]], "nrf_spim_rx_buffer_set (c function)": [[149, "c.nrf_spim_rx_buffer_set"]], "nrf_spim_rx_list_disable (c function)": [[149, "c.nrf_spim_rx_list_disable"]], "nrf_spim_rx_list_enable (c function)": [[149, "c.nrf_spim_rx_list_enable"]], "nrf_spim_rx_maxcnt_get (c function)": [[149, "c.nrf_spim_rx_maxcnt_get"]], "nrf_spim_rx_pattern_match_candidate_get (c function)": [[149, "c.nrf_spim_rx_pattern_match_candidate_get"]], "nrf_spim_rx_pattern_match_candidate_set (c function)": [[149, "c.nrf_spim_rx_pattern_match_candidate_set"]], "nrf_spim_rx_pattern_match_enable_check (c function)": [[149, "c.nrf_spim_rx_pattern_match_enable_check"]], "nrf_spim_rx_pattern_match_enable_set (c function)": [[149, "c.nrf_spim_rx_pattern_match_enable_set"]], "nrf_spim_rx_pattern_match_one_shot_check (c function)": [[149, "c.nrf_spim_rx_pattern_match_one_shot_check"]], "nrf_spim_rx_pattern_match_one_shot_disable (c function)": [[149, "c.nrf_spim_rx_pattern_match_one_shot_disable"]], "nrf_spim_rx_pattern_match_one_shot_enable (c function)": [[149, "c.nrf_spim_rx_pattern_match_one_shot_enable"]], "nrf_spim_rx_terminate_on_bus_error_check (c function)": [[149, "c.nrf_spim_rx_terminate_on_bus_error_check"]], "nrf_spim_rx_terminate_on_bus_error_disable (c function)": [[149, "c.nrf_spim_rx_terminate_on_bus_error_disable"]], "nrf_spim_rx_terminate_on_bus_error_enable (c function)": [[149, "c.nrf_spim_rx_terminate_on_bus_error_enable"]], "nrf_spim_sck_pin_get (c function)": [[149, "c.nrf_spim_sck_pin_get"]], "nrf_spim_short_mask_t (c enum)": [[149, "c.nrf_spim_short_mask_t"]], "nrf_spim_short_mask_t.nrf_spim_all_shorts_mask (c enumerator)": [[149, "c.nrf_spim_short_mask_t.NRF_SPIM_ALL_SHORTS_MASK"]], "nrf_spim_short_mask_t.nrf_spim_short_end_start_mask (c enumerator)": [[149, "c.nrf_spim_short_mask_t.NRF_SPIM_SHORT_END_START_MASK"]], "nrf_spim_short_mask_t.nrf_spim_short_rxmatch0_disablerxmatch0_mask (c enumerator)": [[149, "c.nrf_spim_short_mask_t.NRF_SPIM_SHORT_RXMATCH0_DISABLERXMATCH0_MASK"]], "nrf_spim_short_mask_t.nrf_spim_short_rxmatch0_enablerxmatch1_mask (c enumerator)": [[149, "c.nrf_spim_short_mask_t.NRF_SPIM_SHORT_RXMATCH0_ENABLERXMATCH1_MASK"]], "nrf_spim_short_mask_t.nrf_spim_short_rxmatch1_disablerxmatch1_mask (c enumerator)": [[149, "c.nrf_spim_short_mask_t.NRF_SPIM_SHORT_RXMATCH1_DISABLERXMATCH1_MASK"]], "nrf_spim_short_mask_t.nrf_spim_short_rxmatch1_enablerxmatch2_mask (c enumerator)": [[149, "c.nrf_spim_short_mask_t.NRF_SPIM_SHORT_RXMATCH1_ENABLERXMATCH2_MASK"]], "nrf_spim_short_mask_t.nrf_spim_short_rxmatch2_disablerxmatch2_mask (c enumerator)": [[149, "c.nrf_spim_short_mask_t.NRF_SPIM_SHORT_RXMATCH2_DISABLERXMATCH2_MASK"]], "nrf_spim_short_mask_t.nrf_spim_short_rxmatch2_enablerxmatch3_mask (c enumerator)": [[149, "c.nrf_spim_short_mask_t.NRF_SPIM_SHORT_RXMATCH2_ENABLERXMATCH3_MASK"]], "nrf_spim_short_mask_t.nrf_spim_short_rxmatch3_disablerxmatch3_mask (c enumerator)": [[149, "c.nrf_spim_short_mask_t.NRF_SPIM_SHORT_RXMATCH3_DISABLERXMATCH3_MASK"]], "nrf_spim_short_mask_t.nrf_spim_short_rxmatch3_enablerxmatch0_mask (c enumerator)": [[149, "c.nrf_spim_short_mask_t.NRF_SPIM_SHORT_RXMATCH3_ENABLERXMATCH0_MASK"]], "nrf_spim_shorts_disable (c function)": [[149, "c.nrf_spim_shorts_disable"]], "nrf_spim_shorts_enable (c function)": [[149, "c.nrf_spim_shorts_enable"]], "nrf_spim_shorts_get (c function)": [[149, "c.nrf_spim_shorts_get"]], "nrf_spim_stallstat_rx_clear (c function)": [[149, "c.nrf_spim_stallstat_rx_clear"]], "nrf_spim_stallstat_rx_get (c function)": [[149, "c.nrf_spim_stallstat_rx_get"]], "nrf_spim_stallstat_tx_clear (c function)": [[149, "c.nrf_spim_stallstat_tx_clear"]], "nrf_spim_stallstat_tx_get (c function)": [[149, "c.nrf_spim_stallstat_tx_get"]], "nrf_spim_subscribe_clear (c function)": [[149, "c.nrf_spim_subscribe_clear"]], "nrf_spim_subscribe_set (c function)": [[149, "c.nrf_spim_subscribe_set"]], "nrf_spim_task_address_get (c function)": [[149, "c.nrf_spim_task_address_get"]], "nrf_spim_task_t (c enum)": [[149, "c.nrf_spim_task_t"]], "nrf_spim_task_t.nrf_spim_task_disablerxmatch0 (c enumerator)": [[149, "c.nrf_spim_task_t.NRF_SPIM_TASK_DISABLERXMATCH0"]], "nrf_spim_task_t.nrf_spim_task_disablerxmatch1 (c enumerator)": [[149, "c.nrf_spim_task_t.NRF_SPIM_TASK_DISABLERXMATCH1"]], "nrf_spim_task_t.nrf_spim_task_disablerxmatch2 (c enumerator)": [[149, "c.nrf_spim_task_t.NRF_SPIM_TASK_DISABLERXMATCH2"]], "nrf_spim_task_t.nrf_spim_task_disablerxmatch3 (c enumerator)": [[149, "c.nrf_spim_task_t.NRF_SPIM_TASK_DISABLERXMATCH3"]], "nrf_spim_task_t.nrf_spim_task_enablerxmatch0 (c enumerator)": [[149, "c.nrf_spim_task_t.NRF_SPIM_TASK_ENABLERXMATCH0"]], "nrf_spim_task_t.nrf_spim_task_enablerxmatch1 (c enumerator)": [[149, "c.nrf_spim_task_t.NRF_SPIM_TASK_ENABLERXMATCH1"]], "nrf_spim_task_t.nrf_spim_task_enablerxmatch2 (c enumerator)": [[149, "c.nrf_spim_task_t.NRF_SPIM_TASK_ENABLERXMATCH2"]], "nrf_spim_task_t.nrf_spim_task_enablerxmatch3 (c enumerator)": [[149, "c.nrf_spim_task_t.NRF_SPIM_TASK_ENABLERXMATCH3"]], "nrf_spim_task_t.nrf_spim_task_resume (c enumerator)": [[149, "c.nrf_spim_task_t.NRF_SPIM_TASK_RESUME"]], "nrf_spim_task_t.nrf_spim_task_start (c enumerator)": [[149, "c.nrf_spim_task_t.NRF_SPIM_TASK_START"]], "nrf_spim_task_t.nrf_spim_task_stop (c enumerator)": [[149, "c.nrf_spim_task_t.NRF_SPIM_TASK_STOP"]], "nrf_spim_task_t.nrf_spim_task_suspend (c enumerator)": [[149, "c.nrf_spim_task_t.NRF_SPIM_TASK_SUSPEND"]], "nrf_spim_task_trigger (c function)": [[149, "c.nrf_spim_task_trigger"]], "nrf_spim_tx_amount_get (c function)": [[149, "c.nrf_spim_tx_amount_get"]], "nrf_spim_tx_buffer_set (c function)": [[149, "c.nrf_spim_tx_buffer_set"]], "nrf_spim_tx_list_disable (c function)": [[149, "c.nrf_spim_tx_list_disable"]], "nrf_spim_tx_list_enable (c function)": [[149, "c.nrf_spim_tx_list_enable"]], "nrf_spim_tx_maxcnt_get (c function)": [[149, "c.nrf_spim_tx_maxcnt_get"]], "nrf_spim_tx_terminate_on_bus_error_check (c function)": [[149, "c.nrf_spim_tx_terminate_on_bus_error_check"]], "nrf_spim_tx_terminate_on_bus_error_disable (c function)": [[149, "c.nrf_spim_tx_terminate_on_bus_error_disable"]], "nrf_spim_tx_terminate_on_bus_error_enable (c function)": [[149, "c.nrf_spim_tx_terminate_on_bus_error_enable"]], "nrfy_spim_has_array_list (c macro)": [[150, "c.NRFY_SPIM_HAS_ARRAY_LIST"]], "nrfy_spim_has_dcx (c macro)": [[150, "c.NRFY_SPIM_HAS_DCX"]], "nrfy_spim_has_extended (c macro)": [[150, "c.NRFY_SPIM_HAS_EXTENDED"]], "nrfy_spim_has_frequency (c macro)": [[150, "c.NRFY_SPIM_HAS_FREQUENCY"]], "nrfy_spim_has_hw_csn (c macro)": [[150, "c.NRFY_SPIM_HAS_HW_CSN"]], "nrfy_spim_has_prescaler (c macro)": [[150, "c.NRFY_SPIM_HAS_PRESCALER"]], "nrfy_spim_has_rxdelay (c macro)": [[150, "c.NRFY_SPIM_HAS_RXDELAY"]], "nrfy_spim_has_stallstat (c macro)": [[150, "c.NRFY_SPIM_HAS_STALLSTAT"]], "nrfy_spim_abort (c function)": [[150, "c.nrfy_spim_abort"]], "nrfy_spim_buffers_set (c function)": [[150, "c.nrfy_spim_buffers_set"]], "nrfy_spim_config_t (c struct)": [[150, "c.nrfy_spim_config_t"]], "nrfy_spim_config_t.bit_order (c var)": [[150, "c.nrfy_spim_config_t.bit_order"]], "nrfy_spim_config_t.ext_config (c var)": [[150, "c.nrfy_spim_config_t.ext_config"]], "nrfy_spim_config_t.frequency (c var)": [[150, "c.nrfy_spim_config_t.frequency"]], "nrfy_spim_config_t.mode (c var)": [[150, "c.nrfy_spim_config_t.mode"]], "nrfy_spim_config_t.orc (c var)": [[150, "c.nrfy_spim_config_t.orc"]], "nrfy_spim_config_t.pins (c var)": [[150, "c.nrfy_spim_config_t.pins"]], "nrfy_spim_config_t.skip_psel_cfg (c var)": [[150, "c.nrfy_spim_config_t.skip_psel_cfg"]], "nrfy_spim_configure (c function)": [[150, "c.nrfy_spim_configure"]], "nrfy_spim_csn_configure (c function)": [[150, "c.nrfy_spim_csn_configure"]], "nrfy_spim_csn_pin_get (c function)": [[150, "c.nrfy_spim_csn_pin_get"]], "nrfy_spim_dcx_cnt_set (c function)": [[150, "c.nrfy_spim_dcx_cnt_set"]], "nrfy_spim_dcx_pin_get (c function)": [[150, "c.nrfy_spim_dcx_pin_get"]], "nrfy_spim_dcx_pin_set (c function)": [[150, "c.nrfy_spim_dcx_pin_set"]], "nrfy_spim_disable (c function)": [[150, "c.nrfy_spim_disable"]], "nrfy_spim_enable (c function)": [[150, "c.nrfy_spim_enable"]], "nrfy_spim_event_address_get (c function)": [[150, "c.nrfy_spim_event_address_get"]], "nrfy_spim_event_check (c function)": [[150, "c.nrfy_spim_event_check"]], "nrfy_spim_event_clear (c function)": [[150, "c.nrfy_spim_event_clear"]], "nrfy_spim_events_process (c function)": [[150, "c.nrfy_spim_events_process"]], "nrfy_spim_ext_config_t (c struct)": [[150, "c.nrfy_spim_ext_config_t"]], "nrfy_spim_ext_config_t.csn_duration (c var)": [[150, "c.nrfy_spim_ext_config_t.csn_duration"]], "nrfy_spim_ext_config_t.csn_pol (c var)": [[150, "c.nrfy_spim_ext_config_t.csn_pol"]], "nrfy_spim_ext_config_t.pins (c var)": [[150, "c.nrfy_spim_ext_config_t.pins"]], "nrfy_spim_ext_config_t.rx_delay (c var)": [[150, "c.nrfy_spim_ext_config_t.rx_delay"]], "nrfy_spim_ext_pins_get (c function)": [[150, "c.nrfy_spim_ext_pins_get"]], "nrfy_spim_ext_pins_t (c struct)": [[150, "c.nrfy_spim_ext_pins_t"]], "nrfy_spim_ext_pins_t.csn_pin (c var)": [[150, "c.nrfy_spim_ext_pins_t.csn_pin"]], "nrfy_spim_ext_pins_t.dcx_pin (c var)": [[150, "c.nrfy_spim_ext_pins_t.dcx_pin"]], "nrfy_spim_frequency_set (c function)": [[150, "c.nrfy_spim_frequency_set"]], "nrfy_spim_iftiming_set (c function)": [[150, "c.nrfy_spim_iftiming_set"]], "nrfy_spim_int_disable (c function)": [[150, "c.nrfy_spim_int_disable"]], "nrfy_spim_int_enable (c function)": [[150, "c.nrfy_spim_int_enable"]], "nrfy_spim_int_enable_check (c function)": [[150, "c.nrfy_spim_int_enable_check"]], "nrfy_spim_int_init (c function)": [[150, "c.nrfy_spim_int_init"]], "nrfy_spim_int_uninit (c function)": [[150, "c.nrfy_spim_int_uninit"]], "nrfy_spim_miso_pin_get (c function)": [[150, "c.nrfy_spim_miso_pin_get"]], "nrfy_spim_mosi_pin_get (c function)": [[150, "c.nrfy_spim_mosi_pin_get"]], "nrfy_spim_orc_set (c function)": [[150, "c.nrfy_spim_orc_set"]], "nrfy_spim_periph_configure (c function)": [[150, "c.nrfy_spim_periph_configure"]], "nrfy_spim_pins_get (c function)": [[150, "c.nrfy_spim_pins_get"]], "nrfy_spim_pins_set (c function)": [[150, "c.nrfy_spim_pins_set"]], "nrfy_spim_pins_t (c struct)": [[150, "c.nrfy_spim_pins_t"]], "nrfy_spim_pins_t.miso_pin (c var)": [[150, "c.nrfy_spim_pins_t.miso_pin"]], "nrfy_spim_pins_t.mosi_pin (c var)": [[150, "c.nrfy_spim_pins_t.mosi_pin"]], "nrfy_spim_pins_t.sck_pin (c var)": [[150, "c.nrfy_spim_pins_t.sck_pin"]], "nrfy_spim_prescaler_get (c function)": [[150, "c.nrfy_spim_prescaler_get"]], "nrfy_spim_prescaler_set (c function)": [[150, "c.nrfy_spim_prescaler_set"]], "nrfy_spim_publish_clear (c function)": [[150, "c.nrfy_spim_publish_clear"]], "nrfy_spim_publish_set (c function)": [[150, "c.nrfy_spim_publish_set"]], "nrfy_spim_rx_amount_get (c function)": [[150, "c.nrfy_spim_rx_amount_get"]], "nrfy_spim_rx_buffer_set (c function)": [[150, "c.nrfy_spim_rx_buffer_set"]], "nrfy_spim_rx_list_set (c function)": [[150, "c.nrfy_spim_rx_list_set"]], "nrfy_spim_rx_maxcnt_get (c function)": [[150, "c.nrfy_spim_rx_maxcnt_get"]], "nrfy_spim_sck_pin_get (c function)": [[150, "c.nrfy_spim_sck_pin_get"]], "nrfy_spim_shorts_disable (c function)": [[150, "c.nrfy_spim_shorts_disable"]], "nrfy_spim_shorts_enable (c function)": [[150, "c.nrfy_spim_shorts_enable"]], "nrfy_spim_shorts_get (c function)": [[150, "c.nrfy_spim_shorts_get"]], "nrfy_spim_stallstat_rx_clear (c function)": [[150, "c.nrfy_spim_stallstat_rx_clear"]], "nrfy_spim_stallstat_rx_get (c function)": [[150, "c.nrfy_spim_stallstat_rx_get"]], "nrfy_spim_stallstat_tx_clear (c function)": [[150, "c.nrfy_spim_stallstat_tx_clear"]], "nrfy_spim_stallstat_tx_get (c function)": [[150, "c.nrfy_spim_stallstat_tx_get"]], "nrfy_spim_subscribe_clear (c function)": [[150, "c.nrfy_spim_subscribe_clear"]], "nrfy_spim_subscribe_set (c function)": [[150, "c.nrfy_spim_subscribe_set"]], "nrfy_spim_task_address_get (c function)": [[150, "c.nrfy_spim_task_address_get"]], "nrfy_spim_task_trigger (c function)": [[150, "c.nrfy_spim_task_trigger"]], "nrfy_spim_tx_amount_get (c function)": [[150, "c.nrfy_spim_tx_amount_get"]], "nrfy_spim_tx_buffer_set (c function)": [[150, "c.nrfy_spim_tx_buffer_set"]], "nrfy_spim_tx_list_set (c function)": [[150, "c.nrfy_spim_tx_list_set"]], "nrfy_spim_tx_maxcnt_get (c function)": [[150, "c.nrfy_spim_tx_maxcnt_get"]], "nrfy_spim_xfer_desc_t (c struct)": [[150, "c.nrfy_spim_xfer_desc_t"]], "nrfy_spim_xfer_desc_t.p_rx_buffer (c var)": [[150, "c.nrfy_spim_xfer_desc_t.p_rx_buffer"]], "nrfy_spim_xfer_desc_t.p_tx_buffer (c var)": [[150, "c.nrfy_spim_xfer_desc_t.p_tx_buffer"]], "nrfy_spim_xfer_desc_t.rx_length (c var)": [[150, "c.nrfy_spim_xfer_desc_t.rx_length"]], "nrfy_spim_xfer_desc_t.tx_length (c var)": [[150, "c.nrfy_spim_xfer_desc_t.tx_length"]], "nrfy_spim_xfer_start (c function)": [[150, "c.nrfy_spim_xfer_start"]], "nrfx_spis_default_config (c macro)": [[152, "c.NRFX_SPIS_DEFAULT_CONFIG"]], "nrfx_spis_instance (c macro)": [[152, "c.NRFX_SPIS_INSTANCE"]], "nrfx_spis_inst_handler_get (c macro)": [[152, "c.NRFX_SPIS_INST_HANDLER_GET"]], "nrfx_spis_buffers_set (c function)": [[152, "c.nrfx_spis_buffers_set"]], "nrfx_spis_config_t (c struct)": [[152, "c.nrfx_spis_config_t"]], "nrfx_spis_config_t.bit_order (c var)": [[152, "c.nrfx_spis_config_t.bit_order"]], "nrfx_spis_config_t.csn_pin (c var)": [[152, "c.nrfx_spis_config_t.csn_pin"]], "nrfx_spis_config_t.csn_pullup (c var)": [[152, "c.nrfx_spis_config_t.csn_pullup"]], "nrfx_spis_config_t.def (c var)": [[152, "c.nrfx_spis_config_t.def"]], "nrfx_spis_config_t.irq_priority (c var)": [[152, "c.nrfx_spis_config_t.irq_priority"]], "nrfx_spis_config_t.miso_drive (c var)": [[152, "c.nrfx_spis_config_t.miso_drive"]], "nrfx_spis_config_t.miso_pin (c var)": [[152, "c.nrfx_spis_config_t.miso_pin"]], "nrfx_spis_config_t.mode (c var)": [[152, "c.nrfx_spis_config_t.mode"]], "nrfx_spis_config_t.mosi_pin (c var)": [[152, "c.nrfx_spis_config_t.mosi_pin"]], "nrfx_spis_config_t.orc (c var)": [[152, "c.nrfx_spis_config_t.orc"]], "nrfx_spis_config_t.sck_pin (c var)": [[152, "c.nrfx_spis_config_t.sck_pin"]], "nrfx_spis_config_t.skip_gpio_cfg (c var)": [[152, "c.nrfx_spis_config_t.skip_gpio_cfg"]], "nrfx_spis_config_t.skip_psel_cfg (c var)": [[152, "c.nrfx_spis_config_t.skip_psel_cfg"]], "nrfx_spis_event_handler_t (c type)": [[152, "c.nrfx_spis_event_handler_t"]], "nrfx_spis_evt_t (c struct)": [[152, "c.nrfx_spis_evt_t"]], "nrfx_spis_evt_t.evt_type (c var)": [[152, "c.nrfx_spis_evt_t.evt_type"]], "nrfx_spis_evt_t.rx_amount (c var)": [[152, "c.nrfx_spis_evt_t.rx_amount"]], "nrfx_spis_evt_t.tx_amount (c var)": [[152, "c.nrfx_spis_evt_t.tx_amount"]], "nrfx_spis_evt_type_t (c enum)": [[152, "c.nrfx_spis_evt_type_t"]], "nrfx_spis_evt_type_t.nrfx_spis_buffers_set_done (c enumerator)": [[152, "c.nrfx_spis_evt_type_t.NRFX_SPIS_BUFFERS_SET_DONE"]], "nrfx_spis_evt_type_t.nrfx_spis_evt_type_max (c enumerator)": [[152, "c.nrfx_spis_evt_type_t.NRFX_SPIS_EVT_TYPE_MAX"]], "nrfx_spis_evt_type_t.nrfx_spis_xfer_done (c enumerator)": [[152, "c.nrfx_spis_evt_type_t.NRFX_SPIS_XFER_DONE"]], "nrfx_spis_init (c function)": [[152, "c.nrfx_spis_init"]], "nrfx_spis_init_check (c function)": [[152, "c.nrfx_spis_init_check"]], "nrfx_spis_reconfigure (c function)": [[152, "c.nrfx_spis_reconfigure"]], "nrfx_spis_t (c struct)": [[152, "c.nrfx_spis_t"]], "nrfx_spis_t.drv_inst_idx (c var)": [[152, "c.nrfx_spis_t.drv_inst_idx"]], "nrfx_spis_t.p_reg (c var)": [[152, "c.nrfx_spis_t.p_reg"]], "nrfx_spis_uninit (c function)": [[152, "c.nrfx_spis_uninit"]], "nrf_spis_dma_rx_pattern_max_count (c macro)": [[153, "c.NRF_SPIS_DMA_RX_PATTERN_MAX_COUNT"]], "nrf_spis_has_dma_reg (c macro)": [[153, "c.NRF_SPIS_HAS_DMA_REG"]], "nrf_spis_has_dma_tasks_events (c macro)": [[153, "c.NRF_SPIS_HAS_DMA_TASKS_EVENTS"]], "nrf_spis_inst_get (c macro)": [[153, "c.NRF_SPIS_INST_GET"]], "nrf_spis_pin_not_connected (c macro)": [[153, "c.NRF_SPIS_PIN_NOT_CONNECTED"]], "nrf_spis_bit_order_t (c enum)": [[153, "c.nrf_spis_bit_order_t"]], "nrf_spis_bit_order_t.nrf_spis_bit_order_lsb_first (c enumerator)": [[153, "c.nrf_spis_bit_order_t.NRF_SPIS_BIT_ORDER_LSB_FIRST"]], "nrf_spis_bit_order_t.nrf_spis_bit_order_msb_first (c enumerator)": [[153, "c.nrf_spis_bit_order_t.NRF_SPIS_BIT_ORDER_MSB_FIRST"]], "nrf_spis_configure (c function)": [[153, "c.nrf_spis_configure"]], "nrf_spis_csn_pin_get (c function)": [[153, "c.nrf_spis_csn_pin_get"]], "nrf_spis_def_set (c function)": [[153, "c.nrf_spis_def_set"]], "nrf_spis_disable (c function)": [[153, "c.nrf_spis_disable"]], "nrf_spis_enable (c function)": [[153, "c.nrf_spis_enable"]], "nrf_spis_enable_check (c function)": [[153, "c.nrf_spis_enable_check"]], "nrf_spis_event_address_get (c function)": [[153, "c.nrf_spis_event_address_get"]], "nrf_spis_event_check (c function)": [[153, "c.nrf_spis_event_check"]], "nrf_spis_event_clear (c function)": [[153, "c.nrf_spis_event_clear"]], "nrf_spis_event_t (c enum)": [[153, "c.nrf_spis_event_t"]], "nrf_spis_event_t.nrf_spis_event_acquired (c enumerator)": [[153, "c.nrf_spis_event_t.NRF_SPIS_EVENT_ACQUIRED"]], "nrf_spis_event_t.nrf_spis_event_end (c enumerator)": [[153, "c.nrf_spis_event_t.NRF_SPIS_EVENT_END"]], "nrf_spis_event_t.nrf_spis_event_endrx (c enumerator)": [[153, "c.nrf_spis_event_t.NRF_SPIS_EVENT_ENDRX"]], "nrf_spis_event_t.nrf_spis_event_endtx (c enumerator)": [[153, "c.nrf_spis_event_t.NRF_SPIS_EVENT_ENDTX"]], "nrf_spis_event_t.nrf_spis_event_rxbuserror (c enumerator)": [[153, "c.nrf_spis_event_t.NRF_SPIS_EVENT_RXBUSERROR"]], "nrf_spis_event_t.nrf_spis_event_rxmatch0 (c enumerator)": [[153, "c.nrf_spis_event_t.NRF_SPIS_EVENT_RXMATCH0"]], "nrf_spis_event_t.nrf_spis_event_rxmatch1 (c enumerator)": [[153, "c.nrf_spis_event_t.NRF_SPIS_EVENT_RXMATCH1"]], "nrf_spis_event_t.nrf_spis_event_rxmatch2 (c enumerator)": [[153, "c.nrf_spis_event_t.NRF_SPIS_EVENT_RXMATCH2"]], "nrf_spis_event_t.nrf_spis_event_rxmatch3 (c enumerator)": [[153, "c.nrf_spis_event_t.NRF_SPIS_EVENT_RXMATCH3"]], "nrf_spis_event_t.nrf_spis_event_rxstarted (c enumerator)": [[153, "c.nrf_spis_event_t.NRF_SPIS_EVENT_RXSTARTED"]], "nrf_spis_event_t.nrf_spis_event_txbuserror (c enumerator)": [[153, "c.nrf_spis_event_t.NRF_SPIS_EVENT_TXBUSERROR"]], "nrf_spis_event_t.nrf_spis_event_txstarted (c enumerator)": [[153, "c.nrf_spis_event_t.NRF_SPIS_EVENT_TXSTARTED"]], "nrf_spis_int_disable (c function)": [[153, "c.nrf_spis_int_disable"]], "nrf_spis_int_enable (c function)": [[153, "c.nrf_spis_int_enable"]], "nrf_spis_int_enable_check (c function)": [[153, "c.nrf_spis_int_enable_check"]], "nrf_spis_int_mask_t (c enum)": [[153, "c.nrf_spis_int_mask_t"]], "nrf_spis_int_mask_t.nrf_spis_all_ints_mask (c enumerator)": [[153, "c.nrf_spis_int_mask_t.NRF_SPIS_ALL_INTS_MASK"]], "nrf_spis_int_mask_t.nrf_spis_int_acquired_mask (c enumerator)": [[153, "c.nrf_spis_int_mask_t.NRF_SPIS_INT_ACQUIRED_MASK"]], "nrf_spis_int_mask_t.nrf_spis_int_endrx_mask (c enumerator)": [[153, "c.nrf_spis_int_mask_t.NRF_SPIS_INT_ENDRX_MASK"]], "nrf_spis_int_mask_t.nrf_spis_int_endtx_mask (c enumerator)": [[153, "c.nrf_spis_int_mask_t.NRF_SPIS_INT_ENDTX_MASK"]], "nrf_spis_int_mask_t.nrf_spis_int_end_mask (c enumerator)": [[153, "c.nrf_spis_int_mask_t.NRF_SPIS_INT_END_MASK"]], "nrf_spis_int_mask_t.nrf_spis_int_rxbuserror_mask (c enumerator)": [[153, "c.nrf_spis_int_mask_t.NRF_SPIS_INT_RXBUSERROR_MASK"]], "nrf_spis_int_mask_t.nrf_spis_int_rxmatch0_mask (c enumerator)": [[153, "c.nrf_spis_int_mask_t.NRF_SPIS_INT_RXMATCH0_MASK"]], "nrf_spis_int_mask_t.nrf_spis_int_rxmatch1_mask (c enumerator)": [[153, "c.nrf_spis_int_mask_t.NRF_SPIS_INT_RXMATCH1_MASK"]], "nrf_spis_int_mask_t.nrf_spis_int_rxmatch2_mask (c enumerator)": [[153, "c.nrf_spis_int_mask_t.NRF_SPIS_INT_RXMATCH2_MASK"]], "nrf_spis_int_mask_t.nrf_spis_int_rxmatch3_mask (c enumerator)": [[153, "c.nrf_spis_int_mask_t.NRF_SPIS_INT_RXMATCH3_MASK"]], "nrf_spis_int_mask_t.nrf_spis_int_rxready_mask (c enumerator)": [[153, "c.nrf_spis_int_mask_t.NRF_SPIS_INT_RXREADY_MASK"]], "nrf_spis_int_mask_t.nrf_spis_int_txbuserror_mask (c enumerator)": [[153, "c.nrf_spis_int_mask_t.NRF_SPIS_INT_TXBUSERROR_MASK"]], "nrf_spis_int_mask_t.nrf_spis_int_txready_mask (c enumerator)": [[153, "c.nrf_spis_int_mask_t.NRF_SPIS_INT_TXREADY_MASK"]], "nrf_spis_miso_pin_get (c function)": [[153, "c.nrf_spis_miso_pin_get"]], "nrf_spis_mode_t (c enum)": [[153, "c.nrf_spis_mode_t"]], "nrf_spis_mode_t.nrf_spis_mode_0 (c enumerator)": [[153, "c.nrf_spis_mode_t.NRF_SPIS_MODE_0"]], "nrf_spis_mode_t.nrf_spis_mode_1 (c enumerator)": [[153, "c.nrf_spis_mode_t.NRF_SPIS_MODE_1"]], "nrf_spis_mode_t.nrf_spis_mode_2 (c enumerator)": [[153, "c.nrf_spis_mode_t.NRF_SPIS_MODE_2"]], "nrf_spis_mode_t.nrf_spis_mode_3 (c enumerator)": [[153, "c.nrf_spis_mode_t.NRF_SPIS_MODE_3"]], "nrf_spis_mosi_pin_get (c function)": [[153, "c.nrf_spis_mosi_pin_get"]], "nrf_spis_orc_set (c function)": [[153, "c.nrf_spis_orc_set"]], "nrf_spis_pins_set (c function)": [[153, "c.nrf_spis_pins_set"]], "nrf_spis_publish_clear (c function)": [[153, "c.nrf_spis_publish_clear"]], "nrf_spis_publish_set (c function)": [[153, "c.nrf_spis_publish_set"]], "nrf_spis_rx_amount_get (c function)": [[153, "c.nrf_spis_rx_amount_get"]], "nrf_spis_rx_buffer_set (c function)": [[153, "c.nrf_spis_rx_buffer_set"]], "nrf_spis_rx_list_disable (c function)": [[153, "c.nrf_spis_rx_list_disable"]], "nrf_spis_rx_list_enable (c function)": [[153, "c.nrf_spis_rx_list_enable"]], "nrf_spis_rx_pattern_match_candidate_get (c function)": [[153, "c.nrf_spis_rx_pattern_match_candidate_get"]], "nrf_spis_rx_pattern_match_candidate_set (c function)": [[153, "c.nrf_spis_rx_pattern_match_candidate_set"]], "nrf_spis_rx_pattern_match_enable_check (c function)": [[153, "c.nrf_spis_rx_pattern_match_enable_check"]], "nrf_spis_rx_pattern_match_enable_set (c function)": [[153, "c.nrf_spis_rx_pattern_match_enable_set"]], "nrf_spis_rx_pattern_match_one_shot_check (c function)": [[153, "c.nrf_spis_rx_pattern_match_one_shot_check"]], "nrf_spis_rx_pattern_match_one_shot_disable (c function)": [[153, "c.nrf_spis_rx_pattern_match_one_shot_disable"]], "nrf_spis_rx_pattern_match_one_shot_enable (c function)": [[153, "c.nrf_spis_rx_pattern_match_one_shot_enable"]], "nrf_spis_rx_terminate_on_bus_error_check (c function)": [[153, "c.nrf_spis_rx_terminate_on_bus_error_check"]], "nrf_spis_rx_terminate_on_bus_error_disable (c function)": [[153, "c.nrf_spis_rx_terminate_on_bus_error_disable"]], "nrf_spis_rx_terminate_on_bus_error_enable (c function)": [[153, "c.nrf_spis_rx_terminate_on_bus_error_enable"]], "nrf_spis_sck_pin_get (c function)": [[153, "c.nrf_spis_sck_pin_get"]], "nrf_spis_semaphore_status_get (c function)": [[153, "c.nrf_spis_semaphore_status_get"]], "nrf_spis_semstat_t (c enum)": [[153, "c.nrf_spis_semstat_t"]], "nrf_spis_semstat_t.nrf_spis_semstat_cpu (c enumerator)": [[153, "c.nrf_spis_semstat_t.NRF_SPIS_SEMSTAT_CPU"]], "nrf_spis_semstat_t.nrf_spis_semstat_cpupending (c enumerator)": [[153, "c.nrf_spis_semstat_t.NRF_SPIS_SEMSTAT_CPUPENDING"]], "nrf_spis_semstat_t.nrf_spis_semstat_free (c enumerator)": [[153, "c.nrf_spis_semstat_t.NRF_SPIS_SEMSTAT_FREE"]], "nrf_spis_semstat_t.nrf_spis_semstat_spis (c enumerator)": [[153, "c.nrf_spis_semstat_t.NRF_SPIS_SEMSTAT_SPIS"]], "nrf_spis_short_mask_t (c enum)": [[153, "c.nrf_spis_short_mask_t"]], "nrf_spis_short_mask_t.nrf_spis_all_shorts_mask (c enumerator)": [[153, "c.nrf_spis_short_mask_t.NRF_SPIS_ALL_SHORTS_MASK"]], "nrf_spis_short_mask_t.nrf_spis_short_end_acquire (c enumerator)": [[153, "c.nrf_spis_short_mask_t.NRF_SPIS_SHORT_END_ACQUIRE"]], "nrf_spis_short_mask_t.nrf_spis_short_rxmatch0_disablerxmatch0_mask (c enumerator)": [[153, "c.nrf_spis_short_mask_t.NRF_SPIS_SHORT_RXMATCH0_DISABLERXMATCH0_MASK"]], "nrf_spis_short_mask_t.nrf_spis_short_rxmatch0_enablerxmatch1_mask (c enumerator)": [[153, "c.nrf_spis_short_mask_t.NRF_SPIS_SHORT_RXMATCH0_ENABLERXMATCH1_MASK"]], "nrf_spis_short_mask_t.nrf_spis_short_rxmatch1_disablerxmatch1_mask (c enumerator)": [[153, "c.nrf_spis_short_mask_t.NRF_SPIS_SHORT_RXMATCH1_DISABLERXMATCH1_MASK"]], "nrf_spis_short_mask_t.nrf_spis_short_rxmatch1_enablerxmatch2_mask (c enumerator)": [[153, "c.nrf_spis_short_mask_t.NRF_SPIS_SHORT_RXMATCH1_ENABLERXMATCH2_MASK"]], "nrf_spis_short_mask_t.nrf_spis_short_rxmatch2_disablerxmatch2_mask (c enumerator)": [[153, "c.nrf_spis_short_mask_t.NRF_SPIS_SHORT_RXMATCH2_DISABLERXMATCH2_MASK"]], "nrf_spis_short_mask_t.nrf_spis_short_rxmatch2_enablerxmatch3_mask (c enumerator)": [[153, "c.nrf_spis_short_mask_t.NRF_SPIS_SHORT_RXMATCH2_ENABLERXMATCH3_MASK"]], "nrf_spis_short_mask_t.nrf_spis_short_rxmatch3_disablerxmatch3_mask (c enumerator)": [[153, "c.nrf_spis_short_mask_t.NRF_SPIS_SHORT_RXMATCH3_DISABLERXMATCH3_MASK"]], "nrf_spis_short_mask_t.nrf_spis_short_rxmatch3_enablerxmatch0_mask (c enumerator)": [[153, "c.nrf_spis_short_mask_t.NRF_SPIS_SHORT_RXMATCH3_ENABLERXMATCH0_MASK"]], "nrf_spis_shorts_disable (c function)": [[153, "c.nrf_spis_shorts_disable"]], "nrf_spis_shorts_enable (c function)": [[153, "c.nrf_spis_shorts_enable"]], "nrf_spis_status_get (c function)": [[153, "c.nrf_spis_status_get"]], "nrf_spis_status_mask_t (c enum)": [[153, "c.nrf_spis_status_mask_t"]], "nrf_spis_status_mask_t.nrf_spis_status_overflow (c enumerator)": [[153, "c.nrf_spis_status_mask_t.NRF_SPIS_STATUS_OVERFLOW"]], "nrf_spis_status_mask_t.nrf_spis_status_overread (c enumerator)": [[153, "c.nrf_spis_status_mask_t.NRF_SPIS_STATUS_OVERREAD"]], "nrf_spis_subscribe_clear (c function)": [[153, "c.nrf_spis_subscribe_clear"]], "nrf_spis_subscribe_set (c function)": [[153, "c.nrf_spis_subscribe_set"]], "nrf_spis_task_address_get (c function)": [[153, "c.nrf_spis_task_address_get"]], "nrf_spis_task_t (c enum)": [[153, "c.nrf_spis_task_t"]], "nrf_spis_task_t.nrf_spis_task_acquire (c enumerator)": [[153, "c.nrf_spis_task_t.NRF_SPIS_TASK_ACQUIRE"]], "nrf_spis_task_t.nrf_spis_task_disablerxmatch0 (c enumerator)": [[153, "c.nrf_spis_task_t.NRF_SPIS_TASK_DISABLERXMATCH0"]], "nrf_spis_task_t.nrf_spis_task_disablerxmatch1 (c enumerator)": [[153, "c.nrf_spis_task_t.NRF_SPIS_TASK_DISABLERXMATCH1"]], "nrf_spis_task_t.nrf_spis_task_disablerxmatch2 (c enumerator)": [[153, "c.nrf_spis_task_t.NRF_SPIS_TASK_DISABLERXMATCH2"]], "nrf_spis_task_t.nrf_spis_task_disablerxmatch3 (c enumerator)": [[153, "c.nrf_spis_task_t.NRF_SPIS_TASK_DISABLERXMATCH3"]], "nrf_spis_task_t.nrf_spis_task_enablerxmatch0 (c enumerator)": [[153, "c.nrf_spis_task_t.NRF_SPIS_TASK_ENABLERXMATCH0"]], "nrf_spis_task_t.nrf_spis_task_enablerxmatch1 (c enumerator)": [[153, "c.nrf_spis_task_t.NRF_SPIS_TASK_ENABLERXMATCH1"]], "nrf_spis_task_t.nrf_spis_task_enablerxmatch2 (c enumerator)": [[153, "c.nrf_spis_task_t.NRF_SPIS_TASK_ENABLERXMATCH2"]], "nrf_spis_task_t.nrf_spis_task_enablerxmatch3 (c enumerator)": [[153, "c.nrf_spis_task_t.NRF_SPIS_TASK_ENABLERXMATCH3"]], "nrf_spis_task_t.nrf_spis_task_release (c enumerator)": [[153, "c.nrf_spis_task_t.NRF_SPIS_TASK_RELEASE"]], "nrf_spis_task_trigger (c function)": [[153, "c.nrf_spis_task_trigger"]], "nrf_spis_tx_amount_get (c function)": [[153, "c.nrf_spis_tx_amount_get"]], "nrf_spis_tx_buffer_set (c function)": [[153, "c.nrf_spis_tx_buffer_set"]], "nrf_spis_tx_list_disable (c function)": [[153, "c.nrf_spis_tx_list_disable"]], "nrf_spis_tx_list_enable (c function)": [[153, "c.nrf_spis_tx_list_enable"]], "nrf_spis_tx_terminate_on_bus_error_check (c function)": [[153, "c.nrf_spis_tx_terminate_on_bus_error_check"]], "nrf_spis_tx_terminate_on_bus_error_disable (c function)": [[153, "c.nrf_spis_tx_terminate_on_bus_error_disable"]], "nrf_spis_tx_terminate_on_bus_error_enable (c function)": [[153, "c.nrf_spis_tx_terminate_on_bus_error_enable"]], "nrf_spu_feature_bell_bell_count (c macro)": [[155, "c.NRF_SPU_FEATURE_BELL_BELL_COUNT"]], "nrf_spu_feature_bell_domain_count (c macro)": [[155, "c.NRF_SPU_FEATURE_BELL_DOMAIN_COUNT"]], "nrf_spu_feature_dppi_channel_count (c macro)": [[155, "c.NRF_SPU_FEATURE_DPPI_CHANNEL_COUNT"]], "nrf_spu_feature_dppi_channel_group_count (c macro)": [[155, "c.NRF_SPU_FEATURE_DPPI_CHANNEL_GROUP_COUNT"]], "nrf_spu_feature_gpiote_channel_count (c macro)": [[155, "c.NRF_SPU_FEATURE_GPIOTE_CHANNEL_COUNT"]], "nrf_spu_feature_gpiote_count (c macro)": [[155, "c.NRF_SPU_FEATURE_GPIOTE_COUNT"]], "nrf_spu_feature_gpiote_interrupt_count (c macro)": [[155, "c.NRF_SPU_FEATURE_GPIOTE_INTERRUPT_COUNT"]], "nrf_spu_feature_gpio_count (c macro)": [[155, "c.NRF_SPU_FEATURE_GPIO_COUNT"]], "nrf_spu_feature_gpio_pin_count (c macro)": [[155, "c.NRF_SPU_FEATURE_GPIO_PIN_COUNT"]], "nrf_spu_feature_grtc_cc_count (c macro)": [[155, "c.NRF_SPU_FEATURE_GRTC_CC_COUNT"]], "nrf_spu_feature_grtc_interrupt_count (c macro)": [[155, "c.NRF_SPU_FEATURE_GRTC_INTERRUPT_COUNT"]], "nrf_spu_feature_ipct_channel_count (c macro)": [[155, "c.NRF_SPU_FEATURE_IPCT_CHANNEL_COUNT"]], "nrf_spu_feature_ipct_interrupt_count (c macro)": [[155, "c.NRF_SPU_FEATURE_IPCT_INTERRUPT_COUNT"]], "nrf_spu_feature_mramc_count (c macro)": [[155, "c.NRF_SPU_FEATURE_MRAMC_COUNT"]], "nrf_spu_feature_tdd_count (c macro)": [[155, "c.NRF_SPU_FEATURE_TDD_COUNT"]], "nrf_spu_has_bells (c macro)": [[155, "c.NRF_SPU_HAS_BELLS"]], "nrf_spu_has_block (c macro)": [[155, "c.NRF_SPU_HAS_BLOCK"]], "nrf_spu_has_domain (c macro)": [[155, "c.NRF_SPU_HAS_DOMAIN"]], "nrf_spu_has_ipct (c macro)": [[155, "c.NRF_SPU_HAS_IPCT"]], "nrf_spu_has_memory (c macro)": [[155, "c.NRF_SPU_HAS_MEMORY"]], "nrf_spu_has_mramc (c macro)": [[155, "c.NRF_SPU_HAS_MRAMC"]], "nrf_spu_has_ownership (c macro)": [[155, "c.NRF_SPU_HAS_OWNERSHIP"]], "nrf_spu_has_peripheral_access (c macro)": [[155, "c.NRF_SPU_HAS_PERIPHERAL_ACCESS"]], "nrf_spu_has_peripheral_access_error_info (c macro)": [[155, "c.NRF_SPU_HAS_PERIPHERAL_ACCESS_ERROR_INFO"]], "nrf_spu_has_tdd (c macro)": [[155, "c.NRF_SPU_HAS_TDD"]], "nrf_spu_periph_count (c macro)": [[155, "c.NRF_SPU_PERIPH_COUNT"]], "nrf_spu_dma_t (c enum)": [[155, "c.nrf_spu_dma_t"]], "nrf_spu_dma_t.nrf_spu_dma_nodma (c enumerator)": [[155, "c.nrf_spu_dma_t.NRF_SPU_DMA_NODMA"]], "nrf_spu_dma_t.nrf_spu_dma_noseparateattribute (c enumerator)": [[155, "c.nrf_spu_dma_t.NRF_SPU_DMA_NOSEPARATEATTRIBUTE"]], "nrf_spu_dma_t.nrf_spu_dma_separateattribute (c enumerator)": [[155, "c.nrf_spu_dma_t.NRF_SPU_DMA_SEPARATEATTRIBUTE"]], "nrf_spu_dppi_config_set (c function)": [[155, "c.nrf_spu_dppi_config_set"]], "nrf_spu_event_check (c function)": [[155, "c.nrf_spu_event_check"]], "nrf_spu_event_clear (c function)": [[155, "c.nrf_spu_event_clear"]], "nrf_spu_event_t (c enum)": [[155, "c.nrf_spu_event_t"]], "nrf_spu_event_t.nrf_spu_event_flashaccerr (c enumerator)": [[155, "c.nrf_spu_event_t.NRF_SPU_EVENT_FLASHACCERR"]], "nrf_spu_event_t.nrf_spu_event_periphaccerr (c enumerator)": [[155, "c.nrf_spu_event_t.NRF_SPU_EVENT_PERIPHACCERR"]], "nrf_spu_event_t.nrf_spu_event_ramaccerr (c enumerator)": [[155, "c.nrf_spu_event_t.NRF_SPU_EVENT_RAMACCERR"]], "nrf_spu_extdomain_set (c function)": [[155, "c.nrf_spu_extdomain_set"]], "nrf_spu_feature_block_enable (c function)": [[155, "c.nrf_spu_feature_block_enable"]], "nrf_spu_feature_block_get (c function)": [[155, "c.nrf_spu_feature_block_get"]], "nrf_spu_feature_lock_enable (c function)": [[155, "c.nrf_spu_feature_lock_enable"]], "nrf_spu_feature_lock_get (c function)": [[155, "c.nrf_spu_feature_lock_get"]], "nrf_spu_feature_ownerid_get (c function)": [[155, "c.nrf_spu_feature_ownerid_get"]], "nrf_spu_feature_ownerid_set (c function)": [[155, "c.nrf_spu_feature_ownerid_set"]], "nrf_spu_feature_secattr_get (c function)": [[155, "c.nrf_spu_feature_secattr_get"]], "nrf_spu_feature_secattr_set (c function)": [[155, "c.nrf_spu_feature_secattr_set"]], "nrf_spu_feature_t (c enum)": [[155, "c.nrf_spu_feature_t"]], "nrf_spu_feature_t.nrf_spu_feature_bells_bell (c enumerator)": [[155, "c.nrf_spu_feature_t.NRF_SPU_FEATURE_BELLS_BELL"]], "nrf_spu_feature_t.nrf_spu_feature_dppi_channel (c enumerator)": [[155, "c.nrf_spu_feature_t.NRF_SPU_FEATURE_DPPI_CHANNEL"]], "nrf_spu_feature_t.nrf_spu_feature_dppi_channel_group (c enumerator)": [[155, "c.nrf_spu_feature_t.NRF_SPU_FEATURE_DPPI_CHANNEL_GROUP"]], "nrf_spu_feature_t.nrf_spu_feature_gpiote_channel (c enumerator)": [[155, "c.nrf_spu_feature_t.NRF_SPU_FEATURE_GPIOTE_CHANNEL"]], "nrf_spu_feature_t.nrf_spu_feature_gpiote_interrupt (c enumerator)": [[155, "c.nrf_spu_feature_t.NRF_SPU_FEATURE_GPIOTE_INTERRUPT"]], "nrf_spu_feature_t.nrf_spu_feature_gpio_pin (c enumerator)": [[155, "c.nrf_spu_feature_t.NRF_SPU_FEATURE_GPIO_PIN"]], "nrf_spu_feature_t.nrf_spu_feature_grtc_cc (c enumerator)": [[155, "c.nrf_spu_feature_t.NRF_SPU_FEATURE_GRTC_CC"]], "nrf_spu_feature_t.nrf_spu_feature_grtc_interrupt (c enumerator)": [[155, "c.nrf_spu_feature_t.NRF_SPU_FEATURE_GRTC_INTERRUPT"]], "nrf_spu_feature_t.nrf_spu_feature_grtc_syscounter (c enumerator)": [[155, "c.nrf_spu_feature_t.NRF_SPU_FEATURE_GRTC_SYSCOUNTER"]], "nrf_spu_feature_t.nrf_spu_feature_ipct_channel (c enumerator)": [[155, "c.nrf_spu_feature_t.NRF_SPU_FEATURE_IPCT_CHANNEL"]], "nrf_spu_feature_t.nrf_spu_feature_ipct_interrupt (c enumerator)": [[155, "c.nrf_spu_feature_t.NRF_SPU_FEATURE_IPCT_INTERRUPT"]], "nrf_spu_feature_t.nrf_spu_feature_mramc_autodpowerdown (c enumerator)": [[155, "c.nrf_spu_feature_t.NRF_SPU_FEATURE_MRAMC_AUTODPOWERDOWN"]], "nrf_spu_feature_t.nrf_spu_feature_mramc_ready (c enumerator)": [[155, "c.nrf_spu_feature_t.NRF_SPU_FEATURE_MRAMC_READY"]], "nrf_spu_feature_t.nrf_spu_feature_mramc_waitstates (c enumerator)": [[155, "c.nrf_spu_feature_t.NRF_SPU_FEATURE_MRAMC_WAITSTATES"]], "nrf_spu_feature_t.nrf_spu_feature_tdd (c enumerator)": [[155, "c.nrf_spu_feature_t.NRF_SPU_FEATURE_TDD"]], "nrf_spu_flashnsc_set (c function)": [[155, "c.nrf_spu_flashnsc_set"]], "nrf_spu_flashregion_set (c function)": [[155, "c.nrf_spu_flashregion_set"]], "nrf_spu_gpio_config_set (c function)": [[155, "c.nrf_spu_gpio_config_set"]], "nrf_spu_int_disable (c function)": [[155, "c.nrf_spu_int_disable"]], "nrf_spu_int_enable (c function)": [[155, "c.nrf_spu_int_enable"]], "nrf_spu_int_enable_check (c function)": [[155, "c.nrf_spu_int_enable_check"]], "nrf_spu_int_mask_t (c enum)": [[155, "c.nrf_spu_int_mask_t"]], "nrf_spu_int_mask_t.nrf_spu_int_flashaccerr_mask (c enumerator)": [[155, "c.nrf_spu_int_mask_t.NRF_SPU_INT_FLASHACCERR_MASK"]], "nrf_spu_int_mask_t.nrf_spu_int_periphaccerr_mask (c enumerator)": [[155, "c.nrf_spu_int_mask_t.NRF_SPU_INT_PERIPHACCERR_MASK"]], "nrf_spu_int_mask_t.nrf_spu_int_ramaccerr_mask (c enumerator)": [[155, "c.nrf_spu_int_mask_t.NRF_SPU_INT_RAMACCERR_MASK"]], "nrf_spu_mem_perm_t (c enum)": [[155, "c.nrf_spu_mem_perm_t"]], "nrf_spu_mem_perm_t.nrf_spu_mem_perm_execute (c enumerator)": [[155, "c.nrf_spu_mem_perm_t.NRF_SPU_MEM_PERM_EXECUTE"]], "nrf_spu_mem_perm_t.nrf_spu_mem_perm_read (c enumerator)": [[155, "c.nrf_spu_mem_perm_t.NRF_SPU_MEM_PERM_READ"]], "nrf_spu_mem_perm_t.nrf_spu_mem_perm_write (c enumerator)": [[155, "c.nrf_spu_mem_perm_t.NRF_SPU_MEM_PERM_WRITE"]], "nrf_spu_nsc_size_t (c enum)": [[155, "c.nrf_spu_nsc_size_t"]], "nrf_spu_nsc_size_t.nrf_spu_nsc_size_1024b (c enumerator)": [[155, "c.nrf_spu_nsc_size_t.NRF_SPU_NSC_SIZE_1024B"]], "nrf_spu_nsc_size_t.nrf_spu_nsc_size_128b (c enumerator)": [[155, "c.nrf_spu_nsc_size_t.NRF_SPU_NSC_SIZE_128B"]], "nrf_spu_nsc_size_t.nrf_spu_nsc_size_2048b (c enumerator)": [[155, "c.nrf_spu_nsc_size_t.NRF_SPU_NSC_SIZE_2048B"]], "nrf_spu_nsc_size_t.nrf_spu_nsc_size_256b (c enumerator)": [[155, "c.nrf_spu_nsc_size_t.NRF_SPU_NSC_SIZE_256B"]], "nrf_spu_nsc_size_t.nrf_spu_nsc_size_32b (c enumerator)": [[155, "c.nrf_spu_nsc_size_t.NRF_SPU_NSC_SIZE_32B"]], "nrf_spu_nsc_size_t.nrf_spu_nsc_size_4096b (c enumerator)": [[155, "c.nrf_spu_nsc_size_t.NRF_SPU_NSC_SIZE_4096B"]], "nrf_spu_nsc_size_t.nrf_spu_nsc_size_512b (c enumerator)": [[155, "c.nrf_spu_nsc_size_t.NRF_SPU_NSC_SIZE_512B"]], "nrf_spu_nsc_size_t.nrf_spu_nsc_size_64b (c enumerator)": [[155, "c.nrf_spu_nsc_size_t.NRF_SPU_NSC_SIZE_64B"]], "nrf_spu_nsc_size_t.nrf_spu_nsc_size_disabled (c enumerator)": [[155, "c.nrf_spu_nsc_size_t.NRF_SPU_NSC_SIZE_DISABLED"]], "nrf_spu_periph_perm_block_enable (c function)": [[155, "c.nrf_spu_periph_perm_block_enable"]], "nrf_spu_periph_perm_block_get (c function)": [[155, "c.nrf_spu_periph_perm_block_get"]], "nrf_spu_periph_perm_dma_get (c function)": [[155, "c.nrf_spu_periph_perm_dma_get"]], "nrf_spu_periph_perm_dmasec_get (c function)": [[155, "c.nrf_spu_periph_perm_dmasec_get"]], "nrf_spu_periph_perm_dmasec_set (c function)": [[155, "c.nrf_spu_periph_perm_dmasec_set"]], "nrf_spu_periph_perm_lock_enable (c function)": [[155, "c.nrf_spu_periph_perm_lock_enable"]], "nrf_spu_periph_perm_lock_get (c function)": [[155, "c.nrf_spu_periph_perm_lock_get"]], "nrf_spu_periph_perm_ownerid_get (c function)": [[155, "c.nrf_spu_periph_perm_ownerid_get"]], "nrf_spu_periph_perm_ownerid_set (c function)": [[155, "c.nrf_spu_periph_perm_ownerid_set"]], "nrf_spu_periph_perm_ownerprog_get (c function)": [[155, "c.nrf_spu_periph_perm_ownerprog_get"]], "nrf_spu_periph_perm_present_get (c function)": [[155, "c.nrf_spu_periph_perm_present_get"]], "nrf_spu_periph_perm_secattr_get (c function)": [[155, "c.nrf_spu_periph_perm_secattr_get"]], "nrf_spu_periph_perm_secattr_set (c function)": [[155, "c.nrf_spu_periph_perm_secattr_set"]], "nrf_spu_periph_perm_securemapping_get (c function)": [[155, "c.nrf_spu_periph_perm_securemapping_get"]], "nrf_spu_periphaccerr_address_get (c function)": [[155, "c.nrf_spu_periphaccerr_address_get"]], "nrf_spu_periphaccerr_ownerid_get (c function)": [[155, "c.nrf_spu_periphaccerr_ownerid_get"]], "nrf_spu_peripheral_set (c function)": [[155, "c.nrf_spu_peripheral_set"]], "nrf_spu_publish_clear (c function)": [[155, "c.nrf_spu_publish_clear"]], "nrf_spu_publish_set (c function)": [[155, "c.nrf_spu_publish_set"]], "nrf_spu_ramnsc_set (c function)": [[155, "c.nrf_spu_ramnsc_set"]], "nrf_spu_ramregion_set (c function)": [[155, "c.nrf_spu_ramregion_set"]], "nrf_spu_securemapping_t (c enum)": [[155, "c.nrf_spu_securemapping_t"]], "nrf_spu_securemapping_t.nrf_spu_securemapping_nonsecure (c enumerator)": [[155, "c.nrf_spu_securemapping_t.NRF_SPU_SECUREMAPPING_NONSECURE"]], "nrf_spu_securemapping_t.nrf_spu_securemapping_secure (c enumerator)": [[155, "c.nrf_spu_securemapping_t.NRF_SPU_SECUREMAPPING_SECURE"]], "nrf_spu_securemapping_t.nrf_spu_securemapping_split (c enumerator)": [[155, "c.nrf_spu_securemapping_t.NRF_SPU_SECUREMAPPING_SPLIT"]], "nrf_spu_securemapping_t.nrf_spu_securemapping_userselectable (c enumerator)": [[155, "c.nrf_spu_securemapping_t.NRF_SPU_SECUREMAPPING_USERSELECTABLE"]], "nrf_spu_tz_is_available (c function)": [[155, "c.nrf_spu_tz_is_available"]], "nrf_stm_devid_numsp_get (c function)": [[157, "c.nrf_stm_devid_numsp_get"]], "nrf_stm_devtype_major_get (c function)": [[157, "c.nrf_stm_devtype_major_get"]], "nrf_stm_devtype_major_t (c enum)": [[157, "c.nrf_stm_devtype_major_t"]], "nrf_stm_devtype_major_t.nrf_stm_devtype_major_trace_source (c enumerator)": [[157, "c.nrf_stm_devtype_major_t.NRF_STM_DEVTYPE_MAJOR_TRACE_SOURCE"]], "nrf_stm_devtype_sub_get (c function)": [[157, "c.nrf_stm_devtype_sub_get"]], "nrf_stm_devtype_sub_t (c enum)": [[157, "c.nrf_stm_devtype_sub_t"]], "nrf_stm_devtype_sub_t.nrf_stm_devtype_sub_stimulus_trace (c enumerator)": [[157, "c.nrf_stm_devtype_sub_t.NRF_STM_DEVTYPE_SUB_STIMULUS_TRACE"]], "nrf_stm_dma_sens_t (c enum)": [[157, "c.nrf_stm_dma_sens_t"]], "nrf_stm_dma_sens_t.nrf_stm_dmactlr_lt100 (c enumerator)": [[157, "c.nrf_stm_dma_sens_t.NRF_STM_DMACTLR_LT100"]], "nrf_stm_dma_sens_t.nrf_stm_dmactlr_lt25 (c enumerator)": [[157, "c.nrf_stm_dma_sens_t.NRF_STM_DMACTLR_LT25"]], "nrf_stm_dma_sens_t.nrf_stm_dmactlr_lt50 (c enumerator)": [[157, "c.nrf_stm_dma_sens_t.NRF_STM_DMACTLR_LT50"]], "nrf_stm_dma_sens_t.nrf_stm_dmactlr_lt75 (c enumerator)": [[157, "c.nrf_stm_dma_sens_t.NRF_STM_DMACTLR_LT75"]], "nrf_stm_dmactlr_sens_get (c function)": [[157, "c.nrf_stm_dmactlr_sens_get"]], "nrf_stm_dmactlr_sens_set (c function)": [[157, "c.nrf_stm_dmactlr_sens_set"]], "nrf_stm_feature_check (c function)": [[157, "c.nrf_stm_feature_check"]], "nrf_stm_feature_set (c function)": [[157, "c.nrf_stm_feature_set"]], "nrf_stm_feature_t (c enum)": [[157, "c.nrf_stm_feature_t"]], "nrf_stm_feature_t.nrf_stm_feature_afreadyhigh (c enumerator)": [[157, "c.nrf_stm_feature_t.NRF_STM_FEATURE_AFREADYHIGH"]], "nrf_stm_feature_t.nrf_stm_feature_asyncpe (c enumerator)": [[157, "c.nrf_stm_feature_t.NRF_STM_FEATURE_ASYNCPE"]], "nrf_stm_feature_t.nrf_stm_feature_busy (c enumerator)": [[157, "c.nrf_stm_feature_t.NRF_STM_FEATURE_BUSY"]], "nrf_stm_feature_t.nrf_stm_feature_clkon (c enumerator)": [[157, "c.nrf_stm_feature_t.NRF_STM_FEATURE_CLKON"]], "nrf_stm_feature_t.nrf_stm_feature_compen (c enumerator)": [[157, "c.nrf_stm_feature_t.NRF_STM_FEATURE_COMPEN"]], "nrf_stm_feature_t.nrf_stm_feature_fifoaf (c enumerator)": [[157, "c.nrf_stm_feature_t.NRF_STM_FEATURE_FIFOAF"]], "nrf_stm_feature_t.nrf_stm_feature_forcets (c enumerator)": [[157, "c.nrf_stm_feature_t.NRF_STM_FEATURE_FORCETS"]], "nrf_stm_feature_t.nrf_stm_feature_heerr (c enumerator)": [[157, "c.nrf_stm_feature_t.NRF_STM_FEATURE_HEERR"]], "nrf_stm_feature_t.nrf_stm_feature_hemastr (c enumerator)": [[157, "c.nrf_stm_feature_t.NRF_STM_FEATURE_HEMASTR"]], "nrf_stm_feature_t.nrf_stm_feature_heter (c enumerator)": [[157, "c.nrf_stm_feature_t.NRF_STM_FEATURE_HETER"]], "nrf_stm_feature_t.nrf_stm_feature_hwten (c enumerator)": [[157, "c.nrf_stm_feature_t.NRF_STM_FEATURE_HWTEN"]], "nrf_stm_feature_t.nrf_stm_feature_integration (c enumerator)": [[157, "c.nrf_stm_feature_t.NRF_STM_FEATURE_INTEGRATION"]], "nrf_stm_feature_t.nrf_stm_feature_lc_locked (c enumerator)": [[157, "c.nrf_stm_feature_t.NRF_STM_FEATURE_LC_LOCKED"]], "nrf_stm_feature_t.nrf_stm_feature_lc_present (c enumerator)": [[157, "c.nrf_stm_feature_t.NRF_STM_FEATURE_LC_PRESENT"]], "nrf_stm_feature_t.nrf_stm_feature_nsid (c enumerator)": [[157, "c.nrf_stm_feature_t.NRF_STM_FEATURE_NSID"]], "nrf_stm_feature_t.nrf_stm_feature_nsnid (c enumerator)": [[157, "c.nrf_stm_feature_t.NRF_STM_FEATURE_NSNID"]], "nrf_stm_feature_t.nrf_stm_feature_priorinvdis (c enumerator)": [[157, "c.nrf_stm_feature_t.NRF_STM_FEATURE_PRIORINVDIS"]], "nrf_stm_feature_t.nrf_stm_feature_privmask (c enumerator)": [[157, "c.nrf_stm_feature_t.NRF_STM_FEATURE_PRIVMASK"]], "nrf_stm_feature_t.nrf_stm_feature_sid (c enumerator)": [[157, "c.nrf_stm_feature_t.NRF_STM_FEATURE_SID"]], "nrf_stm_feature_t.nrf_stm_feature_snid (c enumerator)": [[157, "c.nrf_stm_feature_t.NRF_STM_FEATURE_SNID"]], "nrf_stm_feature_t.nrf_stm_feature_sper (c enumerator)": [[157, "c.nrf_stm_feature_t.NRF_STM_FEATURE_SPER"]], "nrf_stm_feature_t.nrf_stm_feature_spoverride (c enumerator)": [[157, "c.nrf_stm_feature_t.NRF_STM_FEATURE_SPOVERRIDE"]], "nrf_stm_feature_t.nrf_stm_feature_spter (c enumerator)": [[157, "c.nrf_stm_feature_t.NRF_STM_FEATURE_SPTER"]], "nrf_stm_feature_t.nrf_stm_feature_stm (c enumerator)": [[157, "c.nrf_stm_feature_t.NRF_STM_FEATURE_STM"]], "nrf_stm_feature_t.nrf_stm_feature_swoen (c enumerator)": [[157, "c.nrf_stm_feature_t.NRF_STM_FEATURE_SWOEN"]], "nrf_stm_feature_t.nrf_stm_feature_syncen (c enumerator)": [[157, "c.nrf_stm_feature_t.NRF_STM_FEATURE_SYNCEN"]], "nrf_stm_feature_t.nrf_stm_feature_tsen (c enumerator)": [[157, "c.nrf_stm_feature_t.NRF_STM_FEATURE_TSEN"]], "nrf_stm_feature_t.nrf_stm_feature_tsfreq (c enumerator)": [[157, "c.nrf_stm_feature_t.NRF_STM_FEATURE_TSFREQ"]], "nrf_stm_feature_t.nrf_stm_feature_tsprescale (c enumerator)": [[157, "c.nrf_stm_feature_t.NRF_STM_FEATURE_TSPRESCALE"]], "nrf_stm_hefeat1r_numhe_get (c function)": [[157, "c.nrf_stm_hefeat1r_numhe_get"]], "nrf_stm_heidr_class_get (c function)": [[157, "c.nrf_stm_heidr_class_get"]], "nrf_stm_heidr_class_t (c enum)": [[157, "c.nrf_stm_heidr_class_t"]], "nrf_stm_heidr_class_t.nrf_stm_heidr_class_hardware_event_control (c enumerator)": [[157, "c.nrf_stm_heidr_class_t.NRF_STM_HEIDR_CLASS_HARDWARE_EVENT_CONTROL"]], "nrf_stm_heidr_classrev_get (c function)": [[157, "c.nrf_stm_heidr_classrev_get"]], "nrf_stm_heidr_vendspec_get (c function)": [[157, "c.nrf_stm_heidr_vendspec_get"]], "nrf_stm_hemastr_get (c function)": [[157, "c.nrf_stm_hemastr_get"]], "nrf_stm_input_check (c function)": [[157, "c.nrf_stm_input_check"]], "nrf_stm_input_t (c enum)": [[157, "c.nrf_stm_input_t"]], "nrf_stm_input_t.nrf_stm_input_afvalidm (c enumerator)": [[157, "c.nrf_stm_input_t.NRF_STM_INPUT_AFVALIDM"]], "nrf_stm_input_t.nrf_stm_input_atreadym (c enumerator)": [[157, "c.nrf_stm_input_t.NRF_STM_INPUT_ATREADYM"]], "nrf_stm_lar_access_set (c function)": [[157, "c.nrf_stm_lar_access_set"]], "nrf_stm_lsr_type_get (c function)": [[157, "c.nrf_stm_lsr_type_get"]], "nrf_stm_lsr_type_t (c enum)": [[157, "c.nrf_stm_lsr_type_t"]], "nrf_stm_lsr_type_t.nrf_stm_lsr_type_32 (c enumerator)": [[157, "c.nrf_stm_lsr_type_t.NRF_STM_LSR_TYPE_32"]], "nrf_stm_lsr_type_t.nrf_stm_lsr_type_8 (c enumerator)": [[157, "c.nrf_stm_lsr_type_t.NRF_STM_LSR_TYPE_8"]], "nrf_stm_output_set (c function)": [[157, "c.nrf_stm_output_set"]], "nrf_stm_output_t (c enum)": [[157, "c.nrf_stm_output_t"]], "nrf_stm_output_t.nrf_stm_output_afreadym (c enumerator)": [[157, "c.nrf_stm_output_t.NRF_STM_OUTPUT_AFREADYM"]], "nrf_stm_output_t.nrf_stm_output_asyncout (c enumerator)": [[157, "c.nrf_stm_output_t.NRF_STM_OUTPUT_ASYNCOUT"]], "nrf_stm_output_t.nrf_stm_output_atbytesm_0 (c enumerator)": [[157, "c.nrf_stm_output_t.NRF_STM_OUTPUT_ATBYTESM_0"]], "nrf_stm_output_t.nrf_stm_output_atbytesm_1 (c enumerator)": [[157, "c.nrf_stm_output_t.NRF_STM_OUTPUT_ATBYTESM_1"]], "nrf_stm_output_t.nrf_stm_output_atdatam_0 (c enumerator)": [[157, "c.nrf_stm_output_t.NRF_STM_OUTPUT_ATDATAM_0"]], "nrf_stm_output_t.nrf_stm_output_atdatam_15 (c enumerator)": [[157, "c.nrf_stm_output_t.NRF_STM_OUTPUT_ATDATAM_15"]], "nrf_stm_output_t.nrf_stm_output_atdatam_23 (c enumerator)": [[157, "c.nrf_stm_output_t.NRF_STM_OUTPUT_ATDATAM_23"]], "nrf_stm_output_t.nrf_stm_output_atdatam_31 (c enumerator)": [[157, "c.nrf_stm_output_t.NRF_STM_OUTPUT_ATDATAM_31"]], "nrf_stm_output_t.nrf_stm_output_atdatam_7 (c enumerator)": [[157, "c.nrf_stm_output_t.NRF_STM_OUTPUT_ATDATAM_7"]], "nrf_stm_output_t.nrf_stm_output_atidm_0 (c enumerator)": [[157, "c.nrf_stm_output_t.NRF_STM_OUTPUT_ATIDM_0"]], "nrf_stm_output_t.nrf_stm_output_atidm_1 (c enumerator)": [[157, "c.nrf_stm_output_t.NRF_STM_OUTPUT_ATIDM_1"]], "nrf_stm_output_t.nrf_stm_output_atidm_2 (c enumerator)": [[157, "c.nrf_stm_output_t.NRF_STM_OUTPUT_ATIDM_2"]], "nrf_stm_output_t.nrf_stm_output_atidm_3 (c enumerator)": [[157, "c.nrf_stm_output_t.NRF_STM_OUTPUT_ATIDM_3"]], "nrf_stm_output_t.nrf_stm_output_atidm_4 (c enumerator)": [[157, "c.nrf_stm_output_t.NRF_STM_OUTPUT_ATIDM_4"]], "nrf_stm_output_t.nrf_stm_output_atidm_5 (c enumerator)": [[157, "c.nrf_stm_output_t.NRF_STM_OUTPUT_ATIDM_5"]], "nrf_stm_output_t.nrf_stm_output_atidm_6 (c enumerator)": [[157, "c.nrf_stm_output_t.NRF_STM_OUTPUT_ATIDM_6"]], "nrf_stm_output_t.nrf_stm_output_atvalidm (c enumerator)": [[157, "c.nrf_stm_output_t.NRF_STM_OUTPUT_ATVALIDM"]], "nrf_stm_output_t.nrf_stm_output_trigouthete (c enumerator)": [[157, "c.nrf_stm_output_t.NRF_STM_OUTPUT_TRIGOUTHETE"]], "nrf_stm_output_t.nrf_stm_output_trigoutspte (c enumerator)": [[157, "c.nrf_stm_output_t.NRF_STM_OUTPUT_TRIGOUTSPTE"]], "nrf_stm_output_t.nrf_stm_output_trigoutsw (c enumerator)": [[157, "c.nrf_stm_output_t.NRF_STM_OUTPUT_TRIGOUTSW"]], "nrf_stm_spfeat1r_prot_get (c function)": [[157, "c.nrf_stm_spfeat1r_prot_get"]], "nrf_stm_spfeat1r_prot_t (c enum)": [[157, "c.nrf_stm_spfeat1r_prot_t"]], "nrf_stm_spfeat1r_prot_t.nrf_stm_sfpeat1r_prot_stpv2 (c enumerator)": [[157, "c.nrf_stm_spfeat1r_prot_t.NRF_STM_SFPEAT1R_PROT_STPV2"]], "nrf_stm_spfeat1r_syncen_get (c function)": [[157, "c.nrf_stm_spfeat1r_syncen_get"]], "nrf_stm_spfeat1r_syncen_t (c enum)": [[157, "c.nrf_stm_spfeat1r_syncen_t"]], "nrf_stm_spfeat1r_syncen_t.nrf_stm_spfeat1r_syncen_read_as_one (c enumerator)": [[157, "c.nrf_stm_spfeat1r_syncen_t.NRF_STM_SPFEAT1R_SYNCEN_READ_AS_ONE"]], "nrf_stm_spfeat1r_tracebus_get (c function)": [[157, "c.nrf_stm_spfeat1r_tracebus_get"]], "nrf_stm_spfeat1r_trigctl_get (c function)": [[157, "c.nrf_stm_spfeat1r_trigctl_get"]], "nrf_stm_spfeat1r_ts_get (c function)": [[157, "c.nrf_stm_spfeat1r_ts_get"]], "nrf_stm_spfeat1r_ts_t (c enum)": [[157, "c.nrf_stm_spfeat1r_ts_t"]], "nrf_stm_spfeat1r_ts_t.nrf_stm_spfeat1r_ts_absolute (c enumerator)": [[157, "c.nrf_stm_spfeat1r_ts_t.NRF_STM_SPFEAT1R_TS_ABSOLUTE"]], "nrf_stm_spfeat2r_dsize_get (c function)": [[157, "c.nrf_stm_spfeat2r_dsize_get"]], "nrf_stm_spfeat2r_dsize_t (c enum)": [[157, "c.nrf_stm_spfeat2r_dsize_t"]], "nrf_stm_spfeat2r_dsize_t.nrf_stm_spfeat2r_dsize_32 (c enumerator)": [[157, "c.nrf_stm_spfeat2r_dsize_t.NRF_STM_SPFEAT2R_DSIZE_32"]], "nrf_stm_spfeat2r_spcomp_get (c function)": [[157, "c.nrf_stm_spfeat2r_spcomp_get"]], "nrf_stm_spfeat2r_spcomp_t (c enum)": [[157, "c.nrf_stm_spfeat2r_spcomp_t"]], "nrf_stm_spfeat2r_spcomp_t.nrf_stm_spfeat2r_spcomp_programmable (c enumerator)": [[157, "c.nrf_stm_spfeat2r_spcomp_t.NRF_STM_SPFEAT2R_SPCOMP_PROGRAMMABLE"]], "nrf_stm_spfeat2r_sptrtype_get (c function)": [[157, "c.nrf_stm_spfeat2r_sptrtype_get"]], "nrf_stm_spfeat2r_sptrtype_t (c enum)": [[157, "c.nrf_stm_spfeat2r_sptrtype_t"]], "nrf_stm_spfeat2r_sptrtype_t.nrf_stm_spfeat2r_sptrtype_invariant_and_guaranteed (c enumerator)": [[157, "c.nrf_stm_spfeat2r_sptrtype_t.NRF_STM_SPFEAT2R_SPTRTYPE_INVARIANT_AND_GUARANTEED"]], "nrf_stm_spfeat3r_nummast_get (c function)": [[157, "c.nrf_stm_spfeat3r_nummast_get"]], "nrf_stm_tcsr_traceid_get (c function)": [[157, "c.nrf_stm_tcsr_traceid_get"]], "nrf_stm_tcsr_traceid_set (c function)": [[157, "c.nrf_stm_tcsr_traceid_set"]], "nrfx_systick_delay_ms (c function)": [[159, "c.nrfx_systick_delay_ms"]], "nrfx_systick_delay_ticks (c function)": [[159, "c.nrfx_systick_delay_ticks"]], "nrfx_systick_delay_us (c function)": [[159, "c.nrfx_systick_delay_us"]], "nrfx_systick_get (c function)": [[159, "c.nrfx_systick_get"]], "nrfx_systick_init (c function)": [[159, "c.nrfx_systick_init"]], "nrfx_systick_state_t (c struct)": [[159, "c.nrfx_systick_state_t"]], "nrfx_systick_state_t.time (c var)": [[159, "c.nrfx_systick_state_t.time"]], "nrfx_systick_test (c function)": [[159, "c.nrfx_systick_test"]], "nrf_systick_val_mask (c macro)": [[160, "c.NRF_SYSTICK_VAL_MASK"]], "nrf_systick_calib_get (c function)": [[160, "c.nrf_systick_calib_get"]], "nrf_systick_csr_flags_t (c enum)": [[160, "c.nrf_systick_csr_flags_t"]], "nrf_systick_csr_flags_t.nrf_systick_csr_clksource_cpu (c enumerator)": [[160, "c.nrf_systick_csr_flags_t.NRF_SYSTICK_CSR_CLKSOURCE_CPU"]], "nrf_systick_csr_flags_t.nrf_systick_csr_clksource_mask (c enumerator)": [[160, "c.nrf_systick_csr_flags_t.NRF_SYSTICK_CSR_CLKSOURCE_MASK"]], "nrf_systick_csr_flags_t.nrf_systick_csr_clksource_ref (c enumerator)": [[160, "c.nrf_systick_csr_flags_t.NRF_SYSTICK_CSR_CLKSOURCE_REF"]], "nrf_systick_csr_flags_t.nrf_systick_csr_countflag_mask (c enumerator)": [[160, "c.nrf_systick_csr_flags_t.NRF_SYSTICK_CSR_COUNTFLAG_MASK"]], "nrf_systick_csr_flags_t.nrf_systick_csr_disable (c enumerator)": [[160, "c.nrf_systick_csr_flags_t.NRF_SYSTICK_CSR_DISABLE"]], "nrf_systick_csr_flags_t.nrf_systick_csr_enable (c enumerator)": [[160, "c.nrf_systick_csr_flags_t.NRF_SYSTICK_CSR_ENABLE"]], "nrf_systick_csr_flags_t.nrf_systick_csr_enable_mask (c enumerator)": [[160, "c.nrf_systick_csr_flags_t.NRF_SYSTICK_CSR_ENABLE_MASK"]], "nrf_systick_csr_flags_t.nrf_systick_csr_tickint_disable (c enumerator)": [[160, "c.nrf_systick_csr_flags_t.NRF_SYSTICK_CSR_TICKINT_DISABLE"]], "nrf_systick_csr_flags_t.nrf_systick_csr_tickint_enable (c enumerator)": [[160, "c.nrf_systick_csr_flags_t.NRF_SYSTICK_CSR_TICKINT_ENABLE"]], "nrf_systick_csr_flags_t.nrf_systick_csr_tickint_mask (c enumerator)": [[160, "c.nrf_systick_csr_flags_t.NRF_SYSTICK_CSR_TICKINT_MASK"]], "nrf_systick_csr_get (c function)": [[160, "c.nrf_systick_csr_get"]], "nrf_systick_csr_set (c function)": [[160, "c.nrf_systick_csr_set"]], "nrf_systick_load_get (c function)": [[160, "c.nrf_systick_load_get"]], "nrf_systick_load_set (c function)": [[160, "c.nrf_systick_load_set"]], "nrf_systick_val_clear (c function)": [[160, "c.nrf_systick_val_clear"]], "nrf_systick_val_get (c function)": [[160, "c.nrf_systick_val_get"]], "nrf_tampc_has_active_shield_channels (c macro)": [[162, "c.NRF_TAMPC_HAS_ACTIVE_SHIELD_CHANNELS"]], "nrf_tampc_has_ap_spiden_protector (c macro)": [[162, "c.NRF_TAMPC_HAS_AP_SPIDEN_PROTECTOR"]], "nrf_tampc_has_coresight (c macro)": [[162, "c.NRF_TAMPC_HAS_CORESIGHT"]], "nrf_tampc_has_detectors_enable (c macro)": [[162, "c.NRF_TAMPC_HAS_DETECTORS_ENABLE"]], "nrf_tampc_has_erase_protector (c macro)": [[162, "c.NRF_TAMPC_HAS_ERASE_PROTECTOR"]], "nrf_tampc_has_event_write_error (c macro)": [[162, "c.NRF_TAMPC_HAS_EVENT_WRITE_ERROR"]], "nrf_tampc_has_extended_protectors (c macro)": [[162, "c.NRF_TAMPC_HAS_EXTENDED_PROTECTORS"]], "nrf_tampc_has_external_tamperswitch_detector (c macro)": [[162, "c.NRF_TAMPC_HAS_EXTERNAL_TAMPERSWITCH_DETECTOR"]], "nrf_tampc_has_external_tamperswitch_protector (c macro)": [[162, "c.NRF_TAMPC_HAS_EXTERNAL_TAMPERSWITCH_PROTECTOR"]], "nrf_tampc_has_warmboot (c macro)": [[162, "c.NRF_TAMPC_HAS_WARMBOOT"]], "nrf_tampc_key_mask (c macro)": [[162, "c.NRF_TAMPC_KEY_MASK"]], "nrf_tampc_activeshield_channel_disable (c function)": [[162, "c.nrf_tampc_activeshield_channel_disable"]], "nrf_tampc_activeshield_channel_enable (c function)": [[162, "c.nrf_tampc_activeshield_channel_enable"]], "nrf_tampc_activeshield_channel_enable_check (c function)": [[162, "c.nrf_tampc_activeshield_channel_enable_check"]], "nrf_tampc_activeshield_mask_t (c enum)": [[162, "c.nrf_tampc_activeshield_mask_t"]], "nrf_tampc_activeshield_mask_t.nrf_tampc_activeshield_channel_0_mask (c enumerator)": [[162, "c.nrf_tampc_activeshield_mask_t.NRF_TAMPC_ACTIVESHIELD_CHANNEL_0_MASK"]], "nrf_tampc_activeshield_mask_t.nrf_tampc_activeshield_channel_1_mask (c enumerator)": [[162, "c.nrf_tampc_activeshield_mask_t.NRF_TAMPC_ACTIVESHIELD_CHANNEL_1_MASK"]], "nrf_tampc_activeshield_mask_t.nrf_tampc_activeshield_channel_2_mask (c enumerator)": [[162, "c.nrf_tampc_activeshield_mask_t.NRF_TAMPC_ACTIVESHIELD_CHANNEL_2_MASK"]], "nrf_tampc_activeshield_mask_t.nrf_tampc_activeshield_channel_3_mask (c enumerator)": [[162, "c.nrf_tampc_activeshield_mask_t.NRF_TAMPC_ACTIVESHIELD_CHANNEL_3_MASK"]], "nrf_tampc_activeshield_mask_t.nrf_tampc_all_activeshield_channels_mask (c enumerator)": [[162, "c.nrf_tampc_activeshield_mask_t.NRF_TAMPC_ALL_ACTIVESHIELD_CHANNELS_MASK"]], "nrf_tampc_ap_ctrl_lock_get (c function)": [[162, "c.nrf_tampc_ap_ctrl_lock_get"]], "nrf_tampc_ap_ctrl_lock_set (c function)": [[162, "c.nrf_tampc_ap_ctrl_lock_set"]], "nrf_tampc_ap_ctrl_value_get (c function)": [[162, "c.nrf_tampc_ap_ctrl_value_get"]], "nrf_tampc_ap_ctrl_value_set (c function)": [[162, "c.nrf_tampc_ap_ctrl_value_set"]], "nrf_tampc_coresight_ctrl_fault_get (c function)": [[162, "c.nrf_tampc_coresight_ctrl_fault_get"]], "nrf_tampc_coresight_ctrl_fault_set (c function)": [[162, "c.nrf_tampc_coresight_ctrl_fault_set"]], "nrf_tampc_coresight_ctrl_lock_get (c function)": [[162, "c.nrf_tampc_coresight_ctrl_lock_get"]], "nrf_tampc_coresight_ctrl_lock_set (c function)": [[162, "c.nrf_tampc_coresight_ctrl_lock_set"]], "nrf_tampc_coresight_ctrl_value_get (c function)": [[162, "c.nrf_tampc_coresight_ctrl_value_get"]], "nrf_tampc_coresight_ctrl_value_set (c function)": [[162, "c.nrf_tampc_coresight_ctrl_value_set"]], "nrf_tampc_debug_type_t (c enum)": [[162, "c.nrf_tampc_debug_type_t"]], "nrf_tampc_debug_type_t.nrf_tampc_debug_type_dbgen (c enumerator)": [[162, "c.nrf_tampc_debug_type_t.NRF_TAMPC_DEBUG_TYPE_DBGEN"]], "nrf_tampc_debug_type_t.nrf_tampc_debug_type_deviceen (c enumerator)": [[162, "c.nrf_tampc_debug_type_t.NRF_TAMPC_DEBUG_TYPE_DEVICEEN"]], "nrf_tampc_debug_type_t.nrf_tampc_debug_type_niden (c enumerator)": [[162, "c.nrf_tampc_debug_type_t.NRF_TAMPC_DEBUG_TYPE_NIDEN"]], "nrf_tampc_debug_type_t.nrf_tampc_debug_type_spiden (c enumerator)": [[162, "c.nrf_tampc_debug_type_t.NRF_TAMPC_DEBUG_TYPE_SPIDEN"]], "nrf_tampc_debug_type_t.nrf_tampc_debug_type_spniden (c enumerator)": [[162, "c.nrf_tampc_debug_type_t.NRF_TAMPC_DEBUG_TYPE_SPNIDEN"]], "nrf_tampc_detector_status_check (c function)": [[162, "c.nrf_tampc_detector_status_check"]], "nrf_tampc_detector_status_clear (c function)": [[162, "c.nrf_tampc_detector_status_clear"]], "nrf_tampc_detector_t (c enum)": [[162, "c.nrf_tampc_detector_t"]], "nrf_tampc_detector_t.nrf_tampc_detector_active_shield (c enumerator)": [[162, "c.nrf_tampc_detector_t.NRF_TAMPC_DETECTOR_ACTIVE_SHIELD"]], "nrf_tampc_detector_t.nrf_tampc_detector_cracen (c enumerator)": [[162, "c.nrf_tampc_detector_t.NRF_TAMPC_DETECTOR_CRACEN"]], "nrf_tampc_detector_t.nrf_tampc_detector_glitch_domain_fast (c enumerator)": [[162, "c.nrf_tampc_detector_t.NRF_TAMPC_DETECTOR_GLITCH_DOMAIN_FAST"]], "nrf_tampc_detector_t.nrf_tampc_detector_glitch_domain_slow (c enumerator)": [[162, "c.nrf_tampc_detector_t.NRF_TAMPC_DETECTOR_GLITCH_DOMAIN_SLOW"]], "nrf_tampc_detector_t.nrf_tampc_detector_protected_signal (c enumerator)": [[162, "c.nrf_tampc_detector_t.NRF_TAMPC_DETECTOR_PROTECTED_SIGNAL"]], "nrf_tampc_detector_t.nrf_tampc_detector_tamper_switch (c enumerator)": [[162, "c.nrf_tampc_detector_t.NRF_TAMPC_DETECTOR_TAMPER_SWITCH"]], "nrf_tampc_domain_ctrl_lock_get (c function)": [[162, "c.nrf_tampc_domain_ctrl_lock_get"]], "nrf_tampc_domain_ctrl_lock_set (c function)": [[162, "c.nrf_tampc_domain_ctrl_lock_set"]], "nrf_tampc_domain_ctrl_value_get (c function)": [[162, "c.nrf_tampc_domain_ctrl_value_get"]], "nrf_tampc_domain_ctrl_value_set (c function)": [[162, "c.nrf_tampc_domain_ctrl_value_set"]], "nrf_tampc_event_address_get (c function)": [[162, "c.nrf_tampc_event_address_get"]], "nrf_tampc_event_check (c function)": [[162, "c.nrf_tampc_event_check"]], "nrf_tampc_event_clear (c function)": [[162, "c.nrf_tampc_event_clear"]], "nrf_tampc_event_t (c enum)": [[162, "c.nrf_tampc_event_t"]], "nrf_tampc_event_t.nrf_tampc_event_tamper (c enumerator)": [[162, "c.nrf_tampc_event_t.NRF_TAMPC_EVENT_TAMPER"]], "nrf_tampc_event_t.nrf_tampc_event_write_error (c enumerator)": [[162, "c.nrf_tampc_event_t.NRF_TAMPC_EVENT_WRITE_ERROR"]], "nrf_tampc_int_disable (c function)": [[162, "c.nrf_tampc_int_disable"]], "nrf_tampc_int_enable (c function)": [[162, "c.nrf_tampc_int_enable"]], "nrf_tampc_int_enable_check (c function)": [[162, "c.nrf_tampc_int_enable_check"]], "nrf_tampc_int_pending_get (c function)": [[162, "c.nrf_tampc_int_pending_get"]], "nrf_tampc_protect_t (c enum)": [[162, "c.nrf_tampc_protect_t"]], "nrf_tampc_protect_t.nrf_tampc_protect_active_shield (c enumerator)": [[162, "c.nrf_tampc_protect_t.NRF_TAMPC_PROTECT_ACTIVE_SHIELD"]], "nrf_tampc_protect_t.nrf_tampc_protect_cracen (c enumerator)": [[162, "c.nrf_tampc_protect_t.NRF_TAMPC_PROTECT_CRACEN"]], "nrf_tampc_protect_t.nrf_tampc_protect_erase_protect (c enumerator)": [[162, "c.nrf_tampc_protect_t.NRF_TAMPC_PROTECT_ERASE_PROTECT"]], "nrf_tampc_protect_t.nrf_tampc_protect_glitch_domain_fast (c enumerator)": [[162, "c.nrf_tampc_protect_t.NRF_TAMPC_PROTECT_GLITCH_DOMAIN_FAST"]], "nrf_tampc_protect_t.nrf_tampc_protect_glitch_domain_slow (c enumerator)": [[162, "c.nrf_tampc_protect_t.NRF_TAMPC_PROTECT_GLITCH_DOMAIN_SLOW"]], "nrf_tampc_protect_t.nrf_tampc_protect_reseten_ext (c enumerator)": [[162, "c.nrf_tampc_protect_t.NRF_TAMPC_PROTECT_RESETEN_EXT"]], "nrf_tampc_protect_t.nrf_tampc_protect_reseten_int (c enumerator)": [[162, "c.nrf_tampc_protect_t.NRF_TAMPC_PROTECT_RESETEN_INT"]], "nrf_tampc_protect_t.nrf_tampc_protect_tamper_switch (c enumerator)": [[162, "c.nrf_tampc_protect_t.NRF_TAMPC_PROTECT_TAMPER_SWITCH"]], "nrf_tampc_protector_ctrl_lock_get (c function)": [[162, "c.nrf_tampc_protector_ctrl_lock_get"]], "nrf_tampc_protector_ctrl_lock_set (c function)": [[162, "c.nrf_tampc_protector_ctrl_lock_set"]], "nrf_tampc_protector_ctrl_value_get (c function)": [[162, "c.nrf_tampc_protector_ctrl_value_get"]], "nrf_tampc_protector_ctrl_value_set (c function)": [[162, "c.nrf_tampc_protector_ctrl_value_set"]], "nrf_tampc_protector_status_check (c function)": [[162, "c.nrf_tampc_protector_status_check"]], "nrf_tampc_protector_status_clear (c function)": [[162, "c.nrf_tampc_protector_status_clear"]], "nrf_tampc_warmboot_ctrl_fault_get (c function)": [[162, "c.nrf_tampc_warmboot_ctrl_fault_get"]], "nrf_tampc_warmboot_ctrl_fault_set (c function)": [[162, "c.nrf_tampc_warmboot_ctrl_fault_set"]], "nrf_tampc_warmboot_ctrl_lock_get (c function)": [[162, "c.nrf_tampc_warmboot_ctrl_lock_get"]], "nrf_tampc_warmboot_ctrl_lock_set (c function)": [[162, "c.nrf_tampc_warmboot_ctrl_lock_set"]], "nrf_tampc_warmboot_ctrl_value_get (c function)": [[162, "c.nrf_tampc_warmboot_ctrl_value_get"]], "nrf_tampc_warmboot_ctrl_value_set (c function)": [[162, "c.nrf_tampc_warmboot_ctrl_value_set"]], "nrf_tampc_warmboot_mode_t (c enum)": [[162, "c.nrf_tampc_warmboot_mode_t"]], "nrf_tampc_warmboot_mode_t.nrf_tampc_warmboot_mode_systemoff (c enumerator)": [[162, "c.nrf_tampc_warmboot_mode_t.NRF_TAMPC_WARMBOOT_MODE_SYSTEMOFF"]], "nrf_tampc_warmboot_mode_t.nrf_tampc_warmboot_mode_unret_idle (c enumerator)": [[162, "c.nrf_tampc_warmboot_mode_t.NRF_TAMPC_WARMBOOT_MODE_UNRET_IDLE"]], "nrf_tampc_warmboot_status_check (c function)": [[162, "c.nrf_tampc_warmboot_status_check"]], "nrf_tampc_warmboot_status_clear (c function)": [[162, "c.nrf_tampc_warmboot_status_clear"]], "nrf_tapmc_int_mask_t (c enum)": [[162, "c.nrf_tapmc_int_mask_t"]], "nrf_tapmc_int_mask_t.nrf_tampc_all_ints_mask (c enumerator)": [[162, "c.nrf_tapmc_int_mask_t.NRF_TAMPC_ALL_INTS_MASK"]], "nrf_tapmc_int_mask_t.nrf_tampc_int_tamper_mask (c enumerator)": [[162, "c.nrf_tapmc_int_mask_t.NRF_TAMPC_INT_TAMPER_MASK"]], "nrf_tapmc_int_mask_t.nrf_tampc_int_write_error_mask (c enumerator)": [[162, "c.nrf_tapmc_int_mask_t.NRF_TAMPC_INT_WRITE_ERROR_MASK"]], "nrfx_tbm_default_config (c macro)": [[164, "c.NRFX_TBM_DEFAULT_CONFIG"]], "nrfx_tbm_config_t (c struct)": [[164, "c.nrfx_tbm_config_t"]], "nrfx_tbm_config_t.interrupt_priority (c var)": [[164, "c.nrfx_tbm_config_t.interrupt_priority"]], "nrfx_tbm_config_t.size (c var)": [[164, "c.nrfx_tbm_config_t.size"]], "nrfx_tbm_count_get (c function)": [[164, "c.nrfx_tbm_count_get"]], "nrfx_tbm_event_handler_t (c type)": [[164, "c.nrfx_tbm_event_handler_t"]], "nrfx_tbm_init (c function)": [[164, "c.nrfx_tbm_init"]], "nrfx_tbm_init_check (c function)": [[164, "c.nrfx_tbm_init_check"]], "nrfx_tbm_start (c function)": [[164, "c.nrfx_tbm_start"]], "nrfx_tbm_stop (c function)": [[164, "c.nrfx_tbm_stop"]], "nrfx_tbm_uninit (c function)": [[164, "c.nrfx_tbm_uninit"]], "nrf_tbm_buffersize_set (c function)": [[165, "c.nrf_tbm_buffersize_set"]], "nrf_tbm_count_get (c function)": [[165, "c.nrf_tbm_count_get"]], "nrf_tbm_event_check (c function)": [[165, "c.nrf_tbm_event_check"]], "nrf_tbm_event_clear (c function)": [[165, "c.nrf_tbm_event_clear"]], "nrf_tbm_event_t (c enum)": [[165, "c.nrf_tbm_event_t"]], "nrf_tbm_event_t.nrf_tbm_event_flush (c enumerator)": [[165, "c.nrf_tbm_event_t.NRF_TBM_EVENT_FLUSH"]], "nrf_tbm_event_t.nrf_tbm_event_full (c enumerator)": [[165, "c.nrf_tbm_event_t.NRF_TBM_EVENT_FULL"]], "nrf_tbm_event_t.nrf_tbm_event_halffull (c enumerator)": [[165, "c.nrf_tbm_event_t.NRF_TBM_EVENT_HALFFULL"]], "nrf_tbm_int_disable (c function)": [[165, "c.nrf_tbm_int_disable"]], "nrf_tbm_int_enable (c function)": [[165, "c.nrf_tbm_int_enable"]], "nrf_tbm_int_enable_check (c function)": [[165, "c.nrf_tbm_int_enable_check"]], "nrf_tbm_int_mask_t (c enum)": [[165, "c.nrf_tbm_int_mask_t"]], "nrf_tbm_int_mask_t.nrf_tbm_int_flush_mask (c enumerator)": [[165, "c.nrf_tbm_int_mask_t.NRF_TBM_INT_FLUSH_MASK"]], "nrf_tbm_int_mask_t.nrf_tbm_int_full_mask (c enumerator)": [[165, "c.nrf_tbm_int_mask_t.NRF_TBM_INT_FULL_MASK"]], "nrf_tbm_int_mask_t.nrf_tbm_int_halffull_mask (c enumerator)": [[165, "c.nrf_tbm_int_mask_t.NRF_TBM_INT_HALFFULL_MASK"]], "nrf_tbm_int_pending_get (c function)": [[165, "c.nrf_tbm_int_pending_get"]], "nrf_tbm_int_set (c function)": [[165, "c.nrf_tbm_int_set"]], "nrf_tbm_task_t (c enum)": [[165, "c.nrf_tbm_task_t"]], "nrf_tbm_task_t.nrf_tbm_task_flush (c enumerator)": [[165, "c.nrf_tbm_task_t.NRF_TBM_TASK_FLUSH"]], "nrf_tbm_task_t.nrf_tbm_task_start (c enumerator)": [[165, "c.nrf_tbm_task_t.NRF_TBM_TASK_START"]], "nrf_tbm_task_t.nrf_tbm_task_stop (c enumerator)": [[165, "c.nrf_tbm_task_t.NRF_TBM_TASK_STOP"]], "nrf_tbm_task_trigger (c function)": [[165, "c.nrf_tbm_task_trigger"]], "nrfy_tbm_configure (c function)": [[166, "c.nrfy_tbm_configure"]], "nrfy_tbm_count_get (c function)": [[166, "c.nrfy_tbm_count_get"]], "nrfy_tbm_event_check (c function)": [[166, "c.nrfy_tbm_event_check"]], "nrfy_tbm_event_clear (c function)": [[166, "c.nrfy_tbm_event_clear"]], "nrfy_tbm_events_process (c function)": [[166, "c.nrfy_tbm_events_process"]], "nrfy_tbm_int_disable (c function)": [[166, "c.nrfy_tbm_int_disable"]], "nrfy_tbm_int_enable (c function)": [[166, "c.nrfy_tbm_int_enable"]], "nrfy_tbm_int_enable_check (c function)": [[166, "c.nrfy_tbm_int_enable_check"]], "nrfy_tbm_int_init (c function)": [[166, "c.nrfy_tbm_int_init"]], "nrfy_tbm_int_uninit (c function)": [[166, "c.nrfy_tbm_int_uninit"]], "nrfy_tbm_task_trigger (c function)": [[166, "c.nrfy_tbm_task_trigger"]], "nrf_tdm_pin_not_connected (c macro)": [[168, "c.NRF_TDM_PIN_NOT_CONNECTED"]], "nrf_tdm_align_t (c enum)": [[168, "c.nrf_tdm_align_t"]], "nrf_tdm_align_t.nrf_tdm_align_left (c enumerator)": [[168, "c.nrf_tdm_align_t.NRF_TDM_ALIGN_LEFT"]], "nrf_tdm_align_t.nrf_tdm_align_right (c enumerator)": [[168, "c.nrf_tdm_align_t.NRF_TDM_ALIGN_RIGHT"]], "nrf_tdm_channel_delay_t (c enum)": [[168, "c.nrf_tdm_channel_delay_t"]], "nrf_tdm_channel_delay_t.nrf_tdm_channel_delay_1ck (c enumerator)": [[168, "c.nrf_tdm_channel_delay_t.NRF_TDM_CHANNEL_DELAY_1CK"]], "nrf_tdm_channel_delay_t.nrf_tdm_channel_delay_2ck (c enumerator)": [[168, "c.nrf_tdm_channel_delay_t.NRF_TDM_CHANNEL_DELAY_2CK"]], "nrf_tdm_channel_delay_t.nrf_tdm_channel_delay_none (c enumerator)": [[168, "c.nrf_tdm_channel_delay_t.NRF_TDM_CHANNEL_DELAY_NONE"]], "nrf_tdm_channel_mask_t (c enum)": [[168, "c.nrf_tdm_channel_mask_t"]], "nrf_tdm_channel_mask_t.nrf_tdm_channel_rx0_mask (c enumerator)": [[168, "c.nrf_tdm_channel_mask_t.NRF_TDM_CHANNEL_RX0_MASK"]], "nrf_tdm_channel_mask_t.nrf_tdm_channel_rx1_mask (c enumerator)": [[168, "c.nrf_tdm_channel_mask_t.NRF_TDM_CHANNEL_RX1_MASK"]], "nrf_tdm_channel_mask_t.nrf_tdm_channel_rx2_mask (c enumerator)": [[168, "c.nrf_tdm_channel_mask_t.NRF_TDM_CHANNEL_RX2_MASK"]], "nrf_tdm_channel_mask_t.nrf_tdm_channel_rx3_mask (c enumerator)": [[168, "c.nrf_tdm_channel_mask_t.NRF_TDM_CHANNEL_RX3_MASK"]], "nrf_tdm_channel_mask_t.nrf_tdm_channel_rx4_mask (c enumerator)": [[168, "c.nrf_tdm_channel_mask_t.NRF_TDM_CHANNEL_RX4_MASK"]], "nrf_tdm_channel_mask_t.nrf_tdm_channel_rx5_mask (c enumerator)": [[168, "c.nrf_tdm_channel_mask_t.NRF_TDM_CHANNEL_RX5_MASK"]], "nrf_tdm_channel_mask_t.nrf_tdm_channel_rx6_mask (c enumerator)": [[168, "c.nrf_tdm_channel_mask_t.NRF_TDM_CHANNEL_RX6_MASK"]], "nrf_tdm_channel_mask_t.nrf_tdm_channel_rx7_mask (c enumerator)": [[168, "c.nrf_tdm_channel_mask_t.NRF_TDM_CHANNEL_RX7_MASK"]], "nrf_tdm_channel_mask_t.nrf_tdm_channel_tx0_mask (c enumerator)": [[168, "c.nrf_tdm_channel_mask_t.NRF_TDM_CHANNEL_TX0_MASK"]], "nrf_tdm_channel_mask_t.nrf_tdm_channel_tx1_mask (c enumerator)": [[168, "c.nrf_tdm_channel_mask_t.NRF_TDM_CHANNEL_TX1_MASK"]], "nrf_tdm_channel_mask_t.nrf_tdm_channel_tx2_mask (c enumerator)": [[168, "c.nrf_tdm_channel_mask_t.NRF_TDM_CHANNEL_TX2_MASK"]], "nrf_tdm_channel_mask_t.nrf_tdm_channel_tx3_mask (c enumerator)": [[168, "c.nrf_tdm_channel_mask_t.NRF_TDM_CHANNEL_TX3_MASK"]], "nrf_tdm_channel_mask_t.nrf_tdm_channel_tx4_mask (c enumerator)": [[168, "c.nrf_tdm_channel_mask_t.NRF_TDM_CHANNEL_TX4_MASK"]], "nrf_tdm_channel_mask_t.nrf_tdm_channel_tx5_mask (c enumerator)": [[168, "c.nrf_tdm_channel_mask_t.NRF_TDM_CHANNEL_TX5_MASK"]], "nrf_tdm_channel_mask_t.nrf_tdm_channel_tx6_mask (c enumerator)": [[168, "c.nrf_tdm_channel_mask_t.NRF_TDM_CHANNEL_TX6_MASK"]], "nrf_tdm_channel_mask_t.nrf_tdm_channel_tx7_mask (c enumerator)": [[168, "c.nrf_tdm_channel_mask_t.NRF_TDM_CHANNEL_TX7_MASK"]], "nrf_tdm_channels_count_t (c enum)": [[168, "c.nrf_tdm_channels_count_t"]], "nrf_tdm_channels_count_t.nrf_tdm_channels_count_1 (c enumerator)": [[168, "c.nrf_tdm_channels_count_t.NRF_TDM_CHANNELS_COUNT_1"]], "nrf_tdm_channels_count_t.nrf_tdm_channels_count_2 (c enumerator)": [[168, "c.nrf_tdm_channels_count_t.NRF_TDM_CHANNELS_COUNT_2"]], "nrf_tdm_channels_count_t.nrf_tdm_channels_count_3 (c enumerator)": [[168, "c.nrf_tdm_channels_count_t.NRF_TDM_CHANNELS_COUNT_3"]], "nrf_tdm_channels_count_t.nrf_tdm_channels_count_4 (c enumerator)": [[168, "c.nrf_tdm_channels_count_t.NRF_TDM_CHANNELS_COUNT_4"]], "nrf_tdm_channels_count_t.nrf_tdm_channels_count_5 (c enumerator)": [[168, "c.nrf_tdm_channels_count_t.NRF_TDM_CHANNELS_COUNT_5"]], "nrf_tdm_channels_count_t.nrf_tdm_channels_count_6 (c enumerator)": [[168, "c.nrf_tdm_channels_count_t.NRF_TDM_CHANNELS_COUNT_6"]], "nrf_tdm_channels_count_t.nrf_tdm_channels_count_7 (c enumerator)": [[168, "c.nrf_tdm_channels_count_t.NRF_TDM_CHANNELS_COUNT_7"]], "nrf_tdm_channels_count_t.nrf_tdm_channels_count_8 (c enumerator)": [[168, "c.nrf_tdm_channels_count_t.NRF_TDM_CHANNELS_COUNT_8"]], "nrf_tdm_config_t (c struct)": [[168, "c.nrf_tdm_config_t"]], "nrf_tdm_config_t.alignment (c var)": [[168, "c.nrf_tdm_config_t.alignment"]], "nrf_tdm_config_t.channel_delay (c var)": [[168, "c.nrf_tdm_config_t.channel_delay"]], "nrf_tdm_config_t.channels (c var)": [[168, "c.nrf_tdm_config_t.channels"]], "nrf_tdm_config_t.fsync_duration (c var)": [[168, "c.nrf_tdm_config_t.fsync_duration"]], "nrf_tdm_config_t.fsync_polarity (c var)": [[168, "c.nrf_tdm_config_t.fsync_polarity"]], "nrf_tdm_config_t.mck_setup (c var)": [[168, "c.nrf_tdm_config_t.mck_setup"]], "nrf_tdm_config_t.mode (c var)": [[168, "c.nrf_tdm_config_t.mode"]], "nrf_tdm_config_t.num_of_channels (c var)": [[168, "c.nrf_tdm_config_t.num_of_channels"]], "nrf_tdm_config_t.sample_width (c var)": [[168, "c.nrf_tdm_config_t.sample_width"]], "nrf_tdm_config_t.sck_polarity (c var)": [[168, "c.nrf_tdm_config_t.sck_polarity"]], "nrf_tdm_config_t.sck_setup (c var)": [[168, "c.nrf_tdm_config_t.sck_setup"]], "nrf_tdm_configure (c function)": [[168, "c.nrf_tdm_configure"]], "nrf_tdm_current_rx_transfer_amount_get (c function)": [[168, "c.nrf_tdm_current_rx_transfer_amount_get"]], "nrf_tdm_current_tx_transfer_amount_get (c function)": [[168, "c.nrf_tdm_current_tx_transfer_amount_get"]], "nrf_tdm_disable (c function)": [[168, "c.nrf_tdm_disable"]], "nrf_tdm_enable (c function)": [[168, "c.nrf_tdm_enable"]], "nrf_tdm_enable_check (c function)": [[168, "c.nrf_tdm_enable_check"]], "nrf_tdm_event_address_get (c function)": [[168, "c.nrf_tdm_event_address_get"]], "nrf_tdm_event_check (c function)": [[168, "c.nrf_tdm_event_check"]], "nrf_tdm_event_clear (c function)": [[168, "c.nrf_tdm_event_clear"]], "nrf_tdm_event_t (c enum)": [[168, "c.nrf_tdm_event_t"]], "nrf_tdm_event_t.nrf_tdm_event_aborted (c enumerator)": [[168, "c.nrf_tdm_event_t.NRF_TDM_EVENT_ABORTED"]], "nrf_tdm_event_t.nrf_tdm_event_maxcnt (c enumerator)": [[168, "c.nrf_tdm_event_t.NRF_TDM_EVENT_MAXCNT"]], "nrf_tdm_event_t.nrf_tdm_event_rxptrupd (c enumerator)": [[168, "c.nrf_tdm_event_t.NRF_TDM_EVENT_RXPTRUPD"]], "nrf_tdm_event_t.nrf_tdm_event_stopped (c enumerator)": [[168, "c.nrf_tdm_event_t.NRF_TDM_EVENT_STOPPED"]], "nrf_tdm_event_t.nrf_tdm_event_txptrupd (c enumerator)": [[168, "c.nrf_tdm_event_t.NRF_TDM_EVENT_TXPTRUPD"]], "nrf_tdm_fsync_duration_t (c enum)": [[168, "c.nrf_tdm_fsync_duration_t"]], "nrf_tdm_fsync_duration_t.nrf_tdm_fsync_duration_channel (c enumerator)": [[168, "c.nrf_tdm_fsync_duration_t.NRF_TDM_FSYNC_DURATION_CHANNEL"]], "nrf_tdm_fsync_duration_t.nrf_tdm_fsync_duration_sck (c enumerator)": [[168, "c.nrf_tdm_fsync_duration_t.NRF_TDM_FSYNC_DURATION_SCK"]], "nrf_tdm_fsync_pin_get (c function)": [[168, "c.nrf_tdm_fsync_pin_get"]], "nrf_tdm_int_disable (c function)": [[168, "c.nrf_tdm_int_disable"]], "nrf_tdm_int_enable (c function)": [[168, "c.nrf_tdm_int_enable"]], "nrf_tdm_int_enable_check (c function)": [[168, "c.nrf_tdm_int_enable_check"]], "nrf_tdm_int_mask_t (c enum)": [[168, "c.nrf_tdm_int_mask_t"]], "nrf_tdm_int_mask_t.nrf_tdm_int_aborted_mask (c enumerator)": [[168, "c.nrf_tdm_int_mask_t.NRF_TDM_INT_ABORTED_MASK"]], "nrf_tdm_int_mask_t.nrf_tdm_int_maxcnt_mask (c enumerator)": [[168, "c.nrf_tdm_int_mask_t.NRF_TDM_INT_MAXCNT_MASK"]], "nrf_tdm_int_mask_t.nrf_tdm_int_rxptrupd_mask_mask (c enumerator)": [[168, "c.nrf_tdm_int_mask_t.NRF_TDM_INT_RXPTRUPD_MASK_MASK"]], "nrf_tdm_int_mask_t.nrf_tdm_int_stopped_mask_mask (c enumerator)": [[168, "c.nrf_tdm_int_mask_t.NRF_TDM_INT_STOPPED_MASK_MASK"]], "nrf_tdm_int_mask_t.nrf_tdm_int_txptrupd_mask_mask (c enumerator)": [[168, "c.nrf_tdm_int_mask_t.NRF_TDM_INT_TXPTRUPD_MASK_MASK"]], "nrf_tdm_last_rx_transfer_amount_get (c function)": [[168, "c.nrf_tdm_last_rx_transfer_amount_get"]], "nrf_tdm_last_tx_transfer_amount_get (c function)": [[168, "c.nrf_tdm_last_tx_transfer_amount_get"]], "nrf_tdm_mck_configure (c function)": [[168, "c.nrf_tdm_mck_configure"]], "nrf_tdm_mck_div_t (c enum)": [[168, "c.nrf_tdm_mck_div_t"]], "nrf_tdm_mck_div_t.nrf_tdm_mck_div_10 (c enumerator)": [[168, "c.nrf_tdm_mck_div_t.NRF_TDM_MCK_DIV_10"]], "nrf_tdm_mck_div_t.nrf_tdm_mck_div_11 (c enumerator)": [[168, "c.nrf_tdm_mck_div_t.NRF_TDM_MCK_DIV_11"]], "nrf_tdm_mck_div_t.nrf_tdm_mck_div_125 (c enumerator)": [[168, "c.nrf_tdm_mck_div_t.NRF_TDM_MCK_DIV_125"]], "nrf_tdm_mck_div_t.nrf_tdm_mck_div_15 (c enumerator)": [[168, "c.nrf_tdm_mck_div_t.NRF_TDM_MCK_DIV_15"]], "nrf_tdm_mck_div_t.nrf_tdm_mck_div_16 (c enumerator)": [[168, "c.nrf_tdm_mck_div_t.NRF_TDM_MCK_DIV_16"]], "nrf_tdm_mck_div_t.nrf_tdm_mck_div_2 (c enumerator)": [[168, "c.nrf_tdm_mck_div_t.NRF_TDM_MCK_DIV_2"]], "nrf_tdm_mck_div_t.nrf_tdm_mck_div_21 (c enumerator)": [[168, "c.nrf_tdm_mck_div_t.NRF_TDM_MCK_DIV_21"]], "nrf_tdm_mck_div_t.nrf_tdm_mck_div_23 (c enumerator)": [[168, "c.nrf_tdm_mck_div_t.NRF_TDM_MCK_DIV_23"]], "nrf_tdm_mck_div_t.nrf_tdm_mck_div_3 (c enumerator)": [[168, "c.nrf_tdm_mck_div_t.NRF_TDM_MCK_DIV_3"]], "nrf_tdm_mck_div_t.nrf_tdm_mck_div_30 (c enumerator)": [[168, "c.nrf_tdm_mck_div_t.NRF_TDM_MCK_DIV_30"]], "nrf_tdm_mck_div_t.nrf_tdm_mck_div_31 (c enumerator)": [[168, "c.nrf_tdm_mck_div_t.NRF_TDM_MCK_DIV_31"]], "nrf_tdm_mck_div_t.nrf_tdm_mck_div_32 (c enumerator)": [[168, "c.nrf_tdm_mck_div_t.NRF_TDM_MCK_DIV_32"]], "nrf_tdm_mck_div_t.nrf_tdm_mck_div_4 (c enumerator)": [[168, "c.nrf_tdm_mck_div_t.NRF_TDM_MCK_DIV_4"]], "nrf_tdm_mck_div_t.nrf_tdm_mck_div_42 (c enumerator)": [[168, "c.nrf_tdm_mck_div_t.NRF_TDM_MCK_DIV_42"]], "nrf_tdm_mck_div_t.nrf_tdm_mck_div_5 (c enumerator)": [[168, "c.nrf_tdm_mck_div_t.NRF_TDM_MCK_DIV_5"]], "nrf_tdm_mck_div_t.nrf_tdm_mck_div_6 (c enumerator)": [[168, "c.nrf_tdm_mck_div_t.NRF_TDM_MCK_DIV_6"]], "nrf_tdm_mck_div_t.nrf_tdm_mck_div_63 (c enumerator)": [[168, "c.nrf_tdm_mck_div_t.NRF_TDM_MCK_DIV_63"]], "nrf_tdm_mck_div_t.nrf_tdm_mck_div_8 (c enumerator)": [[168, "c.nrf_tdm_mck_div_t.NRF_TDM_MCK_DIV_8"]], "nrf_tdm_mck_pin_get (c function)": [[168, "c.nrf_tdm_mck_pin_get"]], "nrf_tdm_mck_set (c function)": [[168, "c.nrf_tdm_mck_set"]], "nrf_tdm_mode_t (c enum)": [[168, "c.nrf_tdm_mode_t"]], "nrf_tdm_mode_t.nrf_tdm_mode_master (c enumerator)": [[168, "c.nrf_tdm_mode_t.NRF_TDM_MODE_MASTER"]], "nrf_tdm_mode_t.nrf_tdm_mode_slave (c enumerator)": [[168, "c.nrf_tdm_mode_t.NRF_TDM_MODE_SLAVE"]], "nrf_tdm_pins_set (c function)": [[168, "c.nrf_tdm_pins_set"]], "nrf_tdm_pins_t (c struct)": [[168, "c.nrf_tdm_pins_t"]], "nrf_tdm_pins_t.fsync_pin (c var)": [[168, "c.nrf_tdm_pins_t.fsync_pin"]], "nrf_tdm_pins_t.mck_pin (c var)": [[168, "c.nrf_tdm_pins_t.mck_pin"]], "nrf_tdm_pins_t.sck_pin (c var)": [[168, "c.nrf_tdm_pins_t.sck_pin"]], "nrf_tdm_pins_t.sdin_pin (c var)": [[168, "c.nrf_tdm_pins_t.sdin_pin"]], "nrf_tdm_pins_t.sdout_pin (c var)": [[168, "c.nrf_tdm_pins_t.sdout_pin"]], "nrf_tdm_polarity_t (c enum)": [[168, "c.nrf_tdm_polarity_t"]], "nrf_tdm_polarity_t.nrf_tdm_polarity_negedge (c enumerator)": [[168, "c.nrf_tdm_polarity_t.NRF_TDM_POLARITY_NEGEDGE"]], "nrf_tdm_polarity_t.nrf_tdm_polarity_posedge (c enumerator)": [[168, "c.nrf_tdm_polarity_t.NRF_TDM_POLARITY_POSEDGE"]], "nrf_tdm_publish_clear (c function)": [[168, "c.nrf_tdm_publish_clear"]], "nrf_tdm_publish_set (c function)": [[168, "c.nrf_tdm_publish_set"]], "nrf_tdm_rx_buffer_get (c function)": [[168, "c.nrf_tdm_rx_buffer_get"]], "nrf_tdm_rx_buffer_set (c function)": [[168, "c.nrf_tdm_rx_buffer_set"]], "nrf_tdm_rx_count_set (c function)": [[168, "c.nrf_tdm_rx_count_set"]], "nrf_tdm_rxtxen_t (c enum)": [[168, "c.nrf_tdm_rxtxen_t"]], "nrf_tdm_rxtxen_t.nrf_tdm_rxtxen_duplex (c enumerator)": [[168, "c.nrf_tdm_rxtxen_t.NRF_TDM_RXTXEN_DUPLEX"]], "nrf_tdm_rxtxen_t.nrf_tdm_rxtxen_rx (c enumerator)": [[168, "c.nrf_tdm_rxtxen_t.NRF_TDM_RXTXEN_RX"]], "nrf_tdm_rxtxen_t.nrf_tdm_rxtxen_tx (c enumerator)": [[168, "c.nrf_tdm_rxtxen_t.NRF_TDM_RXTXEN_TX"]], "nrf_tdm_sck_configure (c function)": [[168, "c.nrf_tdm_sck_configure"]], "nrf_tdm_sck_div_t (c enum)": [[168, "c.nrf_tdm_sck_div_t"]], "nrf_tdm_sck_div_t.nrf_tdm_sck_div_10 (c enumerator)": [[168, "c.nrf_tdm_sck_div_t.NRF_TDM_SCK_DIV_10"]], "nrf_tdm_sck_div_t.nrf_tdm_sck_div_11 (c enumerator)": [[168, "c.nrf_tdm_sck_div_t.NRF_TDM_SCK_DIV_11"]], "nrf_tdm_sck_div_t.nrf_tdm_sck_div_125 (c enumerator)": [[168, "c.nrf_tdm_sck_div_t.NRF_TDM_SCK_DIV_125"]], "nrf_tdm_sck_div_t.nrf_tdm_sck_div_15 (c enumerator)": [[168, "c.nrf_tdm_sck_div_t.NRF_TDM_SCK_DIV_15"]], "nrf_tdm_sck_div_t.nrf_tdm_sck_div_16 (c enumerator)": [[168, "c.nrf_tdm_sck_div_t.NRF_TDM_SCK_DIV_16"]], "nrf_tdm_sck_div_t.nrf_tdm_sck_div_2 (c enumerator)": [[168, "c.nrf_tdm_sck_div_t.NRF_TDM_SCK_DIV_2"]], "nrf_tdm_sck_div_t.nrf_tdm_sck_div_21 (c enumerator)": [[168, "c.nrf_tdm_sck_div_t.NRF_TDM_SCK_DIV_21"]], "nrf_tdm_sck_div_t.nrf_tdm_sck_div_23 (c enumerator)": [[168, "c.nrf_tdm_sck_div_t.NRF_TDM_SCK_DIV_23"]], "nrf_tdm_sck_div_t.nrf_tdm_sck_div_3 (c enumerator)": [[168, "c.nrf_tdm_sck_div_t.NRF_TDM_SCK_DIV_3"]], "nrf_tdm_sck_div_t.nrf_tdm_sck_div_30 (c enumerator)": [[168, "c.nrf_tdm_sck_div_t.NRF_TDM_SCK_DIV_30"]], "nrf_tdm_sck_div_t.nrf_tdm_sck_div_31 (c enumerator)": [[168, "c.nrf_tdm_sck_div_t.NRF_TDM_SCK_DIV_31"]], "nrf_tdm_sck_div_t.nrf_tdm_sck_div_32 (c enumerator)": [[168, "c.nrf_tdm_sck_div_t.NRF_TDM_SCK_DIV_32"]], "nrf_tdm_sck_div_t.nrf_tdm_sck_div_4 (c enumerator)": [[168, "c.nrf_tdm_sck_div_t.NRF_TDM_SCK_DIV_4"]], "nrf_tdm_sck_div_t.nrf_tdm_sck_div_42 (c enumerator)": [[168, "c.nrf_tdm_sck_div_t.NRF_TDM_SCK_DIV_42"]], "nrf_tdm_sck_div_t.nrf_tdm_sck_div_5 (c enumerator)": [[168, "c.nrf_tdm_sck_div_t.NRF_TDM_SCK_DIV_5"]], "nrf_tdm_sck_div_t.nrf_tdm_sck_div_6 (c enumerator)": [[168, "c.nrf_tdm_sck_div_t.NRF_TDM_SCK_DIV_6"]], "nrf_tdm_sck_div_t.nrf_tdm_sck_div_63 (c enumerator)": [[168, "c.nrf_tdm_sck_div_t.NRF_TDM_SCK_DIV_63"]], "nrf_tdm_sck_div_t.nrf_tdm_sck_div_8 (c enumerator)": [[168, "c.nrf_tdm_sck_div_t.NRF_TDM_SCK_DIV_8"]], "nrf_tdm_sck_pin_get (c function)": [[168, "c.nrf_tdm_sck_pin_get"]], "nrf_tdm_sdin_pin_get (c function)": [[168, "c.nrf_tdm_sdin_pin_get"]], "nrf_tdm_sdout_pin_get (c function)": [[168, "c.nrf_tdm_sdout_pin_get"]], "nrf_tdm_src_t (c enum)": [[168, "c.nrf_tdm_src_t"]], "nrf_tdm_src_t.nrf_tdm_src_aclk (c enumerator)": [[168, "c.nrf_tdm_src_t.NRF_TDM_SRC_ACLK"]], "nrf_tdm_src_t.nrf_tdm_src_pclk32m (c enumerator)": [[168, "c.nrf_tdm_src_t.NRF_TDM_SRC_PCLK32M"]], "nrf_tdm_subscribe_clear (c function)": [[168, "c.nrf_tdm_subscribe_clear"]], "nrf_tdm_subscribe_set (c function)": [[168, "c.nrf_tdm_subscribe_set"]], "nrf_tdm_swidth_t (c enum)": [[168, "c.nrf_tdm_swidth_t"]], "nrf_tdm_swidth_t.nrf_tdm_swidth_16bit (c enumerator)": [[168, "c.nrf_tdm_swidth_t.NRF_TDM_SWIDTH_16BIT"]], "nrf_tdm_swidth_t.nrf_tdm_swidth_16bit_in32bit (c enumerator)": [[168, "c.nrf_tdm_swidth_t.NRF_TDM_SWIDTH_16BIT_IN32BIT"]], "nrf_tdm_swidth_t.nrf_tdm_swidth_24bit (c enumerator)": [[168, "c.nrf_tdm_swidth_t.NRF_TDM_SWIDTH_24BIT"]], "nrf_tdm_swidth_t.nrf_tdm_swidth_24bit_in32bit (c enumerator)": [[168, "c.nrf_tdm_swidth_t.NRF_TDM_SWIDTH_24BIT_IN32BIT"]], "nrf_tdm_swidth_t.nrf_tdm_swidth_32bit (c enumerator)": [[168, "c.nrf_tdm_swidth_t.NRF_TDM_SWIDTH_32BIT"]], "nrf_tdm_swidth_t.nrf_tdm_swidth_8bit (c enumerator)": [[168, "c.nrf_tdm_swidth_t.NRF_TDM_SWIDTH_8BIT"]], "nrf_tdm_swidth_t.nrf_tdm_swidth_8bit_in16bit (c enumerator)": [[168, "c.nrf_tdm_swidth_t.NRF_TDM_SWIDTH_8BIT_IN16BIT"]], "nrf_tdm_swidth_t.nrf_tdm_swidth_8bit_in32bit (c enumerator)": [[168, "c.nrf_tdm_swidth_t.NRF_TDM_SWIDTH_8BIT_IN32BIT"]], "nrf_tdm_task_address_get (c function)": [[168, "c.nrf_tdm_task_address_get"]], "nrf_tdm_task_t (c enum)": [[168, "c.nrf_tdm_task_t"]], "nrf_tdm_task_t.nrf_tdm_task_abort (c enumerator)": [[168, "c.nrf_tdm_task_t.NRF_TDM_TASK_ABORT"]], "nrf_tdm_task_t.nrf_tdm_task_start (c enumerator)": [[168, "c.nrf_tdm_task_t.NRF_TDM_TASK_START"]], "nrf_tdm_task_t.nrf_tdm_task_stop (c enumerator)": [[168, "c.nrf_tdm_task_t.NRF_TDM_TASK_STOP"]], "nrf_tdm_task_trigger (c function)": [[168, "c.nrf_tdm_task_trigger"]], "nrf_tdm_transfer_direction_set (c function)": [[168, "c.nrf_tdm_transfer_direction_set"]], "nrf_tdm_tx_buffer_get (c function)": [[168, "c.nrf_tdm_tx_buffer_get"]], "nrf_tdm_tx_buffer_set (c function)": [[168, "c.nrf_tdm_tx_buffer_set"]], "nrf_tdm_tx_count_set (c function)": [[168, "c.nrf_tdm_tx_count_set"]], "nrfx_temp_default_config (c macro)": [[170, "c.NRFX_TEMP_DEFAULT_CONFIG"]], "nrfx_temp_calculate (c function)": [[170, "c.nrfx_temp_calculate"]], "nrfx_temp_config_t (c struct)": [[170, "c.nrfx_temp_config_t"]], "nrfx_temp_config_t.interrupt_priority (c var)": [[170, "c.nrfx_temp_config_t.interrupt_priority"]], "nrfx_temp_data_handler_t (c type)": [[170, "c.nrfx_temp_data_handler_t"]], "nrfx_temp_init (c function)": [[170, "c.nrfx_temp_init"]], "nrfx_temp_init_check (c function)": [[170, "c.nrfx_temp_init_check"]], "nrfx_temp_measure (c function)": [[170, "c.nrfx_temp_measure"]], "nrfx_temp_result_get (c function)": [[170, "c.nrfx_temp_result_get"]], "nrfx_temp_uninit (c function)": [[170, "c.nrfx_temp_uninit"]], "nrf_temp_has_calibration (c macro)": [[171, "c.NRF_TEMP_HAS_CALIBRATION"]], "nrf_temp_calibration_coeff_get (c function)": [[171, "c.nrf_temp_calibration_coeff_get"]], "nrf_temp_calibration_coeff_set (c function)": [[171, "c.nrf_temp_calibration_coeff_set"]], "nrf_temp_event_address_get (c function)": [[171, "c.nrf_temp_event_address_get"]], "nrf_temp_event_check (c function)": [[171, "c.nrf_temp_event_check"]], "nrf_temp_event_clear (c function)": [[171, "c.nrf_temp_event_clear"]], "nrf_temp_event_t (c enum)": [[171, "c.nrf_temp_event_t"]], "nrf_temp_event_t.nrf_temp_event_datardy (c enumerator)": [[171, "c.nrf_temp_event_t.NRF_TEMP_EVENT_DATARDY"]], "nrf_temp_int_disable (c function)": [[171, "c.nrf_temp_int_disable"]], "nrf_temp_int_enable (c function)": [[171, "c.nrf_temp_int_enable"]], "nrf_temp_int_enable_check (c function)": [[171, "c.nrf_temp_int_enable_check"]], "nrf_temp_int_mask_t (c enum)": [[171, "c.nrf_temp_int_mask_t"]], "nrf_temp_int_mask_t.nrf_temp_int_datardy_mask (c enumerator)": [[171, "c.nrf_temp_int_mask_t.NRF_TEMP_INT_DATARDY_MASK"]], "nrf_temp_publish_clear (c function)": [[171, "c.nrf_temp_publish_clear"]], "nrf_temp_publish_set (c function)": [[171, "c.nrf_temp_publish_set"]], "nrf_temp_result_get (c function)": [[171, "c.nrf_temp_result_get"]], "nrf_temp_subscribe_clear (c function)": [[171, "c.nrf_temp_subscribe_clear"]], "nrf_temp_subscribe_set (c function)": [[171, "c.nrf_temp_subscribe_set"]], "nrf_temp_task_address_get (c function)": [[171, "c.nrf_temp_task_address_get"]], "nrf_temp_task_t (c enum)": [[171, "c.nrf_temp_task_t"]], "nrf_temp_task_t.nrf_temp_task_start (c enumerator)": [[171, "c.nrf_temp_task_t.NRF_TEMP_TASK_START"]], "nrf_temp_task_t.nrf_temp_task_stop (c enumerator)": [[171, "c.nrf_temp_task_t.NRF_TEMP_TASK_STOP"]], "nrf_temp_task_trigger (c function)": [[171, "c.nrf_temp_task_trigger"]], "nrfy_temp_has_calibration (c macro)": [[172, "c.NRFY_TEMP_HAS_CALIBRATION"]], "nrfy_temp_calibration_coeff_get (c function)": [[172, "c.nrfy_temp_calibration_coeff_get"]], "nrfy_temp_calibration_coeff_set (c function)": [[172, "c.nrfy_temp_calibration_coeff_set"]], "nrfy_temp_event_address_get (c function)": [[172, "c.nrfy_temp_event_address_get"]], "nrfy_temp_event_check (c function)": [[172, "c.nrfy_temp_event_check"]], "nrfy_temp_event_clear (c function)": [[172, "c.nrfy_temp_event_clear"]], "nrfy_temp_int_disable (c function)": [[172, "c.nrfy_temp_int_disable"]], "nrfy_temp_int_enable (c function)": [[172, "c.nrfy_temp_int_enable"]], "nrfy_temp_int_enable_check (c function)": [[172, "c.nrfy_temp_int_enable_check"]], "nrfy_temp_int_init (c function)": [[172, "c.nrfy_temp_int_init"]], "nrfy_temp_int_uninit (c function)": [[172, "c.nrfy_temp_int_uninit"]], "nrfy_temp_publish_clear (c function)": [[172, "c.nrfy_temp_publish_clear"]], "nrfy_temp_publish_set (c function)": [[172, "c.nrfy_temp_publish_set"]], "nrfy_temp_result_get (c function)": [[172, "c.nrfy_temp_result_get"]], "nrfy_temp_subscribe_clear (c function)": [[172, "c.nrfy_temp_subscribe_clear"]], "nrfy_temp_subscribe_set (c function)": [[172, "c.nrfy_temp_subscribe_set"]], "nrfy_temp_task_address_get (c function)": [[172, "c.nrfy_temp_task_address_get"]], "nrfy_temp_task_trigger (c function)": [[172, "c.nrfy_temp_task_trigger"]], "nrfx_timer_base_frequency_get (c macro)": [[174, "c.NRFX_TIMER_BASE_FREQUENCY_GET"]], "nrfx_timer_default_config (c macro)": [[174, "c.NRFX_TIMER_DEFAULT_CONFIG"]], "nrfx_timer_frequency_static_check (c macro)": [[174, "c.NRFX_TIMER_FREQUENCY_STATIC_CHECK"]], "nrfx_timer_instance (c macro)": [[174, "c.NRFX_TIMER_INSTANCE"]], "nrfx_timer_inst_handler_get (c macro)": [[174, "c.NRFX_TIMER_INST_HANDLER_GET"]], "nrfx_timer_capture (c function)": [[174, "c.nrfx_timer_capture"]], "nrfx_timer_capture_get (c function)": [[174, "c.nrfx_timer_capture_get"]], "nrfx_timer_capture_task_address_get (c function)": [[174, "c.nrfx_timer_capture_task_address_get"]], "nrfx_timer_clear (c function)": [[174, "c.nrfx_timer_clear"]], "nrfx_timer_compare (c function)": [[174, "c.nrfx_timer_compare"]], "nrfx_timer_compare_event_address_get (c function)": [[174, "c.nrfx_timer_compare_event_address_get"]], "nrfx_timer_compare_int_disable (c function)": [[174, "c.nrfx_timer_compare_int_disable"]], "nrfx_timer_compare_int_enable (c function)": [[174, "c.nrfx_timer_compare_int_enable"]], "nrfx_timer_config_t (c struct)": [[174, "c.nrfx_timer_config_t"]], "nrfx_timer_config_t.bit_width (c var)": [[174, "c.nrfx_timer_config_t.bit_width"]], "nrfx_timer_config_t.frequency (c var)": [[174, "c.nrfx_timer_config_t.frequency"]], "nrfx_timer_config_t.interrupt_priority (c var)": [[174, "c.nrfx_timer_config_t.interrupt_priority"]], "nrfx_timer_config_t.mode (c var)": [[174, "c.nrfx_timer_config_t.mode"]], "nrfx_timer_config_t.p_context (c var)": [[174, "c.nrfx_timer_config_t.p_context"]], "nrfx_timer_disable (c function)": [[174, "c.nrfx_timer_disable"]], "nrfx_timer_enable (c function)": [[174, "c.nrfx_timer_enable"]], "nrfx_timer_event_address_get (c function)": [[174, "c.nrfx_timer_event_address_get"]], "nrfx_timer_event_handler_t (c type)": [[174, "c.nrfx_timer_event_handler_t"]], "nrfx_timer_extended_compare (c function)": [[174, "c.nrfx_timer_extended_compare"]], "nrfx_timer_increment (c function)": [[174, "c.nrfx_timer_increment"]], "nrfx_timer_init (c function)": [[174, "c.nrfx_timer_init"]], "nrfx_timer_init_check (c function)": [[174, "c.nrfx_timer_init_check"]], "nrfx_timer_is_enabled (c function)": [[174, "c.nrfx_timer_is_enabled"]], "nrfx_timer_ms_to_ticks (c function)": [[174, "c.nrfx_timer_ms_to_ticks"]], "nrfx_timer_pause (c function)": [[174, "c.nrfx_timer_pause"]], "nrfx_timer_reconfigure (c function)": [[174, "c.nrfx_timer_reconfigure"]], "nrfx_timer_resume (c function)": [[174, "c.nrfx_timer_resume"]], "nrfx_timer_t (c struct)": [[174, "c.nrfx_timer_t"]], "nrfx_timer_t.cc_channel_count (c var)": [[174, "c.nrfx_timer_t.cc_channel_count"]], "nrfx_timer_t.instance_id (c var)": [[174, "c.nrfx_timer_t.instance_id"]], "nrfx_timer_t.p_reg (c var)": [[174, "c.nrfx_timer_t.p_reg"]], "nrfx_timer_task_address_get (c function)": [[174, "c.nrfx_timer_task_address_get"]], "nrfx_timer_uninit (c function)": [[174, "c.nrfx_timer_uninit"]], "nrfx_timer_us_to_ticks (c function)": [[174, "c.nrfx_timer_us_to_ticks"]], "nrf_timer_all_channels_int_mask (c macro)": [[175, "c.NRF_TIMER_ALL_CHANNELS_INT_MASK"]], "nrf_timer_base_frequency_128mhz (c macro)": [[175, "c.NRF_TIMER_BASE_FREQUENCY_128MHZ"]], "nrf_timer_base_frequency_16mhz (c macro)": [[175, "c.NRF_TIMER_BASE_FREQUENCY_16MHZ"]], "nrf_timer_base_frequency_320mhz (c macro)": [[175, "c.NRF_TIMER_BASE_FREQUENCY_320MHZ"]], "nrf_timer_base_frequency_32mhz (c macro)": [[175, "c.NRF_TIMER_BASE_FREQUENCY_32MHZ"]], "nrf_timer_base_frequency_64mhz (c macro)": [[175, "c.NRF_TIMER_BASE_FREQUENCY_64MHZ"]], "nrf_timer_base_frequency_get (c macro)": [[175, "c.NRF_TIMER_BASE_FREQUENCY_GET"]], "nrf_timer_cc_channel_count (c macro)": [[175, "c.NRF_TIMER_CC_CHANNEL_COUNT"]], "nrf_timer_cc_count_max (c macro)": [[175, "c.NRF_TIMER_CC_COUNT_MAX"]], "nrf_timer_frequency_static_check (c macro)": [[175, "c.NRF_TIMER_FREQUENCY_STATIC_CHECK"]], "nrf_timer_has_cc4 (c macro)": [[175, "c.NRF_TIMER_HAS_CC4"]], "nrf_timer_has_cc5 (c macro)": [[175, "c.NRF_TIMER_HAS_CC5"]], "nrf_timer_has_cc6 (c macro)": [[175, "c.NRF_TIMER_HAS_CC6"]], "nrf_timer_has_cc7 (c macro)": [[175, "c.NRF_TIMER_HAS_CC7"]], "nrf_timer_has_low_power_mode (c macro)": [[175, "c.NRF_TIMER_HAS_LOW_POWER_MODE"]], "nrf_timer_has_one_shot (c macro)": [[175, "c.NRF_TIMER_HAS_ONE_SHOT"]], "nrf_timer_inst_get (c macro)": [[175, "c.NRF_TIMER_INST_GET"]], "nrf_timer_is_128mhz_timer (c macro)": [[175, "c.NRF_TIMER_IS_128MHZ_TIMER"]], "nrf_timer_is_320mhz_timer (c macro)": [[175, "c.NRF_TIMER_IS_320MHZ_TIMER"]], "nrf_timer_is_32mhz_timer (c macro)": [[175, "c.NRF_TIMER_IS_32MHZ_TIMER"]], "nrf_timer_is_64mhz_timer (c macro)": [[175, "c.NRF_TIMER_IS_64MHZ_TIMER"]], "nrf_timer_is_bit_width_valid (c macro)": [[175, "c.NRF_TIMER_IS_BIT_WIDTH_VALID"]], "nrf_timer_prescaler_calculate (c macro)": [[175, "c.NRF_TIMER_PRESCALER_CALCULATE"]], "nrf_timer_prescaler_max (c macro)": [[175, "c.NRF_TIMER_PRESCALER_MAX"]], "timer_bit_width_max (c macro)": [[175, "c.TIMER_BIT_WIDTH_MAX"]], "timer_max_size (c macro)": [[175, "c.TIMER_MAX_SIZE"]], "nrf_timer_bit_width_get (c function)": [[175, "c.nrf_timer_bit_width_get"]], "nrf_timer_bit_width_set (c function)": [[175, "c.nrf_timer_bit_width_set"]], "nrf_timer_bit_width_t (c enum)": [[175, "c.nrf_timer_bit_width_t"]], "nrf_timer_bit_width_t.nrf_timer_bit_width_16 (c enumerator)": [[175, "c.nrf_timer_bit_width_t.NRF_TIMER_BIT_WIDTH_16"]], "nrf_timer_bit_width_t.nrf_timer_bit_width_24 (c enumerator)": [[175, "c.nrf_timer_bit_width_t.NRF_TIMER_BIT_WIDTH_24"]], "nrf_timer_bit_width_t.nrf_timer_bit_width_32 (c enumerator)": [[175, "c.nrf_timer_bit_width_t.NRF_TIMER_BIT_WIDTH_32"]], "nrf_timer_bit_width_t.nrf_timer_bit_width_8 (c enumerator)": [[175, "c.nrf_timer_bit_width_t.NRF_TIMER_BIT_WIDTH_8"]], "nrf_timer_capture_task_get (c function)": [[175, "c.nrf_timer_capture_task_get"]], "nrf_timer_cc_channel_t (c enum)": [[175, "c.nrf_timer_cc_channel_t"]], "nrf_timer_cc_channel_t.nrf_timer_cc_channel0 (c enumerator)": [[175, "c.nrf_timer_cc_channel_t.NRF_TIMER_CC_CHANNEL0"]], "nrf_timer_cc_channel_t.nrf_timer_cc_channel1 (c enumerator)": [[175, "c.nrf_timer_cc_channel_t.NRF_TIMER_CC_CHANNEL1"]], "nrf_timer_cc_channel_t.nrf_timer_cc_channel2 (c enumerator)": [[175, "c.nrf_timer_cc_channel_t.NRF_TIMER_CC_CHANNEL2"]], "nrf_timer_cc_channel_t.nrf_timer_cc_channel3 (c enumerator)": [[175, "c.nrf_timer_cc_channel_t.NRF_TIMER_CC_CHANNEL3"]], "nrf_timer_cc_channel_t.nrf_timer_cc_channel4 (c enumerator)": [[175, "c.nrf_timer_cc_channel_t.NRF_TIMER_CC_CHANNEL4"]], "nrf_timer_cc_channel_t.nrf_timer_cc_channel5 (c enumerator)": [[175, "c.nrf_timer_cc_channel_t.NRF_TIMER_CC_CHANNEL5"]], "nrf_timer_cc_channel_t.nrf_timer_cc_channel6 (c enumerator)": [[175, "c.nrf_timer_cc_channel_t.NRF_TIMER_CC_CHANNEL6"]], "nrf_timer_cc_channel_t.nrf_timer_cc_channel7 (c enumerator)": [[175, "c.nrf_timer_cc_channel_t.NRF_TIMER_CC_CHANNEL7"]], "nrf_timer_cc_get (c function)": [[175, "c.nrf_timer_cc_get"]], "nrf_timer_cc_set (c function)": [[175, "c.nrf_timer_cc_set"]], "nrf_timer_compare_event_get (c function)": [[175, "c.nrf_timer_compare_event_get"]], "nrf_timer_compare_int_get (c function)": [[175, "c.nrf_timer_compare_int_get"]], "nrf_timer_event_address_get (c function)": [[175, "c.nrf_timer_event_address_get"]], "nrf_timer_event_check (c function)": [[175, "c.nrf_timer_event_check"]], "nrf_timer_event_clear (c function)": [[175, "c.nrf_timer_event_clear"]], "nrf_timer_event_t (c enum)": [[175, "c.nrf_timer_event_t"]], "nrf_timer_event_t.nrf_timer_event_compare0 (c enumerator)": [[175, "c.nrf_timer_event_t.NRF_TIMER_EVENT_COMPARE0"]], "nrf_timer_event_t.nrf_timer_event_compare1 (c enumerator)": [[175, "c.nrf_timer_event_t.NRF_TIMER_EVENT_COMPARE1"]], "nrf_timer_event_t.nrf_timer_event_compare2 (c enumerator)": [[175, "c.nrf_timer_event_t.NRF_TIMER_EVENT_COMPARE2"]], "nrf_timer_event_t.nrf_timer_event_compare3 (c enumerator)": [[175, "c.nrf_timer_event_t.NRF_TIMER_EVENT_COMPARE3"]], "nrf_timer_event_t.nrf_timer_event_compare4 (c enumerator)": [[175, "c.nrf_timer_event_t.NRF_TIMER_EVENT_COMPARE4"]], "nrf_timer_event_t.nrf_timer_event_compare5 (c enumerator)": [[175, "c.nrf_timer_event_t.NRF_TIMER_EVENT_COMPARE5"]], "nrf_timer_event_t.nrf_timer_event_compare6 (c enumerator)": [[175, "c.nrf_timer_event_t.NRF_TIMER_EVENT_COMPARE6"]], "nrf_timer_event_t.nrf_timer_event_compare7 (c enumerator)": [[175, "c.nrf_timer_event_t.NRF_TIMER_EVENT_COMPARE7"]], "nrf_timer_frequency_t (c enum)": [[175, "c.nrf_timer_frequency_t"]], "nrf_timer_frequency_t.nrf_timer_freq_125khz (c enumerator)": [[175, "c.nrf_timer_frequency_t.NRF_TIMER_FREQ_125kHz"]], "nrf_timer_frequency_t.nrf_timer_freq_16mhz (c enumerator)": [[175, "c.nrf_timer_frequency_t.NRF_TIMER_FREQ_16MHz"]], "nrf_timer_frequency_t.nrf_timer_freq_1mhz (c enumerator)": [[175, "c.nrf_timer_frequency_t.NRF_TIMER_FREQ_1MHz"]], "nrf_timer_frequency_t.nrf_timer_freq_250khz (c enumerator)": [[175, "c.nrf_timer_frequency_t.NRF_TIMER_FREQ_250kHz"]], "nrf_timer_frequency_t.nrf_timer_freq_2mhz (c enumerator)": [[175, "c.nrf_timer_frequency_t.NRF_TIMER_FREQ_2MHz"]], "nrf_timer_frequency_t.nrf_timer_freq_31250hz (c enumerator)": [[175, "c.nrf_timer_frequency_t.NRF_TIMER_FREQ_31250Hz"]], "nrf_timer_frequency_t.nrf_timer_freq_4mhz (c enumerator)": [[175, "c.nrf_timer_frequency_t.NRF_TIMER_FREQ_4MHz"]], "nrf_timer_frequency_t.nrf_timer_freq_500khz (c enumerator)": [[175, "c.nrf_timer_frequency_t.NRF_TIMER_FREQ_500kHz"]], "nrf_timer_frequency_t.nrf_timer_freq_62500hz (c enumerator)": [[175, "c.nrf_timer_frequency_t.NRF_TIMER_FREQ_62500Hz"]], "nrf_timer_frequency_t.nrf_timer_freq_8mhz (c enumerator)": [[175, "c.nrf_timer_frequency_t.NRF_TIMER_FREQ_8MHz"]], "nrf_timer_int_disable (c function)": [[175, "c.nrf_timer_int_disable"]], "nrf_timer_int_enable (c function)": [[175, "c.nrf_timer_int_enable"]], "nrf_timer_int_enable_check (c function)": [[175, "c.nrf_timer_int_enable_check"]], "nrf_timer_int_mask_t (c enum)": [[175, "c.nrf_timer_int_mask_t"]], "nrf_timer_int_mask_t.nrf_timer_int_compare0_mask (c enumerator)": [[175, "c.nrf_timer_int_mask_t.NRF_TIMER_INT_COMPARE0_MASK"]], "nrf_timer_int_mask_t.nrf_timer_int_compare1_mask (c enumerator)": [[175, "c.nrf_timer_int_mask_t.NRF_TIMER_INT_COMPARE1_MASK"]], "nrf_timer_int_mask_t.nrf_timer_int_compare2_mask (c enumerator)": [[175, "c.nrf_timer_int_mask_t.NRF_TIMER_INT_COMPARE2_MASK"]], "nrf_timer_int_mask_t.nrf_timer_int_compare3_mask (c enumerator)": [[175, "c.nrf_timer_int_mask_t.NRF_TIMER_INT_COMPARE3_MASK"]], "nrf_timer_int_mask_t.nrf_timer_int_compare4_mask (c enumerator)": [[175, "c.nrf_timer_int_mask_t.NRF_TIMER_INT_COMPARE4_MASK"]], "nrf_timer_int_mask_t.nrf_timer_int_compare5_mask (c enumerator)": [[175, "c.nrf_timer_int_mask_t.NRF_TIMER_INT_COMPARE5_MASK"]], "nrf_timer_int_mask_t.nrf_timer_int_compare6_mask (c enumerator)": [[175, "c.nrf_timer_int_mask_t.NRF_TIMER_INT_COMPARE6_MASK"]], "nrf_timer_int_mask_t.nrf_timer_int_compare7_mask (c enumerator)": [[175, "c.nrf_timer_int_mask_t.NRF_TIMER_INT_COMPARE7_MASK"]], "nrf_timer_mode_get (c function)": [[175, "c.nrf_timer_mode_get"]], "nrf_timer_mode_set (c function)": [[175, "c.nrf_timer_mode_set"]], "nrf_timer_mode_t (c enum)": [[175, "c.nrf_timer_mode_t"]], "nrf_timer_mode_t.nrf_timer_mode_counter (c enumerator)": [[175, "c.nrf_timer_mode_t.NRF_TIMER_MODE_COUNTER"]], "nrf_timer_mode_t.nrf_timer_mode_low_power_counter (c enumerator)": [[175, "c.nrf_timer_mode_t.NRF_TIMER_MODE_LOW_POWER_COUNTER"]], "nrf_timer_mode_t.nrf_timer_mode_timer (c enumerator)": [[175, "c.nrf_timer_mode_t.NRF_TIMER_MODE_TIMER"]], "nrf_timer_ms_to_ticks (c function)": [[175, "c.nrf_timer_ms_to_ticks"]], "nrf_timer_one_shot_disable (c function)": [[175, "c.nrf_timer_one_shot_disable"]], "nrf_timer_one_shot_enable (c function)": [[175, "c.nrf_timer_one_shot_enable"]], "nrf_timer_prescaler_get (c function)": [[175, "c.nrf_timer_prescaler_get"]], "nrf_timer_prescaler_set (c function)": [[175, "c.nrf_timer_prescaler_set"]], "nrf_timer_publish_clear (c function)": [[175, "c.nrf_timer_publish_clear"]], "nrf_timer_publish_set (c function)": [[175, "c.nrf_timer_publish_set"]], "nrf_timer_short_compare_clear_get (c function)": [[175, "c.nrf_timer_short_compare_clear_get"]], "nrf_timer_short_compare_stop_get (c function)": [[175, "c.nrf_timer_short_compare_stop_get"]], "nrf_timer_short_mask_t (c enum)": [[175, "c.nrf_timer_short_mask_t"]], "nrf_timer_short_mask_t.nrf_timer_short_compare0_clear_mask (c enumerator)": [[175, "c.nrf_timer_short_mask_t.NRF_TIMER_SHORT_COMPARE0_CLEAR_MASK"]], "nrf_timer_short_mask_t.nrf_timer_short_compare0_stop_mask (c enumerator)": [[175, "c.nrf_timer_short_mask_t.NRF_TIMER_SHORT_COMPARE0_STOP_MASK"]], "nrf_timer_short_mask_t.nrf_timer_short_compare1_clear_mask (c enumerator)": [[175, "c.nrf_timer_short_mask_t.NRF_TIMER_SHORT_COMPARE1_CLEAR_MASK"]], "nrf_timer_short_mask_t.nrf_timer_short_compare1_stop_mask (c enumerator)": [[175, "c.nrf_timer_short_mask_t.NRF_TIMER_SHORT_COMPARE1_STOP_MASK"]], "nrf_timer_short_mask_t.nrf_timer_short_compare2_clear_mask (c enumerator)": [[175, "c.nrf_timer_short_mask_t.NRF_TIMER_SHORT_COMPARE2_CLEAR_MASK"]], "nrf_timer_short_mask_t.nrf_timer_short_compare2_stop_mask (c enumerator)": [[175, "c.nrf_timer_short_mask_t.NRF_TIMER_SHORT_COMPARE2_STOP_MASK"]], "nrf_timer_short_mask_t.nrf_timer_short_compare3_clear_mask (c enumerator)": [[175, "c.nrf_timer_short_mask_t.NRF_TIMER_SHORT_COMPARE3_CLEAR_MASK"]], "nrf_timer_short_mask_t.nrf_timer_short_compare3_stop_mask (c enumerator)": [[175, "c.nrf_timer_short_mask_t.NRF_TIMER_SHORT_COMPARE3_STOP_MASK"]], "nrf_timer_short_mask_t.nrf_timer_short_compare4_clear_mask (c enumerator)": [[175, "c.nrf_timer_short_mask_t.NRF_TIMER_SHORT_COMPARE4_CLEAR_MASK"]], "nrf_timer_short_mask_t.nrf_timer_short_compare4_stop_mask (c enumerator)": [[175, "c.nrf_timer_short_mask_t.NRF_TIMER_SHORT_COMPARE4_STOP_MASK"]], "nrf_timer_short_mask_t.nrf_timer_short_compare5_clear_mask (c enumerator)": [[175, "c.nrf_timer_short_mask_t.NRF_TIMER_SHORT_COMPARE5_CLEAR_MASK"]], "nrf_timer_short_mask_t.nrf_timer_short_compare5_stop_mask (c enumerator)": [[175, "c.nrf_timer_short_mask_t.NRF_TIMER_SHORT_COMPARE5_STOP_MASK"]], "nrf_timer_short_mask_t.nrf_timer_short_compare6_clear_mask (c enumerator)": [[175, "c.nrf_timer_short_mask_t.NRF_TIMER_SHORT_COMPARE6_CLEAR_MASK"]], "nrf_timer_short_mask_t.nrf_timer_short_compare6_stop_mask (c enumerator)": [[175, "c.nrf_timer_short_mask_t.NRF_TIMER_SHORT_COMPARE6_STOP_MASK"]], "nrf_timer_short_mask_t.nrf_timer_short_compare7_clear_mask (c enumerator)": [[175, "c.nrf_timer_short_mask_t.NRF_TIMER_SHORT_COMPARE7_CLEAR_MASK"]], "nrf_timer_short_mask_t.nrf_timer_short_compare7_stop_mask (c enumerator)": [[175, "c.nrf_timer_short_mask_t.NRF_TIMER_SHORT_COMPARE7_STOP_MASK"]], "nrf_timer_shorts_disable (c function)": [[175, "c.nrf_timer_shorts_disable"]], "nrf_timer_shorts_enable (c function)": [[175, "c.nrf_timer_shorts_enable"]], "nrf_timer_shorts_set (c function)": [[175, "c.nrf_timer_shorts_set"]], "nrf_timer_subscribe_clear (c function)": [[175, "c.nrf_timer_subscribe_clear"]], "nrf_timer_subscribe_set (c function)": [[175, "c.nrf_timer_subscribe_set"]], "nrf_timer_task_address_get (c function)": [[175, "c.nrf_timer_task_address_get"]], "nrf_timer_task_t (c enum)": [[175, "c.nrf_timer_task_t"]], "nrf_timer_task_t.nrf_timer_task_capture0 (c enumerator)": [[175, "c.nrf_timer_task_t.NRF_TIMER_TASK_CAPTURE0"]], "nrf_timer_task_t.nrf_timer_task_capture1 (c enumerator)": [[175, "c.nrf_timer_task_t.NRF_TIMER_TASK_CAPTURE1"]], "nrf_timer_task_t.nrf_timer_task_capture2 (c enumerator)": [[175, "c.nrf_timer_task_t.NRF_TIMER_TASK_CAPTURE2"]], "nrf_timer_task_t.nrf_timer_task_capture3 (c enumerator)": [[175, "c.nrf_timer_task_t.NRF_TIMER_TASK_CAPTURE3"]], "nrf_timer_task_t.nrf_timer_task_capture4 (c enumerator)": [[175, "c.nrf_timer_task_t.NRF_TIMER_TASK_CAPTURE4"]], "nrf_timer_task_t.nrf_timer_task_capture5 (c enumerator)": [[175, "c.nrf_timer_task_t.NRF_TIMER_TASK_CAPTURE5"]], "nrf_timer_task_t.nrf_timer_task_capture6 (c enumerator)": [[175, "c.nrf_timer_task_t.NRF_TIMER_TASK_CAPTURE6"]], "nrf_timer_task_t.nrf_timer_task_capture7 (c enumerator)": [[175, "c.nrf_timer_task_t.NRF_TIMER_TASK_CAPTURE7"]], "nrf_timer_task_t.nrf_timer_task_clear (c enumerator)": [[175, "c.nrf_timer_task_t.NRF_TIMER_TASK_CLEAR"]], "nrf_timer_task_t.nrf_timer_task_count (c enumerator)": [[175, "c.nrf_timer_task_t.NRF_TIMER_TASK_COUNT"]], "nrf_timer_task_t.nrf_timer_task_shutdown (c enumerator)": [[175, "c.nrf_timer_task_t.NRF_TIMER_TASK_SHUTDOWN"]], "nrf_timer_task_t.nrf_timer_task_start (c enumerator)": [[175, "c.nrf_timer_task_t.NRF_TIMER_TASK_START"]], "nrf_timer_task_t.nrf_timer_task_stop (c enumerator)": [[175, "c.nrf_timer_task_t.NRF_TIMER_TASK_STOP"]], "nrf_timer_task_trigger (c function)": [[175, "c.nrf_timer_task_trigger"]], "nrf_timer_us_to_ticks (c function)": [[175, "c.nrf_timer_us_to_ticks"]], "nrfy_timer_has_one_shot (c macro)": [[176, "c.NRFY_TIMER_HAS_ONE_SHOT"]], "nrfy_timer_bit_width_get (c function)": [[176, "c.nrfy_timer_bit_width_get"]], "nrfy_timer_bit_width_set (c function)": [[176, "c.nrfy_timer_bit_width_set"]], "nrfy_timer_capture_get (c function)": [[176, "c.nrfy_timer_capture_get"]], "nrfy_timer_capture_task_get (c function)": [[176, "c.nrfy_timer_capture_task_get"]], "nrfy_timer_cc_get (c function)": [[176, "c.nrfy_timer_cc_get"]], "nrfy_timer_cc_set (c function)": [[176, "c.nrfy_timer_cc_set"]], "nrfy_timer_compare_event_get (c function)": [[176, "c.nrfy_timer_compare_event_get"]], "nrfy_timer_compare_int_get (c function)": [[176, "c.nrfy_timer_compare_int_get"]], "nrfy_timer_config_t (c struct)": [[176, "c.nrfy_timer_config_t"]], "nrfy_timer_config_t.bit_width (c var)": [[176, "c.nrfy_timer_config_t.bit_width"]], "nrfy_timer_config_t.mode (c var)": [[176, "c.nrfy_timer_config_t.mode"]], "nrfy_timer_config_t.prescaler (c var)": [[176, "c.nrfy_timer_config_t.prescaler"]], "nrfy_timer_event_address_get (c function)": [[176, "c.nrfy_timer_event_address_get"]], "nrfy_timer_event_check (c function)": [[176, "c.nrfy_timer_event_check"]], "nrfy_timer_event_clear (c function)": [[176, "c.nrfy_timer_event_clear"]], "nrfy_timer_events_process (c function)": [[176, "c.nrfy_timer_events_process"]], "nrfy_timer_int_disable (c function)": [[176, "c.nrfy_timer_int_disable"]], "nrfy_timer_int_enable (c function)": [[176, "c.nrfy_timer_int_enable"]], "nrfy_timer_int_enable_check (c function)": [[176, "c.nrfy_timer_int_enable_check"]], "nrfy_timer_int_init (c function)": [[176, "c.nrfy_timer_int_init"]], "nrfy_timer_int_uninit (c function)": [[176, "c.nrfy_timer_int_uninit"]], "nrfy_timer_mode_get (c function)": [[176, "c.nrfy_timer_mode_get"]], "nrfy_timer_mode_set (c function)": [[176, "c.nrfy_timer_mode_set"]], "nrfy_timer_one_shot_disable (c function)": [[176, "c.nrfy_timer_one_shot_disable"]], "nrfy_timer_one_shot_enable (c function)": [[176, "c.nrfy_timer_one_shot_enable"]], "nrfy_timer_periph_configure (c function)": [[176, "c.nrfy_timer_periph_configure"]], "nrfy_timer_prescaler_get (c function)": [[176, "c.nrfy_timer_prescaler_get"]], "nrfy_timer_prescaler_set (c function)": [[176, "c.nrfy_timer_prescaler_set"]], "nrfy_timer_publish_clear (c function)": [[176, "c.nrfy_timer_publish_clear"]], "nrfy_timer_publish_set (c function)": [[176, "c.nrfy_timer_publish_set"]], "nrfy_timer_shorts_disable (c function)": [[176, "c.nrfy_timer_shorts_disable"]], "nrfy_timer_shorts_enable (c function)": [[176, "c.nrfy_timer_shorts_enable"]], "nrfy_timer_shorts_set (c function)": [[176, "c.nrfy_timer_shorts_set"]], "nrfy_timer_subscribe_clear (c function)": [[176, "c.nrfy_timer_subscribe_clear"]], "nrfy_timer_subscribe_set (c function)": [[176, "c.nrfy_timer_subscribe_set"]], "nrfy_timer_task_address_get (c function)": [[176, "c.nrfy_timer_task_address_get"]], "nrfy_timer_task_trigger (c function)": [[176, "c.nrfy_timer_task_trigger"]], "nrfx_twi_default_config (c macro)": [[178, "c.NRFX_TWI_DEFAULT_CONFIG"]], "nrfx_twi_flag_no_xfer_evt_handler (c macro)": [[178, "c.NRFX_TWI_FLAG_NO_XFER_EVT_HANDLER"]], "nrfx_twi_flag_suspend (c macro)": [[178, "c.NRFX_TWI_FLAG_SUSPEND"]], "nrfx_twi_flag_tx_no_stop (c macro)": [[178, "c.NRFX_TWI_FLAG_TX_NO_STOP"]], "nrfx_twi_instance (c macro)": [[178, "c.NRFX_TWI_INSTANCE"]], "nrfx_twi_inst_handler_get (c macro)": [[178, "c.NRFX_TWI_INST_HANDLER_GET"]], "nrfx_twi_xfer_desc_rx (c macro)": [[178, "c.NRFX_TWI_XFER_DESC_RX"]], "nrfx_twi_xfer_desc_tx (c macro)": [[178, "c.NRFX_TWI_XFER_DESC_TX"]], "nrfx_twi_xfer_desc_txrx (c macro)": [[178, "c.NRFX_TWI_XFER_DESC_TXRX"]], "nrfx_twi_xfer_desc_txtx (c macro)": [[178, "c.NRFX_TWI_XFER_DESC_TXTX"]], "nrfx_twi_bus_recover (c function)": [[178, "c.nrfx_twi_bus_recover"]], "nrfx_twi_config_t (c struct)": [[178, "c.nrfx_twi_config_t"]], "nrfx_twi_config_t.frequency (c var)": [[178, "c.nrfx_twi_config_t.frequency"]], "nrfx_twi_config_t.hold_bus_uninit (c var)": [[178, "c.nrfx_twi_config_t.hold_bus_uninit"]], "nrfx_twi_config_t.interrupt_priority (c var)": [[178, "c.nrfx_twi_config_t.interrupt_priority"]], "nrfx_twi_config_t.scl (c var)": [[178, "c.nrfx_twi_config_t.scl"]], "nrfx_twi_config_t.sda (c var)": [[178, "c.nrfx_twi_config_t.sda"]], "nrfx_twi_config_t.skip_gpio_cfg (c var)": [[178, "c.nrfx_twi_config_t.skip_gpio_cfg"]], "nrfx_twi_config_t.skip_psel_cfg (c var)": [[178, "c.nrfx_twi_config_t.skip_psel_cfg"]], "nrfx_twi_data_count_get (c function)": [[178, "c.nrfx_twi_data_count_get"]], "nrfx_twi_disable (c function)": [[178, "c.nrfx_twi_disable"]], "nrfx_twi_enable (c function)": [[178, "c.nrfx_twi_enable"]], "nrfx_twi_evt_handler_t (c type)": [[178, "c.nrfx_twi_evt_handler_t"]], "nrfx_twi_evt_t (c struct)": [[178, "c.nrfx_twi_evt_t"]], "nrfx_twi_evt_t.type (c var)": [[178, "c.nrfx_twi_evt_t.type"]], "nrfx_twi_evt_t.xfer_desc (c var)": [[178, "c.nrfx_twi_evt_t.xfer_desc"]], "nrfx_twi_evt_type_t (c enum)": [[178, "c.nrfx_twi_evt_type_t"]], "nrfx_twi_evt_type_t.nrfx_twi_evt_address_nack (c enumerator)": [[178, "c.nrfx_twi_evt_type_t.NRFX_TWI_EVT_ADDRESS_NACK"]], "nrfx_twi_evt_type_t.nrfx_twi_evt_bus_error (c enumerator)": [[178, "c.nrfx_twi_evt_type_t.NRFX_TWI_EVT_BUS_ERROR"]], "nrfx_twi_evt_type_t.nrfx_twi_evt_data_nack (c enumerator)": [[178, "c.nrfx_twi_evt_type_t.NRFX_TWI_EVT_DATA_NACK"]], "nrfx_twi_evt_type_t.nrfx_twi_evt_done (c enumerator)": [[178, "c.nrfx_twi_evt_type_t.NRFX_TWI_EVT_DONE"]], "nrfx_twi_evt_type_t.nrfx_twi_evt_overrun (c enumerator)": [[178, "c.nrfx_twi_evt_type_t.NRFX_TWI_EVT_OVERRUN"]], "nrfx_twi_init (c function)": [[178, "c.nrfx_twi_init"]], "nrfx_twi_init_check (c function)": [[178, "c.nrfx_twi_init_check"]], "nrfx_twi_is_busy (c function)": [[178, "c.nrfx_twi_is_busy"]], "nrfx_twi_reconfigure (c function)": [[178, "c.nrfx_twi_reconfigure"]], "nrfx_twi_stopped_event_get (c function)": [[178, "c.nrfx_twi_stopped_event_get"]], "nrfx_twi_t (c struct)": [[178, "c.nrfx_twi_t"]], "nrfx_twi_t.drv_inst_idx (c var)": [[178, "c.nrfx_twi_t.drv_inst_idx"]], "nrfx_twi_t.p_twi (c var)": [[178, "c.nrfx_twi_t.p_twi"]], "nrfx_twi_uninit (c function)": [[178, "c.nrfx_twi_uninit"]], "nrfx_twi_xfer (c function)": [[178, "c.nrfx_twi_xfer"]], "nrfx_twi_xfer_desc_t (c struct)": [[178, "c.nrfx_twi_xfer_desc_t"]], "nrfx_twi_xfer_desc_t.address (c var)": [[178, "c.nrfx_twi_xfer_desc_t.address"]], "nrfx_twi_xfer_desc_t.p_primary_buf (c var)": [[178, "c.nrfx_twi_xfer_desc_t.p_primary_buf"]], "nrfx_twi_xfer_desc_t.p_secondary_buf (c var)": [[178, "c.nrfx_twi_xfer_desc_t.p_secondary_buf"]], "nrfx_twi_xfer_desc_t.primary_length (c var)": [[178, "c.nrfx_twi_xfer_desc_t.primary_length"]], "nrfx_twi_xfer_desc_t.secondary_length (c var)": [[178, "c.nrfx_twi_xfer_desc_t.secondary_length"]], "nrfx_twi_xfer_desc_t.type (c var)": [[178, "c.nrfx_twi_xfer_desc_t.type"]], "nrfx_twi_xfer_type_t (c enum)": [[178, "c.nrfx_twi_xfer_type_t"]], "nrfx_twi_xfer_type_t.nrfx_twi_xfer_rx (c enumerator)": [[178, "c.nrfx_twi_xfer_type_t.NRFX_TWI_XFER_RX"]], "nrfx_twi_xfer_type_t.nrfx_twi_xfer_tx (c enumerator)": [[178, "c.nrfx_twi_xfer_type_t.NRFX_TWI_XFER_TX"]], "nrfx_twi_xfer_type_t.nrfx_twi_xfer_txrx (c enumerator)": [[178, "c.nrfx_twi_xfer_type_t.NRFX_TWI_XFER_TXRX"]], "nrfx_twi_xfer_type_t.nrfx_twi_xfer_txtx (c enumerator)": [[178, "c.nrfx_twi_xfer_type_t.NRFX_TWI_XFER_TXTX"]], "nrf_twi_inst_get (c macro)": [[179, "c.NRF_TWI_INST_GET"]], "nrf_twi_address_set (c function)": [[179, "c.nrf_twi_address_set"]], "nrf_twi_disable (c function)": [[179, "c.nrf_twi_disable"]], "nrf_twi_enable (c function)": [[179, "c.nrf_twi_enable"]], "nrf_twi_error_t (c enum)": [[179, "c.nrf_twi_error_t"]], "nrf_twi_error_t.nrf_twi_error_address_nack (c enumerator)": [[179, "c.nrf_twi_error_t.NRF_TWI_ERROR_ADDRESS_NACK"]], "nrf_twi_error_t.nrf_twi_error_data_nack (c enumerator)": [[179, "c.nrf_twi_error_t.NRF_TWI_ERROR_DATA_NACK"]], "nrf_twi_error_t.nrf_twi_error_overrun (c enumerator)": [[179, "c.nrf_twi_error_t.NRF_TWI_ERROR_OVERRUN"]], "nrf_twi_errorsrc_get_and_clear (c function)": [[179, "c.nrf_twi_errorsrc_get_and_clear"]], "nrf_twi_event_address_get (c function)": [[179, "c.nrf_twi_event_address_get"]], "nrf_twi_event_check (c function)": [[179, "c.nrf_twi_event_check"]], "nrf_twi_event_clear (c function)": [[179, "c.nrf_twi_event_clear"]], "nrf_twi_event_t (c enum)": [[179, "c.nrf_twi_event_t"]], "nrf_twi_event_t.nrf_twi_event_bb (c enumerator)": [[179, "c.nrf_twi_event_t.NRF_TWI_EVENT_BB"]], "nrf_twi_event_t.nrf_twi_event_error (c enumerator)": [[179, "c.nrf_twi_event_t.NRF_TWI_EVENT_ERROR"]], "nrf_twi_event_t.nrf_twi_event_rxdready (c enumerator)": [[179, "c.nrf_twi_event_t.NRF_TWI_EVENT_RXDREADY"]], "nrf_twi_event_t.nrf_twi_event_stopped (c enumerator)": [[179, "c.nrf_twi_event_t.NRF_TWI_EVENT_STOPPED"]], "nrf_twi_event_t.nrf_twi_event_suspended (c enumerator)": [[179, "c.nrf_twi_event_t.NRF_TWI_EVENT_SUSPENDED"]], "nrf_twi_event_t.nrf_twi_event_txdsent (c enumerator)": [[179, "c.nrf_twi_event_t.NRF_TWI_EVENT_TXDSENT"]], "nrf_twi_frequency_set (c function)": [[179, "c.nrf_twi_frequency_set"]], "nrf_twi_frequency_t (c enum)": [[179, "c.nrf_twi_frequency_t"]], "nrf_twi_frequency_t.nrf_twi_freq_100k (c enumerator)": [[179, "c.nrf_twi_frequency_t.NRF_TWI_FREQ_100K"]], "nrf_twi_frequency_t.nrf_twi_freq_250k (c enumerator)": [[179, "c.nrf_twi_frequency_t.NRF_TWI_FREQ_250K"]], "nrf_twi_frequency_t.nrf_twi_freq_400k (c enumerator)": [[179, "c.nrf_twi_frequency_t.NRF_TWI_FREQ_400K"]], "nrf_twi_int_disable (c function)": [[179, "c.nrf_twi_int_disable"]], "nrf_twi_int_enable (c function)": [[179, "c.nrf_twi_int_enable"]], "nrf_twi_int_enable_check (c function)": [[179, "c.nrf_twi_int_enable_check"]], "nrf_twi_int_mask_t (c enum)": [[179, "c.nrf_twi_int_mask_t"]], "nrf_twi_int_mask_t.nrf_twi_all_ints_mask (c enumerator)": [[179, "c.nrf_twi_int_mask_t.NRF_TWI_ALL_INTS_MASK"]], "nrf_twi_int_mask_t.nrf_twi_int_bb_mask (c enumerator)": [[179, "c.nrf_twi_int_mask_t.NRF_TWI_INT_BB_MASK"]], "nrf_twi_int_mask_t.nrf_twi_int_error_mask (c enumerator)": [[179, "c.nrf_twi_int_mask_t.NRF_TWI_INT_ERROR_MASK"]], "nrf_twi_int_mask_t.nrf_twi_int_rxdready_mask (c enumerator)": [[179, "c.nrf_twi_int_mask_t.NRF_TWI_INT_RXDREADY_MASK"]], "nrf_twi_int_mask_t.nrf_twi_int_stopped_mask (c enumerator)": [[179, "c.nrf_twi_int_mask_t.NRF_TWI_INT_STOPPED_MASK"]], "nrf_twi_int_mask_t.nrf_twi_int_suspended_mask (c enumerator)": [[179, "c.nrf_twi_int_mask_t.NRF_TWI_INT_SUSPENDED_MASK"]], "nrf_twi_int_mask_t.nrf_twi_int_txdsent_mask (c enumerator)": [[179, "c.nrf_twi_int_mask_t.NRF_TWI_INT_TXDSENT_MASK"]], "nrf_twi_pins_set (c function)": [[179, "c.nrf_twi_pins_set"]], "nrf_twi_rxd_get (c function)": [[179, "c.nrf_twi_rxd_get"]], "nrf_twi_scl_pin_get (c function)": [[179, "c.nrf_twi_scl_pin_get"]], "nrf_twi_sda_pin_get (c function)": [[179, "c.nrf_twi_sda_pin_get"]], "nrf_twi_short_mask_t (c enum)": [[179, "c.nrf_twi_short_mask_t"]], "nrf_twi_short_mask_t.nrf_twi_all_shorts_mask (c enumerator)": [[179, "c.nrf_twi_short_mask_t.NRF_TWI_ALL_SHORTS_MASK"]], "nrf_twi_short_mask_t.nrf_twi_short_bb_stop_mask (c enumerator)": [[179, "c.nrf_twi_short_mask_t.NRF_TWI_SHORT_BB_STOP_MASK"]], "nrf_twi_short_mask_t.nrf_twi_short_bb_suspend_mask (c enumerator)": [[179, "c.nrf_twi_short_mask_t.NRF_TWI_SHORT_BB_SUSPEND_MASK"]], "nrf_twi_shorts_disable (c function)": [[179, "c.nrf_twi_shorts_disable"]], "nrf_twi_shorts_enable (c function)": [[179, "c.nrf_twi_shorts_enable"]], "nrf_twi_shorts_set (c function)": [[179, "c.nrf_twi_shorts_set"]], "nrf_twi_task_address_get (c function)": [[179, "c.nrf_twi_task_address_get"]], "nrf_twi_task_t (c enum)": [[179, "c.nrf_twi_task_t"]], "nrf_twi_task_t.nrf_twi_task_resume (c enumerator)": [[179, "c.nrf_twi_task_t.NRF_TWI_TASK_RESUME"]], "nrf_twi_task_t.nrf_twi_task_startrx (c enumerator)": [[179, "c.nrf_twi_task_t.NRF_TWI_TASK_STARTRX"]], "nrf_twi_task_t.nrf_twi_task_starttx (c enumerator)": [[179, "c.nrf_twi_task_t.NRF_TWI_TASK_STARTTX"]], "nrf_twi_task_t.nrf_twi_task_stop (c enumerator)": [[179, "c.nrf_twi_task_t.NRF_TWI_TASK_STOP"]], "nrf_twi_task_t.nrf_twi_task_suspend (c enumerator)": [[179, "c.nrf_twi_task_t.NRF_TWI_TASK_SUSPEND"]], "nrf_twi_task_trigger (c function)": [[179, "c.nrf_twi_task_trigger"]], "nrf_twi_txd_set (c function)": [[179, "c.nrf_twi_txd_set"]], "nrfx_twim_default_config (c macro)": [[181, "c.NRFX_TWIM_DEFAULT_CONFIG"]], "nrfx_twim_flag_hold_xfer (c macro)": [[181, "c.NRFX_TWIM_FLAG_HOLD_XFER"]], "nrfx_twim_flag_no_spurious_stop_check (c macro)": [[181, "c.NRFX_TWIM_FLAG_NO_SPURIOUS_STOP_CHECK"]], "nrfx_twim_flag_no_xfer_evt_handler (c macro)": [[181, "c.NRFX_TWIM_FLAG_NO_XFER_EVT_HANDLER"]], "nrfx_twim_flag_repeated_xfer (c macro)": [[181, "c.NRFX_TWIM_FLAG_REPEATED_XFER"]], "nrfx_twim_flag_rx_postinc (c macro)": [[181, "c.NRFX_TWIM_FLAG_RX_POSTINC"]], "nrfx_twim_flag_tx_no_stop (c macro)": [[181, "c.NRFX_TWIM_FLAG_TX_NO_STOP"]], "nrfx_twim_flag_tx_postinc (c macro)": [[181, "c.NRFX_TWIM_FLAG_TX_POSTINC"]], "nrfx_twim_instance (c macro)": [[181, "c.NRFX_TWIM_INSTANCE"]], "nrfx_twim_inst_handler_get (c macro)": [[181, "c.NRFX_TWIM_INST_HANDLER_GET"]], "nrfx_twim_xfer_desc (c macro)": [[181, "c.NRFX_TWIM_XFER_DESC"]], "nrfx_twim_xfer_desc_rx (c macro)": [[181, "c.NRFX_TWIM_XFER_DESC_RX"]], "nrfx_twim_xfer_desc_tx (c macro)": [[181, "c.NRFX_TWIM_XFER_DESC_TX"]], "nrfx_twim_xfer_desc_txrx (c macro)": [[181, "c.NRFX_TWIM_XFER_DESC_TXRX"]], "nrfx_twim_xfer_desc_txtx (c macro)": [[181, "c.NRFX_TWIM_XFER_DESC_TXTX"]], "nrfx_twim_bus_recover (c function)": [[181, "c.nrfx_twim_bus_recover"]], "nrfx_twim_config_t (c struct)": [[181, "c.nrfx_twim_config_t"]], "nrfx_twim_config_t.frequency (c var)": [[181, "c.nrfx_twim_config_t.frequency"]], "nrfx_twim_config_t.hold_bus_uninit (c var)": [[181, "c.nrfx_twim_config_t.hold_bus_uninit"]], "nrfx_twim_config_t.interrupt_priority (c var)": [[181, "c.nrfx_twim_config_t.interrupt_priority"]], "nrfx_twim_config_t.scl_pin (c var)": [[181, "c.nrfx_twim_config_t.scl_pin"]], "nrfx_twim_config_t.sda_pin (c var)": [[181, "c.nrfx_twim_config_t.sda_pin"]], "nrfx_twim_config_t.skip_gpio_cfg (c var)": [[181, "c.nrfx_twim_config_t.skip_gpio_cfg"]], "nrfx_twim_config_t.skip_psel_cfg (c var)": [[181, "c.nrfx_twim_config_t.skip_psel_cfg"]], "nrfx_twim_disable (c function)": [[181, "c.nrfx_twim_disable"]], "nrfx_twim_enable (c function)": [[181, "c.nrfx_twim_enable"]], "nrfx_twim_evt_handler_t (c type)": [[181, "c.nrfx_twim_evt_handler_t"]], "nrfx_twim_evt_t (c struct)": [[181, "c.nrfx_twim_evt_t"]], "nrfx_twim_evt_t.type (c var)": [[181, "c.nrfx_twim_evt_t.type"]], "nrfx_twim_evt_t.xfer_desc (c var)": [[181, "c.nrfx_twim_evt_t.xfer_desc"]], "nrfx_twim_evt_type_t (c enum)": [[181, "c.nrfx_twim_evt_type_t"]], "nrfx_twim_evt_type_t.nrfx_twim_evt_address_nack (c enumerator)": [[181, "c.nrfx_twim_evt_type_t.NRFX_TWIM_EVT_ADDRESS_NACK"]], "nrfx_twim_evt_type_t.nrfx_twim_evt_bus_error (c enumerator)": [[181, "c.nrfx_twim_evt_type_t.NRFX_TWIM_EVT_BUS_ERROR"]], "nrfx_twim_evt_type_t.nrfx_twim_evt_data_nack (c enumerator)": [[181, "c.nrfx_twim_evt_type_t.NRFX_TWIM_EVT_DATA_NACK"]], "nrfx_twim_evt_type_t.nrfx_twim_evt_done (c enumerator)": [[181, "c.nrfx_twim_evt_type_t.NRFX_TWIM_EVT_DONE"]], "nrfx_twim_evt_type_t.nrfx_twim_evt_overrun (c enumerator)": [[181, "c.nrfx_twim_evt_type_t.NRFX_TWIM_EVT_OVERRUN"]], "nrfx_twim_init (c function)": [[181, "c.nrfx_twim_init"]], "nrfx_twim_init_check (c function)": [[181, "c.nrfx_twim_init_check"]], "nrfx_twim_is_busy (c function)": [[181, "c.nrfx_twim_is_busy"]], "nrfx_twim_reconfigure (c function)": [[181, "c.nrfx_twim_reconfigure"]], "nrfx_twim_start_task_address_get (c function)": [[181, "c.nrfx_twim_start_task_address_get"]], "nrfx_twim_stopped_event_address_get (c function)": [[181, "c.nrfx_twim_stopped_event_address_get"]], "nrfx_twim_t (c struct)": [[181, "c.nrfx_twim_t"]], "nrfx_twim_t.drv_inst_idx (c var)": [[181, "c.nrfx_twim_t.drv_inst_idx"]], "nrfx_twim_t.p_twim (c var)": [[181, "c.nrfx_twim_t.p_twim"]], "nrfx_twim_uninit (c function)": [[181, "c.nrfx_twim_uninit"]], "nrfx_twim_xfer (c function)": [[181, "c.nrfx_twim_xfer"]], "nrfx_twim_xfer_desc_t (c struct)": [[181, "c.nrfx_twim_xfer_desc_t"]], "nrfx_twim_xfer_desc_t.address (c var)": [[181, "c.nrfx_twim_xfer_desc_t.address"]], "nrfx_twim_xfer_desc_t.p_primary_buf (c var)": [[181, "c.nrfx_twim_xfer_desc_t.p_primary_buf"]], "nrfx_twim_xfer_desc_t.p_secondary_buf (c var)": [[181, "c.nrfx_twim_xfer_desc_t.p_secondary_buf"]], "nrfx_twim_xfer_desc_t.primary_length (c var)": [[181, "c.nrfx_twim_xfer_desc_t.primary_length"]], "nrfx_twim_xfer_desc_t.secondary_length (c var)": [[181, "c.nrfx_twim_xfer_desc_t.secondary_length"]], "nrfx_twim_xfer_desc_t.type (c var)": [[181, "c.nrfx_twim_xfer_desc_t.type"]], "nrfx_twim_xfer_type_t (c enum)": [[181, "c.nrfx_twim_xfer_type_t"]], "nrfx_twim_xfer_type_t.nrfx_twim_xfer_rx (c enumerator)": [[181, "c.nrfx_twim_xfer_type_t.NRFX_TWIM_XFER_RX"]], "nrfx_twim_xfer_type_t.nrfx_twim_xfer_tx (c enumerator)": [[181, "c.nrfx_twim_xfer_type_t.NRFX_TWIM_XFER_TX"]], "nrfx_twim_xfer_type_t.nrfx_twim_xfer_txrx (c enumerator)": [[181, "c.nrfx_twim_xfer_type_t.NRFX_TWIM_XFER_TXRX"]], "nrfx_twim_xfer_type_t.nrfx_twim_xfer_txtx (c enumerator)": [[181, "c.nrfx_twim_xfer_type_t.NRFX_TWIM_XFER_TXTX"]], "nrf_twim_dma_rx_pattern_max_count (c macro)": [[182, "c.NRF_TWIM_DMA_RX_PATTERN_MAX_COUNT"]], "nrf_twim_has_1000_khz_freq (c macro)": [[182, "c.NRF_TWIM_HAS_1000_KHZ_FREQ"]], "nrf_twim_has_array_list (c macro)": [[182, "c.NRF_TWIM_HAS_ARRAY_LIST"]], "nrf_twim_has_bus_error_events (c macro)": [[182, "c.NRF_TWIM_HAS_BUS_ERROR_EVENTS"]], "nrf_twim_has_dma_currentamount_reg (c macro)": [[182, "c.NRF_TWIM_HAS_DMA_CURRENTAMOUNT_REG"]], "nrf_twim_has_dma_reg (c macro)": [[182, "c.NRF_TWIM_HAS_DMA_REG"]], "nrf_twim_has_dma_shorts (c macro)": [[182, "c.NRF_TWIM_HAS_DMA_SHORTS"]], "nrf_twim_has_dma_tasks_events (c macro)": [[182, "c.NRF_TWIM_HAS_DMA_TASKS_EVENTS"]], "nrf_twim_inst_get (c macro)": [[182, "c.NRF_TWIM_INST_GET"]], "nrf_twim_address_get (c function)": [[182, "c.nrf_twim_address_get"]], "nrf_twim_address_set (c function)": [[182, "c.nrf_twim_address_set"]], "nrf_twim_disable (c function)": [[182, "c.nrf_twim_disable"]], "nrf_twim_enable (c function)": [[182, "c.nrf_twim_enable"]], "nrf_twim_error_t (c enum)": [[182, "c.nrf_twim_error_t"]], "nrf_twim_error_t.nrf_twim_error_address_nack (c enumerator)": [[182, "c.nrf_twim_error_t.NRF_TWIM_ERROR_ADDRESS_NACK"]], "nrf_twim_error_t.nrf_twim_error_data_nack (c enumerator)": [[182, "c.nrf_twim_error_t.NRF_TWIM_ERROR_DATA_NACK"]], "nrf_twim_error_t.nrf_twim_error_overrun (c enumerator)": [[182, "c.nrf_twim_error_t.NRF_TWIM_ERROR_OVERRUN"]], "nrf_twim_errorsrc_get_and_clear (c function)": [[182, "c.nrf_twim_errorsrc_get_and_clear"]], "nrf_twim_event_address_get (c function)": [[182, "c.nrf_twim_event_address_get"]], "nrf_twim_event_check (c function)": [[182, "c.nrf_twim_event_check"]], "nrf_twim_event_clear (c function)": [[182, "c.nrf_twim_event_clear"]], "nrf_twim_event_t (c enum)": [[182, "c.nrf_twim_event_t"]], "nrf_twim_event_t.nrf_twim_event_endrx (c enumerator)": [[182, "c.nrf_twim_event_t.NRF_TWIM_EVENT_ENDRX"]], "nrf_twim_event_t.nrf_twim_event_endtx (c enumerator)": [[182, "c.nrf_twim_event_t.NRF_TWIM_EVENT_ENDTX"]], "nrf_twim_event_t.nrf_twim_event_error (c enumerator)": [[182, "c.nrf_twim_event_t.NRF_TWIM_EVENT_ERROR"]], "nrf_twim_event_t.nrf_twim_event_lastrx (c enumerator)": [[182, "c.nrf_twim_event_t.NRF_TWIM_EVENT_LASTRX"]], "nrf_twim_event_t.nrf_twim_event_lasttx (c enumerator)": [[182, "c.nrf_twim_event_t.NRF_TWIM_EVENT_LASTTX"]], "nrf_twim_event_t.nrf_twim_event_rxbuserror (c enumerator)": [[182, "c.nrf_twim_event_t.NRF_TWIM_EVENT_RXBUSERROR"]], "nrf_twim_event_t.nrf_twim_event_rxmatch0 (c enumerator)": [[182, "c.nrf_twim_event_t.NRF_TWIM_EVENT_RXMATCH0"]], "nrf_twim_event_t.nrf_twim_event_rxmatch1 (c enumerator)": [[182, "c.nrf_twim_event_t.NRF_TWIM_EVENT_RXMATCH1"]], "nrf_twim_event_t.nrf_twim_event_rxmatch2 (c enumerator)": [[182, "c.nrf_twim_event_t.NRF_TWIM_EVENT_RXMATCH2"]], "nrf_twim_event_t.nrf_twim_event_rxmatch3 (c enumerator)": [[182, "c.nrf_twim_event_t.NRF_TWIM_EVENT_RXMATCH3"]], "nrf_twim_event_t.nrf_twim_event_rxstarted (c enumerator)": [[182, "c.nrf_twim_event_t.NRF_TWIM_EVENT_RXSTARTED"]], "nrf_twim_event_t.nrf_twim_event_stopped (c enumerator)": [[182, "c.nrf_twim_event_t.NRF_TWIM_EVENT_STOPPED"]], "nrf_twim_event_t.nrf_twim_event_suspended (c enumerator)": [[182, "c.nrf_twim_event_t.NRF_TWIM_EVENT_SUSPENDED"]], "nrf_twim_event_t.nrf_twim_event_txbuserror (c enumerator)": [[182, "c.nrf_twim_event_t.NRF_TWIM_EVENT_TXBUSERROR"]], "nrf_twim_event_t.nrf_twim_event_txstarted (c enumerator)": [[182, "c.nrf_twim_event_t.NRF_TWIM_EVENT_TXSTARTED"]], "nrf_twim_frequency_set (c function)": [[182, "c.nrf_twim_frequency_set"]], "nrf_twim_frequency_t (c enum)": [[182, "c.nrf_twim_frequency_t"]], "nrf_twim_frequency_t.nrf_twim_freq_1000k (c enumerator)": [[182, "c.nrf_twim_frequency_t.NRF_TWIM_FREQ_1000K"]], "nrf_twim_frequency_t.nrf_twim_freq_100k (c enumerator)": [[182, "c.nrf_twim_frequency_t.NRF_TWIM_FREQ_100K"]], "nrf_twim_frequency_t.nrf_twim_freq_250k (c enumerator)": [[182, "c.nrf_twim_frequency_t.NRF_TWIM_FREQ_250K"]], "nrf_twim_frequency_t.nrf_twim_freq_400k (c enumerator)": [[182, "c.nrf_twim_frequency_t.NRF_TWIM_FREQ_400K"]], "nrf_twim_int_disable (c function)": [[182, "c.nrf_twim_int_disable"]], "nrf_twim_int_enable (c function)": [[182, "c.nrf_twim_int_enable"]], "nrf_twim_int_enable_check (c function)": [[182, "c.nrf_twim_int_enable_check"]], "nrf_twim_int_mask_t (c enum)": [[182, "c.nrf_twim_int_mask_t"]], "nrf_twim_int_mask_t.nrf_twim_all_ints_mask (c enumerator)": [[182, "c.nrf_twim_int_mask_t.NRF_TWIM_ALL_INTS_MASK"]], "nrf_twim_int_mask_t.nrf_twim_int_endrx_mask (c enumerator)": [[182, "c.nrf_twim_int_mask_t.NRF_TWIM_INT_ENDRX_MASK"]], "nrf_twim_int_mask_t.nrf_twim_int_endtx_mask (c enumerator)": [[182, "c.nrf_twim_int_mask_t.NRF_TWIM_INT_ENDTX_MASK"]], "nrf_twim_int_mask_t.nrf_twim_int_error_mask (c enumerator)": [[182, "c.nrf_twim_int_mask_t.NRF_TWIM_INT_ERROR_MASK"]], "nrf_twim_int_mask_t.nrf_twim_int_lastrx_mask (c enumerator)": [[182, "c.nrf_twim_int_mask_t.NRF_TWIM_INT_LASTRX_MASK"]], "nrf_twim_int_mask_t.nrf_twim_int_lasttx_mask (c enumerator)": [[182, "c.nrf_twim_int_mask_t.NRF_TWIM_INT_LASTTX_MASK"]], "nrf_twim_int_mask_t.nrf_twim_int_rxbuserror_mask (c enumerator)": [[182, "c.nrf_twim_int_mask_t.NRF_TWIM_INT_RXBUSERROR_MASK"]], "nrf_twim_int_mask_t.nrf_twim_int_rxmatch0_mask (c enumerator)": [[182, "c.nrf_twim_int_mask_t.NRF_TWIM_INT_RXMATCH0_MASK"]], "nrf_twim_int_mask_t.nrf_twim_int_rxmatch1_mask (c enumerator)": [[182, "c.nrf_twim_int_mask_t.NRF_TWIM_INT_RXMATCH1_MASK"]], "nrf_twim_int_mask_t.nrf_twim_int_rxmatch2_mask (c enumerator)": [[182, "c.nrf_twim_int_mask_t.NRF_TWIM_INT_RXMATCH2_MASK"]], "nrf_twim_int_mask_t.nrf_twim_int_rxmatch3_mask (c enumerator)": [[182, "c.nrf_twim_int_mask_t.NRF_TWIM_INT_RXMATCH3_MASK"]], "nrf_twim_int_mask_t.nrf_twim_int_rxready_mask (c enumerator)": [[182, "c.nrf_twim_int_mask_t.NRF_TWIM_INT_RXREADY_MASK"]], "nrf_twim_int_mask_t.nrf_twim_int_rxstarted_mask (c enumerator)": [[182, "c.nrf_twim_int_mask_t.NRF_TWIM_INT_RXSTARTED_MASK"]], "nrf_twim_int_mask_t.nrf_twim_int_stopped_mask (c enumerator)": [[182, "c.nrf_twim_int_mask_t.NRF_TWIM_INT_STOPPED_MASK"]], "nrf_twim_int_mask_t.nrf_twim_int_suspended_mask (c enumerator)": [[182, "c.nrf_twim_int_mask_t.NRF_TWIM_INT_SUSPENDED_MASK"]], "nrf_twim_int_mask_t.nrf_twim_int_txbuserror_mask (c enumerator)": [[182, "c.nrf_twim_int_mask_t.NRF_TWIM_INT_TXBUSERROR_MASK"]], "nrf_twim_int_mask_t.nrf_twim_int_txready_mask (c enumerator)": [[182, "c.nrf_twim_int_mask_t.NRF_TWIM_INT_TXREADY_MASK"]], "nrf_twim_int_mask_t.nrf_twim_int_txstarted_mask (c enumerator)": [[182, "c.nrf_twim_int_mask_t.NRF_TWIM_INT_TXSTARTED_MASK"]], "nrf_twim_pins_set (c function)": [[182, "c.nrf_twim_pins_set"]], "nrf_twim_publish_clear (c function)": [[182, "c.nrf_twim_publish_clear"]], "nrf_twim_publish_set (c function)": [[182, "c.nrf_twim_publish_set"]], "nrf_twim_rx_buffer_set (c function)": [[182, "c.nrf_twim_rx_buffer_set"]], "nrf_twim_rx_list_disable (c function)": [[182, "c.nrf_twim_rx_list_disable"]], "nrf_twim_rx_list_enable (c function)": [[182, "c.nrf_twim_rx_list_enable"]], "nrf_twim_rx_pattern_match_candidate_get (c function)": [[182, "c.nrf_twim_rx_pattern_match_candidate_get"]], "nrf_twim_rx_pattern_match_candidate_set (c function)": [[182, "c.nrf_twim_rx_pattern_match_candidate_set"]], "nrf_twim_rx_pattern_match_enable_check (c function)": [[182, "c.nrf_twim_rx_pattern_match_enable_check"]], "nrf_twim_rx_pattern_match_enable_set (c function)": [[182, "c.nrf_twim_rx_pattern_match_enable_set"]], "nrf_twim_rx_pattern_match_one_shot_check (c function)": [[182, "c.nrf_twim_rx_pattern_match_one_shot_check"]], "nrf_twim_rx_pattern_match_one_shot_disable (c function)": [[182, "c.nrf_twim_rx_pattern_match_one_shot_disable"]], "nrf_twim_rx_pattern_match_one_shot_enable (c function)": [[182, "c.nrf_twim_rx_pattern_match_one_shot_enable"]], "nrf_twim_rx_terminate_on_bus_error_check (c function)": [[182, "c.nrf_twim_rx_terminate_on_bus_error_check"]], "nrf_twim_rx_terminate_on_bus_error_enable_set (c function)": [[182, "c.nrf_twim_rx_terminate_on_bus_error_enable_set"]], "nrf_twim_rxd_amount_get (c function)": [[182, "c.nrf_twim_rxd_amount_get"]], "nrf_twim_rxd_curr_amount_get (c function)": [[182, "c.nrf_twim_rxd_curr_amount_get"]], "nrf_twim_scl_pin_get (c function)": [[182, "c.nrf_twim_scl_pin_get"]], "nrf_twim_sda_pin_get (c function)": [[182, "c.nrf_twim_sda_pin_get"]], "nrf_twim_short_mask_t (c enum)": [[182, "c.nrf_twim_short_mask_t"]], "nrf_twim_short_mask_t.nrf_twim_all_shorts_mask (c enumerator)": [[182, "c.nrf_twim_short_mask_t.NRF_TWIM_ALL_SHORTS_MASK"]], "nrf_twim_short_mask_t.nrf_twim_short_lastrx_starttx_mask (c enumerator)": [[182, "c.nrf_twim_short_mask_t.NRF_TWIM_SHORT_LASTRX_STARTTX_MASK"]], "nrf_twim_short_mask_t.nrf_twim_short_lastrx_stop_mask (c enumerator)": [[182, "c.nrf_twim_short_mask_t.NRF_TWIM_SHORT_LASTRX_STOP_MASK"]], "nrf_twim_short_mask_t.nrf_twim_short_lasttx_startrx_mask (c enumerator)": [[182, "c.nrf_twim_short_mask_t.NRF_TWIM_SHORT_LASTTX_STARTRX_MASK"]], "nrf_twim_short_mask_t.nrf_twim_short_lasttx_stop_mask (c enumerator)": [[182, "c.nrf_twim_short_mask_t.NRF_TWIM_SHORT_LASTTX_STOP_MASK"]], "nrf_twim_short_mask_t.nrf_twim_short_lasttx_suspend_mask (c enumerator)": [[182, "c.nrf_twim_short_mask_t.NRF_TWIM_SHORT_LASTTX_SUSPEND_MASK"]], "nrf_twim_short_mask_t.nrf_twim_short_rxmatch0_disablerxmatch0_mask (c enumerator)": [[182, "c.nrf_twim_short_mask_t.NRF_TWIM_SHORT_RXMATCH0_DISABLERXMATCH0_MASK"]], "nrf_twim_short_mask_t.nrf_twim_short_rxmatch0_enablerxmatch1_mask (c enumerator)": [[182, "c.nrf_twim_short_mask_t.NRF_TWIM_SHORT_RXMATCH0_ENABLERXMATCH1_MASK"]], "nrf_twim_short_mask_t.nrf_twim_short_rxmatch1_disablerxmatch1_mask (c enumerator)": [[182, "c.nrf_twim_short_mask_t.NRF_TWIM_SHORT_RXMATCH1_DISABLERXMATCH1_MASK"]], "nrf_twim_short_mask_t.nrf_twim_short_rxmatch1_enablerxmatch2_mask (c enumerator)": [[182, "c.nrf_twim_short_mask_t.NRF_TWIM_SHORT_RXMATCH1_ENABLERXMATCH2_MASK"]], "nrf_twim_short_mask_t.nrf_twim_short_rxmatch2_disablerxmatch2_mask (c enumerator)": [[182, "c.nrf_twim_short_mask_t.NRF_TWIM_SHORT_RXMATCH2_DISABLERXMATCH2_MASK"]], "nrf_twim_short_mask_t.nrf_twim_short_rxmatch2_enablerxmatch3_mask (c enumerator)": [[182, "c.nrf_twim_short_mask_t.NRF_TWIM_SHORT_RXMATCH2_ENABLERXMATCH3_MASK"]], "nrf_twim_short_mask_t.nrf_twim_short_rxmatch3_disablerxmatch3_mask (c enumerator)": [[182, "c.nrf_twim_short_mask_t.NRF_TWIM_SHORT_RXMATCH3_DISABLERXMATCH3_MASK"]], "nrf_twim_short_mask_t.nrf_twim_short_rxmatch3_enablerxmatch0_mask (c enumerator)": [[182, "c.nrf_twim_short_mask_t.NRF_TWIM_SHORT_RXMATCH3_ENABLERXMATCH0_MASK"]], "nrf_twim_shorts_disable (c function)": [[182, "c.nrf_twim_shorts_disable"]], "nrf_twim_shorts_enable (c function)": [[182, "c.nrf_twim_shorts_enable"]], "nrf_twim_shorts_get (c function)": [[182, "c.nrf_twim_shorts_get"]], "nrf_twim_shorts_set (c function)": [[182, "c.nrf_twim_shorts_set"]], "nrf_twim_subscribe_clear (c function)": [[182, "c.nrf_twim_subscribe_clear"]], "nrf_twim_subscribe_set (c function)": [[182, "c.nrf_twim_subscribe_set"]], "nrf_twim_task_address_get (c function)": [[182, "c.nrf_twim_task_address_get"]], "nrf_twim_task_t (c enum)": [[182, "c.nrf_twim_task_t"]], "nrf_twim_task_t.nrf_twim_task_disablerxmatch0 (c enumerator)": [[182, "c.nrf_twim_task_t.NRF_TWIM_TASK_DISABLERXMATCH0"]], "nrf_twim_task_t.nrf_twim_task_disablerxmatch1 (c enumerator)": [[182, "c.nrf_twim_task_t.NRF_TWIM_TASK_DISABLERXMATCH1"]], "nrf_twim_task_t.nrf_twim_task_disablerxmatch2 (c enumerator)": [[182, "c.nrf_twim_task_t.NRF_TWIM_TASK_DISABLERXMATCH2"]], "nrf_twim_task_t.nrf_twim_task_disablerxmatch3 (c enumerator)": [[182, "c.nrf_twim_task_t.NRF_TWIM_TASK_DISABLERXMATCH3"]], "nrf_twim_task_t.nrf_twim_task_enablerxmatch0 (c enumerator)": [[182, "c.nrf_twim_task_t.NRF_TWIM_TASK_ENABLERXMATCH0"]], "nrf_twim_task_t.nrf_twim_task_enablerxmatch1 (c enumerator)": [[182, "c.nrf_twim_task_t.NRF_TWIM_TASK_ENABLERXMATCH1"]], "nrf_twim_task_t.nrf_twim_task_enablerxmatch2 (c enumerator)": [[182, "c.nrf_twim_task_t.NRF_TWIM_TASK_ENABLERXMATCH2"]], "nrf_twim_task_t.nrf_twim_task_enablerxmatch3 (c enumerator)": [[182, "c.nrf_twim_task_t.NRF_TWIM_TASK_ENABLERXMATCH3"]], "nrf_twim_task_t.nrf_twim_task_resume (c enumerator)": [[182, "c.nrf_twim_task_t.NRF_TWIM_TASK_RESUME"]], "nrf_twim_task_t.nrf_twim_task_startrx (c enumerator)": [[182, "c.nrf_twim_task_t.NRF_TWIM_TASK_STARTRX"]], "nrf_twim_task_t.nrf_twim_task_starttx (c enumerator)": [[182, "c.nrf_twim_task_t.NRF_TWIM_TASK_STARTTX"]], "nrf_twim_task_t.nrf_twim_task_stop (c enumerator)": [[182, "c.nrf_twim_task_t.NRF_TWIM_TASK_STOP"]], "nrf_twim_task_t.nrf_twim_task_stoprx (c enumerator)": [[182, "c.nrf_twim_task_t.NRF_TWIM_TASK_STOPRX"]], "nrf_twim_task_t.nrf_twim_task_stoptx (c enumerator)": [[182, "c.nrf_twim_task_t.NRF_TWIM_TASK_STOPTX"]], "nrf_twim_task_t.nrf_twim_task_suspend (c enumerator)": [[182, "c.nrf_twim_task_t.NRF_TWIM_TASK_SUSPEND"]], "nrf_twim_task_trigger (c function)": [[182, "c.nrf_twim_task_trigger"]], "nrf_twim_tx_buffer_set (c function)": [[182, "c.nrf_twim_tx_buffer_set"]], "nrf_twim_tx_list_disable (c function)": [[182, "c.nrf_twim_tx_list_disable"]], "nrf_twim_tx_list_enable (c function)": [[182, "c.nrf_twim_tx_list_enable"]], "nrf_twim_tx_terminate_on_bus_error_check (c function)": [[182, "c.nrf_twim_tx_terminate_on_bus_error_check"]], "nrf_twim_tx_terminate_on_bus_error_enable_set (c function)": [[182, "c.nrf_twim_tx_terminate_on_bus_error_enable_set"]], "nrf_twim_txd_amount_get (c function)": [[182, "c.nrf_twim_txd_amount_get"]], "nrf_twim_txd_curr_amount_get (c function)": [[182, "c.nrf_twim_txd_curr_amount_get"]], "nrfy_twim_has_array_list (c macro)": [[183, "c.NRFY_TWIM_HAS_ARRAY_LIST"]], "nrfy_twim_abort (c function)": [[183, "c.nrfy_twim_abort"]], "nrfy_twim_address_set (c function)": [[183, "c.nrfy_twim_address_set"]], "nrfy_twim_config_t (c struct)": [[183, "c.nrfy_twim_config_t"]], "nrfy_twim_config_t.frequency (c var)": [[183, "c.nrfy_twim_config_t.frequency"]], "nrfy_twim_config_t.pins (c var)": [[183, "c.nrfy_twim_config_t.pins"]], "nrfy_twim_config_t.skip_psel_cfg (c var)": [[183, "c.nrfy_twim_config_t.skip_psel_cfg"]], "nrfy_twim_disable (c function)": [[183, "c.nrfy_twim_disable"]], "nrfy_twim_enable (c function)": [[183, "c.nrfy_twim_enable"]], "nrfy_twim_errorsrc_get_and_clear (c function)": [[183, "c.nrfy_twim_errorsrc_get_and_clear"]], "nrfy_twim_event_address_get (c function)": [[183, "c.nrfy_twim_event_address_get"]], "nrfy_twim_event_check (c function)": [[183, "c.nrfy_twim_event_check"]], "nrfy_twim_event_clear (c function)": [[183, "c.nrfy_twim_event_clear"]], "nrfy_twim_events_process (c function)": [[183, "c.nrfy_twim_events_process"]], "nrfy_twim_frequency_set (c function)": [[183, "c.nrfy_twim_frequency_set"]], "nrfy_twim_int_disable (c function)": [[183, "c.nrfy_twim_int_disable"]], "nrfy_twim_int_enable (c function)": [[183, "c.nrfy_twim_int_enable"]], "nrfy_twim_int_enable_check (c function)": [[183, "c.nrfy_twim_int_enable_check"]], "nrfy_twim_int_init (c function)": [[183, "c.nrfy_twim_int_init"]], "nrfy_twim_int_uninit (c function)": [[183, "c.nrfy_twim_int_uninit"]], "nrfy_twim_periph_configure (c function)": [[183, "c.nrfy_twim_periph_configure"]], "nrfy_twim_pins_get (c function)": [[183, "c.nrfy_twim_pins_get"]], "nrfy_twim_pins_set (c function)": [[183, "c.nrfy_twim_pins_set"]], "nrfy_twim_pins_t (c struct)": [[183, "c.nrfy_twim_pins_t"]], "nrfy_twim_pins_t.scl_pin (c var)": [[183, "c.nrfy_twim_pins_t.scl_pin"]], "nrfy_twim_pins_t.sda_pin (c var)": [[183, "c.nrfy_twim_pins_t.sda_pin"]], "nrfy_twim_publish_clear (c function)": [[183, "c.nrfy_twim_publish_clear"]], "nrfy_twim_publish_set (c function)": [[183, "c.nrfy_twim_publish_set"]], "nrfy_twim_rx_buffer_set (c function)": [[183, "c.nrfy_twim_rx_buffer_set"]], "nrfy_twim_rx_list_disable (c function)": [[183, "c.nrfy_twim_rx_list_disable"]], "nrfy_twim_rx_list_enable (c function)": [[183, "c.nrfy_twim_rx_list_enable"]], "nrfy_twim_rx_list_set (c function)": [[183, "c.nrfy_twim_rx_list_set"]], "nrfy_twim_rx_start (c function)": [[183, "c.nrfy_twim_rx_start"]], "nrfy_twim_rxd_amount_get (c function)": [[183, "c.nrfy_twim_rxd_amount_get"]], "nrfy_twim_scl_pin_get (c function)": [[183, "c.nrfy_twim_scl_pin_get"]], "nrfy_twim_sda_pin_get (c function)": [[183, "c.nrfy_twim_sda_pin_get"]], "nrfy_twim_shorts_disable (c function)": [[183, "c.nrfy_twim_shorts_disable"]], "nrfy_twim_shorts_enable (c function)": [[183, "c.nrfy_twim_shorts_enable"]], "nrfy_twim_shorts_get (c function)": [[183, "c.nrfy_twim_shorts_get"]], "nrfy_twim_shorts_set (c function)": [[183, "c.nrfy_twim_shorts_set"]], "nrfy_twim_stop (c function)": [[183, "c.nrfy_twim_stop"]], "nrfy_twim_subscribe_clear (c function)": [[183, "c.nrfy_twim_subscribe_clear"]], "nrfy_twim_subscribe_set (c function)": [[183, "c.nrfy_twim_subscribe_set"]], "nrfy_twim_task_address_get (c function)": [[183, "c.nrfy_twim_task_address_get"]], "nrfy_twim_task_trigger (c function)": [[183, "c.nrfy_twim_task_trigger"]], "nrfy_twim_tx_buffer_set (c function)": [[183, "c.nrfy_twim_tx_buffer_set"]], "nrfy_twim_tx_list_disable (c function)": [[183, "c.nrfy_twim_tx_list_disable"]], "nrfy_twim_tx_list_enable (c function)": [[183, "c.nrfy_twim_tx_list_enable"]], "nrfy_twim_tx_list_set (c function)": [[183, "c.nrfy_twim_tx_list_set"]], "nrfy_twim_tx_start (c function)": [[183, "c.nrfy_twim_tx_start"]], "nrfy_twim_txd_amount_get (c function)": [[183, "c.nrfy_twim_txd_amount_get"]], "nrfy_twim_xfer_desc_t (c struct)": [[183, "c.nrfy_twim_xfer_desc_t"]], "nrfy_twim_xfer_desc_t.length (c var)": [[183, "c.nrfy_twim_xfer_desc_t.length"]], "nrfy_twim_xfer_desc_t.p_buffer (c var)": [[183, "c.nrfy_twim_xfer_desc_t.p_buffer"]], "nrfx_twis_default_config (c macro)": [[185, "c.NRFX_TWIS_DEFAULT_CONFIG"]], "nrfx_twis_instance (c macro)": [[185, "c.NRFX_TWIS_INSTANCE"]], "nrfx_twis_inst_handler_get (c macro)": [[185, "c.NRFX_TWIS_INST_HANDLER_GET"]], "nrfx_twis_config_t (c struct)": [[185, "c.nrfx_twis_config_t"]], "nrfx_twis_config_t.addr (c var)": [[185, "c.nrfx_twis_config_t.addr"]], "nrfx_twis_config_t.interrupt_priority (c var)": [[185, "c.nrfx_twis_config_t.interrupt_priority"]], "nrfx_twis_config_t.scl_pin (c var)": [[185, "c.nrfx_twis_config_t.scl_pin"]], "nrfx_twis_config_t.scl_pull (c var)": [[185, "c.nrfx_twis_config_t.scl_pull"]], "nrfx_twis_config_t.sda_pin (c var)": [[185, "c.nrfx_twis_config_t.sda_pin"]], "nrfx_twis_config_t.sda_pull (c var)": [[185, "c.nrfx_twis_config_t.sda_pull"]], "nrfx_twis_config_t.skip_gpio_cfg (c var)": [[185, "c.nrfx_twis_config_t.skip_gpio_cfg"]], "nrfx_twis_config_t.skip_psel_cfg (c var)": [[185, "c.nrfx_twis_config_t.skip_psel_cfg"]], "nrfx_twis_disable (c function)": [[185, "c.nrfx_twis_disable"]], "nrfx_twis_enable (c function)": [[185, "c.nrfx_twis_enable"]], "nrfx_twis_error_get_and_clear (c function)": [[185, "c.nrfx_twis_error_get_and_clear"]], "nrfx_twis_error_t (c enum)": [[185, "c.nrfx_twis_error_t"]], "nrfx_twis_error_t.nrfx_twis_error_data_nack (c enumerator)": [[185, "c.nrfx_twis_error_t.NRFX_TWIS_ERROR_DATA_NACK"]], "nrfx_twis_error_t.nrfx_twis_error_overflow (c enumerator)": [[185, "c.nrfx_twis_error_t.NRFX_TWIS_ERROR_OVERFLOW"]], "nrfx_twis_error_t.nrfx_twis_error_overread (c enumerator)": [[185, "c.nrfx_twis_error_t.NRFX_TWIS_ERROR_OVERREAD"]], "nrfx_twis_error_t.nrfx_twis_error_unexpected_event (c enumerator)": [[185, "c.nrfx_twis_error_t.NRFX_TWIS_ERROR_UNEXPECTED_EVENT"]], "nrfx_twis_event_handler_t (c type)": [[185, "c.nrfx_twis_event_handler_t"]], "nrfx_twis_evt_t (c struct)": [[185, "c.nrfx_twis_evt_t"]], "nrfx_twis_evt_t.buf_req (c var)": [[185, "c.nrfx_twis_evt_t.buf_req"]], "nrfx_twis_evt_t.data (c var)": [[185, "c.nrfx_twis_evt_t.data"]], "nrfx_twis_evt_t.error (c var)": [[185, "c.nrfx_twis_evt_t.error"]], "nrfx_twis_evt_t.rx_amount (c var)": [[185, "c.nrfx_twis_evt_t.rx_amount"]], "nrfx_twis_evt_t.tx_amount (c var)": [[185, "c.nrfx_twis_evt_t.tx_amount"]], "nrfx_twis_evt_t.type (c var)": [[185, "c.nrfx_twis_evt_t.type"]], "nrfx_twis_evt_type_t (c enum)": [[185, "c.nrfx_twis_evt_type_t"]], "nrfx_twis_evt_type_t.nrfx_twis_evt_general_error (c enumerator)": [[185, "c.nrfx_twis_evt_type_t.NRFX_TWIS_EVT_GENERAL_ERROR"]], "nrfx_twis_evt_type_t.nrfx_twis_evt_read_done (c enumerator)": [[185, "c.nrfx_twis_evt_type_t.NRFX_TWIS_EVT_READ_DONE"]], "nrfx_twis_evt_type_t.nrfx_twis_evt_read_error (c enumerator)": [[185, "c.nrfx_twis_evt_type_t.NRFX_TWIS_EVT_READ_ERROR"]], "nrfx_twis_evt_type_t.nrfx_twis_evt_read_req (c enumerator)": [[185, "c.nrfx_twis_evt_type_t.NRFX_TWIS_EVT_READ_REQ"]], "nrfx_twis_evt_type_t.nrfx_twis_evt_write_done (c enumerator)": [[185, "c.nrfx_twis_evt_type_t.NRFX_TWIS_EVT_WRITE_DONE"]], "nrfx_twis_evt_type_t.nrfx_twis_evt_write_error (c enumerator)": [[185, "c.nrfx_twis_evt_type_t.NRFX_TWIS_EVT_WRITE_ERROR"]], "nrfx_twis_evt_type_t.nrfx_twis_evt_write_req (c enumerator)": [[185, "c.nrfx_twis_evt_type_t.NRFX_TWIS_EVT_WRITE_REQ"]], "nrfx_twis_init (c function)": [[185, "c.nrfx_twis_init"]], "nrfx_twis_init_check (c function)": [[185, "c.nrfx_twis_init_check"]], "nrfx_twis_is_busy (c function)": [[185, "c.nrfx_twis_is_busy"]], "nrfx_twis_is_pending_rx (c function)": [[185, "c.nrfx_twis_is_pending_rx"]], "nrfx_twis_is_pending_tx (c function)": [[185, "c.nrfx_twis_is_pending_tx"]], "nrfx_twis_is_waiting_rx_buff (c function)": [[185, "c.nrfx_twis_is_waiting_rx_buff"]], "nrfx_twis_is_waiting_tx_buff (c function)": [[185, "c.nrfx_twis_is_waiting_tx_buff"]], "nrfx_twis_reconfigure (c function)": [[185, "c.nrfx_twis_reconfigure"]], "nrfx_twis_rx_amount (c function)": [[185, "c.nrfx_twis_rx_amount"]], "nrfx_twis_rx_prepare (c function)": [[185, "c.nrfx_twis_rx_prepare"]], "nrfx_twis_t (c struct)": [[185, "c.nrfx_twis_t"]], "nrfx_twis_t.drv_inst_idx (c var)": [[185, "c.nrfx_twis_t.drv_inst_idx"]], "nrfx_twis_t.p_reg (c var)": [[185, "c.nrfx_twis_t.p_reg"]], "nrfx_twis_tx_amount (c function)": [[185, "c.nrfx_twis_tx_amount"]], "nrfx_twis_tx_prepare (c function)": [[185, "c.nrfx_twis_tx_prepare"]], "nrfx_twis_uninit (c function)": [[185, "c.nrfx_twis_uninit"]], "nrf_twis_has_dma_reg (c macro)": [[186, "c.NRF_TWIS_HAS_DMA_REG"]], "nrf_twis_has_dma_tasks_events (c macro)": [[186, "c.NRF_TWIS_HAS_DMA_TASKS_EVENTS"]], "nrf_twis_has_list_reg (c macro)": [[186, "c.NRF_TWIS_HAS_LIST_REG"]], "nrf_twis_inst_get (c macro)": [[186, "c.NRF_TWIS_INST_GET"]], "nrf_twis_rx_max_count_size (c macro)": [[186, "c.NRF_TWIS_RX_MAX_COUNT_SIZE"]], "nrf_twis_tx_max_count_size (c macro)": [[186, "c.NRF_TWIS_TX_MAX_COUNT_SIZE"]], "nrf_twis_address_get (c function)": [[186, "c.nrf_twis_address_get"]], "nrf_twis_address_set (c function)": [[186, "c.nrf_twis_address_set"]], "nrf_twis_address_t (c type)": [[186, "c.nrf_twis_address_t"]], "nrf_twis_config_addr_mask_t (c enum)": [[186, "c.nrf_twis_config_addr_mask_t"]], "nrf_twis_config_addr_mask_t.nrf_twis_config_address01_mask (c enumerator)": [[186, "c.nrf_twis_config_addr_mask_t.NRF_TWIS_CONFIG_ADDRESS01_MASK"]], "nrf_twis_config_addr_mask_t.nrf_twis_config_address0_mask (c enumerator)": [[186, "c.nrf_twis_config_addr_mask_t.NRF_TWIS_CONFIG_ADDRESS0_MASK"]], "nrf_twis_config_addr_mask_t.nrf_twis_config_address1_mask (c enumerator)": [[186, "c.nrf_twis_config_addr_mask_t.NRF_TWIS_CONFIG_ADDRESS1_MASK"]], "nrf_twis_config_address_get (c function)": [[186, "c.nrf_twis_config_address_get"]], "nrf_twis_config_address_set (c function)": [[186, "c.nrf_twis_config_address_set"]], "nrf_twis_disable (c function)": [[186, "c.nrf_twis_disable"]], "nrf_twis_enable (c function)": [[186, "c.nrf_twis_enable"]], "nrf_twis_enable_check (c function)": [[186, "c.nrf_twis_enable_check"]], "nrf_twis_error_source_get_and_clear (c function)": [[186, "c.nrf_twis_error_source_get_and_clear"]], "nrf_twis_error_t (c enum)": [[186, "c.nrf_twis_error_t"]], "nrf_twis_error_t.nrf_twis_error_data_nack (c enumerator)": [[186, "c.nrf_twis_error_t.NRF_TWIS_ERROR_DATA_NACK"]], "nrf_twis_error_t.nrf_twis_error_overflow (c enumerator)": [[186, "c.nrf_twis_error_t.NRF_TWIS_ERROR_OVERFLOW"]], "nrf_twis_error_t.nrf_twis_error_overread (c enumerator)": [[186, "c.nrf_twis_error_t.NRF_TWIS_ERROR_OVERREAD"]], "nrf_twis_event_address_get (c function)": [[186, "c.nrf_twis_event_address_get"]], "nrf_twis_event_check (c function)": [[186, "c.nrf_twis_event_check"]], "nrf_twis_event_clear (c function)": [[186, "c.nrf_twis_event_clear"]], "nrf_twis_event_get_and_clear (c function)": [[186, "c.nrf_twis_event_get_and_clear"]], "nrf_twis_event_t (c enum)": [[186, "c.nrf_twis_event_t"]], "nrf_twis_event_t.nrf_twis_event_error (c enumerator)": [[186, "c.nrf_twis_event_t.NRF_TWIS_EVENT_ERROR"]], "nrf_twis_event_t.nrf_twis_event_read (c enumerator)": [[186, "c.nrf_twis_event_t.NRF_TWIS_EVENT_READ"]], "nrf_twis_event_t.nrf_twis_event_rxstarted (c enumerator)": [[186, "c.nrf_twis_event_t.NRF_TWIS_EVENT_RXSTARTED"]], "nrf_twis_event_t.nrf_twis_event_stopped (c enumerator)": [[186, "c.nrf_twis_event_t.NRF_TWIS_EVENT_STOPPED"]], "nrf_twis_event_t.nrf_twis_event_txstarted (c enumerator)": [[186, "c.nrf_twis_event_t.NRF_TWIS_EVENT_TXSTARTED"]], "nrf_twis_event_t.nrf_twis_event_write (c enumerator)": [[186, "c.nrf_twis_event_t.NRF_TWIS_EVENT_WRITE"]], "nrf_twis_int_disable (c function)": [[186, "c.nrf_twis_int_disable"]], "nrf_twis_int_enable (c function)": [[186, "c.nrf_twis_int_enable"]], "nrf_twis_int_enable_check (c function)": [[186, "c.nrf_twis_int_enable_check"]], "nrf_twis_int_mask_t (c enum)": [[186, "c.nrf_twis_int_mask_t"]], "nrf_twis_int_mask_t.nrf_twis_int_error_mask (c enumerator)": [[186, "c.nrf_twis_int_mask_t.NRF_TWIS_INT_ERROR_MASK"]], "nrf_twis_int_mask_t.nrf_twis_int_read_mask (c enumerator)": [[186, "c.nrf_twis_int_mask_t.NRF_TWIS_INT_READ_MASK"]], "nrf_twis_int_mask_t.nrf_twis_int_rxstarted_mask (c enumerator)": [[186, "c.nrf_twis_int_mask_t.NRF_TWIS_INT_RXSTARTED_MASK"]], "nrf_twis_int_mask_t.nrf_twis_int_stopped_mask (c enumerator)": [[186, "c.nrf_twis_int_mask_t.NRF_TWIS_INT_STOPPED_MASK"]], "nrf_twis_int_mask_t.nrf_twis_int_txstarted_mask (c enumerator)": [[186, "c.nrf_twis_int_mask_t.NRF_TWIS_INT_TXSTARTED_MASK"]], "nrf_twis_int_mask_t.nrf_twis_int_write_mask (c enumerator)": [[186, "c.nrf_twis_int_mask_t.NRF_TWIS_INT_WRITE_MASK"]], "nrf_twis_match_get (c function)": [[186, "c.nrf_twis_match_get"]], "nrf_twis_orc_get (c function)": [[186, "c.nrf_twis_orc_get"]], "nrf_twis_orc_set (c function)": [[186, "c.nrf_twis_orc_set"]], "nrf_twis_pins_set (c function)": [[186, "c.nrf_twis_pins_set"]], "nrf_twis_publish_clear (c function)": [[186, "c.nrf_twis_publish_clear"]], "nrf_twis_publish_set (c function)": [[186, "c.nrf_twis_publish_set"]], "nrf_twis_rx_amount_get (c function)": [[186, "c.nrf_twis_rx_amount_get"]], "nrf_twis_rx_buffer_get (c function)": [[186, "c.nrf_twis_rx_buffer_get"]], "nrf_twis_rx_buffer_set (c function)": [[186, "c.nrf_twis_rx_buffer_set"]], "nrf_twis_rx_list_disable (c function)": [[186, "c.nrf_twis_rx_list_disable"]], "nrf_twis_rx_list_enable (c function)": [[186, "c.nrf_twis_rx_list_enable"]], "nrf_twis_rx_prepare (c function)": [[186, "c.nrf_twis_rx_prepare"]], "nrf_twis_scl_pin_get (c function)": [[186, "c.nrf_twis_scl_pin_get"]], "nrf_twis_sda_pin_get (c function)": [[186, "c.nrf_twis_sda_pin_get"]], "nrf_twis_short_mask_t (c enum)": [[186, "c.nrf_twis_short_mask_t"]], "nrf_twis_short_mask_t.nrf_twis_short_read_suspend_mask (c enumerator)": [[186, "c.nrf_twis_short_mask_t.NRF_TWIS_SHORT_READ_SUSPEND_MASK"]], "nrf_twis_short_mask_t.nrf_twis_short_write_suspend_mask (c enumerator)": [[186, "c.nrf_twis_short_mask_t.NRF_TWIS_SHORT_WRITE_SUSPEND_MASK"]], "nrf_twis_shorts_disable (c function)": [[186, "c.nrf_twis_shorts_disable"]], "nrf_twis_shorts_enable (c function)": [[186, "c.nrf_twis_shorts_enable"]], "nrf_twis_shorts_get (c function)": [[186, "c.nrf_twis_shorts_get"]], "nrf_twis_subscribe_clear (c function)": [[186, "c.nrf_twis_subscribe_clear"]], "nrf_twis_subscribe_set (c function)": [[186, "c.nrf_twis_subscribe_set"]], "nrf_twis_task_address_get (c function)": [[186, "c.nrf_twis_task_address_get"]], "nrf_twis_task_t (c enum)": [[186, "c.nrf_twis_task_t"]], "nrf_twis_task_t.nrf_twis_task_preparerx (c enumerator)": [[186, "c.nrf_twis_task_t.NRF_TWIS_TASK_PREPARERX"]], "nrf_twis_task_t.nrf_twis_task_preparetx (c enumerator)": [[186, "c.nrf_twis_task_t.NRF_TWIS_TASK_PREPARETX"]], "nrf_twis_task_t.nrf_twis_task_resume (c enumerator)": [[186, "c.nrf_twis_task_t.NRF_TWIS_TASK_RESUME"]], "nrf_twis_task_t.nrf_twis_task_stop (c enumerator)": [[186, "c.nrf_twis_task_t.NRF_TWIS_TASK_STOP"]], "nrf_twis_task_t.nrf_twis_task_suspend (c enumerator)": [[186, "c.nrf_twis_task_t.NRF_TWIS_TASK_SUSPEND"]], "nrf_twis_task_trigger (c function)": [[186, "c.nrf_twis_task_trigger"]], "nrf_twis_tx_amount_get (c function)": [[186, "c.nrf_twis_tx_amount_get"]], "nrf_twis_tx_buffer_get (c function)": [[186, "c.nrf_twis_tx_buffer_get"]], "nrf_twis_tx_buffer_set (c function)": [[186, "c.nrf_twis_tx_buffer_set"]], "nrf_twis_tx_list_disable (c function)": [[186, "c.nrf_twis_tx_list_disable"]], "nrf_twis_tx_list_enable (c function)": [[186, "c.nrf_twis_tx_list_enable"]], "nrf_twis_tx_prepare (c function)": [[186, "c.nrf_twis_tx_prepare"]], "nrfx_uart_default_config (c macro)": [[188, "c.NRFX_UART_DEFAULT_CONFIG"]], "nrfx_uart_default_extended_paritytype_config (c macro)": [[188, "c.NRFX_UART_DEFAULT_EXTENDED_PARITYTYPE_CONFIG"]], "nrfx_uart_default_extended_stop_config (c macro)": [[188, "c.NRFX_UART_DEFAULT_EXTENDED_STOP_CONFIG"]], "nrfx_uart_instance (c macro)": [[188, "c.NRFX_UART_INSTANCE"]], "nrfx_uart_inst_handler_get (c macro)": [[188, "c.NRFX_UART_INST_HANDLER_GET"]], "nrfx_uart_config_t (c struct)": [[188, "c.nrfx_uart_config_t"]], "nrfx_uart_config_t.baudrate (c var)": [[188, "c.nrfx_uart_config_t.baudrate"]], "nrfx_uart_config_t.hal_cfg (c var)": [[188, "c.nrfx_uart_config_t.hal_cfg"]], "nrfx_uart_config_t.interrupt_priority (c var)": [[188, "c.nrfx_uart_config_t.interrupt_priority"]], "nrfx_uart_config_t.p_context (c var)": [[188, "c.nrfx_uart_config_t.p_context"]], "nrfx_uart_config_t.pselcts (c var)": [[188, "c.nrfx_uart_config_t.pselcts"]], "nrfx_uart_config_t.pselrts (c var)": [[188, "c.nrfx_uart_config_t.pselrts"]], "nrfx_uart_config_t.pselrxd (c var)": [[188, "c.nrfx_uart_config_t.pselrxd"]], "nrfx_uart_config_t.pseltxd (c var)": [[188, "c.nrfx_uart_config_t.pseltxd"]], "nrfx_uart_config_t.skip_gpio_cfg (c var)": [[188, "c.nrfx_uart_config_t.skip_gpio_cfg"]], "nrfx_uart_config_t.skip_psel_cfg (c var)": [[188, "c.nrfx_uart_config_t.skip_psel_cfg"]], "nrfx_uart_error_evt_t (c struct)": [[188, "c.nrfx_uart_error_evt_t"]], "nrfx_uart_error_evt_t.error_mask (c var)": [[188, "c.nrfx_uart_error_evt_t.error_mask"]], "nrfx_uart_error_evt_t.rxtx (c var)": [[188, "c.nrfx_uart_error_evt_t.rxtx"]], "nrfx_uart_errorsrc_get (c function)": [[188, "c.nrfx_uart_errorsrc_get"]], "nrfx_uart_event_address_get (c function)": [[188, "c.nrfx_uart_event_address_get"]], "nrfx_uart_event_handler_t (c type)": [[188, "c.nrfx_uart_event_handler_t"]], "nrfx_uart_event_t (c struct)": [[188, "c.nrfx_uart_event_t"]], "nrfx_uart_event_t.data (c var)": [[188, "c.nrfx_uart_event_t.data"]], "nrfx_uart_event_t.error (c var)": [[188, "c.nrfx_uart_event_t.error"]], "nrfx_uart_event_t.rxtx (c var)": [[188, "c.nrfx_uart_event_t.rxtx"]], "nrfx_uart_event_t.type (c var)": [[188, "c.nrfx_uart_event_t.type"]], "nrfx_uart_evt_type_t (c enum)": [[188, "c.nrfx_uart_evt_type_t"]], "nrfx_uart_evt_type_t.nrfx_uart_evt_error (c enumerator)": [[188, "c.nrfx_uart_evt_type_t.NRFX_UART_EVT_ERROR"]], "nrfx_uart_evt_type_t.nrfx_uart_evt_rx_done (c enumerator)": [[188, "c.nrfx_uart_evt_type_t.NRFX_UART_EVT_RX_DONE"]], "nrfx_uart_evt_type_t.nrfx_uart_evt_tx_done (c enumerator)": [[188, "c.nrfx_uart_evt_type_t.NRFX_UART_EVT_TX_DONE"]], "nrfx_uart_init (c function)": [[188, "c.nrfx_uart_init"]], "nrfx_uart_init_check (c function)": [[188, "c.nrfx_uart_init_check"]], "nrfx_uart_reconfigure (c function)": [[188, "c.nrfx_uart_reconfigure"]], "nrfx_uart_rx (c function)": [[188, "c.nrfx_uart_rx"]], "nrfx_uart_rx_abort (c function)": [[188, "c.nrfx_uart_rx_abort"]], "nrfx_uart_rx_disable (c function)": [[188, "c.nrfx_uart_rx_disable"]], "nrfx_uart_rx_enable (c function)": [[188, "c.nrfx_uart_rx_enable"]], "nrfx_uart_rx_ready (c function)": [[188, "c.nrfx_uart_rx_ready"]], "nrfx_uart_t (c struct)": [[188, "c.nrfx_uart_t"]], "nrfx_uart_t.drv_inst_idx (c var)": [[188, "c.nrfx_uart_t.drv_inst_idx"]], "nrfx_uart_t.p_reg (c var)": [[188, "c.nrfx_uart_t.p_reg"]], "nrfx_uart_task_address_get (c function)": [[188, "c.nrfx_uart_task_address_get"]], "nrfx_uart_tx (c function)": [[188, "c.nrfx_uart_tx"]], "nrfx_uart_tx_abort (c function)": [[188, "c.nrfx_uart_tx_abort"]], "nrfx_uart_tx_in_progress (c function)": [[188, "c.nrfx_uart_tx_in_progress"]], "nrfx_uart_uninit (c function)": [[188, "c.nrfx_uart_uninit"]], "nrfx_uart_xfer_evt_t (c struct)": [[188, "c.nrfx_uart_xfer_evt_t"]], "nrfx_uart_xfer_evt_t.bytes (c var)": [[188, "c.nrfx_uart_xfer_evt_t.bytes"]], "nrfx_uart_xfer_evt_t.p_data (c var)": [[188, "c.nrfx_uart_xfer_evt_t.p_data"]], "nrf_uart_has_parity_bit (c macro)": [[189, "c.NRF_UART_HAS_PARITY_BIT"]], "nrf_uart_has_stop_bits (c macro)": [[189, "c.NRF_UART_HAS_STOP_BITS"]], "nrf_uart_psel_disconnected (c macro)": [[189, "c.NRF_UART_PSEL_DISCONNECTED"]], "nrf_uart_baudrate_set (c function)": [[189, "c.nrf_uart_baudrate_set"]], "nrf_uart_baudrate_t (c enum)": [[189, "c.nrf_uart_baudrate_t"]], "nrf_uart_baudrate_t.nrf_uart_baudrate_1000000 (c enumerator)": [[189, "c.nrf_uart_baudrate_t.NRF_UART_BAUDRATE_1000000"]], "nrf_uart_baudrate_t.nrf_uart_baudrate_115200 (c enumerator)": [[189, "c.nrf_uart_baudrate_t.NRF_UART_BAUDRATE_115200"]], "nrf_uart_baudrate_t.nrf_uart_baudrate_1200 (c enumerator)": [[189, "c.nrf_uart_baudrate_t.NRF_UART_BAUDRATE_1200"]], "nrf_uart_baudrate_t.nrf_uart_baudrate_14400 (c enumerator)": [[189, "c.nrf_uart_baudrate_t.NRF_UART_BAUDRATE_14400"]], "nrf_uart_baudrate_t.nrf_uart_baudrate_19200 (c enumerator)": [[189, "c.nrf_uart_baudrate_t.NRF_UART_BAUDRATE_19200"]], "nrf_uart_baudrate_t.nrf_uart_baudrate_230400 (c enumerator)": [[189, "c.nrf_uart_baudrate_t.NRF_UART_BAUDRATE_230400"]], "nrf_uart_baudrate_t.nrf_uart_baudrate_2400 (c enumerator)": [[189, "c.nrf_uart_baudrate_t.NRF_UART_BAUDRATE_2400"]], "nrf_uart_baudrate_t.nrf_uart_baudrate_250000 (c enumerator)": [[189, "c.nrf_uart_baudrate_t.NRF_UART_BAUDRATE_250000"]], "nrf_uart_baudrate_t.nrf_uart_baudrate_28800 (c enumerator)": [[189, "c.nrf_uart_baudrate_t.NRF_UART_BAUDRATE_28800"]], "nrf_uart_baudrate_t.nrf_uart_baudrate_31250 (c enumerator)": [[189, "c.nrf_uart_baudrate_t.NRF_UART_BAUDRATE_31250"]], "nrf_uart_baudrate_t.nrf_uart_baudrate_38400 (c enumerator)": [[189, "c.nrf_uart_baudrate_t.NRF_UART_BAUDRATE_38400"]], "nrf_uart_baudrate_t.nrf_uart_baudrate_460800 (c enumerator)": [[189, "c.nrf_uart_baudrate_t.NRF_UART_BAUDRATE_460800"]], "nrf_uart_baudrate_t.nrf_uart_baudrate_4800 (c enumerator)": [[189, "c.nrf_uart_baudrate_t.NRF_UART_BAUDRATE_4800"]], "nrf_uart_baudrate_t.nrf_uart_baudrate_56000 (c enumerator)": [[189, "c.nrf_uart_baudrate_t.NRF_UART_BAUDRATE_56000"]], "nrf_uart_baudrate_t.nrf_uart_baudrate_57600 (c enumerator)": [[189, "c.nrf_uart_baudrate_t.NRF_UART_BAUDRATE_57600"]], "nrf_uart_baudrate_t.nrf_uart_baudrate_76800 (c enumerator)": [[189, "c.nrf_uart_baudrate_t.NRF_UART_BAUDRATE_76800"]], "nrf_uart_baudrate_t.nrf_uart_baudrate_921600 (c enumerator)": [[189, "c.nrf_uart_baudrate_t.NRF_UART_BAUDRATE_921600"]], "nrf_uart_baudrate_t.nrf_uart_baudrate_9600 (c enumerator)": [[189, "c.nrf_uart_baudrate_t.NRF_UART_BAUDRATE_9600"]], "nrf_uart_config_t (c struct)": [[189, "c.nrf_uart_config_t"]], "nrf_uart_config_t.hwfc (c var)": [[189, "c.nrf_uart_config_t.hwfc"]], "nrf_uart_config_t.parity (c var)": [[189, "c.nrf_uart_config_t.parity"]], "nrf_uart_config_t.paritytype (c var)": [[189, "c.nrf_uart_config_t.paritytype"]], "nrf_uart_config_t.stop (c var)": [[189, "c.nrf_uart_config_t.stop"]], "nrf_uart_configure (c function)": [[189, "c.nrf_uart_configure"]], "nrf_uart_cts_pin_get (c function)": [[189, "c.nrf_uart_cts_pin_get"]], "nrf_uart_disable (c function)": [[189, "c.nrf_uart_disable"]], "nrf_uart_enable (c function)": [[189, "c.nrf_uart_enable"]], "nrf_uart_error_mask_t (c enum)": [[189, "c.nrf_uart_error_mask_t"]], "nrf_uart_error_mask_t.nrf_uart_error_break_mask (c enumerator)": [[189, "c.nrf_uart_error_mask_t.NRF_UART_ERROR_BREAK_MASK"]], "nrf_uart_error_mask_t.nrf_uart_error_framing_mask (c enumerator)": [[189, "c.nrf_uart_error_mask_t.NRF_UART_ERROR_FRAMING_MASK"]], "nrf_uart_error_mask_t.nrf_uart_error_overrun_mask (c enumerator)": [[189, "c.nrf_uart_error_mask_t.NRF_UART_ERROR_OVERRUN_MASK"]], "nrf_uart_error_mask_t.nrf_uart_error_parity_mask (c enumerator)": [[189, "c.nrf_uart_error_mask_t.NRF_UART_ERROR_PARITY_MASK"]], "nrf_uart_errorsrc_get_and_clear (c function)": [[189, "c.nrf_uart_errorsrc_get_and_clear"]], "nrf_uart_event_address_get (c function)": [[189, "c.nrf_uart_event_address_get"]], "nrf_uart_event_check (c function)": [[189, "c.nrf_uart_event_check"]], "nrf_uart_event_clear (c function)": [[189, "c.nrf_uart_event_clear"]], "nrf_uart_event_t (c enum)": [[189, "c.nrf_uart_event_t"]], "nrf_uart_event_t.nrf_uart_event_cts (c enumerator)": [[189, "c.nrf_uart_event_t.NRF_UART_EVENT_CTS"]], "nrf_uart_event_t.nrf_uart_event_error (c enumerator)": [[189, "c.nrf_uart_event_t.NRF_UART_EVENT_ERROR"]], "nrf_uart_event_t.nrf_uart_event_ncts (c enumerator)": [[189, "c.nrf_uart_event_t.NRF_UART_EVENT_NCTS"]], "nrf_uart_event_t.nrf_uart_event_rxdrdy (c enumerator)": [[189, "c.nrf_uart_event_t.NRF_UART_EVENT_RXDRDY"]], "nrf_uart_event_t.nrf_uart_event_rxto (c enumerator)": [[189, "c.nrf_uart_event_t.NRF_UART_EVENT_RXTO"]], "nrf_uart_event_t.nrf_uart_event_txdrdy (c enumerator)": [[189, "c.nrf_uart_event_t.NRF_UART_EVENT_TXDRDY"]], "nrf_uart_hwfc_pins_disconnect (c function)": [[189, "c.nrf_uart_hwfc_pins_disconnect"]], "nrf_uart_hwfc_pins_set (c function)": [[189, "c.nrf_uart_hwfc_pins_set"]], "nrf_uart_hwfc_t (c enum)": [[189, "c.nrf_uart_hwfc_t"]], "nrf_uart_hwfc_t.nrf_uart_hwfc_disabled (c enumerator)": [[189, "c.nrf_uart_hwfc_t.NRF_UART_HWFC_DISABLED"]], "nrf_uart_hwfc_t.nrf_uart_hwfc_enabled (c enumerator)": [[189, "c.nrf_uart_hwfc_t.NRF_UART_HWFC_ENABLED"]], "nrf_uart_int_disable (c function)": [[189, "c.nrf_uart_int_disable"]], "nrf_uart_int_enable (c function)": [[189, "c.nrf_uart_int_enable"]], "nrf_uart_int_enable_check (c function)": [[189, "c.nrf_uart_int_enable_check"]], "nrf_uart_int_mask_t (c enum)": [[189, "c.nrf_uart_int_mask_t"]], "nrf_uart_int_mask_t.nrf_uart_int_mask_cts (c enumerator)": [[189, "c.nrf_uart_int_mask_t.NRF_UART_INT_MASK_CTS"]], "nrf_uart_int_mask_t.nrf_uart_int_mask_error (c enumerator)": [[189, "c.nrf_uart_int_mask_t.NRF_UART_INT_MASK_ERROR"]], "nrf_uart_int_mask_t.nrf_uart_int_mask_ncts (c enumerator)": [[189, "c.nrf_uart_int_mask_t.NRF_UART_INT_MASK_NCTS"]], "nrf_uart_int_mask_t.nrf_uart_int_mask_rxdrdy (c enumerator)": [[189, "c.nrf_uart_int_mask_t.NRF_UART_INT_MASK_RXDRDY"]], "nrf_uart_int_mask_t.nrf_uart_int_mask_rxto (c enumerator)": [[189, "c.nrf_uart_int_mask_t.NRF_UART_INT_MASK_RXTO"]], "nrf_uart_int_mask_t.nrf_uart_int_mask_txdrdy (c enumerator)": [[189, "c.nrf_uart_int_mask_t.NRF_UART_INT_MASK_TXDRDY"]], "nrf_uart_parity_t (c enum)": [[189, "c.nrf_uart_parity_t"]], "nrf_uart_parity_t.nrf_uart_parity_excluded (c enumerator)": [[189, "c.nrf_uart_parity_t.NRF_UART_PARITY_EXCLUDED"]], "nrf_uart_parity_t.nrf_uart_parity_included (c enumerator)": [[189, "c.nrf_uart_parity_t.NRF_UART_PARITY_INCLUDED"]], "nrf_uart_paritytype_t (c enum)": [[189, "c.nrf_uart_paritytype_t"]], "nrf_uart_paritytype_t.nrf_uart_paritytype_even (c enumerator)": [[189, "c.nrf_uart_paritytype_t.NRF_UART_PARITYTYPE_EVEN"]], "nrf_uart_paritytype_t.nrf_uart_paritytype_odd (c enumerator)": [[189, "c.nrf_uart_paritytype_t.NRF_UART_PARITYTYPE_ODD"]], "nrf_uart_rts_pin_get (c function)": [[189, "c.nrf_uart_rts_pin_get"]], "nrf_uart_rx_pin_get (c function)": [[189, "c.nrf_uart_rx_pin_get"]], "nrf_uart_rxd_get (c function)": [[189, "c.nrf_uart_rxd_get"]], "nrf_uart_stop_t (c enum)": [[189, "c.nrf_uart_stop_t"]], "nrf_uart_stop_t.nrf_uart_stop_one (c enumerator)": [[189, "c.nrf_uart_stop_t.NRF_UART_STOP_ONE"]], "nrf_uart_stop_t.nrf_uart_stop_two (c enumerator)": [[189, "c.nrf_uart_stop_t.NRF_UART_STOP_TWO"]], "nrf_uart_task_address_get (c function)": [[189, "c.nrf_uart_task_address_get"]], "nrf_uart_task_t (c enum)": [[189, "c.nrf_uart_task_t"]], "nrf_uart_task_t.nrf_uart_task_startrx (c enumerator)": [[189, "c.nrf_uart_task_t.NRF_UART_TASK_STARTRX"]], "nrf_uart_task_t.nrf_uart_task_starttx (c enumerator)": [[189, "c.nrf_uart_task_t.NRF_UART_TASK_STARTTX"]], "nrf_uart_task_t.nrf_uart_task_stoprx (c enumerator)": [[189, "c.nrf_uart_task_t.NRF_UART_TASK_STOPRX"]], "nrf_uart_task_t.nrf_uart_task_stoptx (c enumerator)": [[189, "c.nrf_uart_task_t.NRF_UART_TASK_STOPTX"]], "nrf_uart_task_t.nrf_uart_task_suspend (c enumerator)": [[189, "c.nrf_uart_task_t.NRF_UART_TASK_SUSPEND"]], "nrf_uart_task_trigger (c function)": [[189, "c.nrf_uart_task_trigger"]], "nrf_uart_tx_pin_get (c function)": [[189, "c.nrf_uart_tx_pin_get"]], "nrf_uart_txd_set (c function)": [[189, "c.nrf_uart_txd_set"]], "nrf_uart_txrx_pins_disconnect (c function)": [[189, "c.nrf_uart_txrx_pins_disconnect"]], "nrf_uart_txrx_pins_set (c function)": [[189, "c.nrf_uart_txrx_pins_set"]], "nrfx_uarte_default_config (c macro)": [[191, "c.NRFX_UARTE_DEFAULT_CONFIG"]], "nrfx_uarte_instance (c macro)": [[191, "c.NRFX_UARTE_INSTANCE"]], "nrfx_uarte_inst_handler_get (c macro)": [[191, "c.NRFX_UARTE_INST_HANDLER_GET"]], "nrfx_uarte_config_t (c struct)": [[191, "c.nrfx_uarte_config_t"]], "nrfx_uarte_config_t.baudrate (c var)": [[191, "c.nrfx_uarte_config_t.baudrate"]], "nrfx_uarte_config_t.config (c var)": [[191, "c.nrfx_uarte_config_t.config"]], "nrfx_uarte_config_t.cts_pin (c var)": [[191, "c.nrfx_uarte_config_t.cts_pin"]], "nrfx_uarte_config_t.interrupt_priority (c var)": [[191, "c.nrfx_uarte_config_t.interrupt_priority"]], "nrfx_uarte_config_t.p_context (c var)": [[191, "c.nrfx_uarte_config_t.p_context"]], "nrfx_uarte_config_t.p_rx_cache_scratch (c var)": [[191, "c.nrfx_uarte_config_t.p_rx_cache_scratch"]], "nrfx_uarte_config_t.rts_pin (c var)": [[191, "c.nrfx_uarte_config_t.rts_pin"]], "nrfx_uarte_config_t.rx_cache (c var)": [[191, "c.nrfx_uarte_config_t.rx_cache"]], "nrfx_uarte_config_t.rxd_pin (c var)": [[191, "c.nrfx_uarte_config_t.rxd_pin"]], "nrfx_uarte_config_t.skip_gpio_cfg (c var)": [[191, "c.nrfx_uarte_config_t.skip_gpio_cfg"]], "nrfx_uarte_config_t.skip_psel_cfg (c var)": [[191, "c.nrfx_uarte_config_t.skip_psel_cfg"]], "nrfx_uarte_config_t.tx_cache (c var)": [[191, "c.nrfx_uarte_config_t.tx_cache"]], "nrfx_uarte_config_t.tx_stop_on_end (c var)": [[191, "c.nrfx_uarte_config_t.tx_stop_on_end"]], "nrfx_uarte_config_t.txd_pin (c var)": [[191, "c.nrfx_uarte_config_t.txd_pin"]], "nrfx_uarte_error_evt_t (c struct)": [[191, "c.nrfx_uarte_error_evt_t"]], "nrfx_uarte_error_evt_t.error_mask (c var)": [[191, "c.nrfx_uarte_error_evt_t.error_mask"]], "nrfx_uarte_error_evt_t.rx (c var)": [[191, "c.nrfx_uarte_error_evt_t.rx"]], "nrfx_uarte_errorsrc_get (c function)": [[191, "c.nrfx_uarte_errorsrc_get"]], "nrfx_uarte_event_address_get (c function)": [[191, "c.nrfx_uarte_event_address_get"]], "nrfx_uarte_event_handler_t (c type)": [[191, "c.nrfx_uarte_event_handler_t"]], "nrfx_uarte_event_t (c struct)": [[191, "c.nrfx_uarte_event_t"]], "nrfx_uarte_event_t.data (c var)": [[191, "c.nrfx_uarte_event_t.data"]], "nrfx_uarte_event_t.error (c var)": [[191, "c.nrfx_uarte_event_t.error"]], "nrfx_uarte_event_t.rx (c var)": [[191, "c.nrfx_uarte_event_t.rx"]], "nrfx_uarte_event_t.rx_disabled (c var)": [[191, "c.nrfx_uarte_event_t.rx_disabled"]], "nrfx_uarte_event_t.tx (c var)": [[191, "c.nrfx_uarte_event_t.tx"]], "nrfx_uarte_event_t.type (c var)": [[191, "c.nrfx_uarte_event_t.type"]], "nrfx_uarte_evt_type_t (c enum)": [[191, "c.nrfx_uarte_evt_type_t"]], "nrfx_uarte_evt_type_t.nrfx_uarte_evt_error (c enumerator)": [[191, "c.nrfx_uarte_evt_type_t.NRFX_UARTE_EVT_ERROR"]], "nrfx_uarte_evt_type_t.nrfx_uarte_evt_rx_buf_request (c enumerator)": [[191, "c.nrfx_uarte_evt_type_t.NRFX_UARTE_EVT_RX_BUF_REQUEST"]], "nrfx_uarte_evt_type_t.nrfx_uarte_evt_rx_buf_too_late (c enumerator)": [[191, "c.nrfx_uarte_evt_type_t.NRFX_UARTE_EVT_RX_BUF_TOO_LATE"]], "nrfx_uarte_evt_type_t.nrfx_uarte_evt_rx_byte (c enumerator)": [[191, "c.nrfx_uarte_evt_type_t.NRFX_UARTE_EVT_RX_BYTE"]], "nrfx_uarte_evt_type_t.nrfx_uarte_evt_rx_disabled (c enumerator)": [[191, "c.nrfx_uarte_evt_type_t.NRFX_UARTE_EVT_RX_DISABLED"]], "nrfx_uarte_evt_type_t.nrfx_uarte_evt_rx_done (c enumerator)": [[191, "c.nrfx_uarte_evt_type_t.NRFX_UARTE_EVT_RX_DONE"]], "nrfx_uarte_evt_type_t.nrfx_uarte_evt_trigger (c enumerator)": [[191, "c.nrfx_uarte_evt_type_t.NRFX_UARTE_EVT_TRIGGER"]], "nrfx_uarte_evt_type_t.nrfx_uarte_evt_tx_done (c enumerator)": [[191, "c.nrfx_uarte_evt_type_t.NRFX_UARTE_EVT_TX_DONE"]], "nrfx_uarte_init (c function)": [[191, "c.nrfx_uarte_init"]], "nrfx_uarte_init_check (c function)": [[191, "c.nrfx_uarte_init_check"]], "nrfx_uarte_int_trigger (c function)": [[191, "c.nrfx_uarte_int_trigger"]], "nrfx_uarte_reconfigure (c function)": [[191, "c.nrfx_uarte_reconfigure"]], "nrfx_uarte_rx (c function)": [[191, "c.nrfx_uarte_rx"]], "nrfx_uarte_rx_abort (c function)": [[191, "c.nrfx_uarte_rx_abort"]], "nrfx_uarte_rx_buffer_set (c function)": [[191, "c.nrfx_uarte_rx_buffer_set"]], "nrfx_uarte_rx_cache_t (c struct)": [[191, "c.nrfx_uarte_rx_cache_t"]], "nrfx_uarte_rx_cache_t.buf_req (c var)": [[191, "c.nrfx_uarte_rx_cache_t.buf_req"]], "nrfx_uarte_rx_cache_t.cache (c var)": [[191, "c.nrfx_uarte_rx_cache_t.cache"]], "nrfx_uarte_rx_cache_t.cache_len (c var)": [[191, "c.nrfx_uarte_rx_cache_t.cache_len"]], "nrfx_uarte_rx_cache_t.idx (c var)": [[191, "c.nrfx_uarte_rx_cache_t.idx"]], "nrfx_uarte_rx_cache_t.received (c var)": [[191, "c.nrfx_uarte_rx_cache_t.received"]], "nrfx_uarte_rx_cache_t.started (c var)": [[191, "c.nrfx_uarte_rx_cache_t.started"]], "nrfx_uarte_rx_cache_t.user (c var)": [[191, "c.nrfx_uarte_rx_cache_t.user"]], "nrfx_uarte_rx_disabled_evt_t (c struct)": [[191, "c.nrfx_uarte_rx_disabled_evt_t"]], "nrfx_uarte_rx_disabled_evt_t.flush_cnt (c var)": [[191, "c.nrfx_uarte_rx_disabled_evt_t.flush_cnt"]], "nrfx_uarte_rx_enable (c function)": [[191, "c.nrfx_uarte_rx_enable"]], "nrfx_uarte_rx_evt_t (c struct)": [[191, "c.nrfx_uarte_rx_evt_t"]], "nrfx_uarte_rx_evt_t.length (c var)": [[191, "c.nrfx_uarte_rx_evt_t.length"]], "nrfx_uarte_rx_evt_t.p_buffer (c var)": [[191, "c.nrfx_uarte_rx_evt_t.p_buffer"]], "nrfx_uarte_rx_new_data_check (c function)": [[191, "c.nrfx_uarte_rx_new_data_check"]], "nrfx_uarte_rx_ready (c function)": [[191, "c.nrfx_uarte_rx_ready"]], "nrfx_uarte_rxdrdy_disable (c function)": [[191, "c.nrfx_uarte_rxdrdy_disable"]], "nrfx_uarte_rxdrdy_enable (c function)": [[191, "c.nrfx_uarte_rxdrdy_enable"]], "nrfx_uarte_t (c struct)": [[191, "c.nrfx_uarte_t"]], "nrfx_uarte_t.drv_inst_idx (c var)": [[191, "c.nrfx_uarte_t.drv_inst_idx"]], "nrfx_uarte_t.p_reg (c var)": [[191, "c.nrfx_uarte_t.p_reg"]], "nrfx_uarte_task_address_get (c function)": [[191, "c.nrfx_uarte_task_address_get"]], "nrfx_uarte_tx (c function)": [[191, "c.nrfx_uarte_tx"]], "nrfx_uarte_tx_abort (c function)": [[191, "c.nrfx_uarte_tx_abort"]], "nrfx_uarte_tx_evt_t (c struct)": [[191, "c.nrfx_uarte_tx_evt_t"]], "nrfx_uarte_tx_evt_t.flags (c var)": [[191, "c.nrfx_uarte_tx_evt_t.flags"]], "nrfx_uarte_tx_evt_t.length (c var)": [[191, "c.nrfx_uarte_tx_evt_t.length"]], "nrfx_uarte_tx_evt_t.p_buffer (c var)": [[191, "c.nrfx_uarte_tx_evt_t.p_buffer"]], "nrfx_uarte_tx_in_progress (c function)": [[191, "c.nrfx_uarte_tx_in_progress"]], "nrfx_uarte_uninit (c function)": [[191, "c.nrfx_uarte_uninit"]], "nrf_uarte_base_frequency_128mhz (c macro)": [[192, "c.NRF_UARTE_BASE_FREQUENCY_128MHZ"]], "nrf_uarte_base_frequency_16mhz (c macro)": [[192, "c.NRF_UARTE_BASE_FREQUENCY_16MHZ"]], "nrf_uarte_base_frequency_64mhz (c macro)": [[192, "c.NRF_UARTE_BASE_FREQUENCY_64MHZ"]], "nrf_uarte_base_frequency_get (c macro)": [[192, "c.NRF_UARTE_BASE_FREQUENCY_GET"]], "nrf_uarte_has_dma_reg (c macro)": [[192, "c.NRF_UARTE_HAS_DMA_REG"]], "nrf_uarte_has_dma_shorts (c macro)": [[192, "c.NRF_UARTE_HAS_DMA_SHORTS"]], "nrf_uarte_has_dma_tasks_events (c macro)": [[192, "c.NRF_UARTE_HAS_DMA_TASKS_EVENTS"]], "nrf_uarte_has_endtx_stoptx_short (c macro)": [[192, "c.NRF_UARTE_HAS_ENDTX_STOPTX_SHORT"]], "nrf_uarte_inst_get (c macro)": [[192, "c.NRF_UARTE_INST_GET"]], "nrf_uarte_is_128mhz_uarte (c macro)": [[192, "c.NRF_UARTE_IS_128MHZ_UARTE"]], "nrf_uarte_is_64mhz_uarte (c macro)": [[192, "c.NRF_UARTE_IS_64MHZ_UARTE"]], "nrf_uarte_baudrate_set (c function)": [[192, "c.nrf_uarte_baudrate_set"]], "nrf_uarte_baudrate_t (c enum)": [[192, "c.nrf_uarte_baudrate_t"]], "nrf_uarte_baudrate_t.nrf_uarte_baudrate_1000000 (c enumerator)": [[192, "c.nrf_uarte_baudrate_t.NRF_UARTE_BAUDRATE_1000000"]], "nrf_uarte_baudrate_t.nrf_uarte_baudrate_115200 (c enumerator)": [[192, "c.nrf_uarte_baudrate_t.NRF_UARTE_BAUDRATE_115200"]], "nrf_uarte_baudrate_t.nrf_uarte_baudrate_1200 (c enumerator)": [[192, "c.nrf_uarte_baudrate_t.NRF_UARTE_BAUDRATE_1200"]], "nrf_uarte_baudrate_t.nrf_uarte_baudrate_14400 (c enumerator)": [[192, "c.nrf_uarte_baudrate_t.NRF_UARTE_BAUDRATE_14400"]], "nrf_uarte_baudrate_t.nrf_uarte_baudrate_19200 (c enumerator)": [[192, "c.nrf_uarte_baudrate_t.NRF_UARTE_BAUDRATE_19200"]], "nrf_uarte_baudrate_t.nrf_uarte_baudrate_230400 (c enumerator)": [[192, "c.nrf_uarte_baudrate_t.NRF_UARTE_BAUDRATE_230400"]], "nrf_uarte_baudrate_t.nrf_uarte_baudrate_2400 (c enumerator)": [[192, "c.nrf_uarte_baudrate_t.NRF_UARTE_BAUDRATE_2400"]], "nrf_uarte_baudrate_t.nrf_uarte_baudrate_250000 (c enumerator)": [[192, "c.nrf_uarte_baudrate_t.NRF_UARTE_BAUDRATE_250000"]], "nrf_uarte_baudrate_t.nrf_uarte_baudrate_28800 (c enumerator)": [[192, "c.nrf_uarte_baudrate_t.NRF_UARTE_BAUDRATE_28800"]], "nrf_uarte_baudrate_t.nrf_uarte_baudrate_31250 (c enumerator)": [[192, "c.nrf_uarte_baudrate_t.NRF_UARTE_BAUDRATE_31250"]], "nrf_uarte_baudrate_t.nrf_uarte_baudrate_38400 (c enumerator)": [[192, "c.nrf_uarte_baudrate_t.NRF_UARTE_BAUDRATE_38400"]], "nrf_uarte_baudrate_t.nrf_uarte_baudrate_460800 (c enumerator)": [[192, "c.nrf_uarte_baudrate_t.NRF_UARTE_BAUDRATE_460800"]], "nrf_uarte_baudrate_t.nrf_uarte_baudrate_4800 (c enumerator)": [[192, "c.nrf_uarte_baudrate_t.NRF_UARTE_BAUDRATE_4800"]], "nrf_uarte_baudrate_t.nrf_uarte_baudrate_56000 (c enumerator)": [[192, "c.nrf_uarte_baudrate_t.NRF_UARTE_BAUDRATE_56000"]], "nrf_uarte_baudrate_t.nrf_uarte_baudrate_57600 (c enumerator)": [[192, "c.nrf_uarte_baudrate_t.NRF_UARTE_BAUDRATE_57600"]], "nrf_uarte_baudrate_t.nrf_uarte_baudrate_76800 (c enumerator)": [[192, "c.nrf_uarte_baudrate_t.NRF_UARTE_BAUDRATE_76800"]], "nrf_uarte_baudrate_t.nrf_uarte_baudrate_921600 (c enumerator)": [[192, "c.nrf_uarte_baudrate_t.NRF_UARTE_BAUDRATE_921600"]], "nrf_uarte_baudrate_t.nrf_uarte_baudrate_9600 (c enumerator)": [[192, "c.nrf_uarte_baudrate_t.NRF_UARTE_BAUDRATE_9600"]], "nrf_uarte_config_t (c struct)": [[192, "c.nrf_uarte_config_t"]], "nrf_uarte_config_t.hwfc (c var)": [[192, "c.nrf_uarte_config_t.hwfc"]], "nrf_uarte_config_t.parity (c var)": [[192, "c.nrf_uarte_config_t.parity"]], "nrf_uarte_config_t.paritytype (c var)": [[192, "c.nrf_uarte_config_t.paritytype"]], "nrf_uarte_config_t.stop (c var)": [[192, "c.nrf_uarte_config_t.stop"]], "nrf_uarte_configure (c function)": [[192, "c.nrf_uarte_configure"]], "nrf_uarte_cts_pin_get (c function)": [[192, "c.nrf_uarte_cts_pin_get"]], "nrf_uarte_disable (c function)": [[192, "c.nrf_uarte_disable"]], "nrf_uarte_enable (c function)": [[192, "c.nrf_uarte_enable"]], "nrf_uarte_enable_check (c function)": [[192, "c.nrf_uarte_enable_check"]], "nrf_uarte_error_mask_t (c enum)": [[192, "c.nrf_uarte_error_mask_t"]], "nrf_uarte_error_mask_t.nrf_uarte_error_break_mask (c enumerator)": [[192, "c.nrf_uarte_error_mask_t.NRF_UARTE_ERROR_BREAK_MASK"]], "nrf_uarte_error_mask_t.nrf_uarte_error_framing_mask (c enumerator)": [[192, "c.nrf_uarte_error_mask_t.NRF_UARTE_ERROR_FRAMING_MASK"]], "nrf_uarte_error_mask_t.nrf_uarte_error_overrun_mask (c enumerator)": [[192, "c.nrf_uarte_error_mask_t.NRF_UARTE_ERROR_OVERRUN_MASK"]], "nrf_uarte_error_mask_t.nrf_uarte_error_parity_mask (c enumerator)": [[192, "c.nrf_uarte_error_mask_t.NRF_UARTE_ERROR_PARITY_MASK"]], "nrf_uarte_errorsrc_get_and_clear (c function)": [[192, "c.nrf_uarte_errorsrc_get_and_clear"]], "nrf_uarte_event_address_get (c function)": [[192, "c.nrf_uarte_event_address_get"]], "nrf_uarte_event_check (c function)": [[192, "c.nrf_uarte_event_check"]], "nrf_uarte_event_clear (c function)": [[192, "c.nrf_uarte_event_clear"]], "nrf_uarte_event_t (c enum)": [[192, "c.nrf_uarte_event_t"]], "nrf_uarte_event_t.nrf_uarte_event_cts (c enumerator)": [[192, "c.nrf_uarte_event_t.NRF_UARTE_EVENT_CTS"]], "nrf_uarte_event_t.nrf_uarte_event_endrx (c enumerator)": [[192, "c.nrf_uarte_event_t.NRF_UARTE_EVENT_ENDRX"]], "nrf_uarte_event_t.nrf_uarte_event_endtx (c enumerator)": [[192, "c.nrf_uarte_event_t.NRF_UARTE_EVENT_ENDTX"]], "nrf_uarte_event_t.nrf_uarte_event_error (c enumerator)": [[192, "c.nrf_uarte_event_t.NRF_UARTE_EVENT_ERROR"]], "nrf_uarte_event_t.nrf_uarte_event_ncts (c enumerator)": [[192, "c.nrf_uarte_event_t.NRF_UARTE_EVENT_NCTS"]], "nrf_uarte_event_t.nrf_uarte_event_rxdrdy (c enumerator)": [[192, "c.nrf_uarte_event_t.NRF_UARTE_EVENT_RXDRDY"]], "nrf_uarte_event_t.nrf_uarte_event_rxstarted (c enumerator)": [[192, "c.nrf_uarte_event_t.NRF_UARTE_EVENT_RXSTARTED"]], "nrf_uarte_event_t.nrf_uarte_event_rxto (c enumerator)": [[192, "c.nrf_uarte_event_t.NRF_UARTE_EVENT_RXTO"]], "nrf_uarte_event_t.nrf_uarte_event_txdrdy (c enumerator)": [[192, "c.nrf_uarte_event_t.NRF_UARTE_EVENT_TXDRDY"]], "nrf_uarte_event_t.nrf_uarte_event_txstarted (c enumerator)": [[192, "c.nrf_uarte_event_t.NRF_UARTE_EVENT_TXSTARTED"]], "nrf_uarte_event_t.nrf_uarte_event_txstopped (c enumerator)": [[192, "c.nrf_uarte_event_t.NRF_UARTE_EVENT_TXSTOPPED"]], "nrf_uarte_hwfc_pins_disconnect (c function)": [[192, "c.nrf_uarte_hwfc_pins_disconnect"]], "nrf_uarte_hwfc_pins_set (c function)": [[192, "c.nrf_uarte_hwfc_pins_set"]], "nrf_uarte_hwfc_t (c enum)": [[192, "c.nrf_uarte_hwfc_t"]], "nrf_uarte_hwfc_t.nrf_uarte_hwfc_disabled (c enumerator)": [[192, "c.nrf_uarte_hwfc_t.NRF_UARTE_HWFC_DISABLED"]], "nrf_uarte_hwfc_t.nrf_uarte_hwfc_enabled (c enumerator)": [[192, "c.nrf_uarte_hwfc_t.NRF_UARTE_HWFC_ENABLED"]], "nrf_uarte_int_disable (c function)": [[192, "c.nrf_uarte_int_disable"]], "nrf_uarte_int_enable (c function)": [[192, "c.nrf_uarte_int_enable"]], "nrf_uarte_int_enable_check (c function)": [[192, "c.nrf_uarte_int_enable_check"]], "nrf_uarte_int_mask_t (c enum)": [[192, "c.nrf_uarte_int_mask_t"]], "nrf_uarte_int_mask_t.nrf_uarte_int_cts_mask (c enumerator)": [[192, "c.nrf_uarte_int_mask_t.NRF_UARTE_INT_CTS_MASK"]], "nrf_uarte_int_mask_t.nrf_uarte_int_endrx_mask (c enumerator)": [[192, "c.nrf_uarte_int_mask_t.NRF_UARTE_INT_ENDRX_MASK"]], "nrf_uarte_int_mask_t.nrf_uarte_int_endtx_mask (c enumerator)": [[192, "c.nrf_uarte_int_mask_t.NRF_UARTE_INT_ENDTX_MASK"]], "nrf_uarte_int_mask_t.nrf_uarte_int_error_mask (c enumerator)": [[192, "c.nrf_uarte_int_mask_t.NRF_UARTE_INT_ERROR_MASK"]], "nrf_uarte_int_mask_t.nrf_uarte_int_ncts_mask (c enumerator)": [[192, "c.nrf_uarte_int_mask_t.NRF_UARTE_INT_NCTS_MASK"]], "nrf_uarte_int_mask_t.nrf_uarte_int_rxdrdy_mask (c enumerator)": [[192, "c.nrf_uarte_int_mask_t.NRF_UARTE_INT_RXDRDY_MASK"]], "nrf_uarte_int_mask_t.nrf_uarte_int_rxstarted_mask (c enumerator)": [[192, "c.nrf_uarte_int_mask_t.NRF_UARTE_INT_RXSTARTED_MASK"]], "nrf_uarte_int_mask_t.nrf_uarte_int_rxto_mask (c enumerator)": [[192, "c.nrf_uarte_int_mask_t.NRF_UARTE_INT_RXTO_MASK"]], "nrf_uarte_int_mask_t.nrf_uarte_int_txdrdy_mask (c enumerator)": [[192, "c.nrf_uarte_int_mask_t.NRF_UARTE_INT_TXDRDY_MASK"]], "nrf_uarte_int_mask_t.nrf_uarte_int_txstarted_mask (c enumerator)": [[192, "c.nrf_uarte_int_mask_t.NRF_UARTE_INT_TXSTARTED_MASK"]], "nrf_uarte_int_mask_t.nrf_uarte_int_txstopped_mask (c enumerator)": [[192, "c.nrf_uarte_int_mask_t.NRF_UARTE_INT_TXSTOPPED_MASK"]], "nrf_uarte_parity_t (c enum)": [[192, "c.nrf_uarte_parity_t"]], "nrf_uarte_parity_t.nrf_uarte_parity_excluded (c enumerator)": [[192, "c.nrf_uarte_parity_t.NRF_UARTE_PARITY_EXCLUDED"]], "nrf_uarte_parity_t.nrf_uarte_parity_included (c enumerator)": [[192, "c.nrf_uarte_parity_t.NRF_UARTE_PARITY_INCLUDED"]], "nrf_uarte_paritytype_t (c enum)": [[192, "c.nrf_uarte_paritytype_t"]], "nrf_uarte_paritytype_t.nrf_uarte_paritytype_even (c enumerator)": [[192, "c.nrf_uarte_paritytype_t.NRF_UARTE_PARITYTYPE_EVEN"]], "nrf_uarte_paritytype_t.nrf_uarte_paritytype_odd (c enumerator)": [[192, "c.nrf_uarte_paritytype_t.NRF_UARTE_PARITYTYPE_ODD"]], "nrf_uarte_publish_clear (c function)": [[192, "c.nrf_uarte_publish_clear"]], "nrf_uarte_publish_set (c function)": [[192, "c.nrf_uarte_publish_set"]], "nrf_uarte_rts_pin_get (c function)": [[192, "c.nrf_uarte_rts_pin_get"]], "nrf_uarte_rx_amount_get (c function)": [[192, "c.nrf_uarte_rx_amount_get"]], "nrf_uarte_rx_buffer_get (c function)": [[192, "c.nrf_uarte_rx_buffer_get"]], "nrf_uarte_rx_buffer_set (c function)": [[192, "c.nrf_uarte_rx_buffer_set"]], "nrf_uarte_rx_pin_get (c function)": [[192, "c.nrf_uarte_rx_pin_get"]], "nrf_uarte_short_t (c enum)": [[192, "c.nrf_uarte_short_t"]], "nrf_uarte_short_t.nrf_uarte_short_endrx_startrx (c enumerator)": [[192, "c.nrf_uarte_short_t.NRF_UARTE_SHORT_ENDRX_STARTRX"]], "nrf_uarte_short_t.nrf_uarte_short_endrx_stoprx (c enumerator)": [[192, "c.nrf_uarte_short_t.NRF_UARTE_SHORT_ENDRX_STOPRX"]], "nrf_uarte_short_t.nrf_uarte_short_endtx_stoptx (c enumerator)": [[192, "c.nrf_uarte_short_t.NRF_UARTE_SHORT_ENDTX_STOPTX"]], "nrf_uarte_shorts_disable (c function)": [[192, "c.nrf_uarte_shorts_disable"]], "nrf_uarte_shorts_enable (c function)": [[192, "c.nrf_uarte_shorts_enable"]], "nrf_uarte_shorts_get (c function)": [[192, "c.nrf_uarte_shorts_get"]], "nrf_uarte_shorts_set (c function)": [[192, "c.nrf_uarte_shorts_set"]], "nrf_uarte_stop_t (c enum)": [[192, "c.nrf_uarte_stop_t"]], "nrf_uarte_stop_t.nrf_uarte_stop_one (c enumerator)": [[192, "c.nrf_uarte_stop_t.NRF_UARTE_STOP_ONE"]], "nrf_uarte_stop_t.nrf_uarte_stop_two (c enumerator)": [[192, "c.nrf_uarte_stop_t.NRF_UARTE_STOP_TWO"]], "nrf_uarte_subscribe_clear (c function)": [[192, "c.nrf_uarte_subscribe_clear"]], "nrf_uarte_subscribe_set (c function)": [[192, "c.nrf_uarte_subscribe_set"]], "nrf_uarte_task_address_get (c function)": [[192, "c.nrf_uarte_task_address_get"]], "nrf_uarte_task_t (c enum)": [[192, "c.nrf_uarte_task_t"]], "nrf_uarte_task_t.nrf_uarte_task_flushrx (c enumerator)": [[192, "c.nrf_uarte_task_t.NRF_UARTE_TASK_FLUSHRX"]], "nrf_uarte_task_t.nrf_uarte_task_startrx (c enumerator)": [[192, "c.nrf_uarte_task_t.NRF_UARTE_TASK_STARTRX"]], "nrf_uarte_task_t.nrf_uarte_task_starttx (c enumerator)": [[192, "c.nrf_uarte_task_t.NRF_UARTE_TASK_STARTTX"]], "nrf_uarte_task_t.nrf_uarte_task_stoprx (c enumerator)": [[192, "c.nrf_uarte_task_t.NRF_UARTE_TASK_STOPRX"]], "nrf_uarte_task_t.nrf_uarte_task_stoptx (c enumerator)": [[192, "c.nrf_uarte_task_t.NRF_UARTE_TASK_STOPTX"]], "nrf_uarte_task_trigger (c function)": [[192, "c.nrf_uarte_task_trigger"]], "nrf_uarte_tx_amount_get (c function)": [[192, "c.nrf_uarte_tx_amount_get"]], "nrf_uarte_tx_buffer_get (c function)": [[192, "c.nrf_uarte_tx_buffer_get"]], "nrf_uarte_tx_buffer_set (c function)": [[192, "c.nrf_uarte_tx_buffer_set"]], "nrf_uarte_tx_pin_get (c function)": [[192, "c.nrf_uarte_tx_pin_get"]], "nrf_uarte_txrx_pins_disconnect (c function)": [[192, "c.nrf_uarte_txrx_pins_disconnect"]], "nrf_uarte_txrx_pins_set (c function)": [[192, "c.nrf_uarte_txrx_pins_set"]], "nrfy_uarte_baudrate_set (c function)": [[193, "c.nrfy_uarte_baudrate_set"]], "nrfy_uarte_buffer_t (c struct)": [[193, "c.nrfy_uarte_buffer_t"]], "nrfy_uarte_buffer_t.length (c var)": [[193, "c.nrfy_uarte_buffer_t.length"]], "nrfy_uarte_buffer_t.p_buffer (c var)": [[193, "c.nrfy_uarte_buffer_t.p_buffer"]], "nrfy_uarte_config_t (c struct)": [[193, "c.nrfy_uarte_config_t"]], "nrfy_uarte_config_t.baudrate (c var)": [[193, "c.nrfy_uarte_config_t.baudrate"]], "nrfy_uarte_config_t.config (c var)": [[193, "c.nrfy_uarte_config_t.config"]], "nrfy_uarte_config_t.pins (c var)": [[193, "c.nrfy_uarte_config_t.pins"]], "nrfy_uarte_config_t.skip_psel_cfg (c var)": [[193, "c.nrfy_uarte_config_t.skip_psel_cfg"]], "nrfy_uarte_configure (c function)": [[193, "c.nrfy_uarte_configure"]], "nrfy_uarte_cts_pin_get (c function)": [[193, "c.nrfy_uarte_cts_pin_get"]], "nrfy_uarte_disable (c function)": [[193, "c.nrfy_uarte_disable"]], "nrfy_uarte_enable (c function)": [[193, "c.nrfy_uarte_enable"]], "nrfy_uarte_enable_check (c function)": [[193, "c.nrfy_uarte_enable_check"]], "nrfy_uarte_errorsrc_get_and_clear (c function)": [[193, "c.nrfy_uarte_errorsrc_get_and_clear"]], "nrfy_uarte_event_address_get (c function)": [[193, "c.nrfy_uarte_event_address_get"]], "nrfy_uarte_event_check (c function)": [[193, "c.nrfy_uarte_event_check"]], "nrfy_uarte_event_clear (c function)": [[193, "c.nrfy_uarte_event_clear"]], "nrfy_uarte_events_process (c function)": [[193, "c.nrfy_uarte_events_process"]], "nrfy_uarte_hwfc_pins_disconnect (c function)": [[193, "c.nrfy_uarte_hwfc_pins_disconnect"]], "nrfy_uarte_hwfc_pins_set (c function)": [[193, "c.nrfy_uarte_hwfc_pins_set"]], "nrfy_uarte_int_disable (c function)": [[193, "c.nrfy_uarte_int_disable"]], "nrfy_uarte_int_enable (c function)": [[193, "c.nrfy_uarte_int_enable"]], "nrfy_uarte_int_enable_check (c function)": [[193, "c.nrfy_uarte_int_enable_check"]], "nrfy_uarte_int_init (c function)": [[193, "c.nrfy_uarte_int_init"]], "nrfy_uarte_int_uninit (c function)": [[193, "c.nrfy_uarte_int_uninit"]], "nrfy_uarte_periph_configure (c function)": [[193, "c.nrfy_uarte_periph_configure"]], "nrfy_uarte_pins_disconnect (c function)": [[193, "c.nrfy_uarte_pins_disconnect"]], "nrfy_uarte_pins_get (c function)": [[193, "c.nrfy_uarte_pins_get"]], "nrfy_uarte_pins_t (c struct)": [[193, "c.nrfy_uarte_pins_t"]], "nrfy_uarte_pins_t.cts_pin (c var)": [[193, "c.nrfy_uarte_pins_t.cts_pin"]], "nrfy_uarte_pins_t.rts_pin (c var)": [[193, "c.nrfy_uarte_pins_t.rts_pin"]], "nrfy_uarte_pins_t.rxd_pin (c var)": [[193, "c.nrfy_uarte_pins_t.rxd_pin"]], "nrfy_uarte_pins_t.txd_pin (c var)": [[193, "c.nrfy_uarte_pins_t.txd_pin"]], "nrfy_uarte_publish_clear (c function)": [[193, "c.nrfy_uarte_publish_clear"]], "nrfy_uarte_publish_set (c function)": [[193, "c.nrfy_uarte_publish_set"]], "nrfy_uarte_rts_pin_get (c function)": [[193, "c.nrfy_uarte_rts_pin_get"]], "nrfy_uarte_rx_amount_get (c function)": [[193, "c.nrfy_uarte_rx_amount_get"]], "nrfy_uarte_rx_buffer_set (c function)": [[193, "c.nrfy_uarte_rx_buffer_set"]], "nrfy_uarte_rx_pin_get (c function)": [[193, "c.nrfy_uarte_rx_pin_get"]], "nrfy_uarte_rx_start (c function)": [[193, "c.nrfy_uarte_rx_start"]], "nrfy_uarte_shorts_disable (c function)": [[193, "c.nrfy_uarte_shorts_disable"]], "nrfy_uarte_shorts_enable (c function)": [[193, "c.nrfy_uarte_shorts_enable"]], "nrfy_uarte_shorts_get (c function)": [[193, "c.nrfy_uarte_shorts_get"]], "nrfy_uarte_shorts_set (c function)": [[193, "c.nrfy_uarte_shorts_set"]], "nrfy_uarte_stop (c function)": [[193, "c.nrfy_uarte_stop"]], "nrfy_uarte_subscribe_clear (c function)": [[193, "c.nrfy_uarte_subscribe_clear"]], "nrfy_uarte_subscribe_set (c function)": [[193, "c.nrfy_uarte_subscribe_set"]], "nrfy_uarte_task_address_get (c function)": [[193, "c.nrfy_uarte_task_address_get"]], "nrfy_uarte_task_trigger (c function)": [[193, "c.nrfy_uarte_task_trigger"]], "nrfy_uarte_tx_abort (c function)": [[193, "c.nrfy_uarte_tx_abort"]], "nrfy_uarte_tx_amount_get (c function)": [[193, "c.nrfy_uarte_tx_amount_get"]], "nrfy_uarte_tx_buffer_get (c function)": [[193, "c.nrfy_uarte_tx_buffer_get"]], "nrfy_uarte_tx_buffer_set (c function)": [[193, "c.nrfy_uarte_tx_buffer_set"]], "nrfy_uarte_tx_pin_get (c function)": [[193, "c.nrfy_uarte_tx_pin_get"]], "nrfy_uarte_tx_start (c function)": [[193, "c.nrfy_uarte_tx_start"]], "nrfy_uarte_txrx_pins_disconnect (c function)": [[193, "c.nrfy_uarte_txrx_pins_disconnect"]], "nrfy_uarte_txrx_pins_set (c function)": [[193, "c.nrfy_uarte_txrx_pins_set"]], "nrf_uicr_bootconf_perm_mask (c macro)": [[195, "c.NRF_UICR_BOOTCONF_PERM_MASK"]], "nrf_uicr_dppi_global_count (c macro)": [[195, "c.NRF_UICR_DPPI_GLOBAL_COUNT"]], "nrf_uicr_dppi_local_count (c macro)": [[195, "c.NRF_UICR_DPPI_LOCAL_COUNT"]], "nrf_uicr_gpiote_ch_count (c macro)": [[195, "c.NRF_UICR_GPIOTE_CH_COUNT"]], "nrf_uicr_gpio_count (c macro)": [[195, "c.NRF_UICR_GPIO_COUNT"]], "nrf_uicr_has_bootconf (c macro)": [[195, "c.NRF_UICR_HAS_BOOTCONF"]], "nrf_uicr_has_ch_link_dir_en (c macro)": [[195, "c.NRF_UICR_HAS_CH_LINK_DIR_EN"]], "nrf_uicr_has_feature_config (c macro)": [[195, "c.NRF_UICR_HAS_FEATURE_CONFIG"]], "nrf_uicr_has_feature_gpio (c macro)": [[195, "c.NRF_UICR_HAS_FEATURE_GPIO"]], "nrf_uicr_has_mailbox (c macro)": [[195, "c.NRF_UICR_HAS_MAILBOX"]], "nrf_uicr_has_mem_config (c macro)": [[195, "c.NRF_UICR_HAS_MEM_CONFIG"]], "nrf_uicr_has_periph_config (c macro)": [[195, "c.NRF_UICR_HAS_PERIPH_CONFIG"]], "nrf_uicr_has_ptrext (c macro)": [[195, "c.NRF_UICR_HAS_PTREXT"]], "nrf_uicr_has_vtor (c macro)": [[195, "c.NRF_UICR_HAS_VTOR"]], "nrf_uicr_ipcmap_count (c macro)": [[195, "c.NRF_UICR_IPCMAP_COUNT"]], "nrf_uicr_ipct_global_count (c macro)": [[195, "c.NRF_UICR_IPCT_GLOBAL_COUNT"]], "nrf_uicr_mailbox_count (c macro)": [[195, "c.NRF_UICR_MAILBOX_COUNT"]], "nrf_uicr_mem_count (c macro)": [[195, "c.NRF_UICR_MEM_COUNT"]], "nrf_uicr_periph_count (c macro)": [[195, "c.NRF_UICR_PERIPH_COUNT"]], "nrf_uicr_boot_region_config_get (c function)": [[195, "c.nrf_uicr_boot_region_config_get"]], "nrf_uicr_boot_region_config_set (c function)": [[195, "c.nrf_uicr_boot_region_config_set"]], "nrf_uicr_boot_region_config_t (c struct)": [[195, "c.nrf_uicr_boot_region_config_t"]], "nrf_uicr_boot_region_config_t.lock (c var)": [[195, "c.nrf_uicr_boot_region_config_t.lock"]], "nrf_uicr_boot_region_config_t.permissions (c var)": [[195, "c.nrf_uicr_boot_region_config_t.permissions"]], "nrf_uicr_boot_region_config_t.size_kb (c var)": [[195, "c.nrf_uicr_boot_region_config_t.size_kb"]], "nrf_uicr_boot_region_config_t.writeonce (c var)": [[195, "c.nrf_uicr_boot_region_config_t.writeonce"]], "nrf_uicr_boot_region_perm_mask_t (c enum)": [[195, "c.nrf_uicr_boot_region_perm_mask_t"]], "nrf_uicr_boot_region_perm_mask_t.nrf_uicr_boot_region_perm_execute_mask (c enumerator)": [[195, "c.nrf_uicr_boot_region_perm_mask_t.NRF_UICR_BOOT_REGION_PERM_EXECUTE_MASK"]], "nrf_uicr_boot_region_perm_mask_t.nrf_uicr_boot_region_perm_read_mask (c enumerator)": [[195, "c.nrf_uicr_boot_region_perm_mask_t.NRF_UICR_BOOT_REGION_PERM_READ_MASK"]], "nrf_uicr_boot_region_perm_mask_t.nrf_uicr_boot_region_perm_secure_mask (c enumerator)": [[195, "c.nrf_uicr_boot_region_perm_mask_t.NRF_UICR_BOOT_REGION_PERM_SECURE_MASK"]], "nrf_uicr_boot_region_perm_mask_t.nrf_uicr_boot_region_perm_write_mask (c enumerator)": [[195, "c.nrf_uicr_boot_region_perm_mask_t.NRF_UICR_BOOT_REGION_PERM_WRITE_MASK"]], "nrf_uicr_dppi_link_t (c struct)": [[195, "c.nrf_uicr_dppi_link_t"]], "nrf_uicr_dppi_link_t.sink (c var)": [[195, "c.nrf_uicr_dppi_link_t.sink"]], "nrf_uicr_dppi_link_t.source (c var)": [[195, "c.nrf_uicr_dppi_link_t.source"]], "nrf_uicr_feature_index_mask_t (c enum)": [[195, "c.nrf_uicr_feature_index_mask_t"]], "nrf_uicr_feature_index_mask_t.nrf_uicr_feature_index_0_mask (c enumerator)": [[195, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_0_MASK"]], "nrf_uicr_feature_index_mask_t.nrf_uicr_feature_index_10_mask (c enumerator)": [[195, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_10_MASK"]], "nrf_uicr_feature_index_mask_t.nrf_uicr_feature_index_11_mask (c enumerator)": [[195, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_11_MASK"]], "nrf_uicr_feature_index_mask_t.nrf_uicr_feature_index_12_mask (c enumerator)": [[195, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_12_MASK"]], "nrf_uicr_feature_index_mask_t.nrf_uicr_feature_index_13_mask (c enumerator)": [[195, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_13_MASK"]], "nrf_uicr_feature_index_mask_t.nrf_uicr_feature_index_14_mask (c enumerator)": [[195, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_14_MASK"]], "nrf_uicr_feature_index_mask_t.nrf_uicr_feature_index_15_mask (c enumerator)": [[195, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_15_MASK"]], "nrf_uicr_feature_index_mask_t.nrf_uicr_feature_index_16_mask (c enumerator)": [[195, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_16_MASK"]], "nrf_uicr_feature_index_mask_t.nrf_uicr_feature_index_17_mask (c enumerator)": [[195, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_17_MASK"]], "nrf_uicr_feature_index_mask_t.nrf_uicr_feature_index_18_mask (c enumerator)": [[195, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_18_MASK"]], "nrf_uicr_feature_index_mask_t.nrf_uicr_feature_index_19_mask (c enumerator)": [[195, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_19_MASK"]], "nrf_uicr_feature_index_mask_t.nrf_uicr_feature_index_1_mask (c enumerator)": [[195, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_1_MASK"]], "nrf_uicr_feature_index_mask_t.nrf_uicr_feature_index_20_mask (c enumerator)": [[195, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_20_MASK"]], "nrf_uicr_feature_index_mask_t.nrf_uicr_feature_index_21_mask (c enumerator)": [[195, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_21_MASK"]], "nrf_uicr_feature_index_mask_t.nrf_uicr_feature_index_22_mask (c enumerator)": [[195, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_22_MASK"]], "nrf_uicr_feature_index_mask_t.nrf_uicr_feature_index_23_mask (c enumerator)": [[195, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_23_MASK"]], "nrf_uicr_feature_index_mask_t.nrf_uicr_feature_index_24_mask (c enumerator)": [[195, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_24_MASK"]], "nrf_uicr_feature_index_mask_t.nrf_uicr_feature_index_25_mask (c enumerator)": [[195, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_25_MASK"]], "nrf_uicr_feature_index_mask_t.nrf_uicr_feature_index_26_mask (c enumerator)": [[195, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_26_MASK"]], "nrf_uicr_feature_index_mask_t.nrf_uicr_feature_index_27_mask (c enumerator)": [[195, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_27_MASK"]], "nrf_uicr_feature_index_mask_t.nrf_uicr_feature_index_28_mask (c enumerator)": [[195, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_28_MASK"]], "nrf_uicr_feature_index_mask_t.nrf_uicr_feature_index_29_mask (c enumerator)": [[195, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_29_MASK"]], "nrf_uicr_feature_index_mask_t.nrf_uicr_feature_index_2_mask (c enumerator)": [[195, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_2_MASK"]], "nrf_uicr_feature_index_mask_t.nrf_uicr_feature_index_30_mask (c enumerator)": [[195, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_30_MASK"]], "nrf_uicr_feature_index_mask_t.nrf_uicr_feature_index_31_mask (c enumerator)": [[195, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_31_MASK"]], "nrf_uicr_feature_index_mask_t.nrf_uicr_feature_index_3_mask (c enumerator)": [[195, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_3_MASK"]], "nrf_uicr_feature_index_mask_t.nrf_uicr_feature_index_4_mask (c enumerator)": [[195, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_4_MASK"]], "nrf_uicr_feature_index_mask_t.nrf_uicr_feature_index_5_mask (c enumerator)": [[195, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_5_MASK"]], "nrf_uicr_feature_index_mask_t.nrf_uicr_feature_index_6_mask (c enumerator)": [[195, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_6_MASK"]], "nrf_uicr_feature_index_mask_t.nrf_uicr_feature_index_7_mask (c enumerator)": [[195, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_7_MASK"]], "nrf_uicr_feature_index_mask_t.nrf_uicr_feature_index_8_mask (c enumerator)": [[195, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_8_MASK"]], "nrf_uicr_feature_index_mask_t.nrf_uicr_feature_index_9_mask (c enumerator)": [[195, "c.nrf_uicr_feature_index_mask_t.NRF_UICR_FEATURE_INDEX_9_MASK"]], "nrf_uicr_feature_link_get (c function)": [[195, "c.nrf_uicr_feature_link_get"]], "nrf_uicr_feature_own_get (c function)": [[195, "c.nrf_uicr_feature_own_get"]], "nrf_uicr_feature_secure_get (c function)": [[195, "c.nrf_uicr_feature_secure_get"]], "nrf_uicr_feature_t (c enum)": [[195, "c.nrf_uicr_feature_t"]], "nrf_uicr_feature_t.nrf_uicr_feature_dppi_global_ch (c enumerator)": [[195, "c.nrf_uicr_feature_t.NRF_UICR_FEATURE_DPPI_GLOBAL_CH"]], "nrf_uicr_feature_t.nrf_uicr_feature_dppi_global_chg (c enumerator)": [[195, "c.nrf_uicr_feature_t.NRF_UICR_FEATURE_DPPI_GLOBAL_CHG"]], "nrf_uicr_feature_t.nrf_uicr_feature_dppi_local_ch (c enumerator)": [[195, "c.nrf_uicr_feature_t.NRF_UICR_FEATURE_DPPI_LOCAL_CH"]], "nrf_uicr_feature_t.nrf_uicr_feature_dppi_local_chg (c enumerator)": [[195, "c.nrf_uicr_feature_t.NRF_UICR_FEATURE_DPPI_LOCAL_CHG"]], "nrf_uicr_feature_t.nrf_uicr_feature_gpio (c enumerator)": [[195, "c.nrf_uicr_feature_t.NRF_UICR_FEATURE_GPIO"]], "nrf_uicr_feature_t.nrf_uicr_feature_gpiote_ch (c enumerator)": [[195, "c.nrf_uicr_feature_t.NRF_UICR_FEATURE_GPIOTE_CH"]], "nrf_uicr_feature_t.nrf_uicr_feature_grtc_cc (c enumerator)": [[195, "c.nrf_uicr_feature_t.NRF_UICR_FEATURE_GRTC_CC"]], "nrf_uicr_feature_t.nrf_uicr_feature_ipct_global_ch (c enumerator)": [[195, "c.nrf_uicr_feature_t.NRF_UICR_FEATURE_IPCT_GLOBAL_CH"]], "nrf_uicr_feature_t.nrf_uicr_feature_ipct_global_interrupt (c enumerator)": [[195, "c.nrf_uicr_feature_t.NRF_UICR_FEATURE_IPCT_GLOBAL_INTERRUPT"]], "nrf_uicr_feature_t.nrf_uicr_feature_ipct_local_ch (c enumerator)": [[195, "c.nrf_uicr_feature_t.NRF_UICR_FEATURE_IPCT_LOCAL_CH"]], "nrf_uicr_feature_t.nrf_uicr_feature_ipct_local_interrupt (c enumerator)": [[195, "c.nrf_uicr_feature_t.NRF_UICR_FEATURE_IPCT_LOCAL_INTERRUPT"]], "nrf_uicr_gpio_ctrlsel_get (c function)": [[195, "c.nrf_uicr_gpio_ctrlsel_get"]], "nrf_uicr_gpio_instance_get (c function)": [[195, "c.nrf_uicr_gpio_instance_get"]], "nrf_uicr_initnsvtor_get (c function)": [[195, "c.nrf_uicr_initnsvtor_get"]], "nrf_uicr_initsvtor_get (c function)": [[195, "c.nrf_uicr_initsvtor_get"]], "nrf_uicr_ipcmap_config_get (c function)": [[195, "c.nrf_uicr_ipcmap_config_get"]], "nrf_uicr_ipcmap_config_t (c struct)": [[195, "c.nrf_uicr_ipcmap_config_t"]], "nrf_uicr_ipcmap_config_t.sink (c var)": [[195, "c.nrf_uicr_ipcmap_config_t.sink"]], "nrf_uicr_ipcmap_config_t.source (c var)": [[195, "c.nrf_uicr_ipcmap_config_t.source"]], "nrf_uicr_ipcmap_pair_t (c struct)": [[195, "c.nrf_uicr_ipcmap_pair_t"]], "nrf_uicr_ipcmap_pair_t.domain (c var)": [[195, "c.nrf_uicr_ipcmap_pair_t.domain"]], "nrf_uicr_ipcmap_pair_t.ipct_channel (c var)": [[195, "c.nrf_uicr_ipcmap_pair_t.ipct_channel"]], "nrf_uicr_mailbox_address_get (c function)": [[195, "c.nrf_uicr_mailbox_address_get"]], "nrf_uicr_mailbox_config_get (c function)": [[195, "c.nrf_uicr_mailbox_config_get"]], "nrf_uicr_mailbox_config_t (c struct)": [[195, "c.nrf_uicr_mailbox_config_t"]], "nrf_uicr_mailbox_config_t.owner (c var)": [[195, "c.nrf_uicr_mailbox_config_t.owner"]], "nrf_uicr_mailbox_config_t.secure (c var)": [[195, "c.nrf_uicr_mailbox_config_t.secure"]], "nrf_uicr_mailbox_config_t.size (c var)": [[195, "c.nrf_uicr_mailbox_config_t.size"]], "nrf_uicr_mem_config_get (c function)": [[195, "c.nrf_uicr_mem_config_get"]], "nrf_uicr_mem_config_perm_mask_t (c enum)": [[195, "c.nrf_uicr_mem_config_perm_mask_t"]], "nrf_uicr_mem_config_perm_mask_t.nrf_uicr_mem_config_perm_execute_mask (c enumerator)": [[195, "c.nrf_uicr_mem_config_perm_mask_t.NRF_UICR_MEM_CONFIG_PERM_EXECUTE_MASK"]], "nrf_uicr_mem_config_perm_mask_t.nrf_uicr_mem_config_perm_nonsecure_mask (c enumerator)": [[195, "c.nrf_uicr_mem_config_perm_mask_t.NRF_UICR_MEM_CONFIG_PERM_NONSECURE_MASK"]], "nrf_uicr_mem_config_perm_mask_t.nrf_uicr_mem_config_perm_read_mask (c enumerator)": [[195, "c.nrf_uicr_mem_config_perm_mask_t.NRF_UICR_MEM_CONFIG_PERM_READ_MASK"]], "nrf_uicr_mem_config_perm_mask_t.nrf_uicr_mem_config_perm_write_mask (c enumerator)": [[195, "c.nrf_uicr_mem_config_perm_mask_t.NRF_UICR_MEM_CONFIG_PERM_WRITE_MASK"]], "nrf_uicr_mem_config_t (c struct)": [[195, "c.nrf_uicr_mem_config_t"]], "nrf_uicr_mem_config_t.address (c var)": [[195, "c.nrf_uicr_mem_config_t.address"]], "nrf_uicr_mem_config_t.owner (c var)": [[195, "c.nrf_uicr_mem_config_t.owner"]], "nrf_uicr_mem_config_t.permissions (c var)": [[195, "c.nrf_uicr_mem_config_t.permissions"]], "nrf_uicr_mem_size_get (c function)": [[195, "c.nrf_uicr_mem_size_get"]], "nrf_uicr_periph_config_get (c function)": [[195, "c.nrf_uicr_periph_config_get"]], "nrf_uicr_periph_config_t (c struct)": [[195, "c.nrf_uicr_periph_config_t"]], "nrf_uicr_periph_config_t.address (c var)": [[195, "c.nrf_uicr_periph_config_t.address"]], "nrf_uicr_periph_config_t.dmasec (c var)": [[195, "c.nrf_uicr_periph_config_t.dmasec"]], "nrf_uicr_periph_config_t.processor (c var)": [[195, "c.nrf_uicr_periph_config_t.processor"]], "nrf_uicr_periph_config_t.secattr (c var)": [[195, "c.nrf_uicr_periph_config_t.secattr"]], "nrf_uicr_ptrextuicr_get (c function)": [[195, "c.nrf_uicr_ptrextuicr_get"]], "nrfx_usbd_epin (c macro)": [[196, "c.NRFX_USBD_EPIN"]], "nrfx_usbd_epout (c macro)": [[196, "c.NRFX_USBD_EPOUT"]], "nrfx_usbd_epsize (c macro)": [[196, "c.NRFX_USBD_EPSIZE"]], "nrfx_usbd_feeder_buffer_size (c macro)": [[196, "c.NRFX_USBD_FEEDER_BUFFER_SIZE"]], "nrfx_usbd_isosize (c macro)": [[196, "c.NRFX_USBD_ISOSIZE"]], "nrfx_usbd_transfer_in (c macro)": [[196, "c.NRFX_USBD_TRANSFER_IN"]], "nrfx_usbd_transfer_out (c macro)": [[196, "c.NRFX_USBD_TRANSFER_OUT"]], "nrfx_usbd_active_irq_config (c function)": [[196, "c.nrfx_usbd_active_irq_config"]], "nrfx_usbd_bus_suspend_check (c function)": [[196, "c.nrfx_usbd_bus_suspend_check"]], "nrfx_usbd_consumer_t (c type)": [[196, "c.nrfx_usbd_consumer_t"]], "nrfx_usbd_data_ptr_t (c union)": [[196, "c.nrfx_usbd_data_ptr_t"]], "nrfx_usbd_data_ptr_t.addr (c var)": [[196, "c.nrfx_usbd_data_ptr_t.addr"]], "nrfx_usbd_data_ptr_t.rx (c var)": [[196, "c.nrfx_usbd_data_ptr_t.rx"]], "nrfx_usbd_data_ptr_t.tx (c var)": [[196, "c.nrfx_usbd_data_ptr_t.tx"]], "nrfx_usbd_disable (c function)": [[196, "c.nrfx_usbd_disable"]], "nrfx_usbd_enable (c function)": [[196, "c.nrfx_usbd_enable"]], "nrfx_usbd_ep_abort (c function)": [[196, "c.nrfx_usbd_ep_abort"]], "nrfx_usbd_ep_default_config (c function)": [[196, "c.nrfx_usbd_ep_default_config"]], "nrfx_usbd_ep_disable (c function)": [[196, "c.nrfx_usbd_ep_disable"]], "nrfx_usbd_ep_dtoggle_clear (c function)": [[196, "c.nrfx_usbd_ep_dtoggle_clear"]], "nrfx_usbd_ep_enable (c function)": [[196, "c.nrfx_usbd_ep_enable"]], "nrfx_usbd_ep_enable_check (c function)": [[196, "c.nrfx_usbd_ep_enable_check"]], "nrfx_usbd_ep_handled_transfer (c function)": [[196, "c.nrfx_usbd_ep_handled_transfer"]], "nrfx_usbd_ep_is_busy (c function)": [[196, "c.nrfx_usbd_ep_is_busy"]], "nrfx_usbd_ep_max_packet_size_get (c function)": [[196, "c.nrfx_usbd_ep_max_packet_size_get"]], "nrfx_usbd_ep_max_packet_size_set (c function)": [[196, "c.nrfx_usbd_ep_max_packet_size_set"]], "nrfx_usbd_ep_stall (c function)": [[196, "c.nrfx_usbd_ep_stall"]], "nrfx_usbd_ep_stall_check (c function)": [[196, "c.nrfx_usbd_ep_stall_check"]], "nrfx_usbd_ep_stall_clear (c function)": [[196, "c.nrfx_usbd_ep_stall_clear"]], "nrfx_usbd_ep_status_get (c function)": [[196, "c.nrfx_usbd_ep_status_get"]], "nrfx_usbd_ep_status_t (c enum)": [[196, "c.nrfx_usbd_ep_status_t"]], "nrfx_usbd_ep_status_t.nrfx_usbd_ep_aborted (c enumerator)": [[196, "c.nrfx_usbd_ep_status_t.NRFX_USBD_EP_ABORTED"]], "nrfx_usbd_ep_status_t.nrfx_usbd_ep_busy (c enumerator)": [[196, "c.nrfx_usbd_ep_status_t.NRFX_USBD_EP_BUSY"]], "nrfx_usbd_ep_status_t.nrfx_usbd_ep_ok (c enumerator)": [[196, "c.nrfx_usbd_ep_status_t.NRFX_USBD_EP_OK"]], "nrfx_usbd_ep_status_t.nrfx_usbd_ep_overload (c enumerator)": [[196, "c.nrfx_usbd_ep_status_t.NRFX_USBD_EP_OVERLOAD"]], "nrfx_usbd_ep_status_t.nrfx_usbd_ep_waiting (c enumerator)": [[196, "c.nrfx_usbd_ep_status_t.NRFX_USBD_EP_WAITING"]], "nrfx_usbd_ep_t (c enum)": [[196, "c.nrfx_usbd_ep_t"]], "nrfx_usbd_ep_t.nrfx_usbd_epin0 (c enumerator)": [[196, "c.nrfx_usbd_ep_t.NRFX_USBD_EPIN0"]], "nrfx_usbd_ep_t.nrfx_usbd_epin1 (c enumerator)": [[196, "c.nrfx_usbd_ep_t.NRFX_USBD_EPIN1"]], "nrfx_usbd_ep_t.nrfx_usbd_epin2 (c enumerator)": [[196, "c.nrfx_usbd_ep_t.NRFX_USBD_EPIN2"]], "nrfx_usbd_ep_t.nrfx_usbd_epin3 (c enumerator)": [[196, "c.nrfx_usbd_ep_t.NRFX_USBD_EPIN3"]], "nrfx_usbd_ep_t.nrfx_usbd_epin4 (c enumerator)": [[196, "c.nrfx_usbd_ep_t.NRFX_USBD_EPIN4"]], "nrfx_usbd_ep_t.nrfx_usbd_epin5 (c enumerator)": [[196, "c.nrfx_usbd_ep_t.NRFX_USBD_EPIN5"]], "nrfx_usbd_ep_t.nrfx_usbd_epin6 (c enumerator)": [[196, "c.nrfx_usbd_ep_t.NRFX_USBD_EPIN6"]], "nrfx_usbd_ep_t.nrfx_usbd_epin7 (c enumerator)": [[196, "c.nrfx_usbd_ep_t.NRFX_USBD_EPIN7"]], "nrfx_usbd_ep_t.nrfx_usbd_epin8 (c enumerator)": [[196, "c.nrfx_usbd_ep_t.NRFX_USBD_EPIN8"]], "nrfx_usbd_ep_t.nrfx_usbd_epout0 (c enumerator)": [[196, "c.nrfx_usbd_ep_t.NRFX_USBD_EPOUT0"]], "nrfx_usbd_ep_t.nrfx_usbd_epout1 (c enumerator)": [[196, "c.nrfx_usbd_ep_t.NRFX_USBD_EPOUT1"]], "nrfx_usbd_ep_t.nrfx_usbd_epout2 (c enumerator)": [[196, "c.nrfx_usbd_ep_t.NRFX_USBD_EPOUT2"]], "nrfx_usbd_ep_t.nrfx_usbd_epout3 (c enumerator)": [[196, "c.nrfx_usbd_ep_t.NRFX_USBD_EPOUT3"]], "nrfx_usbd_ep_t.nrfx_usbd_epout4 (c enumerator)": [[196, "c.nrfx_usbd_ep_t.NRFX_USBD_EPOUT4"]], "nrfx_usbd_ep_t.nrfx_usbd_epout5 (c enumerator)": [[196, "c.nrfx_usbd_ep_t.NRFX_USBD_EPOUT5"]], "nrfx_usbd_ep_t.nrfx_usbd_epout6 (c enumerator)": [[196, "c.nrfx_usbd_ep_t.NRFX_USBD_EPOUT6"]], "nrfx_usbd_ep_t.nrfx_usbd_epout7 (c enumerator)": [[196, "c.nrfx_usbd_ep_t.NRFX_USBD_EPOUT7"]], "nrfx_usbd_ep_t.nrfx_usbd_epout8 (c enumerator)": [[196, "c.nrfx_usbd_ep_t.NRFX_USBD_EPOUT8"]], "nrfx_usbd_ep_transfer (c function)": [[196, "c.nrfx_usbd_ep_transfer"]], "nrfx_usbd_ep_transfer_t (c struct)": [[196, "c.nrfx_usbd_ep_transfer_t"]], "nrfx_usbd_ep_transfer_t.p_data (c var)": [[196, "c.nrfx_usbd_ep_transfer_t.p_data"]], "nrfx_usbd_ep_transfer_t.size (c var)": [[196, "c.nrfx_usbd_ep_transfer_t.size"]], "nrfx_usbd_epout_size_get (c function)": [[196, "c.nrfx_usbd_epout_size_get"]], "nrfx_usbd_event_handler_t (c type)": [[196, "c.nrfx_usbd_event_handler_t"]], "nrfx_usbd_event_type_t (c enum)": [[196, "c.nrfx_usbd_event_type_t"]], "nrfx_usbd_event_type_t.nrfx_usbd_evt_cnt (c enumerator)": [[196, "c.nrfx_usbd_event_type_t.NRFX_USBD_EVT_CNT"]], "nrfx_usbd_event_type_t.nrfx_usbd_evt_eptransfer (c enumerator)": [[196, "c.nrfx_usbd_event_type_t.NRFX_USBD_EVT_EPTRANSFER"]], "nrfx_usbd_event_type_t.nrfx_usbd_evt_reset (c enumerator)": [[196, "c.nrfx_usbd_event_type_t.NRFX_USBD_EVT_RESET"]], "nrfx_usbd_event_type_t.nrfx_usbd_evt_resume (c enumerator)": [[196, "c.nrfx_usbd_event_type_t.NRFX_USBD_EVT_RESUME"]], "nrfx_usbd_event_type_t.nrfx_usbd_evt_setup (c enumerator)": [[196, "c.nrfx_usbd_event_type_t.NRFX_USBD_EVT_SETUP"]], "nrfx_usbd_event_type_t.nrfx_usbd_evt_sof (c enumerator)": [[196, "c.nrfx_usbd_event_type_t.NRFX_USBD_EVT_SOF"]], "nrfx_usbd_event_type_t.nrfx_usbd_evt_suspend (c enumerator)": [[196, "c.nrfx_usbd_event_type_t.NRFX_USBD_EVT_SUSPEND"]], "nrfx_usbd_event_type_t.nrfx_usbd_evt_wureq (c enumerator)": [[196, "c.nrfx_usbd_event_type_t.NRFX_USBD_EVT_WUREQ"]], "nrfx_usbd_evt_t (c struct)": [[196, "c.nrfx_usbd_evt_t"]], "nrfx_usbd_evt_t.data (c var)": [[196, "c.nrfx_usbd_evt_t.data"]], "nrfx_usbd_evt_t.ep (c var)": [[196, "c.nrfx_usbd_evt_t.ep"]], "nrfx_usbd_evt_t.eptransfer (c var)": [[196, "c.nrfx_usbd_evt_t.eptransfer"]], "nrfx_usbd_evt_t.framecnt (c var)": [[196, "c.nrfx_usbd_evt_t.framecnt"]], "nrfx_usbd_evt_t.isocrc (c var)": [[196, "c.nrfx_usbd_evt_t.isocrc"]], "nrfx_usbd_evt_t.sof (c var)": [[196, "c.nrfx_usbd_evt_t.sof"]], "nrfx_usbd_evt_t.status (c var)": [[196, "c.nrfx_usbd_evt_t.status"]], "nrfx_usbd_evt_t.type (c var)": [[196, "c.nrfx_usbd_evt_t.type"]], "nrfx_usbd_feeder_buffer_get (c function)": [[196, "c.nrfx_usbd_feeder_buffer_get"]], "nrfx_usbd_feeder_t (c type)": [[196, "c.nrfx_usbd_feeder_t"]], "nrfx_usbd_force_bus_wakeup (c function)": [[196, "c.nrfx_usbd_force_bus_wakeup"]], "nrfx_usbd_handler_desc_t (c struct)": [[196, "c.nrfx_usbd_handler_desc_t"]], "nrfx_usbd_handler_desc_t.handler (c var)": [[196, "c.nrfx_usbd_handler_desc_t.handler"]], "nrfx_usbd_handler_desc_t.p_context (c var)": [[196, "c.nrfx_usbd_handler_desc_t.p_context"]], "nrfx_usbd_handler_t (c union)": [[196, "c.nrfx_usbd_handler_t"]], "nrfx_usbd_handler_t.consumer (c var)": [[196, "c.nrfx_usbd_handler_t.consumer"]], "nrfx_usbd_handler_t.feeder (c var)": [[196, "c.nrfx_usbd_handler_t.feeder"]], "nrfx_usbd_init (c function)": [[196, "c.nrfx_usbd_init"]], "nrfx_usbd_init_check (c function)": [[196, "c.nrfx_usbd_init_check"]], "nrfx_usbd_is_enabled (c function)": [[196, "c.nrfx_usbd_is_enabled"]], "nrfx_usbd_is_initialized (c function)": [[196, "c.nrfx_usbd_is_initialized"]], "nrfx_usbd_is_started (c function)": [[196, "c.nrfx_usbd_is_started"]], "nrfx_usbd_last_setup_dir_get (c function)": [[196, "c.nrfx_usbd_last_setup_dir_get"]], "nrfx_usbd_setup_clear (c function)": [[196, "c.nrfx_usbd_setup_clear"]], "nrfx_usbd_setup_data_clear (c function)": [[196, "c.nrfx_usbd_setup_data_clear"]], "nrfx_usbd_setup_get (c function)": [[196, "c.nrfx_usbd_setup_get"]], "nrfx_usbd_setup_stall (c function)": [[196, "c.nrfx_usbd_setup_stall"]], "nrfx_usbd_setup_t (c struct)": [[196, "c.nrfx_usbd_setup_t"]], "nrfx_usbd_setup_t.brequest (c var)": [[196, "c.nrfx_usbd_setup_t.bRequest"]], "nrfx_usbd_setup_t.bmrequesttype (c var)": [[196, "c.nrfx_usbd_setup_t.bmRequestType"]], "nrfx_usbd_setup_t.windex (c var)": [[196, "c.nrfx_usbd_setup_t.wIndex"]], "nrfx_usbd_setup_t.wlength (c var)": [[196, "c.nrfx_usbd_setup_t.wLength"]], "nrfx_usbd_setup_t.wvalue (c var)": [[196, "c.nrfx_usbd_setup_t.wValue"]], "nrfx_usbd_start (c function)": [[196, "c.nrfx_usbd_start"]], "nrfx_usbd_stop (c function)": [[196, "c.nrfx_usbd_stop"]], "nrfx_usbd_suspend (c function)": [[196, "c.nrfx_usbd_suspend"]], "nrfx_usbd_suspend_check (c function)": [[196, "c.nrfx_usbd_suspend_check"]], "nrfx_usbd_suspend_irq_config (c function)": [[196, "c.nrfx_usbd_suspend_irq_config"]], "nrfx_usbd_transfer_flags_t (c enum)": [[196, "c.nrfx_usbd_transfer_flags_t"]], "nrfx_usbd_transfer_flags_t.nrfx_usbd_transfer_zlp_flag (c enumerator)": [[196, "c.nrfx_usbd_transfer_flags_t.NRFX_USBD_TRANSFER_ZLP_FLAG"]], "nrfx_usbd_transfer_out_drop (c function)": [[196, "c.nrfx_usbd_transfer_out_drop"]], "nrfx_usbd_transfer_t (c struct)": [[196, "c.nrfx_usbd_transfer_t"]], "nrfx_usbd_transfer_t.flags (c var)": [[196, "c.nrfx_usbd_transfer_t.flags"]], "nrfx_usbd_transfer_t.p_data (c var)": [[196, "c.nrfx_usbd_transfer_t.p_data"]], "nrfx_usbd_transfer_t.size (c var)": [[196, "c.nrfx_usbd_transfer_t.size"]], "nrfx_usbd_uninit (c function)": [[196, "c.nrfx_usbd_uninit"]], "nrfx_usbd_wakeup_req (c function)": [[196, "c.nrfx_usbd_wakeup_req"]], "nrf_usbd_epin (c macro)": [[197, "c.NRF_USBD_EPIN"]], "nrf_usbd_epin_check (c macro)": [[197, "c.NRF_USBD_EPIN_CHECK"]], "nrf_usbd_epin_cnt (c macro)": [[197, "c.NRF_USBD_EPIN_CNT"]], "nrf_usbd_episoout_no_data (c macro)": [[197, "c.NRF_USBD_EPISOOUT_NO_DATA"]], "nrf_usbd_episo_check (c macro)": [[197, "c.NRF_USBD_EPISO_CHECK"]], "nrf_usbd_episo_first (c macro)": [[197, "c.NRF_USBD_EPISO_FIRST"]], "nrf_usbd_epout (c macro)": [[197, "c.NRF_USBD_EPOUT"]], "nrf_usbd_epout_check (c macro)": [[197, "c.NRF_USBD_EPOUT_CHECK"]], "nrf_usbd_epout_cnt (c macro)": [[197, "c.NRF_USBD_EPOUT_CNT"]], "nrf_usbd_ep_dir_in (c macro)": [[197, "c.NRF_USBD_EP_DIR_IN"]], "nrf_usbd_ep_dir_msk (c macro)": [[197, "c.NRF_USBD_EP_DIR_Msk"]], "nrf_usbd_ep_dir_out (c macro)": [[197, "c.NRF_USBD_EP_DIR_OUT"]], "nrf_usbd_ep_nr_get (c macro)": [[197, "c.NRF_USBD_EP_NR_GET"]], "nrf_usbd_ep_validate (c macro)": [[197, "c.NRF_USBD_EP_VALIDATE"]], "nrf_usbd_framecntr_size (c macro)": [[197, "c.NRF_USBD_FRAMECNTR_SIZE"]], "nrf_usbd_dataepstatus_mask_t (c enum)": [[197, "c.nrf_usbd_dataepstatus_mask_t"]], "nrf_usbd_dataepstatus_mask_t.nrf_usbd_epdatastatus_epin1_mask (c enumerator)": [[197, "c.nrf_usbd_dataepstatus_mask_t.NRF_USBD_EPDATASTATUS_EPIN1_MASK"]], "nrf_usbd_dataepstatus_mask_t.nrf_usbd_epdatastatus_epin2_mask (c enumerator)": [[197, "c.nrf_usbd_dataepstatus_mask_t.NRF_USBD_EPDATASTATUS_EPIN2_MASK"]], "nrf_usbd_dataepstatus_mask_t.nrf_usbd_epdatastatus_epin3_mask (c enumerator)": [[197, "c.nrf_usbd_dataepstatus_mask_t.NRF_USBD_EPDATASTATUS_EPIN3_MASK"]], "nrf_usbd_dataepstatus_mask_t.nrf_usbd_epdatastatus_epin4_mask (c enumerator)": [[197, "c.nrf_usbd_dataepstatus_mask_t.NRF_USBD_EPDATASTATUS_EPIN4_MASK"]], "nrf_usbd_dataepstatus_mask_t.nrf_usbd_epdatastatus_epin5_mask (c enumerator)": [[197, "c.nrf_usbd_dataepstatus_mask_t.NRF_USBD_EPDATASTATUS_EPIN5_MASK"]], "nrf_usbd_dataepstatus_mask_t.nrf_usbd_epdatastatus_epin6_mask (c enumerator)": [[197, "c.nrf_usbd_dataepstatus_mask_t.NRF_USBD_EPDATASTATUS_EPIN6_MASK"]], "nrf_usbd_dataepstatus_mask_t.nrf_usbd_epdatastatus_epin7_mask (c enumerator)": [[197, "c.nrf_usbd_dataepstatus_mask_t.NRF_USBD_EPDATASTATUS_EPIN7_MASK"]], "nrf_usbd_dataepstatus_mask_t.nrf_usbd_epdatastatus_epout1_mask (c enumerator)": [[197, "c.nrf_usbd_dataepstatus_mask_t.NRF_USBD_EPDATASTATUS_EPOUT1_MASK"]], "nrf_usbd_dataepstatus_mask_t.nrf_usbd_epdatastatus_epout2_mask (c enumerator)": [[197, "c.nrf_usbd_dataepstatus_mask_t.NRF_USBD_EPDATASTATUS_EPOUT2_MASK"]], "nrf_usbd_dataepstatus_mask_t.nrf_usbd_epdatastatus_epout3_mask (c enumerator)": [[197, "c.nrf_usbd_dataepstatus_mask_t.NRF_USBD_EPDATASTATUS_EPOUT3_MASK"]], "nrf_usbd_dataepstatus_mask_t.nrf_usbd_epdatastatus_epout4_mask (c enumerator)": [[197, "c.nrf_usbd_dataepstatus_mask_t.NRF_USBD_EPDATASTATUS_EPOUT4_MASK"]], "nrf_usbd_dataepstatus_mask_t.nrf_usbd_epdatastatus_epout5_mask (c enumerator)": [[197, "c.nrf_usbd_dataepstatus_mask_t.NRF_USBD_EPDATASTATUS_EPOUT5_MASK"]], "nrf_usbd_dataepstatus_mask_t.nrf_usbd_epdatastatus_epout6_mask (c enumerator)": [[197, "c.nrf_usbd_dataepstatus_mask_t.NRF_USBD_EPDATASTATUS_EPOUT6_MASK"]], "nrf_usbd_dataepstatus_mask_t.nrf_usbd_epdatastatus_epout7_mask (c enumerator)": [[197, "c.nrf_usbd_dataepstatus_mask_t.NRF_USBD_EPDATASTATUS_EPOUT7_MASK"]], "nrf_usbd_disable (c function)": [[197, "c.nrf_usbd_disable"]], "nrf_usbd_dpdmvalue_set (c function)": [[197, "c.nrf_usbd_dpdmvalue_set"]], "nrf_usbd_dpdmvalue_t (c enum)": [[197, "c.nrf_usbd_dpdmvalue_t"]], "nrf_usbd_dpdmvalue_t.nrf_usbd_dpdmvalue_j (c enumerator)": [[197, "c.nrf_usbd_dpdmvalue_t.NRF_USBD_DPDMVALUE_J"]], "nrf_usbd_dpdmvalue_t.nrf_usbd_dpdmvalue_resume (c enumerator)": [[197, "c.nrf_usbd_dpdmvalue_t.NRF_USBD_DPDMVALUE_RESUME"]], "nrf_usbd_dpdmvalue_t.nrf_usbd_dpmvalue_k (c enumerator)": [[197, "c.nrf_usbd_dpdmvalue_t.NRF_USBD_DPMVALUE_K"]], "nrf_usbd_dtoggle_get (c function)": [[197, "c.nrf_usbd_dtoggle_get"]], "nrf_usbd_dtoggle_set (c function)": [[197, "c.nrf_usbd_dtoggle_set"]], "nrf_usbd_dtoggle_t (c enum)": [[197, "c.nrf_usbd_dtoggle_t"]], "nrf_usbd_dtoggle_t.nrf_usbd_dtoggle_data0 (c enumerator)": [[197, "c.nrf_usbd_dtoggle_t.NRF_USBD_DTOGGLE_DATA0"]], "nrf_usbd_dtoggle_t.nrf_usbd_dtoggle_data1 (c enumerator)": [[197, "c.nrf_usbd_dtoggle_t.NRF_USBD_DTOGGLE_DATA1"]], "nrf_usbd_dtoggle_t.nrf_usbd_dtoggle_nop (c enumerator)": [[197, "c.nrf_usbd_dtoggle_t.NRF_USBD_DTOGGLE_NOP"]], "nrf_usbd_enable (c function)": [[197, "c.nrf_usbd_enable"]], "nrf_usbd_ep_all_disable (c function)": [[197, "c.nrf_usbd_ep_all_disable"]], "nrf_usbd_ep_amount_get (c function)": [[197, "c.nrf_usbd_ep_amount_get"]], "nrf_usbd_ep_default_config (c function)": [[197, "c.nrf_usbd_ep_default_config"]], "nrf_usbd_ep_disable (c function)": [[197, "c.nrf_usbd_ep_disable"]], "nrf_usbd_ep_easydma_set (c function)": [[197, "c.nrf_usbd_ep_easydma_set"]], "nrf_usbd_ep_enable (c function)": [[197, "c.nrf_usbd_ep_enable"]], "nrf_usbd_ep_enable_check (c function)": [[197, "c.nrf_usbd_ep_enable_check"]], "nrf_usbd_ep_is_stall (c function)": [[197, "c.nrf_usbd_ep_is_stall"]], "nrf_usbd_ep_stall (c function)": [[197, "c.nrf_usbd_ep_stall"]], "nrf_usbd_ep_unstall (c function)": [[197, "c.nrf_usbd_ep_unstall"]], "nrf_usbd_epdatastatus_clear (c function)": [[197, "c.nrf_usbd_epdatastatus_clear"]], "nrf_usbd_epdatastatus_get (c function)": [[197, "c.nrf_usbd_epdatastatus_get"]], "nrf_usbd_epdatastatus_get_and_clear (c function)": [[197, "c.nrf_usbd_epdatastatus_get_and_clear"]], "nrf_usbd_episoout_size_get (c function)": [[197, "c.nrf_usbd_episoout_size_get"]], "nrf_usbd_epout_clear (c function)": [[197, "c.nrf_usbd_epout_clear"]], "nrf_usbd_epout_size_get (c function)": [[197, "c.nrf_usbd_epout_size_get"]], "nrf_usbd_epstatus_clear (c function)": [[197, "c.nrf_usbd_epstatus_clear"]], "nrf_usbd_epstatus_get (c function)": [[197, "c.nrf_usbd_epstatus_get"]], "nrf_usbd_epstatus_get_and_clear (c function)": [[197, "c.nrf_usbd_epstatus_get_and_clear"]], "nrf_usbd_epstatus_mask_t (c enum)": [[197, "c.nrf_usbd_epstatus_mask_t"]], "nrf_usbd_epstatus_mask_t.nrf_usbd_epstatus_epin0_mask (c enumerator)": [[197, "c.nrf_usbd_epstatus_mask_t.NRF_USBD_EPSTATUS_EPIN0_MASK"]], "nrf_usbd_epstatus_mask_t.nrf_usbd_epstatus_epin1_mask (c enumerator)": [[197, "c.nrf_usbd_epstatus_mask_t.NRF_USBD_EPSTATUS_EPIN1_MASK"]], "nrf_usbd_epstatus_mask_t.nrf_usbd_epstatus_epin2_mask (c enumerator)": [[197, "c.nrf_usbd_epstatus_mask_t.NRF_USBD_EPSTATUS_EPIN2_MASK"]], "nrf_usbd_epstatus_mask_t.nrf_usbd_epstatus_epin3_mask (c enumerator)": [[197, "c.nrf_usbd_epstatus_mask_t.NRF_USBD_EPSTATUS_EPIN3_MASK"]], "nrf_usbd_epstatus_mask_t.nrf_usbd_epstatus_epin4_mask (c enumerator)": [[197, "c.nrf_usbd_epstatus_mask_t.NRF_USBD_EPSTATUS_EPIN4_MASK"]], "nrf_usbd_epstatus_mask_t.nrf_usbd_epstatus_epin5_mask (c enumerator)": [[197, "c.nrf_usbd_epstatus_mask_t.NRF_USBD_EPSTATUS_EPIN5_MASK"]], "nrf_usbd_epstatus_mask_t.nrf_usbd_epstatus_epin6_mask (c enumerator)": [[197, "c.nrf_usbd_epstatus_mask_t.NRF_USBD_EPSTATUS_EPIN6_MASK"]], "nrf_usbd_epstatus_mask_t.nrf_usbd_epstatus_epin7_mask (c enumerator)": [[197, "c.nrf_usbd_epstatus_mask_t.NRF_USBD_EPSTATUS_EPIN7_MASK"]], "nrf_usbd_epstatus_mask_t.nrf_usbd_epstatus_epout0_mask (c enumerator)": [[197, "c.nrf_usbd_epstatus_mask_t.NRF_USBD_EPSTATUS_EPOUT0_MASK"]], "nrf_usbd_epstatus_mask_t.nrf_usbd_epstatus_epout1_mask (c enumerator)": [[197, "c.nrf_usbd_epstatus_mask_t.NRF_USBD_EPSTATUS_EPOUT1_MASK"]], "nrf_usbd_epstatus_mask_t.nrf_usbd_epstatus_epout2_mask (c enumerator)": [[197, "c.nrf_usbd_epstatus_mask_t.NRF_USBD_EPSTATUS_EPOUT2_MASK"]], "nrf_usbd_epstatus_mask_t.nrf_usbd_epstatus_epout3_mask (c enumerator)": [[197, "c.nrf_usbd_epstatus_mask_t.NRF_USBD_EPSTATUS_EPOUT3_MASK"]], "nrf_usbd_epstatus_mask_t.nrf_usbd_epstatus_epout4_mask (c enumerator)": [[197, "c.nrf_usbd_epstatus_mask_t.NRF_USBD_EPSTATUS_EPOUT4_MASK"]], "nrf_usbd_epstatus_mask_t.nrf_usbd_epstatus_epout5_mask (c enumerator)": [[197, "c.nrf_usbd_epstatus_mask_t.NRF_USBD_EPSTATUS_EPOUT5_MASK"]], "nrf_usbd_epstatus_mask_t.nrf_usbd_epstatus_epout6_mask (c enumerator)": [[197, "c.nrf_usbd_epstatus_mask_t.NRF_USBD_EPSTATUS_EPOUT6_MASK"]], "nrf_usbd_epstatus_mask_t.nrf_usbd_epstatus_epout7_mask (c enumerator)": [[197, "c.nrf_usbd_epstatus_mask_t.NRF_USBD_EPSTATUS_EPOUT7_MASK"]], "nrf_usbd_event_address_get (c function)": [[197, "c.nrf_usbd_event_address_get"]], "nrf_usbd_event_check (c function)": [[197, "c.nrf_usbd_event_check"]], "nrf_usbd_event_clear (c function)": [[197, "c.nrf_usbd_event_clear"]], "nrf_usbd_event_get_and_clear (c function)": [[197, "c.nrf_usbd_event_get_and_clear"]], "nrf_usbd_event_t (c enum)": [[197, "c.nrf_usbd_event_t"]], "nrf_usbd_event_t.nrf_usbd_event_dataep (c enumerator)": [[197, "c.nrf_usbd_event_t.NRF_USBD_EVENT_DATAEP"]], "nrf_usbd_event_t.nrf_usbd_event_endepin0 (c enumerator)": [[197, "c.nrf_usbd_event_t.NRF_USBD_EVENT_ENDEPIN0"]], "nrf_usbd_event_t.nrf_usbd_event_endepin1 (c enumerator)": [[197, "c.nrf_usbd_event_t.NRF_USBD_EVENT_ENDEPIN1"]], "nrf_usbd_event_t.nrf_usbd_event_endepin2 (c enumerator)": [[197, "c.nrf_usbd_event_t.NRF_USBD_EVENT_ENDEPIN2"]], "nrf_usbd_event_t.nrf_usbd_event_endepin3 (c enumerator)": [[197, "c.nrf_usbd_event_t.NRF_USBD_EVENT_ENDEPIN3"]], "nrf_usbd_event_t.nrf_usbd_event_endepin4 (c enumerator)": [[197, "c.nrf_usbd_event_t.NRF_USBD_EVENT_ENDEPIN4"]], "nrf_usbd_event_t.nrf_usbd_event_endepin5 (c enumerator)": [[197, "c.nrf_usbd_event_t.NRF_USBD_EVENT_ENDEPIN5"]], "nrf_usbd_event_t.nrf_usbd_event_endepin6 (c enumerator)": [[197, "c.nrf_usbd_event_t.NRF_USBD_EVENT_ENDEPIN6"]], "nrf_usbd_event_t.nrf_usbd_event_endepin7 (c enumerator)": [[197, "c.nrf_usbd_event_t.NRF_USBD_EVENT_ENDEPIN7"]], "nrf_usbd_event_t.nrf_usbd_event_endepout0 (c enumerator)": [[197, "c.nrf_usbd_event_t.NRF_USBD_EVENT_ENDEPOUT0"]], "nrf_usbd_event_t.nrf_usbd_event_endepout1 (c enumerator)": [[197, "c.nrf_usbd_event_t.NRF_USBD_EVENT_ENDEPOUT1"]], "nrf_usbd_event_t.nrf_usbd_event_endepout2 (c enumerator)": [[197, "c.nrf_usbd_event_t.NRF_USBD_EVENT_ENDEPOUT2"]], "nrf_usbd_event_t.nrf_usbd_event_endepout3 (c enumerator)": [[197, "c.nrf_usbd_event_t.NRF_USBD_EVENT_ENDEPOUT3"]], "nrf_usbd_event_t.nrf_usbd_event_endepout4 (c enumerator)": [[197, "c.nrf_usbd_event_t.NRF_USBD_EVENT_ENDEPOUT4"]], "nrf_usbd_event_t.nrf_usbd_event_endepout5 (c enumerator)": [[197, "c.nrf_usbd_event_t.NRF_USBD_EVENT_ENDEPOUT5"]], "nrf_usbd_event_t.nrf_usbd_event_endepout6 (c enumerator)": [[197, "c.nrf_usbd_event_t.NRF_USBD_EVENT_ENDEPOUT6"]], "nrf_usbd_event_t.nrf_usbd_event_endepout7 (c enumerator)": [[197, "c.nrf_usbd_event_t.NRF_USBD_EVENT_ENDEPOUT7"]], "nrf_usbd_event_t.nrf_usbd_event_endisoin0 (c enumerator)": [[197, "c.nrf_usbd_event_t.NRF_USBD_EVENT_ENDISOIN0"]], "nrf_usbd_event_t.nrf_usbd_event_endisoout0 (c enumerator)": [[197, "c.nrf_usbd_event_t.NRF_USBD_EVENT_ENDISOOUT0"]], "nrf_usbd_event_t.nrf_usbd_event_ep0datadone (c enumerator)": [[197, "c.nrf_usbd_event_t.NRF_USBD_EVENT_EP0DATADONE"]], "nrf_usbd_event_t.nrf_usbd_event_ep0setup (c enumerator)": [[197, "c.nrf_usbd_event_t.NRF_USBD_EVENT_EP0SETUP"]], "nrf_usbd_event_t.nrf_usbd_event_sof (c enumerator)": [[197, "c.nrf_usbd_event_t.NRF_USBD_EVENT_SOF"]], "nrf_usbd_event_t.nrf_usbd_event_started (c enumerator)": [[197, "c.nrf_usbd_event_t.NRF_USBD_EVENT_STARTED"]], "nrf_usbd_event_t.nrf_usbd_event_usbevent (c enumerator)": [[197, "c.nrf_usbd_event_t.NRF_USBD_EVENT_USBEVENT"]], "nrf_usbd_event_t.nrf_usbd_event_usbreset (c enumerator)": [[197, "c.nrf_usbd_event_t.NRF_USBD_EVENT_USBRESET"]], "nrf_usbd_eventcause_clear (c function)": [[197, "c.nrf_usbd_eventcause_clear"]], "nrf_usbd_eventcause_get (c function)": [[197, "c.nrf_usbd_eventcause_get"]], "nrf_usbd_eventcause_get_and_clear (c function)": [[197, "c.nrf_usbd_eventcause_get_and_clear"]], "nrf_usbd_eventcause_mask_t (c enum)": [[197, "c.nrf_usbd_eventcause_mask_t"]], "nrf_usbd_eventcause_mask_t.nrf_usbd_eventcause_isooutcrc_mask (c enumerator)": [[197, "c.nrf_usbd_eventcause_mask_t.NRF_USBD_EVENTCAUSE_ISOOUTCRC_MASK"]], "nrf_usbd_eventcause_mask_t.nrf_usbd_eventcause_ready_mask (c enumerator)": [[197, "c.nrf_usbd_eventcause_mask_t.NRF_USBD_EVENTCAUSE_READY_MASK"]], "nrf_usbd_eventcause_mask_t.nrf_usbd_eventcause_resume_mask (c enumerator)": [[197, "c.nrf_usbd_eventcause_mask_t.NRF_USBD_EVENTCAUSE_RESUME_MASK"]], "nrf_usbd_eventcause_mask_t.nrf_usbd_eventcause_suspend_mask (c enumerator)": [[197, "c.nrf_usbd_eventcause_mask_t.NRF_USBD_EVENTCAUSE_SUSPEND_MASK"]], "nrf_usbd_eventcause_mask_t.nrf_usbd_eventcause_wureq_mask (c enumerator)": [[197, "c.nrf_usbd_eventcause_mask_t.NRF_USBD_EVENTCAUSE_WUREQ_MASK"]], "nrf_usbd_framecntr_get (c function)": [[197, "c.nrf_usbd_framecntr_get"]], "nrf_usbd_halted_get (c function)": [[197, "c.nrf_usbd_halted_get"]], "nrf_usbd_int_disable (c function)": [[197, "c.nrf_usbd_int_disable"]], "nrf_usbd_int_enable (c function)": [[197, "c.nrf_usbd_int_enable"]], "nrf_usbd_int_enable_check (c function)": [[197, "c.nrf_usbd_int_enable_check"]], "nrf_usbd_int_enable_get (c function)": [[197, "c.nrf_usbd_int_enable_get"]], "nrf_usbd_int_mask_t (c enum)": [[197, "c.nrf_usbd_int_mask_t"]], "nrf_usbd_int_mask_t.nrf_usbd_int_dataep_mask (c enumerator)": [[197, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_DATAEP_MASK"]], "nrf_usbd_int_mask_t.nrf_usbd_int_endepin0_mask (c enumerator)": [[197, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_ENDEPIN0_MASK"]], "nrf_usbd_int_mask_t.nrf_usbd_int_endepin1_mask (c enumerator)": [[197, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_ENDEPIN1_MASK"]], "nrf_usbd_int_mask_t.nrf_usbd_int_endepin2_mask (c enumerator)": [[197, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_ENDEPIN2_MASK"]], "nrf_usbd_int_mask_t.nrf_usbd_int_endepin3_mask (c enumerator)": [[197, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_ENDEPIN3_MASK"]], "nrf_usbd_int_mask_t.nrf_usbd_int_endepin4_mask (c enumerator)": [[197, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_ENDEPIN4_MASK"]], "nrf_usbd_int_mask_t.nrf_usbd_int_endepin5_mask (c enumerator)": [[197, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_ENDEPIN5_MASK"]], "nrf_usbd_int_mask_t.nrf_usbd_int_endepin6_mask (c enumerator)": [[197, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_ENDEPIN6_MASK"]], "nrf_usbd_int_mask_t.nrf_usbd_int_endepin7_mask (c enumerator)": [[197, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_ENDEPIN7_MASK"]], "nrf_usbd_int_mask_t.nrf_usbd_int_endepout0_mask (c enumerator)": [[197, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_ENDEPOUT0_MASK"]], "nrf_usbd_int_mask_t.nrf_usbd_int_endepout1_mask (c enumerator)": [[197, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_ENDEPOUT1_MASK"]], "nrf_usbd_int_mask_t.nrf_usbd_int_endepout2_mask (c enumerator)": [[197, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_ENDEPOUT2_MASK"]], "nrf_usbd_int_mask_t.nrf_usbd_int_endepout3_mask (c enumerator)": [[197, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_ENDEPOUT3_MASK"]], "nrf_usbd_int_mask_t.nrf_usbd_int_endepout4_mask (c enumerator)": [[197, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_ENDEPOUT4_MASK"]], "nrf_usbd_int_mask_t.nrf_usbd_int_endepout5_mask (c enumerator)": [[197, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_ENDEPOUT5_MASK"]], "nrf_usbd_int_mask_t.nrf_usbd_int_endepout6_mask (c enumerator)": [[197, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_ENDEPOUT6_MASK"]], "nrf_usbd_int_mask_t.nrf_usbd_int_endepout7_mask (c enumerator)": [[197, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_ENDEPOUT7_MASK"]], "nrf_usbd_int_mask_t.nrf_usbd_int_endisoin0_mask (c enumerator)": [[197, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_ENDISOIN0_MASK"]], "nrf_usbd_int_mask_t.nrf_usbd_int_endisoout0_mask (c enumerator)": [[197, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_ENDISOOUT0_MASK"]], "nrf_usbd_int_mask_t.nrf_usbd_int_ep0datadone_mask (c enumerator)": [[197, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_EP0DATADONE_MASK"]], "nrf_usbd_int_mask_t.nrf_usbd_int_ep0setup_mask (c enumerator)": [[197, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_EP0SETUP_MASK"]], "nrf_usbd_int_mask_t.nrf_usbd_int_sof_mask (c enumerator)": [[197, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_SOF_MASK"]], "nrf_usbd_int_mask_t.nrf_usbd_int_started_mask (c enumerator)": [[197, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_STARTED_MASK"]], "nrf_usbd_int_mask_t.nrf_usbd_int_usbevent_mask (c enumerator)": [[197, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_USBEVENT_MASK"]], "nrf_usbd_int_mask_t.nrf_usbd_int_usbreset_mask (c enumerator)": [[197, "c.nrf_usbd_int_mask_t.NRF_USBD_INT_USBRESET_MASK"]], "nrf_usbd_isoinconfig_get (c function)": [[197, "c.nrf_usbd_isoinconfig_get"]], "nrf_usbd_isoinconfig_set (c function)": [[197, "c.nrf_usbd_isoinconfig_set"]], "nrf_usbd_isoinconfig_t (c enum)": [[197, "c.nrf_usbd_isoinconfig_t"]], "nrf_usbd_isoinconfig_t.nrf_usbd_isoinconfig_noresp (c enumerator)": [[197, "c.nrf_usbd_isoinconfig_t.NRF_USBD_ISOINCONFIG_NORESP"]], "nrf_usbd_isoinconfig_t.nrf_usbd_isoinconfig_zerodata (c enumerator)": [[197, "c.nrf_usbd_isoinconfig_t.NRF_USBD_ISOINCONFIG_ZERODATA"]], "nrf_usbd_isosplit_get (c function)": [[197, "c.nrf_usbd_isosplit_get"]], "nrf_usbd_isosplit_set (c function)": [[197, "c.nrf_usbd_isosplit_set"]], "nrf_usbd_isosplit_t (c enum)": [[197, "c.nrf_usbd_isosplit_t"]], "nrf_usbd_isosplit_t.nrf_usbd_isosplit_half (c enumerator)": [[197, "c.nrf_usbd_isosplit_t.NRF_USBD_ISOSPLIT_HALF"]], "nrf_usbd_isosplit_t.nrf_usbd_isosplit_onedir (c enumerator)": [[197, "c.nrf_usbd_isosplit_t.NRF_USBD_ISOSPLIT_ONEDIR"]], "nrf_usbd_lowpower_check (c function)": [[197, "c.nrf_usbd_lowpower_check"]], "nrf_usbd_lowpower_disable (c function)": [[197, "c.nrf_usbd_lowpower_disable"]], "nrf_usbd_lowpower_enable (c function)": [[197, "c.nrf_usbd_lowpower_enable"]], "nrf_usbd_pullup_check (c function)": [[197, "c.nrf_usbd_pullup_check"]], "nrf_usbd_pullup_disable (c function)": [[197, "c.nrf_usbd_pullup_disable"]], "nrf_usbd_pullup_enable (c function)": [[197, "c.nrf_usbd_pullup_enable"]], "nrf_usbd_setup_bmrequesttype_get (c function)": [[197, "c.nrf_usbd_setup_bmrequesttype_get"]], "nrf_usbd_setup_brequest_get (c function)": [[197, "c.nrf_usbd_setup_brequest_get"]], "nrf_usbd_setup_windex_get (c function)": [[197, "c.nrf_usbd_setup_windex_get"]], "nrf_usbd_setup_wlength_get (c function)": [[197, "c.nrf_usbd_setup_wlength_get"]], "nrf_usbd_setup_wvalue_get (c function)": [[197, "c.nrf_usbd_setup_wvalue_get"]], "nrf_usbd_short_mask_t (c enum)": [[197, "c.nrf_usbd_short_mask_t"]], "nrf_usbd_short_mask_t.nrf_usbd_short_endepout0_ep0rcvout_mask (c enumerator)": [[197, "c.nrf_usbd_short_mask_t.NRF_USBD_SHORT_ENDEPOUT0_EP0RCVOUT_MASK"]], "nrf_usbd_short_mask_t.nrf_usbd_short_endepout0_ep0status_mask (c enumerator)": [[197, "c.nrf_usbd_short_mask_t.NRF_USBD_SHORT_ENDEPOUT0_EP0STATUS_MASK"]], "nrf_usbd_short_mask_t.nrf_usbd_short_ep0datadone_ep0status_mask (c enumerator)": [[197, "c.nrf_usbd_short_mask_t.NRF_USBD_SHORT_EP0DATADONE_EP0STATUS_MASK"]], "nrf_usbd_short_mask_t.nrf_usbd_short_ep0datadone_startepin0_mask (c enumerator)": [[197, "c.nrf_usbd_short_mask_t.NRF_USBD_SHORT_EP0DATADONE_STARTEPIN0_MASK"]], "nrf_usbd_short_mask_t.nrf_usbd_short_ep0datadone_startepout0_mask (c enumerator)": [[197, "c.nrf_usbd_short_mask_t.NRF_USBD_SHORT_EP0DATADONE_STARTEPOUT0_MASK"]], "nrf_usbd_shorts_disable (c function)": [[197, "c.nrf_usbd_shorts_disable"]], "nrf_usbd_shorts_enable (c function)": [[197, "c.nrf_usbd_shorts_enable"]], "nrf_usbd_shorts_get (c function)": [[197, "c.nrf_usbd_shorts_get"]], "nrf_usbd_task_address_get (c function)": [[197, "c.nrf_usbd_task_address_get"]], "nrf_usbd_task_t (c enum)": [[197, "c.nrf_usbd_task_t"]], "nrf_usbd_task_t.nrf_usbd_task_drivedpdm (c enumerator)": [[197, "c.nrf_usbd_task_t.NRF_USBD_TASK_DRIVEDPDM"]], "nrf_usbd_task_t.nrf_usbd_task_ep0rcvout (c enumerator)": [[197, "c.nrf_usbd_task_t.NRF_USBD_TASK_EP0RCVOUT"]], "nrf_usbd_task_t.nrf_usbd_task_ep0stall (c enumerator)": [[197, "c.nrf_usbd_task_t.NRF_USBD_TASK_EP0STALL"]], "nrf_usbd_task_t.nrf_usbd_task_ep0status (c enumerator)": [[197, "c.nrf_usbd_task_t.NRF_USBD_TASK_EP0STATUS"]], "nrf_usbd_task_t.nrf_usbd_task_nodrivedpdm (c enumerator)": [[197, "c.nrf_usbd_task_t.NRF_USBD_TASK_NODRIVEDPDM"]], "nrf_usbd_task_t.nrf_usbd_task_startepin0 (c enumerator)": [[197, "c.nrf_usbd_task_t.NRF_USBD_TASK_STARTEPIN0"]], "nrf_usbd_task_t.nrf_usbd_task_startepin1 (c enumerator)": [[197, "c.nrf_usbd_task_t.NRF_USBD_TASK_STARTEPIN1"]], "nrf_usbd_task_t.nrf_usbd_task_startepin2 (c enumerator)": [[197, "c.nrf_usbd_task_t.NRF_USBD_TASK_STARTEPIN2"]], "nrf_usbd_task_t.nrf_usbd_task_startepin3 (c enumerator)": [[197, "c.nrf_usbd_task_t.NRF_USBD_TASK_STARTEPIN3"]], "nrf_usbd_task_t.nrf_usbd_task_startepin4 (c enumerator)": [[197, "c.nrf_usbd_task_t.NRF_USBD_TASK_STARTEPIN4"]], "nrf_usbd_task_t.nrf_usbd_task_startepin5 (c enumerator)": [[197, "c.nrf_usbd_task_t.NRF_USBD_TASK_STARTEPIN5"]], "nrf_usbd_task_t.nrf_usbd_task_startepin6 (c enumerator)": [[197, "c.nrf_usbd_task_t.NRF_USBD_TASK_STARTEPIN6"]], "nrf_usbd_task_t.nrf_usbd_task_startepin7 (c enumerator)": [[197, "c.nrf_usbd_task_t.NRF_USBD_TASK_STARTEPIN7"]], "nrf_usbd_task_t.nrf_usbd_task_startepout0 (c enumerator)": [[197, "c.nrf_usbd_task_t.NRF_USBD_TASK_STARTEPOUT0"]], "nrf_usbd_task_t.nrf_usbd_task_startepout1 (c enumerator)": [[197, "c.nrf_usbd_task_t.NRF_USBD_TASK_STARTEPOUT1"]], "nrf_usbd_task_t.nrf_usbd_task_startepout2 (c enumerator)": [[197, "c.nrf_usbd_task_t.NRF_USBD_TASK_STARTEPOUT2"]], "nrf_usbd_task_t.nrf_usbd_task_startepout3 (c enumerator)": [[197, "c.nrf_usbd_task_t.NRF_USBD_TASK_STARTEPOUT3"]], "nrf_usbd_task_t.nrf_usbd_task_startepout4 (c enumerator)": [[197, "c.nrf_usbd_task_t.NRF_USBD_TASK_STARTEPOUT4"]], "nrf_usbd_task_t.nrf_usbd_task_startepout5 (c enumerator)": [[197, "c.nrf_usbd_task_t.NRF_USBD_TASK_STARTEPOUT5"]], "nrf_usbd_task_t.nrf_usbd_task_startepout6 (c enumerator)": [[197, "c.nrf_usbd_task_t.NRF_USBD_TASK_STARTEPOUT6"]], "nrf_usbd_task_t.nrf_usbd_task_startepout7 (c enumerator)": [[197, "c.nrf_usbd_task_t.NRF_USBD_TASK_STARTEPOUT7"]], "nrf_usbd_task_t.nrf_usbd_task_startisoin (c enumerator)": [[197, "c.nrf_usbd_task_t.NRF_USBD_TASK_STARTISOIN"]], "nrf_usbd_task_t.nrf_usbd_task_startisoout (c enumerator)": [[197, "c.nrf_usbd_task_t.NRF_USBD_TASK_STARTISOOUT"]], "nrf_usbd_task_trigger (c function)": [[197, "c.nrf_usbd_task_trigger"]], "nrf_usbhs_disable (c function)": [[199, "c.nrf_usbhs_disable"]], "nrf_usbhs_enable (c function)": [[199, "c.nrf_usbhs_enable"]], "nrf_usbhs_event_address_get (c function)": [[199, "c.nrf_usbhs_event_address_get"]], "nrf_usbhs_event_check (c function)": [[199, "c.nrf_usbhs_event_check"]], "nrf_usbhs_event_clear (c function)": [[199, "c.nrf_usbhs_event_clear"]], "nrf_usbhs_event_get_and_clear (c function)": [[199, "c.nrf_usbhs_event_get_and_clear"]], "nrf_usbhs_event_t (c enum)": [[199, "c.nrf_usbhs_event_t"]], "nrf_usbhs_event_t.nrf_usbhs_event_core (c enumerator)": [[199, "c.nrf_usbhs_event_t.NRF_USBHS_EVENT_CORE"]], "nrf_usbhs_int_disable (c function)": [[199, "c.nrf_usbhs_int_disable"]], "nrf_usbhs_int_enable (c function)": [[199, "c.nrf_usbhs_int_enable"]], "nrf_usbhs_int_enable_check (c function)": [[199, "c.nrf_usbhs_int_enable_check"]], "nrf_usbhs_int_enable_get (c function)": [[199, "c.nrf_usbhs_int_enable_get"]], "nrf_usbhs_int_mask_t (c enum)": [[199, "c.nrf_usbhs_int_mask_t"]], "nrf_usbhs_int_mask_t.nrf_usbhs_int_usbcore_mask (c enumerator)": [[199, "c.nrf_usbhs_int_mask_t.NRF_USBHS_INT_USBCORE_MASK"]], "nrf_usbhs_task_address_get (c function)": [[199, "c.nrf_usbhs_task_address_get"]], "nrf_usbhs_task_t (c enum)": [[199, "c.nrf_usbhs_task_t"]], "nrf_usbhs_task_t.nrf_usbhs_task_start (c enumerator)": [[199, "c.nrf_usbhs_task_t.NRF_USBHS_TASK_START"]], "nrf_usbhs_task_trigger (c function)": [[199, "c.nrf_usbhs_task_trigger"]], "nrfx_usbreg_config_t (c struct)": [[201, "c.nrfx_usbreg_config_t"]], "nrfx_usbreg_config_t.handler (c var)": [[201, "c.nrfx_usbreg_config_t.handler"]], "nrfx_usbreg_config_t.irq_priority (c var)": [[201, "c.nrfx_usbreg_config_t.irq_priority"]], "nrfx_usbreg_disable (c function)": [[201, "c.nrfx_usbreg_disable"]], "nrfx_usbreg_enable (c function)": [[201, "c.nrfx_usbreg_enable"]], "nrfx_usbreg_event_handler_t (c type)": [[201, "c.nrfx_usbreg_event_handler_t"]], "nrfx_usbreg_evt_t (c enum)": [[201, "c.nrfx_usbreg_evt_t"]], "nrfx_usbreg_evt_t.nrfx_usbreg_evt_detected (c enumerator)": [[201, "c.nrfx_usbreg_evt_t.NRFX_USBREG_EVT_DETECTED"]], "nrfx_usbreg_evt_t.nrfx_usbreg_evt_ready (c enumerator)": [[201, "c.nrfx_usbreg_evt_t.NRFX_USBREG_EVT_READY"]], "nrfx_usbreg_evt_t.nrfx_usbreg_evt_removed (c enumerator)": [[201, "c.nrfx_usbreg_evt_t.NRFX_USBREG_EVT_REMOVED"]], "nrfx_usbreg_handler_get (c function)": [[201, "c.nrfx_usbreg_handler_get"]], "nrfx_usbreg_init (c function)": [[201, "c.nrfx_usbreg_init"]], "nrfx_usbreg_init_check (c function)": [[201, "c.nrfx_usbreg_init_check"]], "nrfx_usbreg_state_t (c enum)": [[201, "c.nrfx_usbreg_state_t"]], "nrfx_usbreg_state_t.nrfx_usbreg_state_connected (c enumerator)": [[201, "c.nrfx_usbreg_state_t.NRFX_USBREG_STATE_CONNECTED"]], "nrfx_usbreg_state_t.nrfx_usbreg_state_disconnected (c enumerator)": [[201, "c.nrfx_usbreg_state_t.NRFX_USBREG_STATE_DISCONNECTED"]], "nrfx_usbreg_state_t.nrfx_usbreg_state_ready (c enumerator)": [[201, "c.nrfx_usbreg_state_t.NRFX_USBREG_STATE_READY"]], "nrfx_usbreg_uninit (c function)": [[201, "c.nrfx_usbreg_uninit"]], "nrfx_usbreg_usbstatus_get (c function)": [[201, "c.nrfx_usbreg_usbstatus_get"]], "nrf_usbreg_event_check (c function)": [[202, "c.nrf_usbreg_event_check"]], "nrf_usbreg_event_clear (c function)": [[202, "c.nrf_usbreg_event_clear"]], "nrf_usbreg_event_t (c enum)": [[202, "c.nrf_usbreg_event_t"]], "nrf_usbreg_event_t.nrf_usbreg_event_usbdetected (c enumerator)": [[202, "c.nrf_usbreg_event_t.NRF_USBREG_EVENT_USBDETECTED"]], "nrf_usbreg_event_t.nrf_usbreg_event_usbpwrrdy (c enumerator)": [[202, "c.nrf_usbreg_event_t.NRF_USBREG_EVENT_USBPWRRDY"]], "nrf_usbreg_event_t.nrf_usbreg_event_usbremoved (c enumerator)": [[202, "c.nrf_usbreg_event_t.NRF_USBREG_EVENT_USBREMOVED"]], "nrf_usbreg_int_disable (c function)": [[202, "c.nrf_usbreg_int_disable"]], "nrf_usbreg_int_enable (c function)": [[202, "c.nrf_usbreg_int_enable"]], "nrf_usbreg_int_enable_check (c function)": [[202, "c.nrf_usbreg_int_enable_check"]], "nrf_usbreg_int_mask_t (c enum)": [[202, "c.nrf_usbreg_int_mask_t"]], "nrf_usbreg_int_mask_t.nrf_usbreg_int_usbdetected (c enumerator)": [[202, "c.nrf_usbreg_int_mask_t.NRF_USBREG_INT_USBDETECTED"]], "nrf_usbreg_int_mask_t.nrf_usbreg_int_usbpwrrdy (c enumerator)": [[202, "c.nrf_usbreg_int_mask_t.NRF_USBREG_INT_USBPWRRDY"]], "nrf_usbreg_int_mask_t.nrf_usbreg_int_usbremoved (c enumerator)": [[202, "c.nrf_usbreg_int_mask_t.NRF_USBREG_INT_USBREMOVED"]], "nrf_usbreg_status_get (c function)": [[202, "c.nrf_usbreg_status_get"]], "nrf_usbreg_status_mask_t (c enum)": [[202, "c.nrf_usbreg_status_mask_t"]], "nrf_usbreg_status_mask_t.nrf_usbreg_status_outputrdy_mask (c enumerator)": [[202, "c.nrf_usbreg_status_mask_t.NRF_USBREG_STATUS_OUTPUTRDY_MASK"]], "nrf_usbreg_status_mask_t.nrf_usbreg_status_vbusdetect_mask (c enumerator)": [[202, "c.nrf_usbreg_status_mask_t.NRF_USBREG_STATUS_VBUSDETECT_MASK"]], "nrf_vmc_power_t (c enum)": [[203, "c.nrf_vmc_power_t"]], "nrf_vmc_power_t.nrf_vmc_power_s0 (c enumerator)": [[203, "c.nrf_vmc_power_t.NRF_VMC_POWER_S0"]], "nrf_vmc_power_t.nrf_vmc_power_s1 (c enumerator)": [[203, "c.nrf_vmc_power_t.NRF_VMC_POWER_S1"]], "nrf_vmc_power_t.nrf_vmc_power_s10 (c enumerator)": [[203, "c.nrf_vmc_power_t.NRF_VMC_POWER_S10"]], "nrf_vmc_power_t.nrf_vmc_power_s11 (c enumerator)": [[203, "c.nrf_vmc_power_t.NRF_VMC_POWER_S11"]], "nrf_vmc_power_t.nrf_vmc_power_s12 (c enumerator)": [[203, "c.nrf_vmc_power_t.NRF_VMC_POWER_S12"]], "nrf_vmc_power_t.nrf_vmc_power_s13 (c enumerator)": [[203, "c.nrf_vmc_power_t.NRF_VMC_POWER_S13"]], "nrf_vmc_power_t.nrf_vmc_power_s14 (c enumerator)": [[203, "c.nrf_vmc_power_t.NRF_VMC_POWER_S14"]], "nrf_vmc_power_t.nrf_vmc_power_s15 (c enumerator)": [[203, "c.nrf_vmc_power_t.NRF_VMC_POWER_S15"]], "nrf_vmc_power_t.nrf_vmc_power_s2 (c enumerator)": [[203, "c.nrf_vmc_power_t.NRF_VMC_POWER_S2"]], "nrf_vmc_power_t.nrf_vmc_power_s3 (c enumerator)": [[203, "c.nrf_vmc_power_t.NRF_VMC_POWER_S3"]], "nrf_vmc_power_t.nrf_vmc_power_s4 (c enumerator)": [[203, "c.nrf_vmc_power_t.NRF_VMC_POWER_S4"]], "nrf_vmc_power_t.nrf_vmc_power_s5 (c enumerator)": [[203, "c.nrf_vmc_power_t.NRF_VMC_POWER_S5"]], "nrf_vmc_power_t.nrf_vmc_power_s6 (c enumerator)": [[203, "c.nrf_vmc_power_t.NRF_VMC_POWER_S6"]], "nrf_vmc_power_t.nrf_vmc_power_s7 (c enumerator)": [[203, "c.nrf_vmc_power_t.NRF_VMC_POWER_S7"]], "nrf_vmc_power_t.nrf_vmc_power_s8 (c enumerator)": [[203, "c.nrf_vmc_power_t.NRF_VMC_POWER_S8"]], "nrf_vmc_power_t.nrf_vmc_power_s9 (c enumerator)": [[203, "c.nrf_vmc_power_t.NRF_VMC_POWER_S9"]], "nrf_vmc_ram_block_clear (c function)": [[203, "c.nrf_vmc_ram_block_clear"]], "nrf_vmc_ram_block_config (c function)": [[203, "c.nrf_vmc_ram_block_config"]], "nrf_vmc_ram_block_power_all_set (c function)": [[203, "c.nrf_vmc_ram_block_power_all_set"]], "nrf_vmc_ram_block_power_clear (c function)": [[203, "c.nrf_vmc_ram_block_power_clear"]], "nrf_vmc_ram_block_power_mask_get (c function)": [[203, "c.nrf_vmc_ram_block_power_mask_get"]], "nrf_vmc_ram_block_power_set (c function)": [[203, "c.nrf_vmc_ram_block_power_set"]], "nrf_vmc_ram_block_retention_all_set (c function)": [[203, "c.nrf_vmc_ram_block_retention_all_set"]], "nrf_vmc_ram_block_retention_clear (c function)": [[203, "c.nrf_vmc_ram_block_retention_clear"]], "nrf_vmc_ram_block_retention_mask_get (c function)": [[203, "c.nrf_vmc_ram_block_retention_mask_get"]], "nrf_vmc_ram_block_retention_set (c function)": [[203, "c.nrf_vmc_ram_block_retention_set"]], "nrf_vmc_retention_t (c enum)": [[203, "c.nrf_vmc_retention_t"]], "nrf_vmc_retention_t.nrf_vmc_retention_s0 (c enumerator)": [[203, "c.nrf_vmc_retention_t.NRF_VMC_RETENTION_S0"]], "nrf_vmc_retention_t.nrf_vmc_retention_s1 (c enumerator)": [[203, "c.nrf_vmc_retention_t.NRF_VMC_RETENTION_S1"]], "nrf_vmc_retention_t.nrf_vmc_retention_s10 (c enumerator)": [[203, "c.nrf_vmc_retention_t.NRF_VMC_RETENTION_S10"]], "nrf_vmc_retention_t.nrf_vmc_retention_s11 (c enumerator)": [[203, "c.nrf_vmc_retention_t.NRF_VMC_RETENTION_S11"]], "nrf_vmc_retention_t.nrf_vmc_retention_s12 (c enumerator)": [[203, "c.nrf_vmc_retention_t.NRF_VMC_RETENTION_S12"]], "nrf_vmc_retention_t.nrf_vmc_retention_s13 (c enumerator)": [[203, "c.nrf_vmc_retention_t.NRF_VMC_RETENTION_S13"]], "nrf_vmc_retention_t.nrf_vmc_retention_s14 (c enumerator)": [[203, "c.nrf_vmc_retention_t.NRF_VMC_RETENTION_S14"]], "nrf_vmc_retention_t.nrf_vmc_retention_s15 (c enumerator)": [[203, "c.nrf_vmc_retention_t.NRF_VMC_RETENTION_S15"]], "nrf_vmc_retention_t.nrf_vmc_retention_s2 (c enumerator)": [[203, "c.nrf_vmc_retention_t.NRF_VMC_RETENTION_S2"]], "nrf_vmc_retention_t.nrf_vmc_retention_s3 (c enumerator)": [[203, "c.nrf_vmc_retention_t.NRF_VMC_RETENTION_S3"]], "nrf_vmc_retention_t.nrf_vmc_retention_s4 (c enumerator)": [[203, "c.nrf_vmc_retention_t.NRF_VMC_RETENTION_S4"]], "nrf_vmc_retention_t.nrf_vmc_retention_s5 (c enumerator)": [[203, "c.nrf_vmc_retention_t.NRF_VMC_RETENTION_S5"]], "nrf_vmc_retention_t.nrf_vmc_retention_s6 (c enumerator)": [[203, "c.nrf_vmc_retention_t.NRF_VMC_RETENTION_S6"]], "nrf_vmc_retention_t.nrf_vmc_retention_s7 (c enumerator)": [[203, "c.nrf_vmc_retention_t.NRF_VMC_RETENTION_S7"]], "nrf_vmc_retention_t.nrf_vmc_retention_s8 (c enumerator)": [[203, "c.nrf_vmc_retention_t.NRF_VMC_RETENTION_S8"]], "nrf_vmc_retention_t.nrf_vmc_retention_s9 (c enumerator)": [[203, "c.nrf_vmc_retention_t.NRF_VMC_RETENTION_S9"]], "nrf_vpr_clic_int_to_prio (c macro)": [[205, "c.NRF_VPR_CLIC_INT_TO_PRIO"]], "nrf_vpr_clic_irq_count (c macro)": [[205, "c.NRF_VPR_CLIC_IRQ_COUNT"]], "nrf_vpr_clic_attr_t (c struct)": [[205, "c.nrf_vpr_clic_attr_t"]], "nrf_vpr_clic_attr_t.hw_vectoring (c var)": [[205, "c.nrf_vpr_clic_attr_t.hw_vectoring"]], "nrf_vpr_clic_attr_t.privilege (c var)": [[205, "c.nrf_vpr_clic_attr_t.privilege"]], "nrf_vpr_clic_attr_t.trigger (c var)": [[205, "c.nrf_vpr_clic_attr_t.trigger"]], "nrf_vpr_clic_config_get (c function)": [[205, "c.nrf_vpr_clic_config_get"]], "nrf_vpr_clic_config_t (c struct)": [[205, "c.nrf_vpr_clic_config_t"]], "nrf_vpr_clic_config_t.hw_vectoring (c var)": [[205, "c.nrf_vpr_clic_config_t.hw_vectoring"]], "nrf_vpr_clic_config_t.level_encoding (c var)": [[205, "c.nrf_vpr_clic_config_t.level_encoding"]], "nrf_vpr_clic_config_t.privilege_mode (c var)": [[205, "c.nrf_vpr_clic_config_t.privilege_mode"]], "nrf_vpr_clic_info_get (c function)": [[205, "c.nrf_vpr_clic_info_get"]], "nrf_vpr_clic_info_t (c struct)": [[205, "c.nrf_vpr_clic_info_t"]], "nrf_vpr_clic_info_t.interrupt_count (c var)": [[205, "c.nrf_vpr_clic_info_t.interrupt_count"]], "nrf_vpr_clic_info_t.trigger_count (c var)": [[205, "c.nrf_vpr_clic_info_t.trigger_count"]], "nrf_vpr_clic_info_t.version (c var)": [[205, "c.nrf_vpr_clic_info_t.version"]], "nrf_vpr_clic_int_attr_get (c function)": [[205, "c.nrf_vpr_clic_int_attr_get"]], "nrf_vpr_clic_int_enable_check (c function)": [[205, "c.nrf_vpr_clic_int_enable_check"]], "nrf_vpr_clic_int_enable_set (c function)": [[205, "c.nrf_vpr_clic_int_enable_set"]], "nrf_vpr_clic_int_pending_check (c function)": [[205, "c.nrf_vpr_clic_int_pending_check"]], "nrf_vpr_clic_int_pending_clear (c function)": [[205, "c.nrf_vpr_clic_int_pending_clear"]], "nrf_vpr_clic_int_pending_set (c function)": [[205, "c.nrf_vpr_clic_int_pending_set"]], "nrf_vpr_clic_int_priority_get (c function)": [[205, "c.nrf_vpr_clic_int_priority_get"]], "nrf_vpr_clic_int_priority_set (c function)": [[205, "c.nrf_vpr_clic_int_priority_set"]], "nrf_vpr_clic_mode_t (c enum)": [[205, "c.nrf_vpr_clic_mode_t"]], "nrf_vpr_clic_mode_t.nrf_vpr_clic_mode_m (c enumerator)": [[205, "c.nrf_vpr_clic_mode_t.NRF_VPR_CLIC_MODE_M"]], "nrf_vpr_clic_priority_t (c enum)": [[205, "c.nrf_vpr_clic_priority_t"]], "nrf_vpr_clic_priority_t.nrf_vpr_clic_priority_level0 (c enumerator)": [[205, "c.nrf_vpr_clic_priority_t.NRF_VPR_CLIC_PRIORITY_LEVEL0"]], "nrf_vpr_clic_priority_t.nrf_vpr_clic_priority_level1 (c enumerator)": [[205, "c.nrf_vpr_clic_priority_t.NRF_VPR_CLIC_PRIORITY_LEVEL1"]], "nrf_vpr_clic_priority_t.nrf_vpr_clic_priority_level2 (c enumerator)": [[205, "c.nrf_vpr_clic_priority_t.NRF_VPR_CLIC_PRIORITY_LEVEL2"]], "nrf_vpr_clic_priority_t.nrf_vpr_clic_priority_level3 (c enumerator)": [[205, "c.nrf_vpr_clic_priority_t.NRF_VPR_CLIC_PRIORITY_LEVEL3"]], "nrf_vpr_clic_priv_t (c enum)": [[205, "c.nrf_vpr_clic_priv_t"]], "nrf_vpr_clic_priv_t.nrf_vpr_clic_priv_machine (c enumerator)": [[205, "c.nrf_vpr_clic_priv_t.NRF_VPR_CLIC_PRIV_MACHINE"]], "nrf_vpr_clic_trigger_t (c enum)": [[205, "c.nrf_vpr_clic_trigger_t"]], "nrf_vpr_clic_trigger_t.nrf_vpr_clic_trigger_edge_pos (c enumerator)": [[205, "c.nrf_vpr_clic_trigger_t.NRF_VPR_CLIC_TRIGGER_EDGE_POS"]], "nrf_vpr_csr_nordic_key_mask (c macro)": [[206, "c.NRF_VPR_CSR_NORDIC_KEY_MASK"]], "nrf_vpr_csr_clic_round_robin_check (c function)": [[206, "c.nrf_vpr_csr_clic_round_robin_check"]], "nrf_vpr_csr_clic_round_robin_set (c function)": [[206, "c.nrf_vpr_csr_clic_round_robin_set"]], "nrf_vpr_csr_cnt_irq_enable_check (c function)": [[206, "c.nrf_vpr_csr_cnt_irq_enable_check"]], "nrf_vpr_csr_cnt_irq_enable_set (c function)": [[206, "c.nrf_vpr_csr_cnt_irq_enable_set"]], "nrf_vpr_csr_int_threshold_t (c enum)": [[206, "c.nrf_vpr_csr_int_threshold_t"]], "nrf_vpr_csr_int_threshold_t.nrf_vpr_csr_int_threshold_disabled (c enumerator)": [[206, "c.nrf_vpr_csr_int_threshold_t.NRF_VPR_CSR_INT_THRESHOLD_DISABLED"]], "nrf_vpr_csr_int_threshold_t.nrf_vpr_csr_int_threshold_level0 (c enumerator)": [[206, "c.nrf_vpr_csr_int_threshold_t.NRF_VPR_CSR_INT_THRESHOLD_LEVEL0"]], "nrf_vpr_csr_int_threshold_t.nrf_vpr_csr_int_threshold_level1 (c enumerator)": [[206, "c.nrf_vpr_csr_int_threshold_t.NRF_VPR_CSR_INT_THRESHOLD_LEVEL1"]], "nrf_vpr_csr_int_threshold_t.nrf_vpr_csr_int_threshold_level2 (c enumerator)": [[206, "c.nrf_vpr_csr_int_threshold_t.NRF_VPR_CSR_INT_THRESHOLD_LEVEL2"]], "nrf_vpr_csr_int_threshold_t.nrf_vpr_csr_int_threshold_level3 (c enumerator)": [[206, "c.nrf_vpr_csr_int_threshold_t.NRF_VPR_CSR_INT_THRESHOLD_LEVEL3"]], "nrf_vpr_csr_machine_cycle_counter_enable_check (c function)": [[206, "c.nrf_vpr_csr_machine_cycle_counter_enable_check"]], "nrf_vpr_csr_machine_cycle_counter_enable_set (c function)": [[206, "c.nrf_vpr_csr_machine_cycle_counter_enable_set"]], "nrf_vpr_csr_machine_cycle_counter_get (c function)": [[206, "c.nrf_vpr_csr_machine_cycle_counter_get"]], "nrf_vpr_csr_machine_exception_pc_get (c function)": [[206, "c.nrf_vpr_csr_machine_exception_pc_get"]], "nrf_vpr_csr_machine_instruction_counter_enable_check (c function)": [[206, "c.nrf_vpr_csr_machine_instruction_counter_enable_check"]], "nrf_vpr_csr_machine_instruction_counter_enable_set (c function)": [[206, "c.nrf_vpr_csr_machine_instruction_counter_enable_set"]], "nrf_vpr_csr_machine_instruction_counter_get (c function)": [[206, "c.nrf_vpr_csr_machine_instruction_counter_get"]], "nrf_vpr_csr_machine_interrupt_threshold_get (c function)": [[206, "c.nrf_vpr_csr_machine_interrupt_threshold_get"]], "nrf_vpr_csr_machine_interrupt_threshold_set (c function)": [[206, "c.nrf_vpr_csr_machine_interrupt_threshold_set"]], "nrf_vpr_csr_machine_interrupts_check (c function)": [[206, "c.nrf_vpr_csr_machine_interrupts_check"]], "nrf_vpr_csr_machine_interrupts_disable (c function)": [[206, "c.nrf_vpr_csr_machine_interrupts_disable"]], "nrf_vpr_csr_machine_interrupts_enable (c function)": [[206, "c.nrf_vpr_csr_machine_interrupts_enable"]], "nrf_vpr_csr_machine_trap_cause_code_get (c function)": [[206, "c.nrf_vpr_csr_machine_trap_cause_code_get"]], "nrf_vpr_csr_machine_trap_interrupt_check (c function)": [[206, "c.nrf_vpr_csr_machine_trap_interrupt_check"]], "nrf_vpr_csr_machine_trap_value_get (c function)": [[206, "c.nrf_vpr_csr_machine_trap_value_get"]], "nrf_vpr_csr_machine_trap_vector_table_addr_get (c function)": [[206, "c.nrf_vpr_csr_machine_trap_vector_table_addr_get"]], "nrf_vpr_csr_machine_trap_vector_table_addr_set (c function)": [[206, "c.nrf_vpr_csr_machine_trap_vector_table_addr_set"]], "nrf_vpr_csr_return_to_sleep_check (c function)": [[206, "c.nrf_vpr_csr_return_to_sleep_check"]], "nrf_vpr_csr_return_to_sleep_set (c function)": [[206, "c.nrf_vpr_csr_return_to_sleep_set"]], "nrf_vpr_csr_rtperiph_enable_check (c function)": [[206, "c.nrf_vpr_csr_rtperiph_enable_check"]], "nrf_vpr_csr_rtperiph_enable_set (c function)": [[206, "c.nrf_vpr_csr_rtperiph_enable_set"]], "nrf_vpr_csr_sleep_state_get (c function)": [[206, "c.nrf_vpr_csr_sleep_state_get"]], "nrf_vpr_csr_sleep_state_set (c function)": [[206, "c.nrf_vpr_csr_sleep_state_set"]], "nrf_vpr_csr_sleep_state_t (c enum)": [[206, "c.nrf_vpr_csr_sleep_state_t"]], "nrf_vpr_csr_sleep_state_t.nrf_vpr_csr_sleep_state_deep_sleep (c enumerator)": [[206, "c.nrf_vpr_csr_sleep_state_t.NRF_VPR_CSR_SLEEP_STATE_DEEP_SLEEP"]], "nrf_vpr_csr_sleep_state_t.nrf_vpr_csr_sleep_state_hibernate (c enumerator)": [[206, "c.nrf_vpr_csr_sleep_state_t.NRF_VPR_CSR_SLEEP_STATE_HIBERNATE"]], "nrf_vpr_csr_sleep_state_t.nrf_vpr_csr_sleep_state_reset (c enumerator)": [[206, "c.nrf_vpr_csr_sleep_state_t.NRF_VPR_CSR_SLEEP_STATE_RESET"]], "nrf_vpr_csr_sleep_state_t.nrf_vpr_csr_sleep_state_sleep (c enumerator)": [[206, "c.nrf_vpr_csr_sleep_state_t.NRF_VPR_CSR_SLEEP_STATE_SLEEP"]], "nrf_vpr_csr_sleep_state_t.nrf_vpr_csr_sleep_state_wait (c enumerator)": [[206, "c.nrf_vpr_csr_sleep_state_t.NRF_VPR_CSR_SLEEP_STATE_WAIT"]], "nrf_vpr_csr_stack_on_sleep_check (c function)": [[206, "c.nrf_vpr_csr_stack_on_sleep_check"]], "nrf_vpr_csr_stack_on_sleep_set (c function)": [[206, "c.nrf_vpr_csr_stack_on_sleep_set"]], "nrf_vpr_csr_trap_cause_t (c enum)": [[206, "c.nrf_vpr_csr_trap_cause_t"]], "nrf_vpr_csr_trap_cause_t.nrf_vpr_csr_trap_cause_breakpoint (c enumerator)": [[206, "c.nrf_vpr_csr_trap_cause_t.NRF_VPR_CSR_TRAP_CAUSE_BREAKPOINT"]], "nrf_vpr_csr_trap_cause_t.nrf_vpr_csr_trap_cause_ecall_m (c enumerator)": [[206, "c.nrf_vpr_csr_trap_cause_t.NRF_VPR_CSR_TRAP_CAUSE_ECALL_M"]], "nrf_vpr_csr_trap_cause_t.nrf_vpr_csr_trap_cause_instr_access_fault (c enumerator)": [[206, "c.nrf_vpr_csr_trap_cause_t.NRF_VPR_CSR_TRAP_CAUSE_INSTR_ACCESS_FAULT"]], "nrf_vpr_csr_trap_cause_t.nrf_vpr_csr_trap_cause_instr_addr_misaligned (c enumerator)": [[206, "c.nrf_vpr_csr_trap_cause_t.NRF_VPR_CSR_TRAP_CAUSE_INSTR_ADDR_MISALIGNED"]], "nrf_vpr_csr_trap_cause_t.nrf_vpr_csr_trap_cause_instr_illegal (c enumerator)": [[206, "c.nrf_vpr_csr_trap_cause_t.NRF_VPR_CSR_TRAP_CAUSE_INSTR_ILLEGAL"]], "nrf_vpr_csr_trap_cause_t.nrf_vpr_csr_trap_cause_load_access_fault (c enumerator)": [[206, "c.nrf_vpr_csr_trap_cause_t.NRF_VPR_CSR_TRAP_CAUSE_LOAD_ACCESS_FAULT"]], "nrf_vpr_csr_trap_cause_t.nrf_vpr_csr_trap_cause_load_addr_misaligned (c enumerator)": [[206, "c.nrf_vpr_csr_trap_cause_t.NRF_VPR_CSR_TRAP_CAUSE_LOAD_ADDR_MISALIGNED"]], "nrf_vpr_csr_trap_cause_t.nrf_vpr_csr_trap_cause_load_timeout_fault (c enumerator)": [[206, "c.nrf_vpr_csr_trap_cause_t.NRF_VPR_CSR_TRAP_CAUSE_LOAD_TIMEOUT_FAULT"]], "nrf_vpr_csr_trap_cause_t.nrf_vpr_csr_trap_cause_stacking_bus_fault (c enumerator)": [[206, "c.nrf_vpr_csr_trap_cause_t.NRF_VPR_CSR_TRAP_CAUSE_STACKING_BUS_FAULT"]], "nrf_vpr_csr_trap_cause_t.nrf_vpr_csr_trap_cause_stacking_unaligned (c enumerator)": [[206, "c.nrf_vpr_csr_trap_cause_t.NRF_VPR_CSR_TRAP_CAUSE_STACKING_UNALIGNED"]], "nrf_vpr_csr_trap_cause_t.nrf_vpr_csr_trap_cause_stacking_unaligned_ex (c enumerator)": [[206, "c.nrf_vpr_csr_trap_cause_t.NRF_VPR_CSR_TRAP_CAUSE_STACKING_UNALIGNED_EX"]], "nrf_vpr_csr_trap_cause_t.nrf_vpr_csr_trap_cause_store_access_fault (c enumerator)": [[206, "c.nrf_vpr_csr_trap_cause_t.NRF_VPR_CSR_TRAP_CAUSE_STORE_ACCESS_FAULT"]], "nrf_vpr_csr_trap_cause_t.nrf_vpr_csr_trap_cause_store_addr_misaligned (c enumerator)": [[206, "c.nrf_vpr_csr_trap_cause_t.NRF_VPR_CSR_TRAP_CAUSE_STORE_ADDR_MISALIGNED"]], "nrf_vpr_csr_trap_cause_t.nrf_vpr_csr_trap_cause_store_timeout_fault (c enumerator)": [[206, "c.nrf_vpr_csr_trap_cause_t.NRF_VPR_CSR_TRAP_CAUSE_STORE_TIMEOUT_FAULT"]], "nrf_vpr_csr_trap_cause_t.nrf_vpr_csr_trap_cause_unstacking_bus_fault (c enumerator)": [[206, "c.nrf_vpr_csr_trap_cause_t.NRF_VPR_CSR_TRAP_CAUSE_UNSTACKING_BUS_FAULT"]], "nrf_vpr_csr_trap_cause_t.nrf_vpr_csr_trap_cause_unstacking_unaligned (c enumerator)": [[206, "c.nrf_vpr_csr_trap_cause_t.NRF_VPR_CSR_TRAP_CAUSE_UNSTACKING_UNALIGNED"]], "nrf_vpr_csr_trap_cause_t.nrf_vpr_csr_trap_cause_vector_fault (c enumerator)": [[206, "c.nrf_vpr_csr_trap_cause_t.NRF_VPR_CSR_TRAP_CAUSE_VECTOR_FAULT"]], "nrf_vpr_csr_unrecoverable_return_check (c function)": [[206, "c.nrf_vpr_csr_unrecoverable_return_check"]], "nrf_vpr_csr_unrecoverable_return_set (c function)": [[206, "c.nrf_vpr_csr_unrecoverable_return_set"]], "nrf_vpr_csr_vevif_event_task_count (c macro)": [[207, "c.NRF_VPR_CSR_VEVIF_EVENT_TASK_COUNT"]], "nrf_vpr_csr_vevif_events_buffered_dirty_check (c function)": [[207, "c.nrf_vpr_csr_vevif_events_buffered_dirty_check"]], "nrf_vpr_csr_vevif_events_buffered_set (c function)": [[207, "c.nrf_vpr_csr_vevif_events_buffered_set"]], "nrf_vpr_csr_vevif_events_get (c function)": [[207, "c.nrf_vpr_csr_vevif_events_get"]], "nrf_vpr_csr_vevif_events_set (c function)": [[207, "c.nrf_vpr_csr_vevif_events_set"]], "nrf_vpr_csr_vevif_events_trigger (c function)": [[207, "c.nrf_vpr_csr_vevif_events_trigger"]], "nrf_vpr_csr_vevif_int_disable (c function)": [[207, "c.nrf_vpr_csr_vevif_int_disable"]], "nrf_vpr_csr_vevif_int_enable (c function)": [[207, "c.nrf_vpr_csr_vevif_int_enable"]], "nrf_vpr_csr_vevif_int_enable_check (c function)": [[207, "c.nrf_vpr_csr_vevif_int_enable_check"]], "nrf_vpr_csr_vevif_publish_get (c function)": [[207, "c.nrf_vpr_csr_vevif_publish_get"]], "nrf_vpr_csr_vevif_publish_set (c function)": [[207, "c.nrf_vpr_csr_vevif_publish_set"]], "nrf_vpr_csr_vevif_subscribe_get (c function)": [[207, "c.nrf_vpr_csr_vevif_subscribe_get"]], "nrf_vpr_csr_vevif_subscribe_set (c function)": [[207, "c.nrf_vpr_csr_vevif_subscribe_set"]], "nrf_vpr_csr_vevif_tasks_clear (c function)": [[207, "c.nrf_vpr_csr_vevif_tasks_clear"]], "nrf_vpr_csr_vevif_tasks_get (c function)": [[207, "c.nrf_vpr_csr_vevif_tasks_get"]], "nrf_vpr_csr_vevif_tasks_set (c function)": [[207, "c.nrf_vpr_csr_vevif_tasks_set"]], "nrf_vpr_csr_vio_dir_buffered_dirty_check (c function)": [[208, "c.nrf_vpr_csr_vio_dir_buffered_dirty_check"]], "nrf_vpr_csr_vio_dir_buffered_get (c function)": [[208, "c.nrf_vpr_csr_vio_dir_buffered_get"]], "nrf_vpr_csr_vio_dir_buffered_set (c function)": [[208, "c.nrf_vpr_csr_vio_dir_buffered_set"]], "nrf_vpr_csr_vio_dir_buffered_toggle_set (c function)": [[208, "c.nrf_vpr_csr_vio_dir_buffered_toggle_set"]], "nrf_vpr_csr_vio_dir_get (c function)": [[208, "c.nrf_vpr_csr_vio_dir_get"]], "nrf_vpr_csr_vio_dir_set (c function)": [[208, "c.nrf_vpr_csr_vio_dir_set"]], "nrf_vpr_csr_vio_dir_toggle_set (c function)": [[208, "c.nrf_vpr_csr_vio_dir_toggle_set"]], "nrf_vpr_csr_vio_dirout_buffered_dirty_check (c function)": [[208, "c.nrf_vpr_csr_vio_dirout_buffered_dirty_check"]], "nrf_vpr_csr_vio_dirout_buffered_get (c function)": [[208, "c.nrf_vpr_csr_vio_dirout_buffered_get"]], "nrf_vpr_csr_vio_dirout_buffered_set (c function)": [[208, "c.nrf_vpr_csr_vio_dirout_buffered_set"]], "nrf_vpr_csr_vio_dirout_get (c function)": [[208, "c.nrf_vpr_csr_vio_dirout_get"]], "nrf_vpr_csr_vio_dirout_set (c function)": [[208, "c.nrf_vpr_csr_vio_dirout_set"]], "nrf_vpr_csr_vio_dirout_toggle_buffered_set (c function)": [[208, "c.nrf_vpr_csr_vio_dirout_toggle_buffered_set"]], "nrf_vpr_csr_vio_dirout_toggle_set (c function)": [[208, "c.nrf_vpr_csr_vio_dirout_toggle_set"]], "nrf_vpr_csr_vio_in_get (c function)": [[208, "c.nrf_vpr_csr_vio_in_get"]], "nrf_vpr_csr_vio_mode_in_get (c function)": [[208, "c.nrf_vpr_csr_vio_mode_in_get"]], "nrf_vpr_csr_vio_mode_in_set (c function)": [[208, "c.nrf_vpr_csr_vio_mode_in_set"]], "nrf_vpr_csr_vio_mode_in_t (c enum)": [[208, "c.nrf_vpr_csr_vio_mode_in_t"]], "nrf_vpr_csr_vio_mode_in_t.nrf_vpr_csr_vio_mode_in_continuous (c enumerator)": [[208, "c.nrf_vpr_csr_vio_mode_in_t.NRF_VPR_CSR_VIO_MODE_IN_CONTINUOUS"]], "nrf_vpr_csr_vio_mode_in_t.nrf_vpr_csr_vio_mode_in_event (c enumerator)": [[208, "c.nrf_vpr_csr_vio_mode_in_t.NRF_VPR_CSR_VIO_MODE_IN_EVENT"]], "nrf_vpr_csr_vio_mode_out_get (c function)": [[208, "c.nrf_vpr_csr_vio_mode_out_get"]], "nrf_vpr_csr_vio_mode_out_set (c function)": [[208, "c.nrf_vpr_csr_vio_mode_out_set"]], "nrf_vpr_csr_vio_mode_out_t (c struct)": [[208, "c.nrf_vpr_csr_vio_mode_out_t"]], "nrf_vpr_csr_vio_mode_out_t.shift_enable (c var)": [[208, "c.nrf_vpr_csr_vio_mode_out_t.shift_enable"]], "nrf_vpr_csr_vio_mode_out_t.shift_size (c var)": [[208, "c.nrf_vpr_csr_vio_mode_out_t.shift_size"]], "nrf_vpr_csr_vio_out_buffered_dirty_check (c function)": [[208, "c.nrf_vpr_csr_vio_out_buffered_dirty_check"]], "nrf_vpr_csr_vio_out_buffered_get (c function)": [[208, "c.nrf_vpr_csr_vio_out_buffered_get"]], "nrf_vpr_csr_vio_out_buffered_set (c function)": [[208, "c.nrf_vpr_csr_vio_out_buffered_set"]], "nrf_vpr_csr_vio_out_combined_dirty_check (c function)": [[208, "c.nrf_vpr_csr_vio_out_combined_dirty_check"]], "nrf_vpr_csr_vio_out_combined_set (c function)": [[208, "c.nrf_vpr_csr_vio_out_combined_set"]], "nrf_vpr_csr_vio_out_combined_toggle_set (c function)": [[208, "c.nrf_vpr_csr_vio_out_combined_toggle_set"]], "nrf_vpr_csr_vio_out_get (c function)": [[208, "c.nrf_vpr_csr_vio_out_get"]], "nrf_vpr_csr_vio_out_set (c function)": [[208, "c.nrf_vpr_csr_vio_out_set"]], "nrf_vpr_csr_vio_out_shift_t (c enum)": [[208, "c.nrf_vpr_csr_vio_out_shift_t"]], "nrf_vpr_csr_vio_out_shift_t.nrf_vpr_csr_vio_out_shift_1 (c enumerator)": [[208, "c.nrf_vpr_csr_vio_out_shift_t.NRF_VPR_CSR_VIO_OUT_SHIFT_1"]], "nrf_vpr_csr_vio_out_shift_t.nrf_vpr_csr_vio_out_shift_16 (c enumerator)": [[208, "c.nrf_vpr_csr_vio_out_shift_t.NRF_VPR_CSR_VIO_OUT_SHIFT_16"]], "nrf_vpr_csr_vio_out_shift_t.nrf_vpr_csr_vio_out_shift_2 (c enumerator)": [[208, "c.nrf_vpr_csr_vio_out_shift_t.NRF_VPR_CSR_VIO_OUT_SHIFT_2"]], "nrf_vpr_csr_vio_out_shift_t.nrf_vpr_csr_vio_out_shift_4 (c enumerator)": [[208, "c.nrf_vpr_csr_vio_out_shift_t.NRF_VPR_CSR_VIO_OUT_SHIFT_4"]], "nrf_vpr_csr_vio_out_shift_t.nrf_vpr_csr_vio_out_shift_8 (c enumerator)": [[208, "c.nrf_vpr_csr_vio_out_shift_t.NRF_VPR_CSR_VIO_OUT_SHIFT_8"]], "nrf_vpr_csr_vio_out_toggle_buffered_set (c function)": [[208, "c.nrf_vpr_csr_vio_out_toggle_buffered_set"]], "nrf_vpr_csr_vio_out_toggle_set (c function)": [[208, "c.nrf_vpr_csr_vio_out_toggle_set"]], "nrf_vpr_csr_vtim_combined_counter_add_set (c function)": [[209, "c.nrf_vpr_csr_vtim_combined_counter_add_set"]], "nrf_vpr_csr_vtim_combined_counter_get (c function)": [[209, "c.nrf_vpr_csr_vtim_combined_counter_get"]], "nrf_vpr_csr_vtim_combined_counter_set (c function)": [[209, "c.nrf_vpr_csr_vtim_combined_counter_set"]], "nrf_vpr_csr_vtim_combined_counter_top_get (c function)": [[209, "c.nrf_vpr_csr_vtim_combined_counter_top_get"]], "nrf_vpr_csr_vtim_combined_counter_top_set (c function)": [[209, "c.nrf_vpr_csr_vtim_combined_counter_top_set"]], "nrf_vpr_csr_vtim_combined_wait_trigger (c function)": [[209, "c.nrf_vpr_csr_vtim_combined_wait_trigger"]], "nrf_vpr_csr_vtim_count_mode_set (c function)": [[209, "c.nrf_vpr_csr_vtim_count_mode_set"]], "nrf_vpr_csr_vtim_count_t (c enum)": [[209, "c.nrf_vpr_csr_vtim_count_t"]], "nrf_vpr_csr_vtim_count_t.nrf_vpr_csr_vtim_count_reload (c enumerator)": [[209, "c.nrf_vpr_csr_vtim_count_t.NRF_VPR_CSR_VTIM_COUNT_RELOAD"]], "nrf_vpr_csr_vtim_count_t.nrf_vpr_csr_vtim_count_stop (c enumerator)": [[209, "c.nrf_vpr_csr_vtim_count_t.NRF_VPR_CSR_VTIM_COUNT_STOP"]], "nrf_vpr_csr_vtim_count_t.nrf_vpr_csr_vtim_count_trigger_combined (c enumerator)": [[209, "c.nrf_vpr_csr_vtim_count_t.NRF_VPR_CSR_VTIM_COUNT_TRIGGER_COMBINED"]], "nrf_vpr_csr_vtim_count_t.nrf_vpr_csr_vtim_count_wrap (c enumerator)": [[209, "c.nrf_vpr_csr_vtim_count_t.NRF_VPR_CSR_VTIM_COUNT_WRAP"]], "nrf_vpr_csr_vtim_simple_counter_add_set (c function)": [[209, "c.nrf_vpr_csr_vtim_simple_counter_add_set"]], "nrf_vpr_csr_vtim_simple_counter_get (c function)": [[209, "c.nrf_vpr_csr_vtim_simple_counter_get"]], "nrf_vpr_csr_vtim_simple_counter_set (c function)": [[209, "c.nrf_vpr_csr_vtim_simple_counter_set"]], "nrf_vpr_csr_vtim_simple_counter_top_get (c function)": [[209, "c.nrf_vpr_csr_vtim_simple_counter_top_get"]], "nrf_vpr_csr_vtim_simple_counter_top_set (c function)": [[209, "c.nrf_vpr_csr_vtim_simple_counter_top_set"]], "nrf_vpr_csr_vtim_simple_wait_set (c function)": [[209, "c.nrf_vpr_csr_vtim_simple_wait_set"]], "nrf_vpr_cst_vtim_count_mode_get (c function)": [[209, "c.nrf_vpr_cst_vtim_count_mode_get"]], "nrf_vpr_all_channels_int_mask (c macro)": [[210, "c.NRF_VPR_ALL_CHANNELS_INT_MASK"]], "nrf_vpr_events_triggered_count (c macro)": [[210, "c.NRF_VPR_EVENTS_TRIGGERED_COUNT"]], "nrf_vpr_events_triggered_max (c macro)": [[210, "c.NRF_VPR_EVENTS_TRIGGERED_MAX"]], "nrf_vpr_events_triggered_min (c macro)": [[210, "c.NRF_VPR_EVENTS_TRIGGERED_MIN"]], "nrf_vpr_tasks_trigger_max (c macro)": [[210, "c.NRF_VPR_TASKS_TRIGGER_MAX"]], "nrf_vpr_tasks_trigger_min (c macro)": [[210, "c.NRF_VPR_TASKS_TRIGGER_MIN"]], "nrf_vpr_task_trigger_all_mask (c macro)": [[210, "c.NRF_VPR_TASK_TRIGGER_ALL_MASK"]], "nrf_vpr_cpurun_get (c function)": [[210, "c.nrf_vpr_cpurun_get"]], "nrf_vpr_cpurun_set (c function)": [[210, "c.nrf_vpr_cpurun_set"]], "nrf_vpr_debugif_dmcontrol_get (c function)": [[210, "c.nrf_vpr_debugif_dmcontrol_get"]], "nrf_vpr_debugif_dmcontrol_mask_set (c function)": [[210, "c.nrf_vpr_debugif_dmcontrol_mask_set"]], "nrf_vpr_debugif_dmcontrol_set (c function)": [[210, "c.nrf_vpr_debugif_dmcontrol_set"]], "nrf_vpr_dmcontrol_mask_t (c enum)": [[210, "c.nrf_vpr_dmcontrol_mask_t"]], "nrf_vpr_dmcontrol_mask_t.nrf_vpr_dmcontrol_dmactive_mask (c enumerator)": [[210, "c.nrf_vpr_dmcontrol_mask_t.NRF_VPR_DMCONTROL_DMACTIVE_MASK"]], "nrf_vpr_dmcontrol_mask_t.nrf_vpr_dmcontrol_ndmreset_mask (c enumerator)": [[210, "c.nrf_vpr_dmcontrol_mask_t.NRF_VPR_DMCONTROL_NDMRESET_MASK"]], "nrf_vpr_dmcontrol_t (c enum)": [[210, "c.nrf_vpr_dmcontrol_t"]], "nrf_vpr_dmcontrol_t.nrf_vpr_dmcontrol_dmactive (c enumerator)": [[210, "c.nrf_vpr_dmcontrol_t.NRF_VPR_DMCONTROL_DMACTIVE"]], "nrf_vpr_dmcontrol_t.nrf_vpr_dmcontrol_ndmreset (c enumerator)": [[210, "c.nrf_vpr_dmcontrol_t.NRF_VPR_DMCONTROL_NDMRESET"]], "nrf_vpr_event_address_get (c function)": [[210, "c.nrf_vpr_event_address_get"]], "nrf_vpr_event_check (c function)": [[210, "c.nrf_vpr_event_check"]], "nrf_vpr_event_clear (c function)": [[210, "c.nrf_vpr_event_clear"]], "nrf_vpr_event_t (c enum)": [[210, "c.nrf_vpr_event_t"]], "nrf_vpr_event_t.nrf_vpr_event_triggered_0 (c enumerator)": [[210, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_0"]], "nrf_vpr_event_t.nrf_vpr_event_triggered_1 (c enumerator)": [[210, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_1"]], "nrf_vpr_event_t.nrf_vpr_event_triggered_10 (c enumerator)": [[210, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_10"]], "nrf_vpr_event_t.nrf_vpr_event_triggered_11 (c enumerator)": [[210, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_11"]], "nrf_vpr_event_t.nrf_vpr_event_triggered_12 (c enumerator)": [[210, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_12"]], "nrf_vpr_event_t.nrf_vpr_event_triggered_13 (c enumerator)": [[210, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_13"]], "nrf_vpr_event_t.nrf_vpr_event_triggered_14 (c enumerator)": [[210, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_14"]], "nrf_vpr_event_t.nrf_vpr_event_triggered_15 (c enumerator)": [[210, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_15"]], "nrf_vpr_event_t.nrf_vpr_event_triggered_16 (c enumerator)": [[210, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_16"]], "nrf_vpr_event_t.nrf_vpr_event_triggered_17 (c enumerator)": [[210, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_17"]], "nrf_vpr_event_t.nrf_vpr_event_triggered_18 (c enumerator)": [[210, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_18"]], "nrf_vpr_event_t.nrf_vpr_event_triggered_19 (c enumerator)": [[210, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_19"]], "nrf_vpr_event_t.nrf_vpr_event_triggered_2 (c enumerator)": [[210, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_2"]], "nrf_vpr_event_t.nrf_vpr_event_triggered_20 (c enumerator)": [[210, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_20"]], "nrf_vpr_event_t.nrf_vpr_event_triggered_21 (c enumerator)": [[210, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_21"]], "nrf_vpr_event_t.nrf_vpr_event_triggered_22 (c enumerator)": [[210, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_22"]], "nrf_vpr_event_t.nrf_vpr_event_triggered_3 (c enumerator)": [[210, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_3"]], "nrf_vpr_event_t.nrf_vpr_event_triggered_4 (c enumerator)": [[210, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_4"]], "nrf_vpr_event_t.nrf_vpr_event_triggered_5 (c enumerator)": [[210, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_5"]], "nrf_vpr_event_t.nrf_vpr_event_triggered_6 (c enumerator)": [[210, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_6"]], "nrf_vpr_event_t.nrf_vpr_event_triggered_7 (c enumerator)": [[210, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_7"]], "nrf_vpr_event_t.nrf_vpr_event_triggered_8 (c enumerator)": [[210, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_8"]], "nrf_vpr_event_t.nrf_vpr_event_triggered_9 (c enumerator)": [[210, "c.nrf_vpr_event_t.NRF_VPR_EVENT_TRIGGERED_9"]], "nrf_vpr_initpc_get (c function)": [[210, "c.nrf_vpr_initpc_get"]], "nrf_vpr_initpc_set (c function)": [[210, "c.nrf_vpr_initpc_set"]], "nrf_vpr_int_disable (c function)": [[210, "c.nrf_vpr_int_disable"]], "nrf_vpr_int_enable (c function)": [[210, "c.nrf_vpr_int_enable"]], "nrf_vpr_int_enable_check (c function)": [[210, "c.nrf_vpr_int_enable_check"]], "nrf_vpr_int_mask_t (c enum)": [[210, "c.nrf_vpr_int_mask_t"]], "nrf_vpr_int_mask_t.nrf_vpr_int_triggered_0_mask (c enumerator)": [[210, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_0_MASK"]], "nrf_vpr_int_mask_t.nrf_vpr_int_triggered_10_mask (c enumerator)": [[210, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_10_MASK"]], "nrf_vpr_int_mask_t.nrf_vpr_int_triggered_11_mask (c enumerator)": [[210, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_11_MASK"]], "nrf_vpr_int_mask_t.nrf_vpr_int_triggered_12_mask (c enumerator)": [[210, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_12_MASK"]], "nrf_vpr_int_mask_t.nrf_vpr_int_triggered_13_mask (c enumerator)": [[210, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_13_MASK"]], "nrf_vpr_int_mask_t.nrf_vpr_int_triggered_14_mask (c enumerator)": [[210, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_14_MASK"]], "nrf_vpr_int_mask_t.nrf_vpr_int_triggered_15_mask (c enumerator)": [[210, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_15_MASK"]], "nrf_vpr_int_mask_t.nrf_vpr_int_triggered_16_mask (c enumerator)": [[210, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_16_MASK"]], "nrf_vpr_int_mask_t.nrf_vpr_int_triggered_17_mask (c enumerator)": [[210, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_17_MASK"]], "nrf_vpr_int_mask_t.nrf_vpr_int_triggered_18_mask (c enumerator)": [[210, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_18_MASK"]], "nrf_vpr_int_mask_t.nrf_vpr_int_triggered_19_mask (c enumerator)": [[210, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_19_MASK"]], "nrf_vpr_int_mask_t.nrf_vpr_int_triggered_1_mask (c enumerator)": [[210, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_1_MASK"]], "nrf_vpr_int_mask_t.nrf_vpr_int_triggered_20_mask (c enumerator)": [[210, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_20_MASK"]], "nrf_vpr_int_mask_t.nrf_vpr_int_triggered_21_mask (c enumerator)": [[210, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_21_MASK"]], "nrf_vpr_int_mask_t.nrf_vpr_int_triggered_22_mask (c enumerator)": [[210, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_22_MASK"]], "nrf_vpr_int_mask_t.nrf_vpr_int_triggered_2_mask (c enumerator)": [[210, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_2_MASK"]], "nrf_vpr_int_mask_t.nrf_vpr_int_triggered_3_mask (c enumerator)": [[210, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_3_MASK"]], "nrf_vpr_int_mask_t.nrf_vpr_int_triggered_4_mask (c enumerator)": [[210, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_4_MASK"]], "nrf_vpr_int_mask_t.nrf_vpr_int_triggered_5_mask (c enumerator)": [[210, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_5_MASK"]], "nrf_vpr_int_mask_t.nrf_vpr_int_triggered_6_mask (c enumerator)": [[210, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_6_MASK"]], "nrf_vpr_int_mask_t.nrf_vpr_int_triggered_7_mask (c enumerator)": [[210, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_7_MASK"]], "nrf_vpr_int_mask_t.nrf_vpr_int_triggered_8_mask (c enumerator)": [[210, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_8_MASK"]], "nrf_vpr_int_mask_t.nrf_vpr_int_triggered_9_mask (c enumerator)": [[210, "c.nrf_vpr_int_mask_t.NRF_VPR_INT_TRIGGERED_9_MASK"]], "nrf_vpr_task_address_get (c function)": [[210, "c.nrf_vpr_task_address_get"]], "nrf_vpr_task_t (c enum)": [[210, "c.nrf_vpr_task_t"]], "nrf_vpr_task_t.nrf_vpr_task_trigger_0 (c enumerator)": [[210, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_0"]], "nrf_vpr_task_t.nrf_vpr_task_trigger_1 (c enumerator)": [[210, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_1"]], "nrf_vpr_task_t.nrf_vpr_task_trigger_10 (c enumerator)": [[210, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_10"]], "nrf_vpr_task_t.nrf_vpr_task_trigger_11 (c enumerator)": [[210, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_11"]], "nrf_vpr_task_t.nrf_vpr_task_trigger_12 (c enumerator)": [[210, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_12"]], "nrf_vpr_task_t.nrf_vpr_task_trigger_13 (c enumerator)": [[210, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_13"]], "nrf_vpr_task_t.nrf_vpr_task_trigger_14 (c enumerator)": [[210, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_14"]], "nrf_vpr_task_t.nrf_vpr_task_trigger_15 (c enumerator)": [[210, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_15"]], "nrf_vpr_task_t.nrf_vpr_task_trigger_16 (c enumerator)": [[210, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_16"]], "nrf_vpr_task_t.nrf_vpr_task_trigger_17 (c enumerator)": [[210, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_17"]], "nrf_vpr_task_t.nrf_vpr_task_trigger_18 (c enumerator)": [[210, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_18"]], "nrf_vpr_task_t.nrf_vpr_task_trigger_19 (c enumerator)": [[210, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_19"]], "nrf_vpr_task_t.nrf_vpr_task_trigger_2 (c enumerator)": [[210, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_2"]], "nrf_vpr_task_t.nrf_vpr_task_trigger_20 (c enumerator)": [[210, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_20"]], "nrf_vpr_task_t.nrf_vpr_task_trigger_21 (c enumerator)": [[210, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_21"]], "nrf_vpr_task_t.nrf_vpr_task_trigger_22 (c enumerator)": [[210, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_22"]], "nrf_vpr_task_t.nrf_vpr_task_trigger_3 (c enumerator)": [[210, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_3"]], "nrf_vpr_task_t.nrf_vpr_task_trigger_4 (c enumerator)": [[210, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_4"]], "nrf_vpr_task_t.nrf_vpr_task_trigger_5 (c enumerator)": [[210, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_5"]], "nrf_vpr_task_t.nrf_vpr_task_trigger_6 (c enumerator)": [[210, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_6"]], "nrf_vpr_task_t.nrf_vpr_task_trigger_7 (c enumerator)": [[210, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_7"]], "nrf_vpr_task_t.nrf_vpr_task_trigger_8 (c enumerator)": [[210, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_8"]], "nrf_vpr_task_t.nrf_vpr_task_trigger_9 (c enumerator)": [[210, "c.nrf_vpr_task_t.NRF_VPR_TASK_TRIGGER_9"]], "nrf_vpr_task_trigger (c function)": [[210, "c.nrf_vpr_task_trigger"]], "nrf_vpr_trigger_task_get (c function)": [[210, "c.nrf_vpr_trigger_task_get"]], "nrf_vpr_triggered_event_get (c function)": [[210, "c.nrf_vpr_triggered_event_get"]], "nrfy_vpr_cpurun_get (c function)": [[211, "c.nrfy_vpr_cpurun_get"]], "nrfy_vpr_cpurun_set (c function)": [[211, "c.nrfy_vpr_cpurun_set"]], "nrfy_vpr_debugif_dmcontrol_get (c function)": [[211, "c.nrfy_vpr_debugif_dmcontrol_get"]], "nrfy_vpr_debugif_dmcontrol_set (c function)": [[211, "c.nrfy_vpr_debugif_dmcontrol_set"]], "nrfy_vpr_event_address_get (c function)": [[211, "c.nrfy_vpr_event_address_get"]], "nrfy_vpr_event_check (c function)": [[211, "c.nrfy_vpr_event_check"]], "nrfy_vpr_event_clear (c function)": [[211, "c.nrfy_vpr_event_clear"]], "nrfy_vpr_initpc_get (c function)": [[211, "c.nrfy_vpr_initpc_get"]], "nrfy_vpr_initpc_set (c function)": [[211, "c.nrfy_vpr_initpc_set"]], "nrfy_vpr_int_disable (c function)": [[211, "c.nrfy_vpr_int_disable"]], "nrfy_vpr_int_enable (c function)": [[211, "c.nrfy_vpr_int_enable"]], "nrfy_vpr_int_enable_check (c function)": [[211, "c.nrfy_vpr_int_enable_check"]], "nrfy_vpr_task_address_get (c function)": [[211, "c.nrfy_vpr_task_address_get"]], "nrfy_vpr_task_trigger (c function)": [[211, "c.nrfy_vpr_task_trigger"]], "nrfy_vpr_trigger_task_get (c function)": [[211, "c.nrfy_vpr_trigger_task_get"]], "nrfy_vpr_triggered_event_get (c function)": [[211, "c.nrfy_vpr_triggered_event_get"]], "nrfx_vevif_event_handler_t (c type)": [[213, "c.nrfx_vevif_event_handler_t"]], "nrfx_vevif_init (c function)": [[213, "c.nrfx_vevif_init"]], "nrfx_vevif_init_check (c function)": [[213, "c.nrfx_vevif_init_check"]], "nrfx_vevif_int_disable (c function)": [[213, "c.nrfx_vevif_int_disable"]], "nrfx_vevif_int_enable (c function)": [[213, "c.nrfx_vevif_int_enable"]], "nrfx_vevif_uninit (c function)": [[213, "c.nrfx_vevif_uninit"]], "nrf_vreqctrl_radio_high_voltage_check (c function)": [[214, "c.nrf_vreqctrl_radio_high_voltage_check"]], "nrf_vreqctrl_radio_high_voltage_set (c function)": [[214, "c.nrf_vreqctrl_radio_high_voltage_set"]], "nrfx_wdt_default_config (c macro)": [[215, "c.NRFX_WDT_DEFAULT_CONFIG"]], "nrfx_wdt_has_stop (c macro)": [[215, "c.NRFX_WDT_HAS_STOP"]], "nrfx_wdt_instance (c macro)": [[215, "c.NRFX_WDT_INSTANCE"]], "nrfx_wdt_inst_handler_get (c macro)": [[215, "c.NRFX_WDT_INST_HANDLER_GET"]], "nrfx_wdt_irq_config (c macro)": [[215, "c.NRFX_WDT_IRQ_CONFIG"]], "nrfx_wdt_channel_alloc (c function)": [[215, "c.nrfx_wdt_channel_alloc"]], "nrfx_wdt_channel_feed (c function)": [[215, "c.nrfx_wdt_channel_feed"]], "nrfx_wdt_channel_id (c type)": [[215, "c.nrfx_wdt_channel_id"]], "nrfx_wdt_channels_free (c function)": [[215, "c.nrfx_wdt_channels_free"]], "nrfx_wdt_config_t (c struct)": [[215, "c.nrfx_wdt_config_t"]], "nrfx_wdt_config_t.behaviour (c var)": [[215, "c.nrfx_wdt_config_t.behaviour"]], "nrfx_wdt_config_t.interrupt_priority (c var)": [[215, "c.nrfx_wdt_config_t.interrupt_priority"]], "nrfx_wdt_config_t.reload_value (c var)": [[215, "c.nrfx_wdt_config_t.reload_value"]], "nrfx_wdt_enable (c function)": [[215, "c.nrfx_wdt_enable"]], "nrfx_wdt_event_address_get (c function)": [[215, "c.nrfx_wdt_event_address_get"]], "nrfx_wdt_event_handler_t (c type)": [[215, "c.nrfx_wdt_event_handler_t"]], "nrfx_wdt_feed (c function)": [[215, "c.nrfx_wdt_feed"]], "nrfx_wdt_init (c function)": [[215, "c.nrfx_wdt_init"]], "nrfx_wdt_init_check (c function)": [[215, "c.nrfx_wdt_init_check"]], "nrfx_wdt_reconfigure (c function)": [[215, "c.nrfx_wdt_reconfigure"]], "nrfx_wdt_stop (c function)": [[215, "c.nrfx_wdt_stop"]], "nrfx_wdt_t (c struct)": [[215, "c.nrfx_wdt_t"]], "nrfx_wdt_t.drv_inst_idx (c var)": [[215, "c.nrfx_wdt_t.drv_inst_idx"]], "nrfx_wdt_t.p_reg (c var)": [[215, "c.nrfx_wdt_t.p_reg"]], "nrfx_wdt_task_address_get (c function)": [[215, "c.nrfx_wdt_task_address_get"]], "nrfx_wdt_uninit (c function)": [[215, "c.nrfx_wdt_uninit"]], "nrf_wdt_channel_number (c macro)": [[216, "c.NRF_WDT_CHANNEL_NUMBER"]], "nrf_wdt_has_nmi (c macro)": [[216, "c.NRF_WDT_HAS_NMI"]], "nrf_wdt_has_stop (c macro)": [[216, "c.NRF_WDT_HAS_STOP"]], "nrf_wdt_inst_get (c macro)": [[216, "c.NRF_WDT_INST_GET"]], "nrf_wdt_rr_value (c macro)": [[216, "c.NRF_WDT_RR_VALUE"]], "nrf_wdt_behaviour_mask_t (c enum)": [[216, "c.nrf_wdt_behaviour_mask_t"]], "nrf_wdt_behaviour_mask_t.nrf_wdt_behaviour_run_halt_mask (c enumerator)": [[216, "c.nrf_wdt_behaviour_mask_t.NRF_WDT_BEHAVIOUR_RUN_HALT_MASK"]], "nrf_wdt_behaviour_mask_t.nrf_wdt_behaviour_run_sleep_mask (c enumerator)": [[216, "c.nrf_wdt_behaviour_mask_t.NRF_WDT_BEHAVIOUR_RUN_SLEEP_MASK"]], "nrf_wdt_behaviour_mask_t.nrf_wdt_behaviour_stop_enable_mask (c enumerator)": [[216, "c.nrf_wdt_behaviour_mask_t.NRF_WDT_BEHAVIOUR_STOP_ENABLE_MASK"]], "nrf_wdt_behaviour_set (c function)": [[216, "c.nrf_wdt_behaviour_set"]], "nrf_wdt_event_address_get (c function)": [[216, "c.nrf_wdt_event_address_get"]], "nrf_wdt_event_check (c function)": [[216, "c.nrf_wdt_event_check"]], "nrf_wdt_event_clear (c function)": [[216, "c.nrf_wdt_event_clear"]], "nrf_wdt_event_t (c enum)": [[216, "c.nrf_wdt_event_t"]], "nrf_wdt_event_t.nrf_wdt_event_stopped (c enumerator)": [[216, "c.nrf_wdt_event_t.NRF_WDT_EVENT_STOPPED"]], "nrf_wdt_event_t.nrf_wdt_event_timeout (c enumerator)": [[216, "c.nrf_wdt_event_t.NRF_WDT_EVENT_TIMEOUT"]], "nrf_wdt_int_disable (c function)": [[216, "c.nrf_wdt_int_disable"]], "nrf_wdt_int_enable (c function)": [[216, "c.nrf_wdt_int_enable"]], "nrf_wdt_int_enable_check (c function)": [[216, "c.nrf_wdt_int_enable_check"]], "nrf_wdt_int_mask_t (c enum)": [[216, "c.nrf_wdt_int_mask_t"]], "nrf_wdt_int_mask_t.nrf_wdt_int_stopped_mask (c enumerator)": [[216, "c.nrf_wdt_int_mask_t.NRF_WDT_INT_STOPPED_MASK"]], "nrf_wdt_int_mask_t.nrf_wdt_int_timeout_mask (c enumerator)": [[216, "c.nrf_wdt_int_mask_t.NRF_WDT_INT_TIMEOUT_MASK"]], "nrf_wdt_nmi_int_disable (c function)": [[216, "c.nrf_wdt_nmi_int_disable"]], "nrf_wdt_nmi_int_enable (c function)": [[216, "c.nrf_wdt_nmi_int_enable"]], "nrf_wdt_nmi_int_enable_check (c function)": [[216, "c.nrf_wdt_nmi_int_enable_check"]], "nrf_wdt_publish_clear (c function)": [[216, "c.nrf_wdt_publish_clear"]], "nrf_wdt_publish_set (c function)": [[216, "c.nrf_wdt_publish_set"]], "nrf_wdt_reload_request_disable (c function)": [[216, "c.nrf_wdt_reload_request_disable"]], "nrf_wdt_reload_request_enable (c function)": [[216, "c.nrf_wdt_reload_request_enable"]], "nrf_wdt_reload_request_enable_check (c function)": [[216, "c.nrf_wdt_reload_request_enable_check"]], "nrf_wdt_reload_request_set (c function)": [[216, "c.nrf_wdt_reload_request_set"]], "nrf_wdt_reload_value_get (c function)": [[216, "c.nrf_wdt_reload_value_get"]], "nrf_wdt_reload_value_set (c function)": [[216, "c.nrf_wdt_reload_value_set"]], "nrf_wdt_request_status_check (c function)": [[216, "c.nrf_wdt_request_status_check"]], "nrf_wdt_request_status_get (c function)": [[216, "c.nrf_wdt_request_status_get"]], "nrf_wdt_rr_register_mask_t (c enum)": [[216, "c.nrf_wdt_rr_register_mask_t"]], "nrf_wdt_rr_register_mask_t.nrf_wdt_rr0_mask (c enumerator)": [[216, "c.nrf_wdt_rr_register_mask_t.NRF_WDT_RR0_MASK"]], "nrf_wdt_rr_register_mask_t.nrf_wdt_rr1_mask (c enumerator)": [[216, "c.nrf_wdt_rr_register_mask_t.NRF_WDT_RR1_MASK"]], "nrf_wdt_rr_register_mask_t.nrf_wdt_rr2_mask (c enumerator)": [[216, "c.nrf_wdt_rr_register_mask_t.NRF_WDT_RR2_MASK"]], "nrf_wdt_rr_register_mask_t.nrf_wdt_rr3_mask (c enumerator)": [[216, "c.nrf_wdt_rr_register_mask_t.NRF_WDT_RR3_MASK"]], "nrf_wdt_rr_register_mask_t.nrf_wdt_rr4_mask (c enumerator)": [[216, "c.nrf_wdt_rr_register_mask_t.NRF_WDT_RR4_MASK"]], "nrf_wdt_rr_register_mask_t.nrf_wdt_rr5_mask (c enumerator)": [[216, "c.nrf_wdt_rr_register_mask_t.NRF_WDT_RR5_MASK"]], "nrf_wdt_rr_register_mask_t.nrf_wdt_rr6_mask (c enumerator)": [[216, "c.nrf_wdt_rr_register_mask_t.NRF_WDT_RR6_MASK"]], "nrf_wdt_rr_register_mask_t.nrf_wdt_rr7_mask (c enumerator)": [[216, "c.nrf_wdt_rr_register_mask_t.NRF_WDT_RR7_MASK"]], "nrf_wdt_rr_register_t (c enum)": [[216, "c.nrf_wdt_rr_register_t"]], "nrf_wdt_rr_register_t.nrf_wdt_rr0 (c enumerator)": [[216, "c.nrf_wdt_rr_register_t.NRF_WDT_RR0"]], "nrf_wdt_rr_register_t.nrf_wdt_rr1 (c enumerator)": [[216, "c.nrf_wdt_rr_register_t.NRF_WDT_RR1"]], "nrf_wdt_rr_register_t.nrf_wdt_rr2 (c enumerator)": [[216, "c.nrf_wdt_rr_register_t.NRF_WDT_RR2"]], "nrf_wdt_rr_register_t.nrf_wdt_rr3 (c enumerator)": [[216, "c.nrf_wdt_rr_register_t.NRF_WDT_RR3"]], "nrf_wdt_rr_register_t.nrf_wdt_rr4 (c enumerator)": [[216, "c.nrf_wdt_rr_register_t.NRF_WDT_RR4"]], "nrf_wdt_rr_register_t.nrf_wdt_rr5 (c enumerator)": [[216, "c.nrf_wdt_rr_register_t.NRF_WDT_RR5"]], "nrf_wdt_rr_register_t.nrf_wdt_rr6 (c enumerator)": [[216, "c.nrf_wdt_rr_register_t.NRF_WDT_RR6"]], "nrf_wdt_rr_register_t.nrf_wdt_rr7 (c enumerator)": [[216, "c.nrf_wdt_rr_register_t.NRF_WDT_RR7"]], "nrf_wdt_started_check (c function)": [[216, "c.nrf_wdt_started_check"]], "nrf_wdt_subscribe_clear (c function)": [[216, "c.nrf_wdt_subscribe_clear"]], "nrf_wdt_subscribe_set (c function)": [[216, "c.nrf_wdt_subscribe_set"]], "nrf_wdt_task_address_get (c function)": [[216, "c.nrf_wdt_task_address_get"]], "nrf_wdt_task_stop_enable_set (c function)": [[216, "c.nrf_wdt_task_stop_enable_set"]], "nrf_wdt_task_t (c enum)": [[216, "c.nrf_wdt_task_t"]], "nrf_wdt_task_t.nrf_wdt_task_start (c enumerator)": [[216, "c.nrf_wdt_task_t.NRF_WDT_TASK_START"]], "nrf_wdt_task_t.nrf_wdt_task_stop (c enumerator)": [[216, "c.nrf_wdt_task_t.NRF_WDT_TASK_STOP"]], "nrf_wdt_task_trigger (c function)": [[216, "c.nrf_wdt_task_trigger"]], "nrfy_wdt_has_stop (c macro)": [[217, "c.NRFY_WDT_HAS_STOP"]], "nrfy_wdt_behaviour_set (c function)": [[217, "c.nrfy_wdt_behaviour_set"]], "nrfy_wdt_config_t (c struct)": [[217, "c.nrfy_wdt_config_t"]], "nrfy_wdt_config_t.behaviour (c var)": [[217, "c.nrfy_wdt_config_t.behaviour"]], "nrfy_wdt_config_t.reload_value (c var)": [[217, "c.nrfy_wdt_config_t.reload_value"]], "nrfy_wdt_event_address_get (c function)": [[217, "c.nrfy_wdt_event_address_get"]], "nrfy_wdt_event_check (c function)": [[217, "c.nrfy_wdt_event_check"]], "nrfy_wdt_event_clear (c function)": [[217, "c.nrfy_wdt_event_clear"]], "nrfy_wdt_events_process (c function)": [[217, "c.nrfy_wdt_events_process"]], "nrfy_wdt_int_disable (c function)": [[217, "c.nrfy_wdt_int_disable"]], "nrfy_wdt_int_enable (c function)": [[217, "c.nrfy_wdt_int_enable"]], "nrfy_wdt_int_enable_check (c function)": [[217, "c.nrfy_wdt_int_enable_check"]], "nrfy_wdt_int_init (c function)": [[217, "c.nrfy_wdt_int_init"]], "nrfy_wdt_int_uninit (c function)": [[217, "c.nrfy_wdt_int_uninit"]], "nrfy_wdt_periph_configure (c function)": [[217, "c.nrfy_wdt_periph_configure"]], "nrfy_wdt_publish_clear (c function)": [[217, "c.nrfy_wdt_publish_clear"]], "nrfy_wdt_publish_set (c function)": [[217, "c.nrfy_wdt_publish_set"]], "nrfy_wdt_reload_request_disable (c function)": [[217, "c.nrfy_wdt_reload_request_disable"]], "nrfy_wdt_reload_request_enable (c function)": [[217, "c.nrfy_wdt_reload_request_enable"]], "nrfy_wdt_reload_request_enable_check (c function)": [[217, "c.nrfy_wdt_reload_request_enable_check"]], "nrfy_wdt_reload_request_set (c function)": [[217, "c.nrfy_wdt_reload_request_set"]], "nrfy_wdt_reload_value_get (c function)": [[217, "c.nrfy_wdt_reload_value_get"]], "nrfy_wdt_reload_value_set (c function)": [[217, "c.nrfy_wdt_reload_value_set"]], "nrfy_wdt_request_status_check (c function)": [[217, "c.nrfy_wdt_request_status_check"]], "nrfy_wdt_request_status_get (c function)": [[217, "c.nrfy_wdt_request_status_get"]], "nrfy_wdt_started_check (c function)": [[217, "c.nrfy_wdt_started_check"]], "nrfy_wdt_subscribe_clear (c function)": [[217, "c.nrfy_wdt_subscribe_clear"]], "nrfy_wdt_subscribe_set (c function)": [[217, "c.nrfy_wdt_subscribe_set"]], "nrfy_wdt_task_address_get (c function)": [[217, "c.nrfy_wdt_task_address_get"]], "nrfy_wdt_task_stop_enable_set (c function)": [[217, "c.nrfy_wdt_task_stop_enable_set"]], "nrfy_wdt_task_trigger (c function)": [[217, "c.nrfy_wdt_task_trigger"]], "nrfx_atomic_flag_clear (c function)": [[232, "c.nrfx_atomic_flag_clear"]], "nrfx_atomic_flag_clear_fetch (c function)": [[232, "c.nrfx_atomic_flag_clear_fetch"]], "nrfx_atomic_flag_set (c function)": [[232, "c.nrfx_atomic_flag_set"]], "nrfx_atomic_flag_set_fetch (c function)": [[232, "c.nrfx_atomic_flag_set_fetch"]], "nrfx_atomic_flag_t (c type)": [[232, "c.nrfx_atomic_flag_t"]], "nrfx_atomic_u32_add (c function)": [[232, "c.nrfx_atomic_u32_add"]], "nrfx_atomic_u32_and (c function)": [[232, "c.nrfx_atomic_u32_and"]], "nrfx_atomic_u32_cmp_exch (c function)": [[232, "c.nrfx_atomic_u32_cmp_exch"]], "nrfx_atomic_u32_fetch_add (c function)": [[232, "c.nrfx_atomic_u32_fetch_add"]], "nrfx_atomic_u32_fetch_and (c function)": [[232, "c.nrfx_atomic_u32_fetch_and"]], "nrfx_atomic_u32_fetch_or (c function)": [[232, "c.nrfx_atomic_u32_fetch_or"]], "nrfx_atomic_u32_fetch_store (c function)": [[232, "c.nrfx_atomic_u32_fetch_store"]], "nrfx_atomic_u32_fetch_sub (c function)": [[232, "c.nrfx_atomic_u32_fetch_sub"]], "nrfx_atomic_u32_fetch_sub_hs (c function)": [[232, "c.nrfx_atomic_u32_fetch_sub_hs"]], "nrfx_atomic_u32_fetch_xor (c function)": [[232, "c.nrfx_atomic_u32_fetch_xor"]], "nrfx_atomic_u32_or (c function)": [[232, "c.nrfx_atomic_u32_or"]], "nrfx_atomic_u32_store (c function)": [[232, "c.nrfx_atomic_u32_store"]], "nrfx_atomic_u32_sub (c function)": [[232, "c.nrfx_atomic_u32_sub"]], "nrfx_atomic_u32_sub_hs (c function)": [[232, "c.nrfx_atomic_u32_sub_hs"]], "nrfx_atomic_u32_t (c type)": [[232, "c.nrfx_atomic_u32_t"]], "nrfx_atomic_u32_xor (c function)": [[232, "c.nrfx_atomic_u32_xor"]], "bitmask_bytes_calculate (c macro)": [[233, "c.BITMASK_BYTES_CALCULATE"]], "bitmask_byte_get (c macro)": [[233, "c.BITMASK_BYTE_GET"]], "bitmask_relbit_get (c macro)": [[233, "c.BITMASK_RELBIT_GET"]], "nrf_bitmask_bit_clear (c function)": [[233, "c.nrf_bitmask_bit_clear"]], "nrf_bitmask_bit_is_set (c function)": [[233, "c.nrf_bitmask_bit_is_set"]], "nrf_bitmask_bit_set (c function)": [[233, "c.nrf_bitmask_bit_set"]], "nrf_bitmask_masks_and (c function)": [[233, "c.nrf_bitmask_masks_and"]], "nrf_bitmask_masks_or (c function)": [[233, "c.nrf_bitmask_masks_or"]], "nrfx_abs (c macro)": [[234, "c.NRFX_ABS"]], "nrfx_api_ver_at_least (c macro)": [[234, "c.NRFX_API_VER_AT_LEAST"]], "nrfx_array_size (c macro)": [[234, "c.NRFX_ARRAY_SIZE"]], "nrfx_bit (c macro)": [[234, "c.NRFX_BIT"]], "nrfx_bit_mask (c macro)": [[234, "c.NRFX_BIT_MASK"]], "nrfx_bit_size (c macro)": [[234, "c.NRFX_BIT_SIZE"]], "nrfx_ceil_div (c macro)": [[234, "c.NRFX_CEIL_DIV"]], "nrfx_check (c macro)": [[234, "c.NRFX_CHECK"]], "nrfx_concat_2 (c macro)": [[234, "c.NRFX_CONCAT_2"]], "nrfx_concat_2_ (c macro)": [[234, "c.NRFX_CONCAT_2_"]], "nrfx_concat_3 (c macro)": [[234, "c.NRFX_CONCAT_3"]], "nrfx_concat_3_ (c macro)": [[234, "c.NRFX_CONCAT_3_"]], "nrfx_easydma_length_validate (c macro)": [[234, "c.NRFX_EASYDMA_LENGTH_VALIDATE"]], "nrfx_feature_present (c macro)": [[234, "c.NRFX_FEATURE_PRESENT"]], "nrfx_foreach_enabled (c macro)": [[234, "c.NRFX_FOREACH_ENABLED"]], "nrfx_foreach_present (c macro)": [[234, "c.NRFX_FOREACH_PRESENT"]], "nrfx_instance_concat (c macro)": [[234, "c.NRFX_INSTANCE_CONCAT"]], "nrfx_instance_enum_list (c macro)": [[234, "c.NRFX_INSTANCE_ENUM_LIST"]], "nrfx_instance_irq_handlers (c macro)": [[234, "c.NRFX_INSTANCE_IRQ_HANDLERS"]], "nrfx_instance_irq_handlers_declare (c macro)": [[234, "c.NRFX_INSTANCE_IRQ_HANDLERS_DECLARE"]], "nrfx_instance_irq_handlers_ext (c macro)": [[234, "c.NRFX_INSTANCE_IRQ_HANDLERS_EXT"]], "nrfx_instance_irq_handlers_list (c macro)": [[234, "c.NRFX_INSTANCE_IRQ_HANDLERS_LIST"]], "nrfx_instance_present (c macro)": [[234, "c.NRFX_INSTANCE_PRESENT"]], "nrfx_in_range (c macro)": [[234, "c.NRFX_IN_RANGE"]], "nrfx_irq_number_get (c macro)": [[234, "c.NRFX_IRQ_NUMBER_GET"]], "nrfx_is_even (c macro)": [[234, "c.NRFX_IS_EVEN"]], "nrfx_is_power_of_two (c macro)": [[234, "c.NRFX_IS_POWER_OF_TWO"]], "nrfx_khz_to_hz (c macro)": [[234, "c.NRFX_KHZ_TO_HZ"]], "nrfx_max (c macro)": [[234, "c.NRFX_MAX"]], "nrfx_mhz_to_hz (c macro)": [[234, "c.NRFX_MHZ_TO_HZ"]], "nrfx_min (c macro)": [[234, "c.NRFX_MIN"]], "nrfx_offsetof (c macro)": [[234, "c.NRFX_OFFSETOF"]], "nrfx_peripheral_id_get (c macro)": [[234, "c.NRFX_PERIPHERAL_ID_GET"]], "nrfx_rounded_div (c macro)": [[234, "c.NRFX_ROUNDED_DIV"]], "nrfx_wait_for (c macro)": [[234, "c.NRFX_WAIT_FOR"]], "nrfx_bitpos_to_event (c function)": [[234, "c.nrfx_bitpos_to_event"]], "nrfx_drv_state_t (c enum)": [[234, "c.nrfx_drv_state_t"]], "nrfx_drv_state_t.nrfx_drv_state_initialized (c enumerator)": [[234, "c.nrfx_drv_state_t.NRFX_DRV_STATE_INITIALIZED"]], "nrfx_drv_state_t.nrfx_drv_state_powered_on (c enumerator)": [[234, "c.nrfx_drv_state_t.NRFX_DRV_STATE_POWERED_ON"]], "nrfx_drv_state_t.nrfx_drv_state_uninitialized (c enumerator)": [[234, "c.nrfx_drv_state_t.NRFX_DRV_STATE_UNINITIALIZED"]], "nrfx_event_to_bitpos (c function)": [[234, "c.nrfx_event_to_bitpos"]], "nrfx_get_irq_number (c function)": [[234, "c.nrfx_get_irq_number"]], "nrfx_irq_handler_t (c type)": [[234, "c.nrfx_irq_handler_t"]], "nrfx_is_in_ram (c function)": [[234, "c.nrfx_is_in_ram"]], "nrfx_is_word_aligned (c function)": [[234, "c.nrfx_is_word_aligned"]], "nrfx_config_api_ver_major (c macro)": [[235, "c.NRFX_CONFIG_API_VER_MAJOR"]], "nrfx_config_api_ver_micro (c macro)": [[235, "c.NRFX_CONFIG_API_VER_MICRO"]], "nrfx_config_api_ver_minor (c macro)": [[235, "c.NRFX_CONFIG_API_VER_MINOR"]], "nrfy_critical_section_enter (c macro)": [[236, "c.NRFY_CRITICAL_SECTION_ENTER"]], "nrfy_critical_section_exit (c macro)": [[236, "c.NRFY_CRITICAL_SECTION_EXIT"]], "nrfy_event_to_int_bitmask (c macro)": [[236, "c.NRFY_EVENT_TO_INT_BITMASK"]], "nrfy_event_to_int_bitpos (c macro)": [[236, "c.NRFY_EVENT_TO_INT_BITPOS"]], "nrfy_int_bitpos_to_event (c macro)": [[236, "c.NRFY_INT_BITPOS_TO_EVENT"]], "nrfy_irq_disable (c macro)": [[236, "c.NRFY_IRQ_DISABLE"]], "nrfy_irq_enable (c macro)": [[236, "c.NRFY_IRQ_ENABLE"]], "nrfy_irq_is_enabled (c macro)": [[236, "c.NRFY_IRQ_IS_ENABLED"]], "nrfy_irq_is_pending (c macro)": [[236, "c.NRFY_IRQ_IS_PENDING"]], "nrfy_irq_pending_clear (c macro)": [[236, "c.NRFY_IRQ_PENDING_CLEAR"]], "nrfy_irq_pending_set (c macro)": [[236, "c.NRFY_IRQ_PENDING_SET"]], "nrfy_irq_priority_set (c macro)": [[236, "c.NRFY_IRQ_PRIORITY_SET"]], "nrfx_coredep_delay_us_loop_cycles (c macro)": [[237, "c.NRFX_COREDEP_DELAY_US_LOOP_CYCLES"]], "nrfx_delay_cpu_freq_mhz (c macro)": [[237, "c.NRFX_DELAY_CPU_FREQ_MHZ"]], "nrfx_delay_dwt_present (c macro)": [[237, "c.NRFX_DELAY_DWT_PRESENT"]], "nrfx_coredep_delay_us (c function)": [[237, "c.nrfx_coredep_delay_us"]], "nrfx_error_base_num (c macro)": [[238, "c.NRFX_ERROR_BASE_NUM"]], "nrfx_error_drivers_base_num (c macro)": [[238, "c.NRFX_ERROR_DRIVERS_BASE_NUM"]], "nrfx_err_t (c enum)": [[238, "c.nrfx_err_t"]], "nrfx_err_t.nrfx_error_already (c enumerator)": [[238, "c.nrfx_err_t.NRFX_ERROR_ALREADY"]], "nrfx_err_t.nrfx_error_already_initialized (c enumerator)": [[238, "c.nrfx_err_t.NRFX_ERROR_ALREADY_INITIALIZED"]], "nrfx_err_t.nrfx_error_busy (c enumerator)": [[238, "c.nrfx_err_t.NRFX_ERROR_BUSY"]], "nrfx_err_t.nrfx_error_drv_twi_err_anack (c enumerator)": [[238, "c.nrfx_err_t.NRFX_ERROR_DRV_TWI_ERR_ANACK"]], "nrfx_err_t.nrfx_error_drv_twi_err_dnack (c enumerator)": [[238, "c.nrfx_err_t.NRFX_ERROR_DRV_TWI_ERR_DNACK"]], "nrfx_err_t.nrfx_error_drv_twi_err_overrun (c enumerator)": [[238, "c.nrfx_err_t.NRFX_ERROR_DRV_TWI_ERR_OVERRUN"]], "nrfx_err_t.nrfx_error_forbidden (c enumerator)": [[238, "c.nrfx_err_t.NRFX_ERROR_FORBIDDEN"]], "nrfx_err_t.nrfx_error_internal (c enumerator)": [[238, "c.nrfx_err_t.NRFX_ERROR_INTERNAL"]], "nrfx_err_t.nrfx_error_invalid_addr (c enumerator)": [[238, "c.nrfx_err_t.NRFX_ERROR_INVALID_ADDR"]], "nrfx_err_t.nrfx_error_invalid_length (c enumerator)": [[238, "c.nrfx_err_t.NRFX_ERROR_INVALID_LENGTH"]], "nrfx_err_t.nrfx_error_invalid_param (c enumerator)": [[238, "c.nrfx_err_t.NRFX_ERROR_INVALID_PARAM"]], "nrfx_err_t.nrfx_error_invalid_state (c enumerator)": [[238, "c.nrfx_err_t.NRFX_ERROR_INVALID_STATE"]], "nrfx_err_t.nrfx_error_not_supported (c enumerator)": [[238, "c.nrfx_err_t.NRFX_ERROR_NOT_SUPPORTED"]], "nrfx_err_t.nrfx_error_no_mem (c enumerator)": [[238, "c.nrfx_err_t.NRFX_ERROR_NO_MEM"]], "nrfx_err_t.nrfx_error_null (c enumerator)": [[238, "c.nrfx_err_t.NRFX_ERROR_NULL"]], "nrfx_err_t.nrfx_error_timeout (c enumerator)": [[238, "c.nrfx_err_t.NRFX_ERROR_TIMEOUT"]], "nrfx_err_t.nrfx_success (c enumerator)": [[238, "c.nrfx_err_t.NRFX_SUCCESS"]], "nrfx_flag32_alloc (c function)": [[239, "c.nrfx_flag32_alloc"]], "nrfx_flag32_free (c function)": [[239, "c.nrfx_flag32_free"]], "nrfx_flag32_init (c function)": [[239, "c.nrfx_flag32_init"]], "nrfx_flag32_is_allocated (c function)": [[239, "c.nrfx_flag32_is_allocated"]], "nrfx_assert (c macro)": [[240, "c.NRFX_ASSERT"]], "nrfx_atomic_cas (c macro)": [[240, "c.NRFX_ATOMIC_CAS"]], "nrfx_atomic_fetch_add (c macro)": [[240, "c.NRFX_ATOMIC_FETCH_ADD"]], "nrfx_atomic_fetch_and (c macro)": [[240, "c.NRFX_ATOMIC_FETCH_AND"]], "nrfx_atomic_fetch_or (c macro)": [[240, "c.NRFX_ATOMIC_FETCH_OR"]], "nrfx_atomic_fetch_store (c macro)": [[240, "c.NRFX_ATOMIC_FETCH_STORE"]], "nrfx_atomic_fetch_sub (c macro)": [[240, "c.NRFX_ATOMIC_FETCH_SUB"]], "nrfx_atomic_fetch_xor (c macro)": [[240, "c.NRFX_ATOMIC_FETCH_XOR"]], "nrfx_clz (c macro)": [[240, "c.NRFX_CLZ"]], "nrfx_critical_section_enter (c macro)": [[240, "c.NRFX_CRITICAL_SECTION_ENTER"]], "nrfx_critical_section_exit (c macro)": [[240, "c.NRFX_CRITICAL_SECTION_EXIT"]], "nrfx_ctz (c macro)": [[240, "c.NRFX_CTZ"]], "nrfx_custom_error_codes (c macro)": [[240, "c.NRFX_CUSTOM_ERROR_CODES"]], "nrfx_delay_dwt_based (c macro)": [[240, "c.NRFX_DELAY_DWT_BASED"]], "nrfx_delay_us (c macro)": [[240, "c.NRFX_DELAY_US"]], "nrfx_dppi_channels_used (c macro)": [[240, "c.NRFX_DPPI_CHANNELS_USED"]], "nrfx_dppi_groups_used (c macro)": [[240, "c.NRFX_DPPI_GROUPS_USED"]], "nrfx_egus_used (c macro)": [[240, "c.NRFX_EGUS_USED"]], "nrfx_event_readback_enabled (c macro)": [[240, "c.NRFX_EVENT_READBACK_ENABLED"]], "nrfx_gpiote_channels_used (c macro)": [[240, "c.NRFX_GPIOTE_CHANNELS_USED"]], "nrfx_irq_disable (c macro)": [[240, "c.NRFX_IRQ_DISABLE"]], "nrfx_irq_enable (c macro)": [[240, "c.NRFX_IRQ_ENABLE"]], "nrfx_irq_is_enabled (c macro)": [[240, "c.NRFX_IRQ_IS_ENABLED"]], "nrfx_irq_is_pending (c macro)": [[240, "c.NRFX_IRQ_IS_PENDING"]], "nrfx_irq_pending_clear (c macro)": [[240, "c.NRFX_IRQ_PENDING_CLEAR"]], "nrfx_irq_pending_set (c macro)": [[240, "c.NRFX_IRQ_PENDING_SET"]], "nrfx_irq_priority_set (c macro)": [[240, "c.NRFX_IRQ_PRIORITY_SET"]], "nrfx_ppi_channels_used (c macro)": [[240, "c.NRFX_PPI_CHANNELS_USED"]], "nrfx_ppi_groups_used (c macro)": [[240, "c.NRFX_PPI_GROUPS_USED"]], "nrfx_static_assert (c macro)": [[240, "c.NRFX_STATIC_ASSERT"]], "nrfx_timers_used (c macro)": [[240, "c.NRFX_TIMERS_USED"]], "nrfy_cache_inv (c macro)": [[240, "c.NRFY_CACHE_INV"]], "nrfy_cache_wb (c macro)": [[240, "c.NRFY_CACHE_WB"]], "nrfy_cache_wbinv (c macro)": [[240, "c.NRFY_CACHE_WBINV"]], "nrfx_atomic_t (c macro)": [[240, "c.nrfx_atomic_t"]], "nrfx_gppi_channel_alloc (c function)": [[241, "c.nrfx_gppi_channel_alloc"]], "nrfx_gppi_channel_check (c function)": [[241, "c.nrfx_gppi_channel_check"]], "nrfx_gppi_channel_endpoints_clear (c function)": [[241, "c.nrfx_gppi_channel_endpoints_clear"]], "nrfx_gppi_channel_endpoints_setup (c function)": [[241, "c.nrfx_gppi_channel_endpoints_setup"]], "nrfx_gppi_channel_free (c function)": [[241, "c.nrfx_gppi_channel_free"]], "nrfx_gppi_channel_group_t (c enum)": [[241, "c.nrfx_gppi_channel_group_t"]], "nrfx_gppi_channel_group_t.nrfx_gppi_channel_group0 (c enumerator)": [[241, "c.nrfx_gppi_channel_group_t.NRFX_GPPI_CHANNEL_GROUP0"]], "nrfx_gppi_channel_group_t.nrfx_gppi_channel_group1 (c enumerator)": [[241, "c.nrfx_gppi_channel_group_t.NRFX_GPPI_CHANNEL_GROUP1"]], "nrfx_gppi_channel_group_t.nrfx_gppi_channel_group2 (c enumerator)": [[241, "c.nrfx_gppi_channel_group_t.NRFX_GPPI_CHANNEL_GROUP2"]], "nrfx_gppi_channel_group_t.nrfx_gppi_channel_group3 (c enumerator)": [[241, "c.nrfx_gppi_channel_group_t.NRFX_GPPI_CHANNEL_GROUP3"]], "nrfx_gppi_channel_group_t.nrfx_gppi_channel_group4 (c enumerator)": [[241, "c.nrfx_gppi_channel_group_t.NRFX_GPPI_CHANNEL_GROUP4"]], "nrfx_gppi_channel_group_t.nrfx_gppi_channel_group5 (c enumerator)": [[241, "c.nrfx_gppi_channel_group_t.NRFX_GPPI_CHANNEL_GROUP5"]], "nrfx_gppi_channels_disable (c function)": [[241, "c.nrfx_gppi_channels_disable"]], "nrfx_gppi_channels_disable_all (c function)": [[241, "c.nrfx_gppi_channels_disable_all"]], "nrfx_gppi_channels_enable (c function)": [[241, "c.nrfx_gppi_channels_enable"]], "nrfx_gppi_channels_group_set (c function)": [[241, "c.nrfx_gppi_channels_group_set"]], "nrfx_gppi_channels_include_in_group (c function)": [[241, "c.nrfx_gppi_channels_include_in_group"]], "nrfx_gppi_channels_remove_from_group (c function)": [[241, "c.nrfx_gppi_channels_remove_from_group"]], "nrfx_gppi_event_endpoint_clear (c function)": [[241, "c.nrfx_gppi_event_endpoint_clear"]], "nrfx_gppi_event_endpoint_setup (c function)": [[241, "c.nrfx_gppi_event_endpoint_setup"]], "nrfx_gppi_fork_endpoint_clear (c function)": [[241, "c.nrfx_gppi_fork_endpoint_clear"]], "nrfx_gppi_fork_endpoint_setup (c function)": [[241, "c.nrfx_gppi_fork_endpoint_setup"]], "nrfx_gppi_group_alloc (c function)": [[241, "c.nrfx_gppi_group_alloc"]], "nrfx_gppi_group_clear (c function)": [[241, "c.nrfx_gppi_group_clear"]], "nrfx_gppi_group_disable (c function)": [[241, "c.nrfx_gppi_group_disable"]], "nrfx_gppi_group_disable_task_get (c function)": [[241, "c.nrfx_gppi_group_disable_task_get"]], "nrfx_gppi_group_enable (c function)": [[241, "c.nrfx_gppi_group_enable"]], "nrfx_gppi_group_enable_task_get (c function)": [[241, "c.nrfx_gppi_group_enable_task_get"]], "nrfx_gppi_group_free (c function)": [[241, "c.nrfx_gppi_group_free"]], "nrfx_gppi_task_address_get (c function)": [[241, "c.nrfx_gppi_task_address_get"]], "nrfx_gppi_task_endpoint_clear (c function)": [[241, "c.nrfx_gppi_task_endpoint_clear"]], "nrfx_gppi_task_endpoint_setup (c function)": [[241, "c.nrfx_gppi_task_endpoint_setup"]], "nrfx_gppi_task_t (c enum)": [[241, "c.nrfx_gppi_task_t"]], "nrfx_gppi_task_t.nrfx_gppi_task_chg0_dis (c enumerator)": [[241, "c.nrfx_gppi_task_t.NRFX_GPPI_TASK_CHG0_DIS"]], "nrfx_gppi_task_t.nrfx_gppi_task_chg0_en (c enumerator)": [[241, "c.nrfx_gppi_task_t.NRFX_GPPI_TASK_CHG0_EN"]], "nrfx_gppi_task_t.nrfx_gppi_task_chg1_dis (c enumerator)": [[241, "c.nrfx_gppi_task_t.NRFX_GPPI_TASK_CHG1_DIS"]], "nrfx_gppi_task_t.nrfx_gppi_task_chg1_en (c enumerator)": [[241, "c.nrfx_gppi_task_t.NRFX_GPPI_TASK_CHG1_EN"]], "nrfx_gppi_task_t.nrfx_gppi_task_chg2_dis (c enumerator)": [[241, "c.nrfx_gppi_task_t.NRFX_GPPI_TASK_CHG2_DIS"]], "nrfx_gppi_task_t.nrfx_gppi_task_chg2_en (c enumerator)": [[241, "c.nrfx_gppi_task_t.NRFX_GPPI_TASK_CHG2_EN"]], "nrfx_gppi_task_t.nrfx_gppi_task_chg3_dis (c enumerator)": [[241, "c.nrfx_gppi_task_t.NRFX_GPPI_TASK_CHG3_DIS"]], "nrfx_gppi_task_t.nrfx_gppi_task_chg3_en (c enumerator)": [[241, "c.nrfx_gppi_task_t.NRFX_GPPI_TASK_CHG3_EN"]], "nrfx_gppi_task_t.nrfx_gppi_task_chg4_dis (c enumerator)": [[241, "c.nrfx_gppi_task_t.NRFX_GPPI_TASK_CHG4_DIS"]], "nrfx_gppi_task_t.nrfx_gppi_task_chg4_en (c enumerator)": [[241, "c.nrfx_gppi_task_t.NRFX_GPPI_TASK_CHG4_EN"]], "nrfx_gppi_task_t.nrfx_gppi_task_chg5_dis (c enumerator)": [[241, "c.nrfx_gppi_task_t.NRFX_GPPI_TASK_CHG5_DIS"]], "nrfx_gppi_task_t.nrfx_gppi_task_chg5_en (c enumerator)": [[241, "c.nrfx_gppi_task_t.NRFX_GPPI_TASK_CHG5_EN"]], "nrfx_gppi_task_trigger (c function)": [[241, "c.nrfx_gppi_task_trigger"]], "nrf_apb_interconnect_by_idx_global_get (c function)": [[243, "c.nrf_apb_interconnect_by_idx_global_get"]], "nrfx_interconnect_apb_domain_get (c function)": [[243, "c.nrfx_interconnect_apb_domain_get"]], "nrfx_interconnect_apb_get (c function)": [[243, "c.nrfx_interconnect_apb_get"]], "nrfx_interconnect_apb_global_num_of_get (c function)": [[243, "c.nrfx_interconnect_apb_global_num_of_get"]], "nrfx_interconnect_apb_main_get (c function)": [[243, "c.nrfx_interconnect_apb_main_get"]], "nrfx_interconnect_apb_t (c struct)": [[243, "c.nrfx_interconnect_apb_t"]], "nrfx_interconnect_apb_t.dppi_pub_channels_mask (c var)": [[243, "c.nrfx_interconnect_apb_t.dppi_pub_channels_mask"]], "nrfx_interconnect_apb_t.dppi_sub_channels_mask (c var)": [[243, "c.nrfx_interconnect_apb_t.dppi_sub_channels_mask"]], "nrfx_interconnect_apb_t.p_dppi (c var)": [[243, "c.nrfx_interconnect_apb_t.p_dppi"]], "nrfx_interconnect_apb_t.p_dppi_channels (c var)": [[243, "c.nrfx_interconnect_apb_t.p_dppi_channels"]], "nrfx_interconnect_apb_t.p_ppib (c var)": [[243, "c.nrfx_interconnect_apb_t.p_ppib"]], "nrfx_interconnect_apb_t.size (c var)": [[243, "c.nrfx_interconnect_apb_t.size"]], "nrfx_interconnect_ipct_domain_get (c function)": [[244, "c.nrfx_interconnect_ipct_domain_get"]], "nrfx_interconnect_ipct_get (c function)": [[244, "c.nrfx_interconnect_ipct_get"]], "nrfx_interconnect_ipct_global_by_idx_get (c function)": [[244, "c.nrfx_interconnect_ipct_global_by_idx_get"]], "nrfx_interconnect_ipct_global_num_of_get (c function)": [[244, "c.nrfx_interconnect_ipct_global_num_of_get"]], "nrfx_interconnect_ipct_t (c struct)": [[244, "c.nrfx_interconnect_ipct_t"]], "nrfx_interconnect_ipct_t.ipct_pub_channels_mask (c var)": [[244, "c.nrfx_interconnect_ipct_t.ipct_pub_channels_mask"]], "nrfx_interconnect_ipct_t.ipct_sub_channels_mask (c var)": [[244, "c.nrfx_interconnect_ipct_t.ipct_sub_channels_mask"]], "nrfx_interconnect_ipct_t.p_ipct (c var)": [[244, "c.nrfx_interconnect_ipct_t.p_ipct"]], "nrfx_interconnect_ipct_t.p_ipct_channels (c var)": [[244, "c.nrfx_interconnect_ipct_t.p_ipct_channels"]], "nrfx_log_debug (c macro)": [[245, "c.NRFX_LOG_DEBUG"]], "nrfx_log_error (c macro)": [[245, "c.NRFX_LOG_ERROR"]], "nrfx_log_error_string_get (c macro)": [[245, "c.NRFX_LOG_ERROR_STRING_GET"]], "nrfx_log_hexdump_debug (c macro)": [[245, "c.NRFX_LOG_HEXDUMP_DEBUG"]], "nrfx_log_hexdump_error (c macro)": [[245, "c.NRFX_LOG_HEXDUMP_ERROR"]], "nrfx_log_hexdump_info (c macro)": [[245, "c.NRFX_LOG_HEXDUMP_INFO"]], "nrfx_log_hexdump_warning (c macro)": [[245, "c.NRFX_LOG_HEXDUMP_WARNING"]], "nrfx_log_info (c macro)": [[245, "c.NRFX_LOG_INFO"]], "nrfx_log_warning (c macro)": [[245, "c.NRFX_LOG_WARNING"]], "nrfx_prs_acquire (c function)": [[246, "c.nrfx_prs_acquire"]], "nrfx_prs_release (c function)": [[246, "c.nrfx_prs_release"]], "nrfx_ram_ctrl_power_enable_set (c function)": [[247, "c.nrfx_ram_ctrl_power_enable_set"]], "nrfx_ram_ctrl_retention_enable_set (c function)": [[247, "c.nrfx_ram_ctrl_retention_enable_set"]], "nrfx_ram_ctrl_section_power_mask_enable_set (c function)": [[247, "c.nrfx_ram_ctrl_section_power_mask_enable_set"]], "nrfx_ram_ctrl_section_retention_mask_enable_set (c function)": [[247, "c.nrfx_ram_ctrl_section_retention_mask_enable_set"]], "nrfx_reset_reason_has_ctrlap (c macro)": [[248, "c.NRFX_RESET_REASON_HAS_CTRLAP"]], "nrfx_reset_reason_has_ctrlaphard (c macro)": [[248, "c.NRFX_RESET_REASON_HAS_CTRLAPHARD"]], "nrfx_reset_reason_has_ctrlappin (c macro)": [[248, "c.NRFX_RESET_REASON_HAS_CTRLAPPIN"]], "nrfx_reset_reason_has_ctrlapsoft (c macro)": [[248, "c.NRFX_RESET_REASON_HAS_CTRLAPSOFT"]], "nrfx_reset_reason_has_grtc (c macro)": [[248, "c.NRFX_RESET_REASON_HAS_GRTC"]], "nrfx_reset_reason_has_lpcomp (c macro)": [[248, "c.NRFX_RESET_REASON_HAS_LPCOMP"]], "nrfx_reset_reason_has_network (c macro)": [[248, "c.NRFX_RESET_REASON_HAS_NETWORK"]], "nrfx_reset_reason_has_nfc (c macro)": [[248, "c.NRFX_RESET_REASON_HAS_NFC"]], "nrfx_reset_reason_has_sectamper (c macro)": [[248, "c.NRFX_RESET_REASON_HAS_SECTAMPER"]], "nrfx_reset_reason_has_vbus (c macro)": [[248, "c.NRFX_RESET_REASON_HAS_VBUS"]], "nrfx_reset_reason_clear (c function)": [[248, "c.nrfx_reset_reason_clear"]], "nrfx_reset_reason_get (c function)": [[248, "c.nrfx_reset_reason_get"]], "nrfx_reset_reason_mask_t (c enum)": [[248, "c.nrfx_reset_reason_mask_t"]], "nrfx_reset_reason_mask_t.nrfx_resetreas_sreq_mask (c enumerator)": [[248, "c.nrfx_reset_reason_mask_t.NRFX_RESETREAS_SREQ_MASK"]], "nrfx_reset_reason_mask_t.nrfx_reset_reason_ctrlaphard_mask (c enumerator)": [[248, "c.nrfx_reset_reason_mask_t.NRFX_RESET_REASON_CTRLAPHARD_MASK"]], "nrfx_reset_reason_mask_t.nrfx_reset_reason_ctrlappin_mask (c enumerator)": [[248, "c.nrfx_reset_reason_mask_t.NRFX_RESET_REASON_CTRLAPPIN_MASK"]], "nrfx_reset_reason_mask_t.nrfx_reset_reason_ctrlap_mask (c enumerator)": [[248, "c.nrfx_reset_reason_mask_t.NRFX_RESET_REASON_CTRLAP_MASK"]], "nrfx_reset_reason_mask_t.nrfx_reset_reason_dif_mask (c enumerator)": [[248, "c.nrfx_reset_reason_mask_t.NRFX_RESET_REASON_DIF_MASK"]], "nrfx_reset_reason_mask_t.nrfx_reset_reason_dog0_mask (c enumerator)": [[248, "c.nrfx_reset_reason_mask_t.NRFX_RESET_REASON_DOG0_MASK"]], "nrfx_reset_reason_mask_t.nrfx_reset_reason_dog1_mask (c enumerator)": [[248, "c.nrfx_reset_reason_mask_t.NRFX_RESET_REASON_DOG1_MASK"]], "nrfx_reset_reason_mask_t.nrfx_reset_reason_dog_mask (c enumerator)": [[248, "c.nrfx_reset_reason_mask_t.NRFX_RESET_REASON_DOG_MASK"]], "nrfx_reset_reason_mask_t.nrfx_reset_reason_grtc_mask (c enumerator)": [[248, "c.nrfx_reset_reason_mask_t.NRFX_RESET_REASON_GRTC_MASK"]], "nrfx_reset_reason_mask_t.nrfx_reset_reason_lctrlap_mask (c enumerator)": [[248, "c.nrfx_reset_reason_mask_t.NRFX_RESET_REASON_LCTRLAP_MASK"]], "nrfx_reset_reason_mask_t.nrfx_reset_reason_ldog_mask (c enumerator)": [[248, "c.nrfx_reset_reason_mask_t.NRFX_RESET_REASON_LDOG_MASK"]], "nrfx_reset_reason_mask_t.nrfx_reset_reason_llockup_mask (c enumerator)": [[248, "c.nrfx_reset_reason_mask_t.NRFX_RESET_REASON_LLOCKUP_MASK"]], "nrfx_reset_reason_mask_t.nrfx_reset_reason_lockup_mask (c enumerator)": [[248, "c.nrfx_reset_reason_mask_t.NRFX_RESET_REASON_LOCKUP_MASK"]], "nrfx_reset_reason_mask_t.nrfx_reset_reason_lpcomp_mask (c enumerator)": [[248, "c.nrfx_reset_reason_mask_t.NRFX_RESET_REASON_LPCOMP_MASK"]], "nrfx_reset_reason_mask_t.nrfx_reset_reason_lsreq_mask (c enumerator)": [[248, "c.nrfx_reset_reason_mask_t.NRFX_RESET_REASON_LSREQ_MASK"]], "nrfx_reset_reason_mask_t.nrfx_reset_reason_mforceoff_mask (c enumerator)": [[248, "c.nrfx_reset_reason_mask_t.NRFX_RESET_REASON_MFORCEOFF_MASK"]], "nrfx_reset_reason_mask_t.nrfx_reset_reason_nfc_mask (c enumerator)": [[248, "c.nrfx_reset_reason_mask_t.NRFX_RESET_REASON_NFC_MASK"]], "nrfx_reset_reason_mask_t.nrfx_reset_reason_off_mask (c enumerator)": [[248, "c.nrfx_reset_reason_mask_t.NRFX_RESET_REASON_OFF_MASK"]], "nrfx_reset_reason_mask_t.nrfx_reset_reason_resetpin_mask (c enumerator)": [[248, "c.nrfx_reset_reason_mask_t.NRFX_RESET_REASON_RESETPIN_MASK"]], "nrfx_reset_reason_mask_t.nrfx_reset_reason_sectamper_mask (c enumerator)": [[248, "c.nrfx_reset_reason_mask_t.NRFX_RESET_REASON_SECTAMPER_MASK"]], "nrfx_reset_reason_mask_t.nrfx_reset_reason_sreq_mask (c enumerator)": [[248, "c.nrfx_reset_reason_mask_t.NRFX_RESET_REASON_SREQ_MASK"]], "nrfx_reset_reason_mask_t.nrfx_reset_reason_vbus_mask (c enumerator)": [[248, "c.nrfx_reset_reason_mask_t.NRFX_RESET_REASON_VBUS_MASK"]], "nrfx_vdma_periph_job (c macro)": [[249, "c.NRFX_VDMA_PERIPH_JOB"]], "nrf_vdma_buffer_size_mask (c macro)": [[249, "c.NRF_VDMA_BUFFER_SIZE_MASK"]], "nrf_vdma_job_element (c macro)": [[249, "c.NRF_VDMA_JOB_ELEMENT"]], "nrf_vdma_reduced_job_init_element (c macro)": [[249, "c.NRF_VDMA_REDUCED_JOB_INIT_ELEMENT"]], "nrf_vdma_reduced_job_size (c macro)": [[249, "c.NRF_VDMA_REDUCED_JOB_SIZE"]], "nrf_vdma_attributes_t (c enum)": [[249, "c.nrf_vdma_attributes_t"]], "nrf_vdma_attributes_t.nrf_vdma_attribute_buffer_fill (c enumerator)": [[249, "c.nrf_vdma_attributes_t.NRF_VDMA_ATTRIBUTE_BUFFER_FILL"]], "nrf_vdma_attributes_t.nrf_vdma_attribute_byte_swap (c enumerator)": [[249, "c.nrf_vdma_attributes_t.NRF_VDMA_ATTRIBUTE_BYTE_SWAP"]], "nrf_vdma_attributes_t.nrf_vdma_attribute_crc (c enumerator)": [[249, "c.nrf_vdma_attributes_t.NRF_VDMA_ATTRIBUTE_CRC"]], "nrf_vdma_attributes_t.nrf_vdma_attribute_fixed_attr (c enumerator)": [[249, "c.nrf_vdma_attributes_t.NRF_VDMA_ATTRIBUTE_FIXED_ATTR"]], "nrf_vdma_attributes_t.nrf_vdma_attribute_job_list (c enumerator)": [[249, "c.nrf_vdma_attributes_t.NRF_VDMA_ATTRIBUTE_JOB_LIST"]], "nrf_vdma_attributes_t.nrf_vdma_attribute_plain_data (c enumerator)": [[249, "c.nrf_vdma_attributes_t.NRF_VDMA_ATTRIBUTE_PLAIN_DATA"]], "nrf_vdma_attributes_t.nrf_vdma_attribute_plain_data_buf_write (c enumerator)": [[249, "c.nrf_vdma_attributes_t.NRF_VDMA_ATTRIBUTE_PLAIN_DATA_BUF_WRITE"]], "nrf_vdma_attributes_t.nrf_vdma_attribute_static_addr (c enumerator)": [[249, "c.nrf_vdma_attributes_t.NRF_VDMA_ATTRIBUTE_STATIC_ADDR"]], "nrf_vdma_ext_attribute_t (c enum)": [[249, "c.nrf_vdma_ext_attribute_t"]], "nrf_vdma_ext_attribute_t.nrf_vdma_ext_attribute_event_enable (c enumerator)": [[249, "c.nrf_vdma_ext_attribute_t.NRF_VDMA_EXT_ATTRIBUTE_EVENT_ENABLE"]], "nrf_vdma_ext_attribute_t.nrf_vdma_ext_attribute_peripheral_mode (c enumerator)": [[249, "c.nrf_vdma_ext_attribute_t.NRF_VDMA_EXT_ATTRIBUTE_PERIPHERAL_MODE"]], "nrf_vdma_job_buffer_get (c function)": [[249, "c.nrf_vdma_job_buffer_get"]], "nrf_vdma_job_fill (c function)": [[249, "c.nrf_vdma_job_fill"]], "nrf_vdma_job_link (c function)": [[249, "c.nrf_vdma_job_link"]], "nrf_vdma_job_reduced_fill (c function)": [[249, "c.nrf_vdma_job_reduced_fill"]], "nrf_vdma_job_reduced_init (c function)": [[249, "c.nrf_vdma_job_reduced_init"]], "nrf_vdma_job_reduced_t (c type)": [[249, "c.nrf_vdma_job_reduced_t"]], "nrf_vdma_job_size_get (c function)": [[249, "c.nrf_vdma_job_size_get"]], "nrf_vdma_job_t (c struct)": [[249, "c.nrf_vdma_job_t"]], "nrf_vdma_job_t.attributes (c var)": [[249, "c.nrf_vdma_job_t.attributes"]], "nrf_vdma_job_t.p_buffer (c var)": [[249, "c.nrf_vdma_job_t.p_buffer"]], "nrf_vdma_job_t.size (c var)": [[249, "c.nrf_vdma_job_t.size"]], "nrf_vdma_job_terminate (c function)": [[249, "c.nrf_vdma_job_terminate"]]}})